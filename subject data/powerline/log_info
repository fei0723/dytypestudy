==================
a4a1c83;Nikolai Aleksandrovich Pavlov;2017-11-25 00:34:15 +0300;Merge pull request #1860 from bewing/wsl_battery
Check for battery percentage if no charge/energy
==
==================
6be991c;Brandon Ewing;2017-11-24 15:03:30 -0600;Check for battery percentage if no charge/energy
Windows Subsystem for Linux abstracts the batteries in a laptop
into a single battery, and only states the percent charge via
/sys/power_supply/battery/capacity.  If dbus is unavailable,
and no charge/energy readings are available for any power supply,
search for the first power supply that has a capacity file, and use it
(and its state) as the battery status.

Tested on a Surface Book 2 running Windows 10 with  Windows
Subsytem for Linux Ubuntu 16.04

==

powerline/segments/common/bat.py
==================
5198b50;Nikolai Aleksandrovich Pavlov;2017-10-27 23:29:56 +0300;Merge pull request #1851 from pmacosta/develop
Added Vim segment plugin for the Asynchronous Linter Engine (ALE)
==
==================
421a71e;Pablo Acosta-Serafini;2017-10-27 08:44:47 -0400;Brought back modeline and added spaces around plus signs

==

powerline/segments/vim/plugin/ale.py
==================
67683ec;Pablo Acosta-Serafini;2017-10-24 04:40:03 -0400;Introduced requested chanages

==

powerline/segments/vim/plugin/ale.py
==================
c8f361c;Pablo Acosta-Serafini;2017-10-23 12:45:02 -0400;Added Vim segment plugin for the Asynchronous Linter Engine (ALE). This segment has the same functionality and interface as the Syntastic Vim segment plugin, and the code is largely adapted from it. Documentation stub is also included

==

docs/source/configuration/segments/vim.rst
powerline/segments/vim/plugin/ale.py
==================
119c709;Nikolai Aleksandrovich Pavlov;2017-10-15 14:30:55 +0300;Merge pull request #1849 from hede/patch-1
Fixes typo in documentation
==
==================
d7cbeb9;hede;2017-10-15 13:59:49 +0300;Typo fix
In the first paragraph: s/Presense/Presence of Python support in vim...
==

docs/source/usage.rst
==================
9bebc2f;Nikolai Aleksandrovich Pavlov;2017-09-02 22:39:49 +0300;Merge pull request #1828 from powerline/ZyX-I-patch-1
Fix data type in branch segment documentation
==
==================
5adb7d1;Nikolai Aleksandrovich Pavlov;2017-09-02 22:39:28 +0300;Fix data type in branch segment documentation
Closes #1827
==

powerline/segments/common/vcs.py
==================
5a24ece;Nikolai Aleksandrovich Pavlov;2017-08-22 12:04:46 +0300;Merge pull request #1823 from ZyX-I/ZyX-I-patch-1
Do not use negative indexes
==
==================
6b3c71b;Nikolai Aleksandrovich Pavlov;2017-08-22 10:30:49 +0300;Do not use negative indexes
Ref #1821.
==

powerline/bindings/bash/powerline.sh
==================
bc1713d;Nikolai Aleksandrovich Pavlov;2017-08-09 20:03:05 +0300;Merge pull request #1818 from arslan2012/add_elapsed_spotify_osascript
added elapsed time to spotify applescript player segment
==
==================
01f2a3a;Arslan Ablikim;2017-08-09 21:30:21 +0800;added a trailing comma

==

powerline/segments/common/players.py
==================
2a9a0a8;Arslan Ablikim;2017-08-08 13:35:03 +0800;added elapsed time to spotify applescript player segment

==

powerline/segments/common/players.py
==================
2fe9282;Nikolai Aleksandrovich Pavlov;2017-08-08 07:41:59 +0300;Merge pull request #1816 from arslan2012/fix_apple_script
fix spotify applescript track length
==
==================
146cf89;Arslan Ablikim;2017-08-08 12:33:25 +0800;fix spotify track length

==

powerline/segments/common/players.py
==================
5d6aa0e;Nikolai Aleksandrovich Pavlov;2017-08-08 07:15:43 +0300;Merge pull request #1817 from arslan2012/fix_mac_to_use_apple_script
change spotify to use applescript on OS X
==
==================
5d8739b;Arslan Ablikim;2017-08-08 12:08:37 +0800;fix spotify track length

==

powerline/segments/common/players.py
==================
1b3456a;Arslan Ablikim;2017-08-08 11:45:46 +0800;fix spotify to use apple script

==

powerline/segments/common/players.py
==================
d0d0644;Nikolai Aleksandrovich Pavlov;2017-08-05 00:47:20 +0300;Merge pull request #1813 from chester755/develop
Adding elapsed time to dbus players
==
==================
5a53cf9;chester755;2017-08-04 16:26:38 -0500;Add elapsed time to Dbus players

==

powerline/segments/common/players.py
==================
8d85c4f;chester755;2017-08-04 16:08:59 -0500;Add elapsed time to dbus players.

==

powerline/segments/common/players.py
==================
9bff8a5;chester755;2017-08-04 13:49:26 -0500;Adding elapsed time to the dbus player.

==

powerline/segments/common/players.py
==================
e627b29;Foo;2017-08-02 15:06:58 +0300;Merge branch 'pr-1811' into develop

==
==================
e3ee79d;Foo;2017-08-02 15:05:35 +0300;Some style fixes

==

powerline/segments/common/players.py
==================
544556f;Jesús Rafael Sánchez;2017-08-02 07:54:53 -0400;Making code cleanup and enhancements suggested by @ZyX-I

==

powerline/segments/common/players.py
==================
8dd1188;Jesús Rafael Sánchez;2017-08-01 08:10:09 -0400;Removing some unnecesary lines

==

powerline/segments/common/players.py
==================
324432b;Jesús Rafael Sánchez;2017-07-31 17:19:57 -0400;Avoiding more than 1 colon in strings for file name or song title, this may break the player indicator

==

powerline/segments/common/players.py
==================
0595c89;Jesús Rafael Sánchez;2017-07-31 07:26:56 -0400;Making code changes requested by @ZyX-I a day ago

==

powerline/segments/common/players.py
==================
b82769a;Jesús Rafael Sánchez;2017-07-30 03:13:21 -0400;Fixing some metadata and time calculation for mocp player

==

powerline/segments/common/players.py
==================
8a53108;Jesús Rafael Sánchez;2017-07-30 01:26:13 -0400;Adding information filtering conditional on list comprehension

==

powerline/segments/common/players.py
==================
338470c;Jesús Rafael Sánchez;2017-07-30 01:06:52 -0400;Adding Music On Console (mocp) support, requires >= 2.3.0 version

==

powerline/segments/common/players.py
==================
f35c401;Foo;2017-07-13 23:01:22 +0300;Merge branch 'pr-1803' into develop

==
==================
29ff2b9;Andreas Schneider;2017-07-13 15:54:16 +0200;Avoid a strlen() call

==

client/powerline.c
==================
924bbbe;Andreas Schneider;2017-07-13 15:49:36 +0200;Make inline function also static
After compiling with GCC 7.1.0 it otherwise fails linking for some
reason, complaining about that non-static inline function being not
found.

==

client/powerline.c
==================
73244eb;Andreas Schneider;2017-07-13 15:53:09 +0200;Make sure any positive integer fits into the buffer
Avoids GCC 7.1.0 -Wformat-truncation.

==

client/powerline.c
==================
8d577b5;Nikolai Aleksandrovich Pavlov;2017-07-02 07:37:39 +0300;Merge pull request #1794 from vsimonian/1793-ref-correct-fonts-folder
Replace ~/.fonts with ~/.local/share/fonts in help
==
==================
34dc7f9;Vartan Christopher Simonian;2017-07-01 20:15:25 -0700;Replace ~/.fonts with ~/.local/share/fonts in help
`~/.fonts/` has been deprecated in favour of `~/.local/share/fonts/`.

References:
- https://github.com/behdad/fontconfig/blob/master/fonts.conf.in#L29
- https://lists.freedesktop.org/archives/fontconfig/2014-July/005270.html

Fixes #1793

==

docs/source/installation/linux.rst
==================
9cd66c0;Nikolai Aleksandrovich Pavlov;2017-07-01 13:58:02 +0300;Merge pull request #1792 from ZyX-I/argparse-dep
Specify argparse dependency
==
==================
234091c;Foo;2017-07-01 02:57:53 +0300;Specify argparse dependency
Fixes #1791
==

setup.py
==================
517f38c;Nikolai Aleksandrovich Pavlov;2017-06-08 04:06:53 +0300;Merge pull request #1786 from WhitleyStriber/patch-1
Spelling Fix
==
==================
e991b42;Whitley;2017-06-07 20:57:01 -0400;Spelling Fix

==

docs/source/installation/linux.rst
==================
90032f8;Nikolai Aleksandrovich Pavlov;2017-06-03 23:36:29 +0300;Merge pull request #1783 from ZyX-I/check-bash-has-pipestatus
Check that bash has (no) $PIPESTATUS support before using it
==
==================
4dc590b;Nikolai Aleksandrovich Pavlov;2017-06-03 23:15:48 +0300;Merge pull request #1785 from martingabelmann/fix-1784
add awesome4+ support, fixes #1784
==
==================
7189f35;Martin Gabelmann;2017-06-03 21:25:44 +0200;add awesome4+ support, fixes #1784

==

docs/source/usage/wm-widgets.rst
powerline/bindings/awesome/powerline.lua
==================
d3e5d99;Foo;2017-06-02 21:23:03 +0300;Do not spawn jobs
With previous variant of code first call has spawned a job which was perfectly 
reproducibly visible in prompt at bash startup. In subsequent prompts job number 
segment disappeared because result was cached, but it still was not good.
==

powerline/bindings/bash/powerline.sh
==================
3c49ed1;Foo;2017-06-02 21:12:05 +0300;Check that bash has (no) $PIPESTATUS support before using it
Ref #1782

==

powerline/bindings/bash/powerline.sh
==================
3df98fc;Nikolai Aleksandrovich Pavlov;2017-05-21 16:30:41 +0300;Merge pull request #1779 from ZyX-I/vterm-standard-tmpdir-fixes
Add some fixes for vterm tests
==
==================
28faebe;Foo;2017-05-21 16:09:54 +0300;Do not provide make_test_root unneeded argument

==

tests/shlib/vterm.sh
tests/test_in_vterm/test_tmux.sh
tests/test_in_vterm/test_vim.sh
==================
8e94773;Foo;2017-05-21 16:01:22 +0300;Fix test_vim.sh: should use standard directory as well

==

tests/test_in_vterm/test_vim.sh
==================
36dba11;Nikolai Aleksandrovich Pavlov;2017-05-21 03:06:26 +0300;Merge pull request #1778 from ZyX-I/vterm-standard-tmpdir
Switch vterm tests to use “standard” temporary directory in tests/tmp
==
==================
1151449;Foo;2017-05-21 02:33:21 +0300;Switch vterm tests to use “standard” temporary directory in tests/tmp

==

tests/modules/lib/terminal.py
tests/shlib/vterm.sh
tests/test_in_vterm/test_tmux.py
tests/test_in_vterm/test_tmux.sh
tests/test_in_vterm/test_vim.py
tests/test_vim/test.sh
==================
abb0cab;Nikolai Aleksandrovich Pavlov;2017-05-18 00:58:45 +0300;Merge pull request #1776 from phatblat/ben/fish-readme
✏️ Add fish to list of supported apps on readme
==
==================
ef3b547;Ben Chatelain;2017-05-17 15:54:54 -0600;✏️ Add fish to list of supported apps on readme

==

README.rst
==================
b5fe29e;Nikolai Aleksandrovich Pavlov;2017-05-16 20:07:58 +0300;Merge pull request #1775 from ZyX-I/bash-pipestatus
Add support for pipestatus in bash
==
==================
b0d3118;Foo;2017-05-16 19:20:48 +0300;Make bash tests check for pipestatus

==

tests/test_shells/inputs/bash
tests/test_shells/outputs/bash.daemon.ok
tests/test_shells/outputs/bash.nodaemon.ok
==================
30acc6e;Foo;2017-05-16 18:52:29 +0300;Make default_leftonly theme use last_pipe_status

==

powerline/config_files/themes/shell/default_leftonly.json
tests/test_python/test_provided_config_files.py
==================
b1e2086;Foo;2017-05-16 18:49:28 +0300;Add some more troubleshooting information

==

docs/source/troubleshooting.rst
==================
443679d;Foo;2017-05-16 18:49:10 +0300;Make last_pipe_status fallback to last_exit_code

==

powerline/segments/shell.py
tests/test_python/test_segments.py
==================
de899c5;Foo;2017-05-16 18:48:36 +0300;Export pipe status in bash bindings

==

powerline/bindings/bash/powerline.sh
tests/test_python/test_cmdline.py
==================
be58793;Nikolai Aleksandrovich Pavlov;2017-05-11 23:04:42 +0300;Merge pull request #1770 from ZyX-I/fix-i3bar-i3ipc
Abstract away subscription to workspace event
==
==================
8150d38;Foo;2017-05-11 23:03:48 +0300;Abstract away subscription to workspace event

==

powerline/bindings/i3/powerline-i3.py
powerline/bindings/wm/__init__.py
==================
da3a0fa;Nikolai Aleksandrovich Pavlov;2017-05-11 22:45:00 +0300;Merge pull request #1769 from ZyX-I/fix-i3-bindings
Fix i3 bar bindings
==
==================
1e6414d;Foo;2017-05-11 21:09:10 +0300;Fix i3 bar bindings
Specifically:

- Do not log exceptions to the same location data is output.
- Fix format, i3bar is no longer using “pseudo-JSON”, also not sure whether it 
  ever used format `[[right list], [left list]]`, but it definitely does not 
  now.
- i3bgbar branch is no longer available.
- Yet i3wm supports background color, just with the different key (`background` 
  vs `background_color`).
==

docs/source/usage/wm-widgets.rst
powerline/bindings/i3/powerline-i3.py
powerline/renderers/i3bar.py
==================
f6bf7b4;Foo;2017-05-08 19:47:15 +0300;Merge branch 'release-2.6' into develop

==
==================
d23c17b;Foo;2017-05-08 19:47:15 +0300;Update base version

==

setup.py
==================
c9824da;Nikolai Aleksandrovich Pavlov;2017-05-06 21:44:36 +0300;Merge pull request #1764 from ZyX-I/tmux-workaround
Break #… sequences inside `#()` in tmux status options
==
==================
37cd44a;Foo;2017-05-06 00:33:01 +0300;Break #… sequences inside `#()` in tmux status options

==

powerline/bindings/tmux/powerline-base.conf
powerline/bindings/tmux/powerline_tmux_1.7_plus.conf
powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
powerline/bindings/tmux/powerline_tmux_2.1_plus.conf
==================
5e46d3b;Nikolai Aleksandrovich Pavlov;2017-05-01 06:19:53 +0300;Merge pull request #1762 from ZyX-I/travis-folds
Use custom travis folds
==
==================
bf29fa9;Foo;2017-05-01 04:28:01 +0300;Save version to the proper location

==

tests/install.sh
==================
8da977e;Foo;2017-05-01 04:03:24 +0300;Insert travim_fold calls to enter_suite and exit_suite

==

tests/shlib/common.sh
==================
9bad9b8;Nikolai Aleksandrovich Pavlov;2017-05-01 03:17:54 +0300;Merge pull request #1761 from ZyX-I/vterm-vim-tests
Refactor test scripts and reenable shell tests
==
==================
343b217;Foo;2017-05-01 02:15:50 +0300;Fix warncreateglobal warning from zsh_expand

==

powerline/bindings/zsh/__init__.py
==================
2d877c9;Foo;2017-05-01 01:49:32 +0300;Move shell tests inputs and outputs to separate directories

==

tests/test_shells/bash.daemon.ok
tests/test_shells/bash.nodaemon.ok
tests/test_shells/busybox.daemon.ok
tests/test_shells/busybox.nodaemon.ok
tests/test_shells/dash.daemon.ok
tests/test_shells/dash.nodaemon.ok
tests/test_shells/fish.ok
tests/test_shells/input.bash
tests/test_shells/input.busybox
tests/test_shells/input.dash
tests/test_shells/input.fish
tests/test_shells/input.ipython
tests/test_shells/input.mksh
tests/test_shells/input.pdb
tests/test_shells/input.rc
tests/test_shells/input.tcsh
tests/test_shells/input.zsh
tests/test_shells/inputs/bash
tests/test_shells/inputs/busybox
tests/test_shells/inputs/dash
tests/test_shells/inputs/fish
tests/test_shells/inputs/ipython
tests/test_shells/inputs/mksh
tests/test_shells/inputs/pdb
tests/test_shells/inputs/rc
tests/test_shells/inputs/tcsh
tests/test_shells/inputs/zsh
tests/test_shells/ipython.ok
tests/test_shells/mksh.daemon.ok
tests/test_shells/mksh.nodaemon.ok
tests/test_shells/outputs/bash.daemon.ok
tests/test_shells/outputs/bash.nodaemon.ok
tests/test_shells/outputs/busybox.daemon.ok
tests/test_shells/outputs/busybox.nodaemon.ok
tests/test_shells/outputs/dash.daemon.ok
tests/test_shells/outputs/dash.nodaemon.ok
tests/test_shells/outputs/fish.ok
tests/test_shells/outputs/ipython.ok
tests/test_shells/outputs/mksh.daemon.ok
tests/test_shells/outputs/mksh.nodaemon.ok
tests/test_shells/outputs/pdb.module.ok
tests/test_shells/outputs/pdb.subclass.ok
tests/test_shells/outputs/rc.daemon.ok
tests/test_shells/outputs/rc.nodaemon.ok
tests/test_shells/outputs/tcsh.ok
tests/test_shells/outputs/zsh.daemon.ok
tests/test_shells/outputs/zsh.nodaemon.ok
tests/test_shells/outputs/zsh.zpython.ok
tests/test_shells/pdb.module.ok
tests/test_shells/pdb.subclass.ok
tests/test_shells/rc.daemon.ok
tests/test_shells/rc.nodaemon.ok
tests/test_shells/run_script.py
tests/test_shells/tcsh.ok
tests/test_shells/test.sh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
tests/test_shells/zsh.zpython.ok
==================
65c6ed1;Foo;2017-05-01 01:45:07 +0300;Try setting LD_LIBRARY_PATH
Currently zpython test does not work: libzpython could not load libpython.
==

tests/test.sh
tests/test_shells/test.sh
==================
4c5b02d;Foo;2017-05-01 01:28:44 +0300;Remove “test x” nonsense

==

docs/source/usage/shell-prompts.rst
powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/rc/powerline.rc
powerline/bindings/shell/powerline.sh
tests/shlib/common.sh
tests/test_awesome/test.sh
tests/test_bar/test.sh
tests/test_shells/test.sh
==================
2fcbd89;Foo;2017-05-01 01:16:40 +0300;Trace checkout_cached_dir, use rev-parse in place of some hack

==

tests/install.sh
==================
225ed1f;Foo;2017-05-01 00:41:14 +0300;Do not add fish and dash to $TEST_ROOT/path

==

tests/test_shells/test.sh
==================
5a3e198;Foo;2017-05-01 00:00:45 +0300;Refactor shells test code
Tests passing locally:

bash (no)daemon C
busybox (no)daemon C
fish (no)daemon C
mksh (no)daemon C
rc (no)daemon C
tcsh (no)daemon C
zsh (no)daemon C
zsh zpython
ipython
pdf module
pdf subclass

dash has problems with job control (bgscript.sh not finished by kill)

==

tests/test_shells/bash.daemon.ok
tests/test_shells/bash.nodaemon.ok
tests/test_shells/busybox.daemon.ok
tests/test_shells/busybox.nodaemon.ok
tests/test_shells/dash.daemon.ok
tests/test_shells/dash.nodaemon.ok
tests/test_shells/fish.ok
tests/test_shells/input.bash
tests/test_shells/input.busybox
tests/test_shells/input.dash
tests/test_shells/input.fish
tests/test_shells/input.ipython
tests/test_shells/input.mksh
tests/test_shells/input.rc
tests/test_shells/input.tcsh
tests/test_shells/input.zsh
tests/test_shells/mksh.daemon.ok
tests/test_shells/mksh.nodaemon.ok
tests/test_shells/postproc.py
tests/test_shells/rc.daemon.ok
tests/test_shells/rc.nodaemon.ok
tests/test_shells/run_script.py
tests/test_shells/tcsh.ok
tests/test_shells/test.sh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
tests/test_shells/zsh.zpython.ok
tests/test_shells/zsh_test_script.zsh
==================
717ae5e;Foo;2017-04-30 22:55:20 +0300;Refactor make_tmp_dir to make_test_root
This fixes problem with `exit_suite --continue` wiping out tmp directory.
==

tests/shlib/common.sh
tests/test_awesome/test.sh
tests/test_bar/test.sh
tests/test_vim/test.sh
==================
1303cd1;Foo;2017-04-30 22:36:00 +0300;Move tests/run_*_tests.sh to tests/test_*/test.sh
Warning: this also makes shell tests run.

==

tests/run_awesome_tests.sh
tests/run_bar_tests.sh
tests/run_daemon_tests.sh
tests/run_lint_tests.sh
tests/run_python_tests.sh
tests/run_shell_tests.sh
tests/run_vim_tests.sh
tests/run_vterm_tests.sh
tests/shlib/common.sh
tests/test.sh
tests/test_awesome/test.sh
tests/test_bar/test.sh
tests/test_daemon/test.sh
tests/test_in_vterm/test.sh
tests/test_lint/test.sh
tests/test_python/test.sh
tests/test_shells/test.sh
tests/test_vim/test.sh
==================
0fc96ab;Foo;2017-04-30 15:49:46 +0300;Move “library” tests/*.sh to tests/shlib

==

tests/common.sh
tests/run_awesome_tests.sh
tests/run_bar_tests.sh
tests/run_daemon_tests.sh
tests/run_lint_tests.sh
tests/run_python_tests.sh
tests/run_vim_tests.sh
tests/run_vterm_tests.sh
tests/shlib/common.sh
tests/shlib/vim.sh
tests/shlib/vterm.sh
tests/test.sh
tests/test_in_vterm/test_tmux.sh
tests/test_in_vterm/test_vim.sh
tests/test_shells/test.sh
tests/vim.sh
tests/vterm.sh
==================
f3bf749;Foo;2017-04-30 15:39:05 +0300;Move tests run by run_python_tests to tests/test_python

==

tests/empty
tests/run_python_tests.sh
tests/test_cmdline.py
tests/test_config_merging.py
tests/test_config_reload.py
tests/test_configuration.py
tests/test_lib.py
tests/test_lib_config.py
tests/test_listers.py
tests/test_logging.py
tests/test_provided_config_files.py
tests/test_python/empty
tests/test_python/test_cmdline.py
tests/test_python/test_config_merging.py
tests/test_python/test_config_reload.py
tests/test_python/test_configuration.py
tests/test_python/test_lib.py
tests/test_python/test_lib_config.py
tests/test_python/test_listers.py
tests/test_python/test_logging.py
tests/test_python/test_provided_config_files.py
tests/test_python/test_segments.py
tests/test_python/test_selectors.py
tests/test_python/test_watcher.py
tests/test_segments.py
tests/test_selectors.py
tests/test_watcher.py
==================
53a7d10;Foo;2017-04-30 15:30:15 +0300;Move messages.fail to a temporary directory

==

tests/common.sh
tests/run_vim_tests.sh
tests/test_vim/tests/empty_encoding.old.vim
tests/test_vim/tests/foreign_stl_override.vim
tests/test_vim/tests/invalid_unicode.vim
tests/test_vim/tests/plugin_file.vim
tests/test_vim/tests/tabline.vim
tests/test_vim/vim_utils.vim
==================
82ca32e;Foo;2017-04-30 15:19:24 +0300;Move vim integration tests to test_vim

==

tests/run_vim_tests.sh
tests/setup_statusline_catcher.py
tests/test_commandt_plugin.vim
tests/test_empty_encoding.old.vim
tests/test_foreign_stl_override.vim
tests/test_invalid_unicode.vim
tests/test_local_overrides.vim
tests/test_nerdtree_plugin.vim
tests/test_plugin_file.vim
tests/test_tabline.vim
tests/test_vim/pyfiles/setup_statusline_catcher.py
tests/test_vim/tests/commandt_plugin.vim
tests/test_vim/tests/empty_encoding.old.vim
tests/test_vim/tests/foreign_stl_override.vim
tests/test_vim/tests/invalid_unicode.vim
tests/test_vim/tests/local_overrides.vim
tests/test_vim/tests/nerdtree_plugin.vim
tests/test_vim/tests/plugin_file.vim
tests/test_vim/tests/tabline.vim
tests/test_vim/vim_utils.vim
tests/vim_utils.vim
==================
c30383a;Foo;2017-04-30 15:05:18 +0300;Move Python tests.* modules to tests/modules, rename tests/path

==

tests/__init__.py
tests/lib/__init__.py
tests/lib/config_mock.py
tests/lib/fsconfig.py
tests/lib/terminal.py
tests/lib/vterm.py
tests/matchers.py
tests/modules/__init__.py
tests/modules/lib/__init__.py
tests/modules/lib/config_mock.py
tests/modules/lib/fsconfig.py
tests/modules/lib/terminal.py
tests/modules/lib/vterm.py
tests/modules/matchers.py
tests/modules/vim.py
tests/path/vim.py
tests/test_cmdline.py
tests/test_commandt_plugin.vim
tests/test_config_merging.py
tests/test_config_reload.py
tests/test_configuration.py
tests/test_empty_encoding.old.vim
tests/test_in_vterm/test_tmux.py
tests/test_in_vterm/test_vim.py
tests/test_lib.py
tests/test_lib_config.py
tests/test_listers.py
tests/test_local_overrides.vim
tests/test_logging.py
tests/test_nerdtree_plugin.vim
tests/test_plugin_file.vim
tests/test_provided_config_files.py
tests/test_segments.py
tests/test_selectors.py
tests/test_tabline.vim
tests/test_watcher.py
tests/vim.py
tests/vim_sys_path/vim.py
==================
2a1aef1;Foo;2017-04-30 14:44:26 +0300;Add blank vim+vterm tests

==

tests/test_in_vterm/test_vim.py
tests/test_in_vterm/test_vim.sh
==================
cac9927;Foo;2017-04-30 14:42:54 +0300;Move lib variable to do_terminal_tests

==

tests/lib/terminal.py
tests/test_in_vterm/test_tmux.py
==================
255ff49;Foo;2017-04-30 14:36:50 +0300;Define tests via dictionaries, do not hardcode row number

==

tests/lib/terminal.py
tests/test_in_vterm/test_tmux.py
==================
9d73664;Foo;2017-04-30 13:55:24 +0300;Move some env variables definition out of run_vim_tests.sh

==

tests/run_vim_tests.sh
tests/vim.sh
==================
96d8334;Foo;2017-04-30 13:41:54 +0300;Be more explicit about what to link tmux executable to

==

tests/test_in_vterm/test_tmux.sh
==================
a05857e;Foo;2017-04-30 13:40:29 +0300;Move some code away of test_tmux.sh

==

tests/common.sh
tests/test_in_vterm/test_tmux.sh
tests/vterm.sh
==================
65130ae;Foo;2017-04-30 13:25:44 +0300;Hide test/vterm_tmux in env variable, use absolute paths

==

tests/common.sh
tests/test_in_vterm/test_tmux.sh
==================
1b3aacb;Foo;2017-04-30 13:18:50 +0300;Move most of the vterm testing code to tests.lib.terminal

==

tests/lib/terminal.py
tests/test_in_vterm/test_tmux.py
==================
1d60220;Nikolai Aleksandrovich Pavlov;2017-04-30 12:45:15 +0300;Merge pull request #1760 from ZyX-I/vterm-tests
Fix tmux vterm tests
==
==================
e34a372;Foo;2017-04-30 12:21:46 +0300;Fix number of spaces

==

tests/test_in_vterm/test_tmux.py
==================
e3d0649;Foo;2017-04-30 06:40:05 +0300;Always remove all tmux logs

==

tests/test_in_vterm/test_tmux.py
==================
afb6b09;Foo;2017-04-30 06:36:29 +0300;Do not force MutableDimensions inherit from Dimensions

==

tests/lib/terminal.py
==================
a2bc59c;Foo;2017-04-30 06:06:52 +0300;Do not call Dimensions.__init__

==

tests/lib/terminal.py
==================
93cbeb9;Foo;2017-04-30 05:35:53 +0300;Fix misplaced lines

==

tests/test_in_vterm/test_tmux.py
==================
bbb9ae2;Foo;2017-04-30 05:34:19 +0300;Move printing tmux logs out of test_expected_result

==

tests/test_in_vterm/test_tmux.py
==================
883aa73;Foo;2017-04-30 05:31:14 +0300;Refactor vterm tests: move most of things out of the try

==

tests/lib/terminal.py
tests/test_in_vterm/test_tmux.py
==================
519f085;Foo;2017-04-30 05:07:25 +0300;Also move arguments list out of the try body

==

tests/test_in_vterm/test_tmux.py
==================
3d0f168;Foo;2017-04-30 05:00:49 +0300;Refactor try block in main and refactor specifying dimensions

==

tests/lib/terminal.py
tests/lib/vterm.py
tests/test_in_vterm/test_tmux.py
==================
3b769d2;Foo;2017-04-30 04:25:35 +0300;Make sure window_flags always have at least one space

==

powerline/bindings/tmux/powerline_tmux_2.1_plus.conf
==================
4c25833;Foo;2017-04-30 04:18:27 +0300;Do not make build successfull if only second test was successfull

==

tests/test_in_vterm/test_tmux.py
==================
32eec2f;Foo;2017-04-30 03:49:52 +0300;Rename expected_result_new to expected_result_1_8

==

tests/test_in_vterm/test_tmux.py
==================
756ea5b;Foo;2017-04-30 03:43:46 +0300;Still try to kill server, just now not allow exceptions to fail build

==

tests/test_in_vterm/test_tmux.py
==================
86f6943;Foo;2017-04-30 03:42:06 +0300;Unlink in place of appending x

==

tests/test_in_vterm/test_tmux.py
==================
b93ae8e;Foo;2017-04-30 03:40:21 +0300;Do not reuse existing socket paths

==

tests/test_in_vterm/test_tmux.py
==================
e19feb9;Foo;2017-04-30 03:12:33 +0300;Use different socket for each attempt

==

tests/test_in_vterm/test_tmux.py
==================
b71d5f2;Foo;2017-04-30 03:12:13 +0300;Do not bother with issuing kill-server, simply -KILL tmux

==

tests/lib/terminal.py
tests/test_in_vterm/test_tmux.py
==================
36b9c96;Foo;2017-04-30 02:45:27 +0300;Use absolute path for -S
It appears that using relative path for -S is not the best idea and yields tmux 
calls from powerline-config not working.
==

tests/test_in_vterm/test_tmux.py
==================
908d767;Foo;2017-04-30 02:35:45 +0300;Give a name to tmux default statusline color

==

tests/test_in_vterm/test_tmux.py
==================
b7a46eb;Foo;2017-04-30 02:34:20 +0300;Give some colors names

==

tests/test_in_vterm/test_tmux.py
==================
4a3f098;Foo;2017-04-30 02:19:47 +0300;Use powerline.conf as it is supposed to be used

==

tests/test_in_vterm/test_tmux.py
==================
fb769d7;Foo;2017-04-30 02:13:41 +0300;Refactor environment and expected results

==

tests/test_in_vterm/test_tmux.py
tests/test_in_vterm/test_tmux.sh
==================
14982fc;Foo;2017-04-02 18:29:25 +0300;Make tmux tests more sane

==

tests/lib/terminal.py
tests/test_in_vterm/test_tmux.py
==================
ca8245b;Nikolai Aleksandrovich Pavlov;2017-04-24 21:35:04 +0300;Merge pull request #1757 from ZyX-I/hglib-close
Do not forget to collect mercurial servers
==
==================
0a23598;Foo;2017-04-24 17:45:39 +0300;Do not forget to collect mercurial servers
Current variant spawns way too many hg instances which are not collected until 
Vim exits.
==

powerline/lib/vcs/mercurial.py
==================
d4d6bca;Nikolai Aleksandrovich Pavlov;2017-04-24 17:22:01 +0300;Merge pull request #1746 from ZyX-I/mercurial-clean-status
Handle C file status
==
==================
5fa5041;Nikolai Aleksandrovich Pavlov;2017-04-01 15:31:42 +0300;Merge pull request #1642 from ZyX-I/wm-daemon
Use powerline daemon for running awesome bindings
==
==================
0eb2bae;Nikolai Aleksandrovich Pavlov;2017-04-01 15:28:10 +0300;Merge pull request #1717 from teozkr/fix/fish-2.5.0-eval
Fish bindings: replace eval with source
==
==================
05fa1da;Foo;2017-03-23 21:12:37 +0300;Handle C file status

==

powerline/lib/vcs/mercurial.py
==================
5a7c3e0;Nikolai Aleksandrovich Pavlov;2017-03-19 01:07:39 +0300;Merge pull request #1741 from victor-o-silva/patch-1
Fix typo in package i3ipc in requirements list
==
==================
92c9a4f;Victor Oliveira da Silva;2017-03-18 16:27:14 -0300;Fix typo in package i3ipc in requirements list

==

docs/source/installation.rst
==================
b4e9242;Nikolai Aleksandrovich Pavlov;2017-03-18 18:45:49 +0300;Merge pull request #1735 from s-ol/tmux-git-fix
Assume latest tmux version if -V returns 'master'
==
==================
d9f12a4;s-ol;2017-03-07 22:36:51 +0100;assume latest tmux version if -V returns 'master'
Close #1727

==

powerline/bindings/tmux/__init__.py
==================
0d31221;Nikolai Aleksandrovich Pavlov;2017-03-11 17:26:22 +0300;Merge pull request #1738 from fogine/fix-listers-doc
fix incorrect segment type `segments_list` - should be `segment_list`
==
==================
0299dd1;fogine;2017-03-11 09:21:40 -0500;fix incorrect segment type `segments_list` - should be `segment_list`

==

docs/source/configuration/reference.rst
==================
0caef54;Foo;2017-03-07 02:55:38 +0300;Merge branch 'pr-1732' into develop
Closes #1732

==
==================
f1014e4;Foo;2017-03-07 02:54:33 +0300;Clean space-only line

==

powerline/segments/common/players.py
==================
340f73e;chester755@googlemail.com;2017-03-03 17:45:11 -0600;Add iTunes player segment
Squashed commits

- Fixed and redid itunes player
- change the player style
- Fix all the problems and removed the useless comments
- Fix all the problems and removed the useless comments
- Remove the truncation to the strings
- removed the .DS_Store
- correct the indentation I hate emacs now
- correct the indentations

==

powerline/segments/common/players.py
==================
4c68f77;Nikolai Aleksandrovich Pavlov;2017-02-26 01:27:44 +0300;Merge pull request #1729 from thomwiggers/fix-divide-bat-by-zero
Prevent divide by zero battery capacity
==
==================
faf452e;Thom Wiggers;2017-02-25 22:50:00 +0100;Prevent divide by zero battery capacity

==

powerline/segments/common/bat.py
==================
3aad562;Nikolai Aleksandrovich Pavlov;2017-02-19 15:00:54 +0300;Merge pull request #1720 from welwood08/feature/optional-outer-padding
Make length of `output_padding` in renderer controllable
==
==================
063a456;William Elwood;2017-02-13 22:41:22 +0000;Make length of `output_padding` in renderer controllable
Defaults to previous behaviour (length 1).

==

docs/source/configuration/reference.rst
powerline/renderer.py
powerline/theme.py
tests/test_configuration.py
==================
c417395;Nikolai Aleksandrovich Pavlov;2017-02-14 12:16:05 +0300;Merge pull request #1723 from ZyX-I/disable-failing-tests
Temporary disable tmux and shell tests so that do not fail CI
==
==================
dd707cc;Foo;2017-02-14 11:03:42 +0300;Temporary disable tmux and shell tests so that do not fail CI

==

tests/run_shell_tests.sh
tests/test_in_vterm/test_tmux.sh
==================
64c9761;Nikolai Aleksandrovich Pavlov;2017-02-14 11:00:40 +0300;Merge pull request #1722 from incertia/vim-completion
Fix #1719
==
==================
e2e0d73;Will Song;2017-02-13 17:57:22 -0600;Add default colors and mode text for vim completion modes `ic`, `ix`, `Rc`, and `Rx`.
This fixes #1719.

==

powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
==================
01d28ba;Nikolai Aleksandrovich Pavlov;2017-02-13 20:33:03 +0300;Merge pull request #1716 from ZyX-I/support-more-vim-modes
Support more vim modes
==
==================
55928a7;Teo Klestrup Röijezon;2017-02-06 15:02:53 +0100;Fish bindings: replace eval with source
For some reason, fish 2.5.0 freaks out under certain circumstances if
your `config.fish` calls `eval` at any point. For equally mysterious
reasons, replacing `eval` with `source` makes things work again.

See fish-shell/fish-shell#3809 for more details.

==

powerline/bindings/fish/powerline-setup.fish
==================
09821d9;Foo;2017-02-06 16:46:21 +0300;Add support for new Vim modes
Fixes #1715
==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/powerline_terminus.json
powerline/config_files/themes/powerline_unicode7.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
powerline/segments/vim/__init__.py
==================
1965918;Foo;2017-02-06 16:32:45 +0300;Add support for unknown modes in Vim
Closes #1715
==

powerline/segments/vim/__init__.py
tests/test_segments.py
==================
8e0bed9;Foo;2017-02-05 13:44:42 +0300;Merge branch 'release-2.5.2' into develop

==
==================
4189862;Foo;2017-02-05 13:44:42 +0300;Update base version

==

setup.py
==================
908c575;Foo;2017-02-05 13:43:35 +0300;Merge branch 'fix-ipython' into develop

==
==================
5b9487e;Foo;2017-02-05 13:43:05 +0300;Make it work with ipython-5.2.2
Fixes #1709

==

powerline/bindings/ipython/since_5.py
==================
0240643;Foo;2017-02-05 13:25:11 +0300;Merge branch 'release-2.5.1' into develop

==
==================
e578b8a;Foo;2017-02-05 13:25:11 +0300;Update base version

==

setup.py
==================
8286674;Foo;2017-01-22 03:38:39 +0300;Merge branch 'pr-1706' into develop
Closes #1706

==
==================
da4f513;Benny Powers;2017-01-21 18:57:59 -0500;Added note about laststatus
Users may be confused when installing powerline as it does not appear by
default in single-window mode. This change alerts users that they should
not expect to see the status line and points them to the help documents
for laststatus so that they can activate it in all cases if they want.

==

docs/source/usage/other.rst
==================
d53695a;Foo;2017-01-06 21:24:09 +0300;Merge branch 'doc-remove-args' into develop

==
==================
12bd797;Foo;2017-01-06 21:23:42 +0300;Improve removing arguments from documentation
Examples of issues where user used arguments which should not be present in 
documentation, but actually were present: #1699 (cpu_load_percent: 
shutdown_event), #1700 (weather: key, after_update, shutdown_event).
==

powerline/lib/threaded.py
powerline/lint/inspect.py
powerline/segments/common/env.py
powerline/segments/common/players.py
==================
b7d030a;Foo;2017-01-06 09:04:50 +0300;Merge commit '21ea62d' into HEAD
Closes #1702

==
==================
21ea62d;Foo;2016-12-14 22:24:25 +0300;Move -- function command arguments after function name
Fish 2.4.0-231-gd885f00 cannot handle current variant and fish 2.2.0 is still 
fine with new variant.
==

powerline/bindings/fish/powerline-setup.fish
==================
69a72db;Nikolai Aleksandrovich Pavlov;2016-12-14 21:00:41 +0300;Merge pull request #1690 from yangby/develop
Fix filenames for linux power supply class in battery segment.
==
==================
51fabca;YangBy;2016-12-01 12:58:30 +0800;Fix filenames for linux power supply class in battery segment.
Both "charge" (µAh) and "energy" (µWh) represents "capacity"
of battery in linux.

More details can find here:
https://github.com/torvalds/linux/blob/master/Documentation/power/power_supply_class.txt

Fixes #1605.

==

powerline/segments/common/bat.py
==================
bfd50a5;Nikolai Aleksandrovich Pavlov;2016-11-01 23:42:12 +0300;Merge pull request #1676 from QuLogic/hglib
Use hglib instead of mercurial directly.
==
==================
6f32ca0;Elliott Sales de Andrade;2016-11-01 00:12:37 -0400;Use hglib instead of mercurial directly.
This wrapper uses the command server without tying it to the mercurial
internals, which means it can support Python 3 and use a more liberal
license.

==

docs/source/installation.rst
powerline/lib/vcs/mercurial.py
tests/test_lib.py
==================
fb9f7dd;Nikolai Aleksandrovich Pavlov;2016-10-29 19:43:14 +0300;Merge pull request #1673 from ZyX-I/other-default
Provide another default theme with less troublesome characters
==
==================
64d96c8;Foo;2016-10-29 19:00:59 +0300;Fix shell tests

==

tests/test_shells/bash.daemon.ok
tests/test_shells/bash.nodaemon.ok
tests/test_shells/busybox.daemon.ok
tests/test_shells/busybox.nodaemon.ok
tests/test_shells/dash.daemon.ok
tests/test_shells/dash.nodaemon.ok
tests/test_shells/fish.ok
tests/test_shells/mksh.daemon.ok
tests/test_shells/mksh.nodaemon.ok
tests/test_shells/rc.daemon.ok
tests/test_shells/rc.nodaemon.ok
tests/test_shells/tcsh.ok
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
tests/test_shells/zsh.zpython.ok
==================
19f9885;Foo;2016-10-29 15:58:53 +0300;Fix python tests by abstracting away default theme name

==

powerline/__init__.py
tests/lib/config_mock.py
tests/test_config_merging.py
tests/test_config_reload.py
tests/test_configuration.py
==================
23f663f;Foo;2016-10-29 15:41:12 +0300;Also modify ….visual_range segment’s symbols in other unicode themes

==

powerline/config_files/themes/powerline_unicode7.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus_condensed.json
==================
3739526;Foo;2016-10-29 15:37:01 +0300;Provide another default theme with less troublesome characters
Ref #1652
==

docs/source/configuration/reference.rst
powerline/__init__.py
powerline/config_files/themes/powerline.json
powerline/config_files/themes/powerline_terminus.json
==================
cdea113;Nikolai Aleksandrovich Pavlov;2016-10-29 00:42:19 +0300;Merge pull request #1669 from harrissAvalon/patch-1
Fixed grammar
==
==================
18192db;Stephon;2016-10-28 11:06:18 -0400;Fixed grammar

==

docs/source/installation.rst
==================
4705aa6;Nikolai Aleksandrovich Pavlov;2016-10-26 03:57:00 +0300;Merge pull request #1665 from AcidScorpion/feature-by-acid
Fixed colors gradients in default and solarized
==
==================
f67ea65;Dmitry Petrich;2016-10-26 03:07:47 +0300;Tab alignments replaced by spaces

==

powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/solarized.json
==================
32b2459;Dmitry Petrich;2016-10-25 15:23:07 +0300;Fixed colors gradients in default and solarized

==

powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/solarized.json
==================
cdd0cdb;Nikolai Aleksandrovich Pavlov;2016-09-17 19:32:55 +0300;Merge pull request #1648 from ZyX-I/zsh-var-scope
Provide explicit scope information in powerline.zsh
==
==================
be762da;Foo;2016-09-17 18:24:47 +0300;Provide explicit scope information in powerline.zsh
Fixes #1647
==

powerline/bindings/zsh/powerline.zsh
tests/test_shells/input.zsh
==================
2565708;Foo;2016-08-20 20:57:42 +0300;Remove mutable global variables from daemon script

==

scripts/powerline-daemon
==================
03e63fc;Foo;2016-08-20 20:36:36 +0300;Also provide WM threads with common shutdown event and config loader

==

powerline/bindings/wm/awesome.py
scripts/powerline-daemon
==================
5784c0c;Foo;2016-08-19 22:46:11 +0300;Use powerline daemon for running awesome bindings
Also adds functional tests for awesome bindings.

Replaces #1641

==

docs/source/configuration/reference.rst
powerline/__init__.py
powerline/bindings/awesome/powerline-awesome.py
powerline/bindings/awesome/powerline.lua
powerline/bindings/bar/powerline-bar.py
powerline/bindings/config.py
powerline/bindings/wm/__init__.py
powerline/bindings/wm/awesome.py
powerline/commands/main.py
powerline/config_files/config.json
powerline/lint/__init__.py
scripts/powerline-daemon
scripts/powerline-render
tests/run_awesome_tests.sh
tests/test_awesome/path/awesome-client
tests/test_awesome/powerline/config.json
tests/test_awesome/powerline/themes/wm/default.json
tests/test_awesome/powerline/themes/wm/dvi.json
tests/test_cmdline.py
tests/test_shells/test.sh
==================
4b8798f;Foo;2016-08-17 22:27:37 +0300;Use $TMUX_PANE if it is defined
Also closes #1637 in most cases
==

powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/rc/powerline.rc
powerline/bindings/shell/powerline.sh
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
==================
72572c8;Nikolai Aleksandrovich Pavlov;2016-08-18 18:52:37 +0300;Merge pull request #1638 from ZyX-I/use-TMUX_PANE
Use $TMUX_PANE if it is defined
==
==================
70246c3;Foo;2016-08-17 22:27:37 +0300;Use $TMUX_PANE if it is defined
Also closes #1637 in most cases
==

powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/rc/powerline.rc
powerline/bindings/shell/powerline.sh
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
==================
d135631;Foo;2016-07-14 01:26:19 +0300;Merge branch 'update-documentation' into develop

==
==================
ead3ff3;Foo;2016-07-14 01:25:10 +0300;Add warning regarding segments that use cwd to tmux usage docs

==

docs/source/configuration/reference.rst
docs/source/usage/other.rst
docs/source/usage/shell-prompts.rst
==================
dd58d5f;Foo;2016-07-14 01:05:00 +0300;Fix underline of “i3wm listers” section

==

docs/source/configuration/listers.rst
==================
08137c5;Foo;2016-07-14 01:04:26 +0300;Update documentation regarding IPython

==

docs/source/usage/other.rst
==================
31fd9e6;Foo;2016-07-14 00:43:25 +0300;Merge branch 'release-2.5' into develop

==
==================
29cdd7f;Foo;2016-07-14 00:43:25 +0300;Update base version

==

setup.py
==================
a3b14de;Nikolai Aleksandrovich Pavlov;2016-07-10 03:02:09 +0300;Merge pull request #1614 from QuLogic/1613-fix-trailing-whitespace-py3k
Fix trailing whitespace segment on Python 3.
==
==================
ed69b98;Elliott Sales de Andrade;2016-07-06 19:20:31 -0400;Fix trailing whitespace segment on Python 3.
Using str() on a bytestring produces the repr on Python 3, not some
implicitly decoded string. So cast a literal instead.

Fixes #1613.

==

powerline/segments/vim/__init__.py
==================
f71d1c1;Nikolai Aleksandrovich Pavlov;2016-07-10 01:40:11 +0300;Merge pull request #1618 from ZyX-I/fix-ipython-5
Add support for IPython-5
==
==================
0fc01e0;Foo;2016-07-09 16:52:54 +0300;Allow ipython tests to fail

==

tests/common.sh
tests/test_shells/test.sh
==================
66c6de3;Foo;2016-07-09 05:22:16 +0300;Slow down IPython tests

==

tests/test_shells/test.sh
==================
44db0ac;Nikolai Aleksandrovich Pavlov;2016-07-09 16:19:51 +0300;Merge pull request #1616 from mc10/patch-1
README: Use the svg Travis image
==
==================
d89e790;Foo;2016-07-08 22:04:54 +0300;Fix tests

==

tests/test_provided_config_files.py
==================
5b16efa;Foo;2016-07-08 21:57:25 +0300;Switch how IPython is configured
Now user is expected to use

    from powerline.bindings.ipython.since_5 import PowerlinePrompts
    c.TerminalInteractiveShell.prompts_class = PowerlinePrompts

Note: still using hacks, now different ones. Main problem is that I cannot just 
register a powerline pygments style, user needs to specify his own style in 
order to change highlighting of non-powerline tokens (i.e. of everything, but 
prompt).

==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/since_5.py
powerline/renderers/ipython/since_5.py
==================
2954c83;Foo;2016-07-08 20:24:38 +0300;Add support for IPython-5
Fixes #1617
==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/ipython.py
powerline/renderer.py
powerline/renderers/ipython/__init__.py
powerline/renderers/ipython/pre_5.py
powerline/renderers/ipython/since_5.py
powerline/renderers/shell/__init__.py
==================
8977518;Kevin Ji;2016-07-08 00:52:06 -0700;README: Use the svg Travis image

==

README.rst
==================
d816de0;Nikolai Aleksandrovich Pavlov;2016-05-29 03:49:44 +0300;Merge pull request #1561 from iblis17/backlog
Increase socket backlog number for `powerline-daemon`
==
==================
436be7d;Iblis Lin;2016-03-30 00:09:16 +0800;Increase socket backlog number for `powerline-daemon`

==

scripts/powerline-daemon
==================
2a4e818;Foo;2016-05-15 13:53:22 +0300;Merge branch 'pr-1598' into develop
Closes #1596

==
==================
41a50fe;Phil Thomas;2016-05-12 10:00:40 -0500;Use different query to retrieve weather
Also switches geoip service.

Credit for fix to @gsusrafael

Fixes #1571

==

powerline/segments/common/wthr.py
tests/lib/__init__.py
tests/test_segments.py
==================
d115012;Nikolai Aleksandrovich Pavlov;2016-04-30 22:48:30 +0300;Merge pull request #1585 from ZyX-I/fix-tmux-2.1
Fix left segments support in tmux-2.1

Fixes #1583
==
==================
4a688a7;Foo;2016-04-30 16:39:51 +0300;Fix left segments support in tmux-2.1

==

powerline/bindings/tmux/powerline_tmux_2.1_plus.conf
==================
23e1edd;Nikolai Aleksandrovich Pavlov;2016-04-27 22:13:09 +0300;Merge pull request #1579 from dffischer/feature/stash
provide a VCS stash segment
==
==================
f4cbeaf;XZS;2016-04-27 12:30:36 +0200;test Vim variant of stash segment

==

tests/test_segments.py
==================
e027c5e;XZS;2016-04-22 15:03:39 +0200;expose stash to Vim
It needs the same modifications as the branch segment to correctly
function.

==

powerline/segments/vim/__init__.py
==================
72053f6;XZS;2016-04-22 14:59:20 +0200;include stash in default shell layout
As it only shows up when any stash is present, only relevant users will
see it.

The priority was chosen slightly lower than the branch name, as the
branch name is more relevant to check upon often in between repository
work while the stashes are more likely only checked between task chunks.

==

powerline/config_files/themes/shell/default.json
==================
fd54f63;XZS;2016-04-23 10:05:26 +0200;indicate stash with symbols
Like already in place for the branch, Unicode symbols or letter
indicators make it easier to tell the stash counter apart from other
segments.

==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/powerline_unicode7.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
==================
c91bcd9;XZS;2016-04-22 14:58:06 +0200;colorize stash segment
As the stash represents unfinished work, it uses the same colors as
dirty branches and copies the respective divider colorization.

==

powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/solarized.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
==================
a8f3d01;XZS;2016-04-27 12:28:05 +0200;test git stash backend

==

tests/test_lib.py
==================
4d62732;XZS;2016-04-22 14:56:54 +0200;implement stash backend for git

==

powerline/lib/vcs/git.py
==================
802791e;XZS;2016-04-27 12:30:26 +0200;test stash segment

==

tests/test_segments.py
==================
c9ca8e0;XZS;2016-04-22 14:50:07 +0200;provide stash counter
Some version control systems have an area where changes can be stored as
temporary work in progress instead publishing them to the history.

This segment is intended to display their count, reminding the developer
about open ends in the current repository.

The underlying implementation is VCS-specific and has to be provided by
the respective library module.

==

powerline/segments/common/vcs.py
==================
3bcd0ec;Nikolai Aleksandrovich Pavlov;2016-04-21 22:36:43 +0300;Merge pull request #1578 from ReadmeCritic/develop
Update README URLs based on HTTP redirects
==
==================
87476e4;ReadmeCritic;2016-04-21 09:27:16 -0700;Update README URLs based on HTTP redirects

==

README.rst
==================
df63946;Foo;2016-04-19 02:02:45 +0300;Merge branch 'release-2.4' into develop

==
==================
22b24cd;Foo;2016-04-19 02:02:45 +0300;Update base version

==

setup.py
==================
3146f72;Nikolai Aleksandrovich Pavlov;2016-04-08 23:36:50 +0300;Merge pull request #1567 from iblis17/sys-segment
Add `short` param for system_load segment
==
==================
e3369f2;Iblis Lin;2016-04-08 16:37:20 +0800;Add `short` param for system_load segment
Testing included

==

powerline/segments/common/sys.py
tests/test_segments.py
==================
77322ae;Nikolai Aleksandrovich Pavlov;2016-04-08 20:58:12 +0300;Merge pull request #1553 from ZyX-I/fix-ct-tests
Fix command-t tests
==
==================
43cc472;Foo;2016-04-08 20:58:15 +0300;Remove UCS-2 Python-2.6 tests
Some packages are no longer compatible with Python-2.6. It is easier to leave 
only python-2.7 UCS-2 build then to fix Python-2.6.
==

.travis.yml
==================
5c8b52b;Foo;2016-03-22 15:23:25 +0300;Fix return value of vim_getbufoption, use new command-t matcher
Now it uses _vim_to_python to transform its return value. Should fix tests.

==

powerline/bindings/vim/__init__.py
powerline/matchers/vim/__init__.py
powerline/matchers/vim/plugin/commandt.py
==================
94b53d2;Nikolai Aleksandrovich Pavlov;2016-04-07 20:07:09 +0300;Merge pull request #1565 from s-ol/doc-fixes
Fix and update documentation concerning i3wm
==
==================
e895553;s-ol;2016-04-06 12:56:12 +0200;Fix and update documentation concerning i3wm
update dependencies for xrandr and i3ipc, fix a typo

==

docs/source/installation.rst
powerline/listers/i3wm.py
==================
38ce0e7;Nikolai Aleksandrovich Pavlov;2016-03-27 03:08:34 +0300;Merge pull request #1559 from ZyX-I/fix-1550
Use proper dictionary for getting “elapsed” value in mpd bindings
==
==================
dc14421;Foo;2016-03-27 03:22:05 +0300;Use proper dictionary for getting “elapsed” value in mpd bindings
Fixes #1550
==

powerline/segments/common/players.py
==================
ed5e3d1;Nikolai Aleksandrovich Pavlov;2016-03-24 23:19:02 +0300;Merge pull request #1558 from powerline/ZyX-I-patch-1
Fix a few typos/strange wording in installation/osx.rst
==
==================
e0a7098;Nikolai Aleksandrovich Pavlov;2016-03-24 23:18:47 +0300;Fix a few typos/strange wording in installation/osx.rst

==

docs/source/installation/osx.rst
==================
6ff0601;Nikolai Aleksandrovich Pavlov;2016-03-24 22:55:21 +0300;Merge pull request #1556 from FocusedWolf/1555-fix-attribute-error-lc_messages
Fix LC_MESSAGES AttributeError
==
==================
2f1893a;FocusedWolf;2016-03-24 04:52:45 -0400;Fix LC_MESSAGES AttributeError
    Adds code to check if locale has the 'LC_MESSAGES' attribute before
    executing the following line of code:

        locale.getlocale(locale.LC_MESSAGES)[1]

    Fixes #1555

==

powerline/lib/encoding.py
==================
d7e9132;Nikolai Aleksandrovich Pavlov;2016-03-22 15:11:36 +0300;Merge pull request #1552 from jtyr/jtyr-ipython_config
More specific instructions for iPython
==
==================
ecf0885;Jiri Tyr;2016-03-22 11:11:12 +0000;More specific instructions for iPython

==

docs/source/usage/other.rst
==================
a44c9a8;Nikolai Aleksandrovich Pavlov;2016-03-20 04:50:44 +0400;Merge pull request #1542 from s-ol/i3-scratch
Add segments.i3wm.scratchpad
==
==================
eec80df;s-ol;2016-03-19 23:42:44 +0100;Add test for segments.i3wm.scratchpad

==

tests/test_segments.py
==================
09f32c0;Nikolai Aleksandrovich Pavlov;2016-03-20 00:35:46 +0400;Merge pull request #1549 from ZyX-I/fix-1547
Make Popen.communicate receive only bytes
==
==================
e9b70b9;Foo;2016-03-19 23:07:01 +0300;Make Popen.communicate receive only bytes
Fixes #1547
Closes #1548

==

powerline/lib/shell.py
tests/lib/__init__.py
tests/test_lib.py
==================
f710a87;s-ol;2016-03-09 22:17:31 +0100;Add segments.i3wm.scratchpad

==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/powerline_unicode7.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
powerline/segments/i3wm.py
==================
a100038;Nikolai Aleksandrovich Pavlov;2016-03-07 09:16:50 +0300;Merge pull request #1540 from blueyed/fix-doc-usage-other
docs/source/usage/other.rst: fix typo in note
==
==================
00212fa;Daniel Hahler;2016-03-06 19:50:57 +0100;docs/source/usage/other.rst: fix typo in note

==

docs/source/usage/other.rst
==================
8e5bc25;Nikolai Aleksandrovich Pavlov;2016-02-21 21:32:05 +0300;Merge pull request #1532 from mynameisfiber/feature/1288-multiple-battery
Fixes bug in multi-battery support
==
==================
3fb4f55;Foo;2016-02-21 21:39:50 +0300;Merge branch 'pr-1508' into develop
Closes #1508

==
==================
289e59e;Kamus Hadenes;2015-12-09 17:17:16 -0200;Add support for OS X en0 on internal_ip

==

powerline/segments/common/net.py
==================
7e319f2;Micha Gorelick;2016-02-21 00:19:17 -0500;filename bugfix
Filename reference in `/sys/` method for the battery segment referenced
a non-existant file.

==

powerline/segments/common/bat.py
==================
08b19a9;Nikolai Aleksandrovich Pavlov;2016-02-21 02:19:29 +0300;Merge pull request #1531 from mynameisfiber/feature/1288-multiple-battery
Multiple Battery Support

Fixes #1288 
Closes #1522
==
==================
ff2b37a;Micha Gorelick;2016-02-20 16:30:57 -0500;flake8

==

powerline/segments/common/bat.py
==================
71f56ff;Micha Gorelick;2016-02-20 16:25:34 -0500;Multiple Battery Support

==

powerline/segments/common/bat.py
==================
f205655;Nikolai Aleksandrovich Pavlov;2016-02-10 23:10:34 +0300;Merge pull request #1527 from powerline/ZyX-I-patch-1
Update command used to install macvim with brew
==
==================
73dcc78;Nikolai Aleksandrovich Pavlov;2016-02-10 23:10:02 +0300;Update command used to install macvim with brew
Flag `--override-system-vim` is deprecated.

Fixes #1526.
==

docs/source/installation/osx.rst
==================
b7ddafa;Nikolai Aleksandrovich Pavlov;2016-02-09 01:54:05 +0300;Merge pull request #1525 from S0lll0s/hotfix
Fix bug in xrandr output detection
==
==================
953a55f;S0lll0s;2016-02-08 22:09:30 +0100;Fix output detection when setting primary outputs
in powerline.bindings.wm.get_connected_xrandr_outputs

==

powerline/bindings/wm/__init__.py
==================
6d7f242;Nikolai Aleksandrovich Pavlov;2016-02-08 00:20:56 +0300;Merge pull request #1524 from mrshu/mrshu/fix-dbus-battery-status
fix: Make dbus battery status consistent
==
==================
0f13e8a;Nikolai Aleksandrovich Pavlov;2016-02-07 19:15:50 +0300;Merge pull request #1523 from mrshu/mrshu/fix-docs-small-typo
docs: Fix a small typo in develop/segments.rst
==
==================
3dd71c6;mr.Shu;2016-02-07 15:48:00 +0100;fix: Make dbus battery status consistent
* In #1499 a change was introduced that made use of the "Discharging"
  status of a battery in order to detect whether the AC power is
  available.

  The DBus part of the function that gets this data, however, stayed
  unchanged. In order to keep it consistent this commit changes it in
  such a way that it preforms the same function as the code introduced
  in #1499 by checking for the Discharging state of the battery as
  described here:
  http://upower.freedesktop.org/docs/Device.html#Device:State

Signed-off-by: mr.Shu <mr@shu.io>

==

powerline/segments/common/bat.py
==================
f3fe6d9;mr.Shu;2016-02-07 15:32:12 +0100;docs: Fix a small typo in develop/segments.rst
* The display_condition key in the docs was rendered as
  'display_condition`' due to a small typo. This commit fixes that.

Signed-off-by: mr.Shu <mr@shu.io>

==

docs/source/develop/segments.rst
==================
c0b56d3;Foo;2016-02-04 04:44:25 +0300;Merge branch 'pr-1517' into develop
Closes #1517

==
==================
623c1f8;S0lll0s;2016-01-15 18:18:04 +0100;Add tests for i3wm listers and workspace segment

==

tests/test_listers.py
tests/test_segments.py
==================
10243ad;S0lll0s;2016-02-04 04:41:58 +0300;Make workspace(strip) strip `{number}:` prefix if true

==

powerline/segments/i3wm.py
==================
db99ad1;S0lll0s;2016-01-15 15:37:37 +0100;Refactor i3wm segment and lemonbar binding
Move get_i3_connection and get_xrandr_outputs into bindings.wm

==

powerline/bindings/lemonbar/powerline-lemonbar.py
powerline/bindings/wm/__init__.py
powerline/listers/i3wm.py
powerline/segments/i3wm.py
tests/test_segments.py
==================
24fa035;S0lll0s;2016-01-12 22:38:03 +0100;Add listers for i3wm workspaces and outputs

==

docs/source/configuration/listers.rst
docs/source/develop/segments.rst
powerline/bindings/lemonbar/powerline-lemonbar.py
powerline/lib/dict.py
powerline/lint/imp.py
powerline/listers/i3wm.py
powerline/segments/i3wm.py
==================
bc7d571;S0lll0s;2016-01-12 23:42:17 +0100;Add i3wm segment for singular workspace

==

powerline/segments/i3wm.py
==================
53aca6b;S0lll0s;2016-01-12 18:05:40 +0100;Add i3wm segment_info keys to developer reference

==

docs/source/develop/segments.rst
==================
63af145;Nikolai Aleksandrovich Pavlov;2016-01-09 01:19:46 +0300;Merge pull request #1431 from S0lll0s/develop
Rename bar (bar-aint-recursive) to lemonbar
==
==================
646b0ea;Foo;2016-01-08 04:24:51 +0300;Improve powerline-lemonbar documentation
Changes:

- Usage determination transferred back to argparse (it wraps).
- Added complete description of lemonbar script to wm-widgets.rst.
- --interval and --height got their arguments clarified by metavar: it was not
  clear what units they use.
- --bar-command got its metavar because it is better then default BAR_COMMAND.
- --bar-command short variant is now -C.

==

docs/source/usage/wm-widgets.rst
powerline/bindings/lemonbar/powerline-lemonbar.py
powerline/commands/lemonbar.py
tests/run_bar_tests.sh
==================
8168ad1;Foo;2016-01-08 04:22:07 +0300;Improve powerline_automan: fix some bugs and add minimal argument
Bugs:
- Default action is store_true while it should be just store.
- nargs default depends on metavar while it should only depend on action.
- REMAINDER nargs is not supported.

Minimal argument means minimal mode which removes all section and creates 
a container with “synopsis” and “description” sections’ contents.
==

docs/source/powerline_automan.py
==================
619ae90;Foo;2016-01-07 05:15:39 +0300;Lint test configuration

==

tests/run_bar_tests.sh
tests/test_bar/powerline/themes/wm/__main__.json
==================
b29988b;Foo;2016-01-07 04:18:05 +0300;Add functional tests for lemonbar bindings

==

tests/common.sh
tests/run_bar_tests.sh
tests/test_bar/path/lemonbar
tests/test_bar/path/xrandr
tests/test_bar/powerline/config.json
tests/test_bar/powerline/themes/wm/__main__.json
tests/test_bar/powerline/themes/wm/default.json
tests/test_bar/powerline/themes/wm/dvi.json
==================
ee5f471;S0lll0s;2016-01-05 01:15:09 +0100;Deprecate "bar" bindings in favor of lemonbar

==

docs/source/configuration/reference.rst
docs/source/usage/wm-widgets.rst
powerline/bindings/bar/powerline-bar.py
powerline/bindings/lemonbar/powerline-lemonbar.py
powerline/lemonbar.py
powerline/lint/__init__.py
powerline/renderers/bar.py
powerline/renderers/lemonbar.py
powerline/segments/i3wm.py
tests/test_configuration.py
==================
7b60b94;S0lll0s;2016-01-05 00:46:43 +0100;Let segment_info overwrite i3wm workspace output

==

powerline/segments/i3wm.py
tests/test_segments.py
==================
59e66dc;Nikolai Aleksandrovich Pavlov;2015-12-17 03:09:04 +0300;Merge pull request #1510 from ZyX-I/remove-status-utf8
Remove status-utf8 option
==
==================
b40119a;Foo;2015-12-17 00:08:37 +0300;Remove status-utf8 option
It is incorrect to set it at all because what powerline outputs depends on 
locale used, and if locale is utf8 then tmux should already set this option.
==

powerline/bindings/tmux/powerline-base.conf
==================
d611cc2;Nikolai Aleksandrovich Pavlov;2015-11-28 23:53:06 +0300;Merge pull request #1499 from mook/1498-bat-linux-path
[Battery - Linux] Ignore AC adapters, use battery status instead
==
==================
1e0228a;Mook;2015-11-28 12:07:01 -0800;[Battery - Linux] Look at battery status instead of AC online-ness
The names of AC adapters are straight from ACPI and are sometimes called
"ADPx" instead of "ACx".  To avoid confusion, look at the battery status
instead.  Check for a power supply with a capacity instead of names that
start with "BAT" for the same reason.

Fixes #1498

==

powerline/segments/common/bat.py
==================
78c6c73;Nikolai Aleksandrovich Pavlov;2015-11-28 22:49:06 +0300;Merge pull request #1501 from mook/1500-mpd-utf8
[Players - mpd] Use Unicode where available
==
==================
4265da2;Mook;2015-11-28 11:28:51 -0800;[Players - mpd] Use Unicode where available
Otherwise the mpd function will fail when it encounters non-ASCII
metadata as it tries to do a unicode.format() and attempts to decode
the incoming data as ASCII, throwing a UnicodeDecodeError exception.

Fixes #1500

==

powerline/segments/common/players.py
==================
3b50893;Nikolai Aleksandrovich Pavlov;2015-11-25 01:57:08 +0300;Merge pull request #1503 from chmelevskij/patch-1
Add iTerm fix solution.
==
==================
dbb968c;chmelevskij;2015-11-24 22:46:44 +0000;Add iTerm fix solution.
Add a iTerm fix solution from https://github.com/powerline/fonts/issues/44
==

docs/source/troubleshooting/osx.rst
==================
eaa772f;Nikolai Aleksandrovich Pavlov;2015-11-22 06:35:56 +0300;Merge pull request #1495 from ZyX-I/extended-logging
Add more logging options
==
==================
3f59edc;Foo;2015-11-22 04:31:12 +0300;Add more logging options

==

docs/source/configuration/local.rst
docs/source/configuration/reference.rst
powerline/__init__.py
powerline/bindings/config.py
powerline/lint/__init__.py
powerline/lint/checks.py
powerline/lint/spec.py
powerline/listers/vim.py
powerline/segments/vim/__init__.py
powerline/vim.py
tests/test_logging.py
==================
48469c0;Foo;2015-11-22 05:26:34 +0300;Enable python-3.5 build

==

.travis.yml
==================
649757a;Nikolai Aleksandrovich Pavlov;2015-11-15 06:30:11 +0300;Merge pull request #1491 from johnmiked15/feature/tabline_updates
Tabline and bufferlister updates
==
==================
3121024;John Drouhard;2015-11-14 20:16:22 -0600;use str.format() instead of % operator; add comment to explain the usage of vim.eval('buflisted..')

==

powerline/listers/vim.py
==================
3f400f7;John Drouhard;2015-11-14 19:11:20 -0600;update test_tabline.vim with new tab:divider highlight group

==

tests/test_tabline.vim
==================
a85b54d;John Drouhard;2015-11-14 14:40:51 -0600;Update vim test module to implement 'getbufvar(...)'
This allows the tests for the buffer tablist to pass, since it now uses
getbufvar(nr, '&modified') to detect whether the buffer needs to be
modified

==

powerline/listers/vim.py
tests/vim.py
==================
63214c8;John Drouhard;2015-11-14 12:45:13 -0600;Update highlight groups for tabline
This changes the buffer highlight groups from buf and buf_nc to
buf, buf_nc, buf_mod, and buf_nc_mod. Doing this allows a higher
level of configurability for the highlight groups used in the
buffer-only tabline.

==

powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/themes/vim/tabline.json
powerline/listers/vim.py
==================
6efabc1;John Drouhard;2015-11-14 12:38:07 -0600;Fix performance issue with tabline and showtabline=2
vim_getbufoption(segment, 'buflisted') was causing vim to update the tabline for every
keystroke. using vim.eval('buflisted(nr)') allows vim to optimize when
it needs to update

Fixes #1281

==

powerline/listers/vim.py
==================
4e7f399;Nikolai Aleksandrovich Pavlov;2015-11-08 18:10:28 +0300;Merge pull request #1486 from michelesr/develop
Fix #1483 -- [Battery - Linux] Fix AC status fetch
==
==================
2063411;Michele Sorcinelli;2015-11-08 12:40:43 +0100;Fix #1483 -- [Battery - Linux] Fix AC status fetch
Fix a bug where the `online` property is checked inside battery
instead of AC.

As specified in issue #1483, `online` is found only inside
`/sys/class/power_supply/AC<x>/` directories, and equals `1` when cable is
plugged, and `0` when unplugged.

Edit: updated with --amend according to ZyX-I hints in order to work with
powerline daemon.

==

powerline/segments/common/bat.py
==================
5364919;Nikolai Aleksandrovich Pavlov;2015-11-04 19:30:50 +0300;Merge pull request #1482 from fernandezcuesta/develop
Include dist folder to MANIFEST.in
==
==================
9fcf8fa;Jesús Fernández;2015-11-04 12:19:28 +0100;Including `dist` folder to MANIFEST.in

==

MANIFEST.in
==================
fc6c3d9;Foo;2015-10-20 12:54:26 +0300;Merge branch 'release-2.3' into develop

==
==================
312301b;Foo;2015-10-20 12:54:26 +0300;Update base version

==

setup.py
==================
a7dc28f;Nikolai Aleksandrovich Pavlov;2015-10-20 00:03:41 +0300;Merge pull request #1472 from ZyX-I/pr-1426
Add hide_domain argument to common.env.user segment
==
==================
e0a62f9;=;2015-08-07 10:43:10 -0500;Add hide_domain argument to common.env.user segment
If true, this argument hides `@` and the following characters from the user
name.

Fixes #1420
Closes #1426

==

powerline/segments/common/env.py
tests/test_segments.py
==================
e041f0e;Nikolai Aleksandrovich Pavlov;2015-10-19 23:50:05 +0300;Merge pull request #1451 from QuLogic/virtualenv-conda
Show conda environment in virtualenv segment.
==
==================
ddfbb20;Nikolai Aleksandrovich Pavlov;2015-10-19 23:34:12 +0300;Merge pull request #1471 from ZyX-I/tmux-2.1-update
Support tmux-2.1
==
==================
0233909;Foo;2015-10-19 23:29:34 +0300;Do not allow failures any more

==

.travis.yml
==================
688e507;Foo;2015-10-19 22:46:20 +0300;Install old virtualenvwrapper for 2.6 UCS2 Python

==

tests/install.sh
==================
c4b4097;Foo;2015-10-19 21:56:46 +0300;Transform pane_id to unicode before using
Tmux-2.1 appears not to output leading `%` when using `tmux display -p '#D'`.
This change changes type of the `pane_id` argument: leading `%` turns it into
a literal string, number in front makes it be parsed as a JSON number.

Fixes #1470

==

docs/source/develop/segments.rst
powerline/commands/main.py
powerline/renderers/tmux.py
==================
3b3d8f0;Nikolai Aleksandrovich Pavlov;2015-10-16 00:21:49 +0300;Merge pull request #1408 from ti-mo/develop
Added tips for Urxvt compiler flags
==
==================
e6d484a;Timo Beckers;2015-07-10 11:15:03 +0200;Added troubleshooting for Urxvt & Unicode

==

docs/source/troubleshooting.rst
==================
841c25f;Nikolai Aleksandrovich Pavlov;2015-10-08 20:07:56 +0300;Merge pull request #1467 from S0lll0s/i3-docs
Add i3 to the tagline
==
==================
9247567;S0lll0s;2015-10-08 11:52:29 +0200;Add i3 to the tagline

==

README.rst
docs/source/overview.rst
==================
44b2f91;Nikolai Aleksandrovich Pavlov;2015-10-06 02:15:06 +0300;Merge pull request #1466 from ZyX-I/fix-pypy3-test
Skip date test on PyPy3
==
==================
76be911;Foo;2015-10-06 01:46:25 +0300;Skip date test on PyPy3
See https://bitbucket.org/pypy/pypy/issues/2161/pypy3-strftime-does-not-accept-unicode
==

tests/test_segments.py
==================
1cd992b;Foo;2015-10-06 01:40:15 +0300;Merge branch 'disable-python2.6-ucs2-tests' into develop

==
==================
20ceaac;Foo;2015-10-06 01:39:11 +0300;Allow the whole CPython-2.6 UCS2 section to fail

==

.travis.yml
==================
a839b15;Foo;2015-10-06 00:41:40 +0300;Merge branch 'pull-1461' into develop

==
==================
c6a6041;Håken Lid;2015-10-04 22:03:06 +0200;Allow unicode characters in time segment in Python-2

==

powerline/segments/common/time.py
tests/test_segments.py
==================
3696782;Nikolai Aleksandrovich Pavlov;2015-10-06 00:27:32 +0300;Merge pull request #1464 from powerline/ZyX-I-patch-2
Fix typo (missing letter) in installation/osx.rst
==
==================
69d3bdf;Nikolai Aleksandrovich Pavlov;2015-10-06 00:27:08 +0300;Fix typo (missing letter) in installation/osx.rst
Closes #1463
==

docs/source/installation/osx.rst
==================
6a62e82;Nikolai Aleksandrovich Pavlov;2015-10-05 21:59:50 +0300;Merge pull request #1462 from S0lll0s/i3-docs
Include i3wm segments in configuration docs
==
==================
811498d;S0lll0s;2015-10-05 20:56:07 +0200;Include i3wm segments in Configuration docs
Close #1457

==

docs/source/configuration/segments/i3wm.rst
==================
aa33599;Nikolai Aleksandrovich Pavlov;2015-09-29 14:18:48 +0300;Merge pull request #1456 from powerline/ZyX-I-patch-1
Do not state that patched font does not work for rxvt-unicode
==
==================
783b0f7;Nikolai Aleksandrovich Pavlov;2015-09-29 13:50:40 +0300;Do not state that patched font does not work for rxvt-unicode
Fixes #1455
==

docs/source/installation.rst
==================
56aa31a;Elliott Sales de Andrade;2015-09-13 22:05:23 -0400;Show conda environment in virtualenv segment.
Either conda or virtualenv checks can be disabled using the new
ignore_venv or ignore_conda options to this segment.

==

powerline/segments/common/env.py
tests/test_segments.py
==================
f8c45e9;Nikolai Aleksandrovich Pavlov;2015-09-13 18:20:16 +0300;Merge pull request #1449 from DoctorJellyface/develop
Added a systemd service, fixes #1447.
==
==================
7e379a8;Juraj Fiala;2015-09-13 16:53:26 +0200;Added a systemd service, fixes #1447.

==

powerline/dist/systemd/powerline-daemon.service
==================
d78d29c;Nikolai Aleksandrovich Pavlov;2015-09-06 01:24:41 +0300;Merge pull request #1443 from seanfisk/feature/internal-ip-default-gateway
Add option to detect internal_ip interface from default gateway
==
==================
2c12131;Sean Fisk;2015-09-05 18:02:11 -0400;Log when IP address family not found for interface

==

powerline/segments/common/net.py
==================
105cf66;Sean Fisk;2015-09-04 16:12:20 -0400;Detect internal_ip interface from default gateway
Add the option to specify `interface='default_gateway'` to the
`internal_ip` segment, which displays the IP address of the interface
connected to the default gateway.

==

powerline/segments/common/net.py
tests/test_segments.py
==================
f91fb14;Nikolai Aleksandrovich Pavlov;2015-08-30 14:29:35 +0300;Merge pull request #1439 from ZyX-I/fix-1437
Fix support for passworded connections in mpd+python-mpd* player seg
==
==================
b8e09b3;Foo;2015-08-30 13:21:01 +0300;Fix support for passworded connections in mpd+python-mpd* player seg
Fixes #1437
==

powerline/segments/common/players.py
==================
5ebf087;Foo;2015-08-30 01:23:03 +0300;Merge commit 'a272c6a' into develop

==
==================
a272c6a;Foo;2015-08-30 01:21:49 +0300;Use net_io_counters by default also in _get_interfaces
Fixes #1435
==

powerline/segments/common/net.py
==================
e1dc584;Nikolai Aleksandrovich Pavlov;2015-08-27 18:45:02 +0300;Merge pull request #1436 from setrofim/develop
Adding zoom indicator to window status formats.
==
==================
eeaaf39;Sergei Trofimov;2015-08-27 09:05:13 +0100;updating tmux tests to expect window_flags in window status format

==

tests/test_in_vterm/test_tmux.py
==================
c687ea9;Sergei Trofimov;2015-08-26 16:02:42 +0100;Adding zoom indicator to window status formats.

==

powerline/bindings/tmux/powerline-base.conf
==================
5905ac2;Nikolai Aleksandrovich Pavlov;2015-08-22 20:12:53 +0300;Merge pull request #1432 from S0lll0s/new-workspace
Add 'output' option to segments.i3wm.workspaces
==
==================
918dd95;S0lll0s;2015-08-21 17:50:27 +0200;Add 'output' option to segments.i3wm.workspaces

==

powerline/segments/i3wm.py
tests/test_segments.py
==================
7ef8f4f;Foo;2015-08-22 18:19:14 +0300;Merge branch 'zsh-fix' into develop

==
==================
959693f;Foo;2015-08-22 17:44:57 +0300;Temporary fix for failing zsh tests

==

tests/test_shells/postproc.py
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
==================
b7bca61;Foo;2015-08-22 17:18:35 +0300;Use tests/common.sh for reporting test failures

==

tests/common.sh
tests/run_daemon_tests.sh
tests/run_lint_tests.sh
tests/run_python_tests.sh
tests/run_vim_tests.sh
tests/run_vterm_tests.sh
tests/test.sh
tests/test_in_vterm/test_tmux.sh
tests/test_shells/test.sh
==================
9f06655;Foo;2015-08-21 18:39:52 +0300;Rename …/test_in_vterm/test.sh to …/test_in_vterm/test_tmux.sh

==

tests/run_vterm_tests.sh
tests/test_in_vterm/test.sh
tests/test_in_vterm/test_tmux.py
tests/test_in_vterm/test_tmux.sh
==================
94cd0ca;Nikolai Aleksandrovich Pavlov;2015-08-21 18:20:43 +0300;Merge pull request #1433 from ZyX-I/vim-move
Vim has moved to github, so tip and version tag got renamed
==
==================
eba68f0;Nikolai Aleksandrovich Pavlov;2015-08-21 18:18:56 +0300;Merge pull request #1404 from ZyX-I/tcsh-whitelist
Do not use tcsh, mksh, busybox and socat from deps
==
==================
fed3c70;Foo;2015-08-21 18:13:26 +0300;Vim has moved to github, so tip and version tag got renamed

==

tests/run_vim_tests.sh
==================
11c1e07;Foo;2015-08-08 01:15:55 +0300;Merge branch 'pr-1418' into develop

==
==================
ab9c2bd;Foo;2015-08-08 01:15:26 +0300;Remove outdated comment

==

powerline/segments/common/bat.py
==================
63a8b49;Foo;2015-08-08 01:15:05 +0300;Update battery segment docstring

==

powerline/segments/common/bat.py
==================
d02b8e9;Foo;2015-08-08 01:10:57 +0300;Fix dbus+UPower battery support

==

powerline/segments/common/bat.py
==================
f098ed2;Fumihiro Xue;2015-07-01 19:59:52 +0800;Add ac-charging indication for battery segment

==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/powerline_unicode7.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
powerline/segments/common/bat.py
tests/test_segments.py
==================
090cd13;Nikolai Aleksandrovich Pavlov;2015-07-20 08:19:07 +0300;Merge pull request #1415 from ZyX-I/fix-1412
Workaround tmux bug: additional space in display -p '#D' output
==
==================
09caf01;Foo;2015-07-20 08:24:37 +0300;Merge commit '22e9dfd' into develop

==
==================
22e9dfd;Foo;2015-07-20 08:18:47 +0300;Do not use ?= for defining macros
To define make macros one may use make arguments, so inheriting them from
environment is not needed. I also do not see nmake supporting `?=` (not sure
that anybody will use this though).

==

docs/Makefile
==================
67dc10d;Foo;2015-07-19 15:03:28 +0300;My variant of Vim documentation has moved to bitbucket pages

==

docs/source/troubleshooting.rst
==================
9b71beb;Foo;2015-07-19 14:40:39 +0300;Workaround tmux bug: additional space in display -p '#D' output
Fixes #1412

==

powerline/bindings/tmux/powerline-base.conf
powerline/bindings/tmux/powerline_tmux_1.7_plus.conf
powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
powerline/renderers/tmux.py
==================
06a15ee;Foo;2015-07-19 14:37:17 +0300;Merge commit '26ea5f0f0042dc59b6ca62888156885aba093f03' into develop

==
==================
18f3d18;Nikolai Aleksandrovich Pavlov;2015-07-19 14:24:02 +0300;Merge pull request #1414 from Siosm/develop
Fix manpage generation with python3

Fixes #1388.
==
==================
9ce7fa3;Timothée Ravier;2015-07-19 11:05:15 +0200;docs: fix manpage generation with python3
Python2 manpage generation seems unaffected.

Warnings occur when generating with python3:

.../docs/source/configuration/segments/vim.rst:27: WARNING: error while
formatting arguments for
powerline.segments.vim.plugin.tagbar.current_tag: decoding str is not
supported

==

docs/source/powerline_automan.py
==================
24dbf04;Timothée Ravier;2015-07-19 11:00:04 +0200;docs: allow outside of Makefile variable assignment
This allow packagers to select the sphinx-build command version (python2
or python3) without changing the Makefile:

$ SPHINXBUILD=sphinx-build2 SPHINXOPTS=... make man

==

docs/Makefile
==================
26ea5f0;Foo;2015-07-18 16:55:04 +0300;Fix error message when inotify limits were hit

==

powerline/lib/inotify.py
==================
c184b2b;Foo;2015-07-09 22:54:49 +0300;Also do not use bot-ci mksh, busybox and socat dependencies
All of them were whitelisted:
- Mksh was whitelisted in travis-ci/travis-ci#3881.
- Busybox was whitelisted in travis-ci/travis-ci#3880.
- Socat was whitelisted in travis-ci/travis-ci#3883.
==

.travis.yml
tests/test.sh
==================
dbe7e16;Foo;2015-07-06 21:13:14 +0300;Do not use tcsh from deps
Tcsh was unmasked according to travis-ci/travis-ci#3882 and can now be installed 
by travis.
==

.travis.yml
tests/test.sh
==================
03195cf;Foo;2015-06-27 02:05:58 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
21c1ba9;Foo;2015-06-27 02:05:49 +0300;Make new powerline release ebuilds symlinks
Note: not powerline-vim, it is not prepared for this.
==

scripts/powerline-release.py
==================
0dae18d;Foo;2015-06-27 01:51:29 +0300;Merge branch 'release-2.2' into develop

==
==================
9021b18;Foo;2015-06-27 01:51:29 +0300;Update base version

==

setup.py
==================
0dc5c39;Nikolai Aleksandrovich Pavlov;2015-06-15 01:36:04 +0300;Merge pull request #1393 from ZyX-I/fix-1391
Use psutil.boot_time() function if appropriate
==
==================
248c2f8;Foo;2015-06-15 01:28:30 +0300;Use psutil.boot_time() function if appropriate
It now replaced psutil.BOOT_TIME attribute.

Fixes #1391
==

powerline/segments/common/sys.py
==================
b789437;Nikolai Aleksandrovich Pavlov;2015-05-30 17:45:34 +0300;Merge pull request #1387 from mdeaudelin/develop
Fix dash bindings on OS X
==
==================
b7bd94d;Foo;2015-05-30 15:39:37 +0300;Merge branch 'repo-root' into develop

==
==================
afab0e5;Foo;2015-05-30 15:38:02 +0300;Clarify location of ``{repository_root}``
Fixes #1376
==

docs/source/installation.rst
docs/source/usage/other.rst
docs/source/usage/shell-prompts.rst
docs/source/usage/wm-widgets.rst
==================
44d843a;Foo;2015-05-30 14:24:47 +0300;Merge branch 'clarify-config-paths' into develop

==
==================
acb098a;Foo;2015-05-30 14:24:30 +0300;Clarify where powerline configuration files are located
Closes #1375
==

docs/source/configuration.rst
==================
71386c1;Foo;2015-05-30 14:09:08 +0300;Merge branch 'purge-PRs-script' into develop

==
==================
e0240f2;Foo;2015-05-30 14:09:00 +0300;Add script that will close all PRs not to develop branch

==

tools/purge-PRs.py
==================
0ea0291;Nikolai Aleksandrovich Pavlov;2015-05-29 22:54:22 +0300;Merge pull request #1371 from ZyX-I/clickable-tabs
Add support for clicking tabs in Vim
==
==================
b8c30fa;Foo;2015-05-29 22:22:18 +0300;Fix typo in multi_byte feature name

==

tests/test_empty_encoding.old.vim
==================
c64570a;Foo;2015-05-17 15:06:42 +0300;Add unit tests

==

tests/test_segments.py
==================
c000805;Foo;2015-05-17 15:04:58 +0300;Update integration tests

==

tests/test_tabline.vim
==================
a09f1e1;Nikolai Aleksandrovich Pavlov;2015-05-29 22:10:34 +0300;Merge pull request #1370 from ZyX-I/improve-imap-segment
Add support for non-SSL IMAP4 connections
==
==================
72f8b59;Foo;2015-05-17 14:58:18 +0300;Add support for literal segments to linter

==

docs/source/develop/segments.rst
powerline/lint/checks.py
powerline/segments/vim/__init__.py
==================
bfd9a21;Foo;2015-05-17 14:45:49 +0300;Remove recursion when checking segments

==

powerline/lint/__init__.py
==================
f5d85b7;Foo;2015-05-17 14:16:48 +0300;Add support for clickable tab names
Fixes #1353

==

docs/source/develop/segments.rst
powerline/config_files/themes/vim/tabline.json
powerline/renderer.py
powerline/segment.py
powerline/segments/vim/__init__.py
==================
2fa7c3c;Nikolai Aleksandrovich Pavlov;2015-05-23 16:43:21 +0300;Merge pull request #1381 from ZyX-I/tmux-length-shrink
Add support for truncating tmux segments
==
==================
a718a10;Foo;2015-05-23 16:10:46 +0300;Add integration tests for tmux segment truncation

==

tests/lib/terminal.py
tests/lib/vterm.py
tests/test_in_vterm/test_tmux.py
==================
37b0af8;Foo;2015-05-23 16:06:51 +0300;Disable segment truncation on tmux-1.6

==

powerline/bindings/tmux/powerline-base.conf
powerline/bindings/tmux/powerline_tmux_1.7_plus.conf
==================
fe3b3b1;Foo;2015-05-23 15:12:43 +0300;Automatically truncate tmux status line when needed
Closes #1328 (but not fixes it)
Closes #137 (not actually fixes it because I do not know some segment widths)

==

powerline/bindings/tmux/powerline-base.conf
powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
powerline/renderers/tmux.py
tests/test_in_vterm/test.sh
==================
524fc31;Foo;2015-05-23 15:09:33 +0300;Parse all numbers as numbers
Typo prevented integers starting with 2 in affected places (command-line 
--renderer-arg parsing and POWERLINE_…_OVERRIDES parsing) from being parsed as 
integers.
==

powerline/lib/overrides.py
==================
d6e7cbf;Foo;2015-05-20 21:45:16 +0300;Merge PR #1373 into develop
Changes to the original PR:

- Squashed commits.
- Reworded commit summary.

Closes #1373

==
==================
632673a;Foo;2015-05-20 21:39:32 +0300;Merge PR #1374 into develop
Differences from the original PR:

- Squashed commits.
- Reworded commit summary.
- No comma after `e.g.`.
- Wrapped lines in the commit message.
- Fixed python-mpd2 link.

Closes #1374

==
==================
cc7f212;Werner Beroux;2015-05-19 14:57:54 +0200;Enhance mpd player bindings documentation
Give some hints to install compatible `mpd` Python module, and rewrite to show
that the Python package is preferred (for example player status isn't supported
properly via `mpc` command).

==

powerline/segments/common/players.py
==================
1dbf267;Werner Beroux;2015-05-19 14:20:19 +0200;Clarify what does “low priority segment” mean

==

docs/source/configuration/reference.rst
==================
bf6191d;Nikolai Aleksandrovich Pavlov;2015-05-17 21:20:12 +0300;Merge pull request #1372 from ZyX-I/pull-1366
Switch the underlying i3-IPC layer and deprecate i3bgbar bindings
==
==================
dd88684;Foo;2015-05-17 21:03:27 +0300;Add i3wm segment unit tests

==

powerline/segments/i3wm.py
tests/test_segments.py
==================
c02516a;Foo;2015-05-17 20:42:21 +0300;Fix style errors

==

powerline/bindings/bar/powerline-bar.py
powerline/segments/i3wm.py
==================
e2168e2;Nikolai Aleksandrovich Pavlov;2015-05-17 12:49:23 +0300;Merge pull request #1369 from ZyX-I/fix-1368
Use different highlight group for network_load divider
==
==================
acb7c27;Foo;2015-05-17 11:35:27 +0300;Use different highlight group for network_load divider
Fixes #1368

==

powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/solarized.json
powerline/segments/common/net.py
tests/test_segments.py
==================
9b0269a;Foo;2015-05-17 11:58:33 +0300;Add support for non-SSL IMAP4 connections
Fixes #1351
==

powerline/segments/common/mail.py
==================
34026ee;S0lll0s;2015-05-16 22:21:56 +0200;Let default i3 mode for bar-bindings be "default"

==

powerline/bindings/bar/powerline-bar.py
==================
e8b502b;S0lll0s;2015-05-16 16:46:40 +0200;Add support for i3 modes in segment_info for bar
also fix the bar-renderer's argument handling

==

powerline/bindings/bar/powerline-bar.py
powerline/renderers/bar.py
powerline/segments/i3wm.py
==================
32a278b;S0lll0s;2015-05-15 14:48:39 +0200;Update the bar-aint-recursive binding docs

==

docs/source/usage/wm-widgets.rst
==================
b20a707;S0lll0s;2015-05-15 23:33:14 +0200;Add powerline.segments.i3wm.mode
also make powerline-bar.py redraw on mode change

==

powerline/bindings/bar/powerline-bar.py
powerline/segments/i3wm.py
==================
918fd82;S0lll0s;2015-05-14 16:08:52 +0200;(Optionally) switch from "i3-py" to "i3ipc" for i3 bindings
i3-py is no longer maintained

==

powerline/bindings/bar/powerline-bar.py
powerline/segments/i3wm.py
==================
c938293;Mathieu Deaudelin;2015-05-13 11:23:06 -0400;Fix dash bindings on OS X
Fixes two errors that occur while using Powerline with dash under
Mac OS X.

Problem:  Execution of the mktemp command fails on OS X.
Cause:    mktemp requires a mandatory argument (-t or full path)
Solution: Provide an absolute path as a template to the mktemp command.

Problem:  powerline executable fails to be called because its
          command line unexpectedly contains spaces.
Cause:    The _POWERLINE_JOBS variable contains spaces, because the wc
          command returns spaces before the number on OS X.
Solution: Trim the spaces before assigning the value to the variable.

==

powerline/bindings/shell/powerline.sh
tests/test_shells/test.sh
==================
67f0995;Foo;2015-05-10 23:18:11 +0300;Merge branch 'release-2.1.4' into develop

==
==================
20868f7;Foo;2015-05-10 23:18:10 +0300;Update base version

==

setup.py
==================
bac1c01;Nikolai Aleksandrovich Pavlov;2015-05-10 23:10:50 +0300;Merge pull request #1358 from ZyX-I/container-based-infrastructure
Switch to container-based infrastructure
==
==================
450dbec;Foo;2015-05-10 23:05:57 +0300;Mock realpath if it is not present

==

tests/test.sh
==================
2417688;Foo;2015-05-10 21:59:38 +0300;Use force-removal of .git
Otherwise it may hang with message like

    rm: remove write-protected regular file `tests/bot-ci/.git/objects/pack/pack-589af67feed5a0f1d2c4cfb43325ab5165539bcc.pack'?
==

tests/install.sh
==================
37a0c4d;Foo;2015-05-10 21:30:09 +0300;Enable directory caching

==

.travis.yml
tests/install.sh
==================
8e8e396;Foo;2015-05-10 21:16:23 +0300;Switch to container-based infrastructure

==

.travis.yml
tests/install.sh
tests/test.sh
==================
b88a16c;Foo;2015-05-10 19:40:47 +0300;Move from /opt to $HOME/opt

==

tests/install.sh
tests/run_vim_tests.sh
tests/test.sh
==================
d9790cc;Foo;2015-05-10 22:46:45 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
2dff767;Foo;2015-05-10 22:46:40 +0300;Fix tmux bindings

==

powerline/bindings/config.py
==================
6e14a49;Foo;2015-05-10 22:31:06 +0300;Merge branch 'release-2.1.3' into develop

==
==================
7b69860;Foo;2015-05-10 22:31:06 +0300;Update base version

==

setup.py
==================
802d806;Foo;2015-05-10 22:30:01 +0300;Merge branch 'fix-cmdline' into develop
Fixes #1357.

==
==================
e097f65;Foo;2015-05-10 22:23:19 +0300;Fix main arguments parser tests

==

tests/test_cmdline.py
==================
22988ed;Foo;2015-05-10 22:16:32 +0300;Merge branch 'release-2.1.2' into develop

==
==================
6e0951d;Foo;2015-05-10 22:16:32 +0300;Update base version

==

setup.py
==================
ca2809b;Foo;2015-05-10 22:16:14 +0300;Fix args.side: make it a string back
One of the last changes made it a list.
==

powerline/commands/main.py
==================
c45accb;Foo;2015-05-10 17:54:13 +0300;Merge branch 'release-2.1.1' into develop

==
==================
af9515f;Foo;2015-05-10 17:54:13 +0300;Update base version

==

setup.py
==================
b7e2a5d;Foo;2015-05-10 17:44:46 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
cf76231;Foo;2015-05-10 17:44:38 +0300;Make `side` argument non-optional
Closes #1294
==

powerline/commands/main.py
==================
dc3eb6f;Foo;2015-05-10 17:32:47 +0300;Merge branch 'fix-tmux-left-colors' into develop

==
==================
d8373dd;Foo;2015-05-10 17:29:57 +0300;Add missing tmux colors to solarized colorscheme
Closes #1214

==

powerline/config_files/colorschemes/solarized.json
powerline/config_files/colorschemes/tmux/solarized.json
==================
560627a;Nikolai Aleksandrovich Pavlov;2015-05-10 16:45:54 +0300;Merge pull request #1355 from ZyX-I/fix-1347
Fix tmux-2.0 support
==
==================
d6b6dd5;Foo;2015-05-10 16:11:53 +0300;Do use sourcing when using <=tmux-1.8 by default
Otherwise each set option is displayed which under tmux-1.8 results in `[tmux]` 
in the statusline in place of `bash` (actually it is fine to check only whether 
tmux is 1.8 or not).
==

powerline/bindings/config.py
powerline/bindings/tmux/powerline.conf
powerline/commands/config.py
==================
424d71e;Foo;2015-05-10 15:33:43 +0300;Use different string for tmux-2.0

==

tests/test_in_vterm/test_tmux.py
==================
a326153;Foo;2015-05-10 14:48:22 +0300;Disable fish tests
Properly fixing them is out of the scope of this PR

==

tests/test_shells/test.sh
==================
d11ddd0;Foo;2015-05-10 14:37:16 +0300;Add hostname executable when running shell tests

==

tests/test_shells/test.sh
==================
e7068b3;Foo;2015-05-09 01:06:17 +0300;Use `env` in status-left evaluation
Makes $POWERLINE_COMMAND contents interpreted in the same fashion as in
status-right.

==

powerline/bindings/tmux/powerline-base.conf
==================
bd9359c;Foo;2015-05-09 00:57:21 +0300;Use direct execution by default
Should make it not needed to bother with environment variables. Makes tmux
configuration more fragile.

Is a different variant of fixing #1354. Does not conflict with the previous one,
so both are kept.

==

powerline/bindings/config.py
powerline/bindings/tmux/__init__.py
powerline/bindings/tmux/powerline.conf
powerline/commands/config.py
==================
9f7e59d;Foo;2015-05-09 00:13:44 +0300;Ignore some tmux failures
Fixes #1354

==

powerline/bindings/config.py
powerline/bindings/tmux/__init__.py
==================
034b7d5;Nikolai Aleksandrovich Pavlov;2015-04-17 23:21:24 +0300;Merge pull request #1348 from ZyX-I/fix-1347
Fix warning when &l:statusline is set to a unicode value
==
==================
d464ff8;Foo;2015-04-17 22:01:10 +0300;Fix warning when &l:statusline is set to a unicode value
This normally should not happen because &l:stl should be powerline-controlled,
but some plugins do this.

Fixes #1347

==

powerline/vim.py
tests/test_foreign_stl_override.vim
==================
1fad6f4;Nikolai Aleksandrovich Pavlov;2015-04-04 22:43:32 +0300;Merge pull request #1344 from powerline/revert-1343-patch-1
Revert "Add note on outdated ArchLinux AUR Packages."
==
==================
e464074;Kim Silkebækken;2015-04-04 18:22:00 +0200;Revert "Add note on outdated ArchLinux AUR Packages."

==

docs/source/installation/linux.rst
==================
6b2b6d1;Nikolai Aleksandrovich Pavlov;2015-04-04 15:36:19 +0300;Merge pull request #1343 from radriaanse/patch-1
Add note on outdated ArchLinux AUR Packages.

Closes #1341
==
==================
a17d7c8;Remy Adriaanse;2015-04-04 09:46:32 +0200;Add note on outdated ArchLinux AUR Packages.

==

docs/source/installation/linux.rst
==================
364fc4d;Foo;2015-04-03 22:42:41 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
07cae38;Foo;2015-04-03 22:42:23 +0300;Reword troubleshooting question regarding automatic vimrc resoursing
Ref #1342
==

docs/source/troubleshooting.rst
==================
7eda0e5;Nikolai Aleksandrovich Pavlov;2015-03-11 22:53:24 +0300;Merge pull request #1332 from ZyX-I/fix-1331
Always write str() objects to the stream in echoerr
==
==================
6ca78c7;Foo;2015-03-11 22:50:00 +0300;Merge branch 'fix-1329' into develop

==
==================
ff49538;Foo;2015-03-11 22:49:36 +0300;Do not leak environment and home directory in documentation
Fixes #1329
==

docs/source/powerline_autodoc.py
==================
9960a8f;Foo;2015-03-11 22:08:30 +0300;Always write str() objects to the stream in echoerr
Fixes #1331

==

powerline/lint/markedjson/error.py
==================
6b0cd3d;Nikolai Aleksandrovich Pavlov;2015-03-01 17:41:51 +0300;Merge pull request #1327 from ZyX-I/fix-1322
Do not write empty lines above prompt and fix tcsh
==
==================
10c0c5b;Foo;2015-03-01 17:24:44 +0300;Add above tests for bash, fish and zsh

==

tests/test_shells/bash.daemon.ok
tests/test_shells/bash.nodaemon.ok
tests/test_shells/fish.ok
tests/test_shells/input.bash
tests/test_shells/input.fish
tests/test_shells/input.zsh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
==================
4a3798b;Foo;2015-03-01 17:23:07 +0300;Fix tcsh renderer: end prompt with a sequence that is not dropped

==

powerline/bindings/tcsh/powerline.tcsh
powerline/renderers/shell/tcsh.py
tests/test_shells/postproc.py
tests/test_shells/tcsh.ok
==================
209bff3;Foo;2015-03-01 16:17:09 +0300;Do not write empty lines from above, do not reset hl for empty lines
Fixes #1322

==

powerline/bindings/zsh/__init__.py
powerline/commands/main.py
powerline/renderer.py
==================
333116d;Nikolai Aleksandrovich Pavlov;2015-03-01 14:53:03 +0300;Merge pull request #1325 from ZyX-I/fix-su
Add missing highlight groups

Closes #1320 
Replaces #1323
==
==================
17d73dd;Foo;2015-03-01 14:29:07 +0300;Define __eq__ for marks

==

powerline/lint/markedjson/error.py
==================
93d2109;Foo;2015-03-01 14:25:40 +0300;Make messages from either check more sane

==

powerline/lint/markedjson/error.py
powerline/lint/spec.py
==================
704d4a4;Foo;2015-03-01 14:10:04 +0300;Remove non-keyword arguments from echoerr function

==

powerline/lint/markedjson/error.py
==================
b88a253;Foo;2015-03-01 14:05:42 +0300;Add definitions for missing highlight groups

==

powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/vim/__main__.json
==================
2d9e759;Foo;2015-03-01 13:51:22 +0300;Make sure that check_group actually tests presense of some group
It was not much useful actually: e.g. it skipped the fact that warning:regular
highlight group was not defined.

==

powerline/lint/checks.py
==================
d797a25;Nikolai Aleksandrovich Pavlov;2015-02-27 00:41:16 +0300;Merge pull request #1319 from ZyX-I/zsh-resource
Use special function for appending to precmd_functions
==
==================
76f7368;ZyX;2015-02-23 15:59:21 +0300;Use special function for appending to precmd_functions
This way there appear no duplicates.
==

powerline/bindings/zsh/powerline.zsh
==================
ca67970;Nikolai Aleksandrovich Pavlov;2015-02-21 20:33:05 +0300;Merge pull request #1317 from ZyX-I/gentoo-tests
Add some fixes for testing from ebuild
==
==================
3bf484d;ZyX;2015-02-21 19:02:37 +0300;Break on self.quitting line
This may also cause python-3.2 pdb test to error out.

==

tests/test_shells/postproc.py
==================
68b43c5;ZyX;2015-02-21 18:53:32 +0300;Disable pdb PyPy tests completely
They currently fail for the reason that does not seem related to powerline
(though this problem did not occur before porting tests to pexpect, so this
should be somewhat related (somewhat: PyPy fails on code `return br'\u%04x'
% ord(c)` which is no a valid Python code (`%` can no longer be used with
`bytes()` obects), the whole situation only means that before using pexpect bug
in PyPy was not hit)).

==

tests/test_shells/test.sh
==================
0058919;ZyX;2015-02-21 18:44:01 +0300;Remove blank lines from pdb output
It is the problem that causes python-3.2 pdb tests to fail on travis.

==

tests/test_shells/postproc.py
==================
9a89d4d;ZyX;2015-02-21 18:20:20 +0300;Do not special-case PyPy+ipython

==

tests/test_shells/test.sh
==================
74e81bf;ZyX;2015-02-21 18:17:23 +0300;Restore the timeout
There may be a reason for a test to take 3 minutes long, but there is no reason
for the test to take even half a minute long *without any output*.

==

tests/test_shells/run_script.py
==================
678faed;ZyX;2015-02-21 18:15:39 +0300;Force destroying child after everything was done
Normally this line should not do anything useful.

==

tests/test_shells/run_script.py
==================
b7c7d29;ZyX;2015-02-21 18:05:04 +0300;Use “non-blocking” read and stop on TIMEOUT and EOF

==

tests/test_shells/run_script.py
==================
deee405;ZyX;2015-02-21 17:56:13 +0300;Do not repeat `if` more times then needed

==

tests/test_shells/postproc.py
==================
38a05b3;ZyX;2015-02-21 17:55:49 +0300;Do not use “which ipython” in echo since it is no longer relevant

==

tests/test_shells/test.sh
==================
6a6991b;ZyX;2015-02-21 17:11:11 +0300;Use 3 minutes for timeout

==

tests/test_shells/run_script.py
==================
7d98218;ZyX;2015-02-21 16:58:39 +0300;Do not wait, just .read()
.read() without arguments should read until EOF is received.

==

tests/test_shells/run_script.py
==================
0a87b55;ZyX;2015-02-21 16:50:25 +0300;Do not use child.wait(), it hangs

==

tests/test_shells/run_script.py
==================
0710f27;ZyX;2015-02-21 16:11:04 +0300;Open log as binary file for writing
Child output is binary.
==

tests/test_shells/run_script.py
==================
d536133;ZyX;2015-02-21 16:08:50 +0300;Use script to test whether python zsh uses matches $PYTHON

==

tests/test_shells/test.sh
tests/test_shells/zsh_test_script.zsh
==================
0f86bbf;ZyX;2015-02-21 15:54:44 +0300;In place of running ipython executable run IPython module
This should fix the problem with using wrong ipython for tests.

==

tests/test_shells/test.sh
==================
b2ecb8c;ZyX;2015-02-21 15:35:58 +0300;Do not append PYTHON to *_REPO paths
$PYTHON variable is sometimes a full path which makes everything fail. It is
also useless move since directories are destroyed after tests and running two
test.sh scripts in parallel is not supported in any case.

==

tests/test_lib.py
==================
bb6342c;ZyX;2015-02-21 15:30:42 +0300;Tell tmux correct path to shell to use

==

tests/test_in_vterm/test_tmux.py
==================
d53c780;ZyX;2015-02-21 15:18:59 +0300;Do not use absolute path for tmux socket
Absolute path is too long when using tests in ebuild.

==

tests/test_in_vterm/test_tmux.py
==================
1e85f5d;ZyX;2015-02-21 15:09:41 +0300;Disable vterm tests for PyPy completely

==

tests/test_in_vterm/test.sh
==================
22162a9;ZyX;2015-02-21 14:03:34 +0300;Replace screen-based tests with pexpect-based tests
Currently works for all tests, but dash ones. Not much of a problem since dash
tests were disabled for being unstable.

==

tests/install.sh
tests/test_shells/run_script.py
tests/test_shells/screenrc
tests/test_shells/test.sh
==================
8524ee3;ZyX;2015-02-21 13:56:25 +0300;Ignore stderr from printf and env
socat may close pipe before they succeed to write something which results in

    env: write error: Broken pipe

(according to my experience leading printf’s always succeeds to write before
socat closes pipe).

==

client/powerline.sh
tests/test_shells/run_script.py
tests/test_shells/test.sh
==================
838a7c3;ZyX;2015-02-21 13:46:35 +0300;Fix the case when $0 is a path
I.e. something like /home/zyx/.vam/powerline/tests/shell/path/mksh.
==

powerline/bindings/shell/powerline.sh
==================
e6b3bff;ZyX;2015-02-21 03:42:58 +0300;Rerun main() only after running finally block

==

tests/test_in_vterm/test_tmux.py
==================
5ecf50b;ZyX;2015-02-21 03:32:26 +0300;Use different $HOME

==

tests/test_shells/test.sh
==================
6836919;ZyX;2015-02-21 02:21:11 +0300;Make sure that there is at least one blank line after full log

==

tests/test_shells/test.sh
==================
fb0fba6;ZyX;2015-02-21 02:00:13 +0300;Do not modify $PATH and $LD_LIBRARY_PATH unless on travis

==

tests/test.sh
==================
e7c381a;ZyX;2015-02-21 01:51:58 +0300;Make sure USER and HOME variables are defined

==

tests/test.sh
==================
be3fd91;ZyX;2015-02-21 01:29:10 +0300;Limit maximum amount of attempts to set register a

==

tests/test_shells/test.sh
==================
6343ff0;Nikolai Aleksandrovich Pavlov;2015-02-21 00:59:25 +0300;Merge pull request #1316 from ZyX-I/full-non-travis-tests
Make it possible to run the whole test suite outside of travis
==
==================
75c5295;ZyX;2015-02-21 00:08:12 +0300;Adjust fish version tests for bot-ci-compiled fish

==

tests/test_shells/test.sh
==================
0a0af21;ZyX;2015-02-20 23:48:26 +0300;Allow specifying path to libvterm from environment
Uses POWERLINE_LIBVTERM environment variable.
==

tests/test_in_vterm/test_tmux.py
==================
8629999;ZyX;2015-02-20 23:47:18 +0300;Make sure that it is possible to use “system” libvterm.so

==

tests/test_in_vterm/test_tmux.py
==================
02b31f3;ZyX;2015-02-20 23:37:13 +0300;Only run fish tests for development version or for 2.1.2 and higher
Currently tests also test Vi key bindings support, but it is not in any release 
yet.
==

tests/test_shells/test.sh
==================
b349d6e;ZyX;2015-02-20 23:16:01 +0300;Make sure that fish tests are not run for old fishes

==

tests/test_shells/test.sh
==================
4d09f4f;ZyX;2015-02-20 22:39:50 +0300;Do not run Vim tests if Vim is not available, fallback to system Vim

==

tests/run_vim_tests.sh
==================
8fff21d;ZyX;2015-02-20 22:36:39 +0300;Set the default value for POWERLINE_TMUX_EXE

==

tests/test_in_vterm/test.sh
==================
1445b5a;ZyX;2015-02-20 22:11:06 +0300;Merge branch 'update-qtile' into develop

==
==================
6cad7b0;ZyX;2015-02-20 17:08:04 +0300;Add information about supported versions to documentation

==

docs/source/usage.rst
==================
479e6af;ZyX;2015-02-20 16:39:08 +0300;Do not recreate layout if not needed

==

powerline/bindings/qtile/widget.py
==================
5ee860b;ZyX;2015-02-20 16:36:07 +0300;Rename timeout to update_interval

==

docs/source/usage/wm-widgets.rst
powerline/bindings/qtile/widget.py
==================
1742571;ZyX;2015-02-20 16:35:34 +0300;Use .timer_setup() to setup timer, fix error from cffi markup renderer
1. In qtile-0.9.1 .timeout_add() must be run after ._configure(). In qtile-0.8.0
   .timer_setup() is not run automatically.
2. New pango markup renderer (qtile-0.9.1) is not accepting unicode() objects,
   only str() ones as it converts them to cffi `char *`.

Fixes #1313

==

powerline/bindings/qtile/widget.py
==================
86bb161;ZyX;2015-02-20 16:19:04 +0300;Use new name and two sides in example configuration in documentation

==

docs/source/usage/wm-widgets.rst
==================
bf22894;ZyX;2015-02-20 16:15:21 +0300;Allow it to configure side

==

powerline/bindings/qtile/widget.py
==================
eda9d0d;ZyX;2015-02-20 16:14:19 +0300;Move the closing parenthesis to the next line

==

powerline/bindings/qtile/widget.py
==================
83e459c;ZyX;2015-02-20 16:09:06 +0300;Do not use private classes for qtile, do not rename Powerline class

==

powerline/bindings/qtile/widget.py
==================
6c96681;ZyX;2015-02-20 16:07:52 +0300;Update documentation

==

docs/source/usage/wm-widgets.rst
==================
b09c7b7;ZyX;2015-02-19 23:49:39 +0300;Merge branch 'update-requirements' into develop

==
==================
98455c4;ZyX;2015-02-19 23:08:25 +0300;Update Vim version requirements

==

docs/source/usage.rst
==================
ffcd8f7;ZyX;2015-02-19 23:06:33 +0300;Add information about fish requirements

==

docs/source/usage.rst
docs/source/usage/shell-prompts.rst
==================
9375b31;ZyX;2015-02-19 12:28:03 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
3c596ca;ZyX;2015-02-19 12:27:46 +0300;Do not forget to push develop to upstream

==

scripts/powerline-release.py
==================
ecc160c;ZyX;2015-02-19 12:25:42 +0300;Merge pull request #1312 from ZyX-I/stabilize-vterm-tests
Stabilize vterm tests

==
==================
feb9a57;ZyX;2015-02-19 11:35:29 +0300;Move code that prints tmux logs to test_tmux.py

==

tests/test_in_vterm/test.sh
tests/test_in_vterm/test_tmux.py
==================
3d8948c;ZyX;2015-02-19 11:27:18 +0300;Add missing newline in battery segment implementation

==

powerline/segments/common/bat.py
==================
f8ba6b0;ZyX;2015-02-19 11:19:38 +0300;Restart failed tmux vterm test a few times

==

tests/test_in_vterm/test_tmux.py
==================
abe9014;ZyX;2015-02-19 02:56:44 +0300;Merge branch 'release-2.1' into develop

==
==================
ceb0487;ZyX;2015-02-19 02:56:44 +0300;Update base version

==

setup.py
==================
5887650;ZyX;2015-02-19 02:56:15 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
d5d4e95;ZyX;2015-02-19 02:56:05 +0300;Fix typo in release script

==

scripts/powerline-release.py
==================
389e01f;ZyX;2015-02-19 02:50:47 +0300;Merge branch 'fix-client-compiling' into develop

==
==================
4c6a2e3;ZyX;2015-02-15 01:25:25 +0300;Also check that MIME type matches during tests
MIME type names are inconsistent across different systems, so only first
component is used. For example, `file` in Travis Ubuntu detects Python scripts
as `text/x-java`, in Gentoo these are `text/x-python`.

Travis Ubuntu also uses magic file format different from the one
sys-apps/file-5.22 from Gentoo has, making it impossible to fix the issue by
just copying the files from my system.

==

tests/test_shells/test.sh
==================
e233ca7;ZyX;2015-02-15 01:19:06 +0300;Fix compiling C client when using Python-2.6
`shlex.split` is inadequate when it receives Unicode strings: `u'-O3'` is split 
into a single argument that looks like `'-\x00O\x003\x00'`.
==

setup.py
==================
c1bcaaa;ZyX;2015-02-15 01:06:45 +0300;Merge branch 'pep440' into develop

==
==================
99830ba;ZyX;2015-02-15 01:04:58 +0300;Use PEP440-compatible versions
Fixes #1310
==

scripts/powerline-release.py
setup.py
==================
9823701;Nikolai Aleksandrovich Pavlov;2015-02-08 00:56:57 +0300;Merge pull request #1305 from sryze/patch-1
Fix link to colorschemes section
==
==================
e112eb4;Sergey Zolotarev;2015-02-08 02:31:53 +0500;Fix link to colorschemes section

==

docs/source/configuration.rst
==================
fc7057c;Nikolai Aleksandrovich Pavlov;2015-02-07 22:08:05 +0300;Merge pull request #1300 from ZyX-I/stabilize-vterm-tests
Another attempt to stabilize vterm tests
==
==================
04feda5;ZyX;2015-02-07 18:51:18 +0300;Merge branch 'update-documentation' into develop

==
==================
9e5bd5c;ZyX;2015-02-07 18:50:47 +0300;Replace obsolete advice to copy the entire configuration

==

docs/source/commands/lint.rst
docs/source/configuration.rst
==================
66c6128;ZyX;2015-02-07 11:14:09 +0300;Wait less in vterm tmux tests

==

tests/test_in_vterm/test_tmux.py
==================
d5d138f;ZyX;2015-02-07 11:13:16 +0300;Do not bother with testing or setting POWERLINE_CONFIG_COMMAND
Instead just test whether using $POWERLINE_CONFIG_COMMAND succeeds and if it 
does not run just `powerline-config tmux setup`. Problem is that tests in vterm 
fail *not* because sleeping time is too short, but because `powerline-config 
tmux setup` for some reason is not launched at all. I am not sure whether this 
construct is going to fix things.

Also ref #875. I am very unsure this commit will fix the issue, but since I do 
not know what is the reason for this issue at all… who knows.

==

powerline/bindings/tmux/powerline.conf
==================
e280313;Nikolai Aleksandrovich Pavlov;2015-02-07 05:13:57 +0300;Merge pull request #1299 from ZyX-I/stabilize-vterm-tests
Wait more before failing tmux vterm tests
==
==================
92d4bef;ZyX;2015-02-07 05:00:37 +0300;Wait more before failing tmux vterm tests
May fix random test failures.
==

tests/test_in_vterm/test_tmux.py
==================
43a9a25;Nikolai Aleksandrovich Pavlov;2015-02-07 04:27:43 +0300;Merge pull request #1290 from ZyX-I/pdb
Add support for Python debugger
==
==================
b40e45a;Nikolai Aleksandrovich Pavlov;2015-02-05 07:25:07 +0300;Merge pull request #1297 from seanfisk/c-client-connect-size
Fix socket address size on non-Linux platforms.
==
==================
17e0f74;Sean Fisk;2015-02-04 02:28:44 -0500;Fix socket address size on non-Linux platforms.

==

client/powerline.c
==================
d57be83;ZyX;2015-02-02 00:12:06 +0300;Do not alter the way keys are fed with PyPy

==

tests/test_shells/test.sh
==================
f4e3c30;ZyX;2015-02-01 12:13:56 +0300;Remove everything up until `class Foo(object):` in pdb tests
PyPy3 displays prompt two times on the line where `s` is present.
==

tests/test_shells/pdb.module.ok
tests/test_shells/pdb.subclass.ok
tests/test_shells/postproc.py
==================
c3e541d;ZyX;2015-02-01 12:08:09 +0300;Remove empty lines

==

tests/test_shells/postproc.py
==================
0db8154;ZyX;2015-01-31 21:32:16 +0300;Document how to pdb bindings with Python-2.6 and update tests

==

docs/source/usage/other.rst
tests/test_shells/test.sh
==================
e63a1c7;ZyX;2015-01-31 21:18:06 +0300;Display the log after long wait

==

tests/test_shells/test.sh
==================
d8252f6;ZyX;2015-01-31 21:09:39 +0300;Move main() into powerline.bindings.pdb

==

powerline/bindings/pdb/__init__.py
powerline/bindings/pdb/__main__.py
==================
f9d65fb;ZyX;2015-01-31 20:25:40 +0300;Do not wait for too long in do_run_test

==

tests/test_shells/test.sh
==================
2ef5107;ZyX;2015-01-31 20:23:10 +0300;Import overrides from environment in PDB prompts

==

docs/source/configuration/local.rst
docs/source/usage/other.rst
powerline/pdb.py
tests/test_shells/pdb.module.ok
tests/test_shells/pdb.subclass.ok
==================
5bc68b6;ZyX;2015-01-31 18:49:41 +0300;Define all groups in both default and solarized colorschemes

==

powerline/config_files/colorschemes/pdb/__main__.json
powerline/config_files/colorschemes/pdb/default.json
powerline/config_files/colorschemes/pdb/solarized.json
==================
f74320f;ZyX;2015-01-31 18:41:17 +0300;Add unit tests for pdb segments

==

tests/test_segments.py
==================
27291b5;ZyX;2015-01-31 18:30:26 +0300;Force ASCII-only prompt when using PyPy

==

docs/source/usage/other.rst
powerline/pdb.py
powerline/renderers/pdb.py
==================
682a9ab;ZyX;2015-01-31 18:21:33 +0300;Warn that PyPy is not supported

==

docs/source/usage/other.rst
==================
deacb9a;ZyX;2015-01-31 18:21:20 +0300;Add some methods to PowerlineRenderResult
This is an attempt to fix PDB prompt on PyPy. Does not work.

==

powerline/bindings/pdb/__init__.py
==================
ef02ab7;ZyX;2015-01-31 18:10:19 +0300;Also test powerline.bindings.pdb module

==

tests/test_shells/input.pdb
tests/test_shells/pdb.module.ok
tests/test_shells/pdb.ok
tests/test_shells/pdb.subclass.ok
tests/test_shells/test.sh
==================
47dbdd5;ZyX;2015-01-31 17:58:14 +0300;Add pdb integration tests

==

tests/test_shells/input.pdb
tests/test_shells/pdb-main.py
tests/test_shells/pdb-script.py
tests/test_shells/pdb.ok
tests/test_shells/postproc.py
tests/test_shells/test.sh
==================
cac9754;ZyX;2015-01-31 13:43:24 +0300;Add pdb-specific segments and make default theme use them

==

docs/source/configuration/listers.rst
docs/source/configuration/segments/pdb.rst
docs/source/develop/segments.rst
powerline/config_files/colorschemes/pdb/__main__.json
powerline/config_files/colorschemes/pdb/default.json
powerline/config_files/themes/pdb/default.json
powerline/listers/pdb.py
powerline/renderers/pdb.py
powerline/segments/pdb.py
==================
b0d2953;ZyX;2015-01-27 22:38:50 +0300;Add some hacks to make code compatible with pdbpp

==

powerline/bindings/pdb/__init__.py
==================
9bbec77;ZyX;2015-01-27 22:15:26 +0300;Add support for pdb prompt
Note: pdbpp is not supported, it has lots of problems with unicode<-->str
conversion (either explicit or implicit).

==

docs/source/develop/segments.rst
docs/source/usage/other.rst
powerline/bindings/pdb/__init__.py
powerline/bindings/pdb/__main__.py
powerline/config_files/config.json
powerline/config_files/themes/pdb/default.json
powerline/pdb.py
powerline/renderers/pdb.py
==================
7250cd4;ZyX;2015-01-27 20:24:45 +0300;Use `:py:meth` for referring to methods

==

powerline/renderer.py
==================
36d64bc;ZyX;2015-01-27 20:22:38 +0300;Remove unused `get_segment_info` method

==

powerline/vim.py
==================
f5d9674;ZyX;2015-01-27 20:13:19 +0300;Move IPython prompt and rcsh renderers into a separate module
Some applications that use readline use same variants of telling it where
highlighting starts and ends. This module will also be used for pdb.

==

powerline/bindings/rc/powerline.rc
powerline/renderers/ipython/__init__.py
powerline/renderers/shell/rcsh.py
powerline/renderers/shell/readline.py
==================
cddfc36;Nikolai Aleksandrovich Pavlov;2015-01-31 15:36:46 +0300;Merge pull request #1289 from ZyX-I/fix-lint-hl-groups
Fix highlight groups linting
==
==================
72d9b83;ZyX;2015-01-31 15:10:06 +0300;Fix linter errors: add necessary highlight groups or fix docstrings
Fixes #1136

==

powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/ipython/__main__.json
powerline/config_files/colorschemes/ipython/default.json
powerline/config_files/colorschemes/shell/__main__.json
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/colorschemes/solarized.json
powerline/segments/vim/plugin/commandt.py
==================
3b56cf7;ZyX;2015-01-31 13:49:05 +0300;Fix linting of highlight groups
Currently checks for highlight group existence do not work. With this commit
tests will fail due to #1136.

==

powerline/lint/__init__.py
powerline/lint/checks.py
==================
b22562b;ZyX;2015-01-26 20:39:49 +0300;Merge branch 'fix-1286' into develop

==
==================
c606db7;ZyX;2015-01-26 20:38:56 +0300;Remove call to a removed function
Function was removed in a90b080 (“Remove all exports”), but call survived.

Fixes #1286

==

powerline/bindings/fish/powerline-setup.fish
==================
edec421;Nikolai Aleksandrovich Pavlov;2015-01-25 19:20:09 +0300;Merge pull request #1285 from ZyX-I/fixed-1256
Add BAR support with i3 bindings
==
==================
ff0631c;ZyX;2015-01-25 17:02:54 +0300;Make sure powerline class knows that it will use UTF-8

==

powerline/bindings/bar/powerline-bar.py
==================
ea9eae6;ZyX;2015-01-25 16:59:36 +0300;Always write UTF-8 string

==

powerline/bindings/bar/powerline-bar.py
powerline/commands/main.py
powerline/lib/encoding.py
scripts/powerline-daemon
scripts/powerline-render
==================
1e7dc79;ZyX;2015-01-25 12:51:19 +0300;Fix issues found in 1256 pull request
Ref #1256
==

docs/source/usage/wm-widgets.rst
powerline/bindings/bar/powerline-bar.py
powerline/bindings/i3/powerline-bar.py
powerline/renderers/bar.py
tests/test_configuration.py
==================
dd77d42;S0lll0s;2015-01-08 00:03:34 +0100;Add BAR (bar ain't recursive) renderer and fitting i3 bindings

==

docs/source/usage/wm-widgets.rst
powerline/bindings/i3/powerline-bar.py
powerline/renderers/bar.py
tests/test_configuration.py
==================
9dfd40a;Nikolai Aleksandrovich Pavlov;2015-01-25 02:23:20 +0300;Merge pull request #1284 from ZyX-I/update-zpython
Update zpython bindings according to new zpython changes
==
==================
c0e5ef6;Nikolai Aleksandrovich Pavlov;2015-01-25 02:11:39 +0300;Merge pull request #1283 from ZyX-I/fix-configuration-tests
When testing Vim do not rely on test order and do not save state

Ref #1256
==
==================
614c17d;ZyX;2015-01-25 02:08:36 +0300;Do not use `zsh.eval` to unset special value

==

powerline/bindings/zsh/__init__.py
==================
96571cc;ZyX;2015-01-25 02:06:35 +0300;Use new `zsh.expand` function in place of `zsh.eval`

==

powerline/bindings/zsh/__init__.py
==================
332a266;ZyX;2015-01-25 01:58:27 +0300;When testing Vim do not rely on test order and do not save state
This commit refactors `TestVim` test class in test_configuration so that

1. `test_environ_update` does not leave state (value of `powerline_config_paths` 
   global Vim variable) behind other tests can use.
2. `test_local_themes` does not rely on state left from `test_environ_update`, 
   instead using new facility for providing needed value of 
   `Powerline.get_config_paths` call. This facility will be used later in BAR 
   tests.

Ref #1256
==

tests/lib/config_mock.py
tests/test_configuration.py
==================
ab4021a;ZyX;2015-01-25 01:24:05 +0300;Make sure that powerline.bindings.zsh is able to work with old zpython

==

powerline/bindings/zsh/__init__.py
==================
8b17a19;Nikolai Aleksandrovich Pavlov;2015-01-18 16:12:45 +0300;Merge pull request #1277 from ZyX-I/update-tests
Update code according to the changes in deps repository
==
==================
71322df;ZyX;2015-01-18 04:43:46 +0300;Use st-256color terminal for tests
Reasoning:

1. vt* TERMs (used to be vt100 here) make tmux-1.9 use different and identical
   colors for inactive windows. This is not like tmux-1.6: foreground color is
   different from separator color and equal to (0, 102, 153) for some reason
   (separator has correct color). tmux-1.8 is fine, so are older versions
   (though tmux-1.6 and tmux-1.7 do not have highlighting for previously active
   window) and my system tmux-1.9a.
2. screen, xterm and some other non-256color terminals both have the same issue
   and make libvterm emit complains like `Unhandled CSI SGR 3231`.
3. screen-256color, xterm-256color and other -256color terminals make libvterm
   emit complains about unhandled escapes to stderr.
4. `st-256color` does not have any of the above problems, but it may be not
   present on the target system because it is installed with x11-terms/st and
   not with sys-libs/ncurses.

For the given reasons decision was made: to fix tmux-1.9 tests and not make
libvterm emit any data to stderr st-256color $TERM should be used, up until
libvterm has its own terminfo database entry (if it ever will). To make sure
that relevant terminfo entry is present on the target system it should be
distributed with powerline test package. To make distribution not require
modifying anything outside of powerline test directory TERMINFO variable is set.

==

tests/terminfo/s/screen
tests/terminfo/s/st-256color
tests/test_in_vterm/test.sh
tests/test_in_vterm/test_tmux.py
==================
25a56df;ZyX;2015-01-18 03:52:12 +0300;Remove irrelevant logs

==

tests/test_in_vterm/test.sh
==================
71d7e39;ZyX;2015-01-18 03:50:12 +0300;Also supply LD_LIBRARY_PATH when killing server

==

tests/test_in_vterm/test_tmux.py
==================
c93a1b7;ZyX;2015-01-18 02:47:38 +0300;Run tests for all tmux versions present in deps

==

tests/test_in_vterm/test.sh
==================
2debb7c;ZyX;2015-01-18 02:20:32 +0300;Update code according to the changes in deps repository

==

tests/install.sh
tests/run_vim_tests.sh
tests/test.sh
==================
e02e6dc;Nikolai Aleksandrovich Pavlov;2015-01-17 00:55:49 +0300;Merge pull request #1265 from ZyX-I/fix-1264
Fix tmux bindings and add functional test for tmux
==
==================
6f6c466;ZyX;2015-01-17 00:41:28 +0300;Make sure LD_LIBRARY_PATH and PYTHONPATH are exported
LD_LIBRARY_PATH is required for UCS2 CPython versions.
==

tests/test_in_vterm/test_tmux.py
==================
f0d0ad1;ZyX;2015-01-17 00:25:46 +0300;Make sure PyPy3 is not used with vterm tests

==

tests/test_in_vterm/test.sh
==================
1e25c5e;ZyX;2015-01-17 00:19:26 +0300;After failing tmux vterm tests run powerline-config
Its output may give some clue.

==

tests/test_in_vterm/test_tmux.py
==================
a0edccc;ZyX;2015-01-16 23:01:51 +0300;Increase sleeping time
It appears that just one second is not enough for travis

==

tests/test_in_vterm/test_tmux.py
==================
44273f2;ZyX;2015-01-16 22:50:36 +0300;Do not print the whole screen unles something went wrong

==

tests/test_in_vterm/test_tmux.py
==================
c43bd06;ZyX;2015-01-16 22:50:18 +0300;Use `env` for running $POWERLINE_CONFIG_COMMAND
This way we are making sure that this variable is always treated as a single
path to executable which is not so in case of `eval`.

==

powerline/bindings/tmux/powerline.conf
==================
faef458;ZyX;2015-01-16 22:44:34 +0300;Add support for old tmux versions in tests
Tmux-1.6 does not have special highlighting for previously active window. Other
then that view is identical.

==

tests/test_in_vterm/test_tmux.py
==================
edb416f;ZyX;2015-01-16 22:44:16 +0300;Make sure tmux will run powerline-config *after* testing env var
It appears that old tmux *also* spawns `if-shell` tests in background
effectively making it impossible to use in config like it was used before.

==

powerline/bindings/tmux/powerline.conf
==================
b23daa2;ZyX;2015-01-16 22:34:44 +0300;Join setenv and source actions into one
It appears that tmux-1.6 is not able to function properly. Most likely this is
because prior to some tmux version running shell commands in background is the
default and only option and starting from some version `run-shell` does not run
processes in background *by default*.

This means that `source` action is run while `setenv` action is running and
since `source` needs to load a bunch of configuration files, *including*
importing a bunch of modules when creating renderer `source` and corresponding
tmux actions are finished earlier.

It is only a guess though: I am not even seeing race condition: `source` *is*
run, `setenv` also *is*, but `source` is *always* before `setenv`.

==

powerline/bindings/config.py
powerline/bindings/tmux/powerline.conf
powerline/commands/config.py
==================
70b1e34;ZyX;2015-01-16 22:26:12 +0300;Rename .bindings.config.init_environment to init_tmux_environment
Otherwise it is not clear what environment is initialised.

==

powerline/bindings/config.py
powerline/commands/config.py
==================
939b2ca;ZyX;2015-01-16 22:25:03 +0300;Replace empty attributes list with `none`
Tmux-1.6 also thinks that empty value for window-status-…-attr options is
invalid

==

powerline/bindings/config.py
==================
9db1e7b;ZyX;2015-01-16 21:45:48 +0300;Use tmux executable from fake PATH for running tmux
Otherwise with system tmux present it may appear that subprocess.check_call will
use it instead.

==

tests/test_in_vterm/test_tmux.py
==================
d9ed3a3;ZyX;2015-01-16 21:41:42 +0300;Do not use “no…” attributes in legacy options
Tmux-1.6 found in travis does not accept this.

==

powerline/bindings/config.py
==================
a4525c8;ZyX;2015-01-11 05:46:34 +0300;Remove invalid label and fix typo in Rcsh prompt documentation

==

docs/source/usage/shell-prompts.rst
==================
93acec2;ZyX;2015-01-11 03:09:14 +0300;Create vterm-based tests that will test tmux support
It is possible that they eventually will be used also for shells: at least this
makes using postproc.py with all its hacks not needed.

==

tests/install.sh
tests/lib/terminal.py
tests/lib/vterm.py
tests/run_vterm_tests.sh
tests/test_in_vterm/test.sh
tests/test_in_vterm/test_tmux.py
==================
02aa123;ZyX;2015-01-15 20:53:38 +0300;Merge branch 'pull-1271' into develop
This is squashed version of six commits from PR that adds support for battery
status on cygwin platform.

Closes #1271

==
==================
59bd853;Michael Snead;2015-01-12 15:15:38 -0500;Change to ctypes, remove WMIC

==

powerline/segments/common/bat.py
==================
93295fd;aikeru;2015-01-11 17:32:59 -0500;Add support for cygwin battery status using WMIC

==

powerline/segments/common/bat.py
==================
761a035;Nikolai Aleksandrovich Pavlov;2015-01-12 07:54:04 +0300;Merge pull request #1270 from ZyX-I/fix-1268
Make sure python_to_vim function is able to format lists
==
==================
f1aeb7a;ZyX;2015-01-11 18:19:16 +0300;Make sure python_to_vim function is able to format lists
Fixes #1268

==

powerline/bindings/vim/__init__.py
==================
4abeab0;ZyX;2015-01-11 00:34:54 +0300;Make ext a list
Ref #1264
==

powerline/bindings/config.py
==================
5d73ca8;ZyX;2015-01-11 00:22:52 +0300;Add missing argument to os.environ
Fixes #1264
==

powerline/bindings/config.py
==================
d562844;Nikolai Aleksandrovich Pavlov;2015-01-09 18:37:08 +0300;Merge pull request #1263 from ZyX-I/rc-remove-read-failed
When using `rc` remove “read() failed” messages
==
==================
9511c45;ZyX;2015-01-09 17:42:20 +0300;Make sure to remove logs before retrying

==

tests/test_shells/test.sh
==================
0a8e94d;ZyX;2015-01-09 17:40:05 +0300;When using `rc` remove “read() failed” messages

==

tests/test_shells/postproc.py
==================
1a2e741;ZyX;2015-01-09 16:54:03 +0300;Merge branch 'now_playing-doc-fixes' into develop

==
==================
435baf9;ZyX;2015-01-09 16:52:01 +0300;Allow wrapping of RTD tables

==

docs/source/_static/css/theme_overrides.css
docs/source/conf.py
==================
886c38c;Nikolai Aleksandrovich Pavlov;2015-01-08 19:55:22 +0300;Merge pull request #1260 from ZyX-I/doc-fixes
Some documentation changes
==
==================
7dbbc10;ZyX;2015-01-08 18:24:09 +0300;Remove you from most of the documentation

==

docs/source/configuration.rst
docs/source/configuration/local.rst
docs/source/configuration/reference.rst
docs/source/develop/extensions.rst
docs/source/develop/listers.rst
docs/source/develop/local-themes.rst
docs/source/develop/segments.rst
docs/source/installation.rst
docs/source/installation/linux.rst
docs/source/installation/osx.rst
docs/source/usage.rst
docs/source/usage/other.rst
docs/source/usage/shell-prompts.rst
docs/source/usage/wm-widgets.rst
==================
8f43fb6;Nikolai Aleksandrovich Pavlov;2015-01-08 18:22:48 +0300;Merge pull request #1259 from ZyX-I/replace-foreground
Allow --foreground to be used with --replace
==
==================
b00d7ee;ZyX;2015-01-08 17:08:25 +0300;Prettify --quiet daemon argument definition

==

powerline/commands/daemon.py
==================
9950575;ZyX;2015-01-08 17:07:08 +0300;Add line breaks to powerline/commands/config.py

==

powerline/commands/config.py
==================
d37711a;ZyX;2015-01-08 17:05:18 +0300;Prettify powerline.commands.lint

==

powerline/commands/lint.py
==================
84b0fa0;ZyX;2015-01-08 17:03:15 +0300;Enhance --renderer-module documentation

==

powerline/commands/main.py
==================
2faa158;ZyX;2015-01-08 16:58:28 +0300;Format powerline/commands/main.py to make it more readable

==

powerline/commands/main.py
==================
afcd8e4;ZyX;2015-01-08 16:50:48 +0300;Fix typo in rcsh support documentation

==

docs/source/usage/shell-prompts.rst
==================
0c37948;ZyX;2015-01-08 16:47:56 +0300;Allow --foreground to be used with --replace
Fixes #1235

==

docs/source/powerline_automan.py
powerline/commands/daemon.py
scripts/powerline-daemon
==================
3547ed0;Nikolai Aleksandrovich Pavlov;2015-01-08 04:31:05 +0300;Merge pull request #1255 from ZyX-I/rc-shell
Add support for Byron Rakitzis’ rc shell reimplementation
==
==================
c6bf5fb;ZyX;2015-01-08 01:46:16 +0300;Add support for Byron Rakitzis’ rc shell reimplementation
Fixes #1238

==

docs/source/develop/segments.rst
docs/source/usage/shell-prompts.rst
powerline/bindings/rc/powerline.rc
powerline/commands/main.py
powerline/renderers/shell/rcsh.py
tests/install.sh
tests/test_cmdline.py
tests/test_segments.py
tests/test_shells/input.rc
tests/test_shells/rc.daemon.ok
tests/test_shells/rc.nodaemon.ok
tests/test_shells/test.sh
==================
0942b3d;ZyX;2015-01-08 00:12:48 +0300;Make sure that if client_id is None then width is not used

==

powerline/renderers/shell/__init__.py
==================
3ba6948;Nikolai Aleksandrovich Pavlov;2015-01-08 03:28:46 +0300;Merge pull request #1257 from ZyX-I/ipython-fixes
Apply some fixes for IPython bindings
==
==================
d6e0dc7;ZyX;2015-01-08 02:30:03 +0300;Use more then one attempt to run shell tests
They are rather unstable, especially IPython + PyPy, but others also are.

==

tests/test_shells/test.sh
==================
652613a;ZyX;2015-01-08 03:02:36 +0300;Make Powerline.render respect output_width as well

==

powerline/__init__.py
==================
2961e98;ZyX;2015-01-08 02:55:44 +0300;Supply correct config_paths

==

tests/test_shells/ipython_home/profile_default/ipython_config.py
==================
6b23430;ZyX;2015-01-08 02:47:48 +0300;Make sure client_id for IPython is not None

==

powerline/renderers/ipython/__init__.py
==================
eb026d3;Nikolai Aleksandrovich Pavlov;2015-01-08 00:01:57 +0300;Merge pull request #1254 from ZyX-I/fix-zpython-bindings
Supply default_mode in zpython bindings
==
==================
594c6df;Nikolai Aleksandrovich Pavlov;2015-01-08 00:01:03 +0300;Merge pull request #1253 from ZyX-I/fix-lint
Fix powerline-lint
==
==================
25b6643;ZyX;2015-01-07 21:30:24 +0300;Supply default_mode in zpython bindings

==

powerline/bindings/zsh/__init__.py
==================
7eed352;ZyX;2015-01-07 21:25:46 +0300;Rewrite file loading code
Apparently old variant did not bother to check user configuration and in any 
case was unnecessary complex.
==

powerline/lint/__init__.py
==================
7d4440f;Nikolai Aleksandrovich Pavlov;2015-01-07 20:14:46 +0300;Merge pull request #1252 from ZyX-I/shell-vars
Remove all exports from shell bindings
==
==================
7d6b9c5;ZyX;2015-01-07 20:02:25 +0300;Also save what was merged in

==

powerline/lib/dict.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/markedvalue.py
==================
ee78221;ZyX;2015-01-07 19:55:00 +0300;Save information about old values of values

==

powerline/lint/markedjson/error.py
powerline/lint/markedjson/markedvalue.py
==================
347f20d;ZyX;2015-01-07 19:06:08 +0300;Refactor FSTree to not use reduce as it is not present in Python-3
I.e. it is not builtin and requires heavy variant with trying to import it from
functools.

==

tests/lib/fsconfig.py
==================
a90b080;ZyX;2015-01-07 18:52:55 +0300;Remove all exports
Fixes #1239

==

powerline/bindings/fish/powerline-setup.fish
powerline/bindings/zsh/powerline.zsh
powerline/commands/main.py
powerline/segments/shell.py
==================
c9d1b81;Nikolai Aleksandrovich Pavlov;2015-01-07 18:36:12 +0300;Merge pull request #1249 from ZyX-I/refactor-overrides
Refactor overrides
==
==================
0e75400;ZyX;2015-01-07 16:24:48 +0300;Make sure that overrides do not affect Vim and IPython
Fixes #1201

==

tests/run_vim_tests.sh
tests/test_shells/test.sh
==================
fbd529d;ZyX;2015-01-07 15:21:33 +0300;Merge branch 'update-documentation' into develop

==
==================
3c21c0f;ZyX;2015-01-07 15:20:29 +0300;Fix Linux installation instructions
Fixes #1251
==

docs/source/installation/linux.rst
==================
bac851b;ZyX;2015-01-07 15:17:40 +0300;Add ``powerline-status`` to OS X installation documentation

==

docs/source/installation/osx.rst
==================
21e6e5b;ZyX;2015-01-07 15:15:31 +0300;Make installation docs mention powerline-status first, reword them

==

docs/source/installation.rst
==================
c3e6c2a;ZyX;2015-01-07 15:07:27 +0300;Make POWERLINE_COMMAND a single path without arguments
Ref #1201
==

docs/source/configuration/local.rst
powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/shell/powerline.sh
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/tmux/powerline-base.conf
powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
powerline/bindings/zsh/powerline.zsh
tests/test_shells/test.sh
==================
1030075;ZyX;2015-01-07 05:14:41 +0300;Also do not allow empty paths in zpython bindings

==

powerline/bindings/zsh/__init__.py
==================
a01870c;ZyX;2015-01-07 05:13:48 +0300;Also use it in `get_config_paths`

==

powerline/__init__.py
==================
efecf40;ZyX;2015-01-07 05:12:48 +0300;Use `powerline.lib.path.join` in `_find_config_files()`

==

powerline/__init__.py
==================
76f5a60;ZyX;2015-01-07 05:02:08 +0300;Fix `TypeError` in Python-3.2
This code may raise

    TypeError: string argument without an encoding
==

powerline/bindings/zsh/__init__.py
==================
df5f5e9;ZyX;2015-01-07 04:27:40 +0300;Ignore empty elements in POWERLINE_CONFIG_PATHS
Ref #1201
==

docs/source/configuration/local.rst
powerline/commands/main.py
==================
972a55a;ZyX;2015-01-07 01:21:59 +0300;Make sure to add paths from `POWERLINE_CONFIG_PATHS` to args

==

powerline/commands/main.py
==================
4d35167;ZyX;2015-01-07 00:17:56 +0300;Avoid using overrides in $POWERLINE_COMMAND

==

docs/source/configuration/local.rst
tests/test_shells/bash.daemon.ok
tests/test_shells/bash.nodaemon.ok
tests/test_shells/busybox.daemon.ok
tests/test_shells/busybox.nodaemon.ok
tests/test_shells/dash.daemon.ok
tests/test_shells/dash.nodaemon.ok
tests/test_shells/input.bash
tests/test_shells/input.busybox
tests/test_shells/input.dash
tests/test_shells/input.fish
tests/test_shells/input.mksh
tests/test_shells/input.tcsh
tests/test_shells/mksh.daemon.ok
tests/test_shells/mksh.nodaemon.ok
tests/test_shells/test.sh
==================
2b880c4;ZyX;2015-01-06 22:52:35 +0300;Suggest using old-style overrides for testing purposes only

==

docs/source/configuration/local.rst
==================
98ae55c;ZyX;2015-01-06 22:52:08 +0300;Lower the priority of environment variables overrides

==

powerline/commands/main.py
==================
a47a486;ZyX;2015-01-06 22:47:35 +0300;Make `powerline-config` also accept overrides from env variables
Ref #1201

==

powerline/bindings/config.py
powerline/commands/main.py
powerline/tmux.py
==================
87ebe41;ZyX;2015-01-06 22:30:49 +0300;Make zsh tests use new environment variables

==

tests/test_shells/input.zsh
==================
07f82fe;ZyX;2015-01-06 22:17:28 +0300;Use `zsh.environ` if possible

==

powerline/bindings/zsh/__init__.py
==================
4f268cb;ZyX;2015-01-06 22:12:56 +0300;Make zsh bindings support string override variants
Ref #1201

==

powerline/bindings/zsh/__init__.py
==================
917dfed;ZyX;2015-01-06 22:05:51 +0300;Take overrides from environment variables
Ref #1201

==

docs/source/configuration/local.rst
powerline/bindings/zsh/__init__.py
powerline/commands/main.py
powerline/lib/__init__.py
powerline/lib/dict.py
powerline/lib/overrides.py
scripts/powerline-daemon
scripts/powerline-render
tests/test_cmdline.py
==================
1451b42;ZyX;2015-01-06 21:02:13 +0300;Rename `paths` IPython override to `config_paths`
Fixes #1126

==

docs/source/configuration/local.rst
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/ipython.py
tests/test_provided_config_files.py
==================
de06455;ZyX;2015-01-06 21:00:36 +0300;Rename `POWERLINE_THEME_CONFIG` to `POWERLINE_THEME_OVERRIDES`
Ref #1126

==

docs/source/configuration/local.rst
powerline/bindings/zsh/__init__.py
tests/test_shells/input.zsh
==================
45ccbee;ZyX;2015-01-06 20:58:46 +0300;Use singular --*-override form for command-line overrides
Ref #1126

==

docs/source/configuration/local.rst
powerline/bindings/zsh/__init__.py
powerline/commands/main.py
powerline/shell.py
scripts/powerline-daemon
tests/lib/__init__.py
tests/test_cmdline.py
tests/test_provided_config_files.py
==================
4b49640;ZyX;2015-01-07 00:19:42 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
2f885eb;ZyX;2015-01-07 00:19:33 +0300;Fix function name
Fixes #1248
==

powerline/bindings/config.py
==================
4bae6c6;ZyX;2015-01-06 20:57:45 +0300;Make `powerline-lint` also use dashes
Ref #1125
==

powerline/commands/lint.py
==================
1c29ea3;ZyX;2015-01-06 20:48:39 +0300;Use g:powerline_theme_overrides dictionary in place of g:…overrides__
Ref #1126
==

docs/source/configuration/local.rst
powerline/vim.py
tests/test_local_overrides.vim
==================
28ec9a5;Nikolai Aleksandrovich Pavlov;2015-01-06 20:34:40 +0300;Merge pull request #1247 from ZyX-I/remove-obsolete-segments
Remove obsolete segments
==
==================
a583c17;ZyX;2015-01-06 16:40:21 +0300;Remove deprecation warning from powerline.lint.imp
Fixes #1117

==

powerline/lint/imp.py
==================
22ae6a6;ZyX;2015-01-06 16:39:20 +0300;Remove `now_playing` data from top-level themes
Ref #1117

==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/powerline_unicode7.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
==================
52e1be9;ZyX;2015-01-06 16:37:56 +0300;Remove `now_playing` highlight group from ….players.PlayerSegment

==

powerline/segments/common/players.py
==================
70ae1aa;ZyX;2015-01-06 16:36:41 +0300;Remove now_playing segment
Ref #1117

==

powerline/segments/common/players.py
==================
2528a2c;ZyX;2015-01-06 16:35:46 +0300;Remove deprecation warning from powerline.lint.imp
Fixes #1092

==

powerline/lint/imp.py
==================
654d469;ZyX;2015-01-06 16:34:42 +0300;Remove all segments from powerline.segments.common
Ref #1092

==

powerline/segments/common/__init__.py
tests/test_configuration.py
tests/test_segments.py
==================
4c71769;Nikolai Aleksandrovich Pavlov;2015-01-06 16:43:23 +0300;Merge pull request #1246 from ZyX-I/consistency-changes
Create some incompatible consistency changes
==
==================
09afbc4;ZyX;2015-01-06 16:29:54 +0300;Replace underscores with dashes in long options
Fixes #1125
==

docs/source/configuration/local.rst
powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/shell/powerline.sh
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
powerline/commands/config.py
powerline/commands/main.py
powerline/segments/shell.py
tests/test_cmdline.py
==================
16bf164;ZyX;2015-01-06 16:19:47 +0300;Rename `POWERLINE_CONFIG` to `POWERLINE_CONFIG_OVERRIDES`
Fixes #1124
Ref #1126
==

docs/source/configuration/local.rst
powerline/bindings/zsh/__init__.py
tests/test_shells/input.zsh
==================
2a2da9d;ZyX;2015-01-06 16:17:51 +0300;Use `env` to run $POWERLINE_CONFIG_COMMAND in fish
Reasoning: everywhere else $POWERLINE_CONFIG_COMMAND specifies one command, not 
command with arguments. But with eval this is changed. `env` will receive this 
variable as one argument, so the meaning is consistent again.
==

powerline/bindings/fish/powerline-setup.fish
==================
b17d03e;ZyX;2015-01-06 16:16:39 +0300;Rename `POWERLINE_CONFIG` to `POWERLINE_CONFIG_COMMAND` where appropriate
Ref #1124
==

docs/source/configuration/local.rst
powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/shell/powerline.sh
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
==================
983315b;ZyX;2015-01-06 16:11:17 +0300;Fix documentation of network_load segment

==

powerline/segments/common/net.py
==================
79f6853;ZyX;2015-01-06 16:07:47 +0300;Rename `detect` to `auto` special values in network segments
Fixes #1205

==

powerline/segments/common/net.py
tests/test_segments.py
==================
33b44e8;ZyX;2015-01-06 15:54:09 +0300;Check function documentation for invalid identifiers
Fixes #1216

==

powerline/lint/__init__.py
powerline/lint/checks.py
==================
d8f0304;ZyX;2015-01-06 15:35:27 +0300;Make linter treat `a.b` highlight group names as not correct
Ref #1216

==

powerline/lint/__init__.py
==================
9d90552;ZyX;2015-01-06 15:33:39 +0300;Rename highlight groups: `plugin.` to `plugin:`
Ref #1216

==

powerline/config_files/themes/vim/plugin_gundo-preview.json
powerline/config_files/themes/vim/plugin_gundo.json
powerline/segments/vim/plugin/nerdtree.py
powerline/segments/vim/plugin/syntastic.py
==================
c868f9c;ZyX;2015-01-06 15:25:18 +0300;Rename `attr` to `attrs`
Fixes #1199

==

docs/source/configuration/reference.rst
powerline/bindings/config.py
powerline/colorscheme.py
powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/ipython/default.json
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/colorschemes/solarized.json
powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
powerline/lint/__init__.py
powerline/renderer.py
powerline/renderers/i3bar.py
powerline/renderers/pango_markup.py
powerline/renderers/shell/__init__.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/theme.py
tests/lib/config_mock.py
tests/test_config_merging.py
tests/test_config_reload.py
tests/test_configuration.py
==================
8d05003;ZyX;2015-01-06 15:13:43 +0300;Rename `highlight_group` key to `highlight_groups`
Ref #1199

==

docs/source/configuration/reference.rst
docs/source/develop/segments.rst
powerline/config_files/themes/ipython/in.json
powerline/config_files/themes/ipython/in2.json
powerline/config_files/themes/ipython/out.json
powerline/config_files/themes/ipython/rewrite.json
powerline/config_files/themes/shell/select.json
powerline/config_files/themes/vim/cmdwin.json
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/vim/help.json
powerline/config_files/themes/vim/plugin_commandt.json
powerline/config_files/themes/vim/plugin_gundo-preview.json
powerline/config_files/themes/vim/plugin_gundo.json
powerline/config_files/themes/vim/plugin_nerdtree.json
powerline/config_files/themes/vim/quickfix.json
powerline/config_files/themes/vim/tabline.json
powerline/lint/__init__.py
powerline/lint/checks.py
powerline/segment.py
powerline/segments/common/bat.py
powerline/segments/common/env.py
powerline/segments/common/mail.py
powerline/segments/common/net.py
powerline/segments/common/players.py
powerline/segments/common/sys.py
powerline/segments/common/time.py
powerline/segments/common/vcs.py
powerline/segments/common/wthr.py
powerline/segments/i3wm.py
powerline/segments/shell.py
powerline/segments/vim/__init__.py
powerline/segments/vim/plugin/commandt.py
powerline/segments/vim/plugin/nerdtree.py
powerline/segments/vim/plugin/syntastic.py
tests/test_config_merging.py
tests/test_config_reload.py
tests/test_configuration.py
tests/test_segments.py
==================
4cef866;Nikolai Aleksandrovich Pavlov;2015-01-06 14:55:32 +0300;Merge pull request #1245 from ZyX-I/drop-ctrlp
Remove Control-P plugin support
==
==================
4e6b0a7;ZyX;2015-01-06 03:57:38 +0300;Remove Control-P plugin support
If somebody needs to readd it he should make better code, specifically:

- Functions and variables necessary for supporting Control-P need to be defined 
  in a separate initialiazation function that is only called if Control-P was 
  found.
- Segments that show different information must be defined as separate segments 
  that may be put into configuration file.
- Segment functions must not know side they are on.
- Segment functions must not emit `priority`, it must go to configuration file.
- Segment functions must have proper documentation.
- Segment functions must not emit `width` and `align` keys.
- String `Loading...` or the equivalent must be overridable from configuration, 
  same for other interface strings (e.g. what is shown  when `regex` is true).
- Segment functions must have names that make it clear what they emit.

Closes #1244
==

docs/source/configuration/segments/vim.rst
powerline/config_files/config.json
powerline/config_files/themes/vim/plugin_ctrlp.json
powerline/matchers/vim/plugin/ctrlp.py
powerline/segments/vim/plugin/ctrlp.py
tests/test_ctrlp_plugin.vim
tests/test_provided_config_files.py
tests/vim.py
==================
8a09aba;Nikolai Aleksandrovich Pavlov;2015-01-06 03:36:54 +0300;Merge pull request #1230 from ZyX-I/integration-tests
Improve integration tests
==
==================
de328b2;ZyX;2015-01-06 03:24:44 +0300;Make VimVarHandler a new style class
Python-2.6 emits some strange problem:

    TypeError: super() argument 1 must be type, not classobj

. This means that in Python-2.6 `logging.Handler` is an old style class.

Ref http://stackoverflow.com/questions/1713038.
==

powerline/vim.py
==================
733b09f;ZyX;2015-01-06 02:53:58 +0300;Revert "Add tagbar plugin tests": don’t know how to make it work
This reverts commit fb652d5126534f4a881473b9af5ad8db6b62dc53.

==

tests/test_tagbar_plugin.vim
==================
fb652d5;ZyX;2015-01-06 01:38:45 +0300;Add tagbar plugin tests

==

tests/test_tagbar_plugin.vim
==================
548e330;ZyX;2015-01-06 01:13:48 +0300;Add NERDTree tests

==

tests/test_nerdtree_plugin.vim
tests/vim_utils.vim
==================
2bd25d7;ZyX;2015-01-06 01:04:49 +0300;Test Command-T plugin

==

tests/test_commandt_plugin.vim
==================
d8307b0;ZyX;2015-01-06 00:02:03 +0300;Create tests for CtrlP

==

tests/install.sh
tests/setup_statusline_catcher.py
tests/test_ctrlp_plugin.vim
tests/vim_utils.vim
==================
aa456e4;ZyX;2015-01-05 23:53:37 +0300;Fix error present when trying to use CtrlP
Ref #1244

==

powerline/segments/vim/plugin/ctrlp.py
==================
e1e591f;ZyX;2015-01-05 23:52:18 +0300;Improve error reporting: do not fail on one segment in theme.py

==

powerline/segment.py
powerline/theme.py
==================
dbc9948;ZyX;2015-01-05 23:43:36 +0300;Also set prefix when processing segments in parsed_segments list

==

powerline/theme.py
==================
1c1d33d;ZyX;2015-01-05 23:33:06 +0300;Create a way to log to the list in Vim

==

docs/source/configuration/local.rst
docs/source/configuration/reference.rst
powerline/__init__.py
powerline/vim.py
==================
d51a502;ZyX;2015-01-03 00:19:20 +0300;Use $ROOT in place of $PWD in run_vim_tests, set $PYTHONPATH
Checking whether this fixes Python-2.6 build failure

==

tests/run_vim_tests.sh
==================
6b89c8e;ZyX;2015-01-03 00:07:07 +0300;Preserve old value of LD_LIBRARY_PATH

==

tests/install.sh
tests/test.sh
==================
e86ec8b;ZyX;2015-01-03 00:04:11 +0300;Make sure not to add colon unless required

==

tests/test.sh
==================
375a169;ZyX;2015-01-02 23:43:35 +0300;Install bc as it is required by test_shells/test.sh

==

tests/install.sh
==================
c9e1dd8;ZyX;2015-01-02 22:46:43 +0300;Check whether specifying python==UCS2_PYTHON_VARIANT fixes Vim problem

==

.travis.yml
==================
c7fe5db;ZyX;2015-01-02 21:31:39 +0300;Use `set -e` for testing shells

==

tests/test_shells/test.sh
==================
c01cc35;ZyX;2015-01-02 17:45:09 +0300;Do not double-check exceptions

==

powerline/bindings/zsh/__init__.py
==================
4eb6ec8;ZyX;2015-01-02 17:44:26 +0300;Also make sure that get_var_config uses unicode values

==

powerline/bindings/zsh/__init__.py
==================
3f5cedb;ZyX;2015-01-02 15:46:10 +0300;Make sure that mode value from zpython bindings is unicode

==

powerline/bindings/zsh/__init__.py
==================
9374d13;ZyX;2015-01-02 15:02:13 +0300;Do not install pyuv watcher in Python-2.6
If pyuv watcher is installed then powerline.lib.vcs tests do not pass because
pyuv is missing notify events and INotify watcher is not available.

Ref #1041

==

tests/install.sh
==================
6a339a3;ZyX;2015-01-02 13:40:04 +0300;Install built fish

==

tests/install.sh
tests/test.sh
==================
f311f75;ZyX;2015-01-02 00:04:43 +0300;Install libssl1.0.0
Should be required for Python sha256 hash to work. Actually it should be
installed already.

==

tests/install.sh
==================
f2fd920;ZyX;2015-01-02 03:43:57 +0300;Add support for testing zsh with zpython bindings

==

tests/test.sh
tests/test_shells/input.zsh
tests/test_shells/test.sh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
tests/test_shells/zsh.zpython.ok
==================
2be849d;ZyX;2014-12-13 14:21:57 +0300;Add support for modes to zpython bindings

==

powerline/bindings/zsh/__init__.py
==================
696793a;ZyX;2015-01-02 03:43:37 +0300;Remove inconsistent ShellPowerline.theme_option attribute
Other overrides are accessed via ShellPowerline.args.

==

powerline/shell.py
==================
0898a69;ZyX;2014-12-13 14:12:22 +0300;Add `powerline-reload-config` command

==

powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
==================
029dc92;ZyX;2014-12-13 14:11:38 +0300;Fix zpython overrides

==

powerline/bindings/zsh/__init__.py
powerline/lib/__init__.py
==================
7181c1d;ZyX;2014-12-13 13:42:46 +0300;Move some functions to powerline.lib.dict
Moved functions: `merge*` from `powerline.lib` and `mergeargs` from
`powerline.commands.main`.

==

powerline/__init__.py
powerline/commands/main.py
powerline/ipython.py
powerline/lib/__init__.py
powerline/lib/dict.py
powerline/lint/__init__.py
powerline/shell.py
powerline/vim.py
tests/test_config_merging.py
tests/test_lib.py
==================
9ae76a9;ZyX;2014-12-10 08:36:27 +0300;Use UCS2 Python versions for running tests

==

.travis.yml
tests/install.sh
tests/run_vim_tests.sh
tests/test.sh
tests/test_shells/test.sh
tests/test_watcher.py
==================
ef3acef;ZyX;2014-12-09 21:26:37 +0300;Only run Vim tests if PYTHON_IMPLEMENTATION is CPython

==

tests/run_vim_tests.sh
==================
f5e9ec3;ZyX;2014-12-09 19:57:12 +0300;Use old Vim for tests, perform sanity test with empty &encoding

==

tests/run_vim_tests.sh
tests/test_empty_encoding.old.vim
==================
c79adfa;ZyX;2014-12-09 19:56:20 +0300;Support old Vims without +multibyte

==

powerline/bindings/vim/__init__.py
powerline/renderers/vim.py
powerline/vim.py
==================
5d6caae;ZyX;2014-12-09 19:20:46 +0300;Use compiled Vim binaries for Vim tests
Part 1: use latest single-python Vim builds

==

tests/run_vim_tests.sh
==================
104cea9;ZyX;2014-12-09 18:37:28 +0300;Install binary dependencies from powerline/deps

==

.travis.yml
tests/install.sh
==================
e3ee4ef;ZyX;2014-12-28 23:53:59 +0300;Merge pull request #1233 into develop

==
==================
ff10b9e;ZyX;2014-12-28 23:51:45 +0300;Fix tests: handle must not be saved to .watches until it was started
Otherwise .is_watching() method does not return valid results.
==

powerline/lib/watcher/uv.py
==================
eb9c140;ZyX;2014-12-28 23:50:45 +0300;Readd support for 0.x

==

powerline/lib/watcher/uv.py
==================
f9e4d0e;Nikolai Aleksandrovich Pavlov;2014-12-25 02:55:02 +0300;Merge pull request #1240 from AirbornePorcine/develop
Use status_delimiter as split character
==
==================
7cfe347;Paul Kirby;2014-12-23 16:43:11 -0700;Use status_delimiter as split character
Newlines are not being used as a status delimiter in the applescript above, so don't use them.
==

powerline/segments/common/players.py
==================
3474c0d;Saúl Ibarra Corretgé;2014-12-12 09:44:31 +0100;pyuv: adapt to 1.x API changes

==

powerline/lib/watcher/uv.py
==================
3673786;Saúl Ibarra Corretgé;2014-12-12 09:41:53 +0100;pyuv: make stopping the loop thread-safe

==

powerline/lib/watcher/uv.py
==================
f34ab66;Nikolai Aleksandrovich Pavlov;2014-12-11 21:27:05 +0300;Merge pull request #1226 from gladiac/cflags
Honor CFLAGS
==
==================
e373b36;Andreas Schneider;2014-12-09 09:32:05 +0100;setup: Honor CFLAGS set as environment variable
Distributions normally have their preferred set of CFLAGS so the
binaries are optimized and include debug symbols to create a debuginfo
package. For this we need to be able to set the CFLAGS via the
commandline and the setup.py should forward them to the compiler.

Signed-off-by: Andreas Schneider <asn@cryptomilk.org>

==

setup.py
==================
c3d4934;Nikolai Aleksandrovich Pavlov;2014-12-09 21:17:46 +0300;Merge pull request #1231 from ZyX-I/fix-1225
Some Vims that have vim.vvars do not accept unicode indexes
==
==================
267ea05;ZyX;2014-12-09 19:18:08 +0300;Some Vims that have vim.vvars do not accept unicode indexes
Fixes #1225

==

powerline/bindings/vim/__init__.py
==================
35a83ca;ZyX;2014-12-09 19:13:40 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
bb3295d;ZyX;2014-12-09 19:13:31 +0300;Fix typo in battery segment implementation
Fixes #1229
==

powerline/segments/common/bat.py
==================
3fadaca;ZyX;2014-12-08 21:53:00 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
6f999cb;ZyX;2014-12-08 21:52:54 +0300;Update list of supported python implementations in installation.rst

==

docs/source/installation.rst
==================
5cfbcd4;Nikolai Aleksandrovich Pavlov;2014-12-08 21:34:35 +0300;Merge pull request #1224 from ZyX-I/pypy3
Enable pypy3 tests
==
==================
9e45423;ZyX;2014-12-08 21:15:39 +0300;Skip testing cpu_load_percent if psutil module is not available

==

tests/test_segments.py
==================
c617dbe;ZyX;2014-12-08 20:00:46 +0300;Fall back to getuid if geteuid is not available
It appears to be missing in PyPy3
==

powerline/segments/common/env.py
==================
8ae3d2a;ZyX;2014-12-08 08:42:08 +0300;Fix typo in install.sh

==

tests/install.sh
==================
1871d45;ZyX;2014-12-08 08:41:46 +0300;Enable pypy3 tests

==

.travis.yml
==================
6633f27;Nikolai Aleksandrovich Pavlov;2014-12-08 08:37:39 +0300;Merge pull request #1223 from ZyX-I/move-powerline
Update various URLs: powerline has moved to github.com/powerline
==
==================
4a6445b;Nikolai Aleksandrovich Pavlov;2014-12-08 08:37:35 +0300;Merge pull request #1222 from ZyX-I/update-themes
Add unicode-7.0 theme and some small theme fixes
==
==================
db5d87f;ZyX;2014-12-07 16:08:24 +0300;Update various URLs: powerline has moved to github.com/powerline

==

CONTRIBUTING.rst
LICENSE
README.rst
docs/source/installation.rst
docs/source/installation/linux.rst
docs/source/installation/osx.rst
docs/source/license-and-credits.rst
docs/source/powerline_automan.py
docs/source/troubleshooting.rst
docs/source/troubleshooting/osx.rst
docs/source/usage/other.rst
setup.py
==================
cd4cae8;ZyX;2014-12-07 03:20:03 +0300;Mention powerline_unicode7 in documentation

==

docs/source/configuration/reference.rst
==================
38da7bb;ZyX;2014-12-06 19:32:04 +0300;Make all modes have equal width in all themes

==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
==================
0457ef4;ZyX;2014-12-06 19:29:16 +0300;Alias `blustery` to `windy` and not `foggy`

==

powerline/segments/common/wthr.py
==================
e969f43;ZyX;2014-12-06 19:28:58 +0300;Add troubleshooting question about powerline_unicode7 player symbols

==

docs/source/troubleshooting/linux.rst
==================
f4c4c1e;ZyX;2014-12-06 19:15:40 +0300;Add theme with unicode-7.0 symbols
- All powerline symbols, except for dividers, were replaced with Unicode ones,
  mostly from Unicode-7.0.
- Player statuses are using U+23Fx symbols. I have found it only in Symbola font
  though, so one may need to tell fontconfig to use it using something like

      <?xml version="1.0"?>
      <!DOCTYPE fontconfig SYSTEM "fonts.dtd">

      <fontconfig>
      	<alias>
      		<family>Terminus</family>
      		<prefer><family>Symbola</family></prefer>
      	</alias>
      </fontconfig>

- Modified indicator is using two characters: floppy disk and diacritics
  character that crosses it (WHITE HARD SHELL FLOPPY DISK + COMBINING REVERSE 
  SOLIDUS OVERLAY). It is not always displayed correctly.
- Vim cannot currently correctly handle Unicode-7.0 characters. [See this
  thread][1].
- `powerline.segments.vim.mode` got strings with identical width.

[1]: https://groups.google.com/forum/#!topic/vim_dev/zgY0r9UbKT4
==

powerline/config_files/themes/powerline_unicode7.json
==================
d2a1106;Nikolai Aleksandrovich Pavlov;2014-12-06 17:08:41 +0300;Merge pull request #1206 from ZyX-I/fbterm-support
Add support for fbterm
==
==================
033422a;ZyX;2014-12-06 16:53:00 +0300;Add tests for various shell escapes variants

==

tests/test_configuration.py
==================
3a175fe;Nikolai Aleksandrovich Pavlov;2014-12-06 15:57:42 +0300;Merge pull request #1221 from ZyX-I/fix-lib-unicode
Fix some issues in powerline.lib.unicode
==
==================
7a6fc1e;Nikolai Aleksandrovich Pavlov;2014-12-06 15:05:46 +0300;Merge pull request #1219 from ZyX-I/limit-abstract-sockets-usage
Use sockets in abstract namespace only if running on linux
==
==================
b80da89;ZyX;2014-12-06 15:02:07 +0300;Add documentation for `register_strwidth_error` and `string` functions

==

powerline/lib/unicode.py
==================
158b6d0;Nikolai Aleksandrovich Pavlov;2014-12-06 15:01:14 +0300;Merge pull request #1220 from ZyX-I/fix-higher-unicode
Fix higher unicode characters
==
==================
f697d9e;ZyX;2014-12-06 14:48:31 +0300;Make FailedUnicode summary not too lengthy

==

powerline/lib/unicode.py
==================
8707f35;ZyX;2014-12-06 14:47:53 +0300;Fix safe_unicode and string unicode library functions

==

powerline/lib/unicode.py
tests/test_lib.py
==================
87ca9bc;ZyX;2014-12-06 14:38:42 +0300;Make unichr() work with characters above U+10000 in UCS-2 builds

==

powerline/lib/unicode.py
tests/test_lib.py
==================
305b65f;ZyX;2014-12-06 14:23:21 +0300;Fix regex that searches for non-printable characters

==

powerline/lint/markedjson/error.py
==================
f0f6efc;ZyX;2014-12-06 00:52:17 +0300;Also have uname in $PATH
Travis uses Ubuntu, Ubuntu is debian-based and debian uses dash as /bin/sh, so 
$OSTYPE is not available.
.
==

tests/test_shells/test.sh
==================
aaf52c9;ZyX;2014-12-06 00:05:25 +0300;Use sockets in abstract namespace only if running on linux
Also adds fallback to shell client which uses `uname -o` in place of `ostype`.

Closes #1215
==

client/powerline.c
client/powerline.py
client/powerline.sh
scripts/powerline-daemon
==================
432cc50;Nikolai Aleksandrovich Pavlov;2014-12-05 23:46:40 +0300;Merge pull request #1217 from ZyX-I/ucs-2-python
Add support for UCS-2 Python builds
==
==================
ad998cf;Nikolai Aleksandrovich Pavlov;2014-12-05 23:18:24 +0300;Merge pull request #1218 from ZyX-I/fix-1214
Fix tmux colors and alignment
==
==================
f8270a8;ZyX;2014-12-05 23:15:52 +0300;Skip some functions’ tests as they are buggy
They are buggy, but fixing them is out of the scope of this PR.
==

tests/test_lib.py
==================
cdfe6f0;ZyX;2014-12-05 23:09:21 +0300;Add support for running tests with debug Python versions
They are failing due to `[NNNN refs]` entries in daemon log and when switching 
modes in zsh without daemon, but who cares.
==

tests/test_shells/postproc.py
tests/test_shells/test.sh
==================
df14aaa;ZyX;2014-12-05 00:31:13 +0300;Add tests for unicode module
Note: east_asian_width does not accept surrrogate pairs in UCS-4 Python builds.

==

tests/test_lib.py
==================
531d3e6;ZyX;2014-12-05 22:24:13 +0300;Fix code: unichr on UCS-2 builds cannot emit surrogate pairs

==

powerline/lib/unicode.py
==================
6dc585b;ZyX;2014-12-04 23:56:40 +0300;Move strwidth function variants to powerline.lib.unicode
They can be tested thus.

==

powerline/lib/unicode.py
powerline/renderer.py
==================
f3c8413;ZyX;2014-12-04 22:57:15 +0300;Add a warning about UCS-2 builds to the documentation

==

docs/source/installation.rst
==================
b5b033d;ZyX;2014-12-04 22:43:46 +0300;Fix width calculations when using UCS-2 Python

==

powerline/renderer.py
==================
9576738;ZyX;2014-12-04 22:34:00 +0300;When parsing JSON join surrogate pairs
Also closes #1211
==

powerline/lib/unicode.py
powerline/lint/markedjson/scanner.py
==================
52f3c83;ZyX;2014-12-04 21:44:33 +0300;Also add spaces to the end of the `window-status-format`

==

powerline/bindings/tmux/powerline-base.conf
==================
8d10664;ZyX;2014-12-04 21:42:48 +0300;In place of hardcoding spaces compute them

==

powerline/bindings/config.py
powerline/bindings/tmux/powerline-base.conf
==================
1e4dee6;ZyX;2014-12-04 21:26:01 +0300;Fix colors used in tmux left side
Fixes #1214
==

powerline/config_files/colorschemes/tmux/default.json
==================
f37efea;ZyX;2014-12-04 21:14:13 +0300;lint: Do not allow non-printable characters in configuration

==

powerline/lint/__init__.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/markedvalue.py
powerline/lint/markedjson/reader.py
powerline/lint/spec.py
==================
2656953;ZyX;2014-12-04 20:39:12 +0300;Move some calculations into a separate function
Also moves non-printable character translation *before* width calculations which
is correct.

==

powerline/renderer.py
==================
3779ec5;ZyX;2014-12-04 20:30:53 +0300;Read the whole stream at once, not just 4096 characters
This may cause problems in case UTF-8 was read partially. Dunno how this code
survived in pyyaml.

==

powerline/lint/markedjson/reader.py
==================
209d6be;ZyX;2014-12-04 20:23:37 +0300;Add support for UCS-2 Python versions
Fixes #1213

==

powerline/lint/markedjson/error.py
powerline/renderer.py
==================
61f0542;Nikolai Aleksandrovich Pavlov;2014-12-03 08:26:40 +0300;Merge pull request #1210 from ZyX-I/fix-1207
Only convert clementine title and album if they are true
==
==================
d061deb;ZyX;2014-12-03 07:45:49 +0300;Only convert clementine title and album if they are true
It appears that at least album may be None.

Fixes #1207
==

powerline/segments/common/players.py
==================
16ffd10;Nikolai Aleksandrovich Pavlov;2014-12-03 07:30:16 +0300;Merge pull request #1208 from gladiac/shebang
lib: Remove wrong shebang from debug.py.
==
==================
9281f4a;Andreas Schneider;2014-12-02 20:39:21 +0100;lib: Remove wrong shebang from debug.py.

==

powerline/lib/debug.py
==================
af9420b;ZyX;2014-12-01 08:19:25 +0300;Mark term_escape_style setting as optional

==

powerline/lint/__init__.py
==================
9781644;ZyX;2014-12-01 00:58:55 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
e8a53eb;ZyX;2014-12-01 00:58:48 +0300;Fix typo in capslock_indicator docstring

==

powerline/segments/vim/plugin/capslock.py
==================
aeba94b;ZyX;2014-12-01 00:57:29 +0300;Add support for fbterm
No tests yet, also no tests for term_truecolor.
==

docs/source/configuration/reference.rst
docs/source/usage.rst
powerline/__init__.py
powerline/lint/__init__.py
powerline/renderer.py
powerline/renderers/shell/__init__.py
==================
88c5f40;ZyX;2014-11-30 19:34:37 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
1af127b;ZyX;2014-11-30 19:34:27 +0300;CommandT has moved finders under CommandT::Finder module, respect this

==

powerline/segments/vim/plugin/commandt.py
==================
4618dab;ZyX;2014-11-30 04:27:02 +0300;Merge branch 'replace-1151' into develop

==
==================
ebe5fca;ZyX;2014-11-30 04:26:04 +0300;Reorder pip arguments in installation documentation
`--editable`/`-e` pip argument is accepting an argument, not specifying the
action.

==

docs/source/installation.rst
==================
3fc8135;ZyX;2014-11-30 04:20:09 +0300;Merge branch 'powerline-release-forcepush' into develop

==
==================
8823318;ZyX;2014-11-30 04:02:56 +0300;Force push to my fork of the overlay

==

scripts/powerline-release.py
==================
fe3b8a4;ZyX;2014-11-30 03:50:41 +0300;Merge branch 'powerline-release-merge' into develop

==
==================
c9964a1;ZyX;2014-11-30 03:46:30 +0300;Use `git mergetool` after error because `-c merge.tool` does not work

==

scripts/powerline-release.py
==================
508f8f5;ZyX;2014-11-30 03:42:17 +0300;Supply merge.tool option when merging

==

scripts/powerline-release.py
==================
4624a1d;ZyX;2014-11-30 03:23:18 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
a9aef12;ZyX;2014-11-30 03:23:12 +0300;Remove unused test files

==

tests/test_shells/input.tmux
tests/test_shells/tmux.conf
==================
bf8f4a1;Nikolai Aleksandrovich Pavlov;2014-11-30 03:13:41 +0300;Merge pull request #1203 from ZyX-I/cache-tagbar
Add more precise caching for tagbar segment
==
==================
f7d7e27;ZyX;2014-11-30 01:52:20 +0300;Implement caching for tagbar segment
Ref #700

==

powerline/segments/vim/plugin/tagbar.py
==================
2304242;ZyX;2014-11-30 01:35:10 +0300;Remove unused code

==

powerline/segments/vim/__init__.py
==================
8560e92;ZyX;2014-11-30 01:29:38 +0300;Move code for checking existence and getting funcs into vim bindings

==

powerline/bindings/vim/__init__.py
powerline/segments/vim/plugin/syntastic.py
powerline/segments/vim/plugin/tagbar.py
tests/vim.py
==================
7caf14f;Nikolai Aleksandrovich Pavlov;2014-11-30 00:37:40 +0300;Merge pull request #1202 from ZyX-I/fix-1051
Use dash hack for PyPy+IPython
==
==================
1707f08;ZyX;2014-11-30 00:30:35 +0300;Modify postproc to make pypy tests work
Note: modification to test.sh is there because if running test outside of 
a virtualenv postproc.py will behave incorrectly.
==

tests/test_shells/postproc.py
tests/test_shells/test.sh
==================
3f0d538;ZyX;2014-11-29 21:40:06 +0300;Use dash hack for PyPy+IPython
Fixes #1051
Closes #919 (I hope so)
==

tests/run_shell_tests.sh
tests/test_shells/test.sh
==================
b2c1bb9;ZyX;2014-11-29 20:58:29 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
aa18247;ZyX;2014-11-29 20:57:59 +0300;Add note about 70-no-bitmaps.conf fontconfig configuration file
Closes #1152
==

docs/source/troubleshooting/linux.rst
==================
3a3cc9b;Nikolai Aleksandrovich Pavlov;2014-11-29 20:15:20 +0300;Merge pull request #1200 from ZyX-I/tmux-colors
Obtain tmux colors and dividers from the configuration
==
==================
0e81486;ZyX;2014-11-29 19:29:36 +0300;Do not hardcode dividers in tmux configuration, use powerline-config
Fixes #817

==

powerline/bindings/config.py
powerline/bindings/tmux/powerline-base.conf
powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
==================
5146978;ZyX;2014-11-29 19:22:25 +0300;Refactor some calls to run_tmux_command into a new function

==

powerline/bindings/config.py
powerline/bindings/tmux/__init__.py
==================
1348472;ZyX;2014-11-29 19:14:27 +0300;Rename setcolors to setenv, add documentation

==

powerline/bindings/config.py
powerline/bindings/tmux/powerline.conf
powerline/commands/config.py
==================
d62336f;ZyX;2014-11-29 19:08:59 +0300;Add a way to specify configuration paths to powerline-config
One still cannot override various configuration options from the command-line.

==

powerline/bindings/config.py
powerline/commands/config.py
powerline/tmux.py
tests/test_shells/input.tmux
tests/test_shells/tmux.conf
==================
f3ba38e;ZyX;2014-11-29 13:32:54 +0300;Move all configuration to powerline-base.conf
Reasoning: for some reason it does not work after `powerline-config tmux
setcolors`.

Fixes #717

==

powerline/bindings/config.py
powerline/bindings/tmux/powerline-base.conf
powerline/bindings/tmux/powerline.conf
==================
e6fc291;ZyX;2014-08-23 02:47:26 +0400;Get color configuration from variables exported by setcolors

==

powerline/bindings/config.py
powerline/bindings/tmux/powerline.conf
powerline/bindings/tmux/powerline_tmux_1.8.conf
powerline/bindings/tmux/powerline_tmux_1.8_minus.conf
powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
powerline/bindings/tmux/powerline_tmux_1.9_plus.conf
powerline/commands/config.py
powerline/config_files/colors.json
powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/tmux/default.json
powerline/renderers/tmux.py
==================
ddac11a;Nikolai Aleksandrovich Pavlov;2014-11-28 23:16:55 +0300;Merge pull request #1198 from ZyX-I/fix-shell-unicode-error
Fix shell unicode error when current directory name is not ASCII
==
==================
c8286e9;ZyX;2014-11-28 23:03:06 +0300;Fix tcsh escaping
`!` gets expanded to the prompt count, so it needs to be escaped.
==

powerline/renderers/shell/tcsh.py
==================
c949f4c;ZyX;2014-11-28 23:02:12 +0300;Output list of failed shell tests

==

tests/test_shells/test.sh
==================
c81ef95;ZyX;2014-11-28 23:01:19 +0300;Use newline for dash, not CR

==

tests/test_shells/test.sh
==================
5c75bef;ZyX;2014-11-28 22:58:53 +0300;Add integration tests for unicode directory names

==

tests/test_shells/bash.daemon.ok
tests/test_shells/bash.nodaemon.ok
tests/test_shells/busybox.daemon.ok
tests/test_shells/busybox.nodaemon.ok
tests/test_shells/dash.daemon.ok
tests/test_shells/dash.nodaemon.ok
tests/test_shells/fish.ok
tests/test_shells/input.bash
tests/test_shells/input.busybox
tests/test_shells/input.dash
tests/test_shells/input.fish
tests/test_shells/input.mksh
tests/test_shells/input.tcsh
tests/test_shells/input.zsh
tests/test_shells/mksh.daemon.ok
tests/test_shells/mksh.nodaemon.ok
tests/test_shells/screenrc
tests/test_shells/tcsh.ok
tests/test_shells/test.sh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
==================
7b89533;ZyX;2014-11-28 21:33:17 +0300;Fix UnicodeDecodeError in keyvaluesplit reported by @jottr
Ref #788
==

powerline/commands/main.py
powerline/lib/encoding.py
powerline/renderer.py
==================
386d0f0;ZyX;2014-11-28 20:51:02 +0300;Merge branch 'troubleshooting' into develop

==
==================
774ec6d;ZyX;2014-11-28 20:37:53 +0300;Add note about pip and $PATH
Closes #1189
==

docs/source/troubleshooting.rst
==================
f1399dc;ZyX;2014-11-28 20:31:24 +0300;Add information about tmux green bar

==

docs/source/troubleshooting.rst
==================
410dccd;ZyX;2014-11-28 20:25:07 +0300;Add warning about additional_escapes option

==

docs/source/troubleshooting.rst
==================
ef0e503;Nikolai Aleksandrovich Pavlov;2014-11-22 23:05:19 +0300;Merge pull request #1188 from ZyX-I/zsh-ZLE_PROMPT_INDENT
Support ZLE_RPROMPT_INDENT
==
==================
b23ea83;ZyX;2014-11-22 22:53:42 +0300;Support ZLE_RPROMPT_INDENT
Fixes #1145
==

powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
==================
4bb4c3f;ZyX;2014-11-18 23:36:01 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
9fbd256;ZyX;2014-11-18 23:35:46 +0300;Update documentation regarding `powerline-status`

==

docs/source/installation/linux.rst
docs/source/installation/osx.rst
==================
6b6245c;Nikolai Aleksandrovich Pavlov;2014-11-11 01:15:28 +0300;Merge pull request #1147 from ZyX-I/fix-1146
Use different fallback for old Vims
==
==================
8afb35b;ZyX;2014-11-11 00:57:18 +0300;Use different fallback for old Vims
Reasoning: currently used fallback works well only if relatively recent patches 
are there: specifically the one that transforms Vim errors to Python exceptions.

This variant should work in any case, but it has a downside: it does not test 
whether function exists, it tests whether argument given to vim_func_exists 
denote some callable object (which may as well be global variable with the same 
name). When it comes to CapsLockStatusline I do not care much as I am using 
`vim.eval` to call it and not saving reference to this function somewhere.

Fixes #1146
==

powerline/bindings/vim/__init__.py
==================
a6ba63a;Nikolai Aleksandrovich Pavlov;2014-11-10 01:19:08 +0300;Merge pull request #1144 from ZyX-I/vim-plugins
Add support for csv and capslock and Command-T vim plugins
==
==================
b845cc2;ZyX;2014-11-10 01:08:37 +0300;Fix tests on python-2.6
csv module does not appear to work will with multiline strings in csv, 
especially incomplete.
==

powerline/segments/vim/__init__.py
tests/test_segments.py
==================
90ed328;ZyX;2014-11-10 00:40:12 +0300;Change powerline.segments.vim to not import *from* csv
One cannot really tell what are things like `Sniffer` or `reader`. It is better 
to use `csv` module directly rather than write `from csv import reader as 
csv_reader`.
==

powerline/segments/vim/__init__.py
==================
c9cb856;ZyX;2014-11-10 00:35:40 +0300;Add support for vim_func_exists to tests/vim.py

==

tests/vim.py
==================
a4fddff;ZyX;2014-11-10 00:22:37 +0300;Improve documentation of Command-T support code

==

docs/source/configuration/segments/vim.rst
powerline/segments/vim/plugin/commandt.py
==================
8cf2a86;ZyX;2014-11-09 23:52:11 +0300;Add support for capslock plugin

==

docs/source/configuration/segments/vim.rst
powerline/bindings/vim/__init__.py
powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/themes/vim/default.json
powerline/segments/vim/plugin/capslock.py
==================
d392cf3;ZyX;2014-11-09 23:11:15 +0300;Add support for csv files
Equivalent to airline csv Christian Brabandt plugin integration, but uses Python
own facilities.

Note: filetype detection is out of the scope of the powerline responsibilities.
      CSV is supported by powerline, but only as long as filetype detection is
      done by Vim correctly. By default CSV files are neither detected nor
      highlighted.

Some known differences between powerline code and @chrisbra plugin with
corresponding airline integration:

1. Detection work differently. I cannot say which is better because I have not
   tested it much, but it is definitely different.
2. My variant is able to detect whether there is (no) header. (Of course,
   relying on Python code.) Airline is using a setting. (Both do not allow
   manual per-filetype setting.) Of course, user can force either variant (no
   headers at all or headers always).
3. My variant makes it possible to configure header output format, including
   truncating it at 15 characters (the default).
4. CSV plugin does not work with multiline CSV items (in some dialects one can
   use code like `abc;"I<CR>am<CR>multiline<CR>string"`). See `:h csv-column` on
   how to fix this if possible (will require also changing `<sid>WColumn`
   function because currently it only works with one line).
5. AFAIK Python does not such a thing as “fixed width CSV”. Thus I do not work
   with this, but CSV plugin does. Not sure whether it is different with
   space-separated CSV files though.

==

powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/themes/vim/default.json
powerline/segments/vim/__init__.py
powerline/segments/vim/plugin/commandt.py
tests/test_segments.py
==================
28435f0;ZyX;2014-11-08 13:19:02 +0300;Add support for Command-T

==

powerline/bindings/vim/__init__.py
powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/config.json
powerline/config_files/themes/vim/plugin_commandt.json
powerline/matchers/vim/plugin/commandt.py
powerline/segments/vim/plugin/commandt.py
tests/test_provided_config_files.py
==================
7139021;ZyX;2014-11-04 16:41:25 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
fe3bebc;ZyX;2014-11-04 16:41:16 +0300;Remove some debugging prints

==

powerline/bindings/config.py
==================
491ac11;ZyX;2014-10-27 08:11:49 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
eb0b198;ZyX;2014-10-27 08:11:07 +0300;Fix location of the which function

==

setup.py
==================
cf01f5c;ZyX;2014-10-26 14:19:45 +0300;Merge commit 'HEAD@{1}' into develop

==
==================
21f332b;ZyX;2014-10-26 14:19:32 +0300;Fix Debian and Wheezy first letters’ case

==

docs/source/installation/linux.rst
==================
53880b6;ZyX;2014-10-25 22:56:28 +0400;Merge branch 'reference-debian-package' into develop

==
==================
61c2a45;ZyX;2014-10-25 22:55:59 +0400;Reference debian powerline package
Fixes #1129
==

docs/source/installation/linux.rst
==================
7e766f0;Nikolai Aleksandrovich Pavlov;2014-10-25 22:41:04 +0400;Merge pull request #1134 from ZyX-I/man
Generate manual pages

Replaces #1132
==
==================
1dd4269;ZyX;2014-10-25 22:24:24 +0400;Update powerline-release script to use live ebuild as the base
Reasoning: I am going to add man pages support to the live ebuild, but it does 
not make sense to add this to the 1.0 ebuild previously used as the base. Since 
new features will likely continue to appear in the live ebuild powerline-release 
script was modified to do the right thing under new circumstances.
==

scripts/powerline-release.py
==================
9b03ff6;ZyX;2014-10-25 21:53:15 +0400;Also add documentation for `powerline-lint`

==

docs/source/commands/lint.rst
powerline/commands/lint.py
scripts/powerline-lint
==================
bed2cc8;ZyX;2014-10-25 21:42:04 +0400;Add new documents to the main TOC tree

==

docs/source/commands.rst
docs/source/index.rst
==================
9c57255;ZyX;2014-10-25 21:31:23 +0400;Add `man` documentation target
Fixes #1131

==

docs/Makefile
docs/source/commands/config.rst
docs/source/commands/daemon.rst
docs/source/commands/main.rst
docs/source/conf.py
docs/source/license-and-credits.rst
docs/source/powerline_automan.py
powerline/commands/config.py
powerline/commands/main.py
==================
99e531e;ZyX;2014-10-25 17:07:50 +0400;Make all metavars uppercased

==

powerline/commands/config.py
==================
e58aa8f;ZyX;2014-10-25 17:06:48 +0400;Improve powerline-config help and require --shell argument

==

powerline/commands/config.py
==================
fadd1ee;ZyX;2014-10-25 16:00:32 +0400;Move all parser definitions to powerline.commands.*.get_argparser()
Reasoning: they will be easier to reach there. It will also be possible to use
specific ArgumentParser class that will just collect data for sphinx.

==

powerline/commands/__init__.py
powerline/commands/config.py
powerline/commands/daemon.py
powerline/commands/main.py
powerline/shell.py
scripts/powerline-config
scripts/powerline-daemon
scripts/powerline-render
tests/test_cmdline.py
==================
c2425f6;Nikolai Aleksandrovich Pavlov;2014-10-25 14:53:07 +0400;Merge pull request #1133 from ZyX-I/build-version
Record git hash in dev version
==
==================
4a689ad;ZyX;2014-10-25 13:06:46 +0400;Strip trailing newline returned by rev-parse

==

setup.py
==================
2106be4;ZyX;2014-10-19 00:05:51 +0400;Save git hex revision in powerline version string if possible
Only useful for `pip install git+git://` or `pip install /some/directory` 
installations (note: commands come without `--editable`/`-e`).
==

setup.py
==================
f0d2f28;Nikolai Aleksandrovich Pavlov;2014-10-18 21:38:06 +0400;Merge pull request #1123 from ZyX-I/weather-diagnostics
Include raw_response in error message in weather segment
==
==================
1350fbe;ZyX;2014-10-18 20:28:18 +0400;Include raw_response in error message in weather segment
Closes #1112
Ref #1119

==

powerline/segments/common/wthr.py
==================
f5b9fc2;Nikolai Aleksandrovich Pavlov;2014-10-18 20:16:39 +0400;Merge pull request #1122 from ZyX-I/fix-powerline-config
Make “powerline-config” without arguments show proper message (python-3*)
==
==================
cb877e7;ZyX;2014-10-18 20:01:22 +0400;Make `powerline-config` without arguments show proper message
In Python-3* it used to show the following:

    Traceback (most recent call last):
    File "/usr/lib/python-exec/python3.3/powerline-config", line 66, in <module>
        args.function(pl, args)
    AttributeError: 'Namespace' object has no attribute 'function'

now it shows

    usage: powerline-config [-h] {tmux,shell} ...
    powerline-config: error: too few arguments

in both python-2.7 and -3.3.

Fixes #1120.

==

scripts/powerline-config
==================
a96b429;ZyX;2014-10-18 19:35:37 +0400;Make quotes in powerline-config --help same as in powerline --help

==

scripts/powerline-config
==================
f293d6f;ZyX;2014-10-12 19:38:26 +0400;Merge branch 'fix-latex-output' into develop

==
==================
b307ad7;ZyX;2014-10-12 19:33:09 +0400;Fix default value of SPHINXBUILD variable

==

docs/Makefile
==================
2e1df44;ZyX;2014-10-12 19:37:58 +0400;Update Makefile: remove unused gh-pages target and add latexpdf & help

==

docs/Makefile
==================
80b5073;ZyX;2014-10-12 19:37:15 +0400;Fix latex build: make some unicode characters found in help work

==

docs/source/conf.py
==================
b378a4c;ZyX;2014-10-12 17:08:45 +0400;Merge branch 'release-script-2' into develop

==
==================
09ca7aa;ZyX;2014-10-12 17:04:02 +0400;Merge commit 'HEAD@{1}' into develop

==
==================
2666491;ZyX;2014-10-12 17:03:34 +0400;Document pyuv problem in troubleshooting section
Closes #5463

==

docs/source/troubleshooting/osx.rst
==================
5635eea;ZyX;2014-10-12 16:54:30 +0400;Merge branch 'enhance-now_playing' into develop

==
==================
425e8f7;ZyX;2014-10-12 16:53:53 +0400;Remove self.STATE_SYMBOLS reference: there is no such attribute

==

powerline/segments/common/players.py
==================
b8a4d9b;ZyX;2014-10-12 16:33:34 +0400;Add some workarounds for powerline-lint

==

docs/source/develop/segments.rst
powerline/lint/__init__.py
powerline/lint/checks.py
powerline/segments/common/players.py
==================
8551e51;ZyX;2014-10-12 15:16:26 +0400;Prioritize now_playing highlight group, but remove it from colorscheme
Reasoning for first: backwards compatibility. If user defined `now_playing`
highlight group it is what should be used.

Reasoning for second: it is useless there. If user has defined its own group its
effect will not be affected, if he has not then there is nothing to talk about.

==

powerline/config_files/colorschemes/default.json
powerline/segments/common/players.py
==================
dad1197;ZyX;2014-10-12 15:09:57 +0400;Add `"player"` segment data

==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
==================
cdb030e;ZyX;2014-10-12 15:05:28 +0400;Rename highlight groups

==

powerline/config_files/colorschemes/default.json
powerline/segments/common/players.py
==================
f233c1f;ZyX;2014-10-12 14:58:48 +0400;Fix mpd support

==

powerline/lib/shell.py
powerline/segments/common/players.py
==================
a37f909;ZyX;2014-10-12 14:56:11 +0400;Refactor powerline.segments.common.players to use multiple functions
Also adds documentation. Still have to update top-level themes.

Fixes #445

==

powerline/lint/imp.py
powerline/segments/common/players.py
==================
0eeab7f;Nikolai Aleksandrovich Pavlov;2014-10-12 00:55:49 +0400;Merge pull request #1114 from ZyX-I/fix-1104
Specify $TERM in place of assuming it is set to something working
==
==================
0d3609f;ZyX;2014-10-12 00:41:06 +0400;Specify $TERM in place of assuming it is set to something working
Ref #1104
==

tests/test_shells/test.sh
==================
218f72e;ZyX;2014-10-12 00:39:00 +0400;Merge commit 'HEAD@{1}' into develop

==
==================
d1ac624;ZyX;2014-10-12 00:36:53 +0400;Fix broken tests

==

tests/test_segments.py
==================
7b8bcbd;ZyX;2014-10-06 08:45:33 +0400;Merge commit 'HEAD@{1}' into develop

==
==================
2607fdd;ZyX;2014-10-06 08:45:13 +0400;Fix case in nerd tree matcher regex
Fixes #1105

==

powerline/matchers/vim/plugin/nerdtree.py
==================
271af25;ZyX;2014-09-27 18:07:04 +0400;Merge branch 'fix-1097' into develop

==
==================
34e3aed;ZyX;2014-09-27 18:06:53 +0400;Add missing argument to get_tmux_output
Fixes #1097
==

powerline/segments/tmux.py
==================
a0a02bf;Nikolai Aleksandrovich Pavlov;2014-09-26 00:44:52 +0400;Merge pull request #1096 from ZyX-I/no-untracked-dirty
Add a way to not mark repo as dirty when it only has untracked files
==
==================
8b1a502;ZyX;2014-09-26 00:34:32 +0400;Add ignore_statuses option to branch segments
Closes #1080
==

powerline/segments/common/vcs.py
powerline/segments/vim/__init__.py
tests/test_segments.py
==================
3f2aabb;ZyX;2014-09-26 00:20:58 +0400;Refactor Vim and common branch segments to share code

==

powerline/segments/common/vcs.py
powerline/segments/vim/__init__.py
tests/test_segments.py
==================
0ecb613;ZyX;2014-09-22 07:44:59 +0400;Merge branch 'lower-virtual-nics' into develop

==
==================
05cb1d2;ZyX;2014-09-22 07:42:42 +0400;Lower the priority of various VM bridge interfaces
Closes #1094

==

powerline/segments/common/net.py
==================
b605692;ZyX;2014-09-21 17:03:30 +0400;Update manifests

==

scripts/powerline-release.py
==================
8c170e2;ZyX;2014-09-21 16:27:05 +0400;Merge branch 'release-script' into develop

==
==================
3929ee1;Nikolai Aleksandrovich Pavlov;2014-09-21 16:03:59 +0400;Merge pull request #1093 from ZyX-I/fix-tests
Some test fixes
==
==================
cd2703d;ZyX;2014-09-21 16:02:52 +0400;powerline-python got renamed to powerline-vim

==

scripts/powerline-release.py
==================
c68eb56;ZyX;2014-09-21 15:52:58 +0400;Raise exceptions that are not intercepted when testing
Thus problems like in #1087 will result in build failure.

==

powerline/__init__.py
powerline/ipython.py
tests/test_provided_config_files.py
==================
345025e;ZyX;2014-09-21 15:51:32 +0400;Fix UnboundLocalError in logger exceptions handling code

==

powerline/__init__.py
==================
679b664;ZyX;2014-09-21 15:49:00 +0400;Fix WM bindings tests

==

tests/test_provided_config_files.py
==================
1a3ff92;ZyX;2014-09-21 15:33:28 +0400;Join paths using more robust path joining function
Fixes #1087

==

powerline/lib/vcs/__init__.py
powerline/segments/common/env.py
==================
fcf5702;ZyX;2014-09-21 15:26:27 +0400;Use pwd.getpwuid or getpass.getuser to get current user name

==

powerline/segments/common/env.py
tests/test_segments.py
==================
bb5977c;ZyX;2014-09-21 15:11:01 +0400;Fix tests with  <psutil-2.0

==

tests/test_segments.py
==================
5660b35;Nikolai Aleksandrovich Pavlov;2014-09-21 14:58:39 +0400;Merge pull request #1091 from ZyX-I/common-segments-split
Split powerline.segments.common module
==
==================
080e3e5;ZyX;2014-09-21 02:12:36 +0400;Add deprecation warning to powerline.segments.common

==

powerline/segments/common/__init__.py
==================
3c1d5c6;ZyX;2014-09-21 02:10:13 +0400;Deprecate powerline.segments.common
Makes linter emit a warning
==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/ipython/in.json
powerline/config_files/themes/ipython/in2.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/config_files/themes/tmux/default.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
powerline/config_files/themes/wm/default.json
powerline/lint/imp.py
==================
26365a9;ZyX;2014-09-21 02:00:37 +0400;Split powerline.segments.common into a number of modules
Note: some modules (i.e wthr and bat) have their names in order to avoid the 
situation when module name matches segment name:

    import powerline.segments.common.weather

will import weather segment because `powerline.segments.common` contains line 
`from powerline.segments.common.weather import weather`.

Fixes #1083
==

docs/source/configuration/segments/common.rst
powerline/segments/common.py
powerline/segments/common/__init__.py
powerline/segments/common/bat.py
powerline/segments/common/env.py
powerline/segments/common/mail.py
powerline/segments/common/net.py
powerline/segments/common/players.py
powerline/segments/common/sys.py
powerline/segments/common/time.py
powerline/segments/common/vcs.py
powerline/segments/common/wthr.py
powerline/segments/shell.py
tests/test_segments.py
==================
96f967f;ZyX;2014-09-21 00:49:49 +0400;Commit quote changes left from previous branch

==

powerline/lint/markedjson/constructor.py
powerline/lint/markedjson/reader.py
==================
9eb6f99;Nikolai Aleksandrovich Pavlov;2014-09-20 20:10:25 +0400;Merge pull request #1090 from ZyX-I/update-documentation
Improve documentation
==
==================
4826c43;ZyX;2014-09-20 18:30:34 +0400;Update documentation regarding xterm
Closes #420
==

docs/source/troubleshooting/linux.rst
==================
ca83c46;ZyX;2014-09-20 18:12:39 +0400;Get rid of double quotes where possible
This commits replaces them either with Unicode quotes (“”) or single 
equivalents.
==

powerline/bindings/awesome/powerline-awesome.py
powerline/bindings/bash/powerline.sh
powerline/bindings/qtile/widget.py
powerline/bindings/vim/plugin/powerline.vim
powerline/bindings/zsh/powerline.zsh
powerline/lib/debug.py
powerline/lib/inotify.py
powerline/lib/shell.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/lint/checks.py
powerline/lint/imp.py
powerline/lint/markedjson/__init__.py
powerline/lint/markedjson/composer.py
powerline/lint/markedjson/constructor.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/parser.py
powerline/lint/markedjson/scanner.py
powerline/lint/spec.py
powerline/renderers/i3bar.py
powerline/segments/common.py
powerline/segments/vim/__init__.py
powerline/vim.py
==================
77b0695;ZyX;2014-09-20 17:48:15 +0400;Replace all ASCII ' with Unicode ’ in comments and docstrings

==

docs/source/conf.py
powerline/bindings/tmux/powerline.conf
powerline/lib/debug.py
powerline/lib/shell.py
powerline/lib/threaded.py
powerline/lib/vcs/git.py
powerline/lint/markedjson/reader.py
powerline/lint/markedjson/scanner.py
powerline/renderer.py
powerline/renderers/i3bar.py
powerline/renderers/pango_markup.py
powerline/renderers/shell/__init__.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/segments/common.py
powerline/segments/vim/__init__.py
powerline/theme.py
scripts/powerline-daemon
setup.py
tests/test_provided_config_files.py
==================
2b5e9e0;ZyX;2014-09-20 17:43:19 +0400;Replace all ASCII double quotes with Unicode quotes in documentation

==

README.rst
docs/source/overview.rst
docs/source/troubleshooting/linux.rst
docs/source/troubleshooting/osx.rst
==================
b94cfd9;ZyX;2014-09-20 17:40:33 +0400;Replace all ASCII apostrophs with Unicode ones in documentation

==

README.rst
docs/source/configuration.rst
docs/source/configuration/reference.rst
docs/source/configuration/segments.rst
docs/source/installation.rst
docs/source/installation/linux.rst
docs/source/installation/osx.rst
docs/source/overview.rst
docs/source/tips-and-tricks.rst
docs/source/troubleshooting.rst
docs/source/troubleshooting/linux.rst
docs/source/troubleshooting/osx.rst
docs/source/usage.rst
docs/source/usage/other.rst
==================
32cc0c7;Nikolai Aleksandrovich Pavlov;2014-09-20 14:48:59 +0400;Merge pull request #1089 from ZyX-I/fix-531
Raise an exception when git is not found
==
==================
8587d14;ZyX;2014-09-20 14:43:45 +0400;Link git executable to tests/shell/path

==

tests/test_shells/test.sh
==================
c5be5c6;ZyX;2014-09-20 14:34:21 +0400;Raise an exception when git is not found
Fixes #531 as such exceptions are ignored in powerline.lib.vcs.guess.
==

powerline/lib/vcs/git.py
==================
2293657;Nikolai Aleksandrovich Pavlov;2014-09-20 14:11:50 +0400;Merge pull request #1088 from ZyX-I/weather-location
Fix weather segment
==
==================
5bb993c;ZyX;2014-09-20 14:01:42 +0400;Use region_name in place of region_code
Closes #1081
==

powerline/segments/common.py
==================
48e06cb;ZyX;2014-09-20 13:52:24 +0400;Refactor weather segment to use KwThreaded segment
Problem: weather segment used to set its state (i.e. user location) once and 
remember it forever.
==

powerline/segments/common.py
tests/lib/__init__.py
tests/test_segments.py
==================
af96249;Nikolai Aleksandrovich Pavlov;2014-09-20 00:54:22 +0400;Merge pull request #1086 from ZyX-I/better-troubleshooting
Improve troubleshooting routines
==
==================
aeb1a32;ZyX;2014-09-20 00:17:59 +0400;Document powerline.lint.check function

==

powerline/lint/__init__.py
==================
e9e53aa;ZyX;2014-09-20 00:13:27 +0400;Move auxilary functions before specifications

==

powerline/lint/__init__.py
==================
e9c9b65;ZyX;2014-09-20 00:12:00 +0400;Document powerline.lint.spec.Spec object

==

powerline/lint/spec.py
==================
b781c72;ZyX;2014-09-19 22:40:13 +0400;Move list_sep to powerline.lint.checks
It is the only place where it is needed.

==

powerline/lint/checks.py
powerline/lint/context.py
powerline/lint/spec.py
==================
4e3b62f;ZyX;2014-09-19 22:38:35 +0400;Remove unused new_context_item function

==

powerline/lint/context.py
==================
b333f9e;ZyX;2014-09-19 22:36:16 +0400;Forbid most operations for Context instances

==

powerline/lint/context.py
==================
891a9cb;ZyX;2014-09-19 22:20:01 +0400;Add Context.enter_item function for processing marked iterable items

==

powerline/lint/context.py
powerline/lint/spec.py
==================
02c913f;ZyX;2014-09-19 22:12:20 +0400;Replace new_context_item() with Context.enter_key()

==

powerline/lint/checks.py
powerline/lint/context.py
powerline/lint/spec.py
==================
479305e;ZyX;2014-09-19 22:09:32 +0400;Remove context_key, init_context and context_has_marks functions

==

powerline/lint/__init__.py
powerline/lint/checks.py
powerline/lint/context.py
powerline/lint/imp.py
powerline/lint/selfcheck.py
powerline/lint/spec.py
==================
346c7ab;ZyX;2014-09-19 21:52:07 +0400;Split huge powerline.lint module into multiple files

==

powerline/lint/__init__.py
powerline/lint/checks.py
powerline/lint/context.py
powerline/lint/imp.py
powerline/lint/markedjson/error.py
powerline/lint/selfcheck.py
powerline/lint/spec.py
==================
afb897e;ZyX;2014-09-19 21:23:04 +0400;Run powerline-lint from powerline_troubleshoot function

==

powerline/bindings/vim/plugin/powerline.vim
powerline/lint/__init__.py
powerline/lint/markedjson/error.py
==================
8ff923b;ZyX;2014-09-17 08:38:53 +0400;Remove direct calls to `sys.stderr.write` from powerline.lint.check

==

powerline/lint/__init__.py
==================
6549912;Nikolai Aleksandrovich Pavlov;2014-09-17 08:12:49 +0400;Merge pull request #1079 from ZyX-I/better-encoding-support
Improve encoding support
==
==================
7f5c0d6;ZyX;2014-09-16 23:59:11 +0400;Pop first path from sys.path
According to the `sys.path` documentation “As initialized upon program startup,
the first item of this list, path[0], is the directory containing the script
that was used to invoke the Python interpreter.” Since client is named
`powerline.py` it tries to use the client itself as powerline module and
obviously fails to import `lib` submodule.

==

client/powerline.py
==================
849fef9;ZyX;2014-09-16 20:51:39 +0400;Use powerline.lib.encoding* in place of sys.get*encoding/locale.get*
Fixes #1078

==

client/powerline.py
powerline/__init__.py
powerline/bindings/config.py
powerline/bindings/zsh/__init__.py
powerline/lib/encoding.py
powerline/lib/inotify.py
powerline/lib/shell.py
powerline/lib/unicode.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/lib/watcher/uv.py
scripts/powerline-daemon
scripts/powerline-render
==================
d76bf5e;ZyX;2014-09-16 20:52:42 +0400;Fix example in CONTRIBUTING.rst

==

CONTRIBUTING.rst
==================
558b608;ZyX;2014-09-16 20:08:51 +0400;Merge branch 'pull-1075' into develop

==
==================
a092ebe;ZyX;2014-09-16 20:07:54 +0400;Return None explicitly

==

powerline/segments/vim/plugin/tagbar.py
==================
4233e76;ZyX;2014-09-16 20:07:38 +0400;Improve documentation

==

powerline/segments/vim/plugin/tagbar.py
==================
d874c0a;Ivan Augustinović;2014-09-12 15:07:14 +0200;Add flags argument to vim/plugin/tagbar
Tagbar plugin supports 3 different formats for displaying a tag string.
A flags arguments was added to current_tag function to support this
feature.

==

powerline/segments/vim/plugin/tagbar.py
==================
2f81af5;Nikolai Aleksandrovich Pavlov;2014-09-14 20:07:49 +0400;Merge pull request #1077 from ZyX-I/fix-non-unicode-vim
Fix non-unicode strings and locales handling
==
==================
92b75aa;ZyX;2014-09-14 18:07:28 +0400;Also catch INotifyError when testing tree watcher

==

tests/test_watcher.py
==================
b596643;ZyX;2014-09-14 17:25:46 +0400;Allow powerline-lint and sphinx to run with fake vim object

==

powerline/bindings/vim/__init__.py
==================
eae7d1f;ZyX;2014-09-14 17:09:36 +0400;Replace os.path.walk with os.walk
os.path.walk was removed in python-3

==

powerline/lib/watcher/uv.py
==================
4e91f18;ZyX;2014-09-14 16:41:54 +0400;Run watcher tests with bytes() arguments

==

tests/test_watcher.py
==================
7dd65a0;ZyX;2014-09-14 16:58:42 +0400;Allow bytes paths in watchers

==

powerline/lib/inotify.py
powerline/lib/watcher/inotify.py
powerline/lib/watcher/uv.py
==================
be7056f;ZyX;2014-09-14 16:13:25 +0400;Allow bytes paths in VCS bindings

==

powerline/lib/path.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
tests/test_lib.py
==================
8417fd2;ZyX;2014-09-14 15:58:34 +0400;Fix overrides in Python-3
With bytes() keys they were not working well since in Python-3 bytes() is not
comparable with str().

==

powerline/bindings/vim/__init__.py
==================
af170ec;ZyX;2014-09-14 15:53:29 +0400;Make vim_get_func handle rettype argument better
As usual it was not working well in Python-3

==

powerline/bindings/vim/__init__.py
powerline/renderers/vim.py
powerline/segments/vim/__init__.py
==================
80db7df;ZyX;2014-09-14 15:44:46 +0400;Do not use vim_funcs['bufnr'] for modified_buffers segment

==

powerline/segments/vim/__init__.py
==================
e7d0c83;ZyX;2014-09-14 15:08:47 +0400;Add code that will return bytes() from vim functions in Python-3

==

powerline/bindings/vim/__init__.py
tests/test_segments.py
==================
f073437;ZyX;2014-09-14 14:28:52 +0400;Remove the only remaining reference to `u'` string prefix

==

docs/source/conf.py
==================
f8b9ad4;ZyX;2014-09-14 14:05:01 +0400;Do not use segment_info['buffer'].name ever
This results in UnicodeDecodeErrors for non-unicode filenames

==

powerline/segments/vim/__init__.py
powerline/vim.py
==================
a4e711d;ZyX;2014-09-14 14:01:42 +0400;Add tests for invalid unicode filenames
Ref #1071

==

tests/test_invalid_unicode.vim
==================
4ed1a7e;ZyX;2014-09-14 13:53:31 +0400;Compare bytes() objects in matcher functions
Fixes #1071

==

powerline/matchers/vim/__init__.py
powerline/matchers/vim/plugin/ctrlp.py
powerline/matchers/vim/plugin/gundo.py
powerline/matchers/vim/plugin/nerdtree.py
==================
d14aecb;ZyX;2014-09-14 13:45:19 +0400;Use proper encoding to convert values in various places
Fixes #1072

==

docs/source/develop/segments.rst
powerline/bindings/vim/__init__.py
powerline/bindings/zsh/__init__.py
powerline/lib/inotify.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/renderers/vim.py
powerline/segments/vim/__init__.py
tests/vim.py
==================
fa21718;ZyX;2014-09-14 13:18:11 +0400;Encode vim statusline to &encoding before returning
Partially fixes #1072

==

powerline/lib/unicode.py
powerline/renderers/vim.py
tests/test_configuration.py
==================
fdf21fe;ZyX;2014-09-10 08:33:39 +0400;Allow setting g:powerline_pyeval to PowerlinePyeval for testing

==

powerline/vim.py
==================
257732b;Nikolai Aleksandrovich Pavlov;2014-09-09 00:22:33 +0400;Merge pull request #1069 from ZyX-I/workaround-1068
Do not use _POWERLINE_SHORTENED_PATH or unset it shortly after using
==
==================
04a66ef;Nikolai Aleksandrovich Pavlov;2014-09-09 00:06:50 +0400;Merge pull request #1070 from ZyX-I/fix-daemon
Include args.config_path in the key
==
==================
901d96e;ZyX;2014-09-09 00:04:56 +0400;Add tests

==

tests/test_shells/input.zsh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
==================
d3b57f7;ZyX;2014-09-08 23:53:05 +0400;Include args.config_path in the key
Consider the following script:

    % powerline-daemon -s powerline-test
    % powerline --socket powerline-test -p/dev/null shell left
    Config file not found in search paths (/dev/null): config.json
    % powerline --socket powerline-test shell left
    Config file not found in search paths (/dev/null): config.json

Note the problem: second call to powerline does not use offending path, but it 
still emits the error “Config file not found in search paths”.
==

scripts/powerline-daemon
tests/run_daemon_tests.sh
tests/test_shells/test.sh
==================
c8b1334;ZyX;2014-09-08 23:31:33 +0400;Do not use _POWERLINE_SHORTENED_PATH or unset it shortly after using
Fixes #1068
==

powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
==================
9e68682;Nikolai Aleksandrovich Pavlov;2014-09-07 23:30:40 +0400;Merge pull request #1067 from ZyX-I/fix-1066
Add proper errno attribute to exception raised by uv watcher
==
==================
fb022b7;ZyX;2014-09-07 23:23:23 +0400;Check that exception from watcher has errno attribute equal to ENOENT

==

tests/test_watcher.py
==================
9f7286e;ZyX;2014-09-07 23:20:49 +0400;Raise OSError with errno=ENOENT from uv watcher
Fixes #1066
==

powerline/lib/watcher/uv.py
==================
5f37ab7;Nikolai Aleksandrovich Pavlov;2014-09-07 21:09:49 +0400;Merge pull request #1065 from ZyX-I/fix-1064
Fix some possible unicode errors
==
==================
becb3b1;ZyX;2014-09-07 20:59:04 +0400;Convert shortened path to unicode
Fixes #1064
==

powerline/segments/shell.py
==================
a962f7e;ZyX;2014-09-07 20:56:35 +0400;Replace u() function with out_u for safer unicode conversion

==

powerline/lib/unicode.py
powerline/segments/common.py
==================
0520526;ZyX;2014-09-07 15:54:56 +0400;Add code to deal with raiagent overlay

==

scripts/powerline-release.py
==================
ab07e8f;ZyX;2014-09-07 14:06:01 +0400;Add ability to run only the given stages

==

scripts/powerline-release.py
==================
5f81c51;ZyX;2014-09-05 22:57:22 +0400;Push to upstream and do not use `release-` prefix

==

scripts/powerline-release.py
==================
bfbb242;ZyX;2014-09-05 21:55:13 +0400;Add script that will be used for releasing powerline

==

scripts/powerline-release.py
==================
c8baa55;ZyX;2014-09-07 15:09:40 +0400;Merge branch 'manifest-docs' into develop

==
==================
1c34b48;ZyX;2014-09-07 14:44:51 +0400;Include documentation in the sdist package

==

MANIFEST.in
==================
02b9071;ZyX;2014-09-06 22:45:45 +0400;Merge commit 'HEAD@{1}' into develop

==
==================
074966a;ZyX;2014-09-06 22:45:25 +0400;Replace “package” with “module” in a number of places
Ref #1059
==

powerline/bindings/vim/plugin/powerline.vim
powerline/segments/common.py
==================
14b48d6;Nikolai Aleksandrovich Pavlov;2014-09-05 22:37:02 +0400;Merge pull request #1061 from ZyX-I/powerline-vim-paths
Replace g:powerline_config_path Vim variable with …_paths list
==
==================
05cb133;ZyX;2014-09-05 22:13:51 +0400;Replace g:powerline_config_path Vim variable with …_paths list
This is for consistency with other powerline bindings that now all do have a way 
to specify a list of paths.
==

docs/source/configuration/local.rst
powerline/vim.py
tests/test_configuration.py
tests/test_local_overrides.vim
tests/test_plugin_file.vim
tests/test_provided_config_files.py
tests/test_tabline.vim
==================
682846d;ZyX;2014-09-05 20:41:03 +0400;Merge branch 'doc-fixes' into develop

==
==================
41f5736;ZyX;2014-09-05 20:40:09 +0400;Fix typo in label ID

==

docs/source/configuration/reference.rst
==================
9eceaf3;ZyX;2014-09-05 20:39:40 +0400;Move docs/source/selectors* to the appropriate place

==

docs/source/configuration/selectors.rst
docs/source/configuration/selectors/vim.rst
docs/source/selectors.rst
docs/source/selectors/vim.rst
==================
4bcb0e1;ZyX;2014-09-05 20:39:22 +0400;Include tips-and-tricks for developers into develop.rst toctree

==

docs/source/develop.rst
==================
51e778c;ZyX;2014-09-05 20:36:09 +0400;Always use `code-block` to format code there

==

docs/source/installation.rst
==================
dc5969e;ZyX;2014-09-05 20:33:26 +0400;Mention `powerline-status` PyPI package in installation documentation
Fixes #1057
==

docs/source/installation.rst
==================
e7ad1f5;ZyX;2014-09-05 20:28:10 +0400;Merge commit 'HEAD@{1}' into develop

==
==================
c0459db;ZyX;2014-09-05 20:27:52 +0400;Rename `beta` version to `dev`

==

setup.py
==================
766efe3;Nikolai Aleksandrovich Pavlov;2014-09-05 20:23:11 +0400;Merge pull request #1058 from ZyX-I/tabline-fixes
Improve tabline support
==
==================
68263be;ZyX;2014-09-05 19:36:31 +0400;Show current buffer, window and tabpage number by default
Fixes #1048

==

powerline/segments/vim/__init__.py
tests/test_tabline.vim
==================
42bd619;ZyX;2014-09-05 19:23:07 +0400;Remove `{module}.{function}` default highlighting group
It is both not documented and not supported by linter in any case.

==

powerline/segment.py
==================
f916fe8;ZyX;2014-09-05 08:57:54 +0400;Use less precise algorythm for width computations under stress
Makes #1047 far less bad

==

powerline/renderer.py
==================
60fb311;ZyX;2014-09-05 08:35:20 +0400;Add a way to profile Vim bindings

==

docs/source/develop/tips-and-tricks.rst
powerline/bindings/vim/autoload/powerline/debug.vim
==================
d569c0b;ZyX;2014-09-05 08:13:35 +0400;Skip identical highlighting
Fixes #1049

==

powerline/renderer.py
powerline/renderers/vim.py
tests/test_tabline.vim
==================
1a5bbbe;ZyX;2014-09-04 22:20:21 +0400;Replace segment-local modes with highlight_group_prefix option
Fixes #1046

==

docs/source/develop/listers.rst
docs/source/develop/segments.rst
powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
powerline/listers/vim.py
powerline/segment.py
powerline/theme.py
tests/test_tabline.vim
==================
b7504c7;ZyX;2014-09-04 22:08:36 +0400;Do not require using `priority_multiplier` key

==

powerline/segment.py
==================
667cd4b;ZyX;2014-09-04 21:21:46 +0400;Assume highlight group is always an iterable
According to the documentation and linter `'highlight_group': 'string'` was not
correct even at the current stage, but it worked. This commit fixes this
situation.

==

powerline/colorscheme.py
powerline/segment.py
powerline/segments/common.py
powerline/segments/shell.py
tests/test_segments.py
==================
adc08d0;ZyX;2014-09-04 20:59:45 +0400;Filter subsegments for segment lister prior to using lister

==

powerline/segment.py
==================
786543c;ZyX;2014-09-04 20:58:13 +0400;Filter None values when computing subsegments for segment listers

==

powerline/segment.py
==================
54e12b1;ZyX;2014-09-04 20:43:35 +0400;Use new functionality to replace tabbuflister and single_tab segment

==

docs/source/configuration.rst
docs/source/selectors.rst
docs/source/selectors/vim.rst
powerline/config_files/themes/vim/tabline.json
powerline/listers/vim.py
powerline/segments/vim/__init__.py
powerline/selectors/__init__.py
powerline/selectors/vim.py
tests/test_segments.py
tests/test_selectors.py
==================
c5ca1b2;ZyX;2014-09-04 21:32:26 +0400;Use class setup/teardown methods to use vim module mock

==

tests/test_configuration.py
tests/test_provided_config_files.py
tests/test_segments.py
==================
7bf025c;ZyX;2014-09-04 20:34:06 +0400;Add `exclude_/include_function` support
This is first step towards fixing #1046.

==

docs/source/configuration/reference.rst
docs/source/develop/segments.rst
powerline/lint/__init__.py
powerline/segment.py
powerline/theme.py
tests/test_configuration.py
==================
bc557bd;ZyX;2014-09-04 20:04:18 +0400;Use replace_item to add module `bar` to sys.modules
Tests should not leave modified environment.

==

tests/test_configuration.py
==================
96b2cb8;ZyX;2014-09-04 19:51:10 +0400;Fix spaces-only line in configuration.rst

==

docs/source/configuration.rst
==================
9947bb3;ZyX;2014-09-04 19:50:45 +0400;Reference sections where all segments are listed

==

docs/source/configuration/listers.rst
docs/source/configuration/reference.rst
docs/source/configuration/segments.rst
==================
ea2fd28;ZyX;2014-09-04 19:38:22 +0400;Merge exclude_modes and include_modes documentation

==

docs/source/configuration/reference.rst
==================
b5a551e;ZyX;2014-09-04 19:34:29 +0400;Fix typos in exclude/include_modes documentation

==

docs/source/configuration/reference.rst
==================
479bc7f;ZyX;2014-09-04 19:09:15 +0400;Do not raise from gen_segment_getter

==

powerline/segment.py
==================
bd719ba;ZyX;2014-09-04 19:05:30 +0400;Make too long line in segment.py more readable

==

powerline/segment.py
==================
00d3dfb;ZyX;2014-09-04 18:27:15 +0400;Merge branch 'pypi' into develop

==
==================
1d4349c;ZyX;2014-09-04 09:13:08 +0400;Exclude *.pyc files in bindings directory

==

MANIFEST.in
==================
a221e82;ZyX;2014-09-04 09:09:45 +0400;Also include client files in the distribution

==

MANIFEST.in
==================
2a515b7;ZyX;2014-09-04 08:46:29 +0400;Use PyPI name in setup.py

==

setup.py
==================
2a73f03;ZyX;2014-09-04 08:46:03 +0400;Add download_url, license and classifiers to setup.py

==

setup.py
==================
31ccd29;Nikolai Aleksandrovich Pavlov;2014-09-04 08:42:04 +0400;Merge pull request #1056 from ZyX-I/vim-troubleshooting
Improve vim troubleshooting
==
==================
8588885;ZyX;2014-09-04 08:32:36 +0400;In vim tests check for printed messages

==

tests/test_local_overrides.vim
tests/test_tabline.vim
==================
0bb14db;ZyX;2014-09-04 08:28:47 +0400;Make it immune to the absense of powerline_appended_path

==

powerline/bindings/vim/plugin/powerline.vim
==================
a919b45;ZyX;2014-09-04 08:27:36 +0400;Fix some errors in troubleshooting code

==

powerline/bindings/vim/plugin/powerline.vim
==================
eda93c8;ZyX;2014-09-04 08:19:17 +0400;Add default_log_stream Powerline attribute, make it sys.stdout in Vim
Reason for changes in VimPowerline:

    try
        python import sys; sys.stderr.write('abc')
    catch
        echomsg v:exception
    endtry

reports an exception. This should not happen because stack trace that ought to 
be printed by the logger will not be shown to the user, making it hard to 
determine the error and turning some recoverable errors to non-recoverable when 
using powerline.vim.
==

powerline/__init__.py
powerline/vim.py
==================
13fef50;Nikolai Aleksandrovich Pavlov;2014-09-03 22:50:52 +0400;Merge pull request #1055 from magus424/develop
Corrects alignment issue between inactive and active windows in tmux.
==
==================
c50838b;Collin Grady;2014-09-02 18:23:52 -0700;Corrects alignment issue between inactive and active windows in tmux.
Adresses #1029

==

powerline/bindings/tmux/powerline.conf
==================
77d311b;Nikolai Aleksandrovich Pavlov;2014-09-02 22:22:43 +0400;Merge pull request #1053 from ZyX-I/fix-uv-watcher
Some fixes for libuv-based watcher
==
==================
a2c6d79;ZyX;2014-09-02 22:09:07 +0400;Return False in place of None to indicate absense of changes
Fixes #1052: another part of it
==

powerline/lib/watcher/uv.py
==================
ad519b5;ZyX;2014-09-02 22:05:00 +0400;Add realpath() calls to Uv watchers where appropriate

==

powerline/lib/watcher/uv.py
==================
c564b64;ZyX;2014-09-02 22:01:50 +0400;Add `is_watching` method to UvWatcher class
Fixes #1052

==

powerline/lib/watcher/uv.py
==================
b638a8e;ZyX;2014-09-02 21:58:42 +0400;Add tests for is_watching method
Currently they fail for uv-based watcher.
==

tests/test_watcher.py
==================
6484341;ZyX;2014-09-02 21:51:46 +0400;Rename `is_watched` method to `is_watching`

==

powerline/lib/vcs/__init__.py
powerline/lib/watcher/inotify.py
powerline/lib/watcher/stat.py
==================
986a694;ZyX;2014-09-02 21:49:23 +0400;Update documentation

==

docs/source/configuration/reference.rst
docs/source/installation.rst
powerline/lib/watcher/__init__.py
==================
a4667c9;Nikolai Aleksandrovich Pavlov;2014-09-01 00:30:05 +0400;Merge pull request #1045 from ZyX-I/style-fixes
Improve coding style
==
==================
8d00ba7;ZyX;2014-08-31 23:01:40 +0400;Remove unneeded # NOQA comments
It appears that something has changed and it no longer complains about double
declaration in else or except blocks.

==

powerline/bindings/vim/__init__.py
powerline/lib/monotonic.py
powerline/lib/shell.py
powerline/lib/unicode.py
powerline/lib/url.py
powerline/listers/vim.py
powerline/matchers/vim/plugin/ctrlp.py
powerline/renderers/vim.py
powerline/segments/__init__.py
powerline/segments/common.py
powerline/segments/vim/__init__.py
powerline/segments/vim/plugin/ctrlp.py
powerline/segments/vim/plugin/nerdtree.py
powerline/segments/vim/plugin/syntastic.py
powerline/segments/vim/plugin/tagbar.py
powerline/vim.py
scripts/powerline-config
scripts/powerline-render
==================
06211cb;ZyX;2014-08-31 22:55:26 +0400;Unify imports
Now imports follow the following structure:

1. __future__ line: exactly one line allowed:

        from __future__ import (unicode_literals, division, absolute_import, print_function)

   (powerline.shell is the only exception due to problems with argparse).
2. Standard python library imports in a form `import X`.
3. Standard python library imports in a form `from X import Y`.
4. and 5. 2. and 3. for third-party (non-python and non-powerline imports).
6. 3. for powerline non-test imports.
7. and 8. 2. and 3. for powerline testing module imports.

Each list entry is separated by exactly one newline from another import. If
there is module docstring it goes between `# vim:` comment and `__future__`
import. So the structure containing all items is the following:

    #!/usr/bin/env python
    # vim:fileencoding=utf-8:noet

    '''Powerline super module'''

    import sys

    from argparse import ArgumentParser

    import psutil

    from colormath.color_diff import delta_e_cie2000

    from powerline.lib.unicode import u

    import tests.vim as vim_module

    from tests import TestCase

.

==

CONTRIBUTING.rst
client/powerline.py
docs/source/conf.py
docs/source/powerline_autodoc.py
powerline/__init__.py
powerline/bindings/awesome/powerline-awesome.py
powerline/bindings/config.py
powerline/bindings/i3/powerline-i3.py
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/bindings/qtile/widget.py
powerline/bindings/tmux/__init__.py
powerline/bindings/vim/__init__.py
powerline/bindings/zsh/__init__.py
powerline/colorscheme.py
powerline/config.py
powerline/ipython.py
powerline/lib/__init__.py
powerline/lib/config.py
powerline/lib/debug.py
powerline/lib/humanize_bytes.py
powerline/lib/inotify.py
powerline/lib/memoize.py
powerline/lib/monotonic.py
powerline/lib/path.py
powerline/lib/shell.py
powerline/lib/threaded.py
powerline/lib/unicode.py
powerline/lib/url.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/lib/watcher/__init__.py
powerline/lib/watcher/inotify.py
powerline/lib/watcher/stat.py
powerline/lib/watcher/tree.py
powerline/lib/watcher/uv.py
powerline/lint/__init__.py
powerline/lint/inspect.py
powerline/lint/markedjson/__init__.py
powerline/lint/markedjson/composer.py
powerline/lint/markedjson/constructor.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/events.py
powerline/lint/markedjson/loader.py
powerline/lint/markedjson/markedvalue.py
powerline/lint/markedjson/nodes.py
powerline/lint/markedjson/parser.py
powerline/lint/markedjson/reader.py
powerline/lint/markedjson/resolver.py
powerline/lint/markedjson/scanner.py
powerline/lint/markedjson/tokens.py
powerline/listers/vim.py
powerline/matchers/__init__.py
powerline/matchers/vim/__init__.py
powerline/matchers/vim/plugin/__init__.py
powerline/matchers/vim/plugin/ctrlp.py
powerline/matchers/vim/plugin/gundo.py
powerline/matchers/vim/plugin/nerdtree.py
powerline/renderer.py
powerline/renderers/i3bar.py
powerline/renderers/ipython/__init__.py
powerline/renderers/pango_markup.py
powerline/renderers/shell/__init__.py
powerline/renderers/shell/bash.py
powerline/renderers/shell/ksh.py
powerline/renderers/shell/tcsh.py
powerline/renderers/shell/zsh.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/segment.py
powerline/segments/__init__.py
powerline/segments/common.py
powerline/segments/i3wm.py
powerline/segments/ipython.py
powerline/segments/shell.py
powerline/segments/tmux.py
powerline/segments/vim/__init__.py
powerline/segments/vim/plugin/__init__.py
powerline/segments/vim/plugin/ctrlp.py
powerline/segments/vim/plugin/nerdtree.py
powerline/segments/vim/plugin/syntastic.py
powerline/segments/vim/plugin/tagbar.py
powerline/shell.py
powerline/theme.py
powerline/vim.py
scripts/powerline-config
scripts/powerline-daemon
scripts/powerline-lint
scripts/powerline-render
setup.py
tests/__init__.py
tests/lib/__init__.py
tests/lib/config_mock.py
tests/lib/fsconfig.py
tests/matchers.py
tests/path/vim.py
tests/test_cmdline.py
tests/test_config_merging.py
tests/test_config_reload.py
tests/test_configuration.py
tests/test_lib.py
tests/test_lib_config.py
tests/test_provided_config_files.py
tests/test_segments.py
tests/test_shells/postproc.py
tests/test_watcher.py
tools/colors_find.py
tools/generate_gradients.py
==================
545bd6b;ZyX;2014-08-31 22:09:09 +0400;Fix some style errors reported by syntastic in .segments.plugin.ctrlp

==

powerline/segments/vim/plugin/ctrlp.py
==================
d952b46;ZyX;2014-08-31 21:44:18 +0400;Fix syntastic error in powerline.lib.memoize

==

powerline/lib/memoize.py
==================
aaed00e;ZyX;2014-08-31 21:33:56 +0400;Fix installation notes location.
These notes are parts of the list entries.
==

docs/source/installation/osx.rst
==================
0e98bc2;ZyX;2014-08-31 21:29:03 +0400;Fix style in a number of places
- Fixes lines where line with N tab indent is followed by a line with N+2 tab 
  indent or greater (most of such lines were already fixed in 
  ae92d83eae5142322ff20b9aa81eb53b0b363575, but regex used there has one flow: 
  it does not catches lines where N=0 for which case first `\+` needs to be 
  replaced with `*`).
- Replace print(…, file=sys.stderr) with sys.stderr.write in powerline-daemon.
==

powerline/lib/watcher/inotify.py
powerline/lint/__init__.py
powerline/lint/markedjson/constructor.py
powerline/lint/markedjson/resolver.py
scripts/powerline-daemon
==================
a2b5837;Nikolai Aleksandrovich Pavlov;2014-08-30 18:29:28 +0400;Merge pull request #1043 from ZyX-I/truncate-expand
Add segment.truncate and segment.expand attributes support
==
==================
2505d0b;ZyX;2014-08-30 18:19:56 +0400;Implement segment truncation
Closes #161 (requires implementation for specific segments though)

==

docs/source/develop/segments.rst
powerline/renderer.py
powerline/segment.py
tests/test_configuration.py
==================
d6c603d;ZyX;2014-08-30 17:54:46 +0400;Add support for `segment.expand`
Closes #154

==

docs/source/configuration/reference.rst
docs/source/develop/listers.rst
docs/source/develop/segments.rst
powerline/segment.py
powerline/theme.py
tests/test_configuration.py
==================
5b038db;ZyX;2014-08-30 17:10:30 +0400;Use `expand` key to fill segments

==

powerline/renderer.py
powerline/segment.py
powerline/theme.py
==================
bfa335d;ZyX;2014-08-30 17:08:32 +0400;Fix typo in test_configuration.py

==

tests/test_configuration.py
==================
0da40f0;ZyX;2014-08-30 16:50:23 +0400;Fix syntastic error

==

tests/lib/__init__.py
==================
875f8e9;ZyX;2014-08-30 16:39:49 +0400;Update documentation

==

docs/source/configuration/reference.rst
==================
2b8e122;Nikolai Aleksandrovich Pavlov;2014-08-30 16:19:01 +0400;Merge pull request #1042 from ZyX-I/remove-filler-segment-type
Remove filler segment type
==
==================
f320fb3;ZyX;2014-08-30 16:08:30 +0400;Remove filler segment type
It was replaced with `"width": "auto"` and is not used anywhere. I do not even 
know whether it works.
==

docs/source/configuration/reference.rst
powerline/lint/__init__.py
powerline/renderer.py
powerline/segment.py
==================
d714fb0;Nikolai Aleksandrovich Pavlov;2014-08-30 16:01:07 +0400;Merge pull request #906 from ZyX-I/uv-watcher
Add pyuv-based watcher
==
==================
8d3376c;ZyX;2014-08-30 15:49:50 +0400;Ultimately disable pyuv watcher tests

==

tests/test_watcher.py
==================
560600f;ZyX;2014-08-16 15:26:19 +0400;Use shutil.rmtree in tests

==

tests/test_lib.py
tests/test_watcher.py
==================
0ee5293;ZyX;2014-06-29 11:17:23 +0400;Add tests for libuv-based watcher
Four possible results of running tests (first three are errors):

- “The change to inotify/file2 was not detected” on line 84: most common
- “Spurious change detected” at line 82 (uncommon, usually fixed by sleeping
  before running test in do_test_for_change)
- “The change to inotify was not detected” in tree watcher test (e.g. from line
  131) (very rare)
- All OK.

==

tests/test_watcher.py
==================
ea3cd2c;ZyX;2014-06-29 00:52:23 +0400;Add libuv-based watcher
Fixes #821

==

powerline/lib/watcher/__init__.py
powerline/lib/watcher/tree.py
powerline/lib/watcher/uv.py
==================
f5f85ab;ZyX;2014-08-30 15:43:10 +0400;Merge branch 'cyclic-references' into develop

==
==================
cee13ec;ZyX;2014-08-30 15:10:46 +0400;Add function that prints cyclic references to powerline.lib.debug

==

powerline/lib/debug.py
==================
f076587;Nikolai Aleksandrovich Pavlov;2014-08-30 01:56:48 +0400;Merge pull request #1040 from ZyX-I/no-gradient-raise
Handle errors from Renderer._set_highlighting
==
==================
acd55bb;ZyX;2014-08-26 19:25:32 +0400;Handle errors from Renderer._set_highlighting
It is done by moving appropriate get_highlighting calls into segment.py: here
errors from contents_func are handled as well.

This is a “fix” for #480 that will make such failures cause segment to disappear
with better header which should show segment which caused the error.

Closes #480

==

powerline/__init__.py
powerline/renderer.py
powerline/segment.py
powerline/theme.py
==================
c488b2d;Nikolai Aleksandrovich Pavlov;2014-08-30 00:17:05 +0400;Merge pull request #1039 from ZyX-I/function-key
Refactor function segments
==
==================
10e8d9b;ZyX;2014-08-29 23:21:19 +0400;Do not use &> in #!/bin/sh scripts

==

tests/test_shells/test.sh
==================
4f5a606;ZyX;2014-08-29 22:57:04 +0400;Use “time” for time segment name

==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/tmux/default.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
powerline/config_files/themes/wm/default.json
==================
4147654;ZyX;2014-08-29 22:38:26 +0400;Replace `name` and `module` keys with `function` key
Fixes #1031

==

docs/source/configuration/reference.rst
powerline/config_files/themes/ipython/in.json
powerline/config_files/themes/ipython/out.json
powerline/config_files/themes/ipython/rewrite.json
powerline/config_files/themes/shell/continuation.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/config_files/themes/tmux/default.json
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/vim/help.json
powerline/config_files/themes/vim/plugin_ctrlp.json
powerline/config_files/themes/vim/plugin_nerdtree.json
powerline/config_files/themes/vim/quickfix.json
powerline/config_files/themes/vim/tabline.json
powerline/config_files/themes/wm/default.json
powerline/lint/__init__.py
powerline/segment.py
tests/test_configuration.py
tests/test_plugin_file.vim
tests/test_provided_config_files.py
tests/test_tabline.vim
==================
5bd543a;ZyX;2014-08-29 22:36:32 +0400;Do not run daemon when running with ONLY_TEST_TYPE=nodaemon

==

tests/test_shells/test.sh
==================
9a0e100;ZyX;2014-08-29 22:32:42 +0400;Specify -p argument in run function when running shell tests

==

tests/test_shells/input.bash
tests/test_shells/input.busybox
tests/test_shells/input.dash
tests/test_shells/input.fish
tests/test_shells/input.mksh
tests/test_shells/input.tcsh
tests/test_shells/input.zsh
tests/test_shells/test.sh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
==================
4c95928;ZyX;2014-08-29 22:22:39 +0400;Split shell tests into files
I am mostly interested in running all python and vim tests separately from other 
tests.
==

tests/run_lint_tests.sh
tests/run_python_tests.sh
tests/run_shell_tests.sh
tests/run_vim_tests.sh
tests/test.sh
==================
c5d15ac;ZyX;2014-08-29 21:06:06 +0400;Merge branch 'non-unicode-errors' into develop

==
==================
d138c94;ZyX;2014-08-29 21:05:54 +0400;Fix non-unicode error messages
Ref #645
==

powerline/__init__.py
==================
d455cec;Nikolai Aleksandrovich Pavlov;2014-08-29 20:56:38 +0400;Merge pull request #1038 from ZyX-I/ascii-defaults
Use non-unicode defaults in Python code
==
==================
849c34e;ZyX;2014-08-29 20:47:44 +0400;Replace all unicode defaults with defaults from ASCII theme
Closes #1034
==

powerline/segments/common.py
powerline/segments/vim/__init__.py
tests/test_segments.py
==================
e808dd7;ZyX;2014-08-29 20:35:40 +0400;Specify temp_format argument for weather segment in ascii theme

==

powerline/config_files/themes/ascii.json
==================
c8d052a;ZyX;2014-08-29 20:33:06 +0400;Add `unicode_text` argument for fuzzy_time to top-level themes

==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
==================
9fe0b66;ZyX;2014-08-29 20:25:51 +0400;Merge branch 'top-theme-extend' into develop

==
==================
356cb43;ZyX;2014-08-29 20:11:26 +0400;Add `powerline_segment_datas` attribute
Fixes #1035

==

docs/source/configuration/reference.rst
docs/source/develop/segments.rst
powerline/__init__.py
powerline/segment.py
powerline/theme.py
tests/test_configuration.py
==================
67845dc;ZyX;2014-08-29 19:36:30 +0400;Add documentation for segment attributes

==

docs/source/develop/segments.rst
==================
cde39f0;ZyX;2014-08-29 19:17:53 +0400;Fix errors reported by syntastic in powerline.lint.inspect

==

powerline/lint/inspect.py
==================
e273287;ZyX;2014-08-29 19:17:14 +0400;Check for presence of powerline_requires_* attributes
In powerline.lint.inspect their value is checked, while in other place `hasattr`
is used. This commit removes this inconsistency.

==

powerline/lint/inspect.py
==================
96a0af9;Nikolai Aleksandrovich Pavlov;2014-08-29 19:10:13 +0400;Merge pull request #1036 from ZyX-I/fix-1033
Fix width used for tabline
==
==================
af10fa1;ZyX;2014-08-29 18:40:43 +0400;Fix typo in mergedicts_copy docstring

==

powerline/lib/__init__.py
==================
8fb09bd;ZyX;2014-08-29 18:40:25 +0400;Add mergedefaults function that does not override existing keys

==

powerline/lib/__init__.py
==================
125f309;ZyX;2014-08-29 18:32:58 +0400;Fix width used for tabline
Fixes #1033
==

powerline/renderers/vim.py
tests/test_tabline.vim
==================
e609bdf;Nikolai Aleksandrovich Pavlov;2014-08-29 00:50:26 +0400;Merge pull request #1032 from ZyX-I/skip-vcs-tests
Refactor VCS tests
==
==================
53ab31e;ZyX;2014-08-29 00:28:41 +0400;Use setUpClass/tearDownClass to deal with VCS repositories

==

tests/test_lib.py
==================
70fabdc;ZyX;2014-08-28 23:59:47 +0400;Use SkipTest for skipping tests

==

tests/test_lib.py
==================
323f0c4;ZyX;2014-08-28 23:58:22 +0400;Use __import__ checks for skipping bzr/mercurial
Closes #1015

==

tests/test_lib.py
==================
305fd79;Nikolai Aleksandrovich Pavlov;2014-08-28 00:00:09 +0400;Merge pull request #1030 from ZyX-I/locale-support
Improve locales support
==
==================
9658e45;ZyX;2014-08-27 23:42:04 +0400;Use &encoding as powerline encoding in Vim
Among other benefits (i.e. correct fall back to ascii theme when Vim uses
non-unicode encoding) this should also fix travis tests: apparently travis is
not setting LANG or similar environment variables to some unicode locale, so
tests are failing.

==

powerline/__init__.py
powerline/bindings/config.py
powerline/vim.py
tests/test_local_overrides.vim
tests/test_plugin_file.vim
tests/test_tabline.vim
tests/vim.py
==================
8f70811;ZyX;2014-08-27 22:33:14 +0400;Add another answer to troubleshooting section

==

docs/source/troubleshooting.rst
==================
e026475;ZyX;2014-08-27 22:30:59 +0400;Move LANG setting to run function, remove useless BINDFILE variable

==

tests/test_shells/test.sh
==================
fe6cd47;ZyX;2014-08-27 22:28:44 +0400;Also add “Shell issues” section

==

docs/source/troubleshooting.rst
==================
dfb08fa;ZyX;2014-08-27 22:28:07 +0400;Separate some issues into “Vim issues” section in troubleshooting

==

docs/source/troubleshooting.rst
==================
285a6aa;ZyX;2014-08-27 22:24:27 +0400;Fall back to ASCII-only theme in case of non-unicode locale

==

docs/source/configuration/reference.rst
powerline/__init__.py
==================
289a08c;ZyX;2014-08-27 22:04:48 +0400;Replace .replace(' ', NBSP) call with self.escape call
Dividers need to be escaped as well.

Fixes #1027

==

powerline/renderer.py
tests/test_shells/bash.daemon.ok
tests/test_shells/bash.nodaemon.ok
tests/test_shells/busybox.daemon.ok
tests/test_shells/busybox.nodaemon.ok
tests/test_shells/dash.daemon.ok
tests/test_shells/dash.nodaemon.ok
tests/test_shells/input.bash
tests/test_shells/input.busybox
tests/test_shells/input.dash
tests/test_shells/input.mksh
tests/test_shells/input.zsh
tests/test_shells/ipython.ok
tests/test_shells/mksh.daemon.ok
tests/test_shells/mksh.nodaemon.ok
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
==================
d32b798;ZyX;2014-08-27 21:58:57 +0400;Add `use_non_breaking_spaces` theme option, use it in ascii theme

==

docs/source/configuration/reference.rst
powerline/config_files/themes/ascii.json
powerline/lint/__init__.py
powerline/renderer.py
tests/test_local_overrides.vim
tests/test_shells/ipython.ok
==================
7e7803f;ZyX;2014-08-27 21:44:29 +0400;Make powerline-render respect user locale as well
Closes #1023

==

powerline/shell.py
scripts/powerline-daemon
scripts/powerline-render
==================
484b9af;ZyX;2014-08-27 21:36:19 +0400;Use the same function for getting encoding in Python client and daemon

==

client/powerline.py
==================
7871cfc;ZyX;2014-08-27 21:34:18 +0400;Use posix.environ in Python client if available
This way there will be no need in converting keys and values to bytes objects on
\*nix systems.

==

client/powerline.py
==================
5434852;ZyX;2014-08-27 21:33:07 +0400;A few style improvements in Python client

==

client/powerline.py
==================
70e7088;ZyX;2014-08-27 21:30:02 +0400;Do not replace ascii with UTF-8 in powerline-daemon and python client
Assuming ascii was expected to be used when LANG=C it did not work in any case:
in this case preferred encoding is “ANSI_X3.4-1968”. Same for
`sys.getfilesystemencoding()`.

==

client/powerline.py
scripts/powerline-daemon
==================
dc1d50b;Nikolai Aleksandrovich Pavlov;2014-08-26 21:35:19 +0400;Merge pull request #1026 from ZyX-I/no-daemon-zero-byte
Do not make daemon output zero byte
==
==================
d88d87f;ZyX;2014-08-26 21:13:56 +0400;Do not make daemon output zero byte
This byte is useless and can be seen in zsh output (strange that it did not 
cause bugs so far, at least none I know about). It may have been needed if any 
client was supposed to hold connection with daemon for a few runs, but all 
current clients work in “request → output response → exit” fashion without 
caring about terminating newline and definitely without preserving connection to 
daemon accross runs.
==

scripts/powerline-daemon
tests/test_shells/zsh.daemon.ok
==================
8394066;Nikolai Aleksandrovich Pavlov;2014-08-26 20:44:10 +0400;Merge pull request #1025 from ZyX-I/fix-vim-troubleshooting
Fix some issues in Vim troubleshooting code
==
==================
644dec7;ZyX;2014-08-26 20:19:04 +0400;Move one if check into python code
Reason: this removes one useless indentation level that breaks “tabs for
indentation, spaces for alignment” rule.

==

powerline/bindings/vim/plugin/powerline.vim
==================
39a7142;ZyX;2014-08-26 20:15:58 +0400;Normalize all paths before doing anything else

==

powerline/bindings/vim/plugin/powerline.vim
==================
c3ba6d0;ZyX;2014-08-26 20:13:12 +0400;Do not remove one component from directory path

==

powerline/bindings/vim/plugin/powerline.vim
==================
e316c81;ZyX;2014-08-26 20:06:49 +0400;Do not emit a warning about symlinks when it is not the problem

==

powerline/bindings/vim/plugin/powerline.vim
==================
dcf442e;ZyX;2014-08-26 20:00:11 +0400;Balance error message text

==

powerline/bindings/vim/plugin/powerline.vim
==================
81d8a9e;ZyX;2014-08-26 19:57:45 +0400;Explicitly print exception from :try block
Reason: :try takes any output to the stderr as the exception, so traceback is 
never printed even though nothing is caught.
==

powerline/bindings/vim/plugin/powerline.vim
==================
b6e8318;ZyX;2014-08-26 19:31:20 +0400;Merge branch 'osx-shell-client' into develop

==
==================
37546f4;ZyX;2014-08-26 19:31:10 +0400;Update shell powerline client OSX requirements in documentation

==

docs/source/installation/osx.rst
==================
c4aa72f;Pierre Carru;2014-08-26 10:37:32 +0100;Make shell client work in OS X:
- use gnu env for `env -0`,
- use filesystem socket.

==

client/powerline.sh
==================
21b10ee;Nikolai Aleksandrovich Pavlov;2014-08-25 19:41:56 +0400;Merge pull request #1005 from ZyX-I/fix-1002
Fix incorrect use of partial
==
==================
1d931bb;Nikolai Aleksandrovich Pavlov;2014-08-25 00:56:00 +0400;Merge pull request #1019 from ZyX-I/workaround-1017
Keep marks around in powerline-lint
==
==================
aeea333;ZyX;2014-08-25 00:48:24 +0400;Fix python-2.6 support
It was calling __setitem__ from copy.deepcopy on an unitialized dictionary.
==

powerline/lint/markedjson/markedvalue.py
==================
9d7c5dd;ZyX;2014-08-25 00:38:32 +0400;Add marks where they were forgotten

==

powerline/lint/__init__.py
==================
1cc1e35;ZyX;2014-08-25 00:38:04 +0400;Check whether values have marks recursively

==

powerline/lint/__init__.py
==================
f8bea41;ZyX;2014-08-25 00:37:25 +0400;Add MarkedDict.keydict attribute
Useful for preserving marked keys

==

powerline/lint/markedjson/markedvalue.py
==================
3a608d8;ZyX;2014-08-25 00:36:43 +0400;Record docstring marks

==

powerline/lint/__init__.py
==================
59e039a;ZyX;2014-08-24 23:24:32 +0400;Make error messages from context_has_marks and havemarks more verbose

==

powerline/lint/__init__.py
==================
721dadd;ZyX;2014-08-24 23:23:31 +0400;Use init_context to initialize config context

==

powerline/lint/__init__.py
==================
b5fae89;ZyX;2014-08-24 23:18:44 +0400;Check whether all values that should have mark attribute have it

==

powerline/lint/__init__.py
==================
8b30e9d;ZyX;2014-08-24 23:06:30 +0400;Also in another place, just in case

==

powerline/lint/__init__.py
==================
26cc26a;ZyX;2014-08-24 23:04:50 +0400;Mark default value of default_module value

==

powerline/lint/__init__.py
==================
242a6a0;ZyX;2014-08-24 22:19:10 +0400;Add `None` mark to module object
Applicable only when it fallbacks to the default value. This may output shown by
travis more informative. And in any case old code contained a bug.

==

powerline/lint/__init__.py
==================
9ee8e69;Nikolai Aleksandrovich Pavlov;2014-08-24 22:09:28 +0400;Merge pull request #1018 from ZyX-I/solarized-colors-names
Use color names specific to solarized
==
==================
4070144;ZyX;2014-08-24 22:01:10 +0400;Move solarized colors below other colors

==

powerline/config_files/colors.json
==================
9d63fb4;ZyX;2014-08-24 22:00:36 +0400;Remove unneeded colors

==

powerline/config_files/colors.json
==================
a70ec39;ZyX;2014-08-24 21:55:13 +0400;Make powerline-lint support `id:id` groups

==

powerline/lint/__init__.py
==================
abc9c5e;pearofducks;2013-04-20 21:14:32 +0200;Add a prefix to solarized color names
Conflicts:
	powerline/config_files/colors.json
	powerline/config_files/colorschemes/shell/solarized.json
	powerline/config_files/colorschemes/vim/solarized.json

==

powerline/config_files/colors.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/colorschemes/solarized.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
==================
2954a5c;Nikolai Aleksandrovich Pavlov;2014-08-24 21:19:04 +0400;Merge pull request #1016 from ZyX-I/tmux-attached_clients
Add segment with count of clients attached to tmux
==
==================
69939f3;ZyX;2014-08-24 21:08:20 +0400;Add __future__ import

==

powerline/segments/tmux.py
==================
dc7f8c2;ZyX;2014-08-24 21:07:46 +0400;Wrap docstring and add dot

==

powerline/segments/tmux.py
==================
e4565dd;ZyX;2014-08-24 21:07:19 +0400;Make attached_clients segment use provided tmux bindings

==

powerline/segments/tmux.py
tests/test_segments.py
==================
eee150f;ZyX;2014-08-22 23:47:13 +0400;Move some functions to from bindings.config to bindings.tmux

==

powerline/bindings/config.py
powerline/bindings/tmux/__init__.py
==================
88515ab;Matthew M. Keeler;2013-09-08 10:29:21 -0500;Show Count of Attached Tmux Sessions
- This segment displays the number of attached tmux clients to the
  currently running session.
- The minimum argument is used to specify a threshold for when the
  segment should be visible.

Fixes #661
Closes #662

Conflicts:
	docs/source/index.rst
	powerline/config_files/colorschemes/shell/default.json
	powerline/config_files/colorschemes/shell/solarized.json
	powerline/config_files/colorschemes/tmux/default.json
	powerline/config_files/colorschemes/vim/default.json
	powerline/config_files/colorschemes/vim/solarized.json
	powerline/config_files/colorschemes/wm/default.json
	tests/test_segments.py

==

docs/source/configuration/segments/tmux.rst
powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/solarized.json
powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/segments/tmux.py
tests/lib/__init__.py
tests/test_segments.py
==================
48b575b;ZyX;2014-08-24 20:19:59 +0400;Merge branch 'rdio-mac-app-player' into develop
Closes #530

==
==================
a9c397e;ZyX;2014-08-24 20:19:28 +0400;Increase indentation of osascript code in spotify player

==

powerline/segments/common.py
==================
86c9e99;ZyX;2014-08-24 20:17:47 +0400;Refactor player_rdio to use the same approach spotify uses

==

powerline/segments/common.py
==================
7f9eef4;Zero Cho;2013-05-30 10:50:04 -0700;Add player support for Rdio Mac app
Conflicts:
	powerline/segments/common.py

==

powerline/segments/common.py
==================
d4525a8;Nikolai Aleksandrovich Pavlov;2014-08-24 20:08:20 +0400;Merge pull request #1014 from ZyX-I/zsh-named-dirs
Add support for zsh named directories
==
==================
45d2053;ZyX;2014-08-24 19:57:54 +0400;Do not specify $PYTHON when running python client
It is not needed: in the environment where it is run only python is the one
linked in tests/shell/path.

==

tests/test_shells/test.sh
==================
d7a674d;ZyX;2014-08-24 19:50:37 +0400;Add support for shell-specific path shortening
Fixes #502

==

powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/shell/__main__.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
powerline/segments/shell.py
tests/test_segments.py
tests/test_shells/input.zsh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
==================
86c3768;ZyX;2014-08-24 19:19:12 +0400;Move with_docstring function to powerline.segments

==

powerline/lib/threaded.py
powerline/segments/__init__.py
powerline/segments/common.py
==================
f4e49e2;ZyX;2014-08-24 19:13:47 +0400;Make powerline autodoc add all Segments

==

docs/source/powerline_autodoc.py
==================
04c0030;ZyX;2014-08-24 19:07:59 +0400;Refactor cwd segment into a class and add shorten_home argument

==

powerline/segments/common.py
tests/test_segments.py
==================
7c07f24;ZyX;2014-08-24 18:08:25 +0400;Merge branch 'clementine-dbus' into develop

==
==================
7c587f5;ZyX;2014-08-24 18:07:07 +0400;Add clementine media player support
Based on #438 by @printesoi

Fixes #422
Closes #438
==

powerline/segments/common.py
==================
e7ef2d1;Nikolai Aleksandrovich Pavlov;2014-08-24 18:02:50 +0400;Merge pull request #1013 from ZyX-I/fix-341
Catch errors from tree_status
==
==================
2d4897d;ZyX;2014-08-24 17:46:11 +0400;Catch errors from tree_status
Fixes #341
==

powerline/segments/common.py
==================
10665f4;ZyX;2014-08-24 17:45:08 +0400;Do not format message before passing it to self.pl.warn

==

powerline/lib/vcs/__init__.py
==================
cd98118;Nikolai Aleksandrovich Pavlov;2014-08-24 17:22:14 +0400;Merge pull request #1012 from ZyX-I/fish-vi-mode
Add fish vi mode support

Closes #879
Fixes #878
==
==================
58057c9;ZyX;2014-08-24 17:13:00 +0400;Add a directory that will make fish_update_completions not launch

==

tests/test_shells/test.sh
==================
0af5e2d;ZyX;2014-08-24 17:09:40 +0400;Test mode support in fish
WARNING: Requires development version of fish. Since fish is not tested in
travis it is probably OK.

==

tests/test_shells/fish.ok
tests/test_shells/input.fish
tests/test_shells/postproc.py
==================
54672aa;ZyX;2014-08-24 16:59:03 +0400;Make COMMAND_PATTERN consistent with other arguments

==

tests/test_shells/input.fish
tests/test_shells/test.sh
==================
68ecd81;ZyX;2014-08-24 16:58:35 +0400;Wait until fish_update_completions finishes

==

tests/test_shells/input.fish
==================
09b7888;ZyX;2014-08-24 15:37:56 +0400;Set default mode in another function

==

powerline/bindings/fish/powerline-setup.fish
==================
9be2a2e;Shen-Ta Hsieh;2014-05-24 03:17:14 +0800;add _POWERLINE_DEFAULT_MODE detection

==

powerline/bindings/fish/powerline-setup.fish
==================
04c293e;sthsieh;2014-05-23 23:44:19 +0800;Add fish shell vi-mode support

==

powerline/bindings/fish/powerline-setup.fish
==================
c2f35ca;Nikolai Aleksandrovich Pavlov;2014-08-24 13:57:08 +0400;Merge pull request #1011 from ZyX-I/old-vims
Improve Vim bindings
==
==================
5bc1f75;ZyX;2014-08-24 13:41:54 +0400;Add support for vim.eval('v:version') in test bindings

==

tests/vim.py
==================
6a8074a;ZyX;2014-08-24 13:35:22 +0400;Update information about Vim version

==

docs/source/usage.rst
==================
767d0af;ZyX;2014-08-24 13:32:52 +0400;Make troubleshooting routine actually work

==

powerline/bindings/vim/plugin/powerline.vim
==================
6dde8f2;ZyX;2014-08-24 13:27:52 +0400;Move powerline setup under :try
Makes it benefit from troubleshooting below

==

powerline/bindings/vim/plugin/powerline.vim
==================
2c8932b;ZyX;2014-08-24 13:21:51 +0400;Do not call mode() with an argument on old Vims

==

powerline/renderers/vim.py
==================
c2609e3;ZyX;2014-08-24 13:21:09 +0400;Replace let s:pystr… with call s:rcmd(…)
Makes lines slightly shorter

==

powerline/bindings/vim/plugin/powerline.vim
==================
098dada;ZyX;2014-08-24 13:20:08 +0400;Add some unlets before calling :finish

==

powerline/bindings/vim/plugin/powerline.vim
==================
4f07694;Nikolai Aleksandrovich Pavlov;2014-08-24 01:32:43 +0400;Merge pull request #1010 from ZyX-I/internal_ip
Add internal_ip segment

Closes #857
Fixes #826
==
==================
173c4d6;ZyX;2014-08-24 01:20:25 +0400;Add internal_ip segment
Closes #857
==

powerline/config_files/colorschemes/default.json
powerline/segments/common.py
tests/install.sh
tests/lib/__init__.py
tests/test_segments.py
==================
d76df9f;ZyX;2014-08-23 19:09:42 +0400;Merge branch 'fix-reloading' into develop

==
==================
483b261;ZyX;2014-08-23 19:09:28 +0400;When processing exception from _load do not allow overwriting it
If `self.loaded.pop` raises KeyError then this KeyError will be logged, not the 
initial exception from `self._load`.
==

powerline/lib/config.py
==================
f6f8dd8;ZyX;2014-08-23 19:07:57 +0400;Make condition function return path as expected by lib.config

==

powerline/__init__.py
==================
1a71ed3;Nikolai Aleksandrovich Pavlov;2014-08-23 16:30:59 +0400;Merge pull request #1009 from ZyX-I/fix-1008
Improve Python 3 compatibility when using daemon and client
==
==================
20e9575;ZyX;2014-08-23 16:24:16 +0400;Do not try to test ipython if it is not available

==

tests/test_shells/test.sh
==================
1b56179;ZyX;2014-08-23 16:02:04 +0400;Disable dash tests in travis

==

tests/test_shells/test.sh
==================
ebc9897;ZyX;2014-08-23 15:18:00 +0400;Make test_shells/test.sh compatible with dash

==

tests/test_shells/test.sh
==================
9b7052b;ZyX;2014-08-23 15:16:30 +0400;Do not execute all tests in travis

==

tests/test.sh
tests/test_shells/test.sh
==================
0232d32;ZyX;2014-08-23 14:55:59 +0400;Add --socket argument to all clients
Makes it not needed to kill daemon for testing, but disables implicit
`powerline-config shell command` testing.

==

client/powerline.c
client/powerline.py
client/powerline.sh
powerline/shell.py
scripts/powerline-daemon
tests/test_shells/test.sh
==================
77a7a26;ZyX;2014-08-23 04:43:17 +0400;Do not require scripts/powerline
It may be immediately moved to bin/ sometimes or not compiled at all for some
reason.

==

tests/test_shells/test.sh
==================
042d542;ZyX;2014-08-23 03:52:09 +0400;Also test whether running daemon is successfull without arguments

==

tests/test_shells/test.sh
==================
b9360a0;ZyX;2014-08-23 03:28:51 +0400;Make tests test powerline daemon with valid python and all clients

==

tests/install.sh
tests/test_shells/postproc.py
tests/test_shells/screenrc
tests/test_shells/test.sh
==================
03c22e9;ZyX;2014-08-23 04:30:22 +0400;Make tcsh check whether some variables are defined or empty
Makes it consistent with other shells

==

docs/source/configuration/local.rst
powerline/bindings/tcsh/powerline.tcsh
==================
8e77262;ZyX;2014-08-23 04:19:54 +0400;Perform shell word splitting in zsh bindings
This makes POWERLINE_COMMAND be consistent across various bindings.

==

docs/source/configuration/local.rst
powerline/bindings/zsh/powerline.zsh
==================
dc76396;ZyX;2014-08-23 04:10:47 +0400;Solve encoding issues in powerline python client

==

client/powerline.py
==================
74d147a;ZyX;2014-08-23 03:55:37 +0400;Use `open` to open file descriptors in place of `file`
Reason: there is no `file()` in Python 3.

Fix was originally presented by @kovidgoyal in [3deb69][1], but I cannot
cherry-pick this commit, because its commit message is highly undescriptive.

Fixes #1008

[1]: https://github.com/kovidgoyal/powerline-daemon/commit/3deb6988c8992d92ef43d9f03c7a725ac9836c20

==

scripts/powerline-daemon
==================
6e128c1;Nikolai Aleksandrovich Pavlov;2014-08-22 22:04:29 +0400;Merge pull request #1007 from ZyX-I/tab-modified-indicator
Add tab_modified indicator
==
==================
5a45b7d;ZyX;2014-08-22 21:34:37 +0400;Move processing segment['mode'] to segment.py

==

powerline/segment.py
powerline/theme.py
==================
974ec17;ZyX;2014-08-22 21:03:27 +0400;Filter segments using mode in Theme.get_segments

==

powerline/renderer.py
powerline/theme.py
==================
6481f1b;ZyX;2014-08-22 20:39:31 +0400;Always specify all keys in segment_info

==

powerline/renderers/vim.py
powerline/vim.py
tests/test_provided_config_files.py
==================
da48e9d;ZyX;2014-08-22 09:08:58 +0400;Add tests

==

tests/test_segments.py
==================
5c4d75f;ZyX;2014-08-22 08:59:25 +0400;Make tab_modified_indicator work in old Vims
Closes #996

==

powerline/bindings/vim/__init__.py
powerline/segments/vim/__init__.py
==================
9cab9d6;ZyX;2014-08-22 08:40:11 +0400;Use tab_modified_indicator highlight group

==

powerline/segments/vim/__init__.py
==================
58b7e6c;ZyX;2014-08-22 08:38:56 +0400;Use spaces for alignment

==

powerline/segments/vim/__init__.py
==================
80c4856;ZyX;2014-08-22 08:38:38 +0400;Remove useless TODO

==

powerline/segments/vim/__init__.py
==================
96e297c;Jan Losinski;2014-08-18 17:33:16 +0200;Add tab_modified_indicator to the vim segments
This indicates in the tabline that any of the open buffers in a tab
page has unsaved modifications (like the default tabline do).

Signed-off-by: Jan Losinski <losinski@wh2.tu-dresden.de>

==

powerline/config_files/themes/vim/tabline.json
powerline/segments/vim/__init__.py
==================
14a68ef;Nikolai Aleksandrovich Pavlov;2014-08-22 08:17:27 +0400;Merge pull request #1006 from ZyX-I/vim-reload-local_themes
Fix Vim extension reloading when using .add_local_theme()
==
==================
849a866;ZyX;2014-08-22 00:46:12 +0400;Fix Vim extension reloading when using .add_local_theme()

==

powerline/__init__.py
powerline/vim.py
==================
abaac3f;ZyX;2014-08-22 00:32:17 +0400;Fix indentation error reported by syntastic

==

powerline/segments/common.py
==================
a50b488;ZyX;2014-08-22 00:30:29 +0400;Fix incorrect use of partial
Fixes #1002
==

powerline/segments/common.py
==================
0ea1cd6;Nikolai Aleksandrovich Pavlov;2014-08-21 23:52:36 +0400;Merge pull request #1004 from ZyX-I/fix-1003
Fix incorrect include/exclude_modes handling
==
==================
075eb84;ZyX;2014-08-21 23:31:48 +0400;Add tests

==

tests/test_configuration.py
==================
95bdca8;ZyX;2014-08-21 23:24:30 +0400;Fix syntastic warnings in powerline/__init__

==

powerline/__init__.py
==================
88a0b90;ZyX;2014-08-21 23:17:15 +0400;Remove unused vim import

==

tests/test_configuration.py
==================
6b51d12;ZyX;2014-08-21 23:10:54 +0400;Fix typo in renderer implementation
Fixes #1003

==

powerline/renderer.py
==================
b957308;Nikolai Aleksandrovich Pavlov;2014-08-20 21:38:58 +0400;Merge pull request #1001 from ZyX-I/workaround-997
Do not use some features in old Vims as they cause a crash
==
==================
8262a0e;ZyX;2014-08-20 20:34:23 +0400;Do not use some features in old Vims as they cause a crash
Fixes #997
Closes #999

==

powerline/bindings/vim/__init__.py
==================
e18251d;ZyX;2014-08-20 21:13:12 +0400;Merge branch 'fix-ipython-tests' into develop

==
==================
48aac90;ZyX;2014-08-20 21:12:10 +0400;Fix ipython tests

==

tests/test_provided_config_files.py
==================
f9e525b;Nikolai Aleksandrovich Pavlov;2014-08-19 23:56:55 +0400;Merge pull request #1000 from ZyX-I/non-vim-reload
Add powerline reloading support to IPython and zsh with libzpython
==
==================
28bcb01;ZyX;2014-08-19 22:12:33 +0400;Update documentation

==

docs/source/develop/segments.rst
docs/source/tips-and-tricks.rst
==================
137fffc;ZyX;2014-08-19 21:29:32 +0400;Add `%powerline reload` IPython magic function

==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/ipython.py
==================
06175dc;ZyX;2014-08-19 19:54:54 +0400;Refactor IPython bindings
- Replaced two powerline objects with one powerline object utilizing
  RendererProxy proxy class that holds two Renderer instances.
- Made .setup() functions do something more meaningful.

==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/ipython.py
powerline/renderers/ipython/__init__.py
powerline/renderers/ipython/prompt.py
powerline/renderers/shell/__init__.py
tests/test_provided_config_files.py
==================
b93f8d9;ZyX;2014-08-19 19:44:07 +0400;Rename Ipython to IPython (two capital letters in place of one)

==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/ipython.py
powerline/renderers/ipython/__init__.py
powerline/renderers/ipython/prompt.py
tests/test_provided_config_files.py
==================
50160e9;ZyX;2014-08-19 21:57:23 +0400;Add powerline-reload function for libzpython bindings

==

powerline/bindings/zsh/powerline.zsh
==================
23a3dc8;ZyX;2014-08-19 19:05:49 +0400;Implement powerline reloading in libzpython bindings

==

powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
==================
015a216;ZyX;2014-08-19 19:05:14 +0400;Import sys in reload() function
It may be None sometimes
==

powerline/__init__.py
==================
ff78eaa;ZyX;2014-08-18 22:45:32 +0400;Do not override Powerline.setup(), use .do_setup() for this
Same reason as for `.__init__()` which was replaced by `.init()`
==

powerline/__init__.py
powerline/ipython.py
powerline/shell.py
powerline/vim.py
==================
696f4d2;ZyX;2014-08-16 19:57:05 +0400;Merge branch 'less-terminus-spaces' into develop

==
==================
f88d6cd;ZyX;2014-08-16 19:56:47 +0400;Fix typo in unicode_terminus theme: make it use one space

==

powerline/config_files/themes/unicode_terminus.json
==================
849bdb7;Nikolai Aleksandrovich Pavlov;2014-08-16 18:32:38 +0400;Merge pull request #436 from ZyX-I/powerline-reload
Add support for reloading powerline
==
==================
fe7aad7;ZyX;2014-08-16 18:30:25 +0400;Update documentation for `Powerline.init`

==

powerline/__init__.py
==================
9435447;ZyX;2013-04-15 23:49:04 +0400;Add support for full powerline reloading at runtime
Is not guaranteed to work in all cases.

==

powerline/__init__.py
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/ipython.py
powerline/shell.py
powerline/vim.py
==================
ca13bc5;ZyX;2013-04-15 08:31:02 +0400;Add setup function

==

powerline/__init__.py
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/bindings/vim/plugin/powerline.vim
powerline/bindings/zsh/__init__.py
powerline/ipython.py
powerline/shell.py
powerline/vim.py
==================
3c1ec19;ZyX;2013-04-15 08:30:21 +0400;Record imported modules

==

powerline/__init__.py
==================
1095257;ZyX;2013-04-10 20:04:22 +0400;Pop path from self.loaded on exception

==

powerline/lib/config.py
==================
85189e8;ZyX;2013-04-09 00:19:06 +0400;Add set_event argument to .shutdown() method

==

powerline/__init__.py
==================
bbe3210;ZyX;2013-04-09 00:00:28 +0400;Remove reference cycle
Switches from

    powerline ↔ get_module_attr (as a bound method it contains reference to
            │       ↑            self)
            └────> theme

to

            ┌────> pl, import_paths
            │       ↑
    powerline → get_module_attr
            │       ↑
            └────> theme

This is a separate commit because I am not sure whether it makes sense to bother
with this cycle.

==

powerline/__init__.py
==================
446eb42;ZyX;2013-04-08 23:46:29 +0400;Replace various __import__ calls with one Powerline.get_module_attr
Also makes some more errors non-fatal:
- Failure to import renderer class in case there is an existing renderer object
- Failure to import segment function
- Failure to import matcher function

One of the purposes: create a function that is able to collect all imported
modules to reload them (really purge out from `sys.modules` and let the python
do its job when reimporting powerline and recreating Powerline and other
objects).

==

powerline/__init__.py
powerline/matcher.py
powerline/segment.py
powerline/theme.py
powerline/vim.py
==================
c2c2d7e;Nikolai Aleksandrovich Pavlov;2014-08-16 15:16:51 +0400;Merge pull request #994 from ZyX-I/refactor-watcher
Refactor watchers code
==
==================
39251ce;ZyX;2014-08-16 15:00:49 +0400;Remove in-method imports from inotify

==

powerline/lib/inotify.py
powerline/lib/watcher/inotify.py
==================
cb99c06;ZyX;2014-06-29 01:00:44 +0400;Move watcher tests into a separate file

==

tests/test_lib.py
tests/test_watcher.py
==================
2faa2a2;ZyX;2014-06-28 22:59:46 +0400;Move tree_watcher to powerline/lib/watcher and split it

==

powerline/lib/tree_watcher.py
powerline/lib/vcs/__init__.py
powerline/lib/watcher/__init__.py
powerline/lib/watcher/inotify.py
powerline/lib/watcher/tree.py
tests/test_lib.py
==================
cb41ce4;ZyX;2014-06-28 22:38:36 +0400;Remove function that is not used anywhere

==

powerline/lib/tree_watcher.py
==================
14608d1;ZyX;2014-06-28 22:37:05 +0400;Make naming consistent with tree_watcher

==

powerline/lib/watcher/__init__.py
powerline/lib/watcher/inotify.py
powerline/lib/watcher/stat.py
==================
61074fc;ZyX;2014-06-28 22:35:31 +0400;Refactor file_watcher.py into four files

==

powerline/lib/config.py
powerline/lib/file_watcher.py
powerline/lib/path.py
powerline/lib/vcs/__init__.py
powerline/lib/watcher/__init__.py
powerline/lib/watcher/inotify.py
powerline/lib/watcher/stat.py
powerline/segment.py
tests/test_lib.py
==================
1ea3b96;Nikolai Aleksandrovich Pavlov;2014-08-16 14:44:44 +0400;Merge pull request #993 from ZyX-I/listers
Some lister improvements

Fixes #989
Closes #972
Ref #614
==
==================
62e8e78;ZyX;2014-08-16 14:36:48 +0400;Fix exclude_/include_modes support with new segment['mode'] key

==

powerline/renderer.py
==================
31731a9;ZyX;2014-08-16 14:25:43 +0400;Add bufnr and modified_indicator segments to tabline

==

powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/themes/vim/tabline.json
tests/test_tabline.vim
==================
a792fb0;ZyX;2014-08-16 14:25:12 +0400;Add support for `draw_inner_divider` in listers

==

docs/source/develop/listers.rst
powerline/config_files/themes/vim/tabline.json
powerline/segment.py
==================
6106e91;ZyX;2014-08-16 14:00:08 +0400;Remove duplicate documentation of draw_inner_divider

==

docs/source/configuration/reference.rst
docs/source/develop/segments.rst
==================
407a8bc;ZyX;2014-08-16 13:59:00 +0400;Fix incorrect description of draw_inner_divider

==

docs/source/develop/segments.rst
==================
096c480;ZyX;2014-08-16 13:51:26 +0400;Use buf_nc and tab_nc modes in listers

==

powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
powerline/config_files/themes/vim/tabline.json
powerline/lint/__init__.py
powerline/listers/vim.py
==================
ac7a959;ZyX;2014-08-16 13:46:14 +0400;Remove nonlocal image URLs from overview

==

docs/source/overview.rst
==================
d1782d4;ZyX;2014-08-16 13:43:22 +0400;Add documentation about creating listers

==

docs/source/configuration/listers.rst
docs/source/develop.rst
docs/source/develop/listers.rst
==================
a332413;ZyX;2014-08-16 13:33:59 +0400;Use generators in place of list comprehension in listers

==

powerline/listers/vim.py
==================
c3099ce;ZyX;2014-08-16 13:22:31 +0400;Add lister reference

==

docs/source/configuration.rst
docs/source/configuration/listers.rst
docs/source/develop/segments.rst
==================
402cc9e;ZyX;2014-08-16 13:21:46 +0400;Also show documentation for plugin-specific segments

==

docs/source/configuration/segments/vim.rst
==================
24938e0;ZyX;2014-08-16 13:06:19 +0400;Remove duplicate information from configuration/segments.rst

==

docs/source/configuration/segments.rst
==================
ff2009d;ZyX;2014-08-16 13:03:40 +0400;Update mode in segment_info in tabpage lister

==

powerline/listers/vim.py
==================
54f0537;ZyX;2014-08-16 12:57:34 +0400;Do not show unlisted buffers
Closes #972
==

powerline/listers/vim.py
==================
61fc73d;ZyX;2014-08-16 12:42:25 +0400;Make listers accept any number of keyword arguments

==

powerline/listers/vim.py
==================
642ced9;ZyX;2014-08-16 12:39:27 +0400;Move listers to powerline.listers.vim module

==

powerline/config_files/themes/vim/tabline.json
powerline/listers/__init__.py
powerline/listers/vim.py
powerline/segments/vim/__init__.py
==================
cb598f1;Nikolai Aleksandrovich Pavlov;2014-08-16 11:56:30 +0400;Merge pull request #992 from jarnett/develop
another workaround for _powerline_tmux_setenv() issue with bash-4.2.45
==
==================
65dfc9f;Jesse;2014-08-15 23:17:00 -0400;another workaround for _powerline_tmux_setenv() issue with bash-4.2.45

==

powerline/bindings/bash/powerline.sh
==================
9ba37d9;Nikolai Aleksandrovich Pavlov;2014-08-15 21:37:27 +0400;Merge pull request #988 from ZyX-I/weather-icons
Add weather icons to top-level themes
==
==================
79a3629;ZyX;2014-08-15 21:14:40 +0400;Replace foggy weather symbol with IDENTICAL TO
Closes #799
==

powerline/config_files/themes/powerline.json
powerline/config_files/themes/unicode.json
==================
7ab8c30;Nikolai Aleksandrovich Pavlov;2014-08-15 21:13:17 +0400;Merge pull request #987 from ZyX-I/style
Fix powerline style
==
==================
e2ffc80;ZyX;2014-08-15 21:12:14 +0400;Add weather icons to various themes

==

powerline/config_files/themes/ascii.json
powerline/config_files/themes/powerline.json
powerline/config_files/themes/unicode.json
powerline/config_files/themes/unicode_terminus.json
powerline/config_files/themes/unicode_terminus_condensed.json
==================
ae92d83;ZyX;2014-08-15 20:58:19 +0400;Fix powerline style
Specifically I searched for all lines that are more then one tab off compared to 
the previous line with

    BufGrep /\(^\t\+\)\S.*\n\1\t\t\+/

and replaced them with something more appropriate. Most of time this resulted in 
a few more newlines, but there are cases when I used mixed tabs/spaces 
indentation+alignment.
==

.local.vimrc
powerline/__init__.py
powerline/bindings/vim/__init__.py
powerline/lib/inotify.py
powerline/lib/shell.py
powerline/lib/tree_watcher.py
powerline/lib/vcs/git.py
powerline/lint/__init__.py
powerline/lint/markedjson/composer.py
powerline/lint/markedjson/constructor.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/events.py
powerline/lint/markedjson/markedvalue.py
powerline/lint/markedjson/nodes.py
powerline/lint/markedjson/parser.py
powerline/lint/markedjson/reader.py
powerline/lint/markedjson/resolver.py
powerline/lint/markedjson/scanner.py
powerline/lint/markedjson/tokens.py
powerline/renderer.py
powerline/renderers/vim.py
powerline/segments/common.py
powerline/segments/vim/__init__.py
powerline/shell.py
powerline/theme.py
powerline/vim.py
tests/lib/__init__.py
tests/test_segments.py
tests/vim.py
tools/colors_find.py
tools/generate_gradients.py
==================
cdd36aa;Nikolai Aleksandrovich Pavlov;2014-08-15 20:21:13 +0400;Merge pull request #986 from ZyX-I/developer-documentation
Developer documentation and module layout refactoring
==
==================
cbfa64c;ZyX;2014-08-15 20:06:40 +0400;Mention long lines in CONTRIBUTING.rst

==

CONTRIBUTING.rst
==================
fa93d0a;ZyX;2014-08-15 20:04:12 +0400;Ignore E101 (“indentation contains mixed spaces and tabs”)

==

.local.vimrc
CONTRIBUTING.rst
==================
c316ef8;ZyX;2014-08-15 20:01:33 +0400;Fix some style problems

==

powerline/lib/vcs/__init__.py
powerline/lint/__init__.py
powerline/segments/common.py
==================
2f3d568;ZyX;2014-08-15 20:01:07 +0400;Drop unneeded ignores

==

.local.vimrc
CONTRIBUTING.rst
==================
0848f7d;ZyX;2014-08-15 19:44:27 +0400;Document how to create extensions
Fixes #287
==

docs/source/develop.rst
docs/source/develop/extensions.rst
==================
33562ab;ZyX;2014-08-15 19:41:15 +0400;Improve documentation

==

powerline/__init__.py
==================
4a8b81e;ZyX;2014-08-15 19:15:49 +0400;Rearrange renderers: move *_prompt modules one level up
Renames powerline.renderers.zsh_prompt to powerline.renderers.shell.zsh, same
for other *sh_prompt modules.

==

powerline/__init__.py
powerline/bindings/bash/powerline.sh
powerline/bindings/shell/powerline.sh
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
powerline/ipython.py
powerline/lint/__init__.py
powerline/renderers/bash_prompt.py
powerline/renderers/ipython.py
powerline/renderers/ipython/__init__.py
powerline/renderers/ipython/prompt.py
powerline/renderers/ipython_prompt.py
powerline/renderers/ksh_prompt.py
powerline/renderers/shell.py
powerline/renderers/shell/__init__.py
powerline/renderers/shell/bash.py
powerline/renderers/shell/ksh.py
powerline/renderers/shell/tcsh.py
powerline/renderers/shell/zsh.py
powerline/renderers/tcsh_prompt.py
powerline/renderers/zsh_prompt.py
powerline/shell.py
tests/test_cmdline.py
tests/test_provided_config_files.py
==================
b5b91af;ZyX;2014-08-15 18:41:55 +0400;Document how to create Vim local themes

==

docs/source/develop.rst
docs/source/develop/local-themes.rst
docs/source/develop/segments.rst
==================
f0ccb2d;ZyX;2014-08-14 23:51:07 +0400;Fix path to __main__ theme

==

docs/source/configuration/reference.rst
==================
1a1a841;ZyX;2014-08-14 23:33:44 +0400;Add information about shell and ipython local themes

==

docs/source/configuration/reference.rst
==================
86ddb38;ZyX;2014-08-14 22:54:34 +0400;Add information about writing segments
Fixes #629
Ref #287

==

docs/source/configuration/reference.rst
docs/source/develop.rst
docs/source/develop/segments.rst
docs/source/index.rst
powerline/__init__.py
powerline/segments/__init__.py
==================
df19fe2;ZyX;2014-08-14 22:50:27 +0400;Mention `showtabline` option in Vim tips and tricks

==

docs/source/tips-and-tricks.rst
==================
63a376e;ZyX;2014-08-14 23:25:39 +0400;Alter plugin layout: move *.plugin to *.{ext}.plugin
I do not see why vim plugins should receive such a generic name as
`powerline.segments.plugin.gundo`: taking a name that clearly indicates that
`gundo` is a *vim* plugin is better.

==

powerline/config_files/config.json
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/vim/plugin_ctrlp.json
powerline/config_files/themes/vim/plugin_nerdtree.json
powerline/matcher.py
powerline/matchers/plugin/__init__.py
powerline/matchers/plugin/ctrlp.py
powerline/matchers/plugin/gundo.py
powerline/matchers/plugin/nerdtree.py
powerline/matchers/vim.py
powerline/matchers/vim/__init__.py
powerline/matchers/vim/plugin/__init__.py
powerline/matchers/vim/plugin/ctrlp.py
powerline/matchers/vim/plugin/gundo.py
powerline/matchers/vim/plugin/nerdtree.py
powerline/segment.py
powerline/segments/plugin/__init__.py
powerline/segments/plugin/ctrlp.py
powerline/segments/plugin/nerdtree.py
powerline/segments/plugin/syntastic.py
powerline/segments/plugin/tagbar.py
powerline/segments/vim.py
powerline/segments/vim/__init__.py
powerline/segments/vim/plugin/__init__.py
powerline/segments/vim/plugin/ctrlp.py
powerline/segments/vim/plugin/nerdtree.py
powerline/segments/vim/plugin/syntastic.py
powerline/segments/vim/plugin/tagbar.py
==================
d66256a;Nikolai Aleksandrovich Pavlov;2014-08-15 18:28:51 +0400;Merge pull request #985 from ZyX-I/fix-983
Check whether $COLUMNS is empty or zero, not only empty
==
==================
7789ed2;Nikolai Aleksandrovich Pavlov;2014-08-15 18:20:54 +0400;Merge pull request #984 from ZyX-I/fix-250
Call powerline.new_window early under certain conditions
==
==================
6c187d9;ZyX;2014-08-15 18:00:09 +0400;Call powerline.new_window early under certain conditions
Fixes #250 for the GUI.
==

powerline/vim.py
==================
8523282;ZyX;2014-08-15 18:01:17 +0400;Check whether $COLUMNS is empty or zero, not only empty
Fixes #983
==

powerline/bindings/fish/powerline-setup.fish
==================
23b43d8;Nikolai Aleksandrovich Pavlov;2014-08-13 19:46:42 +0400;Merge pull request #982 from gladiac/docs
docs: Fix building the docs without RTD theme.
==
==================
538a41b;Andreas Schneider;2014-08-13 17:37:11 +0200;docs: Fix building the docs without RTD theme.
Signed-off-by: Andreas Schneider <asn@cryptomilk.org>

==

docs/source/conf.py
==================
7453e58;Nikolai Aleksandrovich Pavlov;2014-08-13 07:56:43 +0400;Merge pull request #979 from ZyX-I/fix-add_local_theme
Fix VimPowerline.add_local_theme
==
==================
1afab26;ZyX;2014-08-12 20:48:49 +0400;Test that VimPowerline.add_local_theme works

==

powerline/vim.py
tests/matchers.py
tests/test_configuration.py
==================
da867b2;ZyX;2014-08-12 20:33:03 +0400;Fix VimPowerline.add_local_theme
After #783 it started to fail as it made Theme require defining dividers in 
theme and add_local_theme did not merge in other themes (__main__ and top).
==

powerline/__init__.py
powerline/vim.py
==================
b8c61c1;Nikolai Aleksandrovich Pavlov;2014-08-12 08:26:13 +0400;Merge pull request #978 from ZyX-I/other-shell-local-themes
Add support for PS2 and PS3 prompts outside of zsh
==
==================
7882583;ZyX;2014-08-12 08:16:26 +0400;Update continuation segment tests

==

tests/test_segments.py
==================
d658e08;ZyX;2014-08-12 08:11:40 +0400;Merge branch 'fix-977' into develop

==
==================
9e37648;ZyX;2014-08-12 08:11:15 +0400;Remove unneeded keyword argument to player function
Fixes #977
==

powerline/segments/common.py
==================
89afac4;ZyX;2014-08-12 07:54:34 +0400;Add support for PS2 and PS3 prompts outside of zsh

==

docs/source/usage/shell-prompts.rst
powerline/bindings/bash/powerline.sh
powerline/bindings/shell/powerline.sh
powerline/renderers/shell.py
powerline/renderers/zsh_prompt.py
powerline/segments/shell.py
tests/test_shells/bash.daemon.ok
tests/test_shells/bash.nodaemon.ok
tests/test_shells/bash.ok
tests/test_shells/busybox.daemon.ok
tests/test_shells/busybox.nodaemon.ok
tests/test_shells/busybox.ok
tests/test_shells/dash.daemon.ok
tests/test_shells/dash.nodaemon.ok
tests/test_shells/dash.ok
tests/test_shells/input.bash
tests/test_shells/input.busybox
tests/test_shells/input.dash
tests/test_shells/input.mksh
tests/test_shells/mksh.daemon.ok
tests/test_shells/mksh.nodaemon.ok
tests/test_shells/mksh.ok
tests/test_shells/postproc.py
tests/test_shells/test.sh
==================
1abe0ac;Nikolai Aleksandrovich Pavlov;2014-08-10 21:10:16 +0400;Merge pull request #975 from ZyX-I/min_cursor_columns
Add cursor_space and cursor_columns options
==
==================
4f3a682;ZyX;2014-08-10 20:50:42 +0400;Add priorities to ipython and shell themes

==

powerline/config_files/themes/ipython/in.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
==================
eeb3b5a;ZyX;2014-08-10 20:35:56 +0400;Do not repeat renderer module argument more then once

==

powerline/bindings/zsh/powerline.zsh
==================
547306e;ZyX;2014-08-10 20:24:02 +0400;Add cursor_space and cursor_columns configuration options
Fixes #815

==

docs/source/configuration/reference.rst
powerline/bindings/bash/powerline.sh
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/bindings/shell/powerline.sh
powerline/bindings/zsh/powerline.zsh
powerline/ipython.py
powerline/lint/__init__.py
powerline/renderers/shell.py
powerline/theme.py
tests/test_provided_config_files.py
==================
c97ab80;ZyX;2014-08-10 19:05:53 +0400;Add output_width used for various shells

==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/renderer.py
powerline/renderers/ipython.py
powerline/renderers/shell.py
==================
72b7744;ZyX;2014-08-10 18:28:32 +0400;Split Renderer.render() into .render() and .do_render()

==

powerline/renderer.py
==================
fcc3971;ZyX;2014-08-10 18:19:48 +0400;Wait for screen to initialize, based on screen exit status
Otherwise bash tests tend to fail randomly
==

tests/test_shells/test.sh
==================
50e4c1d;ZyX;2014-08-10 18:15:14 +0400;Move ZshPromptRenderer.render method to ShellRenderer

==

powerline/renderers/shell.py
powerline/renderers/zsh_prompt.py
==================
3c243e1;ZyX;2014-08-10 18:10:03 +0400;Rename top_theme_config to main_theme_config
Reason: preventing name conflict (top-level theme is a theme from #783).
==

powerline/renderers/ipython.py
powerline/renderers/vim.py
powerline/renderers/zsh_prompt.py
powerline/theme.py
==================
498da53;ZyX;2014-08-10 17:37:08 +0400;Add client_id renderer argument to all shell bindings

==

powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/shell/powerline.sh
powerline/bindings/tcsh/powerline.tcsh
==================
c8cc7e4;Nikolai Aleksandrovich Pavlov;2014-08-10 17:20:27 +0400;Merge pull request #974 from ZyX-I/shell-tests-improvements
Shell tests improvements
==
==================
fdd8f6d;ZyX;2014-08-10 17:10:35 +0400;Wait for pid file to appear
Should fix some rare bash test failures
==

tests/test_shells/bash.ok
tests/test_shells/busybox.ok
tests/test_shells/dash.ok
tests/test_shells/input.bash
tests/test_shells/input.busybox
tests/test_shells/input.dash
tests/test_shells/input.fish
tests/test_shells/input.mksh
tests/test_shells/input.tcsh
tests/test_shells/input.zsh
tests/test_shells/mksh.ok
tests/test_shells/test.sh
tests/test_shells/waitpid.sh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
==================
7ade6d1;ZyX;2014-07-28 03:15:36 +0400;Use busybox as shell name in place of bb
Conflicts:
	tests/test_shells/test.sh

==

tests/test_shells/bb.ok
tests/test_shells/busybox.ok
tests/test_shells/input.bb
tests/test_shells/input.busybox
tests/test_shells/test.sh
==================
01185eb;ZyX;2014-08-10 16:58:55 +0400;Use bgscript.sh in place of direct bash call

==

tests/test_shells/bash.ok
tests/test_shells/bb.ok
tests/test_shells/bgscript.sh
tests/test_shells/dash.ok
tests/test_shells/input.bash
tests/test_shells/input.bb
tests/test_shells/input.dash
tests/test_shells/input.fish
tests/test_shells/input.mksh
tests/test_shells/input.tcsh
tests/test_shells/input.zsh
tests/test_shells/mksh.ok
tests/test_shells/test.sh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
==================
60c9f8b;Nikolai Aleksandrovich Pavlov;2014-08-10 16:44:09 +0400;Merge pull request #973 from ZyX-I/ext-components
Add components configuration option
==
==================
5313e61;ZyX;2014-08-10 16:32:27 +0400;Fix name conflict in vim bindings

==

powerline/vim.py
==================
9d1392f;ZyX;2014-08-10 16:17:22 +0400;Fix vim emulation module

==

tests/vim.py
==================
b8049fa;ZyX;2014-08-10 16:01:57 +0400;Add ext.*.components configuration support
Also fixes various problems in shell bindings.

Closes #969

==

docs/source/configuration/local.rst
docs/source/configuration/reference.rst
powerline/__init__.py
powerline/bindings/bash/powerline.sh
powerline/bindings/config.py
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/shell/powerline.sh
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
powerline/lint/__init__.py
powerline/vim.py
scripts/powerline-config
==================
f51134d;ZyX;2014-08-10 16:01:03 +0400;Run shell tests in an isolated environment

==

tests/test_shells/input.tcsh
tests/test_shells/test.sh
tests/test_shells/zsh.daemon.ok
==================
3c03240;ZyX;2014-08-10 16:00:00 +0400;Remove tests/shell iff there are no failures

==

tests/test_shells/test.sh
==================
99c9f73;ZyX;2014-08-10 15:59:32 +0400;Do not omit running tests without ONLY_SHELL set

==

tests/test_shells/test.sh
==================
6f550fc;ZyX;2014-08-10 15:56:32 +0400;Write zero after writing current working directory in powerline.c

==

client/powerline.c
==================
310af9a;ZyX;2014-08-10 15:46:43 +0400;Prefer powerline bindings directory over fish_function_path

==

tests/test_shells/input.fish
==================
5c5407c;ZyX;2014-08-10 15:35:57 +0400;Make libzpython bindings accept multiple paths when using overrides

==

docs/source/configuration/local.rst
powerline/bindings/zsh/__init__.py
==================
17b32b1;ZyX;2014-08-10 15:28:30 +0400;Make ipython accept paths, not a single path

==

docs/source/configuration/local.rst
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/ipython.py
tests/test_provided_config_files.py
tests/test_shells/ipython_home/profile_default/ipython_config.py
==================
8de14c1;ZyX;2014-08-10 14:51:38 +0400;Do not use os.environ for write_output
This is required for daemon to work properly
==

powerline/shell.py
==================
11168bf;Nikolai Aleksandrovich Pavlov;2014-08-09 15:26:30 +0400;Merge pull request #968 from mreinhardt/feature/fix-now-playing-spotify-comma-error
Fix NowPlaying segment when comma in artist or title
==
==================
e64811c;ZyX;2014-08-09 13:04:30 +0400;Add vim_getoption and vim_setoption functions

==

powerline/bindings/vim/__init__.py
==================
757e563;ZyX;2014-08-09 12:18:04 +0400;Place labels before labeled key name, not before the description

==

docs/source/configuration/reference.rst
==================
f897442;ZyX;2014-08-09 12:13:00 +0400;Improve linter coding style

==

powerline/lint/__init__.py
==================
91826e4;Mike Reinhardt;2014-08-07 13:00:45 -0700;Fix NowPlaying segment when comma in artist/title

==

powerline/segments/common.py
==================
6cc86c8;Nikolai Aleksandrovich Pavlov;2014-08-06 22:52:38 +0400;Merge pull request #967 from ZyX-I/handle-write-errors
Handle errors from write()
==
==================
660925f;ZyX;2014-08-06 22:32:39 +0400;Use do_write function in place of self-written replacement

==

client/powerline.c
==================
0a6bb9c;ZyX;2014-08-06 22:31:16 +0400;Some style fixes

==

client/powerline.c
==================
ae2ac05;ZyX;2014-08-06 22:04:15 +0400;Handle errors from write()
Fixes #964

==

client/powerline.c
==================
0853f60;Nikolai Aleksandrovich Pavlov;2014-08-06 18:31:43 +0400;Merge pull request #963 from ZyX-I/ipython-tests
Add ipython shell tests
==
==================
c3e2358;ZyX;2014-08-06 18:12:59 +0400;Also install ipython on Python-3.3+

==

tests/install.sh
==================
863264c;ZyX;2014-08-06 18:09:57 +0400;Disable virtualenv segment, also test config_overrides

==

tests/test_shells/ipython.ok
tests/test_shells/ipython_home/profile_default/ipython_config.py
==================
accb174;ZyX;2014-08-06 18:06:54 +0400;Do not install ipython when using python-2.6

==

tests/install.sh
==================
3e43995;ZyX;2014-08-06 17:21:01 +0400;Use pip to install ipython, not apt-get
I am very unsure that it will install ipython for all required python versions
==

tests/install.sh
==================
c403eef;ZyX;2014-08-06 17:18:42 +0400;Add ipython shell tests

==

tests/install.sh
tests/test_shells/input.ipython
tests/test_shells/ipython.ok
tests/test_shells/ipython_home/profile_default/ipython_config.py
tests/test_shells/postproc.py
tests/test_shells/test.sh
==================
42a9a5a;ZyX;2014-08-06 16:56:56 +0400;Merge branch 'ipython-rewrite' into develop

==
==================
ea6e28a;ZyX;2014-08-06 16:56:20 +0400;Use the same hack for post_0_11 rewrite prompt
IPython again tries to leave us without unicode in rewrite prompt. But in 
Python, one needs to be more serious than that to be actually able to do this.
==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/ipython.py
powerline/lib/unicode.py
==================
ac6b9af;Nikolai Aleksandrovich Pavlov;2014-08-06 15:09:23 +0400;Merge pull request #961 from ZyX-I/fix-664
Do not output \x01/\x02 symbols for non-prompts in ipython
==
==================
ed70cc2;ZyX;2014-08-06 13:47:11 +0400;Fix tests

==

tests/test_provided_config_files.py
==================
85ea44b;ZyX;2014-08-06 13:38:45 +0400;Do not output \x01/\x02 symbols for non-prompts in ipython
Should fix #664
==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/ipython.py
powerline/renderers/ipython.py
powerline/renderers/ipython_prompt.py
==================
faceb59;Nikolai Aleksandrovich Pavlov;2014-08-06 13:10:55 +0400;Merge pull request #902 from ZyX-I/battery
Improve battery support
==
==================
22fdc10;Nikolai Aleksandrovich Pavlov;2014-08-06 13:04:50 +0400;Merge pull request #958 from ZyX-I/theme-hierarchy
Implement theme hierarchy
==
==================
1a87006;ZyX;2014-08-06 12:52:52 +0400;Refactor powerline.lint.inspect: do not special-case *ThreadedSegment
Fixes now_playing segment handling in python-3.4
==

powerline/lib/threaded.py
powerline/lint/inspect.py
powerline/segment.py
powerline/segments/__init__.py
powerline/segments/common.py
==================
d4735c8;ZyX;2014-08-06 12:48:17 +0400;Fix labels in configuration/reference.rst

==

docs/source/configuration/reference.rst
==================
c3e6329;ZyX;2014-08-06 03:09:31 +0400;Add description of shipped themes to documentation

==

docs/source/configuration/reference.rst
==================
2b5734c;ZyX;2014-08-06 03:03:56 +0400;Add unicode_terminus_condensed theme

==

powerline/config_files/themes/unicode_terminus_condensed.json
==================
cd576f0;ZyX;2014-08-06 02:47:33 +0400;Add unicode_terminus top-level theme
This one contains only glyphs present in terminus font.

==

powerline/config_files/themes/unicode_terminus.json
==================
3c93ac2;ZyX;2014-08-06 02:25:07 +0400;Add unicode-only theme

==

powerline/config_files/themes/unicode.json
==================
625aa24;ZyX;2014-08-06 02:10:29 +0400;Use ascii theme in local overrides

==

tests/test_local_overrides.vim
==================
fa5c1e8;ZyX;2014-08-06 02:04:58 +0400;Add ASCII-only theme

==

powerline/config_files/themes/ascii.json
==================
39d1f4e;Nikolai Aleksandrovich Pavlov;2014-08-06 02:16:49 +0400;Merge pull request #959 from aledovsky/bug/weather_segment_fix
Fix weather segment display
==
==================
48254ea;ZyX;2014-08-06 01:33:37 +0400;Use more precise error messages in test_tabline.vim

==

tests/test_tabline.vim
==================
75d2c62;Aleksandrs Ļedovskis;2014-08-05 23:52:34 +0300;Fix weather segment display
Most likely a change on GitHub/Yahoo servers made it crash, when
non-robot ready result page started to appear inside YQL processor.
Using "raw.githubusercontent.com" URL helps and weather icon is again visible.

Closes: Lokaltog/powerline#949

Signed-off-by: Aleksandrs Ļedovskis <aleksandrs@ledovskis.lv>

==

powerline/segments/common.py
==================
0255df2;ZyX;2014-08-06 00:01:35 +0400;Allow checking NowPlayingSegment

==

powerline/lint/inspect.py
==================
416a0ef;ZyX;2014-08-06 00:00:15 +0400;Copy a number of unicode values to powerline.json

==

powerline/config_files/themes/powerline.json
==================
b0093c6;ZyX;2014-08-05 23:43:31 +0400;Implement single-level merging of “args” dictionaries

==

docs/source/configuration/reference.rst
powerline/config_files/themes/shell/__main__.json
powerline/segment.py
==================
759b42a;ZyX;2014-08-05 23:24:16 +0400;Make now_playing segment accept state symbols from arguments

==

powerline/segments/common.py
==================
37b1f96;ZyX;2014-08-05 22:55:01 +0400;Move all unicode characters from themes to powerline.json

==

powerline/config_files/themes/powerline.json
powerline/config_files/themes/shell/__main__.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/config_files/themes/tmux/default.json
powerline/config_files/themes/vim/__main__.json
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/wm/default.json
==================
bdde4ae;ZyX;2014-08-05 20:29:03 +0400;Implement theme hierarchy
Fixes #783

==

docs/source/configuration.rst
docs/source/configuration/reference.rst
powerline/__init__.py
powerline/config_files/config.json
powerline/config_files/themes/powerline.json
powerline/lint/__init__.py
powerline/theme.py
tests/test_config_merging.py
tests/test_config_reload.py
tests/test_configuration.py
==================
145e1c2;ZyX;2014-08-05 19:36:33 +0400;Only check that all colorschemes have theme, but not the opposite

==

powerline/lint/__init__.py
==================
b1a2b44;Nikolai Aleksandrovich Pavlov;2014-08-05 23:16:05 +0400;Merge pull request #957 from ZyX-I/better-visual-range
Improve visual_range segment
==
==================
f4b5c6a;ZyX;2014-08-05 23:03:59 +0400;Add fix for old Vims where getpos does not return list of integers

==

powerline/segments/vim.py
==================
117661e;ZyX;2014-08-05 22:49:53 +0400;Add tests for visual_range

==

tests/test_segments.py
tests/vim.py
==================
702f438;ZyX;2014-08-05 22:44:29 +0400;Do not use “rows” and “cols” in text
Reason: string “1 rows” is incorrect and I do not want to implement proper 
number handling (*proper* handling is *not* limited to plural/singular form like
in English).
==

powerline/segments/vim.py
==================
97978ea;ZyX;2014-08-05 22:18:28 +0400;Improve visual_range segment

==

powerline/config_files/themes/vim/default.json
powerline/segments/vim.py
==================
c95b288;Nikolai Aleksandrovich Pavlov;2014-08-05 14:05:23 +0400;Merge pull request #923 from ZyX-I/merge-config
Implement configuration merging
==
==================
0f4e1ba;ZyX;2014-08-05 13:39:01 +0400;Refactor config_mock module to not use globals and fix tests

==

tests/lib/config_mock.py
tests/test_cmdline.py
tests/test_config_merging.py
tests/test_config_reload.py
tests/test_configuration.py
==================
66e0999;ZyX;2014-07-13 23:27:44 +0400;Document configuration merging

==

docs/source/configuration.rst
==================
01585ed;ZyX;2014-07-13 23:15:10 +0400;Fix errors reported by linter, allow running it during tests

==

tests/test_config_merging.py
==================
2fd0434;ZyX;2014-07-13 23:11:25 +0400;Fix name regex: allow single-letter names

==

powerline/lint/__init__.py
==================
27db44a;ZyX;2014-07-13 23:02:05 +0400;Implement configuration merging
Fixes #418

==

powerline/__init__.py
powerline/bindings/config.py
powerline/lint/__init__.py
tests/lib/config_mock.py
tests/test_config_merging.py
==================
3d77306;ZyX;2014-07-13 00:01:38 +0400;Some style fixes in powerline.lint

==

powerline/lint/__init__.py
==================
b043749;ZyX;2014-07-12 23:22:28 +0400;Add support for pickle

==

powerline/lint/markedjson/markedvalue.py
==================
2296290;ZyX;2014-07-12 23:21:16 +0400;Add MarkedList type

==

powerline/lint/markedjson/markedvalue.py
==================
f482eea;ZyX;2014-08-05 00:18:09 +0400;Merge branch 'quiet-tmux' into develop

==
==================
0c3e380;ZyX;2014-08-05 00:17:58 +0400;Set all options quietly
Requires tmux 1.7 or later, so `-q` is not used in 1.8 and earlier configuration 
file.

Closes #942
==

powerline/bindings/tmux/powerline_tmux_1.8.conf
powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
powerline/bindings/tmux/powerline_tmux_1.9_plus.conf
==================
7286e78;ZyX;2014-08-05 00:07:32 +0400;Merge branch 'tmux-refresh' into develop

==
==================
4bb217a;ZyX;2014-08-05 00:07:25 +0400;Run refresh-client in tmux not depending on POWERLINE_COMMAND
Ref #942
==

powerline/bindings/config.py
==================
d5964bc;Nikolai Aleksandrovich Pavlov;2014-08-04 03:55:52 +0400;Merge pull request #955 from ZyX-I/faster-powerline_daemon
Do not use argparge for parsing environment
==
==================
203a374;ZyX;2014-08-04 02:59:02 +0400;Do not use argparge for parsing --env and --cwd
It took 2/3 of do_render call according to profiler. New variant takes only 1/6.

WARNING: This commit will break all powerline installations with running daemon
because it changes communication protocol. You must kill and restart all your
powerline daemons for powerline to function properly.

Highlight @kovidgoyal

==

client/powerline.c
client/powerline.py
client/powerline.sh
scripts/powerline-daemon
==================
da45adb;ZyX;2014-08-04 02:21:44 +0400;Make it compile without warnings with -Wconversion

==

client/powerline.c
==================
a5037a8;ZyX;2014-08-04 02:11:19 +0400;Fix powerline.c styling
Also makes it compile with -std=c89 (except for snprintf) or just -std=c99,
-Wall, -pedantic.

==

client/powerline.c
==================
088d1f0;ZyX;2014-08-04 00:18:03 +0400;Merge branch 'strip-renderer_arg-key' into develop

==
==================
cfb1077;ZyX;2014-08-04 00:17:41 +0400;Exclude renderer_arg from daemon powerline objects cache
It may easily change between runs from one client and only affects segment_info 
which is regenerated always.
==

scripts/powerline-daemon
==================
4343e4e;Nikolai Aleksandrovich Pavlov;2014-08-04 00:12:22 +0400;Merge pull request #954 from ZyX-I/file-scheme
Add file_scheme segment
==
==================
50703f1;ZyX;2014-08-04 00:07:30 +0400;Fix unicode/bytes handling for python-3

==

powerline/segments/vim.py
tests/vim.py
==================
74a3c9a;ZyX;2014-08-03 23:58:34 +0400;Add file_scheme segment
Fixes #207
==

powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/themes/vim/default.json
powerline/segments/vim.py
tests/test_segments.py
tests/vim.py
==================
e89832b;Nikolai Aleksandrovich Pavlov;2014-08-03 22:47:41 +0400;Merge pull request #953 from ZyX-I/powerline-shell-help
Make powerline --help more useful
==
==================
3d1f9bf;ZyX;2014-08-03 22:20:01 +0400;Allow multiple arguments to `powerline[-lint] --config_path`

==

powerline/lint/__init__.py
powerline/shell.py
scripts/powerline-lint
tests/test_cmdline.py
==================
780c919;ZyX;2014-08-03 22:04:09 +0400;Add documentation for `powerline --help`

==

powerline/shell.py
==================
4f94afd;ZyX;2014-08-03 18:56:30 +0400;Merge branch '946-troubleshooting' into develop

==
==================
ead7e3f;ZyX;2014-08-03 18:56:14 +0400;Add troubleshooting information discovered in #946

==

docs/source/troubleshooting.rst
==================
3983e9f;Nikolai Aleksandrovich Pavlov;2014-08-03 13:38:45 +0400;Merge pull request #950 from ZyX-I/bufwinnr-segments
Add buffer and window number segments
==
==================
120a9cc;ZyX;2014-08-03 13:23:13 +0400;Add winnr segment
Closes #705

==

powerline/config_files/colorschemes/vim/__main__.json
powerline/segments/vim.py
tests/test_segments.py
==================
f877516;ZyX;2014-08-03 13:18:56 +0400;Add bufnr segment
Ref #705

==

powerline/config_files/colorschemes/vim/__main__.json
powerline/segments/vim.py
tests/test_segments.py
==================
1cc46c7;Nikolai Aleksandrovich Pavlov;2014-08-03 13:24:26 +0400;Merge pull request #948 from ZyX-I/tabline
Add tabline support
==
==================
1b8c092;ZyX;2014-08-03 13:13:49 +0400;Make dividers unicode
Fixes travis problem with old vim
==

powerline/theme.py
==================
43acf07;ZyX;2014-08-03 12:49:18 +0400;Modify test_tabline to also test bufline

==

tests/test_tabline.vim
==================
6cf0c48;ZyX;2014-08-03 12:43:41 +0400;Add single_tab segment

==

powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/themes/vim/tabline.json
powerline/segments/vim.py
tests/test_segments.py
tests/vim.py
==================
2acefc9;ZyX;2014-08-03 12:18:52 +0400;Add tabbuflister and buflister listers

==

powerline/config_files/themes/vim/tabline.json
powerline/segments/vim.py
==================
85f2526;ZyX;2014-08-03 12:05:03 +0400;Add tabnr segment

==

powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/themes/vim/tabline.json
powerline/segments/vim.py
tests/test_segments.py
tests/test_tabline.vim
tests/vim.py
==================
f02399b;ZyX;2014-08-03 12:03:44 +0400;Add tabpage and tabnr arguments to segment_info

==

powerline/bindings/vim/__init__.py
powerline/renderers/vim.py
powerline/segment.py
powerline/segments/vim.py
==================
1907708;ZyX;2014-08-03 12:00:05 +0400;Add support for has_key(gettabwinvar()) in vim test module

==

tests/vim.py
==================
0403f7a;ZyX;2014-08-03 11:56:41 +0400;Fix renderer length computation
Current sum() of once computed _len’s is completely inappropriate in case
removal of the segment caused change in divider lengths: addition or removal of
dividers or change of the divider type when dividers have different length.

Also contains some optimizations: first of all _render_segments is called only
once always, same for strwidth() function for each string. Space is considired
to always have length 1. And do not bother computing any length if no width was
specified.

==

powerline/renderer.py
==================
3148acf;ZyX;2014-08-03 10:13:44 +0400;Set __bool__ to __nonzero__ in DelayedEchoErr
Method __nonzero__ was renamed to __bool__ in Python-3

==

powerline/lint/__init__.py
==================
b99ad39;ZyX;2014-08-03 10:12:54 +0400;Remove some __nonzero__ methods in tests/vim.py
Just __len__ is good enough here

==

tests/vim.py
==================
07c533d;ZyX;2014-08-03 09:16:30 +0400;Test tabline in test_tabline.vim file

==

tests/test_plugin_file.vim
tests/test_tabline.vim
==================
ff91ff7;ZyX;2014-08-03 09:07:31 +0400;Update tests to work with new functionality
Still no tests for new functionality.

==

powerline/segments/vim.py
tests/test_provided_config_files.py
tests/vim.py
==================
70ae12b;ZyX;2014-08-03 07:45:03 +0400;Added tabline support
No tests for it yet

==

docs/source/configuration/reference.rst
powerline/config_files/config.json
powerline/config_files/themes/vim/tabline.json
powerline/lint/__init__.py
powerline/renderer.py
powerline/renderers/vim.py
powerline/segment.py
powerline/segments/vim.py
powerline/theme.py
powerline/vim.py
==================
0ecd10f;ZyX;2014-08-03 04:49:01 +0400;Add ability to copy recursive specifications

==

powerline/lint/__init__.py
==================
23ec5ef;ZyX;2014-08-03 04:48:27 +0400;Fix required keys handling: do not require more keys then required

==

powerline/lint/__init__.py
==================
fc40c80;Nikolai Aleksandrovich Pavlov;2014-08-03 10:40:01 +0400;Merge pull request #947 from magus424/feature/556-line_count-segment
Added line_count segment for vim.

Closes #556
==
==================
f615d85;Collin Grady;2014-08-03 03:34:00 +0000;Added line_count segment for vim.
Returns total number of lines in current buffer.

Addresses #556

==

powerline/config_files/colorschemes/vim/__main__.json
powerline/segments/vim.py
tests/test_segments.py
==================
da6667b;Nikolai Aleksandrovich Pavlov;2014-08-03 03:40:26 +0400;Merge pull request #945 from ZyX-I/update-docs
Update documentation
==
==================
d5081ac;ZyX;2014-08-03 03:21:39 +0400;Add note about minibufexpl
Closes #230

==

docs/source/troubleshooting.rst
==================
5173246;ZyX;2014-08-03 03:04:47 +0400;Add note about automatic vimrc resourcing
Ref #297
Ref #296
Closes #213

==

docs/source/troubleshooting.rst
==================
2e34e19;ZyX;2014-08-03 02:52:14 +0400;Add code for Vundle installations and related warning
Ref #414
Closes #378

==

docs/source/usage/other.rst
==================
74d19b4;ZyX;2014-08-03 02:43:13 +0400;Add font installation instructions

==

docs/source/installation.rst
docs/source/installation/linux.rst
docs/source/installation/osx.rst
docs/source/tips-and-tricks.rst
docs/source/usage.rst
==================
62a815b;ZyX;2014-08-03 02:42:38 +0400;Fix segment_data key description in configuration reference

==

docs/source/configuration/reference.rst
==================
29a4676;ZyX;2014-08-03 02:22:16 +0400;Fix styling of rxvt-unicode tips

==

docs/source/tips-and-tricks.rst
==================
14f2bee;esn89;2013-04-23 08:02:39 -0700;Added Source Code Pro documentation.rst
Added a short blurb on Source Code Pro and how to make the glyphs show up.

Closes #460

==

docs/source/tips-and-tricks.rst
==================
207c24a;ZyX;2014-08-03 02:04:53 +0400;Add note about `https://` protocol
Closes #881

==

docs/source/installation.rst
==================
963823d;ZyX;2014-08-03 01:59:14 +0400;Increase depth to 3
Reason: this way I have anything I want in one click. Less precise toctree is in
any case present in the side bar.

==

docs/source/index.rst
==================
a7d3fdd;ZyX;2014-08-03 00:12:14 +0400;Add note about ``tmux -2``
Closes #847

==

docs/source/troubleshooting.rst
==================
b6be304;ZyX;2014-08-03 00:10:34 +0400;Remove timeout tip
Closes #808
Closes #266

==

docs/source/tips-and-tricks.rst
==================
cbcfd31;ZyX;2014-08-03 00:08:00 +0400;Update terminal support matrix
Fixes #763
Closes #660

==

docs/source/usage.rst
==================
c043fa5;ZyX;2014-08-02 23:51:20 +0400;Copy documentation from old variant
Note: fontpatcher documentation was removed.

Closes #632
Closes #769

==

docs/source/configuration-and-customization.rst
docs/source/configuration-reference.rst
docs/source/configuration.rst
docs/source/configuration/local.rst
docs/source/configuration/reference.rst
docs/source/configuration/segments.rst
docs/source/configuration/segments/common.rst
docs/source/configuration/segments/shell.rst
docs/source/configuration/segments/vim.rst
docs/source/index.rst
docs/source/installation.rst
docs/source/installation/linux.rst
docs/source/installation/osx.rst
docs/source/segment-reference.rst
docs/source/segment-reference/common.rst
docs/source/segment-reference/shell.rst
docs/source/segment-reference/vim.rst
docs/source/troubleshooting.rst
docs/source/troubleshooting/linux.rst
docs/source/troubleshooting/osx.rst
docs/source/usage.rst
docs/source/usage/other.rst
docs/source/usage/shell-prompts.rst
docs/source/usage/wm-widgets.rst
==================
c2379df;Kim Silkebækken;2014-01-25 16:19:47 +0100;Remove old docs and update documentation structure
Most of the files are empty and need to be copied or rewritten from the
old docs. Font patching docs have been removed entirely and will be
moved to the powerline-fontpatcher repo.

Ref #769

==

docs/source/configuration-and-customization.rst
docs/source/configuration-reference.rst
docs/source/configuration.rst
docs/source/font-installation.rst
docs/source/fontpatching.rst
docs/source/index.rst
docs/source/installation.rst
docs/source/installation/linux.rst
docs/source/installation/osx.rst
docs/source/installation/troubleshooting-common.rst
docs/source/introduction.rst
docs/source/license-and-credits.rst
docs/source/license-credits.rst
docs/source/overview.rst
docs/source/segment-reference.rst
docs/source/segment-reference/common.rst
docs/source/segment-reference/shell.rst
docs/source/segment-reference/vim.rst
docs/source/segments/common.rst
docs/source/segments/shell.rst
docs/source/segments/vim.rst
docs/source/tips-and-tricks.rst
docs/source/tipstricks.rst
docs/source/troubleshooting.rst
docs/source/troubleshooting/linux.rst
docs/source/troubleshooting/osx.rst
docs/source/usage.rst
docs/source/usage/other.rst
docs/source/usage/shell-prompts.rst
docs/source/usage/wm-widgets.rst
==================
ecb3b69;Kim Silkebækken;2013-08-28 10:41:03 +0200;Add updated font installation docs

==

docs/source/font-installation.rst
==================
151b3f1;Kim Silkebækken;2014-01-25 16:20:06 +0100;Use readthedocs theme for docs

==

docs/source/conf.py
setup.py
==================
1d696d3;Nikolai Aleksandrovich Pavlov;2014-08-02 22:37:03 +0400;Merge pull request #944 from ZyX-I/feature/daemon
Add powerline-daemon

Closes #827
Fixes #616
Closes #170
==
==================
8bc5bb3;ZyX;2014-08-02 22:24:23 +0400;Update documentation

==

docs/source/installation/troubleshooting-common.rst
docs/source/overview.rst
==================
4ddac2a;ZyX;2014-08-02 22:27:58 +0400;Do not run `set-environment` in tmux if POWERLINE_COMMAND is set

==

powerline/bindings/config.py
==================
ea7f3b6;ZyX;2014-08-02 22:20:06 +0400;Add powerline-daemon --quiet

==

scripts/powerline-daemon
==================
44cca97;ZyX;2014-08-02 22:03:22 +0400;Check whether daemon log is as empty as it should

==

tests/test_shells/test.sh
==================
28aee92;ZyX;2014-08-02 21:56:37 +0400;Fix zsh daemon tests: disable hostname and user before testing select
Reason: hostname and user do not have stable width and select prompt width with 
daemon depends on previous prompt width.
==

tests/test_shells/input.zsh
tests/test_shells/zsh.daemon.ok
tests/test_shells/zsh.nodaemon.ok
tests/test_shells/zsh.ok
==================
9da3e04;ZyX;2014-08-02 21:27:31 +0400;Do not hardcode scripts/powerline in input.*

==

tests/test_shells/input.bash
tests/test_shells/input.bb
tests/test_shells/input.dash
tests/test_shells/input.fish
tests/test_shells/input.mksh
tests/test_shells/input.tcsh
tests/test_shells/input.zsh
tests/test_shells/test.sh
==================
f3d9728;ZyX;2014-08-02 21:10:15 +0400;Fall back to powerline-render when using powerline.sh

==

client/powerline.sh
==================
fed43e8;ZyX;2014-08-02 21:02:26 +0400;Run shell tests with and without daemon

==

tests/test_shells/postproc.py
tests/test_shells/screenrc
tests/test_shells/test.sh
tests/test_shells/zsh.daemon.ok
==================
9290c2a;ZyX;2014-08-02 20:35:23 +0400;Make daemon work with aboveleft shell key

==

powerline/shell.py
scripts/powerline-daemon
scripts/powerline-render
==================
8374a66;ZyX;2014-08-02 20:16:38 +0400;Also use the same code for tmux

==

powerline/bindings/config.py
powerline/bindings/tmux/powerline.conf
==================
05384e3;ZyX;2014-08-02 20:07:55 +0400;Add `powerline-config shell command` and use it in all shell bindings

==

powerline/bindings/bash/powerline.sh
powerline/bindings/config.py
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/shell/powerline.sh
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
powerline/config.py
powerline/lib/shell.py
scripts/powerline-config
==================
925d3eb;ZyX;2014-08-02 19:48:07 +0400;Show exception in setup.py and try to fall back to powerline.sh

==

setup.py
==================
95dcef8;ZyX;2014-08-02 19:47:03 +0400;Some style fixes

==

client/powerline.py
scripts/powerline-daemon
==================
3b06056;ZyX;2014-08-02 19:46:04 +0400;Fix UnicodeDecodeError in Python version of powerline client

==

client/powerline.py
==================
e37b13c;ZyX;2014-08-02 18:56:44 +0400;Remove compiled binary from repository

==

.gitignore
client/powerline
==================
e613beb;ZyX;2013-11-23 13:54:23 +0400;Add shell version of powerline-client
Note: this shell script is still faster then client/powerline.py. `time` reports 
      0.00, 0.01, 0.02÷0.03 for powerline, powerline.sh and powerline.py 
      respectively (run with `./client/powerline* tmux right`).

Note: does not work in busybox as env there does not support -0 argument. 
      Requires sed, id (for dash as $UID is not available there), env, printf 
      and socat. Is not currently handled by setup.py.
==

client/powerline.sh
==================
7db4286;ZyX;2013-11-23 13:20:05 +0400;Get rid of modeline E518 error

==

client/powerline.c
==================
a27f90d;ZyX;2013-11-22 20:31:04 +0400;Add a note about not fully working --editable to linux.rst

==

docs/source/installation/linux.rst
docs/source/installation/osx.rst
==================
21ee641;ZyX;2013-11-22 20:23:56 +0400;Do not use scripts=[] to install powerline at all.

==

setup.py
==================
7553682;ZyX;2013-11-20 23:34:15 +0400;Use powerline/powerline-render pair in place of powerline-client/powerline

==

powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/tmux/powerline.conf
powerline/bindings/zsh/powerline.zsh
==================
c1d290b;ZyX;2013-11-20 23:30:35 +0400;Use data_files on python-3

==

setup.py
==================
a122e73;Kim Silkebækken;2013-07-31 22:15:35 +0200;Add files from @kovidgoyal's powerline-daemon repo
Minor changes have been applied:

- Removed copyright info and GPL 3 license since Powerline is MIT (needs
  confirmation from kovidgoyal before merge)
- The `powerline-client` script is renamed to `powerline`, and calls the
  daemon or `powerline-render` (the previous `powerline`) to render
  a statusline
- Minor coding style corrections to match the rest of the project
- Python 3 support is removed for now due to setuptools failing with
  binary scripts

Todo:

- Automatically attempt to launch powerline-daemon the first time
  powerline is run if the daemon isn't already running?
- pip install -e fails with binary files (it appears that pip recodes
  the powerline binary to ASCII, the compiled powerline script must be
  copied manually to ~/.local/bin after pip install -e has been run)

==

client/powerline
client/powerline.c
client/powerline.py
scripts/.gitignore
scripts/powerline
scripts/powerline-daemon
scripts/powerline-render
setup.py
==================
6430877;ZyX;2014-08-02 18:42:10 +0400;Merge branch 'trailing-whitespace-warning' into develop
Closes #943

==
==================
9e8c115;ZyX;2014-08-02 18:22:45 +0400;Add trailing whitespace segment
Note: by default this segment is disabled. Until #923 it may only be enabled by
copying the whole file and changing "enabled" to "true". After #923 it may be
enabled by having `~/.config/powerline/themes/vim/default.json` with the
following contents:

    {
        "segment_data": {
            "trailing_whitespace": {
                "display": true
            }
        }
    }

Fixes #388

==

powerline/bindings/vim/__init__.py
powerline/config_files/themes/vim/default.json
powerline/segments/vim.py
powerline/vim.py
tests/test_segments.py
tests/vim.py
==================
16c01e8;ZyX;2014-07-12 23:39:45 +0400;Add support for display option

==

docs/source/configuration.rst
powerline/lint/__init__.py
powerline/segment.py
powerline/theme.py
tests/test_configuration.py
==================
90f3ca5;ZyX;2014-07-29 16:24:50 +0400;Merge branch 'update-powerline.vim-error' into develop

==
==================
8cb478f;ZyX;2014-07-29 16:24:38 +0400;Add information about g:powerline_pycmd to error message

==

powerline/bindings/vim/plugin/powerline.vim
==================
074e118;Nikolai Aleksandrovich Pavlov;2014-07-29 16:14:38 +0400;Merge pull request #938 from ZyX-I/noloadpython
Do not let powerline trigger loading wrong python
==
==================
191c71c;ZyX;2014-07-29 14:48:26 +0400;Do not let powerline trigger loading wrong python
Used python version is controlled by `g:powerline_pycmd`. User configuration now
has top priority: if `g:powerline_pyeval` is set powerline will not try to use
`pyeval()` emulation in old Vim versions.

Closes #937 as WONTFIX

==

docs/source/overview.rst
powerline/bindings/vim/plugin/powerline.vim
powerline/vim.py
==================
c91a0fa;ZyX;2014-07-29 14:31:17 +0400;Remove note about Gentoo ebuild
It is not hosted in this repo any longer.
==

docs/source/overview.rst
==================
68ba8a2;ZyX;2014-07-28 03:36:38 +0400;Merge commit '6a08168' into develop

==
==================
6a08168;ZyX;2014-07-28 03:36:15 +0400;Fix “syntax error near unexpected token `fi'” error

==

tests/test_shells/test.sh
==================
9e023d1;ZyX;2014-07-28 03:31:01 +0400;Merge branch 'disable-dash-tests' into develop

==
==================
d1b62eb;ZyX;2014-07-28 03:30:51 +0400;Disable dash tests
Temporary fix for #931
==

tests/test_shells/test.sh
==================
8c7908c;ZyX;2014-07-28 03:23:52 +0400;Merge commit 'HEAD@{2}' (PR #802, squashed) into develop
Closes #935
Ref #302
Closes #300
Merges #802
Ref #769

==
==================
9a02f82;Nikolai Aleksandrovich Pavlov;2014-07-26 01:58:39 +0400;Merge pull request #934 from ZyX-I/fix-932
Ignore IOErrors in ConfigLoader.update
==
==================
d0c4d4e;ZyX;2014-07-26 01:25:32 +0400;Ignore IOError’s in ConfigLoader.update
Fixes #932

==

powerline/lib/config.py
tests/lib/fsconfig.py
tests/test_lib_config.py
==================
a279ea2;ZyX;2014-07-25 16:25:50 +0400;Also check error messages

==

tests/test_configuration.py
==================
5cb897d;ZyX;2014-07-26 01:11:18 +0400;Merge branch 'fix-933' into develop

==
==================
cd5c6fe;ZyX;2014-07-26 01:09:56 +0400;Make sure arguments in `args` are only strings
Required for python-2.6

Fixes #933
==

powerline/segment.py
==================
5f7fbda;ZyX;2014-07-23 01:48:09 +0400;Merge branch 'fix-powerline-config' into develop
Ref #930

==
==================
1447be1;ZyX;2014-07-23 01:47:46 +0400;Add missing imports in powerline-config
They matter when script is used without properly installing powerline, so that 
importing `powerline.bindings.config` does not work.
==

scripts/powerline-config
==================
e72ca9d;ZyX;2014-07-20 02:07:20 +0400;Merge branch 'sh-support' into develop
Closes #928

==
==================
97e4ee6;ZyX;2014-07-20 02:04:44 +0400;Document why `stuff` and waiting are used for dash

==

tests/test_shells/test.sh
==================
855e332;ZyX;2014-07-20 02:00:56 +0400;Fix travis build: on travis “Terminated…” message is truncated

==

tests/test_shells/mksh.ok
tests/test_shells/postproc.py
==================
5425c06;ZyX;2014-07-20 01:49:30 +0400;Add tests for new functionality

==

tests/install.sh
tests/test.sh
tests/test_shells/bb.ok
tests/test_shells/dash.ok
tests/test_shells/input.bb
tests/test_shells/input.dash
tests/test_shells/input.mksh
tests/test_shells/mksh.ok
tests/test_shells/test.sh
==================
b2406d9;ZyX;2014-07-20 00:43:19 +0400;Disable libzpython support in zsh

==

tests/test_shells/input.zsh
==================
82e4339;ZyX;2014-07-20 00:32:16 +0400;Fix shell tests: VIRTUAL_ENV is not accessible by powerline by default

==

tests/test_shells/input.bash
tests/test_shells/input.fish
tests/test_shells/input.zsh
==================
a8da67e;ZyX;2014-07-20 00:24:12 +0400;Add various other shell implementations support
Tested in busybox, mksh, ksh and dash. Ksh has issues described in 
troubleshooting.
==

docs/source/installation/troubleshooting-common.rst
docs/source/overview.rst
powerline/bindings/shell/powerline.sh
powerline/renderers/ksh_prompt.py
==================
3d12662;ZyX;2014-07-19 21:38:49 +0400;Refactor _powerline_init_tmux_support
- Move _powerline_tmux* functions definitions out of
  _powerline_init_tmux_support.
- Do not touch PROMPT_COMMAND unless tmux support is to be added.
==

powerline/bindings/bash/powerline.sh
==================
d860644;ZyX;2014-07-19 20:34:39 +0400;Rename some bash powerline functions
Renamed `_powerline_prompt` to `_powerline_set_prompt` and `_run_powerline` to 
`_powerline_prompt.`

Reason: name `_run_powerline` is not consistent with other names used in shell 
bindings.
==

powerline/bindings/bash/powerline.sh
==================
402554a;Nikolai Aleksandrovich Pavlov;2014-07-19 20:19:58 +0400;Merge pull request #927 from ZyX-I/move-POWERLINE_COMMAND
Do not define POWERLINE_COMMAND when not using prompt
==
==================
face171;ZyX;2014-07-19 19:59:36 +0400;Do not define POWERLINE_COMMAND when not using prompt
To be consistent with fish and bash
==

powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
==================
8f0bbd3;Nikolai Aleksandrovich Pavlov;2014-07-19 20:06:44 +0400;Merge pull request #926 from ZyX-I/fix-cygwin-COLUMNS
Use `stty size` or zero as a fallback for $COLUMNS
==
==================
f92e6eb;ZyX;2014-07-19 19:56:31 +0400;Use `stty size` or zero as a fallback for $COLUMNS
Fixes #924
==

powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/zsh/powerline.zsh
==================
12a93c5;Nikolai Aleksandrovich Pavlov;2014-07-12 14:35:49 +0400;Merge pull request #921 from ZyX-I/colorschemes-hierarchy
Implement colorschemes hierarchy

Fixes #770.
==
==================
f573514;ZyX;2014-07-12 14:22:23 +0400;Add group aliasing and colorscheme hierarchy tests

==

tests/test_configuration.py
==================
3ebf9c1;ZyX;2014-07-12 14:08:05 +0400;Use highlighted_string function to define segments

==

tests/test_configuration.py
==================
576971c;ZyX;2014-07-12 13:48:04 +0400;Fix test class name in test_configuration

==

tests/test_configuration.py
==================
9af7834;ZyX;2014-07-12 13:46:28 +0400;Disable shell tests in PyPy
Do not let PyPy SEGVs result in failed build.
==

tests/test.sh
==================
621eb84;ZyX;2014-03-17 19:54:29 +0400;Fix tests

==

tests/test_config_reload.py
==================
ba63965;ZyX;2014-02-20 21:33:49 +0400;Refactor some vim colorschemes to use group aliases

==

powerline/config_files/colorschemes/vim/__main__.json
powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
==================
2d27f82;ZyX;2014-07-12 12:03:26 +0400;Make lint checker work

==

powerline/lint/__init__.py
==================
8ded14c;ZyX;2014-07-12 12:03:08 +0400;Add mergedicts_copy: non-modifying mergedicts

==

powerline/lib/__init__.py
==================
4d9157d;ZyX;2014-07-12 12:01:32 +0400;Add MarkedDict class, add special code for .copy() in Marked

==

powerline/lint/markedjson/markedvalue.py
==================
ee71eac;ZyX;2014-07-12 12:02:14 +0400;Check for dictionaries using isinstance(), not is

==

powerline/lib/__init__.py
==================
7f94583;ZyX;2014-07-12 11:58:59 +0400;Make attr colorscheme group key required

==

docs/source/configuration.rst
powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/ipython/default.json
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/colorschemes/solarized.json
powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
==================
d72e4f5;ZyX;2014-02-05 09:12:04 +0400;Update documentation

==

docs/source/configuration.rst
powerline/__init__.py
==================
e79eada;ZyX;2014-02-05 08:56:26 +0400;Move some color defintions to colorscheme/*.json

==

powerline/config_files/colorschemes/default.json
powerline/config_files/colorschemes/ipython/default.json
powerline/config_files/colorschemes/shell/__main__.json
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/colorschemes/solarized.json
powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
powerline/config_files/colorschemes/wm/default.json
==================
97266b7;ZyX;2014-02-04 21:37:42 +0400;Initial support for #770
What was done:
- Implemented loading using configuration hierarhy as proposed in the issue
- Implemented group aliasing

What was not:
- Some tests (config_reload) are failing
- Other (test_configuration) are spamming console with unexpected messages
- No support for powerline-lint
- No tests for new functionality
- Specifically I have not checked whether group aliasing actually works
- Colorschemes were not ported

Some other things: I have named this branch `config-ng` because I have other
ideas about configuration and it would be good to include them making only one
possibly backwards-incompatible merge commit instead of many. Specifically I am
going to rebase `merge-config` branch here.

==

powerline/__init__.py
powerline/colorscheme.py
tests/test_config_reload.py
==================
2d1a964;ZyX;2014-07-10 23:40:26 +0400;Merge branch 'disable-virtualenv-prompt' into develop

==
==================
ff7be9a;ZyX;2014-07-10 23:40:15 +0400;Set VIRTUAL_ENV_DISABLE_PROMPT to 1
Otherwise powerline prompt is being prefixed by `(virtualenv-name)` in zsh which 
looks rather ugly. In bash prompt is always overridden by PROMPT_COMMAND, thus 
there is no actual need to set this variable.
==

powerline/bindings/bash/powerline.sh
powerline/bindings/zsh/powerline.zsh
==================
0fb5405;Nikolai Aleksandrovich Pavlov;2014-07-10 23:30:53 +0400;Merge pull request #920 from ZyX-I/fix-not-implemented-tests
Improve vim tests
==
==================
93c3b28;ZyX;2014-07-10 23:18:16 +0400;Use better type converted for python-3*
Converter already existed, just needed to make it used by getbufvar

==

powerline/bindings/vim/__init__.py
==================
1289214;ZyX;2014-07-10 23:08:59 +0400;Correct _construct_result for Python-3

==

tests/vim.py
==================
a92d72b;ZyX;2014-07-10 22:54:27 +0400;Respect the fact that vim.eval in Vim returns str instances

==

tests/vim.py
==================
3ac75ee;ZyX;2014-07-10 22:32:41 +0400;Add window_title tests

==

tests/test_segments.py
==================
f9af425;ZyX;2014-07-10 22:32:07 +0400;Add missing winnr key to segments_dictionary

==

tests/vim.py
==================
e436bdb;ZyX;2014-07-10 22:26:14 +0400;Remove failing _index, use (self.number - 1) instead

==

tests/vim.py
==================
3f8c8c9;ZyX;2014-07-10 22:22:24 +0400;Prefix _Windows.{append,insert,pop} methods with underscore
There are no such methods in Vim.

==

tests/vim.py
==================
0ab8074;ZyX;2014-07-10 22:21:29 +0400;Add _with('wvars')

==

tests/vim.py
==================
a3e29a6;ZyX;2014-07-10 22:12:08 +0400;Get rid of lots of NotImplementedError’s in travis log

==

tests/vim.py
==================
497ddc9;Nikolai Aleksandrovich Pavlov;2014-07-10 21:34:56 +0400;Merge pull request #917 from ZyX-I/fix-powerline-config-shell
Refactor powerline to create loggers and use run_cmd in powerline-config
==
==================
44ce483;ZyX;2014-07-10 21:13:39 +0400;Use powerline.shell.run_cmd to get tmux version
Closes #912

==

powerline/bindings/config.py
scripts/powerline-config
==================
3d8ce55;ZyX;2014-07-10 21:11:35 +0400;Move code that sets config.json/common defaults to a separate function

==

powerline/__init__.py
==================
8f442ac;ZyX;2014-07-10 21:04:33 +0400;Move some code from Powerline.create_renderer to create_logger

==

powerline/__init__.py
==================
0fc7856;ZyX;2014-07-10 20:45:28 +0400;Rename create_renderer_kwargs to cr_kwargs for consistency

==

powerline/__init__.py
tests/lib/config_mock.py
==================
c891d75;ZyX;2014-07-10 20:43:50 +0400;Move _load_config body to a separate function

==

powerline/__init__.py
==================
768e64b;ZyX;2014-07-10 20:32:39 +0400;Add generate_config_finder function

==

powerline/__init__.py
powerline/lint/__init__.py
==================
2890943;ZyX;2014-07-10 20:27:24 +0400;Rename find_config_file to _find_config_file

==

powerline/__init__.py
powerline/lint/__init__.py
tests/lib/config_mock.py
==================
c36e14f;ZyX;2014-07-10 20:23:41 +0400;Move get_config_paths out from Powerline class

==

powerline/__init__.py
==================
5851534;ZyX;2014-07-10 20:19:11 +0400;Replace on_*_change with callbacks generator

==

powerline/__init__.py
==================
0810f39;Nikolai Aleksandrovich Pavlov;2014-07-10 20:00:59 +0400;Merge pull request #909 from ZyX-I/pypy-support
Enable pypy tests in .travis.yml
==
==================
871ce57;ZyX;2014-07-10 19:49:37 +0400;Set use_mercurial and use_bzr to False in PyPy

==

tests/test_lib.py
==================
1919515;ZyX;2014-07-10 19:29:56 +0400;Only install mercurial and bazaar if using CPython

==

tests/install.sh
==================
6c0018b;ZyX;2014-07-10 19:16:27 +0400;Purge use_errno argument from function prototype calls
- It is already contained in prototype definition.
- PyPy is not able to run code with use_errno there.
==

powerline/lib/inotify.py
==================
d478c23;ZyX;2014-07-06 22:49:47 +0400;Enable pypy tests in .travis.yml

==

.travis.yml
==================
d770a41;Nikolai Aleksandrovich Pavlov;2014-07-10 19:06:29 +0400;Merge pull request #915 from ZyX-I/better-line_percent_gradient
Default line_percent_gradient to (light|dark)_green_gray gradients
==
==================
e2a4941;ZyX;2014-07-08 18:09:21 +0400;Default line_percent_gradient to (light|dark)_green_gray gradients
dark_green_gray gradient was generated with

    tools/generate_gradients.py 70 247

. It is used for non-insert modes in the current window. light_green_gray
gradient was generated with

    ./tools/generate_gradients.py 148 250

. It is used for insert mode in the current window.

==

powerline/config_files/colors.json
powerline/config_files/colorschemes/vim/default.json
tests/test_local_overrides.vim
==================
ce75d05;Nikolai Aleksandrovich Pavlov;2014-07-10 18:55:06 +0400;Merge pull request #914 from ZyX-I/better-battery-colors
Improve battery segment colors
==
==================
af2d73a;ZyX;2014-07-07 20:37:07 +0400;Regenerate gui colors for white_red gradient
Command used to generate colors:

    tools/generate_gradients.py -C 231 255 223 216 209 202 196 --weights='1 1 1 1 1 1 3'

==

powerline/config_files/colors.json
==================
551c9f8;ZyX;2014-07-07 20:00:33 +0400;Add two more colors to white_red gradient cterm colors
Picked up with

    tools/generate_gradients.py 231 223 216 209 196

==

powerline/config_files/colors.json
==================
a0a5b44;ZyX;2014-07-07 19:57:28 +0400;Use battery_full and battery_empty for displaying hearts
Red hearts for battery full are still more optimal in case white hearts are for
empty (though I do not understand why they have to be red). Cannot agree about
per cents though: red is better for empty then white is if there are no related
parts to compare.

==

powerline/config_files/colorschemes/tmux/default.json
powerline/segments/common.py
tests/test_segments.py
==================
2f7c44c;ZyX;2014-07-07 19:38:12 +0400;Document how to create gradient colors

==

docs/source/configuration.rst
==================
39316c4;ZyX;2014-07-07 19:37:59 +0400;Reverse the gradient in battery segment
Closes #910

==

powerline/segments/common.py
tests/test_segments.py
==================
cbcab95;Nikolai Aleksandrovich Pavlov;2014-07-10 18:22:42 +0400;Merge pull request #913 from ZyX-I/improve-generate_gradients
Improve generate_gradients.py script
==
==================
a68e01a;ZyX;2014-07-08 18:12:54 +0400;Reverse JSON output and add trailing comma
Makes it easier to copy-paste output to colors.json.

==

tools/generate_gradients.py
==================
ca0a8a2;ZyX;2014-07-07 20:22:07 +0400;Refactor generate_gradients.py

==

tools/generate_gradients.py
==================
d1c2980;ZyX;2014-07-07 20:12:25 +0400;Add a way to omit computing colors for terminal

==

tools/generate_gradients.py
==================
97cd66b;ZyX;2014-07-06 22:42:53 +0400;Merge branch 'fix-vim-overrides-test' into develop

==
==================
473f647;ZyX;2014-07-06 22:42:28 +0400;Fix test_local_overrides.vim test broken by better-gradient branch

==

tests/test_local_overrides.vim
==================
184df19;ZyX;2014-07-06 11:57:49 +0400;Merge branch 'better-gradients' into develop

==
==================
8b084bf;ZyX;2014-07-06 11:55:54 +0400;Also use CIE2000 in colors_find

==

tools/colors_find.py
==================
e74ca29;ZyX;2014-07-06 11:22:30 +0400;Use new script to regenerate dark_GREEN_Orange_red
Used command was

    tools/generate_gradients.py 22 58 94 52 --weights '60 15 10 2'

as earlier.

==

powerline/config_files/colors.json
==================
2e5c66c;ZyX;2014-07-06 10:17:14 +0400;Use CIE2000 to determine color distances, compute gradients in Lab
Slow

==

tools/generate_gradients.py
==================
7879142;Nikolai Aleksandrovich Pavlov;2014-06-28 22:20:39 +0400;Merge pull request #905 from ZyX-I/fix-876
Fix support for .git git symlinks
==
==================
623395a;ZyX;2014-06-28 22:18:45 +0400;Remove outdated comment

==

tests/test_lib.py
==================
d7d8108;ZyX;2014-06-28 21:54:21 +0400;Fix error in python-3* that happens while checking branch name

==

tests/test_lib.py
==================
4d4da56;ZyX;2014-06-28 21:46:12 +0400;Check whether it runs fine in travis

==

tests/test_lib.py
==================
317f4be;ZyX;2014-06-28 21:45:24 +0400;Add tests for git symlinks

==

tests/test_lib.py
==================
803963a;ZyX;2014-06-28 21:45:08 +0400;Fix git symlink handling

==

powerline/lib/vcs/git.py
==================
abb4ed4;ZyX;2014-06-28 21:28:45 +0400;Support .git files with newline at the end
Fixes #876
==

powerline/lib/vcs/git.py
==================
1386114;Nikolai Aleksandrovich Pavlov;2014-06-28 21:17:32 +0400;Merge pull request #904 from ZyX-I/disable-inotify-option
Add watcher option
==
==================
c570a98;ZyX;2014-06-28 19:01:12 +0400;Add watcher option
Ref #818

==

docs/source/configuration.rst
powerline/__init__.py
powerline/lib/config.py
powerline/lib/file_watcher.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/lint/__init__.py
powerline/lint/inspect.py
powerline/segment.py
powerline/segments/common.py
powerline/segments/vim.py
powerline/theme.py
tests/lib/config_mock.py
tests/test_config_reload.py
tests/test_configuration.py
tests/test_lib.py
tests/test_segments.py
==================
71ddace;Nikolai Aleksandrovich Pavlov;2014-06-28 19:30:04 +0400;Merge pull request #903 from ZyX-I/patchable-config
Add patchable file powerline/config.py with system-dependent variables
==
==================
27003bc;ZyX;2014-06-28 19:20:06 +0400;Move all variables that should be replaced to powerline/config.py

==

powerline/__init__.py
powerline/bindings/config.py
powerline/config.py
==================
95a2bef;ZyX;2014-06-28 19:03:50 +0400;Take directory setting from TMUX_CONFIG_DIRECTORY

==

powerline/bindings/config.py
==================
1f6ed8e;ZyX;2014-06-28 17:37:04 +0400;Merge branch 'fix-901' into develop

==
==================
43ca0e8;ZyX;2014-06-28 17:36:41 +0400;Fix documentation

==

docs/source/overview.rst
==================
070bfab;ZyX;2014-06-28 17:36:05 +0400;Fix quotes in powerline.conf
Fixes #901
==

powerline/bindings/tmux/powerline.conf
==================
699f04d;ZyX;2014-06-27 19:22:10 +0400;Improve battery support:
- Use dbus+UPower if available (code taken from kovidgoyal@7f73453 and
  refactored).
- Use any battery from /sys/class/power_supply: replace hardcoded BAT0/BAT1 with
  cycle.
- Use pmset.
- Use win32com.client with Win32_Battery object (code taken from an [SO
  question][1] and refactored).
- Use ctypes + GetSystemPowerStatus (from [the same question][1]).

Completely untested (only know that syntax is correct), will probably have to
hear replies from users to merge.

[1]: http://stackoverflow.com/a/21083571/273566

Closes #677.
Fixes #820.

==

powerline/segments/common.py
==================
828c953;ZyX-I;2014-06-25 21:58:04 +0400;Merge pull request #880 from ZyX-I/powerline-config-script
[RFC] Powerline config script
==
==================
eb44c61;ZyX-I;2014-06-25 21:40:50 +0400;Merge pull request #899 from ZyX-I/fix-tests
Set tmux PWD after PROMPT_COMMAND, do not require it at the start
==
==================
17469f0;ZyX;2014-06-25 21:34:57 +0400;Set tmux PWD after PROMPT_COMMAND, do not require it at the start
Should fix failing bash bindings test
==

powerline/bindings/bash/powerline.sh
==================
c6d5632;ZyX-I;2014-06-25 21:28:06 +0400;Merge pull request #898 from ZyX-I/fix-inotify-watcher
Fix inotify tree watcher bug

Fixes #874
==
==================
f4c62b8;ZyX-I;2014-06-25 21:27:15 +0400;Merge pull request #897 from ZyX-I/shell
Shell: some refactoring and Windows hack
==
==================
1d9cdc8;ZyX;2014-06-25 21:18:46 +0400;Fix inotify tree watcher bug
Change made by @kovidgoyal. Comment:

Fix a bug in the inotify tree watcher that incorrectly marked a tree as 
unchanged if an ignored event happens after a non-ignored event. This allows an 
optimisation in the git backed to be used (ignoring changes to .git/index.lock).

--

Not including actual commit as I do not think removing pygit2 backend is a good 
idea. Worse, removing pygit2 backend in the same commit fix is added is 
definitely bad idea.
==

powerline/lib/tree_watcher.py
powerline/lib/vcs/git.py
==================
685161f;ZyX;2014-06-25 21:05:58 +0400;Incorporate Windows hack found by @kovidgoyal
Ref #36
Fixes #498
==

powerline/lib/shell.py
==================
afa6b83;ZyX;2014-06-25 21:00:38 +0400;Explicitly specify shell=False when using powerline.lib.shell.run_cmd

==

powerline/lib/shell.py
==================
ed26793;ZyX;2014-06-25 21:00:12 +0400;Add documentation for powerline.lib.shell.run_cmd

==

powerline/lib/shell.py
==================
1498fc7;ZyX;2014-06-25 20:59:39 +0400;Move readlines function to powerline.lib.shell

==

powerline/lib/shell.py
powerline/lib/vcs/git.py
==================
7f5c496;ZyX;2014-06-25 20:42:39 +0400;Merge branch 'fix-467' into develop

==
==================
fc8ad83;ZyX;2014-06-25 20:40:24 +0400;Update tmux data even when prompt is disabled
Fixes #467
==

powerline/bindings/bash/powerline.sh
==================
1dd5f42;ZyX-I;2014-06-25 20:15:04 +0400;Merge pull request #896 from ZyX-I/fix-vim-environment
Fix typo in VimRenderer.render

Ref jmcantrell/vim-virtualenv#26.
==
==================
6f6c1fb;ZyX;2014-06-25 19:55:20 +0400;Add tests

==

powerline/vim.py
tests/lib/config_mock.py
tests/test_configuration.py
tests/vim.py
==================
46d58d3;ZyX;2014-06-25 19:27:21 +0400;Fix typo in VimRenderer.render
segment_info should have been initialized with self.segment_info, not updated: 
new values must have priority. Refactored the result so that static values are 
defined in VimRenderer.segment_info.
==

powerline/renderers/vim.py
==================
35522b1;ZyX-I;2014-06-24 23:50:03 +0400;Merge pull request #893 from ZyX-I/multiline-prompt
Multiline prompt support

Fixes #462
==
==================
515df61;ZyX;2014-06-24 23:36:50 +0400;Add some basic tests

==

tests/lib/config_mock.py
tests/test_config_reload.py
tests/test_configuration.py
==================
f02807f;ZyX;2014-06-24 20:36:45 +0400;Rename test_configuration to test_provided_config_files

==

tests/test_configuration.py
tests/test_provided_config_files.py
==================
9a4e1ed;ZyX;2014-06-23 20:03:24 +0400;Update documentation

==

docs/source/configuration.rst
==================
f718719;ZyX;2014-06-23 19:56:09 +0400;Update lint checker

==

powerline/lint/__init__.py
==================
8849f9d;ZyX;2014-06-23 20:43:29 +0400;Support multiline prompt in fish
Note: fish does not accept prompt strings that have width identical to the
terminal width: it makes prompt be reduced to just `>`.

==

powerline/bindings/fish/powerline-setup.fish
==================
5df7b36;ZyX;2014-06-24 21:22:09 +0400;Support multiline prompt in tcsh
Notes:

- I had to launch script twice because tcsh does not actually support multiline
  prompt: it squashes everything into one line.
- Thus I had to add POWERLINE_TCSH_NO_ABOVE_PROMPT: running python twice is not
  nice for performance.
- Due to 1) tcsh shifting rprompt by 1 and 2) tcsh not accepting %{%}-escaped
  color section at the very end of rprompt (actually it is accepting it, just
  makes user input colored as that section) I had to reduce computed width by 2.
- As running powerline command in precmd modifies status code I had to use
  POWERLINE_STATUS variable to save status.
- As tcsh does not accept names that start with underscore non-API powerline
  variables do not start with underscore.

==

powerline/bindings/tcsh/powerline.tcsh
==================
3b4a2b3;ZyX;2014-06-23 08:52:46 +0400;Support multiline prompt in zsh
Notes:

- Unlike fish zsh outputs right prompt shifted by one to the left. Which means
  I have to subtract 1 from computed width.
- PS2 and PS3 produce too lengthy prompts when fed with real width. Thus they
  are fed with PS1 prompt width like in ipython (out prompts).

==

powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
==================
eb014ef;ZyX;2014-06-23 08:48:54 +0400;Support multiline prompt in bash

==

powerline/bindings/bash/powerline.sh
==================
61006d8;ZyX;2014-06-23 08:39:05 +0400;Add support for above lines as described in #462
Support is not mirrored in shell bindings yet

==

powerline/__init__.py
powerline/renderer.py
powerline/shell.py
powerline/theme.py
scripts/powerline
==================
e3a27e0;ZyX;2014-06-23 21:09:27 +0400;Merge branch 'readd-zpython' into develop

==
==================
90afccb;ZyX;2014-06-23 21:09:15 +0400;Add note about lags to troubleshooting-common.rst

==

docs/source/installation/troubleshooting-common.rst
==================
a65ea01;ZyX-I;2014-06-15 11:16:16 +0400;Merge pull request #890 from ZyX-I/fix-zpython-bindings
Fix zpython bindings
==
==================
62601ad;ZyX;2014-06-15 11:09:09 +0400;Fix pipestatus segment in case of zsh+zpython

==

powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
==================
641b0e0;ZyX;2014-06-15 11:08:25 +0400;Junk double _POWERLINE_JOBNUM set
_POWERLINE_JOBNUM was already set in precmd, no need to do this again.
==

powerline/bindings/zsh/__init__.py
==================
edbcb5a;ZyX;2014-06-13 03:51:09 +0400;Merge branch 'new-zpython-name' into develop

==
==================
2c210bb;ZyX;2014-06-13 03:49:42 +0400;Zpython got renamed to libzpython
Not that I wanted this: cmake cannot be told I do not want `lib` prefix. `zsh/` 
prefix in any case should have been removed: zpython is not pretending it is 
a part of zsh now. Keeping old name for those who are still using zpython branch 
(i.e. nearly everybody since zpython got moved less then an hour ago).
==

powerline/bindings/zsh/powerline.zsh
==================
b145b70;ZyX-I;2014-06-01 21:51:28 +0400;Merge pull request #888 from ZyX-I/run_cmd-unicode
Decode stdout in shell.run_cmd
==
==================
17d1202;ZyX;2014-06-01 20:00:36 +0400;Decode stdout in shell.run_cmd
Closes #885
==

powerline/lib/shell.py
==================
7ac2717;ZyX;2014-05-27 05:44:08 +0400;Merge branch 'fix-883' into develop

==
==================
7c65ee9;ZyX;2014-05-27 05:43:55 +0400;Catch NotImplementedError when importing module
Fixes #883
==

powerline/segments/common.py
==================
e3bebcc;ZyX-I;2014-05-26 20:54:37 +0400;Merge pull request #882 from Determinant/develop
[tmux] Make battery segment use BAT1 if BAT0 was not found
==
==================
8840028;Teddy;2014-05-25 20:40:33 +0800;[tmux] Make battery segment use BAT1 if BAT0 was not found

==

powerline/segments/common.py
==================
4903986;ZyX;2014-05-24 13:59:20 +0400;Update documentation
Closes #872
==

docs/source/installation/troubleshooting-common.rst
docs/source/overview.rst
==================
c08340e;ZyX;2014-05-24 13:59:04 +0400;Use POWERLINE_CONFIG_COMMAND environment variable

==

powerline/bindings/tmux/powerline.conf
==================
7b1d7bb;ZyX;2014-05-24 13:44:58 +0400;Use scripts/powerline-config to source tmux configuration
Ref #872

==

powerline/bindings/config.py
powerline/bindings/tmux/powerline.conf
powerline/bindings/tmux/powerline_tmux_1.8_minus.conf
powerline/bindings/tmux/powerline_tmux_legacy_common.conf
scripts/powerline-config
setup.py
==================
316609f;ZyX-I;2014-05-12 08:28:52 +0400;Merge pull request #873 from frewsxcv/patch-1
Enable testing on Python 3.4
==
==================
43941e4;Corey Farwell;2014-05-11 20:22:48 -0700;Enable testing on Python 3.4

==

.travis.yml
==================
f39b1dc;Austin Beam;2014-05-05 22:45:43 -0500;tmux: Enhance version checking for tmux
tmux configuration has become very fragmented between versions due to a
combination of new features and deprecation of older options. As such,
version checking for tmux became a requirement to allow maximum
functionality along with version-appropriate configuration. However,
wrapping nearly every line with `if-shell` is tedious and becomes
virtually unreadable.

This enhancement to tmux version-checking creates a logical
configuration file structure that reflects the development of tmux. As
additional configurations are added and tmux development continues, this
structure can be leveraged appropriately and extended as needed.

Rather than having multiple `if-shell` checks for the same version, each
version or version group with specific requirements can be checked only
once. This leads to simpler and fewer `if-shell` version checks. It also
reduces the ambiguity introduced by complex `if-shell` commands that
include an 'else' conditional.

A caveat to adding this enhancement is the additional requirement of the
end user to add a tmux variable definition (`POWERLINE_BINDINGS_DIR`) to
his/her `~/.tmux.conf` file. For existing tmux users leveraging
powerline, this may prove to be a slight one-time nuisance immediately
after upgrading. Without this definition, there is no way to determine
the location of the additional tmux powerline config files that have
been added with this enhancement. The docs have also been updated in
this commit to reflect this initial configuration requirement change.
Also added are some additional troubleshooting notes that point to
definition of this variable as a potential issue. Powerline will
continue to work without the definition of `POWERLINE_BINDINGS_DIR`, but
some of the functionality will be reduced and the appearance incomplete
(i.e. colors).

Ultimately, the caveat above is a small price to pay in exchange for a
framework that can be leveraged for proper version-appropriate
configuration of tmux going forward.

==

docs/source/installation/troubleshooting-common.rst
docs/source/overview.rst
powerline/bindings/tmux/powerline.conf
powerline/bindings/tmux/powerline_tmux_1.8.conf
powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
powerline/bindings/tmux/powerline_tmux_1.9_plus.conf
powerline/bindings/tmux/powerline_tmux_legacy_common.conf
==================
9e7c6cf;ZyX;2014-05-04 17:50:24 +0400;Merge branch 'ipython-in-out-same-width' into develop

==
==================
413edbc;ZyX;2014-05-04 17:50:00 +0400;Add space after `In` string in ipython
Thus `In ` and `Out` have the same width
==

powerline/config_files/themes/ipython/in.json
==================
a7d92a6;ZyX;2014-05-04 13:31:06 +0400;Merge branch 'allow-disabling-prompt-support' into develop

==
==================
032a363;ZyX;2014-05-04 13:30:43 +0400;Allow disabling prompt and/or tmux support in shells
Fixes #849
==

docs/source/configuration.rst
powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
==================
850d6c2;ZyX-I;2014-05-04 13:07:59 +0400;Merge pull request #871 from ZyX-I/fix-853
Add support for omitting VALUE
==
==================
be2fe98;ZyX;2014-05-04 12:58:09 +0400;Add support for omitting VALUE
This will remove error reported in #853, but not its cause

==

docs/source/configuration.rst
powerline/lib/__init__.py
powerline/shell.py
tests/test_cmdline.py
tests/test_lib.py
==================
5d03fde;ZyX;2014-05-04 12:12:39 +0400;Merge branch 'add-editorconfig' into develop

==
==================
34b9280;ZyX;2014-05-04 12:10:32 +0400;Move some settings from .local.vimrc to .editorconfig
Closes #865 as WONTFIX. It is better to have one .editorconfig then a number of 
editor-specific files.
==

.editorconfig
.local.vimrc
==================
f6cdb44;ZyX-I;2014-05-04 11:52:32 +0400;Merge pull request #870 from austinbeam/feature/869-tmux-version-checking
tmux version checking (Issue #869)
==
==================
20d326f;Austin Beam;2014-05-03 17:58:43 -0500;tmux: Check version for last window indication
Last active window indication feature introduced by pull request #864
causes undesired behavior on older versions of tmux. Add version
checking to determine which method for feature implementation to use,
dropping the feature entirely for tmux versions less that v1.8. For tmux
v1.9, use the newer 'window-status-last-style' option rather than the
deprecated (starting with v1.9) 'window-status-last-fg' option. Ideally,
the other `foo-{attr,fg,bg}` options used in the `tmux` powerline config
file should also be version checked and replaced with the corresponding
`foo-style` option as well.

==

powerline/bindings/tmux/powerline.conf
==================
478e497;Austin Beam;2014-05-03 17:57:13 -0500;tmux: Check version for prefix active colorization
Prefix active colorization feature introduced by pull request #863
causes undesired behavior on older versions of tmux. Add version
checking and revert to old powerline configuration if the tmux version
is less than v1.8. tmux v1.8 was the first version to support the
client_prefix format variable.

==

powerline/bindings/tmux/powerline.conf
==================
7937ab9;Austin Beam;2014-05-03 17:55:10 -0500;tmux: Shell variable definition for tmux version
Add variables for tmux major and minor version numbers. These can
subsequently be used to test for tmux version compatibility.

==

powerline/bindings/tmux/powerline.conf
==================
9d4100a;ZyX-I;2014-05-03 13:10:49 +0400;Merge pull request #863 from austinbeam/feature/tmux-indicate-prefix
tmux: Change session block color if prefix pressed
==
==================
06c2f00;ZyX-I;2014-05-03 13:10:21 +0400;Merge pull request #864 from austinbeam/feature/tmux-colorize-last-window
tmux: Colorize the last active window FG
==
==================
7e637d2;ZyX-I;2014-05-03 13:06:21 +0400;Merge pull request #867 from ZyX-I/fix-shutdown
Fix shutdown function being always None
==
==================
d759a0a;ZyX;2014-05-03 13:03:57 +0400;Undo renaming args to kwargs

==

powerline/segment.py
==================
e9852fe;ZyX;2014-05-03 12:44:00 +0400;Fix shutdown function being always None
Problem reported by @IvanMalison
==

powerline/segment.py
==================
59b090e;Austin Beam;2014-05-01 00:21:12 -0500;tmux: Colorize the last active window FG
Use a feature of tmux v1.8+ to change the FG color of the last active
window to blue. This uses the foo-{attr,bg,fg} format, which is
deprecated (although still available) starting with tmux v1.9 in favor
of the corresponding foo-style variable. However, tmux v1.9 is not yet
ubiquitous enough to move to the foo-style variables. For example, the
latest Ubuntu LTS (14.04) only has tmux v1.8 available in its
repositories, so the foo-{attr,bg,fg} variables prove to be more
'compatible' for now.

For future reference, here is the modification that should be made once
tmux v1.8 is deemed old enough to drop support for (or whenever the
deprecated foo-{attr,bg,fg} variables go away in the latest version of
tmux):

-set -g window-status-last-fg colour31
+set -g window-status-last-style fg=colour31

It might be appropriate to add version checking around some of these
types of options for maximum compatibility, but my initial attempt to
explore version checking in the tmux config file got extremely messy in
a hurry.

==

powerline/bindings/tmux/powerline.conf
==================
4d85e9a;Austin Beam;2014-05-01 00:02:37 -0500;tmux: Change session block color if prefix pressed
This modification to the tmux powerline binding allows the user to
easily identify when the prefix has been sent. When the prefix has
been sent, the session block changes from white to blue (matching the
color of the active window). This is accomplished using the conditional
functionality of tmux format strings and the 'client_prefix' format
variable. Unfortunately, the tmux parser fails to properly parse out
comma-separated format strings inside a format conditional, so those
have been split out into individual segments as well. Attempting to
re-combine the formats inside the conditionals will break this feature.

==

powerline/bindings/tmux/powerline.conf
==================
fa50228;ZyX;2014-04-23 06:42:46 +0400;Merge branch 'fix-git_directory' into HEAD

==
==================
c603410;ZyX;2014-04-23 06:36:24 +0400;Do not use .strip(), add two check git has

==

powerline/lib/vcs/git.py
==================
ba45a00;ZyX;2014-04-23 06:31:42 +0400;Decode bytes before using os.path.join
Otherwise it will raise TypeError when trying to join str() and bytes() instance 
in python-3.3.

Fixes #654
Closes #655
==

powerline/lib/vcs/git.py
==================
c100c90;ZyX-I;2014-04-05 03:53:37 +0400;Merge pull request #855 from afflux/feature/fix-zsh-mode-display
fix default mode display in zsh bindings
==
==================
96d89ae;Kjell Braden;2014-04-04 13:11:37 +0200;fix default mode in zsh bindings

==

powerline/bindings/zsh/powerline.zsh
==================
b856fa5;ZyX;2014-03-28 08:57:24 +0400;Merge branch 'fix-no-clients-error' into develop

==
==================
45cc73a;ZyX;2014-03-28 08:56:04 +0400;Use “tmux refresh -S” to check for tmux presence
Reason: tmux may be launched and $TMUX set, but current shell still not under 
tmux (and most likely there are no active session). In this case `tmux refresh 
-S` may fail with “no clients” message, which is annoying.
==

powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
==================
f9764b9;ZyX;2014-03-21 19:33:40 +0400;Merge branch 'fix-tmux-support' into develop
Ref #672

==
==================
36e1854;ZyX;2014-03-21 19:28:41 +0400;Fix tmux guard

==

powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
==================
b9a0444;ZyX;2014-03-17 19:27:21 +0400;Merge branch 'more-powerline-symbols-fonts' into develop

==
==================
e094e3c;ZyX;2014-03-17 19:26:43 +0400;Add more Droid Sans Mono families
Fixes #830
==

font/10-powerline-symbols.conf
==================
c5692bf;ZyX-I;2014-03-15 00:33:24 +0300;Merge pull request #841 from ZyX-I/no-pl-unicode-exceptions
Do not allow unicode-related exceptions inside logger
==
==================
839038d;ZyX;2014-03-15 01:27:10 +0400;Also move FailedUnicode to powerline/lib/unicode

==

powerline/__init__.py
powerline/lib/unicode.py
==================
d856225;ZyX;2014-03-13 23:41:25 +0400;Do not allow unicode-related exceptions inside logger
Fixes #421
==

powerline/__init__.py
powerline/lib/unicode.py
==================
7965134;ZyX;2014-03-13 23:27:17 +0400;Merge branch 'fix-intro' into develop

==
==================
993402f;ZyX;2014-03-13 23:27:06 +0400;Do not use :redrawstatus!: it makes intro disappear
It seems that old fix for old code is no longer needed. At least I do not see 
any problems with

    vim -u NONE -S ~/.vam/powerline/powerline/bindings/vim/plugin/powerline.vim --cmd 'set ls=2'

.

Fixes #250
==

powerline/vim.py
==================
b4644ff;ZyX;2014-03-13 21:14:20 +0400;Add fix for old vims
Old vim versions did not support both unicode() and str() in python2 bindings in 
a number of places.

Fixes #829
==

powerline/bindings/vim/__init__.py
==================
820b5ec;ZyX-I;2014-03-13 20:12:12 +0300;Merge pull request #840 from ZyX-I/review-res-fixes
Fixes #819.
==
==================
9415540;ZyX;2014-03-13 20:55:00 +0400;Suggest URIs under query_url description

==

powerline/segments/common.py
==================
e51d7a9;ZyX;2014-03-13 20:54:07 +0400;Add fuzzy_time(unicode_text) argument

==

powerline/segments/common.py
tests/test_segments.py
==================
3cf3fb8;ZyX;2014-03-13 20:48:19 +0400;Document istime date argument

==

powerline/segments/common.py
==================
3f1e621;ZyX;2014-03-13 20:47:06 +0400;Add ellipsis argument to cwd segment

==

powerline/segments/common.py
tests/test_segments.py
==================
c3b4654;ZyX;2014-02-26 08:49:25 +0400;Fix flake8 complaints

==

powerline/bindings/vim/__init__.py
powerline/lib/file_watcher.py
powerline/lib/humanize_bytes.py
powerline/lib/tree_watcher.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/renderer.py
powerline/renderers/vim.py
powerline/segments/shell.py
powerline/segments/vim.py
powerline/theme.py
tests/test_cmdline.py
tests/test_segments.py
tests/test_shells/postproc.py
tests/vim.py
tools/generate_gradients.py
==================
076134a;ZyX;2014-03-13 20:37:12 +0400;Merge branch 'bash-keep-status' into develop

==
==================
2b5b6af;ZyX;2014-03-13 20:35:20 +0400;Put _powerline_prompt at the start
Reason: $? may be overridden by the previous commands in PROMPT_COMMAND that do 
not keep it like _powerline_prompt does (see `return $last_exit_code`). 
(@ascrane)

Closes #836
==

powerline/bindings/bash/powerline.sh
==================
534b043;ZyX-I;2014-03-13 19:32:39 +0300;Merge pull request #838 from ZyX-I/new-psutil-fixes
New psutil fixes
==
==================
55858e1;ZyX;2014-03-13 20:05:52 +0400;Fix tests for new psutil

==

tests/test_segments.py
==================
678d47c;ZyX;2014-03-13 19:41:59 +0400;Switch comments

==

powerline/segments/common.py
==================
ecf26df;ZyX;2014-03-13 19:38:05 +0400;Update powerline for new psutil
Fixes #835

==

powerline/segments/common.py
==================
70a94ee;ZyX-I;2014-02-26 07:28:45 +0300;Merge pull request #822 from ZyX-I/threaded-fixes
Some fixes for powerline.lib.threaded

Fixes #813
==
==================
7df8918;ZyX;2014-02-26 08:24:56 +0400;Make code compatible with python-2.6
In python 2.6 Event.wait() always returns None making condition always True.
==

powerline/lib/threaded.py
==================
acff89a;ZyX;2014-02-26 08:15:26 +0400;Remove useless lock

==

tests/test_lib.py
==================
c083460;ZyX;2014-02-23 15:37:13 +0400;Add after_update argument to prevent infinite recursion
Just in case.

==

powerline/lib/threaded.py
==================
e1eecea;ZyX;2014-02-23 15:34:15 +0400;Do not use drop_interval

==

powerline/lib/threaded.py
==================
ba41cec;ZyX;2014-02-23 14:36:08 +0400;Add powerline.lib.threaded tests

==

tests/lib/__init__.py
tests/test_lib.py
==================
68a6fd0;ZyX;2014-02-23 14:35:11 +0400;Use monotonic() in place of time.time()

==

tests/test_lib.py
==================
b1dba59;ZyX;2014-02-23 14:32:55 +0400;Do not recompute key

==

powerline/lib/threaded.py
==================
5111d9b;ZyX;2014-02-23 12:21:38 +0400;If update_first is False make it first wait and then update
Reason: otherwise it is likely that two updating processes are being run
simultaneously. With the current code it is not impossible as well, but less
likely.

==

powerline/lib/threaded.py
==================
66a2087;ZyX;2014-02-22 18:01:23 +0400;Use only get/set_update_value functions to access update_value
Also rename .skip to .crashed

==

powerline/lib/threaded.py
==================
725ff69;ZyX;2014-02-22 17:24:21 +0400;Refactor KwThreadedSegment
Fixes #813
==

powerline/lib/threaded.py
==================
8476583;ZyX-I;2014-02-16 20:26:29 +0300;Merge pull request #809 from ZyX-I/zsh-local-themes
Add support for [R]PS2 and PS3 prompts
==
==================
19da7b2;ZyX;2014-02-16 21:25:49 +0400;Add powerline-lint support for new local themes

==

powerline/lint/__init__.py
==================
58d5d6b;ZyX;2014-02-16 21:22:05 +0400;Remove failing test

==

tests/test_cmdline.py
==================
22b1c74;ZyX;2014-02-16 21:19:44 +0400;Also update solarized colorscheme

==

powerline/config_files/colorschemes/shell/solarized.json
==================
a86c66f;ZyX;2014-02-16 21:15:57 +0400;Update zsh tests
Note: to make prompt fancy enough powerline-daemon should be used. Otherwise 
continuation prompt length is different from what was expected:

With daemon:

    user > env > path > if true ; then
                 then > fi

Without:

    user > env > path > if true ; then
    then > fi

Fixes #771 as I do not want to touch tcsh any longer
==

tests/test_shells/input.zsh
tests/test_shells/zsh.ok
==================
cf0d094;ZyX;2014-02-16 21:11:37 +0400;Add zpython support

==

powerline/bindings/zsh/__init__.py
==================
5c33de7;ZyX;2014-02-16 20:52:22 +0400;Also test zsh local themes

==

tests/test_configuration.py
==================
7eed06f;ZyX;2014-02-16 20:52:02 +0400;Make themes/shell/select.json look better

==

powerline/config_files/themes/shell/select.json
==================
8718bf7;ZyX;2014-02-16 20:41:01 +0400;Add tests for continuation segment

==

tests/test_segments.py
==================
1f4c77d;ZyX;2014-02-16 20:40:40 +0400;Do not take number of subsegments into account, work without parser_state

==

powerline/segments/shell.py
==================
772a09d;ZyX;2014-02-16 20:28:59 +0400;Make PS2 display something more meaningful: add continuation segment

==

powerline/bindings/zsh/powerline.zsh
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/themes/shell/continuation.json
powerline/segments/shell.py
==================
aff028e;ZyX;2014-02-16 20:06:32 +0400;Add support for zsh local themes
Still missing: parser state

Ref #771
==

powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/config.json
powerline/config_files/themes/shell/continuation.json
powerline/config_files/themes/shell/select.json
powerline/renderers/ipython.py
powerline/renderers/zsh_prompt.py
powerline/shell.py
==================
01ef263;ZyX;2014-02-16 19:59:06 +0400;Fix renderer_arg metavar

==

powerline/shell.py
==================
0d49c06;ZyX;2014-02-16 19:17:06 +0400;Allow more then one -R be effective

==

powerline/shell.py
==================
3aec684;ZyX;2014-02-16 16:44:01 +0400;Use tuple in place of single-element list

==

powerline/shell.py
==================
cf4c1e0;ZyX-I;2014-02-16 03:30:35 +0300;Merge pull request #365 from kierun/develop
Added terminus font and urxvt documentation.
==
==================
9328cec;ZyX;2014-02-16 03:37:21 +0400;Merge branch 'no-exception-format' into develop

==
==================
70a9da6;ZyX;2014-02-16 03:36:02 +0400;Format in PowerlineLogger._log, not in pl.exception arguments

==

powerline/lib/shell.py
==================
08a2e75;ZyX;2014-02-16 02:55:05 +0400;Merge branch 'fix-449' into develop

==
==================
8483683;ZyX;2014-02-16 02:53:51 +0400;Make virtcol_current_gradient background color match line_current color
Fixes #449
==

powerline/config_files/colorschemes/vim/solarized.json
==================
2f400e9;ZyX;2014-02-16 01:25:18 +0400;Merge branch 'realpath' into develop

==
==================
25212a7;ZyX;2014-02-16 01:25:10 +0400;Use os.path.realpath() before os.path.abspath()
Closes #454
Fixes #413
==

scripts/powerline
==================
1faf118;ZyX-I;2014-02-15 23:43:04 +0300;Merge pull request #807 from ZyX-I/improved-troubleshooting
Improved troubleshooting
==
==================
7ab74ab;ZyX;2014-02-16 00:41:44 +0400;Remove duplicate troubleshooting question

==

docs/source/installation/troubleshooting-common.rst
==================
f384055;ZyX;2014-02-16 00:40:22 +0400;A few style fixes

==

powerline/bindings/vim/plugin/powerline.vim
==================
d6f7f11;ZyX;2014-02-16 00:38:36 +0400;Add more spaces so that python indentation will be correct

==

powerline/bindings/vim/plugin/powerline.vim
==================
7e65332;ZyX;2014-02-16 00:37:17 +0400;Remove outdated information from troubleshooting

==

docs/source/installation/troubleshooting-common.rst
==================
13df3d3;ZyX;2013-10-14 18:32:56 +0400;More improved troubleshooting

==

docs/source/installation/troubleshooting-common.rst
docs/source/overview.rst
powerline/bindings/vim/plugin/powerline.vim
==================
536427f;ZyX;2013-07-07 19:06:11 +0400;Make powerline.vim work in compatible mode

==

powerline/bindings/vim/plugin/powerline.vim
==================
1fbd92b;ZyX-I;2014-02-15 20:05:41 +0300;Merge pull request #806 from ZyX-I/shell-fixes
Shell fixes: TMUX support for su[do] and modes on old zsh
==
==================
adaefdd;ZyX;2014-02-15 21:06:51 +0400;Merge branch 'i3-fixes' into develop

==
==================
dfdc12b;ZyX;2014-02-15 21:04:40 +0400;Move i3bgbar.py to i3bar.py

==

powerline/bindings/i3/powerline-i3.py
powerline/renderers/i3bar.py
powerline/renderers/i3bgbar.py
==================
8041ea0;ZyX;2014-02-15 21:01:14 +0400;Some style fixes

==

docs/source/overview.rst
powerline/bindings/i3/powerline-i3.py
powerline/renderers/i3bgbar.py
powerline/segments/i3wm.py
==================
1add2b6;ZyX;2014-02-15 20:47:20 +0400;Disable mode support on <=zsh-4.3.10
Fixes #800
==

powerline/bindings/zsh/powerline.zsh
==================
6c15711;ZyX;2014-02-15 20:21:09 +0400;Check for TMUX only once, check whether $TMUX is writeable
Fixes #801

==

powerline/bindings/bash/powerline.sh
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/tcsh/powerline.tcsh
powerline/bindings/zsh/powerline.zsh
==================
4e6cd08;ZyX;2014-02-15 20:10:07 +0400;In fish also check for presence of powerline in $PATH

==

powerline/bindings/fish/powerline-setup.fish
==================
bf89ac6;Josh Turmel;2014-02-13 22:49:13 -0600;Update font patching documentation
Update reference to where fontpatcher.py is located
==

docs/source/fontpatching.rst
==================
97c93fc;ZyX-I;2014-02-09 15:46:35 +0300;Merge pull request #782 from S0lll0s/feature/i3
Add i3 bindings, segments and renderer
==
==================
def68a2;S0lll0s;2014-02-09 12:45:01 +0100;Update documentation to include i3 instructions

==

docs/source/overview.rst
==================
9548c44;S0lll0s;2014-02-09 12:10:18 +0100;Fix highlighting groups for workspaces segment

==

powerline/segments/i3wm.py
==================
8cb11d8;S0lll0s;2014-02-09 12:03:26 +0100;Adapt to python3 / __future__ print statement

==

powerline/bindings/i3/powerline-i3.py
==================
c5df55e;S0lll0s;2014-02-09 11:11:57 +0100;Remove dead code from renderers/i3bgbar.py

==

powerline/renderers/i3bgbar.py
==================
7d89ff2;S0lll0s;2014-02-09 11:10:49 +0100;Fix docstring for i3wm.workspaces segment

==

powerline/segments/i3wm.py
==================
999fad5;ZyX-I;2014-02-09 12:48:32 +0300;Merge pull request #792 from ZyX-I/improved-battery
Improved battery segment:

Closes #791.
==
==================
66d98e7;ZyX;2014-02-09 13:44:06 +0400;Improved battery segment:
- Ignore `steps` if gamify is False.
- Add `full_heart` and `empty_heart` keywords.
- Document `format` keyword.
- Replace `draw_soft_divider` with `draw_inner_divider`.
==

powerline/segments/common.py
tests/test_segments.py
==================
cce6d26;ZyX;2014-02-09 02:38:52 +0400;Merge branch 'osx-battery' into HEAD

==
==================
c4fb09a;Joshua Perry;2014-02-08 14:48:20 -0700;Update tests to support parameter on _get_capacity()

==

tests/test_segments.py
==================
18f4fda;Joshua Perry;2014-02-08 14:41:30 -0700;Revert change to segment parameter default value

==

powerline/segments/common.py
==================
f62d749;Joshua Perry;2014-02-08 12:51:13 -0700;Refactored OSX battery code

==

powerline/segments/common.py
==================
9accbdd;Joshua Perry;2014-02-07 11:10:43 -0700;Added OSX battery support

==

powerline/segments/common.py
==================
b5c1455;ZyX-I;2014-02-09 00:31:44 +0300;Merge pull request #790 from ZyX-I/tests-fix
Fix travis CI build
==
==================
773d6a6;ZyX;2014-02-09 01:25:18 +0400;Also use --allow-unverified

==

tests/install.sh
==================
5e4daed;ZyX;2014-02-09 01:16:48 +0400;Install bazaar with --allow-external

==

tests/install.sh
==================
4e35007;ZyX;2014-02-09 01:16:29 +0400;Home may be None, respect it

==

powerline/segments/common.py
==================
173159a;ZyX;2014-02-08 23:43:49 +0400;Merge branch 'fix-788' into develop

==
==================
9e8471b;ZyX;2014-02-08 23:39:02 +0400;Fix non-ASCII directories processing
Fixes #788

==

powerline/lib/unicode.py
powerline/segments/common.py
powerline/theme.py
==================
faeab13;ZyX;2014-02-08 23:41:33 +0400;Merge branch 'common-imports' into develop

==
==================
7a90e6d;ZyX;2014-02-08 23:31:45 +0400;Cleanup import in segments.common:
- move `import re` to top
- if import is in a `try` block and there is some processing before it and
  `except` move this to `else`.

==

powerline/segments/common.py
==================
21319fc;S0lll0s;2014-02-07 13:14:56 +0100;Use 'with' instead of lock.acquire/release()

==

powerline/bindings/i3/powerline-i3.py
==================
253ad02;S0lll0s;2014-02-04 10:50:44 +0100;Add i3 bindings and segments

==

powerline/bindings/i3/powerline-i3.py
powerline/renderers/i3bgbar.py
powerline/segments/i3wm.py
==================
03594f2;ZyX;2014-02-04 00:10:28 +0400;Merge branch 'local.vimrc' into develop
Ref #314

==
==================
4a2fbb0;ZyX;2014-02-04 00:10:16 +0400;Add &ts setting and comment regarding .local.vimrc usage

==

.local.vimrc
==================
116af44;ZyX;2014-02-03 22:36:49 +0400;Merge branch 'vim-window-title' into develop
Closes #703

==
==================
52d182f;ZyX;2014-02-03 22:34:14 +0400;Add window_title group to solarizedlight colorschem

==

powerline/config_files/colorschemes/vim/solarizedlight.json
==================
d7589bc;ZyX;2014-02-03 22:26:34 +0400;Make window_title work in older vims

==

powerline/bindings/vim/__init__.py
powerline/segments/vim.py
==================
7f1abf1;Daniel Hahler;2013-11-14 01:40:40 +0100;Vim: add window_title function, used in quickfix theme
This is used to display the window title of the quickfix window. Both
Syntastic and Vim use this. See w:quickfix_title.

==

powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/themes/vim/quickfix.json
powerline/segments/vim.py
==================
7187df2;ZyX-I;2014-02-03 09:59:09 -0800;Merge pull request #781 from ZyX-I/segment-calls
Recreate args dictionary with str() arguments, use closures
==
==================
5071f12;ZyX;2014-02-03 21:56:16 +0400;Recreate args dictionary with str() arguments, use closures
Fixes #776
==

powerline/segment.py
powerline/theme.py
==================
2ade819;ZyX;2014-02-03 21:26:14 +0400;Merge branch 'lib-shell' into develop

==
==================
5db02bb;ZyX;2014-02-03 21:23:42 +0400;Check for asrun() returning None

==

powerline/segments/common.py
==================
f26eb24;ZyX;2014-02-03 21:21:22 +0400;Remove asquote function for it being used nowhere

==

powerline/lib/shell.py
powerline/segments/common.py
==================
4408358;ZyX;2014-02-03 21:20:53 +0400;Move NowPlaying._run_cmd to powerline.lib.shell.run_cmd, make asrun use it

==

powerline/lib/apple_script_runner.py
powerline/lib/shell.py
powerline/segments/common.py
==================
079a750;ZyX;2014-02-03 21:09:54 +0400;Merge branch 'no-sys.stderr' into develop

==
==================
a975ece;ZyX;2014-02-03 21:09:33 +0400;Do not use sys.stderr for logging

==

powerline/segments/common.py
==================
86eae3a;ZyX;2014-02-03 21:04:54 +0400;Merge branch 'ericboehs-develop' into develop
Fixes #778

==
==================
6e0fe44;Eric;2014-01-29 22:41:24 -0600;Port spotify mac script from tmux-powerline

==

powerline/config_files/colorschemes/tmux/default.json
powerline/lib/apple_script_runner.py
powerline/segments/common.py
==================
0bbe951;ZyX-I;2014-02-03 08:47:22 -0800;Merge pull request #780 from pshchelo/cpu-load-tmux
Add cpu_load_percent colors to tmux
==
==================
78f236b;Pavlo Shchelokovskyy;2014-01-31 12:46:40 +0200;Add cpu_load_percent colors to tmux
Definitions for cpu_load_percent segment colors and gradient where missing
from default tmux color definitions, rendering this segment unusable for tmux
"out-of-the-box".

==

powerline/config_files/colorschemes/tmux/default.json
==================
4406498;ZyX-I;2014-01-29 21:09:28 -0800;Merge pull request #777 from ZyX-I/reload-tests-fix
Fix test_config_reload race conditions

Fixes #772.
==
==================
d85ae96;ZyX;2014-01-30 09:00:33 +0400;Sleep more

==

tests/test_config_reload.py
==================
c184c4c;ZyX;2014-01-30 08:46:36 +0400;Merge branch 'shell-fixes-2' into develop

==
==================
8096f2e;ZyX;2014-01-30 08:46:22 +0400;Also rename variables in python files

==

powerline/segments/shell.py
scripts/powerline
==================
79c7a00;ZyX;2014-01-30 00:49:27 +0400;Merge branch 'shell-fixes' into develop

==
==================
bcd7bb3;ZyX;2014-01-30 00:45:00 +0400;Do the same for bash bindings

==

powerline/bindings/bash/powerline.sh
==================
bc85698;ZyX;2014-01-30 00:44:32 +0400;Add underscore to non-API functions and variables

==

powerline/bindings/zsh/powerline.zsh
==================
dc33c36;ZyX;2014-01-30 00:42:56 +0400;Fix case when widget was defined with `zle -N widget`
Fixes #774

==

powerline/bindings/zsh/powerline.zsh
==================
b1e8170;ZyX;2014-01-30 00:31:50 +0400;Change warning level to debug

==

powerline/segments/shell.py
==================
ac04a18;ZyX-I;2014-01-26 12:24:48 -0800;Merge pull request #773 from ZyX-I/tcsh
Add tcsh support

Fixes #762.
==
==================
c648178;ZyX;2014-01-27 00:22:38 +0400;Strip anything but prompt from tcsh tests
There are some problems with a number of spaces on travis: it differs. Cannot 
use the same code as for fish because output looks like

    {prompt}{spaces}^[0m ^[[{number}D

and both `{spaces}` and `{number}` differ on my machine and in travis.
==

tests/test_shells/postproc.py
tests/test_shells/tcsh.ok
==================
fe99e25;ZyX;2014-01-26 23:52:06 +0400;Add tcsh tests

==

tests/install.sh
tests/test_shells/bash.ok
tests/test_shells/input.bash
tests/test_shells/input.fish
tests/test_shells/input.tcsh
tests/test_shells/input.zsh
tests/test_shells/tcsh.ok
tests/test_shells/test.sh
tests/test_shells/zsh.ok
==================
219b81d;ZyX;2014-01-27 00:00:25 +0400;Fix tcsh escaping

==

powerline/bindings/tcsh/powerline.tcsh
powerline/renderers/tcsh_prompt.py
==================
a2e11ef;ZyX;2014-01-26 23:39:25 +0400;Add space to rprompt
According to tcsh documentation `%{%}` must not be the last segment.

Note: this means that right prompt has *two* characters between its end and 
terminal emulator border.
==

powerline/bindings/tcsh/powerline.tcsh
==================
3ecbeb8;ZyX;2014-01-23 21:44:11 +0400;Add powerline.tcsh
Ref #762
==

powerline/bindings/tcsh/powerline.tcsh
==================
a4e8f36;ZyX-I;2014-01-26 10:43:16 -0800;Merge pull request #706 from ZyX-I/better-errors
Better error handling
==
==================
bb34376;ZyX;2014-01-26 22:45:11 +0400;Add powerline: exception prefix

==

tests/test_config_reload.py
==================
e18a2e6;ZyX-I;2014-01-26 10:38:19 -0800;Merge pull request #709 from ZyX-I/zsh-vi-mode
Add support for modes to shell bindings
==
==================
6ba13c1;ZyX;2014-01-26 22:35:02 +0400;Modify appropriate theme

==

tests/test_shells/input.zsh
tests/test_shells/zsh.ok
==================
8984647;ZyX;2014-01-26 22:26:29 +0400;Add tests

==

tests/test_shells/input.zsh
tests/test_shells/zsh.ok
==================
36c0070;ZyX;2013-11-17 01:36:16 +0400;Omit any non-vi* mode by default

==

powerline/bindings/zsh/powerline.zsh
powerline/segments/shell.py
==================
34d4877;ZyX;2013-11-17 00:12:40 +0400;Some fixes for powerline.zsh:
- Replace main and other linked modes with modes they link to
- Add proper keymap initialization

Ref #508

==

powerline/bindings/zsh/powerline.zsh
==================
becc8ee;ZyX;2013-06-22 23:48:05 +0400;Support zsh “modes” (different keymaps like when using vicmd/viins pair)
Fixes #508
==

powerline/bindings/zsh/powerline.zsh
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/themes/shell/default.json
powerline/lint/__init__.py
powerline/renderer.py
powerline/renderers/ipython.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/segments/shell.py
scripts/powerline
==================
417884a;ZyX-I;2014-01-26 10:04:30 -0800;Merge pull request #725 from ZyX-I/fix-fname-special-chars
Handle non-printable characters properly
==
==================
a571f49;ZyX;2014-01-26 21:59:33 +0400;Get rid of printf

==

tests/test_shells/bash.ok
tests/test_shells/input.bash
tests/test_shells/input.fish
tests/test_shells/input.zsh
tests/test_shells/test.sh
tests/test_shells/zsh.ok
==================
4804343;ZyX;2014-01-26 21:45:02 +0400;Add tests for special characters escaping

==

tests/test_shells/bash.ok
tests/test_shells/fish.ok
tests/test_shells/input.bash
tests/test_shells/input.fish
tests/test_shells/input.zsh
tests/test_shells/test.sh
tests/test_shells/zsh.ok
==================
9edee8a;ZyX;2014-01-26 21:44:32 +0400;Remove backslash escaping on zsh and fish

==

powerline/renderers/bash_prompt.py
powerline/renderers/shell.py
==================
e3bf63e;ZyX;2014-01-26 21:30:01 +0400;Do not do needless copying in test_shells/test.sh

==

tests/test_shells/postproc.py
tests/test_shells/screenrc
tests/test_shells/test.sh
==================
e7820ef;ZyX;2013-12-01 19:25:19 +0400;Make powerline work with non-utf filenames
Fixes #281
==

powerline/bindings/vim/__init__.py
powerline/segments/common.py
powerline/segments/vim.py
tests/test_segments.py
tests/vim.py
==================
693ba8a;ZyX;2013-12-01 15:46:13 +0400;Use .copy() on character_translations before modifying

==

powerline/renderers/bash_prompt.py
powerline/renderers/shell.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/renderers/zsh_prompt.py
==================
ecff281;ZyX;2013-12-01 15:42:57 +0400;Handle non-printable characters properly
Fixes #723
==

powerline/renderer.py
powerline/renderers/bash_prompt.py
powerline/renderers/shell.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/renderers/zsh_prompt.py
==================
48a076f;ZyX-I;2014-01-25 01:16:17 -0800;Merge pull request #768 from ZyX-I/tbsh-update-trouble
Add troubleshooting questions regarding updating
==
==================
ba41b1f;ZyX;2014-01-25 13:08:13 +0400;Add troubleshooting questions regarding updating

==

docs/source/installation/troubleshooting-common.rst
==================
c631ecb;ZyX;2014-01-24 10:42:53 +0400;Merge branch 'no-PROMPT_COMMAND-colon' into develop

==
==================
bf688d4;ZyX;2014-01-24 10:38:18 +0400;Use nothing on right side of `_powerline_prompt`
It should be more robust in case every PROMPT_COMMAND setter cares about
previous commands

Closes #765

==

powerline/bindings/bash/powerline.sh
==================
9eb6550;ZyX-I;2014-01-23 11:05:24 -0800;Merge pull request #764 from fitztrev/syntastic-update
Use hasErrorsOrWarningsToDisplay for Syntastic
==
==================
bb37e34;Trevor Fitzgerald;2014-01-23 13:50:30 -0500;Use hasErrorsOrWarningsToDisplay for Syntastic
Reverts PR #759 based on feedback from @lcd047 in scrooloose/syntastic#950

==

powerline/segments/plugin/syntastic.py
==================
ec7d808;ZyX;2014-01-23 19:40:52 +0400;Merge branch 'fish-ebuild-fixes' into develop

==
==================
e489e54;ZyX;2014-01-23 19:32:19 +0400;Move setup to powerline-setup.fish
This file is supposed to be placed in /usr/share/fish/functions.
==

docs/source/overview.rst
powerline/bindings/fish/powerline-setup.fish
powerline/bindings/fish/powerline.fish
tests/test_shells/input.fish
==================
64e23d3;ZyX;2014-01-23 18:45:46 +0400;Merge branch 'patch-1' into develop
Fixes #724

==
==================
b75d2b5;ZyX;2014-01-23 18:45:09 +0400;Add tests

==

tests/test_segments.py
==================
79c4d37;ZyX-I;2014-01-23 06:36:58 -0800;Merge pull request #696 from ZyX-I/fish
Add powerline/bindings/fish/powerline.fish
==
==================
9fcfd54;ZyX;2014-01-23 18:33:33 +0400;Disable fish tests on travis

==

tests/install.sh
tests/test_shells/test.sh
==================
b379402;ZyX;2014-01-23 16:41:29 +0400;Also print shell version string

==

tests/test_shells/test.sh
==================
d75f47a;ZyX;2014-01-23 16:32:18 +0400;Use `.` for sourcing in fish
It appears that travis uses fish version without this command. Though `.` is 
deprecated on new versions it is still supported for backwards compatibility, 
thus may be used here.
==

tests/test_shells/input.fish
==================
8b341c6;ZyX;2014-01-23 16:14:32 +0400;Make XDG_CONFIG_HOME point to writeable location

==

tests/test_shells/test.sh
==================
12aa69a;ZyX;2014-01-23 15:58:52 +0400;Also output full.log
Hope it will give some hints about why fish tests fail on travis
==

tests/test_shells/test.sh
==================
04d2e43;ZyX-I;2014-01-23 03:51:42 -0800;Merge pull request #750 from EinfachToll/feature/539-position-segment
New (fixed) segment showing position of current view
==
==================
10cd7b7;EinfachToll;2014-01-23 09:23:53 +0100;More test cases for position segment

==

tests/test_segments.py
tests/vim.py
==================
6004403;ZyX;2014-01-23 07:45:35 +0400;Another attempt to fix fish on travis

==

tests/test_shells/postproc.py
==================
2f98276;ZyX;2014-01-23 07:36:54 +0400;Make postproc.py only leave fish prompt
Should fix fish tests
==

tests/test_shells/fish.ok
tests/test_shells/postproc.py
tests/test_shells/test.sh
==================
166f827;ZyX;2014-01-23 07:36:08 +0400;Improve test_shells/test.sh:
- Add argument that makes it run only one shell
- Make this argument also force skipping removal of tests/shell directory
- Make it copy logs to tests/shell before and after processing
==

tests/test_shells/test.sh
==================
0ffe3c9;ZyX-I;2014-01-22 19:08:00 -0800;Merge pull request #759 from fitztrev/syntastic-errors
Fix Syntastic deprecation warning
==
==================
cab3362;Trevor Fitzgerald;2014-01-22 15:35:15 -0500;Fix Syntastic deprecation warning
`hasErrorsOrWarningsToDisplay` has been deprecated in Syntastic.
See: https://github.com/scrooloose/syntastic/commit/d629be9

This fixes the warning that appears when opening a new file:
"syntastic: warning: function hasErrorsOrWarningsToDisplay() is
deprecated, please use !isEmpty() instead"

==

powerline/segments/plugin/syntastic.py
==================
11f86e7;ZyX;2014-01-22 08:33:43 +0400;Add fish tests

==

tests/install.sh
tests/test_shells/fish.ok
tests/test_shells/input.fish
tests/test_shells/test.sh
==================
ae53f99;ZyX-I;2014-01-21 20:18:05 -0800;Merge pull request #729 from bricewge/develop
Add Meslo fonts to the fontconfig file
==
==================
fee1b3b;bricewge;2014-01-21 21:25:29 +0100;Fix the identation of 10-powerline-symbols.conf

==

font/10-powerline-symbols.conf
==================
90132fe;EinfachToll;2014-01-21 15:48:05 +0100;Small fixes for new position segment
- use vim_funcs
- use a dictionary instead of a tuple for translation strings

==

powerline/segments/vim.py
tests/test_segments.py
tests/vim.py
==================
45e4650;EinfachToll;2014-01-21 15:40:05 +0100;Merge branch 'develop' into feature/539-position-segment

==
==================
461c4f4;ZyX;2014-01-19 17:51:48 +0400;Add support for number of jobs to fish bindings

==

powerline/bindings/fish/powerline.fish
==================
972bd45;ZyX;2013-11-04 23:07:49 +0400;Make fish bindings feature complete, add documentation
Added features:
- Updating TMUX_PWD_* when PWD variable changes
- Updating TMUX_COLUMNS_* when WINCH signal is received
==

docs/source/overview.rst
powerline/bindings/fish/powerline.fish
==================
38f2485;ZyX;2013-06-22 19:18:34 +0400;Add powerline/bindings/fish/powerline.fish

==

powerline/bindings/fish/powerline.fish
==================
5c700b8;ZyX-I;2014-01-19 05:31:49 -0800;Merge pull request #754 from ZyX-I/improve-bash-bindings
Improve bash bindings
==
==================
a590e10;ZyX;2014-01-19 17:26:31 +0400;Fix functional shell tests in travis
Hostname in travis contains random numbers meaning that it occasionally may 
contain a PID as well. Thus it must be replaced first.
==

tests/test_shells/postproc.py
==================
49d8376;ZyX;2014-01-19 16:27:12 +0400;Document problem found when exploring #749

==

docs/source/installation/troubleshooting-common.rst
==================
c6324af;ZyX;2014-01-19 16:19:23 +0400;Replace `jobs` with `jobs -p`
If some long shell code is run in the background it may be shown as more then 
one job:

    bash-4.2$ {
    > echo abc | while read line ; do
    > sleep 1s
    > sleep 1s
    > done
    > } &
    [1] 9401
    bash-4.2$ jobs
    [1]+  Running                 { echo abc | while read line; do
        sleep 1s; sleep 1s;
    done; } &

`jobs -p` print exactly one job in this case.
==

powerline/bindings/bash/powerline.sh
==================
1a841a4;ZyX;2014-01-19 16:15:40 +0400;Replace POWERLINE_OLD_PROMPT_COMMAND with the code used by [z][1]
Does not fix anything, but is three lines less and is probably the way other 
tools expect us to do.

[1]: https://github.com/rupa/z
==

powerline/bindings/bash/powerline.sh
==================
8af9981;Kim Silkebækken;2014-01-19 11:57:27 +0100;Merge branch 'remove-fontpatcher' into develop

==
==================
43e199b;Kim Silkebækken;2014-01-19 11:56:48 +0100;Remove fontpatcher and symbol font
The package has been moved to
https://github.com/Lokaltog/powerline-fontpatcher

==

font/fontpatcher-symbols.sfd
font/fontpatcher.py
==================
4a0b7e2;Kim Silkebækken;2014-01-19 11:20:23 +0100;Merge branch 'remove-packages' into develop

==
==================
9de9bc7;Kim Silkebækken;2014-01-19 11:20:15 +0100;Remove archlinux packages

==

packages/archlinux/python-powerline-git/.gitignore
packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python-powerline-git/fontpatcher.py.patch
packages/archlinux/python-powerline-git/powerline.install
packages/archlinux/python2-powerline-git/.gitignore
packages/archlinux/python2-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/fontpatcher.py.patch
packages/archlinux/python2-powerline-git/powerline.install
==================
7cf3171;ZyX-I;2014-01-17 14:13:49 -0800;Merge pull request #753 from ZyX-I/fix-functional-tests-diff-2
Try to workaround problems with last line in travis
==
==================
2b171cf;ZyX;2014-01-18 01:59:19 +0400;Try to workaround problems with last line in travis

==

tests/test_shells/bash.ok
tests/test_shells/input.bash
tests/test_shells/input.zsh
tests/test_shells/postproc.py
tests/test_shells/zsh.ok
==================
2a525ae;ZyX-I;2014-01-17 10:20:25 -0800;Merge pull request #667 from kovidgoyal/fix-git-branch-name
Fix git branch name sometimes getting stuck with inotify
==
==================
5c7e804;ZyX-I;2014-01-17 09:55:05 -0800;Merge pull request #707 from wsnyders/develop
Update dependanceies for Arch packages.
==
==================
1dbdc67;ZyX;2014-01-17 21:34:57 +0400;Merge branch 'fix-functional-tests-diff' into develop

==
==================
56ef798;ZyX;2014-01-17 21:34:18 +0400;On travis there are differences in CRs for some reason
This commit strips CRs from *.ok files and test output. Test failure used to be 
not recognized due to pipe: `cat -v` always succeeds meaning that `if ! diff 
… | cat -v` always succeeds too.
==

tests/test_shells/bash.ok
tests/test_shells/postproc.py
tests/test_shells/test.sh
tests/test_shells/zsh.ok
==================
0c0b428;ZyX-I;2014-01-17 09:16:40 -0800;Merge pull request #708 from ZyX-I/fix-finish_args-typo
Fix finish args typo
==
==================
b531ffa;ZyX-I;2014-01-17 08:56:20 -0800;Merge pull request #751 from mrrcollins/rc
A lowercase f for the unit caused the weather segment to silently fail. ...
==
==================
ac9703e;ZyX;2014-01-17 20:54:47 +0400;Also check for jobnum

==

tests/test_cmdline.py
==================
a71c49d;ZyX;2013-11-17 01:27:20 +0400;Add tests

==

tests/lib/__init__.py
tests/test_cmdline.py
==================
40fe3cf;Ryan Collins;2014-01-17 00:15:37 -0500;A lowercase f for the unit caused the weather segment to silently fail. Putting in a capital F works correctly

==

docs/source/configuration.rst
==================
7aa978f;EinfachToll;2014-01-15 10:32:04 +0100;New fixed segment showing position of current view
Solves #539
Fixed version of #540 and #579
Works now for split windows and wrapped lines.

==

powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/vim/solarizedlight.json
powerline/segments/vim.py
tests/test_segments.py
tests/vim.py
==================
31f8580;ZyX;2014-01-14 23:42:22 +0400;Merge branch 'kruton-develop' into develop
Fixes #748

==
==================
aa3e86b;ZyX;2014-01-14 23:38:34 +0400;Rewrite documentation string

==

powerline/segments/common.py
==================
c33d56e;Kenny Root;2014-01-10 13:00:25 -0800;Add arg to optionally suppress user segment
This adds the option to common.user to suppress display if the username
matches the given string in the new "hide_user" argument.

==

powerline/segments/common.py
tests/test_segments.py
==================
057ff37;ZyX-I;2014-01-13 12:32:11 -0800;Merge pull request #747 from ZyX-I/more-functional-tests
More functional tests
==
==================
2e71326;ZyX;2014-01-14 00:18:34 +0400;Always show hostname (travis is ssh), fix jobnum in zsh

==

powerline/bindings/zsh/powerline.zsh
tests/test_shells/bash.ok
tests/test_shells/input.bash
tests/test_shells/input.zsh
tests/test_shells/test.sh
tests/test_shells/zsh.ok
==================
0f0a5e9;ZyX;2014-01-13 22:37:33 +0400;Replace sed with python script
sed escaping is wrong: e.g. re.escape() will escape `+`, but with BRE escaped 
plus is quantifier
==

tests/test_shells/postproc.py
tests/test_shells/test.sh
tests/test_shells/zsh.ok
==================
03245f1;ZyX;2014-01-13 22:11:52 +0400;Also replace $USER with USER

==

tests/test_shells/bash.ok
tests/test_shells/test.sh
tests/test_shells/zsh.ok
==================
b169432;ZyX;2014-01-13 22:04:44 +0400;Add missing zsh.ok

==

tests/test_shells/zsh.ok
==================
d1793fa;ZyX;2014-01-13 21:48:09 +0400;Run apt-get with sudo and -qq like suggested in travis documentation
Documentation though suggests using before_install. Not sure why.
==

tests/install.sh
==================
b55c5da;ZyX;2014-01-13 19:48:12 +0400;Also install screen

==

tests/install.sh
==================
d9c62d4;ZyX;2014-01-13 19:47:58 +0400;Add zsh functional tests

==

tests/install.sh
tests/test_shells/input.zsh
tests/test_shells/test.sh
==================
6c27506;ZyX;2014-01-13 01:07:13 +0400;Move tests/test_shells/input.sh to tests/test_shells/input.bash

==

tests/test_shells/input.bash
tests/test_shells/input.sh
tests/test_shells/test.sh
==================
6996896;ZyX;2014-01-13 00:53:38 +0400;Made it use screen for testing

==

tests/test_shells/bash.ok
tests/test_shells/input.sh
tests/test_shells/screenrc
tests/test_shells/test.sh
==================
55957ec;ZyX;2014-01-12 23:45:17 +0400;Move shell testing to tests/test_shells/test.sh

==

tests/test.sh
tests/test_shells.sh
tests/test_shells/test.sh
==================
bb9034a;ZyX;2014-01-11 13:52:07 +0400;Replace zyx-desktop with HOSTNAME

==

tests/test_shells.sh
==================
ed99b09;ZyX;2014-01-11 13:36:02 +0400;Use get_output function

==

tests/test_shells.sh
==================
301dbf2;ZyX;2014-01-11 13:31:57 +0400;Add a few empty lines, rename bash directory to 3rd

==

tests/test_shells.sh
==================
f20792b;ZyX;2014-01-11 13:16:25 +0400;Add bash functional tests

==

tests/test.sh
tests/test_shells.sh
==================
fb00a95;ZyX;2014-01-11 12:50:50 +0400;Fix copy-paste typo in shell.py

==

powerline/shell.py
==================
bd4173e;ZyX;2014-01-11 12:43:13 +0400;Add jobnum segment to default_leftonly theme

==

powerline/config_files/themes/shell/default_leftonly.json
==================
73d7b0d;ZyX;2014-01-11 11:51:58 +0400;Add functional tests for plugin themes

==

tests/test_configuration.py
tests/vim.py
==================
e8b2054;ZyX;2014-01-11 11:51:41 +0400;Make nerdtree segment use bufvar_exists

==

powerline/bindings/vim/__init__.py
powerline/segments/plugin/nerdtree.py
==================
64a32a9;ZyX;2014-01-11 11:50:28 +0400;Add window_cached decorator for ctrlp segment

==

powerline/segments/plugin/ctrlp.py
==================
54e7fe9;Kenny Root;2014-01-10 14:13:25 -0800;Fix common.user test
The username was being cached from previous tests, so clear it before
running this test.

==

tests/test_segments.py
==================
0d64b5e;ZyX-I;2014-01-10 13:55:55 -0800;Merge pull request #745 from cyberdork33/patch-1
Update powerline.sh
==
==================
01f445b;cyberdork33;2014-01-10 15:25:20 -0600;Update powerline.sh
I think this was a typo. broke my system.
==

powerline/bindings/bash/powerline.sh
==================
1587f26;ZyX-I;2014-01-10 11:42:41 -0800;Merge pull request #744 from ZyX-I/fix-tests
Fix tests
==
==================
e152ecf;ZyX;2014-01-10 23:22:54 +0400;Add missing groups to solarizedlight

==

powerline/config_files/colorschemes/vim/solarizedlight.json
==================
4f80468;ZyX;2014-01-10 23:17:06 +0400;Fix tests broken due to jobnum introduction

==

tests/test_configuration.py
==================
4d408c7;ZyX-I;2014-01-10 11:00:58 -0800;Merge pull request #743 from ZyX-I/fix-742
Add Args.jobnum property
==
==================
e56bf36;ZyX;2014-01-10 23:01:32 +0400;Add Args.jobnum property
Fixes #742
==

powerline/bindings/zsh/__init__.py
==================
759bf04;ZyX-I;2014-01-10 09:55:11 -0800;Merge pull request #528 from phunehehe/feature/527-zsh-bash-relative-path
Feature/527 zsh bash relative path
==
==================
7b3e935;ZyX-I;2014-01-10 09:47:05 -0800;Merge pull request #694 from Apsu/patch-1
Fix weather geoip lookups
==
==================
483ed5d;ZyX-I;2014-01-10 09:38:12 -0800;Merge pull request #671 from jarnett/develop
workaround for _powerline_tmux_setenv() issue with bash-4.2.45
==
==================
0a0f971;ZyX-I;2014-01-10 09:36:43 -0800;Merge pull request #679 from pdf/feature/678-fix-infinite-recursion-in-powerline_old_prompt_command
Avoid infinite recursion in `POWERLINE_OLD_PROMPT_COMMAND`
==
==================
d5720bf;ZyX-I;2014-01-10 09:35:32 -0800;Merge pull request #682 from toresbe/patch-1
Make clearer the naming conflict in PyPI (closes #681)
==
==================
76027fb;ZyX-I;2014-01-10 09:30:35 -0800;Merge pull request #716 from metaphox/develop
add Solarized Light colour theme for Vim
==
==================
47fdff9;ZyX-I;2014-01-10 09:23:36 -0800;Merge pull request #715 from ZyX-I/no-run_once-watches
Reduce number of inotify watches
==
==================
a145b11;ZyX-I;2014-01-10 09:20:34 -0800;Merge pull request #697 from ZyX-I/zsh-bindings-small-update-1
A few fixes to zsh bindings
==
==================
a6af95a;ZyX-I;2014-01-10 09:19:01 -0800;Merge pull request #712 from ZyX-I/shell-jobs
Add jobnum segment
==
==================
84d2b46;ZyX-I;2014-01-10 09:17:17 -0800;Merge pull request #695 from ZyX-I/powerline-lint-fix
Fix powerline-lint tests
==
==================
67a809e;ZyX-I;2014-01-10 09:16:48 -0800;Merge pull request #722 from ZyX-I/raiagent-overlay
Remove Gentoo ebuild and reference raiagent overlay
==
==================
24d4d74;Brice Waegeneire;2013-12-12 20:32:06 +0100;Add Meslo fonts to the fontconfig file

==

font/10-powerline-symbols.conf
==================
c97bc82;Glandos;2013-12-01 12:35:12 +0100;Fix display for home directory

==

powerline/segments/common.py
==================
fb7eec2;Glandos;2013-12-01 12:11:53 +0100;Don't show '//' when using path separator
Currently, the cwd segment is showing //etc when we are in /etc and / when we are in the root file.
This small patch fix this
==

powerline/segments/common.py
==================
ccf070c;ZyX;2013-12-01 14:23:29 +0400;Remove Gentoo ebuild and reference raiagent overlay

==

docs/source/installation/linux.rst
packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
==================
4836cbb;Tao Wu;2013-11-21 16:03:58 +0100;Update solarizedlight.json
Update name to "Solarized Light".
==

powerline/config_files/colorschemes/vim/solarizedlight.json
==================
1e0f13a;Tao Wu;2013-11-21 14:23:14 +0100;add Solarized Light colour theme for Vim

==

powerline/config_files/colorschemes/vim/solarizedlight.json
==================
bb0d902;ZyX;2013-11-21 00:23:25 +0400;Make sure watcher is not used

==

tests/lib/config_mock.py
tests/test_config_reload.py
==================
95d13a3;ZyX;2013-11-21 00:18:34 +0400;Test that nothing is reloaded with run_once=True

==

tests/lib/config_mock.py
tests/test_config_reload.py
==================
6a4b8bc;ZyX;2013-11-20 23:51:26 +0400;Pass run_once to ConfigLoader, make it respect run_once
It only respects run_once by using DummyWatcher instead of a watcher doing 
something potentially useful

Ref #711
==

powerline/__init__.py
powerline/lib/config.py
==================
2ef0d44;ZyX;2013-11-19 01:01:49 +0400;Add jobnum segment
Replaces #596. Differences:
- Tests and metavar.
- Uses “jobnum” name in place of “jobs”.
- Does not use subshell for zsh. Also counts jobs correctly in zsh.
- Adds an option to force showing jobnum segment even if there are no jobs.
==

powerline/bindings/bash/powerline.sh
powerline/bindings/zsh/powerline.zsh
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/themes/shell/default.json
powerline/segments/shell.py
powerline/shell.py
tests/test_segments.py
==================
a06fe3a;ZyX;2013-11-17 16:40:15 +0400;Do not double pl.exception() call, record used pl in variable instead

==

powerline/__init__.py
==================
f0476f9;William Snyders;2013-11-15 11:55:55 -0800;Update dependanceies for Arch packages.

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
3746548;ZyX;2013-11-04 23:16:45 +0400;Do not mention zpython branch
It is not usable due to some bugs, not maintained and replaced by 
powerline-client
==

docs/source/overview.rst
==================
8d36f42;ZyX;2013-11-04 23:15:51 +0400;Set TMUX_PWD_* on startup
Ref #672
==

powerline/bindings/zsh/powerline.zsh
==================
9446ac9;ZyX;2013-11-03 02:15:24 +0400;Make sure flake8 does not show any errors in powerline/lint/**/*.py files

==

.local.vimrc
powerline/lint/__init__.py
powerline/lint/inspect.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/resolver.py
==================
b5f051f;ZyX;2013-11-03 00:54:32 +0400;Fix powerline-lint tests
Some notes on the commit:

1. As external_ip and email_imap_alert segments seem to be removed corresponding
   segment_data keys also were removed.
2. Various files that import vim module now have the usual workaround that sets
   vim local to dummy object on error.
3. Syntastic check was failing because it did not specify which highlighting
   groups it uses in documentation. I made it specify them and also moved format
   strings to keywords. Same for some other plugin-local themes.
4. powerline-lint script got --debug argument. Pretty useless currently though:
   it only makes it output traceback for ImportError when failing to import
   module to stderr.
5. Moved themes/vim/plugin/*.json to themes/vim/plugin_*.json.
6. Fixed powerline-lint that ignored problems from values.

==

powerline/config_files/config.json
powerline/config_files/themes/tmux/default.json
powerline/config_files/themes/vim/plugin/ctrlp.json
powerline/config_files/themes/vim/plugin/gundo-preview.json
powerline/config_files/themes/vim/plugin/gundo.json
powerline/config_files/themes/vim/plugin/nerdtree.json
powerline/config_files/themes/vim/plugin_ctrlp.json
powerline/config_files/themes/vim/plugin_gundo-preview.json
powerline/config_files/themes/vim/plugin_gundo.json
powerline/config_files/themes/vim/plugin_nerdtree.json
powerline/lint/__init__.py
powerline/matchers/plugin/ctrlp.py
powerline/segments/plugin/ctrlp.py
powerline/segments/plugin/nerdtree.py
powerline/segments/plugin/syntastic.py
powerline/segments/plugin/tagbar.py
scripts/powerline-lint
==================
c293b62;Evan Callicoat;2013-11-01 00:57:33 -0500;Fix weather geoip lookups
- _external_ip() isn't necessary with freegeoip.net as it does this for you when unspecified.
- region_name/country_name make Yahoo's weather API unhappy whereas region_code/country_code work for me (TX/US)
==

powerline/segments/common.py
==================
561b715;Tore Sinding Bekkedal;2013-10-16 01:42:07 +0200;Make clearer the naming conflict in PyPI (closes #681)

==

docs/source/overview.rst
==================
1d385f8;Peter Fern;2013-10-15 21:21:12 +1100;Avoid infinite recursion in `POWERLINE_OLD_PROMPT_COMMAND`
Fixes #678

==

powerline/bindings/bash/powerline.sh
==================
a810e37;Jesse;2013-10-05 03:31:34 -0400;workaround for _powerline_tmux_setenv() issue with bash-4.2.45

==

powerline/bindings/bash/powerline.sh
==================
7423b55;Kovid Goyal;2013-09-25 10:27:48 +0530;Fix git branch name sometimes getting stuck with inotify
If you try to checkout the already current branch in git, git creates
HEAD.lock and renames it to HEAD. This causes the inode of HEAD to
change and so the inotify file watcher stops tracking HEAD.

The fix is to re-create the inotify watch when the file attributes
change. This is a bit of a performance penalty as most of the time the
attribute changes are simple last modified time/size changes, but since
inotify provides no way to know specifically when the inode has changed,
this is the best we can do.

==

powerline/lib/file_watcher.py
powerline/lib/vcs/__init__.py
tests/test_lib.py
==================
db80fc9;Kim Silkebækken;2013-08-27 10:22:04 +0200;Merge branch 'fix/error-info-string-format' into develop

==
==================
4f1c26a;Wang Xuerui;2013-08-21 01:58:32 +0800;Make extra error info string
Fixes #645

==

powerline/lib/inotify.py
==================
c278c2d;Kim Silkebækken;2013-08-21 10:02:48 +0200;Merge branch 'fix/cs-syntax-error' into develop

==
==================
9314ed9;Kim Silkebækken;2013-08-21 10:02:26 +0200;Add missing comma in solarized colorscheme

==

powerline/config_files/colorschemes/vim/solarized.json
==================
ebc2d4f;Kim Silkebækken;2013-08-20 17:59:49 +0200;Merge branch 'update-readme' into develop

==
==================
f12bb70;Kim Silkebækken;2013-08-20 17:59:41 +0200;Add links to Google Groups

==

README.rst
==================
fbe6a50;Kim Silkebækken;2013-08-20 17:40:53 +0200;Merge branch 'fix/remove-inet-segments' into develop

==
==================
6e8318a;Kim Silkebækken;2013-08-20 17:40:26 +0200;Remove long-running segments from tmux
The segments will be re-added when the daemon is merged and the docs
are updated.

==

powerline/config_files/themes/tmux/default.json
==================
44a37b0;Kim Silkebækken;2013-08-20 17:29:02 +0200;Merge branch 'feature/plugin-statuslines' into develop
Refs #3, #524, #470
Closes #377
Closes #451

==
==================
d0429ac;Kim Silkebækken;2013-08-20 17:26:36 +0200;Add Tagbar current tag segment

==

powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/themes/vim/default.json
powerline/segments/plugin/tagbar.py
==================
0fc79d2;Kim Silkebækken;2013-08-20 17:14:24 +0200;Center align CtrlP current segment

==

powerline/segments/plugin/ctrlp.py
==================
3d3450d;Kim Silkebækken;2013-08-20 17:07:18 +0200;Add Gundo statuslines

==

powerline/config_files/config.json
powerline/config_files/themes/vim/plugin/gundo-preview.json
powerline/config_files/themes/vim/plugin/gundo.json
powerline/matchers/plugin/gundo.py
==================
1fe98e1;Kim Silkebækken;2013-08-20 17:01:08 +0200;Update CtrlP config to match segment changes

==

powerline/config_files/themes/vim/plugin/ctrlp.json
==================
8a0e1f2;Kim Silkebækken;2013-08-20 16:51:06 +0200;Merge remote-tracking branch 'aschrab/trailing_whitespace' into develop

==
==================
7ec4cb9;Kim Silkebækken;2013-08-20 16:50:48 +0200;Merge remote-tracking branch 'aschrab/gitfile' into develop

==
==================
fabc45f;Kim Silkebækken;2013-08-20 16:50:27 +0200;Merge remote-tracking branch 'aschrab/no_python_warning' into develop

==
==================
74d4ee9;Kim Silkebækken;2013-08-20 16:48:49 +0200;Update tests
Unit tests are not run on external segments. When external segments are
moved out of the core repo the extra test code won't be needed.

==

tests/test_configuration.py
tests/vim.py
==================
e19a63a;Kim Silkebækken;2013-08-20 16:48:36 +0200;Update plugin segments to use bindings

==

powerline/matchers/plugin/ctrlp.py
powerline/segments/plugin/ctrlp.py
powerline/segments/plugin/nerdtree.py
==================
6baf1f8;Kim Silkebækken;2013-08-20 16:05:56 +0200;Add Syntastic statusline
Refs #376, #639.
Closes #451.

==

powerline/config_files/themes/vim/default.json
powerline/segments/plugin/syntastic.py
==================
7aee4c1;Kim Silkebækken;2013-08-20 16:05:10 +0200;Align default vim colorscheme attributes

==

powerline/config_files/colorschemes/vim/default.json
==================
2a127cd;Kim Silkebækken;2013-08-20 16:04:06 +0200;Add error/warning HL groups for vim

==

powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
==================
ed28bb5;Aaron Schrab;2013-08-20 09:35:42 -0400;ignore trailing whitespace errors in .rst files
Use a .gitattributes file to tell git to not highlight trailing
whitespace as an error in .rst files when showing diffs.  A trailing
space is used on many lines in those files to indicate that the
paragraph continues onto the next line.

==

.gitattributes
==================
0ffe6da;Aaron Schrab;2013-08-20 00:06:31 -0400;Option to suppress error in python-less vim
If the g:powerline_no_python_error variable is set don't issue an error
message even if vim doesn't have the required Python support.  This
allows a common set of configuration files to be used across systems
where some of the copies of vim don't meet the requirements.

==

docs/source/configuration.rst
powerline/bindings/vim/plugin/powerline.vim
==================
0b5b817;Kim Silkebækken;2013-08-20 15:29:09 +0200;Add Control-P statuslines
This hacks around the way CtrlP handles statuslines. Powerline will
always override the statusline, but CtrlP doesn't make its details
available as buffer variables so separate functions assign the details
to buffer variables each statusline redraw.

Currently this statusline only uses a couple of highlight groups,
colorschemes should add the HL groups to make this prettier.

==

powerline/config_files/config.json
powerline/config_files/themes/vim/plugin/ctrlp.json
powerline/matchers/plugin/ctrlp.py
powerline/segments/plugin/ctrlp.py
==================
2e38ab5;Kim Silkebækken;2013-08-20 13:41:53 +0200;Add NERDTree statusline

==

powerline/config_files/config.json
powerline/config_files/themes/vim/plugin/nerdtree.json
powerline/matchers/plugin/nerdtree.py
powerline/segments/plugin/nerdtree.py
==================
42ea2bf;Kim Silkebækken;2013-08-20 13:40:36 +0200;Create shared namespaces for powerline.{matchers,segments}.plugin

==

powerline/matchers/__init__.py
powerline/matchers/plugin/__init__.py
powerline/segments/__init__.py
powerline/segments/plugin/__init__.py
==================
d67e929;Kim Silkebækken;2013-08-20 13:30:22 +0200;Merge branch 'fix-621' into develop

==
==================
f94ed68;Kovid Goyal;2013-08-07 16:58:27 +0530;Fix #621

==

powerline/lib/config.py
==================
db27dd3;Kim Silkebækken;2013-08-20 13:26:21 +0200;Merge remote-tracking branch 'dbrodie/fix_625' into develop

==
==================
9c566e4;Kim Silkebækken;2013-08-20 13:24:13 +0200;Merge remote-tracking branch 'dbrodie/unicode_path_fix' into develop

==
==================
5cc6555;Kim Silkebækken;2013-08-20 13:21:24 +0200;Merge remote-tracking branch 'kovidgoyal/fix-638' into develop

==
==================
20ad100;Kim Silkebækken;2013-08-20 13:08:50 +0200;Merge remote-tracking branch 'aschrab/include_modes' into develop

==
==================
5330c48;Kim Silkebækken;2013-08-20 13:08:08 +0200;Merge branch 'fix-setup-unicode-error' into develop

==
==================
f107494;Kim Silkebækken;2013-08-20 13:07:56 +0200;Make author name ASCII

==

setup.py
==================
28c1c0d;Kovid Goyal;2013-08-20 09:28:11 +0530;More informative error message. Fixes #638

==

powerline/lib/inotify.py
==================
9aee39e;Aaron Schrab;2013-08-16 21:52:28 -0400;Handle gitfiles when retrieving branch name
Move code to parse a .git file from the do_status method to a new method
shared with get_branch_name so that branch name can be retreived from
repositories which use a .git file.

Closes #634.

==

powerline/lib/vcs/git.py
==================
51a5b43;Aaron Schrab;2013-04-08 13:51:24 -0400;Fix handling of segment include_modes
Segments should only be included if rules for both inclusion and
exclusion are satisfied, satisfying one or the other is not sufficient.

If the include_modes list for a segment is missing or empty consider all
modes to be included so that users do not need to supply an exhaustive
list, since there isn't much point in actually wanting an empty include
list.  Actually check for mode name in the list rather than mistakenly
checking for the segment object.

==

powerline/renderer.py
==================
e58cb30;Daniel Brodie;2013-08-13 11:05:04 +0300;Fix UnicodeDecodeError when dir_limit_depth and dir_shorten_len are set

==

powerline/segments/common.py
==================
f15bb19;Daniel Brodie;2013-08-08 19:53:34 +0300;Don't let the vcs detection cross mount point boundaries Fixes issue 625

==

powerline/lib/vcs/__init__.py
==================
70e279a;Kim Silkebækken;2013-08-06 11:09:11 +0200;Merge branch 'feature/visual-range-segment' into develop

==
==================
ab61401;Kim Silkebækken;2013-08-06 10:34:14 +0200;Add visual_range segment
Returns a value similar to `showcmd`.

TODO: Make proper test case.

==

powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/themes/vim/default.json
powerline/segments/vim.py
tests/test_segments.py
tests/vim.py
==================
aa05f22;Kim Silkebækken;2013-08-05 10:56:27 +0200;Update README

==

README.rst
==================
0b3e354;Kim Silkebækken;2013-07-31 16:13:05 +0200;Merge branch 'fix-archlinux-aur-issues' into develop

==
==================
ad4a1b5;Kim Silkebækken;2013-07-31 16:11:20 +0200;Fix Arch Linux AUR package upload issues
Some workarounds have been added so that AUR correctly parses the
package name and dependencies when the package is uploaded.

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
225ac48;Kim Silkebækken;2013-07-31 15:28:54 +0200;Merge remote-tracking branch 'tmurph/feature/504-battery-segment' into develop
Conflicts:
	powerline/config_files/colorschemes/tmux/default.json

==
==================
432fb81;Kim Silkebækken;2013-07-31 15:26:15 +0200;Merge branch 'improve-archlinux-packages' into develop

==
==================
99e0cf5;Kim Silkebækken;2013-07-31 15:24:40 +0200;Improve Arch Linux packages
Use simplified syntax and messages, fix package names, ref
HalosGhost/patch-{2,3}.

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
0ff02f7;Kim Silkebækken;2013-07-31 14:37:10 +0200;Merge remote-tracking branch 'mmlb/add-fontpatcher-to-PKGBUILD' into develop

==
==================
35364ec;Kim Silkebækken;2013-07-31 14:34:59 +0200;Merge remote-tracking branch 'HalosGhost/patch-3' into develop

==
==================
4ea9dcb;Kim Silkebækken;2013-07-31 14:34:33 +0200;Merge remote-tracking branch 'HalosGhost/patch-2' into develop

==
==================
5c88c0a;Kim Silkebækken;2013-07-31 14:30:31 +0200;Merge remote-tracking branch 'doitian/tmux-activity-bell-fg' into develop

==
==================
b4ee360;Kim Silkebækken;2013-07-31 14:28:03 +0200;Merge remote-tracking branch 'kovidgoyal/fix-578' into develop

==
==================
69db1a9;Kim Silkebækken;2013-07-31 08:11:55 +0200;Merge remote-tracking branch 'kovidgoyal/fix-latest-psutil-network' into develop

==
==================
9fd64f2;Kim Silkebækken;2013-07-31 08:03:45 +0200;Merge remote-tracking branch 'kovidgoyal/fix-unicode-in-setup' into develop

==
==================
d1cdf86;Kovid Goyal;2013-07-20 18:44:18 +0530;Fix #604

==

setup.py
==================
d66806e;Kovid Goyal;2013-07-14 15:04:34 +0530;Fix latest psutil breaking network segment

==

powerline/segments/common.py
==================
24cda1d;Trevor Murphy;2013-05-08 23:28:24 -0400;Add a battery info segment.
Default colors range from red (full battery) to white (no battery) but can be changed via the
`battery' and `battery_gradient' settings.

Default presentation is a formatted percentage string (with keyword `batt').  The `gamify' setting
changes this to a sequence of video game hearts.

Number of steps from 100% to 0% / number of video game heart icons is controlled by the `steps'
setting (default 5).

==

powerline/config_files/colors.json
powerline/config_files/colorschemes/tmux/default.json
powerline/segments/common.py
tests/test_segments.py
==================
82842e0;Ian Yang;2013-07-09 09:32:01 +0800;Set different window name foreground based on activity and bell status.

==

powerline/bindings/tmux/powerline.conf
==================
52c6bff;Kovid Goyal;2013-07-03 09:40:05 +0530;Dont log inotify missing error when using branch coloring
The error message about inotify being missing when branch coloring is
enabled was being logged for every directory and for every invocation
of powerline in a shell, without powerline-daemon. Dont log it, since
the log is printed to stderr when using powerline in a shell without
powerline-daemon. Also improve the error message on OS X. Fixes #578

==

powerline/lib/inotify.py
powerline/lib/tree_watcher.py
==================
2be3059;Manuel Mendez;2013-07-02 08:49:09 -0400;arch: update pkgrel to 2.

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
4083cf4;Manuel Mendez;2013-07-02 08:38:04 -0400;arch: break package() into separate packages.

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
01560ae;Manuel Mendez;2013-06-28 22:53:02 -0400;arch: add fontpatcher to archlinux/python-powerline.

==

packages/archlinux/python-powerline-git/.gitignore
packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python-powerline-git/fontpatcher.py.patch
==================
ffb29d6;Manuel Mendez;2013-06-28 22:49:22 -0400;arch: add fontpatcher to archlinux/python2-powerline.

==

packages/archlinux/python2-powerline-git/.gitignore
packages/archlinux/python2-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/fontpatcher.py.patch
==================
79e7640;Manuel Mendez;2013-06-28 23:10:36 -0400;arch: add provides=('powerline') to PKGBUILDs.

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
b0c5c05;Sam Stuewe;2013-06-28 10:48:01 -0500;Clean up package function for python3
``|| return 1`` is very old syntax and is no longer needed. And, the ``install`` command can handle directory creation and file installation in the same command which cuts a great deal of unnecessary commands out.

Also, remember, ``msg2`` in the package function will be printed during the making of the package, not during the installation. Thus, instead of ``msg2`` (as they really serve only as documentation), comments should be preferred.
==

packages/archlinux/python-powerline-git/PKGBUILD
==================
1970d07;Sam Stuewe;2013-06-28 10:43:12 -0500;Clean up package function for python2
The "|| return 1" is very old syntax and is no longer needed. And, the ``install`` command can handle directory creation and file installation in the same command which cuts a great deal of unnecessary commands out.

Also, remember, msg2s in the package function will be printed during the making of the package, not during the installation. Thus, instead of msg2s (as this really would serve only as documentation), comments should be preferred.
==

packages/archlinux/python2-powerline-git/PKGBUILD
==================
c1ae7f3;Kim Silkebækken;2013-06-28 14:26:33 +0200;Merge remote-tracking branch 'zyx-i/fix-516' into develop

==
==================
67dff29;Kim Silkebækken;2013-06-28 14:15:07 +0200;Merge branch 'feature/update-archlinux-packages' into develop

==
==================
8d9fa13;Kim Silkebækken;2013-06-28 14:13:57 +0200;Update Arch Linux packages to use updated VCS syntax
Closes #479

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
4ee5072;Kim Silkebækken;2013-06-28 13:55:37 +0200;Merge branch 'fix/docs-fontpatcher-path' into develop

==
==================
17435ec;mwcz;2013-06-10 15:33:27 -0400;Fix documented path to fontpatcher.py

==

docs/source/fontpatching.rst
==================
5dd095a;Kim Silkebækken;2013-06-28 13:54:03 +0200;Merge remote-tracking branch 'michaelbeaumont/fix/issue-543' into develop

==
==================
f00f1ac;Kim Silkebækken;2013-06-28 13:50:41 +0200;Merge branch 'feature/git-improve-detached-head' into develop

==
==================
72b082a;Jack Zhou;2013-06-18 16:46:46 -0700;Change [DETACHED HEAD] message to a short hash of the detached head.

==

powerline/lib/vcs/git.py
tests/test_lib.py
==================
afe415a;Kim Silkebækken;2013-06-28 13:47:25 +0200;Merge remote-tracking branch 'kovidgoyal/fix-482' into develop
Conflicts:
	powerline/lib/vcs/git.py

==
==================
fc6d852;Kim Silkebækken;2013-06-28 13:37:50 +0200;Merge remote-tracking branch 'zyx-i/fix-567' into develop

==
==================
bb6c959;Kim Silkebækken;2013-06-28 13:36:38 +0200;Merge remote-tracking branch 'zyx-i/powerline-list-expanduser' into develop

==
==================
13e0c89;Kim Silkebækken;2013-06-28 13:36:11 +0200;Merge remote-tracking branch 'zyx-i/fix-545' into develop

==
==================
3cf04f3;ZyX;2013-06-27 19:24:28 +0400;Support low values of line2byte
Fixes #567
==

powerline/segments/vim.py
==================
5ccf8d2;ZyX;2013-06-22 20:30:53 +0400;Support ~/ directories in powerline-lint

==

powerline/lint/__init__.py
==================
a85d901;ZyX;2013-06-22 19:32:56 +0400;In place of failure create new window ID in case of duplicate ID
Fixes #545
Fixes #537
==

powerline/vim.py
==================
987376a;ZyX;2013-06-22 19:14:07 +0400;Fix tests

==

tests/vim.py
==================
79b842e;ZyX;2013-06-22 19:12:57 +0400;Remove uneeded code

==

powerline/bindings/vim/__init__.py
==================
31c8648;ZyX;2013-06-22 19:00:56 +0400;Disable vim.bindeval support for vim_getwar for old vim versions

==

powerline/bindings/vim/__init__.py
==================
a03035d;Kovid Goyal;2013-06-14 13:45:13 +0530;Remove obsolete comment

==

powerline/lib/vcs/__init__.py
==================
14bec21;Kovid Goyal;2013-06-14 13:38:24 +0530;Various performance improvements for the vcs backend
1) Fix a bug where watching a directory would also report the directory
as changed if any files inside it were changed. This would causes
excessive polling by the branch segment

2) Fix a bug where the watch for the repo dir in the branch segment
was being continually recreated, again causing excessive polling. This
was particularly noticeable with the patch to fix fugitive file status
updates.

3) Improve the performance of branch coloring for git repos by ignoring
change events for the index.lock file. This file is created/deleted
every time git access the index and would cause the entire working tree
status to be re-queried every time.

==

powerline/lib/file_watcher.py
powerline/lib/tree_watcher.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/git.py
==================
8de2a9a;michaelbeaumont;2013-06-12 11:09:50 +0200;Fix infinite add_watches loop with symbolic links
Added a check to ensure that add_watches doesn't run on the same folder over and over again. This occurs at least when circular symbolic links are present.

Fix #543

==

powerline/lib/tree_watcher.py
==================
2758c34;Kim Silkebækken;2013-06-10 11:53:40 +0200;Revert "Fix committing with fugitive => stuck file status"
This reverts commit 0435d44984d06f4fada20e3d6df9b5bd2f601f16.

The commit introduces a huge performance penalty and is removed for now.

==

powerline/lib/vcs/git.py
==================
441f174;Hoang Xuan Phu;2013-05-30 11:12:24 +0700;detect script directory to make bash and zsh usable without having `powerline` in `$PATH`

==

powerline/bindings/bash/powerline.sh
powerline/bindings/zsh/powerline.zsh
==================
540b076;Kim Silkebækken;2013-06-02 15:43:26 +0200;Merge remote-tracking branch 'kovidgoyal/fix-482' into develop

==
==================
0435d44;Kovid Goyal;2013-05-30 07:29:04 +0530;Fix committing with fugitive => stuck file status
Fixes #482 (I hope)

==

powerline/lib/vcs/git.py
==================
669327d;Kim Silkebækken;2013-05-27 13:40:34 +0200;Merge remote-tracking branch 'kovidgoyal/fix-417' into develop

==
==================
291832d;Kim Silkebækken;2013-05-27 13:40:27 +0200;Merge remote-tracking branch 'zyx-i/auto-use-powerline-client' into develop

==
==================
baa4447;ZyX;2013-05-24 07:21:40 +0400;Add note about POWERLINE_COMMAND to documentation

==

docs/source/configuration.rst
==================
374da15;ZyX;2013-05-24 07:18:03 +0400;Use eval in tmux/powerline.conf
fish does not support variables used as commands
==

powerline/bindings/tmux/powerline.conf
==================
884a8b0;ZyX;2013-05-24 06:25:48 +0400;Use powerline-client if possible

==

powerline/bindings/bash/powerline.sh
powerline/bindings/tmux/powerline.conf
powerline/bindings/zsh/powerline.zsh
==================
5bb32fa;ZyX;2013-05-23 19:03:40 +0400;Use fallback logger if normal one is not available

==

powerline/__init__.py
==================
d882d31;ZyX;2013-05-01 21:18:08 +0400;Fix Powerline.exception

==

powerline/__init__.py
==================
1977a01;ZyX;2013-05-01 20:31:04 +0400;Remove cache before running self.exception, not after

==

powerline/lib/config.py
==================
82e2ea1;ZyX;2013-04-23 19:29:31 +0400;Replace self.pl.exception with self.exception
New function is checking for self.pl being set before using logger and also
removes the need of specifying explicit prefix="powerline".

Conflicts:
	powerline/__init__.py

==

powerline/__init__.py
==================
201175d;ZyX;2013-04-10 20:04:22 +0400;Pop path from self.loaded on exception

==

powerline/lib/config.py
==================
f389c43;ZyX;2013-04-10 18:09:34 +0400;Use `try/except KeyError` in place of `if in dict/else`

==

powerline/segments/common.py
==================
716f761;ZyX;2013-04-10 08:52:33 +0400;Return exception string in place of throwing an exception
Big bunch of `AttributeError`s when renderer failed to be created that renders
vim unusable in case of some of the errors (e.g. invalid configuration) is
annoying.

Conflicts:
	powerline/__init__.py

==

powerline/__init__.py
==================
9080a34;ZyX;2013-05-23 18:22:49 +0400;Fix problems with merging vim.Dictionary
Also add tests

Fixes #516

==

.gitignore
powerline/bindings/vim/__init__.py
tests/test.sh
tests/test_local_overrides.vim
tests/test_plugin_file.vim
tests/vim.py
==================
75bf6ac;Kovid Goyal;2013-05-23 10:42:51 +0530;Fix #417

==

powerline/segments/common.py
==================
23a59ba;Kim Silkebækken;2013-05-22 13:58:26 +0200;Merge remote-tracking branch 'zyx-i/fix-511' into develop

==
==================
795b987;ZyX;2013-05-22 00:09:58 +0400;Add missing import
Also add tests

Fixes #511

==

powerline/bindings/vim/plugin/powerline.vim
tests/test.sh
tests/test_plugin_file.vim
==================
1581d9b;Kim Silkebækken;2013-05-21 10:12:50 +0200;Merge remote-tracking branch 'jacobwalker0814/feature/477-environment-segment' into develop

==
==================
4037c3b;Kim Silkebækken;2013-05-21 10:11:49 +0200;Merge remote-tracking branch 'inducer/patch-1' into develop

==
==================
5710b7b;Kim Silkebækken;2013-05-21 10:10:11 +0200;Merge remote-tracking branch 'zyx-i/less-viml' into develop

==
==================
516642c;Kim Silkebækken;2013-05-21 10:08:46 +0200;Merge branch 'fix-git-errors' into develop

==
==================
bb4bc52;Kovid Goyal;2013-05-14 21:43:33 +0530;Fix path issue

==

powerline/lib/vcs/git.py
==================
79e44dd;ZyX;2013-05-19 13:28:29 +0400;Check self.theme_option before using
Fixes #493
==

powerline/shell.py
==================
ea3c939;ZyX;2013-05-11 13:13:31 +0400;Fix tests on python3

==

powerline/bindings/vim/__init__.py
==================
5c2c47a;ZyX;2013-05-11 13:13:31 +0400;Make .shutdown work if renderer was not created
Fixes #486

==

powerline/__init__.py
==================
962a1b6;ZyX;2013-05-19 13:17:30 +0400;Fix tests

==

tests/test_configuration.py
tests/vim.py
==================
ad35b48;ZyX;2013-05-19 13:06:57 +0400;Add VimEnviron object

==

powerline/bindings/vim/__init__.py
powerline/renderers/vim.py
==================
dfaf8c3;ZyX;2013-05-19 12:57:33 +0400;Fix messages

==

tests/test_configuration.py
==================
07a130a;ZyX;2013-05-19 12:56:30 +0400;Use vim.vars and *.options if possible

==

powerline/bindings/vim/__init__.py
powerline/matchers/vim.py
powerline/segments/vim.py
powerline/vim.py
==================
f10729f;ZyX;2013-05-19 12:14:06 +0400;Add some new features to tests/vim.py

==

tests/vim.py
==================
ebd122d;ZyX;2013-05-17 08:51:33 +0400;Unfinished attempt to adapt tests to new code

==

tests/test_configuration.py
tests/vim.py
==================
9060e2b;ZyX;2013-05-16 07:04:14 +0400;Fix non-bindeval fallback

==

powerline/vim.py
==================
658232a;ZyX;2013-05-15 00:33:13 +0400;Update documentation

==

docs/source/overview.rst
==================
35e723e;ZyX;2013-05-15 00:15:02 +0400;Move code to powerline.vim.setup

==

powerline/bindings/vim/plugin/powerline.vim
powerline/vim.py
==================
0823f29;ZyX;2013-05-15 00:02:11 +0400;Remove unused purgeonevents_reg and launchevent

==

powerline/bindings/vim/plugin/powerline.vim
powerline/segments/vim.py
==================
9f20fb1;ZyX;2013-05-14 09:01:04 +0400;Move some functions from VimL to python code
Should be faster with new interfaces, but that is not the case

Should remove zero that can be viewed temporary in place of statusline in new 
windows

Target: ressurect setup function like source_plugin (but in place of sourcing 
something code is moved to python) to make it possible to do the following 
sequence:

1. Install powerline via pip
2. Add a line to the vimrc like

        py from powerline.vim import setup as setup_powerline; setup_powerline(); del setup_powerline

3. See new fancy statusline

Currently there are no convenient options to use powerline installed by pip in 
vim. powerline/bindings/vim/plugin/powerline.vim will do what it does: check for 
appropriate python versions available, fix sys.path and so on, but it won’t 
create autocommands, set options or define PowerlinePyeval function.

Note: may be rebased on top of the develop.
==

powerline/bindings/vim/plugin/powerline.vim
powerline/renderers/vim.py
powerline/vim.py
==================
e3ed3ab;Kim Silkebækken;2013-05-15 14:36:48 +0200;Merge branch 'fix-git-errors' into develop

==
==================
459370d;Kovid Goyal;2013-05-14 14:42:51 +0530;Fix #489

==

powerline/lib/vcs/__init__.py
powerline/lib/vcs/git.py
==================
235d6d3;Kovid Goyal;2013-05-14 14:33:17 +0530;Fix #494

==

powerline/lib/vcs/__init__.py
==================
4c4b7a2;Andreas Klöckner;2013-05-13 03:56:55 -0300;Make docs match actual default.

==

powerline/segments/common.py
==================
72ea673;Kim Silkebækken;2013-05-06 17:20:05 +0200;Merge remote-tracking branch 'zyx-i/zsh-emulate' into develop

==
==================
f83ca08;ZyX;2013-05-06 19:13:31 +0400;Fix typo in scripts/powerline

==

scripts/powerline
==================
ee48836;ZyX;2013-05-02 12:59:50 +0400;Always return true in install.sh

==

tests/install.sh
==================
f3d7a63;ZyX;2013-05-02 01:23:04 +0400;decode takes no keyword arguments in python-2.6

==

powerline/bindings/zsh/__init__.py
==================
ba33c32;ZyX;2013-05-01 23:56:49 +0400;Add __contains__ method
Fixes #471
==

powerline/bindings/zsh/__init__.py
==================
98b7ed2;ZyX;2013-05-01 23:39:19 +0400;Reset emulate call:
- only emulate -L causes options to be restore after function call
- using setopt outside of functions does not reintroduce #342
==

powerline/bindings/zsh/powerline.zsh
==================
4d5d92d;Kim Silkebækken;2013-05-06 15:37:44 +0200;Merge remote-tracking branch 'zyx-i/powerline-daemon' into develop

==
==================
1527da1;Kim Silkebækken;2013-05-06 15:33:08 +0200;Merge remote-tracking branch 'kovidgoyal/vcs' into develop

==
==================
cdbe85b;Kovid Goyal;2013-05-04 09:43:17 +0530;Add a debug() function to allow command line debugging of the vcs code

==

powerline/lib/vcs/__init__.py
==================
4178334;Kovid Goyal;2013-05-04 08:21:28 +0530;Turn off status colors by default in vim as well

==

powerline/segments/vim.py
==================
af01812;Kovid Goyal;2013-05-03 10:50:57 +0530;Forgot to move the import to module level

==

powerline/segments/common.py
==================
7b495af;Kovid Goyal;2013-05-03 10:34:50 +0530;Fix tests failing if inotify not available

==

powerline/segments/vim.py
tests/test_segments.py
==================
ed65d34;Jacob Walker;2013-05-02 09:35:13 -0500;Segment to Print Environment Variables
 - Added segment function to powerline.segments.common.
 - Added test to check return values.
 - Added default colorschemes for everything but iPython.

Ref #477

==

powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/wm/default.json
powerline/segments/common.py
tests/test_segments.py
==================
495f87a;ZyX;2013-05-02 16:06:52 +0400;Remove debugging lines

==

powerline/renderers/tmux.py
==================
467bc53;ZyX;2013-05-02 16:01:44 +0400;Also fix bash tests

==

tests/test_configuration.py
==================
b78a8ce;ZyX;2013-05-02 15:47:05 +0400;Fix tmux tests

==

tests/lib/__init__.py
==================
26ad068;ZyX;2013-05-02 15:19:56 +0400;Fix tmux cwd segment
Fixes #467

Still needs colors for cwd:current_folder, cwd and cwd:divider
==

powerline/bindings/bash/powerline.sh
powerline/bindings/tmux/powerline.conf
powerline/bindings/zsh/powerline.zsh
powerline/lib/__init__.py
powerline/renderers/tmux.py
powerline/shell.py
scripts/powerline
==================
a202072;ZyX;2013-05-01 20:19:36 +0400;Use deepcopy in powerline.lib.config

==

powerline/lib/config.py
==================
4c426df;ZyX;2013-05-02 14:13:43 +0400;Move --config and --theme_option processing to finish_args

==

powerline/shell.py
scripts/powerline
==================
ad55daf;Kovid Goyal;2013-05-02 11:13:54 +0530;Make vcs segments *much* faster
Do not call vcs status unless the relevant files have changed.
Uses inotify, if available, otherwise falls back to stat() based
monitoring. Fixes #396

==

powerline/lib/file_watcher.py
powerline/lib/inotify.py
powerline/lib/tree_watcher.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/segments/common.py
powerline/segments/vim.py
tests/test_lib.py
tests/test_segments.py
==================
7ccab8e;Kim Silkebækken;2013-04-21 21:28:50 +0200;Merge remote-tracking branch 'zyx-i/readd-pl-argument' into develop

==
==================
6ecba94;ZyX;2013-04-21 00:38:26 +0400;Added missing pl argument
It is a problem with git automatic merging.
==

powerline/segment.py
powerline/theme.py
==================
18a05b4;Kim Silkebækken;2013-04-20 17:00:52 +0200;Merge remote-tracking branch 'zyx-i/record-last_exit_code' into develop

==
==================
51d64b7;Kim Silkebækken;2013-04-20 16:58:07 +0200;Merge remote-tracking branch 'zyx-i/improved-generate_gradients' into develop

==
==================
02eee6f;Kim Silkebækken;2013-04-20 16:57:37 +0200;Merge remote-tracking branch 'zyx-i/virtcol-current-gradient' into develop
Conflicts:
	tests/vim.py

==
==================
badc2cf;Kim Silkebækken;2013-04-20 16:56:43 +0200;Merge remote-tracking branch 'zyx-i/doc-lint' into develop

==
==================
1df447e;ZyX;2013-04-18 07:40:31 +0400;Record last exit code before running anything
Otherwise powerline receieves value from the previous command in 
_powerline_prompt function.
==

powerline/bindings/bash/powerline.sh
==================
2a6a4a0;ZyX;2013-04-16 07:58:24 +0400;Replace {path} with {repository_root}
Closes #429
==

docs/source/overview.rst
==================
18579d7;ZyX;2013-04-14 13:23:25 +0400;Fix TypeError seen in older vim versions

==

powerline/segments/vim.py
==================
bd0546d;ZyX;2013-04-13 19:28:34 +0400;Add virtcol_current textwidth-based gradient

==

powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/segments/vim.py
tests/test_segments.py
==================
cce79fd;ZyX;2013-04-13 19:28:19 +0400;Add support for getbufvar('%') and &textwidth option to vim emulation

==

tests/vim.py
==================
1ffa8a4;ZyX;2013-04-13 19:16:35 +0400;Add GREEN_Orange_red gradient for solarized

==

powerline/config_files/colors.json
==================
a5210d8;ZyX;2013-04-13 18:50:32 +0400;Add dark_GREEN_Orange_red gradient
Generated with

    ./tools/generate_gradients.py 22 58 94 52 --weights '60 15 10 2'
. For use in virtcol_current.

==

powerline/config_files/colors.json
==================
2d036c0;ZyX;2013-04-13 19:21:11 +0400;Fix indentation of dictionaries

==

tests/vim.py
==================
b883ac6;ZyX;2013-04-13 18:51:49 +0400;Use same modeline in scripts/* as in other files

==

scripts/powerline
scripts/powerline-lint
==================
9e518ab;ZyX;2013-04-13 18:48:07 +0400;Improve generate_gradients tool
Changes:

- Port argument parsing to argparse
- Add weights support
- Add ability to specify cterm palette
- Purge out first 16 colors from color choosing by default
- Improve different scales and different preview length support

==

tools/generate_gradients.py
==================
a4c59de;ZyX;2013-04-13 15:44:08 +0400;Make tests more verbose and catch first KeyboardInterrupt

==

tests/test.sh
==================
2562736;ZyX;2013-04-13 15:16:45 +0400;Do not use second argument to itertools.count in other place

==

powerline/lint/inspect.py
==================
4449489;ZyX;2013-04-13 15:08:27 +0400;Do not use second argument to itertools.count

==

powerline/lint/inspect.py
powerline/segments/vim.py
==================
5e93d20;ZyX;2013-04-13 15:05:39 +0400;Do not sort segments that are always included

==

powerline/renderer.py
==================
ae691b7;ZyX;2013-04-13 14:47:39 +0400;Improve shown errors

==

powerline/lint/__init__.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/markedvalue.py
==================
fee3286;ZyX;2013-04-13 14:20:54 +0400;Improve arguments checks

==

powerline/lint/__init__.py
==================
7e57010;ZyX;2013-04-13 00:09:00 +0400;Move some code from powerline_autodoc to powerline.lib.inspect
To make it available later in lint checker.
==

docs/source/powerline_autodoc.py
powerline/lint/inspect.py
==================
4dd9c51;ZyX;2013-04-12 23:38:44 +0400;Respect segment.py highlight group handling in powerline-lint
Either `highlight_group` or `name` key is enough to determine highlight group
for non-function segments, but powerline-lint requires `highlight_group`.

==

powerline/lint/__init__.py
==================
c7946cd;ZyX;2013-04-09 08:38:04 +0400;Use different default for functions
This makes it look up `powerline.segments.vim.virtualenv` in addition to
virtualenv in colorscheme like it does with `segment_data`.

==

powerline/segment.py
==================
a8eb0a2;ZyX;2013-04-09 08:18:37 +0400;Special-case None priority in place of -1
This extends priorities in both directions, uses slightly faster `is None`
check, makes it consistent with `interval` special-casing also to `None` and
makes lint able to use one simple `.type()` check in place of `.either()` one.

==

docs/source/configuration.rst
powerline/lint/__init__.py
powerline/renderer.py
powerline/segment.py
==================
49618fc;ZyX;2013-04-08 22:59:14 +0400;Rename PowerlineState to PowerlineLogger

==

powerline/__init__.py
powerline/renderer.py
==================
587789e;ZyX;2013-04-07 19:09:03 +0400;Fix documentation for ThreadedSegment classes with @staticmethod’s

==

docs/source/powerline_autodoc.py
==================
9250d79;ZyX;2013-04-07 14:32:20 +0400;Remove `pl` argument and first argument to `render*` from docs

==

docs/source/powerline_autodoc.py
==================
ac88a09;ZyX;2013-04-07 14:03:45 +0400;Add renderer docstrings.

==

powerline/renderer.py
==================
3ce068d;ZyX;2013-04-10 20:18:03 +0400;Make vim and ipython ext configurations optional

==

powerline/lint/__init__.py
==================
40973ea;ZyX;2013-04-12 23:45:42 +0400;Alter indentation

==

powerline/segment.py
==================
6439800;Kim Silkebækken;2013-04-12 21:19:19 +0200;Merge branch 'fix-quickfix-buffer-highlighting' into develop

==
==================
d81d6f1;Kim Silkebækken;2013-04-12 21:19:06 +0200;vim: Fix missing qf buffer highlighting

==

powerline/config_files/themes/vim/quickfix.json
==================
ceeef4a;Kim Silkebækken;2013-04-12 20:29:16 +0200;Merge branch 'fix-archlinux-packages' into develop

==
==================
79fcdc6;Kim Silkebækken;2013-04-12 20:29:07 +0200;Update Arch Linux optdepends and conflicts

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
a1f3704;Kim Silkebækken;2013-04-11 11:53:05 +0200;Merge branch 'feature/vim-special-windows' into develop

==
==================
7864acb;Kim Silkebækken;2013-04-11 11:52:54 +0200;Update tests

==

tests/test_configuration.py
==================
8230f54;Kim Silkebækken;2013-04-11 11:00:21 +0200;vim: Add quickfix window statusline
Closes #419

==

powerline/config_files/config.json
powerline/config_files/themes/vim/quickfix.json
powerline/matchers/vim.py
==================
739514e;Kim Silkebækken;2013-04-09 10:29:56 +0200;Merge remote-tracking branch 'zyx-i/fix-411' into develop

==
==================
de678ed;ZyX;2013-04-09 00:37:53 +0400;Create VimPowerline.reset_highlight proxy method
Fixes #411
==

powerline/bindings/vim/plugin/powerline.vim
powerline/vim.py
==================
a7daa50;Kim Silkebækken;2013-04-08 11:47:51 +0200;Merge remote-tracking branch 'zyx-i/alter-priority' into develop

==
==================
0c7cc25;Kim Silkebækken;2013-04-08 11:39:23 +0200;Merge remote-tracking branch 'zyx-i/threaded-cpu_load_percent' into develop

==
==================
51a9bbd;Kim Silkebækken;2013-04-08 11:38:04 +0200;Merge remote-tracking branch 'zyx-i/ipython-shutdown' into develop

==
==================
e6ae8ca;Kim Silkebækken;2013-04-08 11:36:44 +0200;Merge remote-tracking branch 'zyx-i/persistent-awesome' into develop

==
==================
c1ed109;Kim Silkebækken;2013-04-08 11:31:04 +0200;Merge remote-tracking branch 'zyx-i/more-threaded-globals' into develop

==
==================
24dde27;ZyX;2013-04-08 08:59:42 +0400;Alter the priority of branch and line_percent segments
Unlike file_type and file_directory branch cannot be deduced from the filename 
(you normally know directory structure of the project) and contents of the file.

Unlike file_format and file_encoding which are normally configured once and then 
forgotten about knowing branch segment is necessary to separate commits.

==

powerline/config_files/themes/vim/default.json
==================
71329cd;ZyX;2013-04-08 08:04:22 +0400;Add gradient for cpu_load_percent
Note: no changes to colorschemes: no cpu_load_percent in colorscheme
==

powerline/segments/common.py
tests/test_segments.py
==================
b2cb5b1;ZyX;2013-04-08 07:49:44 +0400;Fix gradient level in email_imap_alert segment
Closes #407
==

powerline/segments/common.py
==================
340bdc7;ZyX;2013-04-02 19:42:16 +0400;Add other self.pl proxies

==

powerline/lib/threaded.py
==================
14b31ec;ZyX;2013-04-07 19:01:54 +0400;Make dummy cpu_load_percent also ThreadedSegment
It is the easiest way to make documentation identical when created on a system 
with and without psutil module and deduplicate docstrings
==

powerline/segments/common.py
==================
f3ce370;ZyX;2013-04-07 18:52:49 +0400;Make cpu_load_percent segment threaded
interval=0.5 means that it will block for 0.5 seconds which is bad. With 
             threading it blocks only the separate thread, and it does not hold 
             GIL (uses regular time.sleep to wait) in this case which is fine.
interval=0.05 means that it will report almost random value.
interval=None means that (assuming psutil.cpu_percent is called only by this 
              segment) it will report CPU load percent measured between two 
              subsequent .cpu_load_percent calls or cpu_load_percent call and 
              module import. It is used for update method to get immediate 
              result in case update_first is True.
==

powerline/segments/common.py
==================
8dcbb03;ZyX;2013-04-07 13:19:20 +0400;Make IPython renderer shutdown properly

==

powerline/renderers/ipython.py
==================
66cdb36;ZyX;2013-04-07 04:42:36 +0400;Use xml.sax.saxutils.escape in place of xmlrpclib.escape
The latter is not available in python 3
==

powerline/renderers/pango_markup.py
==================
6f57a3d;ZyX;2013-04-07 04:30:51 +0400;Some fixes for flake8

==

powerline/bindings/awesome/powerline-awesome.py
==================
b507029;ZyX;2013-04-07 04:19:45 +0400;Replace shell script with python one

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
powerline/bindings/awesome/powerline-awesome.py
powerline/bindings/awesome/powerline.lua
powerline/bindings/awesome/powerline.sh
==================
3c613bc;ZyX;2013-04-07 04:18:48 +0400;Use xmlrpclib.escape for escaping in PangoMarkupRenderer

==

powerline/renderers/pango_markup.py
==================
2c53378;ZyX;2013-04-07 04:16:57 +0400;Also ignore trailing whitespaces

==

.local.vimrc
==================
9ce63d1;ZyX;2013-04-07 03:24:39 +0400;Allow non-format messages

==

powerline/__init__.py
==================
8cb1538;ZyX;2013-04-07 02:32:29 +0400;Normalize modelines

==

powerline/lib/file_watcher.py
powerline/lib/inotify.py
powerline/lib/tree_watcher.py
==================
25f1959;ZyX;2013-04-06 23:14:18 +0400;Also ignore E225 like suggested in CONTRIBUTING.rst

==

.local.vimrc
==================
6212711;ZyX;2013-04-06 21:21:52 +0400;Add forgotten self.updated set
Ref #367

==

powerline/lib/threaded.py
==================
5b8b359;ZyX;2013-04-06 19:01:59 +0400;Fix tests on python-2.6

==

tests/__init__.py
tests/test_lib.py
==================
b1feceb;ZyX;2013-04-06 18:55:41 +0400;Some fixes for flake8

==

powerline/__init__.py
powerline/lib/config.py
powerline/segments/common.py
tests/test_config_reload.py
==================
e68bae6;ZyX;2013-04-06 18:45:57 +0400;Add fixes for flake8 to that stuff

==

powerline/lib/file_watcher.py
powerline/lib/inotify.py
powerline/lib/tree_watcher.py
tests/test_lib.py
==================
42ee82c;ZyX;2013-04-06 18:48:04 +0400;Update *watcher stuff from @kovidgoyal develop branch

==

powerline/lib/file_watcher.py
powerline/lib/inotify.py
powerline/lib/tree_watcher.py
tests/test_lib.py
==================
b17dab0;ZyX;2013-04-06 18:30:33 +0400;Handle removed files

==

powerline/lib/config.py
==================
d1d05c9;ZyX;2013-04-06 18:09:45 +0400;Add support for reloading configuration in the main thread

==

docs/source/configuration.rst
powerline/__init__.py
powerline/lib/config.py
powerline/lint/__init__.py
tests/test_config_reload.py
==================
296107d;ZyX;2013-04-06 18:07:30 +0400;Improve lint number (interval and priority) checks

==

powerline/lint/__init__.py
==================
88865b1;ZyX;2013-04-06 16:32:38 +0400;Defer create_renderer (and thus thread creation) until .render call
May fix problem discussed in #397

Also fix documentation for Powerline.render().

==

powerline/__init__.py
powerline/vim.py
tests/test_config_reload.py
==================
af2f8f5;ZyX;2013-04-04 22:57:14 +0400;Replace MultiClientWatcher and Powerline threads with ConfigLoader
Also
- move file opening and parsing to ConfigLoader
- add interval configuration

==

docs/source/configuration.rst
powerline/__init__.py
powerline/lib/config.py
powerline/lib/threaded.py
powerline/lint/__init__.py
tests/lib/config_mock.py
tests/test_config_reload.py
tests/test_segments.py
==================
f0e5f43;ZyX;2013-04-03 23:48:01 +0400;Make it use existing shutdown events
Also adds check to powerline-lint that "args" dictionary does not set
shutdown_event, segment_info or pl keyword arguments, this will lead to problems

==

powerline/__init__.py
powerline/lib/threaded.py
powerline/lint/__init__.py
powerline/theme.py
==================
f450840;ZyX;2013-04-03 23:43:50 +0400;Remove debugging function

==

powerline/lib/threaded.py
==================
b188662;ZyX;2013-04-03 23:41:47 +0400;Move some thread functions to a separate class

==

powerline/lib/threaded.py
==================
5534b26;ZyX;2013-04-04 01:44:28 +0400;Forbid querying vim from non-main threads in tests
Currently tests nothing or almost nothing.

==

tests/test_segments.py
tests/vim.py
==================
0a8e7c0;ZyX;2013-04-05 07:12:25 +0400;Add a note about vim-addon-manager

==

docs/source/overview.rst
==================
63e2942;ZyX;2013-04-05 17:51:42 +0400;Also take tests from @kovidgoyal develop branch

==

tests/test_lib.py
==================
47eef98;ZyX;2013-04-05 17:47:39 +0400;Use different emulate call
Ref #389

==

powerline/bindings/zsh/powerline.zsh
==================
2685f61;Kim Silkebækken;2013-04-05 16:22:46 +0200;Merge branch 'various-improvements' into develop

==
==================
5ff80ee;Kim Silkebækken;2013-04-05 16:22:38 +0200;Merge branch 'feature/shortened-uptime' into develop

==
==================
f1286a7;Kovid Goyal;2013-04-05 16:04:26 +0200;Rename time.py to monotonic.py
This makes it possible to run modules in the lib/ directory standalone.

==

powerline/lib/file_watcher.py
powerline/lib/memoize.py
powerline/lib/monotonic.py
powerline/lib/threaded.py
powerline/lib/time.py
powerline/segments/common.py
==================
80be407;Kovid Goyal;2013-04-05 15:59:51 +0200;Disable continuous polling of CPU count in load segment

==

powerline/segments/common.py
tests/test_segments.py
==================
0d3559c;Kim Silkebækken;2013-04-05 15:44:38 +0200;Increase external IP polling interval to 5 minutes

==

powerline/segments/common.py
==================
17065b4;Kim Silkebækken;2013-04-05 15:42:56 +0200;Add timeout to thread join calls to avoid deadlocks

==

powerline/__init__.py
powerline/lib/threaded.py
==================
dc1e646;Kim Silkebækken;2013-04-04 14:49:50 +0200;Merge remote-tracking branch 'zyx-i/fix-391' into develop

==
==================
e599691;ZyX;2013-04-03 23:19:35 +0400;Update only if segment_info is not None

==

powerline/renderer.py
==================
878255a;ZyX;2013-04-03 23:09:40 +0400;Make Tmux and PangoMarkup Renderers merge arguments like shell one
For PangoMarkup it is pretty useless currently (segment_info does not contain 
anything useful).

Note: this does its job by replacing default behavior.

Source of issue: previous default used either segment_info argument (containing 
{"args": args, "environ": os.environ}) or default segment_info, shell renderer 
merged default segment_info with .render() argument. Now segment_info is merged 
by default and old behavior moved to vim renderer which is the only one that is 
designed to use this.

Fixes #391
==

powerline/renderer.py
powerline/renderers/shell.py
powerline/renderers/vim.py
==================
2d9110b;Kim Silkebækken;2013-04-03 14:21:32 +0200;Update tests

==

tests/test_segments.py
==================
cde7669;Kim Silkebækken;2013-04-03 14:09:52 +0200;Add parameters to shorten uptime display
Ref #316

==

powerline/segments/common.py
==================
05016c1;Kim Silkebækken;2013-04-03 08:05:30 +0200;Merge remote-tracking branch 'zyx-i/dividers' into develop

==
==================
9bd5b3a;ZyX;2013-04-03 09:11:43 +0400;Fix problems with tests

==

powerline/__init__.py
==================
ea1e45d;ZyX;2013-04-03 08:51:44 +0400;Fix typo
Fixes #387
==

powerline/segments/common.py
==================
577a1c0;ZyX;2013-04-03 07:41:48 +0400;Exchange if and with cr_kwargs_lock

==

powerline/__init__.py
==================
2a0e601;ZyX;2013-04-03 07:38:53 +0400;Lock create_renderer_kwargs separately from configs

==

powerline/__init__.py
==================
33d3249;ZyX;2013-04-03 06:33:56 +0400;Do not use create_renderer from a separate thread
Also moves functions from tests.test_config_reload to tests.lib.config_mock

Using create_renderer for vim results in vim access from a separate thread.
==

powerline/__init__.py
tests/lib/config_mock.py
tests/test_config_reload.py
==================
b990c92;ZyX;2013-04-03 06:02:14 +0400;Use clear_events, do not assert.

==

tests/test_config_reload.py
==================
de47b76;ZyX;2013-04-02 19:23:12 +0400;Add more assertAccessEvents
May fix travis build
==

tests/test_config_reload.py
==================
691efbf;ZyX;2013-04-02 19:06:05 +0400;Also do the same for `last_pipe_status`

==

powerline/segments/shell.py
tests/test_segments.py
==================
4e5bd54;ZyX;2013-04-02 19:01:03 +0400;Fix cwd segment, add use_path_separator option
cwd segment was not drawing inner separators because of new default for 
multisegment functions. use_path_separator was added because current variant 
looks bad for my taste.
==

powerline/segments/common.py
tests/test_segments.py
==================
fd9af06;Kim Silkebækken;2013-04-02 16:50:20 +0200;Merge remote-tracking branch 'zyx-i/fix-379' into develop

==
==================
b47c2fa;ZyX;2013-04-02 18:40:30 +0400;Pass the correct value to _get_user
Fixes #379
==

powerline/segments/common.py
==================
992e615;ZyX;2013-04-02 17:37:03 +0400;Remove update_first set from set_state
It is already handled correctly in .render() method
==

powerline/lib/threaded.py
==================
66beaaa;ZyX;2013-03-31 23:47:55 +0400;Replace draw_soft_divider setting with draw_inner_divider
If weather or system_load segments were moved to the left draw_soft_divider
variant resulted in incorrect renderring. Thus it was replaced by
draw_inner_divider.

==

docs/source/configuration.rst
powerline/lint/__init__.py
powerline/segment.py
powerline/segments/common.py
powerline/theme.py
tests/test_segments.py
==================
f15cdd9;ZyX;2013-03-31 23:13:51 +0400;Replace draw_divider setting with draw_(soft|hard)_divider
Previous variant was bad because
1. draw_divider only applied to soft dividers. Hard dividers were always drawn
2. But there was a hack with width=auto segments: for this segments draw_divider 
   setting applied always.

Now there are no additional dependencies: draw_*_divider applies no matter what 
other properties of the segment are.
==

docs/source/configuration.rst
powerline/config_files/themes/ipython/in.json
powerline/config_files/themes/ipython/out.json
powerline/config_files/themes/ipython/rewrite.json
powerline/config_files/themes/vim/cmdwin.json
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/vim/help.json
powerline/lint/__init__.py
powerline/renderer.py
powerline/segment.py
powerline/segments/common.py
tests/test_segments.py
==================
fcc009a;Kim Silkebækken;2013-04-02 11:29:08 +0200;Merge remote-tracking branch 'mspaulding06/hostname_exclude_domain' into develop
Conflicts:
	powerline/segments/common.py
	tests/test_segments.py

==
==================
3d72a22;Kim Silkebækken;2013-04-02 11:03:55 +0200;Merge remote-tracking branch 'zyx-i/autoreload-config' into develop

==
==================
b7c61f8;ZyX;2013-04-02 00:27:54 +0400;Handle removed and then added files
Note: if user configuration was removed, but global configuration was not it 
will start tracking global configuration file for changes.
==

powerline/__init__.py
tests/test_config_reload.py
==================
4d1dc06;ZyX;2013-04-01 00:01:51 +0400;Remove unexistent kwargs

==

scripts/powerline
==================
46b5063;ZyX;2013-03-31 15:01:06 +0400;Remove unused import

==

powerline/segments/common.py
==================
d1e7900;ZyX;2013-03-31 14:57:43 +0400;Add tests for reloading theme and colorscheme

==

tests/test_config_reload.py
==================
5447156;ZyX;2013-03-31 14:53:21 +0400;Check whether it switches configuration fine

==

tests/test_config_reload.py
==================
8c3be65;ZyX;2013-03-31 13:37:07 +0400;Added test for colors config reloading

==

tests/test_config_reload.py
==================
e35b154;ZyX;2013-03-31 13:36:41 +0400;Make it possible to supply different watcher
Used in tests
==

powerline/__init__.py
==================
3a6c0ab;Matt Spaulding;2013-03-30 15:32:29 -0700;Add test for hostname exclude_domain option

==

tests/test_segments.py
==================
e03e864;Matt Spaulding;2013-03-30 15:09:01 -0700;Add exclude_domain option to hostname segment
Provides an option to return only the hostname if an fqdn is returned by
socket.gethostname()

==

powerline/segments/common.py
==================
5a50acf;ZyX;2013-03-31 00:06:49 +0400;Add initial tests for configuration reloading
Currently only:
- Test for not reloading configuration if run_once is not True
- Test for reloading main configuration and other configurations triggered by 
  changes in main configuration file

TODO: tests for all other configuration files reloading (colors, colorscheme, 
      theme).
==

tests/test_config_reload.py
==================
c6be442;ZyX;2013-03-31 00:03:35 +0400;Fix whitespace errors

==

tests/test_segments.py
==================
c2ceac0;ZyX;2013-03-31 00:02:53 +0400;Add replace_item with function, remove os import

==

tests/lib/__init__.py
==================
26412c3;ZyX;2013-03-30 23:57:21 +0400;Add watching interval customization, some fixes
Custom interval (zero) will be used in tests.
Fixes:
- wrong check for subscribers receiving all events
- missing prev_ext_config setting that meant theme and colorscheme always
  reloaded if main configuration was reloaded

==

powerline/__init__.py
==================
3ebc16a;ZyX;2013-03-30 21:55:00 +0400;Replace pl.environ/getcwd/home with segment_info

==

powerline/__init__.py
powerline/bindings/zsh/__init__.py
powerline/renderer.py
powerline/renderers/ipython.py
powerline/renderers/shell.py
powerline/renderers/vim.py
powerline/segments/common.py
powerline/segments/ipython.py
powerline/segments/shell.py
scripts/powerline
tests/lib/__init__.py
tests/test_configuration.py
tests/test_segments.py
==================
8542168;ZyX;2013-03-30 21:52:05 +0400;Change spaces in vim renderer

==

powerline/renderers/vim.py
==================
3061738;ZyX;2013-03-30 21:51:30 +0400;Collect all renderer options into one dictionary

==

powerline/__init__.py
==================
452e778;ZyX;2013-03-30 21:50:11 +0400;Add extension to prefix when logging

==

powerline/__init__.py
==================
90c8020;ZyX;2013-03-30 18:12:55 +0400;Use monotonic clock, not time.time

==

powerline/lib/file_watcher.py
==================
a31d6f0;ZyX;2013-03-30 16:58:18 +0400;Rename update_state to branch in powerline.segments.vim.BranchSegment

==

powerline/segments/vim.py
==================
388cccb;ZyX;2013-03-30 16:57:04 +0400;Add write_lock to KwThreadedSegment
Otherwise it is not safe to use. ThreadedSegment does not need write locks.

New variant spends much less time locked in both threads
==

powerline/lib/threaded.py
==================
e2b13d9;ZyX;2013-03-30 16:54:43 +0400;Also catch keyboard interrupts while updating
This will skip segments and issue a warning to log.
==

powerline/lib/threaded.py
==================
bc1a3e4;ZyX;2013-03-30 16:53:04 +0400;Allow overriding renderer module with any module
Will be used in tests. Allows renderer modules (and extensions) that look like 
`foo.bar`: it will import `foo.bar` and not `powerline.renderers.foo.bar` like 
before.
==

powerline/__init__.py
==================
34c775f;ZyX;2013-03-30 16:51:04 +0400;Fix problem with updating value: it was not updated in a thread

==

powerline/lib/threaded.py
==================
6555494;ZyX;2013-03-30 15:54:33 +0400;Use daemon threads by default
Note: current implementation runs `thread.join()` to ensure that thread is not 
shut down while updating, but this works only with regular shutdown. If shutdown 
is somehow done without triggering VimLeavePre (for vim) threads can be 
terminated at any state.

Closes #368
Closes #371
==

powerline/__init__.py
==================
29f2921;ZyX;2013-03-30 14:07:24 +0400;Remove ThreadedSegment.write_lock
Assuming getattr(self, 'update_value') and setattr(self, 'update_value', value) 
are atomic. True with cpython unless somebody defined __getattribute__ or 
__setattr__.
==

powerline/bindings/vim/plugin/powerline.vim
powerline/lib/threaded.py
powerline/segments/common.py
powerline/segments/vim.py
tests/lib/__init__.py
==================
ff6fd64;ZyX;2013-03-30 13:56:03 +0400;Only access watcher through proxy
This is a fix for powerline-daemon: otherwise the first powerline object that 
did `watcher(file)` will receive file changed event and other powerline objects 
will not.
==

powerline/__init__.py
==================
3808123;ZyX;2013-03-26 21:31:05 +0400;Remove self.sleep call

==

powerline/segments/common.py
==================
ee23c57;ZyX;2013-03-26 18:37:29 +0400;Purge configs in another place
Loading main configuration does not necessary imply loading other configurations
==

powerline/__init__.py
==================
e5db011;ZyX;2013-03-26 08:20:32 +0400;Add missing PowerlineState.use_daemon_threads assignment

==

powerline/__init__.py
==================
878b808;ZyX;2013-03-26 08:12:35 +0400;Workaround deadlock in ipython
shutdown_hook is called after all non-daemon threads exit, but it is needed for 
them to exit. Thus I had to use daemon threads in ipython or find some hack to 
make .shutdown be called earlier.
==

powerline/__init__.py
powerline/ipython.py
powerline/lib/threaded.py
==================
27c9a05;ZyX;2013-03-25 19:04:18 +0400;Change indentation of closing }, ], ) and combinations of them

==

powerline/__init__.py
powerline/colorscheme.py
powerline/segments/common.py
powerline/segments/vim.py
powerline/theme.py
setup.py
tests/test_segments.py
==================
ada5ded;ZyX;2013-03-25 18:45:43 +0400;Fix network_load test
It was using old network_load.sleep and also was not shutting down network_load 
in case it failed test
==

tests/test_segments.py
==================
3f53aa2;ZyX;2013-03-25 18:43:29 +0400;Use global watcher

==

powerline/__init__.py
==================
fc6636c;ZyX;2013-03-25 18:41:38 +0400;Clear Powerline.configs when loading main configuration
It should eventually clear out stale watches.
==

powerline/__init__.py
==================
7646c94;ZyX;2013-03-25 08:59:37 +0400;Automatically reload configuration
Needs testing
==

powerline/__init__.py
powerline/lib/threaded.py
powerline/lint/__init__.py
tests/test_configuration.py
==================
5d1089f;ZyX;2013-03-25 08:10:42 +0400;Some fixes for flake8, remove executable bit and shebang

==

powerline/lib/file_watcher.py
==================
559b5ca;ZyX;2013-03-25 08:01:53 +0400;Take file_watcher from @kovidgoyal develop branch

==

powerline/lib/file_watcher.py
==================
80ddbfb;ZyX;2013-03-25 00:11:58 +0400;Split Powerline.__init__ into __init__ and create_renderer
Target: with long-living Powerline objects periodically reload configuration 
recreating renderer. Use file watchers to watch for configuration. Configuration 
should be able to be safely reloaded in non-blocking mode in a separate thread 
up to the time when it comes to recreating renderer.

This commit does not add anything that actually reloads the configuration, 
multiple runs of .create_renderer were not tested.
==

powerline/__init__.py
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/bindings/qtile/widget.py
powerline/bindings/vim/plugin/powerline.vim
powerline/bindings/zsh/__init__.py
scripts/powerline
tests/test_configuration.py
==================
bc7c5b7;Kim Silkebækken;2013-03-25 13:55:31 +0100;Merge branch 'update-docs' into develop
TODO:

* Add info about code layout, debugging tips, etc.
* Add "developing powerline" section to docs (not contributing document)

Ref #287

==
==================
40436c5;Kim Silkebækken;2013-03-25 13:49:50 +0100;Merge remote-tracking branch 'zyx-i/no-update_lock' into develop

==
==================
491b48f;kierun;2013-03-25 08:03:44 +0000;Added terminus font and urxvt documentation.
How to use terminus and urxvt and still get the powerline glyphs .
==

docs/source/tipstricks.rst
==================
92652ca;ZyX;2013-03-25 00:10:54 +0400;Some fixes for flake8

==

powerline/lib/threaded.py
tests/test_segments.py
==================
8c63d20;ZyX;2013-03-24 22:39:31 +0400;Fix update_first

==

powerline/lib/threaded.py
==================
3aab9ef;ZyX;2013-03-24 21:40:11 +0400;Make zsh/zpython also call .shutdown correctly

==

powerline/bindings/zsh/__init__.py
==================
3809b8b;ZyX;2013-03-24 21:38:08 +0400;Allow multiple shutdowns with multiple starts

==

powerline/lib/threaded.py
==================
00271c2;ZyX;2013-03-24 21:30:17 +0400;Shut down network_load segment in tests

==

tests/test_segments.py
==================
80e55b0;ZyX;2013-03-24 21:25:55 +0400;Replace update_lock with shutdon_event

==

powerline/lib/threaded.py
==================
07c2ea1;Kim Silkebækken;2013-03-24 19:07:44 +0100;Merge remote-tracking branch 'zyx-i/fix-361' into develop

==
==================
b6143cf;ZyX;2013-03-24 21:04:09 +0400;Readd log_ prefix and expand log_file

==

powerline/__init__.py
==================
d27c720;ZyX;2013-03-24 20:36:28 +0400;Fix race condition, don’t rely on detect feature
detect feature is to be tested though
==

tests/test_segments.py
==================
7764bcc;ZyX;2013-03-24 20:21:21 +0400;Fix logging format
Fixes #361
==

powerline/__init__.py
==================
68e29a7;Kim Silkebækken;2013-03-24 17:11:29 +0100;Merge remote-tracking branch 'zyx-i/pl-argument' into develop

==
==================
6c49537;ZyX;2013-03-24 20:03:09 +0400;Fix exec call for non-python-2.7

==

tests/lib/__init__.py
==================
1351207;ZyX;2013-03-24 19:59:56 +0400;Some fixes for flake8

==

docs/source/powerline_autodoc.py
powerline/__init__.py
powerline/bindings/ipython/pre_0_11.py
powerline/bindings/vim/__init__.py
powerline/lint/markedjson/scanner.py
powerline/renderers/vim.py
powerline/segments/common.py
powerline/segments/ipython.py
tests/lib/__init__.py
tests/test_segments.py
tests/vim.py
tools/generate_gradients.py
==================
5cebad9;Kim Silkebækken;2013-03-24 16:52:44 +0100;Merge remote-tracking branch 'zyx-i/pl-argument' into develop

==
==================
14d957b;ZyX;2013-03-24 19:35:12 +0400;Skip crashed segments

==

powerline/lib/threaded.py
==================
ca2f0cc;ZyX;2013-03-24 18:45:20 +0400;Do not wait for update lock, exit

==

powerline/lib/threaded.py
==================
63a50ad;ZyX;2013-03-23 23:44:00 +0400;Remove run_once from ShellPowerline, fix update_first
run_once will be passed to Powerline as a part of **kwargs

==

powerline/lib/threaded.py
powerline/shell.py
==================
7370876;ZyX;2013-03-23 19:03:43 +0400;Make scripts/powerline use os.environ['PWD'] for .getcwd() if present
Closes #330

==

scripts/powerline
==================
8a51d99;ZyX;2013-03-23 18:55:43 +0400;Some fixes for zsh, remove some exceptions handling
Those exceptions are now handled and logged at top level, thus no need to handle
them in segment.

Ref #330, it is now fixed for zsh/zpython

Note: do not use zsh/zpython + python3, it does not work properly, even though
this changeset contains fixes for it as well

Fixes #360

==

powerline/bindings/zsh/__init__.py
powerline/lib/threaded.py
powerline/segments/common.py
powerline/shell.py
tests/test_segments.py
==================
ed435f8;ZyX;2013-03-23 17:51:02 +0400;Add required pl argument to segments
Fixes #340
Ref #330

==

docs/source/configuration.rst
powerline/__init__.py
powerline/bindings/zsh/__init__.py
powerline/lib/threaded.py
powerline/lint/__init__.py
powerline/renderer.py
powerline/renderers/vim.py
powerline/segment.py
powerline/segments/common.py
powerline/segments/ipython.py
powerline/segments/shell.py
powerline/segments/vim.py
powerline/shell.py
powerline/theme.py
tests/lib/__init__.py
tests/test_configuration.py
tests/test_segments.py
==================
cc1c982;ZyX;2013-03-22 20:47:11 +0400;Move configuration to /etc/xdg/powerline
XDG_CONFIG_DIRS is set in /etc/env.d by configuration from xdg-utils package, 
but it is not guaranteed to be present in the system
==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
powerline/__init__.py
==================
e151b60;ZyX;2013-03-22 16:50:06 +0400;Use python’s try/catch, not vim’s
Fixes #344
==

powerline/bindings/vim/plugin/powerline.vim
==================
127a600;ZyX;2013-03-22 16:49:00 +0400;Rework API for custom vim events

==

powerline/bindings/vim/plugin/powerline.vim
powerline/segments/vim.py
==================
a021916;ZyX;2013-03-20 18:33:55 +0400;Make update_first configurable

==

docs/source/powerline_autodoc.py
powerline/lib/threaded.py
==================
e6dd40b;ZyX;2013-03-20 08:58:25 +0400;Fix behavior with run_once: .update() was called too much times

==

powerline/lib/threaded.py
==================
a65a27e;ZyX;2013-03-20 00:21:22 +0400;Allow multiple starts by not subclassing from Thread

==

powerline/lib/threaded.py
==================
0c9337b;ZyX;2013-03-20 00:05:24 +0400;Allow multiple shutdown calls

==

powerline/lib/threaded.py
==================
840ac01;ZyX;2013-03-20 00:04:30 +0400;Port common.branch segment to KwThreaded*, add common.repository_status

==

powerline/segments/common.py
tests/test_segments.py
==================
5caeac2;Kim Silkebækken;2013-03-24 16:18:44 +0100;Merge remote-tracking branch 'zyx-i/fix-356' into develop

==
==================
154fe12;Kim Silkebækken;2013-03-24 16:18:26 +0100;Merge remote-tracking branch 'zyx-i/ipython-other' into develop

==
==================
7a096f6;Kim Silkebækken;2013-03-24 16:18:07 +0100;Merge remote-tracking branch 'zyx-i/colors' into develop

==
==================
3359214;ZyX;2013-03-24 05:56:55 +0400;Also fix VimRenderer.strwidth
Fixes #356
==

powerline/renderers/vim.py
==================
87e39d0;ZyX;2013-03-24 05:51:41 +0400;Autodetect python version

==

powerline/bindings/vim/plugin/powerline.vim
==================
b517df7;ZyX;2013-03-24 05:45:52 +0400;Fix bytes handling on python3
Fixes #356
==

powerline/bindings/vim/__init__.py
powerline/matchers/vim.py
powerline/renderers/vim.py
powerline/segments/vim.py
tests/vim.py
==================
c4e5ff8;ZyX;2013-03-24 05:22:07 +0400;Added support for all powerline prompts (in2, out, rewrite)
Also fixed problem with prompt not really updating.

Fixes #141

==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/config_files/colorschemes/ipython/default.json
powerline/config_files/config.json
powerline/config_files/themes/ipython/default.json
powerline/config_files/themes/ipython/in.json
powerline/config_files/themes/ipython/in2.json
powerline/config_files/themes/ipython/out.json
powerline/config_files/themes/ipython/rewrite.json
powerline/ipython.py
powerline/lint/__init__.py
powerline/renderers/ipython.py
powerline/renderers/vim.py
powerline/segments/ipython.py
tests/test_configuration.py
==================
bb06207;ZyX;2013-03-24 05:17:19 +0400;Some lint fixes
* Fixed handling of empty scalars in python2: ''.join([]) returns str,
  ''.join([u'smth']) returns unicode
* Fixed check_config: it was always checking for themes, even if it was
  requested to check colorscheme

==

powerline/lint/__init__.py
powerline/lint/markedjson/scanner.py
==================
83ed369;ZyX;2013-03-24 04:15:26 +0400;Fix bold attr that may leak into next segment

==

powerline/renderers/shell.py
==================
b1f9eda;ZyX;2013-03-24 04:09:39 +0400;Remove get_segment_info and passing segment_info through globals

==

powerline/__init__.py
powerline/renderer.py
powerline/theme.py
scripts/powerline
tests/test_configuration.py
==================
004e6a8;ZyX;2013-03-24 01:43:37 +0400;Add gradient to email_imap_alert segment
Colors probably need to be revised

Fixes #301
==

powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/wm/default.json
powerline/segments/common.py
==================
83517f6;ZyX;2013-03-24 01:42:50 +0400;Make test.sh always check only powerline/config_files directory

==

tests/test.sh
==================
25806fa;ZyX;2013-03-24 01:33:56 +0400;Added gradient for network_load segment

==

powerline/config_files/colorschemes/tmux/default.json
powerline/segments/common.py
tests/test_segments.py
==================
37b684d;ZyX;2013-03-24 01:19:58 +0400;Fix checks for gradient groups (it was not forcing gradient colors)

==

powerline/lint/__init__.py
==================
157b849;ZyX;2013-03-24 00:55:54 +0400;Make weather gradient configurable, add system_load gradient
Also make gradients floating-point and fix #332 by removing “normalized” from 
system_load segment documentation.
==

powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/segments/common.py
powerline/segments/vim.py
tests/lib/__init__.py
tests/test_segments.py
tools/generate_gradients.py
==================
49b5435;Kim Silkebækken;2013-03-21 17:25:35 +0100;Merge branch 'feature/autodetect-network-interfaces' into develop

==
==================
b951907;Kovid Goyal;2013-03-21 17:24:09 +0100;Autodetect network interfaces to monitor

==

powerline/lib/threaded.py
powerline/segments/common.py
==================
4d8a0d5;Kim Silkebækken;2013-03-21 17:11:18 +0100;Merge remote-tracking branch 'zyx-i/fix-342' into develop

==
==================
0610316;ZyX;2013-03-21 07:52:54 +0400;Make prompt* sets non-local
Fixes #342
==

powerline/bindings/zsh/powerline.zsh
==================
c92dfae;ZyX;2013-03-19 08:20:40 +0400;Made tools/*.py executable

==

tools/colors_find.py
tools/generate_gradients.py
==================
910dc3e;ZyX;2013-03-19 08:20:04 +0400;Made tools/generate_gradients.py work in python3

==

tools/generate_gradients.py
==================
da86478;ZyX;2013-03-19 08:17:11 +0400;Make generate_gradients tool be able to show custom scale

==

tools/generate_gradients.py
==================
11aa74c;ZyX;2013-03-19 08:11:53 +0400;Make it use gradient for weather temperature
Ref #301
==

powerline/config_files/colors.json
powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/wm/default.json
powerline/segments/common.py
tests/test_segments.py
==================
3e4a98b;ZyX;2013-03-14 07:40:39 +0400;Make green_yellow_orange_red grad use <16 colors, added 2 more grads
They are currently unused
==

powerline/config_files/colors.json
==================
1a4eead;ZyX;2013-03-14 00:31:00 +0400;Added green_yellow_orange_red gradient for line % in solarized
Ref #301
==

powerline/config_files/colors.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/segments/vim.py
==================
83d855d;Kim Silkebækken;2013-03-19 10:52:31 +0100;Merge remote-tracking branch 'zyx-i/threaded-misc' into develop

==
==================
260a0da;ZyX;2013-03-19 00:42:32 +0400;Add tests for the constantly recreated *Powerline instances

==

tests/test_configuration.py
==================
1dc039a;ZyX;2013-03-19 00:29:41 +0400;Some small changes in .segments.vim

==

powerline/segments/vim.py
==================
fd6c1f1;Kovid Goyal;2013-03-18 22:13:20 +0530;Avoid divisin by zero exception in the network load segment

==

powerline/segments/common.py
==================
4551bd2;ZyX;2013-03-19 00:18:51 +0400;threaded: Add .update_first, leave .queries as-is unless key’s missing
Fixes #335
Closes #336

==

powerline/lib/threaded.py
powerline/segments/common.py
==================
ca723aa;ZyX;2013-03-18 23:58:06 +0400;Skip external_ip segment if self.ip is not defined
Ref #335
==

powerline/segments/common.py
==================
137ae5f;ZyX;2013-03-18 23:55:14 +0400;Change hook type
It makes sense to run _powerline_tmux_set_pwd only when working directory is 
changed.
==

powerline/bindings/zsh/powerline.zsh
==================
e49d129;Kim Silkebækken;2013-03-18 08:29:05 +0100;Merge branch 'fix-bzr-shelves' into develop

==
==================
c92aaef;Kovid Goyal;2013-03-17 00:42:46 +0530;bzr segment: Handle repos with shelves correctly
Return None instead of a string with spaces for a clean repo with
shelves.

==

powerline/lib/vcs/bzr.py
==================
f0f1f3f;Kim Silkebækken;2013-03-18 08:24:54 +0100;Merge remote-tracking branch 'zyx-i/threaded' into develop

==
==================
bb63722;ZyX;2013-03-18 08:15:02 +0400;Also call .shutdown() in ipython

==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
==================
b0495d0;ZyX;2013-03-18 07:56:25 +0400;Do not let daemon threads be stopped while being updated

==

powerline/lib/threaded.py
powerline/renderer.py
powerline/shell.py
scripts/powerline
tests/test_configuration.py
==================
674a211;ZyX;2013-03-17 22:26:57 +0400;Remove escape sequences from default strings in documentation
Note: to properly view some values in browser you need the browser to use 
patched font or fontconfig. Though there is not much difference between some 
cryptic escape sequence and singe wrongly displayed character.
==

docs/source/powerline_autodoc.py
==================
60cc019;ZyX;2013-03-17 21:15:42 +0400;Remove @ from documentation which was present for unknown reason

==

powerline/segments/common.py
==================
34fba22;ZyX;2013-03-17 21:06:56 +0400;Fix documentation for wrapped functions

==

docs/source/powerline_autodoc.py
powerline/lib/__init__.py
powerline/segments/common.py
powerline/segments/vim.py
powerline/theme.py
==================
19b45e6;ZyX;2013-03-17 20:20:21 +0400;Fix documentation for threaded segments

==

docs/source/conf.py
docs/source/powerline_autodoc.py
powerline/lib/threaded.py
powerline/segments/common.py
powerline/segments/vim.py
==================
ce65470;ZyX;2013-03-17 18:59:44 +0400;Fix shorten_cwd handling

==

powerline/segments/vim.py
==================
fb2e9b6;ZyX;2013-03-17 18:46:59 +0400;Test all other segments
Still uncovered: email_imap_alert and now_playing

==

tests/lib/__init__.py
tests/test_segments.py
==================
ceabd37;ZyX;2013-03-17 15:30:47 +0400;Add temperature_format keyword argument to weather segment

==

powerline/segments/common.py
==================
a1b0b62;ZyX;2013-03-17 15:11:26 +0400;Add format keyword argument to network_load segment

==

powerline/segments/common.py
==================
f9e9b2c;ZyX;2013-03-17 14:52:02 +0400;Change uptime format, make it accept seconds if needed
It is uncommon to use integers like 00 or 01 for days.

==

powerline/segments/common.py
==================
050a34b;ZyX;2013-03-17 14:01:10 +0400;Avoid ResourceWarning messages: close stdout

==

powerline/lib/vcs/git.py
==================
84dfac6;ZyX;2013-03-17 13:55:31 +0400;Avoid using python setup.py test
Closes #295

==

tests/test.sh
==================
f547e8b;ZyX;2013-03-14 22:38:40 +0400;Some fixes for flake8

==

powerline/__init__.py
powerline/lib/url.py
powerline/renderer.py
powerline/segments/common.py
powerline/segments/vim.py
tests/test_segments.py
tests/vim.py
==================
62e7313;ZyX;2013-03-13 22:38:56 +0400;Replace memoize with threading where applicable
NOTE: Documentation now gets attached to *classes*, not actual segments. Hiding
      away classes (by changing their names to start with `_`) and/or doing

          self.__doc__ = self.__class__.__doc__

      does not work (hiding classes only hides documentation completely). I am
      not familiar with sphinx enough to say how this should be fixed.

Ref #168

==

powerline/lib/memoize.py
powerline/lib/threaded.py
powerline/lib/time.py
powerline/lib/url.py
powerline/lib/vcs/__init__.py
powerline/segments/common.py
powerline/segments/vim.py
tests/test_segments.py
==================
a4adc92;ZyX;2013-03-17 20:51:28 +0400;Do not import memoize, humanize_bytes and urllib_* in powerline.lib

==

powerline/lib/__init__.py
powerline/segments/common.py
powerline/segments/vim.py
tests/test_lib.py
==================
29eccf4;ZyX;2013-03-17 13:00:01 +0400;Use psutil module for `user` segment

==

powerline/segments/common.py
tests/install.sh
tests/test.sh
tests/test_segments.py
==================
93e41bf;ZyX;2013-03-14 22:37:26 +0400;Make psutil.BOOT_TIME fallback for /proc/uptime
Method used with psutil.BOOT_TIME is subject to changes when clock_settime
changes time, /proc/uptime is not.

==

powerline/segments/common.py
==================
f8db46b;ZyX;2013-03-13 17:08:22 +0400;Use proper clock if possible

==

powerline/lib/memoize.py
==================
abe0b1a;ZyX;2013-03-13 19:51:33 +0400;Add support for .startup and .shutdown methods

==

powerline/__init__.py
powerline/bindings/vim/plugin/powerline.vim
powerline/renderers/vim.py
powerline/segment.py
powerline/shell.py
powerline/theme.py
==================
c237e66;ZyX;2013-03-13 19:49:53 +0400;Make file_size segment output buffer size

==

powerline/lib/vcs/__init__.py
powerline/segments/vim.py
tests/test_segments.py
tests/vim.py
==================
6f679e0;ZyX;2013-03-13 21:15:39 +0400;Refactor powerline.lib.url

==

powerline/lib/url.py
==================
df19981;ZyX;2013-03-15 08:23:22 +0400;Add tools/generate_gradients.py and tools/colors_find.py
First helps in generating gradients. Usage:

    python tools/generate_gradients.py '[color1, …]' itemnum[ "show"]
where color is either [100, 127, 46] (cterm colors) or ["ff00ff", "feffef"] (RGB
colors)

Second is to determine what name will be better suitable for some RGB color

==

tools/colors.map
tools/colors_find.py
tools/generate_gradients.py
==================
137a415;ZyX;2013-03-15 08:19:59 +0400;Add .local.vimrc with configuration for the lint checker
Ref #314

==

.local.vimrc
==================
d966921;Kim Silkebækken;2013-03-15 15:20:19 +0100;Remove contibuting info from docs

==

docs/source/license-credits.rst
==================
edfc090;Kim Silkebækken;2013-03-15 15:20:00 +0100;Add initial CONTRIBUTING document
Based on
https://github.com/puppetlabs/puppet/blob/master/CONTRIBUTING.md

Ref #287

==

CONTRIBUTING.rst
==================
c4e618e;Kim Silkebækken;2013-03-15 14:35:08 +0100;Update authors and contributors list

==

docs/source/license-credits.rst
==================
2c25a71;Kim Silkebækken;2013-03-15 14:19:43 +0100;Merge branch 'fix-solarized-visual-block-color' into develop

==
==================
f141574;Ali B;2013-03-15 10:45:59 +1100;Make vim Visual Block mode orange in Solarized colourscheme.
This makes it consistent with the styles of the other visual modes.
Reference issue #147.

==

powerline/config_files/colorschemes/vim/solarized.json
==================
8cdd12a;Kim Silkebækken;2013-03-15 14:18:03 +0100;Merge remote-tracking branch 'zyx-i/326-fix-None-handling' into develop

==
==================
9f5793c;Kim Silkebækken;2013-03-15 14:17:40 +0100;Merge branch '324-fix-bzr-branch-name' into develop

==
==================
dda500a;Kovid Goyal;2013-03-14 20:25:55 +0530;Only use locally stored bzr branch nickname
Fixes #324 (slow vcs branch segment with bzr checkout)

==

powerline/lib/vcs/bzr.py
==================
747c75c;Kim Silkebækken;2013-03-15 14:15:26 +0100;Merge remote-tracking branch 'zyx-i/fix-322' into develop

==
==================
5e71f58;Kim Silkebækken;2013-03-15 14:14:20 +0100;Merge branch 'fix-urllib_read' into develop

==
==================
2409729;Kim Silkebækken;2013-03-15 08:31:47 +0100;Catch all urllib errors in urrlib_read()

==

powerline/lib/url.py
==================
4847022;ZyX;2013-03-14 20:02:02 +0400;Make git.Repository.status() also return None
Fixes #326

==

powerline/lib/vcs/git.py
powerline/segments/common.py
powerline/segments/vim.py
tests/test_lib.py
tests/test_segments.py
==================
d015d51;Kim Silkebækken;2013-03-13 14:10:00 +0100;Merge branch '320-fix-pkgbuilds' into develop

==
==================
b1b0f24;Kim Silkebækken;2013-03-13 14:09:26 +0100;Install fonts to OTF instead of TTF in PKGBUILDs
Fixes #320

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
8861c71;Kim Silkebækken;2013-03-13 13:55:42 +0100;Merge remote-tracking branch 'zyx-i/branch-colors' into develop

==
==================
e24703d;ZyX;2013-03-13 14:44:35 +0400;Add status_colors argument to branch segments
Closes #206

==

powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/segments/common.py
powerline/segments/vim.py
tests/test_segments.py
==================
d8c64c5;ZyX;2013-03-13 07:33:47 +0400;Fix keyword argument name

==

powerline/lint/__init__.py
==================
271cfe0;ZyX;2013-03-13 00:58:27 +0400;Add parameter to disable current and user directories shortening
Fixes #322
==

powerline/segments/vim.py
==================
0a5a09d;Kim Silkebækken;2013-03-12 13:12:28 +0100;Merge branch '307-fix-ambiwidth' into develop

==
==================
1960e83;ZyX;2013-03-11 21:27:28 +0400;Remove useless import

==

powerline/renderer.py
==================
6f3703e;ZyX;2013-03-10 13:08:01 +0400;Improve ambiwidth handling, readd additional_escapes
Fixes #307

==

docs/source/configuration.rst
docs/source/installation/osx.rst
docs/source/installation/troubleshooting-common.rst
powerline/__init__.py
powerline/renderer.py
powerline/renderers/vim.py
tests/vim.py
==================
417e823;ZyX;2013-03-11 22:24:00 +0400;Fix two flake8 errors

==

powerline/lint/__init__.py
powerline/lint/markedjson/reader.py
==================
b2b05cb;ZyX;2013-03-11 22:22:18 +0400;Removed underscore_to_camelcase
No need to bother both developers (that need to create class names compatible 
with file name, which is not obvious if not looking into main Powerline class) 
and computer (that needs to recompute class name each time) if it is possible to 
bother only developers (or only computer, but this contributes to higher startup 
times).

About not obvious: when you look into zsh_prompt.py and see only 
ZshPromptRenderer name you only think that powerline upstream is following 
strict code style. You don’t think there is a technical reason for such naming, 
like you don’t think there is technical reason for having blank lines. When you 
look into zsh_prompt.py and see `renderer = ZshPromptRenderer` it is obvious 
that there is technical reason for writing code this way because new variable is 
never used in the module itself.
==

powerline/__init__.py
powerline/lib/__init__.py
powerline/renderers/bash_prompt.py
powerline/renderers/ipython.py
powerline/renderers/pango_markup.py
powerline/renderers/shell.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/renderers/zsh_prompt.py
tests/test_configuration.py
tests/test_lib.py
==================
6964785;ZyX;2013-03-11 22:13:43 +0400;Move some functions out of classes
No need to have static methods that are not supposed to be overridden and that 
do not benefit from `self' argument they do not receive
==

powerline/renderer.py
powerline/renderers/shell.py
==================
2c445a9;ZyX;2013-03-11 22:09:34 +0400;Add more tests to test_configuration
Dynamic configuration tests. Purpose: make sure that default configuration does 
not throw. Tests catch only very trivial problems (like missing imports after
refactoring)
==

tests/test_configuration.py
==================
89204d2;Kim Silkebækken;2013-03-11 16:24:35 +0100;Merge remote-tracking branch 'zyx-i/fix-278-powerline-lint' into develop

==
==================
fe6f1bf;ZyX;2013-03-11 18:24:15 +0400;Handle AttributeError also when importing segment function

==

powerline/lint/__init__.py
powerline/lint/markedjson/reader.py
==================
1ef1ad7;ZyX;2013-03-11 08:52:23 +0400;Add missing import

==

powerline/lint/markedjson/error.py
==================
24d662c;ZyX;2013-03-11 08:49:07 +0400;Make lint more error-prone
Target: report as much errors as possible in a single run without failure

==

powerline/lint/__init__.py
==================
9dc69d9;ZyX;2013-03-11 08:40:16 +0400;Make Reader also produce MarkedError, remove JSONError

==

powerline/lint/markedjson/error.py
powerline/lint/markedjson/reader.py
==================
49ad855;ZyX;2013-03-11 08:00:40 +0400;Rename YAMLError to JSONError and MarkedYAMLError to MarkedError

==

powerline/lint/markedjson/composer.py
powerline/lint/markedjson/constructor.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/parser.py
powerline/lint/markedjson/reader.py
powerline/lint/markedjson/resolver.py
powerline/lint/markedjson/scanner.py
==================
5da848f;ZyX;2013-03-10 23:12:07 +0400;Some fixes for flake8

==

powerline/lint/__init__.py
powerline/lint/markedjson/__init__.py
powerline/lint/markedjson/composer.py
powerline/lint/markedjson/constructor.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/events.py
powerline/lint/markedjson/loader.py
powerline/lint/markedjson/markedvalue.py
powerline/lint/markedjson/nodes.py
powerline/lint/markedjson/parser.py
powerline/lint/markedjson/reader.py
powerline/lint/markedjson/resolver.py
powerline/lint/markedjson/scanner.py
powerline/lint/markedjson/tokens.py
==================
3fd1215;ZyX;2013-03-10 22:35:38 +0400;Some changes to make it work in non-python2.7

==

powerline/lint/markedjson/error.py
powerline/lint/markedjson/markedvalue.py
==================
f75bb9e;ZyX;2013-03-10 22:28:09 +0400;Make parser less restrictive and able to report problems

==

powerline/lint/__init__.py
powerline/lint/markedjson/__init__.py
powerline/lint/markedjson/constructor.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/loader.py
powerline/lint/markedjson/parser.py
powerline/lint/markedjson/scanner.py
==================
d27f7a0;ZyX;2013-03-09 16:16:00 +0400;Add most configuration checks
Changes:

- Add main configuration, colors.json, almost full themes and colorschemes
  checks
- Make powerline.lint.check return whether it had problems
- Make powerline-lint fail if .check reported problems
- Make tests run powerline-lint
- Add the script to the list of the installed scripts

Fixes #278

==

powerline/lint/__init__.py
powerline/lint/markedjson/error.py
scripts/powerline-lint
setup.py
tests/install.sh
tests/test.sh
==================
287a88f;ZyX;2013-03-08 20:01:45 +0400;Add JSON parser producing marked values
Ref #278

==

powerline/lint/__init__.py
powerline/lint/markedjson/__init__.py
powerline/lint/markedjson/composer.py
powerline/lint/markedjson/constructor.py
powerline/lint/markedjson/error.py
powerline/lint/markedjson/events.py
powerline/lint/markedjson/loader.py
powerline/lint/markedjson/markedvalue.py
powerline/lint/markedjson/nodes.py
powerline/lint/markedjson/parser.py
powerline/lint/markedjson/reader.py
powerline/lint/markedjson/resolver.py
powerline/lint/markedjson/scanner.py
powerline/lint/markedjson/tokens.py
==================
5b11fea;ZyX;2013-03-09 12:40:03 +0400;Make some functions be more convenient for use in lint checker

==

powerline/__init__.py
==================
d33b8ee;ZyX;2013-03-10 20:57:52 +0400;Fix highlight group documentation for line_percent

==

powerline/segments/vim.py
==================
9e8fab3;ZyX;2013-03-08 21:09:44 +0400;Add highlight group data for powerline-lint

==

powerline/segments/common.py
powerline/segments/shell.py
powerline/segments/vim.py
==================
7fca338;ZyX;2013-03-09 15:26:37 +0400;Remove unused “colors” key

==

powerline/config_files/config.json
==================
551a268;ZyX;2013-03-09 13:30:24 +0400;Move add_local_theme and get_theme to vim renderer
In any case for all other extensions they are useless. (Except for ipython, but
it is TODO and I am not going to use matchers this way, simple dictionary
lookup is better in this case.)

==

powerline/__init__.py
powerline/renderer.py
powerline/renderers/vim.py
powerline/vim.py
==================
657fcd1;ZyX;2013-03-10 20:28:47 +0400;Make @window_cached use @wraps
Otherwise documentation is not saved (hidden in decorated function only visible
in the closure).

==

powerline/segments/vim.py
==================
ae62aee;ZyX;2013-03-11 19:11:10 +0400;Renamed term_24bit_colors to term_truecolor

==

docs/source/configuration.rst
docs/source/overview.rst
powerline/__init__.py
powerline/config_files/config.json
==================
1773750;Kim Silkebækken;2013-03-11 15:53:46 +0100;Merge branch 'improved-ebuild' into develop

==
==================
fdab80c;ZyX;2013-03-10 21:38:33 +0400;Add python-argparse dependency

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
==================
6c7e454;ZyX;2013-03-10 15:37:25 +0400;Fix license
Fixes #299

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
==================
4374e1f;ZyX;2013-03-10 15:34:27 +0400;Fix git/hg repo tests

==

tests/test_lib.py
==================
a6d4823;ZyX;2013-03-10 15:13:23 +0400;Add python_test, more exclusions
Fixes #289

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
setup.py
tests/test.sh
==================
111eaa2;Kim Silkebækken;2013-03-11 10:40:09 +0100;Combine vim modelines and Python encoding declarations
Ref #314

==

docs/source/conf.py
font/fontpatcher.py
powerline/__init__.py
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/bindings/qtile/widget.py
powerline/bindings/vim/__init__.py
powerline/bindings/zsh/__init__.py
powerline/colorscheme.py
powerline/ipython.py
powerline/lib/__init__.py
powerline/lib/humanize_bytes.py
powerline/lib/memoize.py
powerline/lib/url.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/matcher.py
powerline/matchers/vim.py
powerline/renderer.py
powerline/renderers/bash_prompt.py
powerline/renderers/ipython.py
powerline/renderers/pango_markup.py
powerline/renderers/shell.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/renderers/zsh_prompt.py
powerline/segment.py
powerline/segments/common.py
powerline/segments/shell.py
powerline/segments/vim.py
powerline/shell.py
powerline/theme.py
powerline/vim.py
setup.py
tests/__init__.py
tests/lib/__init__.py
tests/path/vim.py
tests/test_configuration.py
tests/test_lib.py
tests/test_segments.py
tests/vim.py
==================
b31c987;Peter Fern;2013-03-09 20:05:31 +1100;Add XDG_CONFIG_DIRS to config_paths for system-wide install
Commonly this will be `/etc/xdg/powerline`

==

powerline/__init__.py
==================
8e8e9c9;Kim Silkebækken;2013-03-11 08:24:41 +0100;Merge remote-tracking branch 'pdf/ttf_output' into develop

==
==================
6748701;Kim Silkebækken;2013-03-11 08:11:25 +0100;Add vim modelines to all Python files
Added with `sed -i '2i# vim:fenc=utf-8:noet' `find -name '*.py'`` and
fixed in a couple of files without the UTF-8 encoding on top.

Ref #314

==

docs/source/conf.py
font/fontpatcher.py
powerline/__init__.py
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/bindings/qtile/widget.py
powerline/bindings/vim/__init__.py
powerline/bindings/zsh/__init__.py
powerline/colorscheme.py
powerline/ipython.py
powerline/lib/__init__.py
powerline/lib/humanize_bytes.py
powerline/lib/memoize.py
powerline/lib/url.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/bzr.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/matcher.py
powerline/matchers/vim.py
powerline/renderer.py
powerline/renderers/bash_prompt.py
powerline/renderers/ipython.py
powerline/renderers/pango_markup.py
powerline/renderers/shell.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/renderers/zsh_prompt.py
powerline/segment.py
powerline/segments/common.py
powerline/segments/shell.py
powerline/segments/vim.py
powerline/shell.py
powerline/theme.py
powerline/vim.py
setup.py
tests/__init__.py
tests/lib/__init__.py
tests/path/vim.py
tests/test_configuration.py
tests/test_lib.py
tests/test_segments.py
tests/vim.py
==================
40fe38f;Kim Silkebækken;2013-03-11 07:52:24 +0100;Move argparser to powerline.shell so it can be re-used

==

powerline/shell.py
scripts/powerline
==================
59ef974;ZyX;2013-03-09 21:02:52 +0400;Fix set statusline location, readd fix from #243
Ref #303

==

powerline/bindings/vim/plugin/powerline.vim
==================
707cf27;Kim Silkebækken;2013-03-11 07:13:57 +0100;Cleanup .gitignore file

==

.gitignore
==================
c70d3b3;Kovid Goyal;2013-02-25 22:56:22 +0530;Add bzr support

==

powerline/lib/vcs/__init__.py
powerline/lib/vcs/bzr.py
tests/install.sh
tests/test_lib.py
==================
38e2368;Peter Fern;2013-03-09 18:55:22 +1100;Preserve style suffixes by inserting ForPowerline before any '-'s

==

font/fontpatcher.py
==================
bee1467;Peter Fern;2013-03-09 18:15:24 +1100;Output in either otf or ttf (so we don't loose hinting/whatever)

==

font/fontpatcher.py
==================
2063949;Kim Silkebækken;2013-03-08 18:35:44 +0100;Add Travis build status to README

==

README.rst
==================
6777fd4;Kim Silkebækken;2013-03-08 18:03:57 +0100;Fix minor typo in powerline.vim

==

powerline/bindings/vim/plugin/powerline.vim
==================
154d1ae;Kim Silkebækken;2013-03-08 18:01:50 +0100;Fix issues in Arch Linux PKGBUILDS
Closes #291.

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python-powerline-git/powerline.install
packages/archlinux/python2-powerline-git/PKGBUILD
==================
162f5ac;Kim Silkebækken;2013-03-08 17:57:41 +0100;Change license from CC BY-SA to the MIT license
Refs #299.

==

LICENSE
docs/source/license-credits.rst
packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
be62815;Kim Silkebækken;2013-03-04 15:13:58 +0100;Handle socket errors in IMAP mail segment

==

powerline/segments/common.py
==================
cb87cfb;Kim Silkebækken;2013-03-03 22:11:39 +0100;Update credits and PR guidelines

==

docs/source/license-credits.rst
==================
f6d23bd;ZyX;2013-03-03 15:00:10 +0400;Always return a string in email_imap_alert segment
Fixes #279

==

powerline/segments/common.py
==================
4c23312;ZyX;2013-03-03 20:58:33 +0400;Do not restrict branches to `tests` branch
In any case it was not working

==

.travis.yml
==================
aa0a8bf;ZyX;2013-03-03 20:40:35 +0400;Make tests support python2.6
Old unittest is not working for unknown reason, using unittest2 instead

==

.travis.yml
setup.py
tests/__init__.py
tests/install.sh
tests/test.sh
tests/test_configuration.py
tests/test_lib.py
tests/test_segments.py
tests/vim.py
==================
0a05b29;ZyX;2013-03-03 00:02:07 +0400;Add support for with: statement to tests.vim
Also made everything use new vim_module._with where possible

==

tests/test_configuration.py
tests/test_segments.py
tests/vim.py
==================
c429d9e;ZyX;2013-03-02 19:05:08 +0400;Omit using sys.modules if possible
Does not work though: still TypeError due to some global in multiproccessing
that got None

==

powerline/segments/common.py
tests/path/vim.py
tests/test_configuration.py
tests/test_segments.py
tests/vim.py
==================
c334be4;ZyX;2013-03-02 18:40:13 +0400;Add tests.lib module with `replace_*()` with statement functions
Note: there is new problem: now multiprocessing() globals got assigned None
values. It is likely somehow related to extended `sys.modules` utilization

==

tests/lib/__init__.py
tests/test_segments.py
==================
5847557;ZyX;2013-02-24 14:03:14 +0400;Start adding tests
Tests are temporary disabled on all branches except tests (does not really work
though, needs travis.yml in all branches).

==

.travis.yml
powerline/lib/__init__.py
setup.py
tests/__init__.py
tests/empty
tests/test_configuration.py
tests/test_lib.py
tests/test_segments.py
tests/vim.py
==================
2a39ed8;ZyX;2013-02-27 07:55:06 +0400;Use mode(1)
Otherwise all that fancy double-symbol modes are just not visible.

==

powerline/renderers/vim.py
==================
47cfde0;ZyX;2013-03-03 15:47:54 +0400;Add support for python-2.6

==

docs/source/installation/linux.rst
docs/source/installation/osx.rst
packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
powerline/__init__.py
powerline/bindings/vim/plugin/powerline.vim
powerline/lib/vcs/__init__.py
powerline/matcher.py
powerline/segment.py
powerline/segments/common.py
powerline/segments/vim.py
==================
9fd6302;ZyX;2013-03-03 00:34:23 +0400;Add support for python-3.2

==

powerline/renderer.py
powerline/segment.py
powerline/segments/common.py
powerline/segments/vim.py
powerline/theme.py
==================
de33eb8;ZyX;2013-03-02 19:31:42 +0400;Add _external_ip for use in weather segment

==

powerline/segments/common.py
==================
307dfd7;ZyX;2013-03-03 00:34:55 +0400;Improve documentation

==

docs/source/configuration.rst
docs/source/installation/linux.rst
docs/source/overview.rst
powerline/__init__.py
powerline/vim.py
==================
2f17510;ZyX;2013-02-27 00:58:45 +0400;Also use hl_iter in exception message
Ref #270

==

powerline/colorscheme.py
==================
f495c49;ZyX;2013-02-27 01:18:16 +0400;Remove obsolete highlight_group keys from configuration
They are no no-op for function segments, so don’t confuse users
==

powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/config_files/themes/vim/default.json
==================
16a5b78;ZyX;2013-02-27 01:06:11 +0400;Use exit_fail hl group for last_status segment
Fixes #270

==

powerline/segments/shell.py
==================
f346276;ZyX-I;2013-02-27 00:26:38 +0400;Fix minimal python versions
s/3\.2/3.3

==

powerline/bindings/vim/plugin/powerline.vim
==================
c2cf679;ZyX;2013-02-27 00:20:48 +0400;Do not throw away python stack trace
Errors when loading powerline fails are almost never giving any useful
information for debugging.

==

powerline/bindings/vim/plugin/powerline.vim
==================
a8ccfd4;ZyX;2013-02-26 07:35:08 +0400;Add ambiwidth problems information to troubleshooting section

==

docs/source/installation/osx.rst
docs/source/installation/troubleshooting-common.rst
==================
83f4236;ZyX;2013-02-27 00:14:24 +0400;Replace unicode() with u() in theme.py
Fixes #271

==

powerline/theme.py
==================
a4b7c31;Kim Silkebækken;2013-02-25 16:11:10 +0100;Move divider hl group to return dicts in weather segment
Fixes #264

==

powerline/segments/common.py
==================
9a7b5f2;Trey Hunner;2013-02-24 23:07:24 -0800;Use oldlace for visual mode foreground in vim
Fixes gh-261.
==

powerline/config_files/colorschemes/vim/solarized.json
==================
0dcd23f;Kim Silkebækken;2013-02-24 23:15:12 +0100;Fix syntax error in default tmux theme
Ref #150

==

powerline/config_files/themes/tmux/default.json
==================
af020d9;Otto Modinos;2013-02-24 21:27:59 +0200;Make vim visual block selection orange
Fixes #147

==

powerline/config_files/colorschemes/vim/default.json
==================
43d9639;Foo;2013-02-25 00:45:40 +0400;Fix zsh/zpython issue

==

docs/source/configuration.rst
powerline/bindings/zsh/__init__.py
powerline/colorscheme.py
powerline/lib/__init__.py
powerline/renderer.py
powerline/segment.py
scripts/powerline
==================
dfaf381;ZyX;2013-02-24 12:21:58 +0400;Fix various segment issues
- Fixed user segment (windows): there is no os.geteuid() here
- Fixed dir_limit_depth in cwd segment (it was not really accepting None
  value)
- Made paste_indicator not use getbufvar for global option
- Made file_size use buffer name for cache key
- Made a number of segments coerce returned integer values to strings
- Fixed modified_buffers (getbufvar() returns empty string for deleted buffers,
  but int() does not accept empty string)
- Fixed file_directory and file_name segments: they were not working in
  python-3.3 because str() object has no attribute decode()
- Made powerline.lib.vcs.git.Repository.status() always return 3-characters
  string
- Made it always check both for dirty index and dirty wt for all files
- Fixed binary prefix handling, renamed it to si_prefix

  Previously there was the following when binary_prefix was False:
      div = 1024
      unit = kB
  (unit is inconsistent with div).
  Now it is the following when si_prefix is False:
      div = 1024
      unit = KiB
  (according to https://en.wikipedia.org/wiki/Binary_prefix IEC prefix kibi is
  abbreviated as Ki, not ki (note the case)). This means that in segments prefixes
  has changed, but not displayed values.

==

powerline/lib/humanize_bytes.py
powerline/lib/vcs/git.py
powerline/segments/common.py
powerline/segments/vim.py
==================
168f485;ZyX;2013-02-24 13:37:50 +0400;Fix various flake8 errors

==

powerline/bindings/ipython/post_0_11.py
powerline/colorscheme.py
powerline/segments/common.py
powerline/segments/vim.py
==================
c8c7133;ZyX;2013-02-23 21:16:51 +0400;Use smoother gradient for true color

==

powerline/config_files/colors.json
==================
f319ddc;ZyX;2013-02-23 15:04:15 +0400;Ignore highlight definitions for function segments
Also removed divider_highlight_group from configuration: it is actually used
only in function segments.

Fixes #215

==

docs/source/configuration.rst
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/config_files/themes/tmux/default.json
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/wm/default.json
powerline/lib/__init__.py
powerline/renderer.py
powerline/segment.py
powerline/segments/common.py
powerline/segments/vim.py
==================
045d60f;ZyX;2013-02-23 14:22:44 +0400;Optimize cterm_to_hex
Dictionary is an overkill here. Tuple is faster. Also now the whole tuple can be
seen on the 1/4 of my screen (32x119 characters) and colors are easier to find
(useful only when seeking for normal color names).

Again, it would be goot to ignore flake8 in this case. Without comments it
complains about it is not easy to find requested color by hand

==

powerline/colorscheme.py
==================
d0fafe7;ZyX;2013-02-23 13:57:45 +0400;Replace non-color names with a bit more descriptive names

==

powerline/config_files/colors.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/wm/default.json
powerline/theme.py
==================
01b34a7;ZyX;2013-02-23 01:05:18 +0400;Split colorschemes and add better gradient support
- Splitted colorschemes into colors definitions file (TODO: remove non-colors
  definitions like weather_condition_hot and base00) and actual colorscheme.
- Removed dictionary containing groups definitions for all groups for all modes,
  now colorscheme is queried for this each time.
- Moved determination of colors from theme to renderer.
- Added gradients definitions (actually, only one) to new colors file.
- Made line_percent with gradient=True use new gradients.

==

docs/source/configuration.rst
powerline/__init__.py
powerline/colorscheme.py
powerline/config_files/colors.json
powerline/config_files/colorschemes/ipython/default.json
powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/shell/solarized.json
powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/vim/default.json
powerline/config_files/colorschemes/vim/solarized.json
powerline/config_files/colorschemes/wm/default.json
powerline/config_files/config.json
powerline/renderer.py
powerline/segment.py
powerline/segments/vim.py
powerline/theme.py
==================
b8b0518;ZyX;2013-02-23 00:49:48 +0400;Replace 'NONE' with None for guifg/guibg.
No need in having string keys if we are in any case checking this for equality
later instead of embedding them as-is like cterm*

==

powerline/renderers/vim.py
==================
41ffd8c;ZyX;2013-02-22 23:22:00 +0400;Rename colorscheme variable to colorscheme_config

==

powerline/colorscheme.py
==================
d9943e3;ZyX;2013-02-22 18:38:44 +0400;Fix various flake8 errors

==

powerline/bindings/zsh/__init__.py
powerline/lib/__init__.py
powerline/segment.py
powerline/shell.py
powerline/vim.py
==================
696cd97;ZyX;2013-02-20 00:06:09 +0400;Replace getfsize with os.stat

==

powerline/segments/vim.py
==================
f211bb6;ZyX;2013-02-18 20:11:45 +0400;Add ability to override configuration options
Related changes:
- Moved all non-ASCII symbols into `segment_data`
- Added --config_path, replaced nargs='*' with better action='append'
- Added g:powerline_config_path vim option
- Added ipython overrides (via additional arguments to setup() or c.Powerline)

TODO: support for non-string scalars in vim overrides.

Fixes #231

==

docs/source/configuration.rst
powerline/__init__.py
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/bindings/qtile/widget.py
powerline/bindings/vim/plugin/powerline.vim
powerline/bindings/zsh/__init__.py
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/config_files/themes/tmux/default.json
powerline/core.py
powerline/ipython.py
powerline/lib/__init__.py
powerline/matcher.py
powerline/shell.py
powerline/vim.py
scripts/powerline
==================
c86b047;ZyX;2013-02-18 09:23:40 +0400;Add ability to specify some segment keys once in top theme

==

docs/source/configuration.rst
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/vim/help.json
powerline/renderer.py
powerline/segment.py
powerline/theme.py
==================
186ad2d;ZyX;2013-02-18 08:31:00 +0400;Remove useless Segment class
It was used solely for Segment.get (the only place where it was used just saved
its .get() method, throwing away instance itself) and looks more like abusal of
the purpose of the classes

==

powerline/segment.py
powerline/theme.py
==================
2fa64c4;ZyX;2013-02-24 15:29:31 +0400;Move translation of modes into renderers/vim.py
Fixes #147
==

powerline/renderers/vim.py
powerline/segments/vim.py
==================
3c62e06;ZyX;2013-02-22 18:21:12 +0400;Don't use UUID for window IDs
This fix uses an incremented number instead.

Fixes #180

==

powerline/bindings/vim/plugin/powerline.vim
==================
861f7dc;ZyX;2013-02-20 20:57:44 +0400;Fix &stl reset to global value when new file is loaded
Fixes #241
Ref #240

==

powerline/bindings/vim/plugin/powerline.vim
==================
b347d53;Kim Silkebækken;2013-02-20 14:07:26 +0100;Remove obsolete Vundle warning from docs

==

docs/source/installation/linux.rst
docs/source/installation/osx.rst
==================
282cb43;Kim Silkebækken;2013-02-20 13:47:54 +0100;Fix various minor formatting issues
Closes #242.

==

powerline/bindings/ipython/pre_0_11.py
powerline/colorscheme.py
powerline/lib/vcs/__init__.py
powerline/renderer.py
powerline/renderers/shell.py
powerline/segments/common.py
powerline/segments/vim.py
powerline/theme.py
setup.py
==================
ee51b8b;Martin Preisler;2013-02-19 21:11:28 +0100;Handle non-existant CWDs gracefully

==

powerline/segments/common.py
==================
e14f5e4;ZyX;2013-02-20 00:26:59 +0400;Fix problem with wrong window ID/winnr after some window operations
Removed autocommands as well. Powerline() function is now responsible both for
displaying powerline and for updating statuslines. No cmdwin events not
triggered workaround nonsense anymore.

Fixes #237
Fixes #236
Fixes #222
Fixes #232

==

powerline/bindings/vim/plugin/powerline.vim
powerline/renderers/vim.py
==================
ea56f4c;Kim Silkebækken;2013-02-18 19:38:42 +0100;Split optional dependencies to python packages and other apps
Closes #227.

==

docs/source/overview.rst
==================
baaf6cd;ZyX;2013-02-16 02:04:39 +0400;Switch from `status` + `ls-files` to `status --ignored`

==

docs/source/overview.rst
powerline/lib/vcs/git.py
==================
b8b7cfb;ZyX;2013-02-16 02:12:23 +0400;Fix icon_names for unknown weather code

==

powerline/segments/common.py
==================
2a3911d;ZyX;2013-02-16 01:47:41 +0400;Make spaces around the divider configurable
Fixes #225

==

powerline/config_files/config.json
powerline/renderer.py
powerline/theme.py
==================
6fc7d6a;ZyX;2013-02-14 22:40:08 +0400;Purge cache on BufWrite
Instead of much simpler solution define an API that may be used for anybody
willing to add cache purging on events with a few keystrokes

==

powerline/bindings/vim/plugin/powerline.vim
powerline/lib/memoize.py
powerline/segments/vim.py
==================
c45747a;ZyX;2013-02-15 21:06:08 +0400;Ease E858/E860 errors debugging
E858: Eval did not return a valid python object
E860: Eval did not return a valid python 3 object
==

docs/source/installation/troubleshooting-common.rst
powerline/bindings/vim/plugin/powerline.vim
==================
df7d0f2;ZyX;2013-02-15 08:30:07 +0400;Remove 'before' key from file_vcs_status segment
Fixes #219

==

powerline/config_files/themes/vim/default.json
powerline/segments/vim.py
powerline/theme.py
==================
0fddb24;ZyX;2013-02-12 23:59:45 +0400;Rework memoize class
- Removed *args: segments are not receiveing any non-keyword arguments so no
  need to bother with *args at all.
- Replaced additional_cache_key with cache_key: all functions that formerly used
  additional_cache_key appear not to need initial arguments as cache keys. It
  also simplifies the code.
- Made _cache be defined in __init__, it is much easier to implement cache
  purging this way.

Ref #205
Fixes #208

==

powerline/lib/memoize.py
powerline/segments/common.py
powerline/segments/vim.py
==================
5202807;Kim Silkebækken;2013-02-15 12:45:52 +0100;Make Spotify segment more error-proof

==

powerline/segments/common.py
==================
ca4466c;ZyX;2013-02-13 09:15:10 +0400;Rework weather segment
Allows more precise icon selection and purges out unicode characters from
configuration.

Note: windy icon needs reworking, I used a trigram for it.

Fixes #203.

==

powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/wm/default.json
powerline/segments/common.py
==================
9aee288;Kim Silkebækken;2013-02-12 10:52:17 +0100;Use requires_segment_info decorator on shell segments

==

powerline/segments/shell.py
==================
e89e083;Kim Silkebækken;2013-02-12 10:45:24 +0100;Don't use kwargs as part of the memoize key
This should be fixed later (if at all possible). Also see discussion at
http://stackoverflow.com/questions/6407993/how-to-memoize-kwargs

Refs #205.

==

powerline/lib/memoize.py
==================
d638f1d;ZyX;2013-02-11 22:10:09 +0400;Remove non-current window caching
API changes done:
- memoize additional_key function now accepts all function arguments
- get_theme now receives matcher_info
- render now receives segment_info and matcher_info, but segments and themes
  were removed
- due to very different ways of obtaining column information col_current
  splitted back to col_current and virtcol_current. The former should be false
  in case of horizontal scrollbind (when &scrollopt contains hor)
- added requires_segment_info decorator for convenience

Other changes:
- removed all vim function calls that were possible to remove
- removed direct vim.eval calls

==

powerline/bindings/vim/__init__.py
powerline/bindings/vim/plugin/powerline.vim
powerline/config_files/themes/vim/default.json
powerline/lib/memoize.py
powerline/matchers/vim.py
powerline/renderer.py
powerline/renderers/vim.py
powerline/segments/vim.py
powerline/theme.py
==================
cc83d74;Kim Silkebækken;2013-02-11 13:08:27 +0100;Create fuzzy_time segment

==

powerline/segments/common.py
==================
e48645f;Kim Silkebækken;2013-02-11 07:23:33 +0100;Move urllib_read/urlencode functions to lib

==

powerline/lib/__init__.py
powerline/lib/url.py
powerline/segments/common.py
==================
d961116;Kim Silkebækken;2013-02-11 07:20:39 +0100;Move weather condition codes into weather function

==

powerline/segments/common.py
==================
2854793;ZyX;2013-02-11 08:47:41 +0400;Add screen_escape option
Refs #199.

==

powerline/renderers/shell.py
==================
d12299c;ZyX;2013-02-11 08:37:58 +0400;Add a way to specify renderer options on command-line, added tmux_escape
Note: tmux escaping does not fix things, on my system it produces
![Gap between ... and directory name](http://img-fotki.yandex.ru/get/6439/9151298.2/0_93b4c_5d9a317f_orig.png)
Fixes #199

==

powerline/core.py
powerline/renderer.py
powerline/renderers/shell.py
scripts/powerline
==================
52635d0;ZyX;2013-02-11 07:50:23 +0400;Add support for italic and underline attributes in shell renderer

==

powerline/renderers/shell.py
==================
e18665c;ZyX;2013-02-11 07:43:13 +0400;Purge out constants from classes, lowercase TERM_24_BIT
Remove recursive import as well
==

powerline/colorscheme.py
powerline/renderer.py
powerline/renderers/pango_markup.py
powerline/renderers/shell.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
==================
21b5914;Kim Silkebækken;2013-02-10 14:04:07 +0100;Move docs to readthedocs.org

==

README.rst
packages/archlinux/python-powerline-git/powerline.install
packages/archlinux/python2-powerline-git/powerline.install
==================
2d9dd21;ZyX;2013-02-09 22:27:34 +0400;Add auto_rewrite method to pre_0_11
It raises error without this.

==

powerline/bindings/ipython/pre_0_11.py
==================
d414a7e;ZyX;2013-02-10 12:58:47 +0400;Add more USE flags to gentoo ebuild

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
==================
da5ac61;ZyX;2013-02-10 11:26:11 +0400;Fix location of powerline.vim file
rm is uncommented because there is no “source_plugin” now.

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
==================
9a0b970;ZyX;2013-02-10 11:15:33 +0400;Clear highlight groups on ColorScheme event
Closes #196
Fixes #153
Fixes #194

==

powerline/bindings/vim/plugin/powerline.vim
powerline/renderers/vim.py
==================
4202bd2;ZyX;2013-02-09 22:23:15 +0400;Use escape_hl_* variables for prompts deriving from ShellRenderer
This is faster then super() calls and also more convenient.
Fixes #142 just as well
Conflicts:
	powerline/renderers/bash_prompt.py
	powerline/renderers/ipython.py
	powerline/renderers/shell.py
	powerline/renderers/zsh_prompt.py

==

powerline/renderers/bash_prompt.py
powerline/renderers/ipython.py
powerline/renderers/shell.py
powerline/renderers/zsh_prompt.py
==================
a6b3bc9;ZyX;2013-02-09 22:13:09 +0400;Don’t mess with hl()+contents
What does hl() mean? It looks like “highlight an empty string”, but is actually
“reset highlight style”. In addition if you are writing “hl()” function for new
renderer you need to care about “contents” variable (in two places!: None for
super() call and (contents or u'') after super() call) though function is
actually doing nothing with it. It is just inconvenient.

==

powerline/renderer.py
powerline/renderers/bash_prompt.py
powerline/renderers/ipython.py
powerline/renderers/pango_markup.py
powerline/renderers/shell.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/renderers/zsh_prompt.py
==================
2caa136;Kim Silkebækken;2013-02-08 17:33:04 +0100;Add docs for all segments

==

docs/source/index.rst
docs/source/segments/common.rst
docs/source/segments/shell.rst
docs/source/segments/vim.rst
powerline/segments/common.py
powerline/segments/shell.py
powerline/segments/vim.py
==================
b599761;Kim Silkebækken;2013-02-08 17:33:54 +0100;Work around missing vim module when generating sphinx docs
Horrible solution, should be fixed asap.

==

powerline/bindings/vim/__init__.py
powerline/segments/vim.py
==================
55ad48f;Kim Silkebækken;2013-02-08 17:32:23 +0100;Update sphinx configuration

==

docs/source/conf.py
==================
6dc81ab;Kim Silkebækken;2013-02-08 17:13:37 +0100;Use functools.wraps on memoize decorator

==

powerline/lib/memoize.py
==================
d386ae7;Kim Silkebækken;2013-02-08 16:20:26 +0100;Add modified_buffers segment
This segment returns a comma-separated list of modified buffers. The
segment is not enabled by default.

Closes #173.

==

powerline/config_files/colorschemes/vim/default.json
powerline/segments/vim.py
==================
5399265;ZyX;2013-02-07 21:58:18 +0400;Add note about zpython branch
TODO: To be removed after (if) zsh maintainers accept the patch.

Refs #104.

==

docs/source/overview.rst
==================
907e859;Kim Silkebækken;2013-02-08 14:40:41 +0100;Fix vim plugin path in Arch Linux packages

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
323a838;Kim Silkebækken;2013-02-07 13:48:36 +0100;Fix math error in humanize_bytes
Closes #175.

==

powerline/lib/humanize_bytes.py
==================
4e4a2b2;Kim Silkebækken;2013-02-07 12:32:34 +0100;Add tips & tricks to the docs
Closes #182.

==

docs/source/index.rst
docs/source/tipstricks.rst
==================
8b8de32;Kim Silkebækken;2013-02-07 11:42:10 +0100;Improve vim plugin loading
Several of the plugin loading methods have been joined into one plugin
file that will be loaded by updating the runtimepath. More informative
error messages will be displayed if Python support is missing or if the
module import fails.

Note that this commit will break existing plugin loading, the new
method with updating the runtimepath will be required.

Closes #156.
Closes #181.

==

docs/source/overview.rst
powerline/bindings/vim/__init__.py
powerline/bindings/vim/plugin/powerline.vim
powerline/bindings/vim/plugin/source_plugin.vim
powerline/bindings/vim/powerline.vim
==================
c2e7124;Kim Silkebækken;2013-02-06 13:18:49 +0100;Fix statusline highlighting after leaving a cmdwin
Because vim doesn't trigger any autocmds after leaving a cmdwin the
statusline in the window the user returned to from the cmdwin would be
highlighted as non-current even if it should have been current.

This issue is resolved by storing the last current window ID in a script
variable, and when leaving the cmdwin we show the last current window as
current instead of detecting it after the WinEnter autocmd has been
triggered (which doesn't happen after leaving a cmdwin).

Closes #184.

==

powerline/bindings/vim/powerline.vim
==================
2e5b938;ZyX;2013-02-06 08:34:35 +0400;Properly escape color codes in bash
Closes #177.
Closes #179.

==

powerline/bindings/bash/powerline.sh
powerline/renderers/bash_prompt.py
==================
4fa17f6;Kim Silkebækken;2013-02-06 09:10:40 +0100;Catch more errors in weather segment

==

powerline/segments/common.py
==================
9a95d73;Kim Silkebækken;2013-02-06 09:09:18 +0100;Fix e-mail segment UTF-8 issues
Closes #178.

==

powerline/segments/common.py
==================
c8d4e58;Kim Silkebækken;2013-02-06 08:59:53 +0100;Add repository_status vim segment
Split segment highlighting compared to the file_vcs_status segment is
missing.

Refs #173.

==

powerline/segments/vim.py
==================
5cc265a;Kim Silkebækken;2013-02-06 08:56:18 +0100;Fix repo.status() functions

==

powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
==================
e3ce4ad;Kim Silkebækken;2013-02-06 08:51:55 +0100;Fix UTF-8 encoding issue with weather segment
Closes #172.

==

powerline/segments/common.py
==================
56e661b;Kim Silkebækken;2013-02-06 08:51:47 +0100;Handle more request errors in common segments

==

powerline/segments/common.py
==================
184dac1;Kim Silkebækken;2013-02-05 13:48:33 +0100;Add solarized support for shell exit status segments
Closes #165.

==

powerline/config_files/colorschemes/shell/solarized.json
==================
6f69322;ZyX;2013-01-28 22:53:06 +0400;Add support for zsh/zpython
Closes #163.

==

powerline/bindings/zsh/__init__.py
powerline/bindings/zsh/powerline.zsh
==================
b99e9cb;Kim Silkebækken;2013-02-04 13:04:17 +0100;Revert "Make 'powerline' a namespace package"
This reverts commit 57bd0af2721bf5ad18b512f347d6a08468ce0767.

==

powerline/__init__.py
setup.py
==================
7a25ab1;ZyX;2013-02-04 00:19:04 +0400;Fix “'NoneType' object is not iterable” error
Fixes #158
==

powerline/renderers/vim.py
==================
57bd0af;Kim Silkebækken;2013-02-03 16:27:30 +0100;Make 'powerline' a namespace package
This will allow third-party plugins to use the 'powerline' namespace for
contributed segments.

Refs #3.

==

powerline/__init__.py
setup.py
==================
7e14a84;Kim Silkebækken;2013-02-01 22:33:28 +0100;Add cmus player to now_playing segment
Closes #162.

==

powerline/segments/common.py
==================
def7a1e;Kim Silkebækken;2013-02-01 22:33:24 +0100;Update now_playing methods to use common formatting methods

==

powerline/segments/common.py
==================
e8ebb07;Kim Silkebækken;2013-02-01 22:33:07 +0100;Add common player conversion methods

==

powerline/segments/common.py
==================
ea32006;Kim Silkebækken;2013-02-01 22:32:39 +0100;Fix Unicode issues with mail segment

==

powerline/segments/common.py
==================
4cda38e;Kim Silkebækken;2013-02-01 22:01:53 +0100;Remove support for persistent memoization
A different form of persistent memoization should be reimplemented later.

Refs #159.

==

powerline/lib/memoize.py
powerline/segments/common.py
==================
260e40a;Kim Silkebækken;2013-02-01 16:42:46 +0100;Replace spaces *before* highlighting contents
The previous change obviously didn't work for renderers like the Pango
markup renderer since the highlighting code uses regular spaces and not
no-break spaces. Now spaces are replaced in the contents and dividers
only, and it's done before highlighting the segment so the added
highlighting code stays untouched.

Refs #113.

==

powerline/renderer.py
==================
bfdb7f8;Kim Silkebækken;2013-02-01 16:06:43 +0100;Refactor segment rendering
This commit introduces the following changes to themes and segment
rendering:

- Spacer segments are now regular string/function type segments with
  "width": "auto" in the themes.
- The "rjust"/"ljust" properties have been replaced by the "width"
  option combined with a new "align" option.
- Renderer._render_segments() is now a generator which renders each
  segment separately, and assigns the rendered contents to
  "_rendered_hl" and "_rendered_raw" in the segment dict.
- Renderer.render() returns the segments by joining the "_rendered_hl"
  values for each segment.
- Spacer segment widths are calculated in the render() method, and
  assigned to "_space_left" and "_space_right" in the segment dict.
  These spaces are then applied in Renderer._render_segments().
- All space characters are converted to no-break spaces (U+00A0) in the
  "_rendered_hl" property.

Refs #113.
Refs #154.

==

docs/source/configuration.rst
powerline/config_files/themes/vim/cmdwin.json
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/vim/help.json
powerline/renderer.py
powerline/renderers/vim.py
powerline/segment.py
powerline/theme.py
==================
cb860ce;Gaurav Narula;2013-01-31 17:55:18 +0530;Add Rhythmbox to now_playing segment
Closes #155.

==

powerline/segments/common.py
==================
0ad417c;Kim Silkebækken;2013-01-31 10:53:33 +0100;Refactor now_playing segment slightly

==

powerline/segments/common.py
==================
5f9b8d5;Kim Silkebækken;2013-01-31 10:34:40 +0100;Swap quotes in email_alert segment

==

powerline/segments/common.py
==================
91c143b;Kim Silkebækken;2013-01-31 10:34:23 +0100;Update Arch Linux PKGBUILDs

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
7fb67e7;Kim Silkebækken;2013-01-31 10:12:05 +0100;Create now playing segment
The segment currently provides info from mpd or Spotify.

==

powerline/segments/common.py
==================
fd5cd92;Kim Silkebækken;2013-01-31 07:51:09 +0100;Fix rendering of dividers without custom highlight group

==

powerline/renderer.py
==================
7022b47;Kim Silkebækken;2013-01-30 10:53:28 +0100;Fix updating issue with Qtile widget

==

powerline/bindings/qtile/widget.py
==================
597f67b;Kim Silkebækken;2013-01-30 10:35:01 +0100;Add Qtile widget

==

docs/source/overview.rst
powerline/bindings/qtile/__init__.py
powerline/bindings/qtile/widget.py
==================
fb929b7;Kim Silkebækken;2013-01-30 09:52:22 +0100;Fix vim matcher string comparison
Refs 2f361711febaa822e4eb221f809b710cd650bf5b.

==

powerline/matchers/vim.py
==================
cc9b0da;Kim Silkebækken;2013-01-30 09:44:19 +0100;Pad powerline segments with no-break spaces
Some applications using Pango and/or Cairo draw square unknown character
glyphs next to divider glyphs instead of regular spaces. Non-breaking
spaces resolves this issue, and they are probably more correct to use
(no application should break lines at the padding spaces since they
"glue" the segment and dividers together as one unit).

This commit appears to work fine in all supported applications on Linux.

This commit resolves the gvim font rendering problems mentioned in
issue #113.

==

powerline/renderer.py
==================
fb7a0d4;Kim Silkebækken;2013-01-30 09:41:09 +0100;Rename AwesomeRenderer to PangoMarkupRenderer
Awesome WM uses the Pango Text Attribute Markup Language
(http://developer.gnome.org/pango/stable/PangoMarkupFormat.html), and
since other applications and window managers may use the same markup
language it's better to have a common renderer for this markup language.

==

powerline/bindings/awesome/powerline.sh
powerline/renderers/awesome.py
powerline/renderers/pango_markup.py
==================
1f9741b;Kim Silkebækken;2013-01-29 13:47:13 +0100;Move awesome theme to generic WM theme

==

powerline/bindings/awesome/powerline.sh
powerline/config_files/colorschemes/awesome/default.json
powerline/config_files/colorschemes/wm/default.json
powerline/config_files/config.json
powerline/config_files/themes/awesome/default.json
powerline/config_files/themes/wm/default.json
==================
b918057;Kim Silkebækken;2013-01-29 11:57:31 +0100;Use timedelta.total_seconds() to fetch seconds in uptime segment
Closes #143.

==

powerline/segments/common.py
==================
59c316c;Kim Silkebækken;2013-01-29 08:58:44 +0100;Remove percent placeholder from vim help theme

==

powerline/config_files/themes/vim/help.json
==================
2f36171;Kim Silkebækken;2013-01-29 08:58:22 +0100;Add cmdwin statusline for vim

==

powerline/bindings/vim/powerline.vim
powerline/config_files/config.json
powerline/config_files/themes/vim/cmdwin.json
powerline/matchers/vim.py
==================
2979325;Kim Silkebækken;2013-01-28 17:29:02 +0100;Improve argument handling in powerline script
Modules can now be any string, and an informative error message will be
written to sys.stdout if the module doesn't exist. The
`last_pipe_status` argument will also automatically be split into
a list.

==

powerline/segments/shell.py
scripts/powerline
==================
5db6f47;Kim Silkebækken;2013-01-28 17:28:00 +0100;Catch ImportErrors when importing renderer module

==

powerline/core.py
==================
52a52c8;Kim Silkebækken;2013-01-28 14:09:51 +0100;Hide e-mail alert segment if there are no unseen e-mails

==

powerline/segments/common.py
==================
f8d6f53;Kim Silkebækken;2013-01-28 14:06:19 +0100;Don't check for mail if username or password is missing

==

powerline/segments/common.py
==================
3f2ce0a;Kim Silkebækken;2013-01-28 14:02:03 +0100;Catch the correct imaplib exception

==

powerline/segments/common.py
==================
a360015;Kim Silkebækken;2013-01-28 13:55:45 +0100;Add a quick setup guide to the docs

==

docs/source/configuration.rst
==================
8c003c2;Kim Silkebækken;2013-01-28 13:55:36 +0100;Add e-mail alert segment

==

powerline/config_files/colorschemes/awesome/default.json
powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/themes/awesome/default.json
powerline/config_files/themes/tmux/default.json
powerline/segments/common.py
==================
bda7384;Kim Silkebækken;2013-01-28 12:30:11 +0100;Add Awesome WM widget

==

docs/source/overview.rst
powerline/bindings/awesome/powerline.lua
powerline/bindings/awesome/powerline.sh
powerline/config_files/colorschemes/awesome/default.json
powerline/config_files/config.json
powerline/config_files/themes/awesome/default.json
powerline/renderers/awesome.py
==================
1e4c361;Kim Silkebækken;2013-01-28 11:51:26 +0100;Pass segment contents to renderer hl() methods
This allows the hl() methods to wrap highlighting code *around* the
segment contents, this is required for e.g. Pango markup in Awesome
statuslines (segments must be wrapped in <span ...>...</span> tags).

==

powerline/renderer.py
powerline/renderers/shell.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/renderers/zsh_prompt.py
==================
7a1d7ec;Kim Silkebækken;2013-01-28 07:40:42 +0100;Add width argument to shell script

==

scripts/powerline
==================
091400c;Kim Silkebækken;2013-01-28 07:09:22 +0100;Join tmux/prompt shell scripts into one common script

==

powerline/bindings/bash/powerline.sh
powerline/bindings/tmux/powerline.conf
powerline/bindings/zsh/powerline.zsh
scripts/powerline
scripts/powerline-prompt
scripts/powerline-tmux
setup.py
==================
57876a8;Kim Silkebækken;2013-01-28 06:54:38 +0100;Make highlight_group optional if set in segment function

==

powerline/segment.py
powerline/theme.py
==================
17639a9;ZyX;2013-01-26 18:36:39 +0400;Add last_status and last_pipe_status segments

==

powerline/config_files/colorschemes/shell/default.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/core.py
powerline/segments/shell.py
powerline/theme.py
scripts/powerline-prompt
==================
c566064;ZyX;2013-01-25 22:41:07 +0400;Add setopt promptpercent and promptsubst
These options are required for Powerline to work in zsh, but the latter
is off by default.

==

powerline/bindings/zsh/powerline.zsh
==================
45882f9;ZyX;2013-01-25 22:38:36 +0400;Restore export as it makes sense in bash
Bash has weird initialization: bashrc is sourced in non-login
interactive shell, but not in login interactive shell; profile is
sourced in login interactive shell, but not in non-login interactive,
thus exporting in profile does make sense. In zsh case zshrc is always
sourced when shell is interactive and exporting thus makes no sense.

==

powerline/bindings/bash/powerline.sh
==================
8dd5aeb;ZyX;2013-01-25 22:36:48 +0400;Remove "$()" method in pre-prompt hook
Using "$()" method on pre-prompt hook is just asking for security
trouble.

==

powerline/bindings/bash/powerline.sh
powerline/renderers/shell.py
powerline/renderers/zsh_prompt.py
==================
99158e3;ZyX;2013-01-25 22:25:11 +0400;Fix zsh prompt security and other issues
* Escape percent in zsh prompt
* Prevent some security issues (directory named `$(echo abc)` appeared as `abc`)
    (`"$()"` → `'$()'`)
* Removed exports

==

powerline/bindings/zsh/powerline.zsh
powerline/renderers/zsh_prompt.py
==================
d20df5a;ZyX;2013-01-25 22:08:11 +0400;Remove placeholder and use escaping instead

==

powerline/renderer.py
powerline/renderers/vim.py
==================
a42f9b6;Kim Silkebækken;2013-01-28 06:36:52 +0100;Add output_raw argument to Renderer.render() method
Update all ipython modules to use it to get unhighlighted prompt

Conflicts:
	powerline/renderers/ipython.py

==

powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/renderer.py
powerline/renderers/ipython.py
==================
0b25142;ZyX;2013-01-24 22:36:46 +0400;Add IPython prompt support

==

docs/source/overview.rst
powerline/bindings/ipython/__init__.py
powerline/bindings/ipython/post_0_11.py
powerline/bindings/ipython/pre_0_11.py
powerline/config_files/colorschemes/ipython/default.json
powerline/config_files/config.json
powerline/config_files/themes/ipython/default.json
powerline/renderers/ipython.py
==================
98269a4;Kim Silkebækken;2013-01-27 17:42:11 +0100;Handle more KeyErrors in common weather segment

==

powerline/segments/common.py
==================
d6da2c8;Kim Silkebækken;2013-01-27 17:40:02 +0100;Reset memoize cache if unable to unpickle
This is usually due to the cache being stored with Python 3 and then
attempted to being loaded in Python 2 which raises a ValueError.

Closes #138.

==

powerline/lib/memoize.py
==================
38195f4;Kim Silkebækken;2013-01-25 17:30:20 +0100;Handle KeyErrors in common weather segment
If the query doesn't return valid weather information (e.g. if the
location query is invalid) it will return an empty weather segment.

Closes #128.

==

powerline/segments/common.py
==================
1564e33;Kim Silkebækken;2013-01-25 14:52:43 +0100;Remove percent placeholder from themes
The vim renderer now handles searching and replacing of the percent
placeholder internally so percent signs can be used directly in themes
and segments instead of the percent placeholder.

Refs #127.

==

powerline/config_files/themes/vim/default.json
powerline/renderers/vim.py
==================
0dd3393;Sven Strothoff;2013-01-25 13:38:34 +0100;Replace old line number character
themes/vim/help.json still used the line number character from
vim-powerline.

==

powerline/config_files/themes/vim/help.json
==================
147c96a;Kim Silkebækken;2013-01-25 11:50:26 +0100;Add Solarized Dark shell colorscheme

==

powerline/config_files/colorschemes/shell/solarized.json
==================
186c99f;Kim Silkebækken;2013-01-25 11:41:56 +0100;Add Solarized Dark colorscheme
Closes #124.

==

powerline/config_files/colorschemes/vim/solarized.json
==================
c06f883;Kim Silkebækken;2013-01-25 10:48:44 +0100;Update docs and create a common terminal feature support matrix

==

docs/source/configuration.rst
docs/source/installation/linux.rst
docs/source/installation/osx.rst
docs/source/overview.rst
==================
16b82cf;Kim Silkebækken;2013-01-25 10:01:30 +0100;Add configuration option and docs for 24-bit terminal colors
Closes #81.

==

docs/source/configuration.rst
powerline/config_files/config.json
powerline/core.py
powerline/renderer.py
powerline/renderers/shell.py
==================
9985ca5;Kim Silkebækken;2013-01-25 09:44:31 +0100;Add hex colors for vim gradient

==

powerline/config_files/colorschemes/vim/default.json
==================
cfe96ff;Kim Silkebækken;2013-01-25 09:40:07 +0100;Fix minor doc issues

==

docs/source/configuration.rst
docs/source/fontpatching.rst
==================
e49f760;Kim Silkebækken;2013-01-25 09:37:03 +0100;Use hex strings for RGB colors in colorschemes
Previously you'd have to convert a hex number to an integer, this change
makes it possible to use a hex string instead which is much more useful.

==

docs/source/configuration.rst
powerline/colorscheme.py
==================
6ac9f0d;Kim Silkebækken;2013-01-24 17:35:16 +0100;Restructure and improve installation docs
The installation docs have been split into separate guides for OS X and
Linux, with OS-specific troubleshooting as part of the installation
guide.

Terminal emulator support tables have been added to both guides.

Closes #121.

==

docs/source/_static/img/icons/cross.png
docs/source/_static/img/icons/error.png
docs/source/_static/img/icons/tick.png
docs/source/index.rst
docs/source/installation/linux.rst
docs/source/installation/osx.rst
docs/source/installation/troubleshooting-common.rst
docs/source/overview.rst
docs/source/troubleshooting.rst
==================
a873098;Kim Silkebækken;2013-01-24 17:21:46 +0100;Add parameter for home dir shortening
Closes #115.

==

powerline/segments/vim.py
==================
cefa7ef;Kim Silkebækken;2013-01-24 12:35:58 +0100;Add file_size segment for vim
Closes #118.

==

powerline/config_files/colorschemes/vim/default.json
powerline/segments/vim.py
==================
5d5841c;Kim Silkebækken;2013-01-24 12:17:25 +0100;Fix vim file_directory segment
Closes #117.
Closes #119.

==

powerline/segments/vim.py
==================
9282bf6;Kim Silkebækken;2013-01-24 08:00:18 +0100;Add package conflicts to Arch Linux PKGBUILDs

==

packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/PKGBUILD
==================
0d2056a;Daniel Hahler;2013-01-23 23:45:16 +0100;Shorten /home/foo/ to ~foo in vim file directory segment
Replace "/home/foo/" with "~foo" (foo's home, not current user's).
This shortens paths like /home/www-data/foo/.

Closes #115.

==

powerline/segments/vim.py
==================
bacb260;Kim Silkebækken;2013-01-24 08:21:44 +0100;Revert "Remove Ubuntu Mono from fontconfig file"
This reverts commit b57174a16cb41ad60abf04dc71c92fb7102c673b.

Closes #113.

==

font/10-powerline-symbols.conf
==================
2d6ee26;Kim Silkebækken;2013-01-23 23:27:13 +0100;Add 24-bit color support for shell renderers
Refs #81.

==

powerline/renderer.py
powerline/renderers/shell.py
==================
b86f79c;Kim Silkebækken;2013-01-23 10:24:07 +0100;Restructure docs slightly
The header levels have been switched to correspond more with the Sphinx
suggested standards and the troubleshooting section has been
restructured to make it easier to find solutions. Minor markup changes
and other changes are also included in this commit.

==

docs/source/configuration.rst
docs/source/fontpatching.rst
docs/source/index.rst
docs/source/introduction.rst
docs/source/license-credits.rst
docs/source/overview.rst
docs/source/troubleshooting.rst
==================
40d542a;Kim Silkebækken;2013-01-23 09:56:58 +0100;Add troubleshooting info for PuTTy users
Refs #107.

==

docs/source/troubleshooting.rst
==================
b620d3a;Kim Silkebækken;2013-01-23 08:27:44 +0100;Split Arch Linux packages into Python 2/3 variants

==

packages/archlinux/.gitignore
packages/archlinux/PKGBUILD
packages/archlinux/powerline.install
packages/archlinux/python-powerline-git/.gitignore
packages/archlinux/python-powerline-git/PKGBUILD
packages/archlinux/python-powerline-git/powerline.install
packages/archlinux/python2-powerline-git/.gitignore
packages/archlinux/python2-powerline-git/PKGBUILD
packages/archlinux/python2-powerline-git/powerline.install
==================
bf3d2e8;Kim Silkebækken;2013-01-23 07:38:52 +0100;Include bindings in package
Closes #109.

==

MANIFEST.in
==================
da6dea7;Kim Silkebækken;2013-01-23 07:24:33 +0100;Fix Unicode encoding issue
Closes #108.

==

powerline/segments/common.py
==================
2a9edc1;Kim Silkebækken;2013-01-22 18:50:37 +0100;Update troubleshooting info for ImportErrors on OS X
Refs #39.
Refs #95.

==

docs/source/troubleshooting.rst
==================
fd98313;ZyX;2013-01-22 21:15:30 +0400;Use elog in place of einfo
Otherwise message is not repeated at the end of building process and thus is
likely to be missed by user.

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
==================
7723727;Kim Silkebækken;2013-01-22 18:24:19 +0100;Update Arch Linux PKGBUILD

==

packages/archlinux/PKGBUILD
packages/archlinux/powerline.install
==================
a462f1e;ZyX;2013-01-22 20:59:21 +0400;Add zsh USE flag and information about Python 3.3 compatibility

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
==================
f4a95fb;ZyX;2013-01-22 20:51:26 +0400;Rename prompt.* to powerline.*
Reasons:
- prompt.* is a bad name for installing into /usr/share/zsh/site-contrib
- prompt.* does not conform powerline.vim and powerline.conf (vim and tmux)
==

docs/source/overview.rst
powerline/bindings/bash/powerline.sh
powerline/bindings/bash/prompt.sh
powerline/bindings/zsh/powerline.zsh
powerline/bindings/zsh/prompt.zsh
==================
0cb2182;Kim Silkebækken;2013-01-22 17:26:01 +0100;Update installation instructions for tmux and shell prompts

==

docs/source/overview.rst
==================
c818e7c;Kim Silkebækken;2013-01-22 17:20:58 +0100;Install source_plugin.vim in Arch Linux PKGBUILD

==

packages/archlinux/PKGBUILD
==================
51c302a;Kim Silkebækken;2013-01-22 17:14:45 +0100;Revert to previous way of sourcing vim plugin
Refs #95.

==

powerline/bindings/vim/plugin/source_plugin.vim
==================
0d39dd5;ZyX;2013-01-22 19:45:56 +0400;Add installation of powerline.vim into /usr/share/vim/vimfiles/plugin

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
==================
6bc13b8;ZyX;2013-01-22 19:41:28 +0400;Make g:powerline_* variables fixed*, added g:powerline_loaded
The latter is required to be able to forbid sourcing powerline.vim

* changes are ignored until script is resourced

==

powerline/bindings/vim/powerline.vim
==================
f175a6b;Kim Silkebækken;2013-01-22 16:45:24 +0100;Fix issue with $pipestatus
$pipestatus is a space-separated int list and not a single int.

==

powerline/bindings/zsh/prompt.zsh
scripts/powerline-prompt
==================
8f05547;Kim Silkebækken;2013-01-22 16:36:50 +0100;Update tmux theme and add sourceable config file
The tmux theme has been updated and now matches the other themes much
better. It may still look a little boring and segment cropping isn't
enabled, but it's a good starting point. It colors the weather segment
differently based on the current weather and temperature, and some other
segment colors have been tweaked.

To enable the theme, add the following to your tmux.conf:

    source '/full/path/to/powerline/bindings/tmux/powerline.conf'

Closes #51.

==

powerline/bindings/tmux/powerline.conf
powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/tmux/default.json
powerline/segments/common.py
==================
9676067;Kim Silkebækken;2013-01-22 14:59:07 +0100;Add "e" symbol before virtualenv prompt segment

==

powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
==================
7c19381;Kim Silkebækken;2013-01-22 14:23:21 +0100;Update optional dependency list

==

docs/source/overview.rst
==================
504e212;Kim Silkebækken;2013-01-22 14:19:04 +0100;Add common virtualenv segment

==

powerline/config_files/colorschemes/shell/default.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/segments/common.py
==================
35de8a1;Kim Silkebækken;2013-01-22 14:09:02 +0100;Fix common cwd segment for absolute paths

==

powerline/segments/common.py
==================
c5df2fc;Kim Silkebækken;2013-01-22 13:57:33 +0100;Create awesome looking prompt with divided cwd
This is inspired by the look of powerline-shell:
https://github.com/milkbikis/powerline-shell

==

powerline/config_files/colorschemes/shell/default.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/shell/default_leftonly.json
powerline/segments/common.py
==================
a023f4a;Kim Silkebækken;2013-01-22 13:45:03 +0100;Add bash prompt script for sourcing in bashrc
This only displays the left part of the prompt. It requires the
left-only theme to be able to display all segments.

The script must be sourced with an absolute path for now:

    . /path/to/powerline/bindings/bash/prompt.sh

Closes #90.

==

powerline/bindings/bash/prompt.sh
==================
9035ec7;Kim Silkebækken;2013-01-22 13:36:40 +0100;Add left-only shell theme
This is useful for bash prompts since bash doesn't support RPS1. This
theme must be manually enabled by editing the user config file.

Closes #84.

==

powerline/config_files/themes/shell/default_leftonly.json
==================
487aef3;Kim Silkebækken;2013-01-22 13:25:01 +0100;Add zsh prompt script for sourcing in zshrc
This script sets a couple of environment variables in tmux if it's
running, and provides the last exit code and last pipe status to
powerline-prompt. It also traps SIGWINCH and sets the window width as an
env variable in tmux. The default prompt has been split in two and the
git branch is moved to RPS1.

The script must be sourced with an absolute path for now:

    . /path/to/powerline/bindings/zsh/prompt.zsh

Statusline cropping has not been implemented in powerline-tmux yet.

Closes #82.
Closes #83.
Refs #90.

==

powerline/bindings/zsh/prompt.zsh
==================
cfe47ad;Kim Silkebækken;2013-01-22 13:23:29 +0100;Move branch segment to right side in shell theme

==

powerline/config_files/themes/shell/default.json
==================
30f98f6;Kim Silkebækken;2013-01-22 13:22:31 +0100;Add exit code/pipe status args in powerline-prompt
Refs #90.

==

scripts/powerline-prompt
==================
eb14142;Kim Silkebækken;2013-01-22 13:21:54 +0100;Return empty string for empty sides

==

powerline/renderer.py
==================
b7e7b1e;Kim Silkebækken;2013-01-22 13:20:26 +0100;Use absolute import in source_plugin.vim
Refs #95.

==

powerline/bindings/vim/plugin/source_plugin.vim
==================
292d531;Kim Silkebækken;2013-01-22 13:17:58 +0100;Remove expensive functools.wraps from memoize decorator

==

powerline/lib/memoize.py
==================
10ed88c;Kim Silkebækken;2013-01-22 11:44:46 +0100;Update vim soft divider highlighting

==

powerline/config_files/colorschemes/vim/default.json
powerline/config_files/themes/vim/default.json
==================
3703514;Kim Silkebækken;2013-01-22 11:26:33 +0100;Add option to set soft divider highlighting group
Closes #89.

==

powerline/renderer.py
powerline/segment.py
==================
424f979;Kim Silkebækken;2013-01-22 10:58:41 +0100;Make it possible to return several segment in segment functions
This requires a couple of minor changes to custom segments. The segment
`highlight` key has been renamed to `highlight_group`, and segment
functions must return a list of segments dicts instead of just a dict.

Closes #88.

==

docs/source/configuration.rst
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/vim/help.json
powerline/renderer.py
powerline/segment.py
powerline/segments/common.py
powerline/segments/vim.py
powerline/theme.py
==================
973ea57;Kim Silkebækken;2013-01-22 09:07:22 +0100;Remove unneeded exclusion from MANIFEST.in

==

MANIFEST.in
==================
f800872;Kim Silkebækken;2013-01-22 09:06:30 +0100;Default to no mode in renderer.render() method

==

powerline/renderer.py
scripts/powerline-prompt
scripts/powerline-tmux
==================
2b0c014;Kim Silkebækken;2013-01-22 09:04:57 +0100;Improve side handling in prompt/tmux scripts

==

scripts/powerline-prompt
scripts/powerline-tmux
==================
2159814;Kim Silkebækken;2013-01-22 09:03:34 +0100;Add side argument in renderer.render() method

==

powerline/renderer.py
powerline/theme.py
==================
3ee6e55;Kim Silkebækken;2013-01-22 08:04:26 +0100;Handle Py2/3 Unicode differences when writing to stdout
Closes #94.

==

scripts/powerline-prompt
scripts/powerline-tmux
==================
8355e3d;Kim Silkebækken;2013-01-21 22:09:32 +0100;Move string decoding of file name/dir vim segments
Closes #93.

==

powerline/segments/vim.py
==================
ced333d;Kim Silkebækken;2013-01-21 22:03:56 +0100;Add note about Python 3 support in docs

==

docs/source/overview.rst
==================
a620a0e;Kim Silkebækken;2013-01-21 21:50:30 +0100;Fix various Python 3 related issues
Powerline now detects the Python version and verifies that the user has
Python 3.3 before enabling Python 3 support. To enable Python
3 support, use `python3` to execute source_plugin() in your vimrc
  instead of `python2`.

==

powerline/bindings/vim/__init__.py
powerline/bindings/vim/plugin/source_plugin.vim
powerline/bindings/vim/powerline.vim
powerline/theme.py
==================
8533171;Kim Silkebækken;2013-01-21 21:02:30 +0100;Remove unneeded extras dependency

==

setup.py
==================
bee427e;Kim Silkebækken;2013-01-21 20:42:57 +0100;Add Python 3.3 support
Support for unicode literals was reintroduced in Python 3.3 which makes
supporting both Python 2 and Python 3 much easier, so this will be the
minimum supported Python 3 version.

Closes #8.

==

docs/source/overview.rst
powerline/bindings/vim/plugin/source_plugin.vim
powerline/bindings/vim/powerline.vim
powerline/core.py
powerline/lib/__init__.py
powerline/lib/humanize_bytes.py
powerline/lib/memoize.py
powerline/lib/vcs/git.py
powerline/renderer.py
powerline/segments/common.py
powerline/segments/vim.py
powerline/theme.py
scripts/powerline-prompt
scripts/powerline-tmux
setup.py
==================
77f66cb;Kim Silkebækken;2013-01-21 20:38:41 +0100;Add additional dependency info

==

docs/source/overview.rst
==================
614c08b;Kim Silkebækken;2013-01-21 17:55:05 +0100;Convert file name to UTF-8 in vim file name segment
Closes #87.

==

powerline/segments/vim.py
==================
e64ef3c;Kim Silkebækken;2013-01-21 17:30:35 +0100;Fix zsh prompt example

==

docs/source/overview.rst
==================
8192d59;Kim Silkebækken;2013-01-21 11:46:14 +0100;Make system load thresholds customizable

==

powerline/segments/common.py
==================
4a9ade1;Kim Silkebækken;2013-01-21 11:43:34 +0100;Make uptime tmux segment support psutil
psutil is used if available, and the function falls back to reading
/proc/uptime if not. According to the psutil docs this should work
across more platforms.

==

powerline/segments/common.py
==================
25c5a6d;Kim Silkebækken;2013-01-21 10:53:46 +0100;Update zsh prompt example in docs

==

docs/source/overview.rst
==================
fcb0794;Kim Silkebækken;2013-01-21 10:50:07 +0100;Allow side, extension and renderer module to be specified in powerline-prompt
Refs #84.

==

scripts/powerline-prompt
==================
2eb07e8;Kim Silkebækken;2013-01-21 10:49:03 +0100;Add zsh prompt renderer
Zsh can use regular escape sequences in the prompt, but they must be
wrapped in %{...%} to work correctly.

Refs #84.

==

powerline/renderers/zsh_prompt.py
==================
0b385a1;Kim Silkebækken;2013-01-21 10:48:14 +0100;Rename "terminal" extension to "shell"
Refs #84.

==

powerline/config_files/colorschemes/shell/default.json
powerline/config_files/colorschemes/terminal/default.json
powerline/config_files/config.json
powerline/config_files/themes/shell/default.json
powerline/config_files/themes/terminal/default.json
powerline/renderers/shell.py
powerline/renderers/terminal.py
==================
45769b2;Kim Silkebækken;2013-01-21 10:31:16 +0100;Allow overriding the renderer when instantiating Powerline
This is useful to allow e.g. the prompt script to use a common shell
theme while having different renderers for different shells.

==

powerline/core.py
powerline/lib/__init__.py
==================
7be62ba;Kim Silkebækken;2013-01-21 10:16:34 +0100;Use code-blocks in docs

==

docs/source/overview.rst
==================
7db8aa0;Kim Silkebækken;2013-01-21 10:14:21 +0100;Update usage docs
Refs #79.

==

docs/source/overview.rst
==================
ccc18e8;Kim Silkebækken;2013-01-21 09:56:43 +0100;Remove unnecessary import

==

powerline/bindings/vim/__init__.py
==================
4e97fd9;なつき;2013-01-21 03:17:04 -0500;Add Pathogen/Vundle support
Closes #79.

==

docs/source/overview.rst
powerline/bindings/vim/plugin/source_plugin.vim
powerline/bindings/vim/source_plugin.vim
==================
c561922;Kim Silkebækken;2013-01-20 19:49:06 +0100;Add info about Gentoo Live ebuild

==

docs/source/overview.rst
==================
84edefb;Kim Silkebækken;2013-01-20 19:48:56 +0100;Update docs with new module paths

==

docs/source/configuration.rst
docs/source/overview.rst
==================
b7d8495;ZyX;2013-01-20 19:24:41 +0400;Fix problems in mode segment
- It was impossible to configure visual block and select block mode strings:
  JSON strings can contain neither raw control characters nor escape sequences
  for them
- It was impossible to override only some of the strings:
  missing key generates KeyError exception, not IndexError

==

powerline/segments/vim.py
==================
f1976c2;ZyX;2013-01-20 03:14:31 +0400;Update docs
- Added notes about where common and extension-specific configuration is located
- Added common.paths config.json option description
- Fixed user-defined segments location found in segments section
- Fixed Themes/segments/module reference text

==

docs/source/configuration.rst
==================
69846cd;ZyX;2013-01-20 02:49:58 +0400;Move configuration files into separate directory
Refs #72.

==

powerline/colorschemes/terminal/default.json
powerline/colorschemes/tmux/default.json
powerline/colorschemes/vim/default.json
powerline/config.json
powerline/config_files/colorschemes/terminal/default.json
powerline/config_files/colorschemes/tmux/default.json
powerline/config_files/colorschemes/vim/default.json
powerline/config_files/config.json
powerline/config_files/themes/terminal/default.json
powerline/config_files/themes/tmux/default.json
powerline/config_files/themes/vim/default.json
powerline/config_files/themes/vim/help.json
powerline/core.py
powerline/themes/terminal/default.json
powerline/themes/tmux/default.json
powerline/themes/vim/default.json
powerline/themes/vim/help.json
==================
1a7d67f;Kim Silkebækken;2013-01-20 19:30:18 +0100;Fix “default_module” theme key support
Reverts commit 78e54e0c840bb4a26e8c820b2f7327d11e313696 and moves
default_module into Segments.__init__.

Refs #3.

==

powerline/core.py
powerline/theme.py
==================
033afad;ZyX;2013-01-20 02:15:10 +0400;Fix highlighting when there are only 2 segments in theme
Here are two fixes:
- defaultdict makes it not throw KeyErrors.
- Replacing (False, False) with False makes it not throw vim.error (no color
  ctermbg=False)

==

powerline/renderers/terminal.py
powerline/renderers/tmux.py
powerline/theme.py
==================
b4fc8eb;Kim Silkebækken;2013-01-20 19:19:16 +0100;Update network_load segment to work with psutil

==

powerline/segments/common.py
==================
0586bd0;Kim Silkebækken;2013-01-20 19:18:55 +0100;Memoize weather segment for 30 minutes

==

powerline/segments/common.py
==================
a8846c0;Kim Silkebækken;2013-01-20 19:18:07 +0100;Add cpu_load_percent segment
This requires psutil to be installed, should be added to the docs later.

==

powerline/colorschemes/tmux/default.json
powerline/segments/common.py
powerline/themes/tmux/default.json
==================
f610527;Kim Silkebækken;2013-01-20 19:17:51 +0100;Move system_load segment code

==

powerline/segments/common.py
==================
0d09713;Kim Silkebækken;2013-01-20 19:16:21 +0100;Move common segment imports

==

powerline/segments/common.py
==================
b57174a;Kim Silkebækken;2013-01-20 19:15:22 +0100;Remove Ubuntu Mono from fontconfig file
Refs #60.

==

font/10-powerline-symbols.conf
==================
f108ab0;Kim Silkebækken;2013-01-20 19:15:12 +0100;Update pip install URI in the docs

==

docs/source/overview.rst
==================
dfe5d5d;Kim Silkebækken;2013-01-19 18:09:20 +0100;Restructure extension directories
Refs #74.

==

powerline/bindings/__init__.py
powerline/bindings/vim/__init__.py
powerline/bindings/vim/powerline.vim
powerline/bindings/vim/source_plugin.vim
powerline/core.py
powerline/ext/__init__.py
powerline/ext/common/__init__.py
powerline/ext/common/segments.py
powerline/ext/terminal/__init__.py
powerline/ext/terminal/renderer.py
powerline/ext/tmux/__init__.py
powerline/ext/tmux/renderer.py
powerline/ext/vim/__init__.py
powerline/ext/vim/bindings.py
powerline/ext/vim/matchers.py
powerline/ext/vim/powerline.vim
powerline/ext/vim/renderer.py
powerline/ext/vim/segments.py
powerline/ext/vim/source_plugin.vim
powerline/matcher.py
powerline/matchers.py
powerline/matchers/__init__.py
powerline/matchers/vim.py
powerline/renderers/__init__.py
powerline/renderers/terminal.py
powerline/renderers/tmux.py
powerline/renderers/vim.py
powerline/segment.py
powerline/segments.py
powerline/segments/__init__.py
powerline/segments/common.py
powerline/segments/vim.py
powerline/themes/terminal/default.json
powerline/themes/tmux/default.json
==================
65e358d;Kim Silkebækken;2013-01-19 17:01:01 +0100;Move terminal and tmux segments into common module
This should ideally be renamed to something else since it's not strictly
an extension. A better module naming scheme could be something like:

	powerline.segments.ext.{extension}
	powerline.segments.common

This would move all segments out of their respective extension
directory, and might be a bit confusing. The ext directories may also
need some changes to make this work properly.

==

powerline/ext/common/__init__.py
powerline/ext/common/segments.py
powerline/ext/terminal/segments.py
powerline/ext/tmux/segments.py
powerline/themes/terminal/default.json
powerline/themes/tmux/default.json
==================
78e54e0;ZyX;2013-01-16 22:04:43 +0400;Addd “default_module” theme key support
Refs #3.

==

docs/source/configuration.rst
powerline/core.py
powerline/segments.py
==================
1557ff2;Kim Silkebækken;2013-01-19 16:42:29 +0100;Cleanup weather condition codes

==

powerline/ext/tmux/segments.py
==================
41da160;ZyX;2013-01-19 16:24:53 +0400;Add Gentoo live ebuild
Still needed to push this ebuild to some overlay or main tree; otherwise
it requires more effort to use.

Users need to use

    eselect fontconfig enable 10-powerline-symbols.conf

to actually use the fontconfig file (should be added to the docs).
Ebuild itself installs the file, but doesn't enable it.

==

packages/gentoo/app-misc/powerline/Manifest
packages/gentoo/app-misc/powerline/powerline-9999.ebuild
==================
7d668de;ZyX;2013-01-19 16:50:17 +0400;Raise TypeError only if it is segment type that has problems
It raised TypeError also when module did not have required function

==

powerline/segments.py
==================
06d4b45;ZyX;2013-01-19 17:25:37 +0400;Make VCS guess() function respect .git files
Closes #67.

==

powerline/lib/vcs/__init__.py
==================
0acfd84;Kim Silkebækken;2013-01-19 17:35:18 +0100;Change default IP address lookup URI
icanhazip.com has two other domains for fine-tuned IP lookup,
ipv4.icanhazip.com will always return the IPv4 address, and
ipv6.icanhazip.com will always return the IPv6 address (the latter
appears to only work if you actually have an IPv6 address).

Details at http://rackerhacker.com/icanhazip-com-faq/.

Closes #68.

==

powerline/ext/tmux/segments.py
==================
c5b37b3;Kim Silkebækken;2013-01-18 16:53:32 +0100;Add troubleshooting info for iTerm2
Closes #65.

==

docs/source/troubleshooting.rst
==================
1637a13;Kim Silkebækken;2013-01-18 16:52:03 +0100;Improve font installation in Arch Linux package

==

packages/archlinux/PKGBUILD
packages/archlinux/powerline.install
==================
2ace418;Kim Silkebækken;2013-01-18 16:40:00 +0100;Update font installation instructions
Refs #60.

==

docs/source/overview.rst
==================
162b94b;Kim Silkebækken;2013-01-18 16:32:13 +0100;Add fontconfig fallback configuration

==

font/10-powerline-symbols.conf
==================
c1bf60d;Kim Silkebækken;2013-01-18 16:31:32 +0100;Move font patcher stuff out of package directory

==

font/PowerlineSymbols.otf
font/fontpatcher-symbols.sfd
font/fontpatcher.py
powerline/fontpatcher/PowerlineSymbols.otf
powerline/fontpatcher/fontpatcher-symbols.sfd
powerline/fontpatcher/fontpatcher.py
==================
18813c5;Kim Silkebækken;2013-01-18 11:19:38 +0100;Install symbol font in Arch Linux package
Refs #60.

==

packages/archlinux/.gitignore
packages/archlinux/PKGBUILD
packages/archlinux/powerline.install
==================
14c4ba4;Kim Silkebækken;2013-01-18 11:03:29 +0100;Move Arch Linux package into separate directory

==

package/.gitignore
package/PKGBUILD
packages/archlinux/.gitignore
packages/archlinux/PKGBUILD
==================
56f06f8;Kim Silkebækken;2013-01-18 10:58:23 +0100;Update font installation instructions
Refs #60.

==

docs/source/fontpatching.rst
docs/source/overview.rst
==================
2cfd01e;Kim Silkebækken;2013-01-17 21:32:15 +0100;Add PowerlineSymbols font file
On Linux it appears to work perfectly to just have this font file
present on the system as it automatically chooses fallback fonts if
a glyph isn't present in the current font.

==

powerline/fontpatcher/PowerlineSymbols.otf
==================
a67ab94;Kim Silkebækken;2013-01-17 20:08:47 +0100;Remove example tmux.conf

==

powerline/ext/tmux/tmux.conf
==================
2fba8f0;Kim Silkebækken;2013-01-17 20:10:28 +0100;Don't explicitly reset tmux attributes

==

powerline/ext/tmux/renderer.py
==================
0ea7615;Kim Silkebækken;2013-01-17 20:05:42 +0100;Add network load tmux segment

==

powerline/colorschemes/tmux/default.json
powerline/ext/tmux/segments.py
powerline/themes/tmux/default.json
==================
7eca187;Kim Silkebækken;2013-01-17 20:02:24 +0100;Add imports to lib init file

==

powerline/ext/tmux/segments.py
powerline/ext/vim/segments.py
powerline/lib/__init__.py
==================
245be99;Kim Silkebækken;2013-01-17 20:02:04 +0100;Add humanize_bytes function to library

==

powerline/lib/humanize_bytes.py
==================
07f1b7d;Kim Silkebækken;2013-01-17 20:01:39 +0100;Rename weather segment

==

powerline/colorschemes/tmux/default.json
powerline/ext/tmux/segments.py
powerline/themes/tmux/default.json
==================
9ec3a8e;Kim Silkebækken;2013-01-17 17:24:58 +0100;Reset highlighting at end of rendered result
Closes #57.

==

powerline/renderer.py
==================
1a99fbd;Kim Silkebækken;2013-01-17 17:06:45 +0100;Update terminal prompt usage instructions
Closes #56.

==

docs/source/overview.rst
==================
8a5b871;Kim Silkebækken;2013-01-17 10:08:51 +0100;Escape command in prompt usage instructions

==

docs/source/overview.rst
==================
20b17ce;Kim Silkebækken;2013-01-17 10:03:29 +0100;Add troubleshooting info about OSX ImportError
Closes #39.

==

docs/source/troubleshooting.rst
==================
6207f90;Kim Silkebækken;2013-01-17 10:03:00 +0100;Add troubleshooting info about NameError in MacVim
Refs #48.

==

docs/source/troubleshooting.rst
==================
f18bf70;Kim Silkebækken;2013-01-17 10:01:48 +0100;Add troubleshooting info for iTerm2 question mark issue
Closes #27.
Refs #48.

==

docs/source/troubleshooting.rst
==================
7d613ba;Kim Silkebækken;2013-01-17 10:01:09 +0100;Fix font patching instructions for OS X
Closes #46.

==

docs/source/fontpatching.rst
==================
6bf501d;Kim Silkebækken;2013-01-17 09:42:39 +0100;Add usage instructions for terminal/tmux

==

docs/source/overview.rst
==================
a091d04;Kim Silkebækken;2013-01-17 09:42:15 +0100;Update terminal rendering for bash

==

powerline/ext/terminal/renderer.py
==================
fd94c7c;Kim Silkebækken;2013-01-17 09:25:56 +0100;Install tmux/prompt files as scripts

==

powerline/ext/terminal/powerline_prompt.py
powerline/ext/tmux/powerline_status.py
powerline/ext/tmux/tmux.conf
scripts/powerline-prompt
scripts/powerline-tmux
setup.py
==================
4fc6bd7;Kim Silkebækken;2013-01-17 08:29:04 +0100;Update README

==

README.rst
==================
128c012;ZyX;2013-01-16 18:37:00 +0400;Add foreign local themes support
Refs #3.

==

powerline/core.py
powerline/renderer.py
==================
ecf9e7e;Kim Silkebækken;2013-01-16 09:39:20 +0100;Update terminal renderer output depending on shell
Bash and zsh have different ways of escaping colors in the prompt, this
update checks the $SHELL environment variable and uses the correct
escape sequence for the current shell.

A known issue with this method is that $SHELL doesn't get updated when
switching shells (i.e. if you're running /bin/bash when you're in a zsh
shell) so in rare cases rendering errors may occur. A workaround which
is much slower is to parse the output of `ps -p $$` which always returns
the current shell.

==

powerline/ext/terminal/renderer.py
==================
b910094;Kim Silkebækken;2013-01-16 09:04:26 +0100;Use midline ellipsis for dir shortening

==

powerline/ext/terminal/segments.py
==================
bf23ae2;Kim Silkebækken;2013-01-16 09:00:19 +0100;Move tmux example into extension directory

==

examples/tmux/pl.py
examples/tmux/tmux.conf
powerline/ext/tmux/powerline_status.py
powerline/ext/tmux/tmux.conf
==================
884bbd3;Kim Silkebækken;2013-01-16 08:47:49 +0100;Make mode_translations optional in colorschemes

==

powerline/colorscheme.py
powerline/colorschemes/terminal/default.json
powerline/colorschemes/tmux/default.json
==================
b7ff63c;Kim Silkebækken;2013-01-16 08:36:39 +0100;Separate colorschemes by extension
Refs #45.

==

docs/source/configuration.rst
powerline/colorschemes/terminal/default.json
powerline/colorschemes/terminal_default.json
powerline/colorschemes/tmux/default.json
powerline/colorschemes/tmux_default.json
powerline/colorschemes/vim/default.json
powerline/colorschemes/vim_default.json
powerline/config.json
powerline/core.py
==================
07771d7;Kim Silkebækken;2013-01-16 08:31:41 +0100;Add Liam Curry to contributors list
Refs #44.

==

docs/source/license-credits.rst
==================
28aaed0;Kim Silkebækken;2013-01-16 08:23:49 +0100;Merge branch 'feature/tmux' into develop
Closes #41.
Closes #43.
Closes #44.

==
==================
52c2ba5;Kim Silkebækken;2013-01-16 08:21:52 +0100;Enable tmux segments

==

powerline/themes/tmux/default.json
==================
5f0ec03;Kim Silkebækken;2013-01-16 08:21:36 +0100;Create neutral tmux colorscheme

==

examples/tmux/tmux.conf
powerline/colorschemes/tmux_default.json
powerline/config.json
==================
f6050fc;Liam Curry;2013-01-10 13:55:18 -0500;Add right/left options to tmux script

==

examples/tmux/pl.py
examples/tmux/tmux.conf
==================
f827420;Kim Silkebækken;2013-01-16 08:01:15 +0100;Rename default colorscheme

==

powerline/colorschemes/default.json
powerline/colorschemes/vim_default.json
powerline/config.json
==================
27c0faa;Kim Silkebækken;2013-01-16 07:59:57 +0100;Merge branch 'develop' into feature/tmux
Conflicts:
	powerline/ext/tmux/segments.py

==
==================
6d3dea1;Kim Silkebækken;2013-01-15 08:49:40 +0100;Cleanup Python files to comply better with PEP 8
Removed excessive newlines and comments, and fixed whitespace issues.

==

powerline/colorscheme.py
powerline/core.py
powerline/ext/terminal/powerline_prompt.py
powerline/ext/terminal/renderer.py
powerline/ext/terminal/segments.py
powerline/ext/tmux/renderer.py
powerline/ext/tmux/segments.py
powerline/ext/vim/__init__.py
powerline/ext/vim/bindings.py
powerline/ext/vim/renderer.py
powerline/ext/vim/segments.py
powerline/fontpatcher/fontpatcher.py
powerline/lib/memoize.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/matchers.py
powerline/renderer.py
powerline/segments.py
powerline/theme.py
setup.py
==================
7e214a6;Kim Silkebækken;2013-01-11 13:37:22 +0100;Create tmux segments
Refs #44.

==

powerline/ext/tmux/segments.py
==================
7eb3bfd;Kim Silkebækken;2013-01-11 12:18:17 +0100;Update memoize class and add support for persistent cache

==

powerline/lib/memoize.py
==================
bba272e;Kim Silkebækken;2013-01-09 16:16:27 +0100;Update theme/colorscheme name properties

==

powerline/colorschemes/default.json
powerline/colorschemes/terminal_default.json
powerline/themes/terminal/default.json
powerline/themes/tmux/default.json
powerline/themes/vim/default.json
==================
8d584d0;Kim Silkebækken;2013-01-09 16:09:50 +0100;Move segments.core packages out of subdirectories

==

powerline/ext/terminal/segments.py
powerline/ext/terminal/segments/__init__.py
powerline/ext/terminal/segments/core.py
powerline/ext/tmux/segments.py
powerline/ext/tmux/segments/__init__.py
powerline/ext/tmux/segments/core.py
powerline/ext/vim/segments.py
powerline/ext/vim/segments/__init__.py
powerline/ext/vim/segments/core.py
powerline/segments.py
==================
4c2dd90;Kim Silkebækken;2013-01-09 14:40:27 +0100;Create terminal/prompt color scheme

==

powerline/colorschemes/default.json
powerline/colorschemes/terminal_default.json
powerline/config.json
==================
d0d35ca;Kim Silkebækken;2013-01-09 14:40:06 +0100;Move terminal prompt script to extension directory

==

examples/terminal/pl.py
powerline/ext/terminal/powerline_prompt.py
==================
2ceec25;Kim Silkebækken;2013-01-09 14:29:44 +0100;Update terminal segments and default theme

==

powerline/ext/terminal/segments/core.py
powerline/themes/terminal/default.json
==================
44fb24d;Kim Silkebækken;2013-01-09 14:29:01 +0100;Fix padding issue with single-sided statuslines

==

powerline/renderer.py
==================
a26d5e5;Kim Silkebækken;2013-01-09 13:17:57 +0100;Add troubleshooting info for Windows gVim + git users
Closes #36.

==

docs/source/troubleshooting.rst
==================
536120a;Kim Silkebækken;2013-01-08 15:00:05 +0100;Re-add note about PyPI which got removed from the docs
Refs #34.

==

docs/source/overview.rst
==================
424da8b;ZyX;2013-01-05 18:14:17 +0400;Don’t raise an exception when encountered untracked file

==

powerline/lib/vcs/git.py
==================
332dc45;ZyX;2013-01-05 17:35:06 +0400;Add additional_key to memoization function
Closes #29.

==

powerline/ext/vim/segments/core.py
powerline/lib/memoize.py
==================
5b43960;ZyX;2013-01-04 22:18:36 +0400;Recreate git.Repository() on each call
It appears that pygit2 has similar to mercurial’s issue with statuses
(they are not updated) and needs to be regenerated on each call as well.
Implies to index statuses only though, that is why I used to think
pygit2 does not have this problem.

==

powerline/lib/vcs/git.py
==================
3addf44;Kim Silkebækken;2013-01-04 15:02:40 +0100;Highlight VCS flags differently
"M" flag is highlighted in yellow, "A" flag is highlighted in green,
other flags are highlighted in red. This also corresponds with the
highlighting in the output of `git status`.

Whitespace is also trimmed from the flags as the columns don't matter
much in vim statuslines, and empty columns only introduce whitespace
that looks like a bug.

==

powerline/colorschemes/default.json
powerline/ext/vim/segments/core.py
==================
102e749;ZyX;2013-01-03 03:29:38 +0400;Add file_vcs_status segment, using powerline.lib.vcs instead of fugitive
Using pure-python implementation allows to use the same code in the
terminal segments (not implemented currently). It also should be more
effective. Git module is able to use pygit2 instead of command-line git
which is much faster. Mercurial module assumes that mercurial is always
accessible as a python module.

Code for repository (not file) status is untested. It exists solely for
terminal segments.

Closes #26.

==

powerline/colorschemes/default.json
powerline/ext/vim/segments/core.py
powerline/lib/vcs/__init__.py
powerline/lib/vcs/git.py
powerline/lib/vcs/mercurial.py
powerline/themes/vim/default.json
==================
ca1225b;ZyX;2013-01-03 01:22:53 +0400;Add virtcol parameter for col_current segment
The virtual column number is also default. I doubt anybody here ever
wanted to see byte offset. When it comes to a questions like alignment,
forced text width and so on only virtual columns matter. It would be
good to optionally take concealed characters into account, but vim does
not provide a way to do so (well, except recent screencol() added solely
for testing which would be hard, but not impossible, to adapt to such
needs).

Closes #25.

==

powerline/ext/vim/segments/core.py
==================
f67a004;ZyX-I;2013-01-03 00:39:38 +0400;Use shorter and more readable form of :source

==

powerline/ext/vim/source_plugin.vim
==================
bfc2974;ZyX;2013-01-03 00:34:33 +0400;Use better name for powerline variable in global scope
It is completely possible that “pl” will be claimed by some other plugin
as well. There is no local scope for each .vim file in vim-python
interface.

==

powerline/ext/vim/powerline.vim
==================
7fb3df2;ZyX;2013-01-03 00:21:56 +0400;Change code to use vim_get_func('fnameescape')
Previous version had problems with paths containing backslashes and/or
double quotes.

==

powerline/ext/vim/__init__.py
==================
ee0acef;Kim Silkebækken;2013-01-02 09:09:05 +0100;Fix issues with the Arch Linux PKGBUILD

==

package/PKGBUILD
==================
7a7c971;Kim Silkebækken;2013-01-02 08:38:28 +0100;Move plugin loading with :source into separate file
This should resolve the issue with duplicate paths in sys.path by only
updating sys.path if the plugin is loaded using :source instead of
:python. sys.path is now updated in source_plugin.vim, which checks if
the user has Python installed, and updates sys.path before sourcing the
actual plugin file.

Refs #17.
Refs #19.
Refs #21.

==

docs/source/overview.rst
powerline/ext/vim/__init__.py
powerline/ext/vim/powerline.vim
powerline/ext/vim/source_plugin.vim
==================
2be52ed;ZyX-I;2012-12-21 23:03:50 +0400;Purge out :echoe
`:echoe` is unstable: unless it is already in `:try`…`:catch` block
you never know for sure whether or not it will break execution.
Thus the only valid use for `:echoe` is

    try
        echoe 'Msg'
    endtry
: rough equivalent to `:throw` (throws, but with different message).
As this is probably not the thing you want to do
I changed it to use `:echomsg`.

==

powerline/ext/vim/powerline.vim
==================
f423ba1;Kim Silkebækken;2012-12-21 11:19:53 +0100;Add information about Python support

==

docs/source/overview.rst
powerline/ext/vim/powerline.vim
==================
d87b35d;Kim Silkebækken;2012-12-21 11:20:19 +0100;Fallback to line_percent highlighting for gradient segment

==

powerline/ext/vim/segments/core.py
==================
9f60daa;Kim Silkebækken;2012-12-20 16:19:20 +0100;Use :file: for file references in the docs

==

docs/source/configuration.rst
docs/source/fontpatching.rst
docs/source/introduction.rst
docs/source/troubleshooting.rst
==================
9cc1233;Kim Silkebækken;2012-12-20 15:47:01 +0100;Add configuration docs

==

docs/source/configuration.rst
==================
50fa8a3;Kim Silkebækken;2012-12-19 14:46:14 +0100;Update docs and README

==

README.rst
docs/source/configuration.rst
docs/source/fontpatching.rst
docs/source/overview.rst
docs/source/troubleshooting.rst
==================
69f726a;ZyX-I;2012-12-19 08:36:41 +0400;Purge out the requirement to use sudo
There is no need in regenerating font cache in *all* directories. 
Make documentation suggest to regenerate just `~/.fonts` cache 
which actually changed.
==

docs/source/fontpatching.rst
==================
366fefd;Kim Silkebækken;2012-12-18 22:28:43 +0100;Update fontpatcher symbol font metrics

==

powerline/fontpatcher/fontpatcher-symbols.sfd
==================
e5f5df8;Kim Silkebækken;2012-12-18 22:28:27 +0100;Correctly handle glyph widths when patching fonts

==

powerline/fontpatcher/fontpatcher.py
==================
7c1d48a;Kim Silkebækken;2012-12-18 22:05:28 +0100;Improve font patcher
For some reason the font patcher doesn't work well unless the target
font has an em size of 2048 while the font is being patched. This patch
also improves font patching in general, due to the more correct
calculation of font metrics.

Refs #14.

==

powerline/fontpatcher/fontpatcher.py
==================
def9091;Kim Silkebækken;2012-12-18 17:18:37 +0100;Update installation instructions
Closes #13.

==

docs/source/overview.rst
==================
7507045;Kim Silkebækken;2012-12-18 16:05:55 +0100;Add screenshots to README

==

README.rst
==================
bda5c59;Kim Silkebækken;2012-12-18 16:03:15 +0100;Add screenshots to docs

==

docs/.gitignore
docs/source/_static/img/pl-mode-insert.png
docs/source/_static/img/pl-mode-normal.png
docs/source/_static/img/pl-mode-replace.png
docs/source/_static/img/pl-mode-visual.png
docs/source/_static/img/pl-truncate1.png
docs/source/_static/img/pl-truncate2.png
docs/source/_static/img/pl-truncate3.png
docs/source/introduction.rst
==================
e89ce2c;Kim Silkebækken;2012-12-18 15:30:03 +0100;Fix minor flake8 issues in font patcher

==

powerline/fontpatcher/fontpatcher.py
==================
d28003c;Kim Silkebækken;2012-12-18 15:22:31 +0100;Add font patcher docs

==

docs/source/fontpatching.rst
docs/source/license-credits.rst
==================
53fbfe1;Kim Silkebækken;2012-12-18 15:22:08 +0100;Update symbol code points in the default config

==

powerline/config.json
powerline/ext/vim/segments/core.py
powerline/themes/vim/default.json
==================
5fde2dc;Kim Silkebækken;2012-12-18 15:21:03 +0100;Add font patcher symbol font

==

powerline/fontpatcher/fontpatcher-symbols.sfd
==================
9a5b94d;Kim Silkebækken;2012-12-18 15:20:56 +0100;Add font patcher script

==

powerline/fontpatcher/fontpatcher.py
==================
af1f3ec;Kim Silkebækken;2012-12-17 15:45:21 +0100;Move vim plugin to the vim extension directory

==

docs/source/overview.rst
powerline/ext/vim/__init__.py
powerline/ext/vim/powerline.vim
powerline/plugin/__init__.py
powerline/plugin/vim/__init__.py
powerline/plugin/vim/load_vim_plugin.py
powerline/plugin/vim/powerline.vim
==================
37b43a7;Kim Silkebækken;2012-12-17 15:32:22 +0100;Automatically push docs with `make gh-pages`

==

docs/Makefile
==================
df02447;Kim Silkebækken;2012-12-17 15:32:01 +0100;Fix typo in doc filename

==

docs/source/licence-credits.rst
docs/source/license-credits.rst
==================
9ba8570;Kim Silkebækken;2012-12-17 15:24:42 +0100;Update documentation and version

==

README.rst
docs/source/conf.py
docs/source/configuration.rst
docs/source/configuration/vim.rst
docs/source/fontpatching.rst
docs/source/index.rst
docs/source/installation/vim.rst
docs/source/introduction.rst
docs/source/licence-credits.rst
docs/source/overview.rst
docs/source/troubleshooting.rst
setup.py
==================
8ccf223;Kim Silkebækken;2012-12-17 15:06:14 +0100;Add PKGBUILD for Arch Linux users

==

package/.gitignore
package/PKGBUILD
==================
2544734;Kim Silkebækken;2012-12-17 15:01:56 +0100;Remove unnecessary init file

==

examples/__init__.py
==================
ea760ea;Kim Silkebækken;2012-12-17 14:58:13 +0100;Move plugins to powerline directory

==

MANIFEST.in
plugin/__init__.py
plugin/vim/__init__.py
plugin/vim/load_vim_plugin.py
plugin/vim/powerline.vim
powerline/plugin/__init__.py
powerline/plugin/vim/__init__.py
powerline/plugin/vim/load_vim_plugin.py
powerline/plugin/vim/powerline.vim
==================
8ca4c53;Kim Silkebækken;2012-12-17 13:40:28 +0100;Do a :redrawstatus after setting window statuslines
For some reason the statusline doesn't always get redrawn automatically
after setting the statusline property for a window, and running
:redrawstatus when a buffer or window is entered seems to resolve this
issue.

==

plugin/vim/powerline.vim
==================
1108231;Kim Silkebækken;2012-12-17 13:33:29 +0100;Update readonly/modified segments in default theme

==

powerline/colorschemes/default.json
powerline/themes/vim/default.json
==================
ccd6b4c;Kim Silkebækken;2012-12-17 13:18:40 +0100;Restructure segment rendering methods
Theme.get_segments() is now a generator which returns segment copies,
and it no longer handles segment content replacement.

Renderer.render() accepts a theme and a segments parameter in order to
override the default actions (calling self.get_theme() and
self.get_segments()). This is necessary to be able to cache themes and
segment contents somewhere else and provide the cached data to the
render method. The render method now also handles removing excluded
segments, which was previously handled in Theme.get_segments().

Finally, VimRenderer.render() caches all theme and segment data and
provides this data to the renderer for non-current windows.

Closes #12.

==

powerline/ext/vim/renderer.py
powerline/renderer.py
powerline/theme.py
==================
3a8e64b;Kim Silkebækken;2012-12-17 12:03:11 +0100;Pass the current window as a parameter to the render method
This change simplifies the code somewhat as the BufLeave, etc. autocmds
aren't required anymore.

==

plugin/vim/powerline.vim
powerline/ext/vim/renderer.py
==================
7081834;Kim Silkebækken;2012-12-17 11:24:38 +0100;Cache segment contents after rendering the statusline
Non-current segments used the wrong contents because outdated
information was cached (self.segments was repopulated in the render()
method which was called *after* the contents was cached). Now the
contents are cached after the parent class' render() method is called so
the correct information is cached.

Closes #11.

==

powerline/ext/vim/renderer.py
==================
2a4baa0;Kim Silkebækken;2012-12-16 13:10:55 +0100;Minor code cleanup

==

powerline/theme.py
==================
3b19dac;Kim Silkebækken;2012-12-15 19:36:14 +0100;Cleanup code and comments

==

plugin/vim/powerline.vim
powerline/ext/vim/renderer.py
powerline/renderer.py
==================
0bf23ad;Kim Silkebækken;2012-12-15 18:48:12 +0100;Cache statusline contents in Python
Each window is now tagged with an UUID and this UUID is used to cache
the window's statusline contents in the Python VimRenderer in order to
avoid translating the statusline contents to and from a vimdict
unnecessarily.

Refs #11.

==

plugin/vim/powerline.vim
powerline/ext/vim/renderer.py
==================
da6367a;ZyX;2012-12-14 18:18:42 +0400;Added local theme support (mainly for buffer-local themes)

==

powerline/config.json
powerline/core.py
powerline/ext/vim/matchers.py
powerline/ext/vim/renderer.py
powerline/matchers.py
powerline/renderer.py
powerline/segments.py
powerline/theme.py
powerline/themes/vim/help.json
==================
f550bd3;Kim Silkebækken;2012-12-14 16:03:41 +0100;Fix issue with function segment key generation

==

powerline/segments.py
==================
05505c3;Kim Silkebækken;2012-12-14 15:23:26 +0100;Restructure docs

==

docs/source/index.rst
docs/source/installation.rst
docs/source/overview.rst
==================
f3a03aa;Kim Silkebækken;2012-12-14 14:03:59 +0100;Update docs structure for gh-pages

==

docs/Makefile
docs/conf.py
docs/configuration.rst
docs/configuration/vim.rst
docs/index.rst
docs/installation.rst
docs/installation/vim.rst
docs/introduction.rst
docs/source/conf.py
docs/source/configuration.rst
docs/source/configuration/vim.rst
docs/source/index.rst
docs/source/installation.rst
docs/source/installation/vim.rst
docs/source/introduction.rst
==================
79e2f2a;ZyX;2012-12-13 22:13:03 +0400;Add a way to import extension segments from more convenient locations
I.e. not powerline.ext.{ext}.segments.{smth}, but just {smth}.

Refs #3.

==

powerline/segments.py
powerline/theme.py
==================
21032e9;Kim Silkebækken;2012-12-13 22:43:58 +0100;Add documentation files

==

docs/configuration.rst
docs/configuration/vim.rst
docs/index.rst
docs/installation.rst
docs/installation/vim.rst
docs/introduction.rst
==================
f074c1f;Kim Silkebækken;2012-12-13 22:01:33 +0100;Move the vim example to a separate plugin folder
When Powerline is installed as a package in the system-wide
site-packages folder it can easily be enabled by adding a simple python
statement to the user's vimrc file.

Otherwise it can be added by doing a :source
path/to/plugin/vim/powerline.vim in vimrc, but the other way of doing it
works without specifying the full path as long as Powerline is installed
somewhere in sys.path.

==

MANIFEST.in
examples/vim/__init__.py
examples/vim/powerline.vim
plugin/__init__.py
plugin/vim/__init__.py
plugin/vim/load_vim_plugin.py
plugin/vim/powerline.vim
==================
175fb1b;ZyX;2012-12-13 21:09:41 +0400;Don’t change windows using windo, use setwinvar() instead

==

examples/vim/powerline.vim
==================
298f277;Kim Silkebækken;2012-12-13 15:43:49 +0100;Add .gitignore

==

.gitignore
==================
82b5209;Kim Silkebækken;2012-12-13 15:43:38 +0100;Add setup.py

==

MANIFEST.in
setup.py
==================
cd41910;Kim Silkebækken;2012-12-13 15:43:05 +0100;Add Sphinx docs skeleton

==

docs/.gitignore
docs/Makefile
docs/conf.py
docs/index.rst
==================
e5c864e;Kim Silkebækken;2012-12-13 15:23:12 +0100;Add themes and segments for terminal and tmux

==

powerline/ext/terminal/segments/__init__.py
powerline/ext/terminal/segments/core.py
powerline/ext/tmux/segments/__init__.py
powerline/ext/tmux/segments/core.py
powerline/themes/terminal/default.json
powerline/themes/tmux/default.json
==================
c5555d5;Kim Silkebækken;2012-12-13 14:59:16 +0100;Update all examples to work with the latest changes

==

examples/terminal/pl.py
examples/tmux/pl.py
examples/tmux/tmux.conf
examples/vim/powerline.vim
==================
9c79344;Kim Silkebækken;2012-12-13 14:58:55 +0100;Update theme/colorscheme for tmux and terminal configs

==

powerline/colorschemes/default.json
powerline/config.json
==================
d40e8e0;Kim Silkebækken;2012-12-13 14:58:21 +0100;Handle default colors correctly in tmux renderer

==

powerline/ext/tmux/renderer.py
==================
f552979;Kim Silkebækken;2012-12-13 14:57:55 +0100;Simplify retrieving of config home in core init method

==

powerline/core.py
==================
203a32e;Kim Silkebækken;2012-12-13 14:57:04 +0100;Create empty segment for single-side statuslines

==

powerline/colorscheme.py
powerline/renderer.py
powerline/theme.py
==================
9104d92;Kim Silkebækken;2012-12-13 14:28:24 +0100;Update default colorscheme

==

powerline/colorschemes/default.json
==================
eb28d75;Kim Silkebækken;2012-12-13 14:28:09 +0100;Ignore empty group/color colorscheme translations

==

powerline/colorscheme.py
==================
3037b9f;Kim Silkebækken;2012-12-13 14:06:29 +0100;Memoize git branch segment in vim
This works kinda like a timer which ensures that the git branch segment
isn't called more than once every 2 seconds.

Refs #7.

==

powerline/ext/vim/segments/core.py
==================
fbce4ac;Kim Silkebækken;2012-12-13 14:06:25 +0100;Add memoziation decorator

==

powerline/lib/__init__.py
powerline/lib/memoize.py
==================
7750fa2;Kim Silkebækken;2012-12-13 13:49:15 +0100;Fix minor segment contents override issue

==

powerline/theme.py
==================
a272d90;Kim Silkebækken;2012-12-13 13:49:05 +0100;Simplify vim renderer cache check

==

powerline/ext/vim/renderer.py
==================
92324a6;Kim Silkebækken;2012-12-13 13:48:27 +0100;Fix vim segments for empty file names/directories

==

powerline/colorschemes/default.json
powerline/ext/vim/segments/core.py
==================
98337d2;Kim Silkebækken;2012-12-13 13:18:27 +0100;Merge branch 'feature/project-restructuring' into develop

==
==================
09c2070;Kim Silkebækken;2012-12-13 13:17:05 +0100;Remove unnecessary default values from vim theme

==

powerline/themes/vim/default.json
==================
dd4c90f;Kim Silkebækken;2012-12-13 13:16:09 +0100;Cache and retrieve segment contents for non-current vim windows
This resolves the issue with non-current windows using the contents of
the currently selected window.

==

examples/vim/powerline.vim
powerline/ext/vim/renderer.py
==================
00f749c;Kim Silkebækken;2012-12-13 13:10:10 +0100;Allow overriding segment contents when rendering

==

powerline/renderer.py
powerline/theme.py
==================
c2dfabd;Kim Silkebækken;2012-12-13 12:49:15 +0100;Load segments from specific segment modules

==

powerline/ext/vim/segments/__init__.py
powerline/theme.py
==================
0499326;Kim Silkebækken;2012-12-12 18:15:21 +0100;Move more vim stuff into the renderer

==

examples/vim/pl.py
examples/vim/powerline.vim
powerline/ext/vim/renderer.py
==================
8960d15;Kim Silkebækken;2012-12-12 12:37:58 +0100;Update vim statusline example
The statusline example mostly works now, even with different modes. The
main problem is still non-current windows, which receive the contents of
the currently active window for most segments.

==

examples/vim/pl.py
==================
c6ac449;Kim Silkebækken;2012-12-12 12:36:39 +0100;Fix minor issues in default theme

==

powerline/themes/vim/default.json
==================
32f6893;Kim Silkebækken;2012-12-12 12:36:27 +0100;Update vim renderer to handle all vim-specific stuff

==

powerline/ext/vim/renderer.py
==================
e22a924;Kim Silkebækken;2012-12-10 20:18:19 +0100;Fallback to default if mode highlighting is missing

==

powerline/renderer.py
==================
ec27894;Kim Silkebækken;2012-12-10 20:18:02 +0100;Fix Unicode quirks with mode segment

==

powerline/ext/vim/segments/core.py
==================
240bd62;Kim Silkebækken;2012-12-10 20:17:42 +0100;Remove powerline render() method

==

examples/vim/pl.py
powerline/core.py
==================
90f8f94;Kim Silkebækken;2012-12-10 20:00:26 +0100;Update vim statusline example
A major issue is that we currently can't pass any windows' mode on to
the segment rendering method, so non-current windows don't get
highlighted correctly, and segments don't get removed if they have 'nc'
in their exclude_modes setting, and statuslines in non-current windows
don't get resized until the window is focused again.

==

examples/vim/pl.py
examples/vim/powerline.vim
==================
42d8353;Kim Silkebækken;2012-12-10 19:46:54 +0100;Handle segment exclude/include modes

==

powerline/renderer.py
powerline/theme.py
==================
1924850;Kim Silkebækken;2012-12-10 18:04:18 +0100;Improve default colorscheme with more hl groups

==

powerline/colorschemes/default.json
==================
011bacb;Kim Silkebækken;2012-12-10 17:47:07 +0100;Make the renderer work with new theme/colorscheme API

==

powerline/colorscheme.py
powerline/core.py
powerline/ext/vim/renderer.py
powerline/ext/vim/segments/core.py
powerline/renderer.py
powerline/segment.py
powerline/theme.py
==================
d7ff3f7;Kim Silkebækken;2012-12-10 14:45:04 +0100;Allow theme configuration to override dividers

==

powerline/core.py
powerline/theme.py
==================
87d5db9;Kim Silkebækken;2012-12-10 14:36:07 +0100;Update default configuration

==

powerline/config.json
powerline/core.py
powerline/renderer.py
==================
039526f;Kim Silkebækken;2012-12-10 14:23:53 +0100;Create theme loading class
This class loads all segments from the theme, initializes the highlight
group, assigns all necessary properties based on the JSON theme
configuration, etc. By doing this we basically move the mksegment()
functionality into the theme loader, so this function can be removed at
the cost of making it more complicated to use Powerline without its
theme functionality.

==

powerline/theme.py
==================
417f9a6;Kim Silkebækken;2012-12-10 14:03:49 +0100;Create colorscheme loading class

==

powerline/colorscheme.py
==================
3e949ad;Kim Silkebækken;2012-12-10 13:19:45 +0100;Load config files and modules in core

==

powerline/colorscheme.py
powerline/core.py
powerline/ext/vim/renderer.py
powerline/renderer.py
powerline/theme.py
==================
157fff0;Kim Silkebækken;2012-12-06 17:00:59 +0100;Update default colorscheme

==

powerline/colorschemes/default.json
==================
a0b0d15;Kim Silkebækken;2012-12-06 15:55:57 +0100;Update default theme

==

powerline/themes/vim/default.json
==================
5d2214d;Kim Silkebækken;2012-12-06 15:02:37 +0100;Make the examples work with the new project structure

==

examples/terminal/pl.py
examples/terminal/powerline.py
examples/tmux/pl.py
examples/tmux/powerline.py
examples/vim/pl.py
examples/vim/powerline.py
examples/vim/powerline.vim
==================
1cb6aea;Kim Silkebækken;2012-12-06 15:00:44 +0100;Create renderer property for Powerline class

==

powerline/core.py
==================
636f171;Kim Silkebækken;2012-12-06 14:59:50 +0100;Only drop segments whose contents are None

==

powerline/core.py
powerline/segment.py
==================
11ee108;Kim Silkebækken;2012-12-06 14:23:24 +0100;Move segment rendering to the Renderer class
This commit also updates the extension renderers so that they work
correctly with the Renderer class.

==

powerline/core.py
powerline/ext/terminal/__init__.py
powerline/ext/terminal/renderer.py
powerline/ext/tmux/__init__.py
powerline/ext/tmux/renderer.py
powerline/ext/vim/__init__.py
powerline/ext/vim/renderer.py
powerline/renderer.py
==================
8b94e25;Kim Silkebækken;2012-12-05 17:56:38 +0100;Add default colorscheme skeleton

==

powerline/colorschemes/default.json
==================
bcde4f6;Kim Silkebækken;2012-12-05 17:56:19 +0100;Add default vim theme

==

powerline/themes/vim/default.json
==================
d72265c;Kim Silkebækken;2012-12-05 17:45:41 +0100;Add colorscheme/theme placeholders

==

powerline/colorschemes/default.json
powerline/themes/vim/default.json
==================
d4d84a4;Kim Silkebækken;2012-12-05 17:35:21 +0100;Move mksegment out of core

==

powerline/core.py
powerline/segment.py
==================
4d22517;Kim Silkebækken;2012-12-05 16:37:16 +0100;Reorganize files

==

lib/__init__.py
lib/colors.py
lib/core.py
lib/renderers/__init__.py
lib/renderers/terminal.py
lib/renderers/tmux.py
lib/renderers/vim.py
powerline/__init__.py
powerline/colorscheme.py
powerline/core.py
powerline/ext/__init__.py
powerline/ext/terminal/__init__.py
powerline/ext/terminal/renderer.py
powerline/ext/tmux/__init__.py
powerline/ext/tmux/renderer.py
powerline/ext/vim/__init__.py
powerline/ext/vim/bindings.py
powerline/ext/vim/renderer.py
powerline/ext/vim/segments/__init__.py
powerline/ext/vim/segments/core.py
powerline/renderer.py
powerline/segment.py
powerline/theme.py
vim/__init__.py
vim/bindings.py
vim/segments/__init__.py
vim/segments/core.py
==================
091840a;Kim Silkebækken;2012-11-26 16:17:08 +0100;Fix terminal prompt example

==

examples/terminal/powerline.py
==================
07b23f5;Kim Silkebækken;2012-11-26 16:16:39 +0100;Add tmux statusline example

==

examples/tmux/powerline.py
examples/tmux/tmux.conf
==================
6a1912a;Kim Silkebækken;2012-11-26 16:16:14 +0100;Add tmux segment renderer

==

lib/renderers/__init__.py
lib/renderers/tmux.py
==================
6a9bb45;Kim Silkebækken;2012-11-26 15:07:05 +0100;Fix hard divider rendering issue
Hard dividers (for segments with different background colors) are now
always drawn, regardless of the draw_divider option, because it looks
horrible when segments with different bg colors don't have a divider
between them.

This resolves an issue with the filename and modified flag
in the default theme where the filename segment had to set the
draw_divider flag based on the contents of the modified flag to be
rendered correctly.

==

examples/vim/powerline.py
lib/core.py
==================
34da254;Kim Silkebækken;2012-11-26 09:17:28 +0100;Add short presentation to README

==

README.rst
==================
e18f3fa;Kim Silkebækken;2012-11-23 19:03:58 +0100;Fix mode segment

==

vim/segments/core.py
==================
0f5a497;Kim Silkebækken;2012-11-23 17:27:31 +0100;Add initial vim binding functions and segments
Each segment is a function that can accept parameters like the branch or
readonly symbol for overriding the defaults.

==

vim/__init__.py
vim/bindings.py
vim/segments/__init__.py
vim/segments/core.py
==================
3be7dc2;Kim Silkebækken;2012-11-21 12:23:49 +0100;Merge branch 'feature/extended-vim-example' into develop

==
==================
addb7cc;Kim Silkebækken;2012-11-21 12:21:01 +0100;Fix various rendering issues
Another rendering pass is necessary before calculating the filler
segment's lengths, because center segments may lose their separators
after removing low-priority segments.

Some unicode and variable assignment issues has been resolved so
everything renders correctly.

==

examples/vim/powerline.py
lib/core.py
==================
1d3c259;Kim Silkebækken;2012-11-21 11:33:10 +0100;Improve rendering performance
This change removes the Segment class as this takes forever to remove
from the segment array when removing low-priority segments. It has
instead been replaced by a wrapper function that works the same and
returns a working dict of all segment properties.

The regex substitution bottleneck in the vim example has been fixed by
using a single-character percent placeholder in vim segments which is
later replaced with a double percent using str.replace().

==

examples/terminal/powerline.py
examples/vim/powerline.py
lib/core.py
lib/renderers/terminal.py
lib/renderers/vim.py
==================
f4e3d01;Kim Silkebækken;2012-11-21 09:57:16 +0100;Improve rendering performance
This commit almost doubles the segment rendering performance. This is
accomplished by caching a lot of data like highlighting groups, moving
some calculations out of loops, and by performing less function calls
overall.

When a width is specified the main speed improvement comes from avoiding
rendering the raw segments over and over until the statusline is short
enough. Instead, the raw rendering is stored as a segment property and
the combined length of all these renderings is used when removing
low-priority segments instead. This results in a maximum of two
rendering passes.

Some "less pythonic" solutions have been chosen some places for
performance reasons, e.g. joining strings instead of appending and
joining lists.

Overall this commit appears to make the performance equal or better than
the legacy vimscript implementation. Later optimizations (in particular
finding another method than remove() for removing low-priority segments)
may make this version of Powerline far superior both in terms of
functionality and performance.

==

examples/vim/powerline.py
lib/colors.py
lib/core.py
lib/renderers/vim.py
==================
6c5316a;Kim Silkebækken;2012-11-20 21:16:12 +0100;Make vim example work with split and inactive windows
This commit introduces a bunch of changes. Most importantly, it ensures
that split windows and inactive windows work as expected. This is
accomplished with some clever workarounds for vim's statusline
limitations.

Vim statuslines evaluated using the %! statusline item are always
evaluated in the buffer context and not in the statusline's owner
window's context, and this made the previous implementation show the
same statusline for all windows. The only way to ensure that the correct
statusline is rendered to the correct window is to walk through all
windows, and setting the statuslines with a reference to the current
window number every time the current window is changed. This is
accomplished by a set of BufEnter, BufLeave, etc. autocommands.

The Syntastic segment has been temporarily removed due to errors when
referencing the statusline function before Syntastic has been loaded.

==

examples/vim/powerline.py
examples/vim/powerline.vim
==================
a532da4;Kim Silkebækken;2012-11-17 16:42:28 +0100;Fix issues with the terminal prompt example

==

examples/terminal/powerline.py
==================
0869554;Kim Silkebækken;2012-11-17 12:35:38 +0100;Handle remainder whitespace for filler segments
When more than one filler segment is specified it may sometimes be
a remainder when calculating the amount of whitespace. divmod() is used
to retrieve the remainder, which is added as whitespace to the first
filler segment.

==

lib/core.py
==================
90763f1;Kim Silkebækken;2012-11-17 12:35:22 +0100;Improve unicode handling of rendered segments

==

lib/core.py
==================
4cb0559;Kim Silkebækken;2012-11-17 12:21:24 +0100;Fix whitespace issues so pyflakes doesn't complain

==

examples/vim/powerline.py
==================
0f6d24b;ZyX;2012-11-17 14:08:38 +0359;Made it work on older vims

==

examples/vim/powerline.py
==================
708306c;ZyX;2012-11-17 13:58:28 +0359;Avoid invoking vim parser as much as possible in case vim is recent enough

==

examples/vim/powerline.py
examples/vim/powerline.vim
==================
572df1d;Kim Silkebækken;2012-11-16 17:16:30 +0100;Fix filename issues in vim example

==

examples/vim/powerline.py
examples/vim/powerline.vim
==================
1d10219;Kim Silkebækken;2012-11-16 17:05:55 +0100;Update vim and terminal examples
The examples have been moved into their own directory. The vim example
now uses pyeval() and vim.bindeval() and loads the Python file through
an import (so it gets compiled) for speed improvements.

==

examples/__init__.py
examples/terminal/powerline.py
examples/vim/__init__.py
examples/vim/powerline.py
examples/vim/powerline.vim
powerline-terminal-example.py
powerline-vim-example.vim
==================
cbf8d16;Kim Silkebækken;2012-11-16 12:49:54 +0100;Ignore empty segments that aren't filler segments

==

lib/core.py
==================
2ea555b;Kim Silkebækken;2012-11-16 12:08:55 +0100;Rewrite core code to only allow a single-dimensional segment array
The segment tree seemed like a good idea at the time, but for the core
code it's probably best to do a single-dimensional array and instead
have some duplicated data (common segment attributes). By removing the
tree structured segments the code is much simpler to understand and use,
and probably quite a bit faster.

If a tree structure is wanted for ease of configuration, it could easily
be supported in the JSON config files for vim statuslines, and then
letting the vim statusline code flatten the configuration into
a single-dimensional array for rendering.

==

lib/core.py
powerline-terminal-example.py
powerline-vim-example.vim
==================
5abfdae;Kim Silkebækken;2012-11-15 13:35:08 +0100;Add unicode stuff for Python 2
Powerline will probably only be Python 2 in the foreseeable future
because of poor Python 3 support in applications like vim, so this
small change ensures correct unicode behavior in Python 2.

==

lib/core.py
==================
804447d;Kim Silkebækken;2012-11-15 13:32:07 +0100;Update vim statusline example

==

powerline-vim-example.vim
==================
ba73083;Kim Silkebækken;2012-11-15 13:31:42 +0100;Remove get_hl_statements from vim renderer

==

lib/renderers/vim.py
==================
e99b1f1;Kim Silkebækken;2012-11-14 22:40:26 +0100;Fix vim statusline example

==

powerline-vim-example.vim
==================
cff4fcd;Kim Silkebækken;2012-11-14 22:37:50 +0100;Fix segment padding
The padding argument has been removed and is now handled automatically.
Segments without dividers are not padded anymore.

This was necessary to ensure that segments are rendered correctly when
cropping segments (overriding the padding argument screwed up the
padding for segments without dividers and without padding).

==

lib/core.py
==================
89375b5;Kim Silkebækken;2012-11-14 20:49:04 +0100;Fix issues with terminal renderer

==

lib/renderers/terminal.py
==================
94cd934;Kim Silkebækken;2012-11-14 20:48:07 +0100;Simplify filler rendering

==

lib/core.py
==================
bef6c43;Kim Silkebækken;2012-11-14 20:44:23 +0100;Update vim statusline example
Now the vim statusline example does everything in Python, so the python
example isn't required anymore.

==

powerline-vim-example.py
powerline-vim-example.vim
==================
b5d72af;Kim Silkebækken;2012-11-14 20:24:09 +0100;Create dynamic vim statusline example
This example only does a single type of highlighting (normal mode) but
demonstrates nicely how rendering a statusline with Python could work.
This also utilizes the new width functionality to crop away less
important segment if the window is too small, and do the padding with
Python instead of using vim's split segment.

Some optimization will probably be necessary, as calling Python for each
statusline redraw is quite expensive. A solution could be evaluating the
segments in Python once and then calculating the width and crop away/pad
the segments, and then sending the statusline with unevaluated segments
to vim for rendering without calling Python. Only some events (like
CursorHold, InsertEnter/InsertLeave, etc.) would trigger a re-render
with Python, a recalculation of the width and cropping/padding.

==

powerline-vim-example.vim
==================
d3bace2;Kim Silkebækken;2012-11-14 11:53:39 +0100;Improve the Segment class and rendering
The Segment class has been given two new properties: priority and
filler. The render method has been given a width argument.

If the width argument is specified when rendering a segment and the
rendered segments are too wide, segments are dropped in order of
priority, with the lowest priority (highest number) being dropped first
and any segment with priority < 0 is kept, regardless of the specified
width.

If the width argument is specified along with one or more filler
segments, the filler segments will pad the remaining space with space
characters until the desired width has been reached.

The handling of segment attributes has also been improved by lazily
looking up the correct attributes in the segment tree when it's being
rendered.

Finally, the rendering code itself has been improved a bit with less
code duplication and much more readable code.

==

lib/core.py
powerline-vim-example.py
==================
21a48e9;Kim Silkebækken;2012-11-12 13:11:19 +0100;Move vimscript hl statement generation to vim renderer

==

lib/renderers/vim.py
powerline-vim-example.py
==================
f47dc4b;Kim Silkebækken;2012-11-08 14:59:59 +0100;Change wording: separator -> divider

==

lib/core.py
powerline-vim-example.py
==================
b461ab1;Kim Silkebækken;2012-11-08 14:05:48 +0100;Create basic vim segment renderer
This commit also includes a basic proof-of-concept demo for creating vim
statuslines. When creating vim statuslines you basically need to first
create the statusline the same way as the terminal demo, use the vim
renderer and then afterwards loop through the collected highlight groups
in the vim renderer and write those as vim highlight statements.

Vim obviously needs a ton of wrapper code to make everything work
properly (separate modes, callbacks, all that stuff) so the current demo
only shows some basic statusline highlighting.

==

lib/renderers/__init__.py
lib/renderers/vim.py
powerline-vim-example.py
==================
20892b1;Kim Silkebækken;2012-11-08 14:05:16 +0100;Fix default segment attribute value

==

lib/core.py
==================
59a760c;Kim Silkebækken;2012-11-08 13:16:22 +0100;Join the fg/bg/attr methods of the renderers
This change joins the fg/bg/attr methods into a single hl method in the
renderers. This provides the same functionality, and it simplifies the
terminal rendering by being able to join all the attributes into one
escape sequence.

It's also a necessary change for the vim renderer, as this renderer
needs to log all the highlighting and create separate highlighting
classes for every single color and attribute combination. The only way
to do this is to have a single highlighting method.

==

lib/core.py
lib/renderers/__init__.py
lib/renderers/terminal.py
powerline-terminal-example.py
powerline-vim-example.py
==================
ffbdcc0;Kim Silkebækken;2012-11-08 12:51:15 +0100;Fix soft separator issue with vim divider segments

==

lib/core.py
==================
99ded1d;Kim Silkebækken;2012-11-08 12:44:46 +0100;Add vim statusline example
This is currently rendered with the terminal renderer, and is just
a simple proof-of-concept of how vim statuslines can be defined with the
Python API.

==

powerline-vim-example.py
==================
cf88b08;Kim Silkebækken;2012-11-08 12:23:57 +0100;Add initial project files

==

README.rst
lib/__init__.py
lib/colors.py
lib/core.py
lib/renderers/__init__.py
lib/renderers/terminal.py
powerline-terminal-example.py
==================
adb67e1;Kim Silkebækken;2012-11-08 11:12:49 +0100;Initial commit

==
