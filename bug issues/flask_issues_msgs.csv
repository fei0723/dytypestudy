ID,Title,Created At,Closed At,Issues,Errors,Messages,Body
2568,Fixed Typo,2017-12-24T16:50:42Z,,,,,"Fixed Typo in the tutorials
Changed when -> how
"
2567,`flask.g` not reset when using  `test_client()` inside app context,2017-12-21T14:08:43Z,,,,,"Using the `test_client()` inside an app context, seemingly prevents the `flask.g`-object from being reset.

A test case like this 

```python
app = flask.Flask(__name__)

@app.route('/')
def index():
    if hasattr(flask.g, 'value'):
        flask.g.value += 1
    else:
        flask.g.value = 0
    return bytes(flask.g.value)

with app.app_context():
    with app.test_client() as client:
        resp = client.get('/')
        # `resp.data` will be '0'

        resp = client.get('/')
        # `resp.data` will be '1' here
```

will return `'1'` from the second request made by the test client. As the `flask.g`-object is local to the request, I would expect a `'0'` to be returned.

This may outside of the scope of supported use-cases, or simply the way it _should_ behave. I can accept that, but I just wanted it here at least for future users.

### Rationale for using `test_client()` inside an app context

The reason I do this is to be able to use `url_for()` inside my view tests, and have code like 

```python
response = client.post(
    url_for('blueprint_api.add_user'),
    json={'name': 'John', 'email': 'john@example.org'},
)
```

Basically I believe that my view tests shouldn't be testing a hard-coded URL (the single source of truth for that should be the route), but rather the logic of the view function.

### Environment

* Python version: 2.7.13
* Flask version: 0.13.0
* Werkzeug version: 0.13
"
2566,set session.new attribute,2017-12-20T20:41:11Z,,,,,"https://github.com/pallets/flask/issues/2564


"
2565,Docs: Update CLI for factory pattern,2017-12-20T12:52:25Z,,,,,"Since we have implemented application discover, there is no need to create an application instance manually for `flask run`.
<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2564,Unexpected working of new attribute of Session class,2017-12-19T13:37:36Z,,,,,"According to the [documentation](http://flask.pocoo.org/docs/0.12/api/#flask.session.new), **new** attribute returns **True** if the session is new. Otherwise **False**, but it's not like that. How to reproduce:

```
from flask import Flask, session

app = Flask(__name__)
app.config[""SECRET_KEY""] = ""thisisasecret""
app.config['SESSION_TYPE'] = 'filesystem'

@app.route(""/"")
def index():
    if 'user_id' not in session:
        session['user_id'] = 'jon'
    print(session.new)
    print(session.modified)
    return 'testing sessions'
# just for debugging
@app.route(""/clear"")
def clear():
    session.clear()
    return 'clear'

if __name__ == ""__main__"":
    app.run(debug=True)
```

Run app and call _/_ endpoint twice. Output:

```
127.0.0.1 - - [19/Dec/2017 16:18:20] ""GET /clear HTTP/1.1"" 200 -
False # value of session.new
True
127.0.0.1 - - [19/Dec/2017 16:18:25] ""GET / HTTP/1.1"" 200 -
False # value of session.new
False
```

As I Understood when we initialize session, **session.new** should return **True**(when we call endpoint at first time). Is it right?

### Environment

* Python version: 2.7.13
* Flask version: 0.12.2
* Werkzeug version: 0.13

[Link](https://stackoverflow.com/questions/47885251/unexpected-working-of-new-attribute-of-session-class-in-flask) to question on SO"
2563,teardown_request not executing on first request in debug/uwsgi (works without debug),2017-12-19T12:57:19Z,2017-12-23T16:52:50Z,,,,"### Expected Behavior

Given we have an app with a `teardown_request` and a `route` that always raises exception, when the app is first launched either with `debug=True` or through `uWSGI`, the teardown request should execute. 

```python
from flask import Flask

app = Flask(__name__)


@app.teardown_request
def teardown(exc):
    print('Teardown request executed')

@app.route('/')
def error_route():
    e = 3 / 0

if __name__ == '__main__':
    app.run(debug=True)
```

### Actual Behavior

Instead for the first request (in uWSGI case, for each worker's first request), the teardown does not execute. After few hours debugging with PyCharm the best information we can share (I hope it's actually useful) is that in `flask.ctx.RequestContext.push()` the `_request_ctx_stack.top` is None.

### Environment

* Python version: 3.5
* Flask version: 0.12.2
* Werkzeug version: 0.13
"
2562,app.run(debug=True) and @app.template_filter() Bug,2017-12-18T22:40:38Z,2017-12-22T20:32:19Z,,,,"I always use app.run(debug=True) during the developer session. When I update a .htlm file the server restart and you can see the change.

Now I started to work with
```
@app.template_filter()
```
but even if you are in the debug mode, if you change a .html file, you have to restart the server manually to see your change. I notice this weird behavior only when you define an @app.template_filter()

### Environment

* Python version: Python 3.5.2
* Flask version: 0.12.2
* Werkzeug version: 0.13
* Jinja2 version: 2.10
* MarkupSafe version: 1.0
* Browser : Chrome (version 63.0.3239.90)
"
2561,Updated cli.rst with a minimal mention of --host and --port options.,2017-12-18T00:42:53Z,2017-12-18T03:24:57Z,,,,Added a (minimal) mention of `--host` and `--port` `flask run` options.  Replaces #2557.
2560,Add conftest to flaskr,2017-12-17T18:09:01Z,2017-12-21T02:22:03Z,,,,"In practice, it is often important to have more than one test file. Though this is in the pytest domain, I thought that it would be important to illustrate the capability of fixture sharing.

I updated the docs and flaskr code example to use a `conftest.py`file."
2559,Better appveyor config,2017-12-16T17:47:01Z,2017-12-17T21:11:53Z,,,,Make appveyor configuration cleaner.
2558,add appveyor configuration,2017-12-16T15:19:46Z,,testing,,,
2557,cli.rst: added flask run cli options help,2017-12-15T08:23:03Z,2017-12-16T14:56:21Z,,,,"When browsing the CLI doc, I found myself wanting to know how to set host bind interface and port.  These are not currently discussed, and are revealed with `flask run --help`.

Added that output to the page."
2556,Fix sentry raven install docs,2017-12-15T03:45:42Z,2017-12-16T14:13:55Z,,,,"The documentation for installing Sentry's raven client was incorrect. It should state that the client must be installed with the extra flask dependencies as mentioned in getsentry/raven-python#1075
"
2555,remove tests and docs for python 2.6 and 3.3,2017-12-14T21:08:08Z,2017-12-16T15:06:55Z,"docs, testing",,,"pallets/meta#24

I'll test 2.6 and 3.3 before I release 1.0, which will be the last version to support these."
2554,fix non-passing tests for logging on pytest >= 3.3.0,2017-12-14T07:04:17Z,2017-12-14T20:21:35Z,,,,"This fixes issue #2550, where some tests fail when using newer pytest (after version 3.2.5).

The reason for this issue is that pytest added a plugin that instantiates a handler for the logging module, while the tests were expecting no handlers.

The PR solves the issue by temporarily disabling the logging module and removing any handlers for all tests on the file

"
2553,Docs: Add missing backslash,2017-12-14T06:38:59Z,2017-12-14T13:33:33Z,,,,"

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2552,Docs: Fixed typo,2017-12-14T03:09:01Z,2017-12-14T05:26:56Z,,,,"

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2551,fix typo,2017-12-13T17:12:16Z,2017-12-13T17:16:08Z,,,,"Describe what this patch does to fix the issue.

Link to any relevant issues or pull requests.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2550,Some of tests fail on running pytest,2017-12-13T17:12:09Z,2017-12-14T22:12:34Z,,,,"### Expected Behavior

On running ```pytest``` all tests should pass.

To reproduce please execute ``` pytest ```
### Actual Behavior

5 tests fail 

Here is the full output of pytest: https://paste.ubuntu.com/26177622/

### Environment

* Python version: 3.5.2

"
2549,"""Request.is_xhr deprecated"" warning during jsonify()",2017-12-11T17:54:11Z,2017-12-11T18:17:42Z,bug,,,"It seems `Request.is_xhr` is deprecated. Getting warnings here... How do we fix this?

```
flask.jsonify(**{...})
File ""/usr/local/lib/python2.7/site-packages/flask/json.py"", line 251, in jsonify
if current_app.config['JSONIFY_PRETTYPRINT_REGULAR'] and not request.is_xhr:
File ""/usr/local/lib/python2.7/site-packages/werkzeug/local.py"", line 347, in __getattr__
return getattr(self._get_current_object(), name)
File ""/usr/local/lib/python2.7/site-packages/werkzeug/wrappers.py"", line 689, in is_xhr
), stacklevel=2)
DeprecationWarning: Request.is_xhr is deprecated. Given that the X-Requested-With header is not a part of any spec, it is not reliable
```"
2548,"Fix docs, how to get db connection in pattern",2017-12-08T20:18:31Z,2017-12-08T20:59:47Z,,,,"The docs are inaccurately suggesting a db connection would be available at `g.db`, after calling `get_db()` a connection will be available at `g._database` but even then I think instructing the user to use `get_db()` is the best way forward.

"
2547,Document which servers support wsgi.input_terminated,2017-12-08T18:21:19Z,,,,,"I learned from multiple issues (like https://github.com/kennethreitz/httpbin/issues/340, https://github.com/pallets/werkzeug/issues/1149, https://github.com/pallets/flask/issues/367) that Flask developers are making a push to implement `wsgi.input_terminated` as a way for wsgi servers and apps to support chunked requests.

However, it is extremely hard to navigate these issues and figure out what works and what does not. Is there an intention to document the support for this flag? This is a great feature, but from the user's perspective it is currently very hard to even figure out how it works. I propose at least keeping an issue alive with information on which environments will support it.

Here is what worked for me:
Flask 0.12.2 + Gunicorn 19.7.1
Flask 0.12.2 + Werkzeug 0.13

What did not work for me
Flask 0.12.2 + uWSGI 2.0.15"
2546,send_from_directory() and send_file() fails on Windows,2017-12-07T16:43:17Z,2017-12-07T17:06:13Z,,,,"On Windows send_from_directory() fails because posix path from safe_join() and Windows path from current_app.root_path gets mixed up.

I see problem in this line:
https://github.com/pallets/flask/blob/eb1c2faf9f1fd785616203dc00f6dd680682dc38/flask/helpers.py#L691
E.g. running app from C:\PythonApps\FlaskApp: 
```python
send_from_directory(""instance/data"", ""file1.txt"")
filename = safe_join(directory, filename)
# filename == ""instance/data/file1.txt""
if not os.path.isabs(filename):
        filename = os.path.join(current_app.root_path, filename)
        # here's the problem -> filename == ""C:\\PythonApps\\FlaskApp\\instance/data/file1.txt""
    try:
        if not os.path.isfile(filename):
            # here it fails
            raise NotFound()
```
Returning posix path from safe join is imo ok (see #2284) but joining with non posix path fails.
I think solution can be using os.path.normpath after joining path parts:
```python
filename = os.path.normpath(os.path.join(current_app.root_path, filename))
```
Same problem is with send_file():
https://github.com/pallets/flask/blob/d08d96acbcabcde23307ed060f71f95ba9cb7b8d/flask/helpers.py#L520

### Environment

* Python version 3.5.4:
* Flask version 0.12.2:
* Werkzeug version 0.12.2:
"
2545,"Treat errno.ENOTDIR like errno.EISDIR when silently absorbing IOErrors in config.from_pyfile (from_json, etc.)",2017-12-07T02:20:54Z,,,,,"In `flask/config.py` when loading a config file in `silent=True` mode, can you add ENOTDIR as part of the errnos that are absorbed?

https://github.com/pallets/flask/blob/789715adb9949f58b7b0272bed1a58d7cd0fad30/flask/config.py#L132  (and the other similar lines)

I've installed a package with pip, which stores its settings into directory `~/.grip` as one of the potential locations to store its config flags. But the ubuntu package grip uses the same path as a regular file.
When the python-grip tries `config.from_pyfile(x, silent=True)` to figure out its settings, it borks.

It's definitely a packaging bug with the grip tools to use the same path to store their settings (and I'll file that with them), but it remains that I believe in the case of loading config files, passing a non-existent file should silently fail. I don't see the case as being that different than EISDIR (which is already handled).

I'm happy to do a pull request on this.

### Expected Behavior

When loading a config with `Config.from_pyfile()` and friends, from a path in which a (non-basename) component in the path is a regular file, I would expect the config loading to silently fail when `silent=True`,

```python
Paste a minimal example that causes the problem.
```

    # I use Xresources here, because it probably already exists on most systems. but in my
    # case it's "".grip"".
    import os, os.path
    import flask
    APPNAME = ""Xresources""
    SETTINGS_FILE = os.path.expanduser(
        os.path.join(""~"", ""."" + APPNAME, ""settings.py""))

    cfg = flask.Config(""."")

    # borks -- ~/.Xresources already exists as a regular file
    cfg.from_pyfile(SETTINGS_FILE, silent=True)

### Actual Behavior

ENOTDIR is not absorbed and is raised.

```pytb
Paste the full traceback if there was an exception.
```

    Traceback (most recent call last):
      File ""sample.py"", line 11, in <module>
        cfg.from_pyfile(SETTINGS_FILE, silent=True)
      File ""/usr/local/lib/python2.7/dist-packages/flask/config.py"", line 129, in from_pyfile
        with open(filename, mode='rb') as config_file:
    IOError: [Errno 20] Unable to load configuration file (Not a directory): 
    '/home/me/.Xresources/settings.py'


### Environment

* Python version: 2.7.x
* Flask version: 0.12.2
* Werkzeug version: x


"
2544,typos in docs/patterns/distribute page,2017-12-06T09:50:39Z,2017-12-07T14:34:24Z,docs,,,"Hi, I am currently using flask to build a small web service, and I was looking at this doc page about ""deploying flask using setuptools"", and found a minor issue.
In this chapter: [Tagging Builds](http://flask.pocoo.org/docs/0.12/patterns/distribute/),
there is a missing double quote about the aliases settings, also it might be better to have newlines.

The correct formatting should be like below:
![screenshot-2017-12-6 deploying with setuptools flask 0 13 dev documentation](https://user-images.githubusercontent.com/10107120/33655364-1fc8f220-da73-11e7-8849-3f8ea70c6c75.png)
@davidism 


"
2543,SyntaxError: Non-UTF-8 code starting with '\x90' in file flask.exe,2017-12-06T09:49:57Z,2017-12-08T03:55:56Z,,SyntaxError,"SyntaxError: Non-UTF-8 code starting with '\x90' in file D:\ProgramData\Anaconda3\Scripts\flask.exe on line 1, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details","### Expected Behavior

In flask website use tutorials, in the third step ` flask run ` to run my web, appear this mistake.
In py files line first, I use the ` # - coding: utf-8 -- ` specified utf-8.
I'm writing code in Pycharm. Start the web with the CMD run command.
I copy the project directory into ubuntu and it works.
No related problems were found on the Internet.
Please give us some ideas and solve this problem.
thank you

Below is a screenshot of the Pycharm

![](http://ono3vb8rf.bkt.clouddn.com/FiQ9vFgwM9dNrd29zW0gHiFNUUs8.png)

Tell us what should happen.

```shell
kevin@DESKTOP-5KM5T43:~/workspaces/flaskr$ flask run
 * Serving Flask app ""flaskr""
 * Forcing debug mode on
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 244-441-781
```

### Actual Behavior

Tell us what happens instead.

```pytb
D:\workspace\development\python\WebProject\flaskr>flask run
 * Serving Flask app ""flaskr""
 * Forcing debug mode on
 * Restarting with stat
  File ""D:\ProgramData\Anaconda3\Scripts\flask.exe"", line 1
SyntaxError: Non-UTF-8 code starting with '\x90' in file D:\ProgramData\Anaconda3\Scripts\flask.exe on line 1, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details
```

### Environment

* Operating system

```
OS name: Microsoft Windows 10 professional edition
OS version: 10.0.16299 temporary lack of Build 16299
```

* Python version:

```
D:\workspace\development\python\WebProject\flaskr>python --version
Python 3.6.3 :: Anaconda, Inc.
```

* Flask version:

```
D:\workspace\development\python\WebProject\flaskr>python -m flask --version
Flask 0.12.2
Python 3.6.3 |Anaconda, Inc.| (default, Oct 15 2017, 03:27:45) [MSC v.1900 64 bit (AMD64)]
```

* Werkzeug version:

```
Werkzeug (0.12.2)
```


"
2542,"Documentation fix - quickstart ""HTTP Methods"" code example",2017-12-05T16:57:47Z,2017-12-05T16:59:06Z,,,,"Minor documentation fix: 
`return` is required to make 'http methods' example work

"
2541,update pycharm instructions,2017-12-03T07:50:18Z,,,,,"Update Pycharm instructions to run via module name #2535 
"
2540,Rename GitHub templates to Markdown.,2017-12-02T08:11:10Z,2017-12-02T08:17:19Z,,,,The templates in `.github` directory are Markdown. They should be end with `.md` for better rendering on GitHub.
2539,ImportError: cannot import name BooleanFiled,2017-12-02T07:42:28Z,2017-12-02T07:45:17Z,,ImportError,"ImportError: cannot import name BooleanFiled","### Expected Behavior

Tell us what should happen.

```python
Paste a minimal example that causes the problem.
```
from wtforms import StringField
from wtforms import BooleanFiled
### Actual Behavior

Tell us what happens instead.
ImportError: cannot import name BooleanFiled

```pytb
Paste the full traceback if there was an exception.
```

### Environment

* Python version:Anaconda 4.1.0
* Flask version:
* Werkzeug version:
"
2538,It works well,2017-12-02T05:21:50Z,2017-12-02T05:41:44Z,,,,"It works well

Describe what this patch does to fix the issue.

Link to any relevant issues or pull requests.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2537,Update docs/tutorial packaging.rst,2017-12-01T19:07:54Z,2017-12-01T19:18:50Z,,,,"Slightly misleading file path, added full path
"
2536,Docs: update built-in server description,2017-12-01T08:12:48Z,2017-12-16T15:08:32Z,,,,"Update documentation for #2529.
"
2535,Update PyCharm instructions,2017-11-30T15:18:23Z,,docs,,,"2017.3 added the ability to run modules instead of needing to find the `flask` executable in the virtualenv. The instructions in `cli.rst` should be updated to show selecting ""Module name:"" and then typing ""flask"".

cc @doobeh "
2534,export FLASK_APP=run.py doesn't recompile .pyc files (BUG),2017-11-29T20:52:16Z,2017-11-29T21:17:20Z,,,,"I noticed the following error while compiling something and it was irksome. Maybe it is worth looking at idk. 

The issue is the following. 

Say I have the entrypoint to my app be main.py and I export it with `export FLASK_APP=main.py`. If I then later go back and rename the entrypoint run.py and export it, then sometimes flask will continue to use the main.pyc file which will break the application. It may be that this sometimes also occurs with other .pyc files in general, I am not sure - it irks me that previous .pyc files are not destroyed between FLASK_APP runs if shadowing is a possibility. 

Just thought I would point this out - it took me some debugging time and maybe it will save someone else a bit of time. 

Thanks."
2531,0.12.2: two test failures,2017-11-25T12:23:07Z,2017-11-26T20:55:22Z,,,,"When running the selftests for the 0.12.2 distfile from pypi on NetBSD 8.99.7/amd64 with python-3.6.3 and werkzeug 0.12.2, I see two failures:
````
======================================================================================= ERRORS ========================================================================================
____________________________________________________________________ ERROR at teardown of test_session_expiration _____________________________________________________________________

recwarn = WarningsRecorder(record=True)

    @pytest.yield_fixture(autouse=True)
    def catch_deprecation_warnings(recwarn):
        yield
        gc.collect()
>       assert not recwarn.list
E       assert not [<warnings.WarningMessage object at 0x7ede1af11d58>]
E        +  where [<warnings.WarningMessage object at 0x7ede1af11d58>] = WarningsRecorder(record=True).list

conftest.py:134: AssertionError
====================================================================================== FAILURES =======================================================================================
______________________________________________________________________________ test_no_error_swallowing _______________________________________________________________________________

flaskext_broken = None

    def test_no_error_swallowing(flaskext_broken):
        with pytest.raises(ImportError) as excinfo:
            import flask.ext.broken
    
>       assert excinfo.type is ImportError
E       AssertionError: assert <class 'ModuleNotFoundError'> is ImportError
E        +  where <class 'ModuleNotFoundError'> = <ExceptionInfo ModuleNotFoundError tblen=4>.type

test_ext.py:183: AssertionError
============================================================== 1 failed, 314 passed, 10 skipped, 1 error in 7.12 seconds ==============================================================
*** Error code 1
````
"
2530,Improved bad factory error handling,2017-11-24T23:06:26Z,,,,,"This does some bad string parsing to not accidentally silence other errors
(Probably not ideal but that's the best I can come up with)"
2529,Enable threads by default for the dev server,2017-11-24T22:49:02Z,2017-11-24T23:17:09Z,,,,"It's way too easy currently to deadlock the server with background resource
fetching.  We really should have threads enabled by default now in my mind."
2528,Adding more examples,2017-11-24T19:44:45Z,2017-11-24T19:45:58Z,,,,"Describe what this patch does to fix the issue.

Link to any relevant issues or pull requests.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2527,Fix ValueError for some invalid Range requests,2017-11-23T09:33:14Z,2017-11-24T23:37:50Z,,,,
2526,Invalid range with send_file() and xsendfile causes ValueError,2017-11-23T09:13:39Z,2017-11-24T23:44:49Z,bug,AttributeError,"AttributeError: 'NoneType' object has no attribute 'close'","```python
from flask import Flask, send_file

app = Flask(__name__)
app.use_x_sendfile = True


@app.route('/')
def index():
    return send_file('/etc/passwd', mimetype='text/plain', conditional=True)
```

`http get http://127.0.0.1:8009/ Range:bytes=10000-` (the range needs to be invalid, so depending on the file sent the number needs to be higher) fails with this ValueError:

```pytb
Traceback (most recent call last):
  File ""/home/adrian/dev/indico/env/lib/python2.7/site-packages/flask/app.py"", line 1982, in wsgi_app
    response = self.full_dispatch_request()
  File ""/home/adrian/dev/indico/env/lib/python2.7/site-packages/flask/app.py"", line 1614, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/home/adrian/dev/indico/env/lib/python2.7/site-packages/flask/app.py"", line 1517, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/home/adrian/dev/indico/env/lib/python2.7/site-packages/flask/app.py"", line 1612, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/home/adrian/dev/indico/env/lib/python2.7/site-packages/flask/app.py"", line 1598, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/home/adrian/dev/indico/src/flasktest.py"", line 10, in index
    return send_file('/etc/passwd', mimetype='text/plain', conditional=True)
  File ""/home/adrian/dev/indico/env/lib/python2.7/site-packages/flask/helpers.py"", line 594, in send_file
    file.close()
AttributeError: 'NoneType' object has no attribute 'close'
```

Probably just a missing `if file is not None` check."
2525,Docs: update Twisted Web example,2017-11-22T21:45:23Z,2017-11-23T00:35:47Z,,,,"In recent versions of Twisted Web, the `--port` option syntax has changed, and it is now necessary to specify the protocol along with the port."
2524,Docs for change default logging format / Log would print twice after add a stream handler,2017-11-22T06:16:43Z,2017-11-22T06:50:41Z,,,,"Hello,

flask stable version 0.12 , docs  doesn't cover this.   Only dev version has , which not work for 0.12.

I want to change the logging format , after  I add below code 
```
    steam_formatter = logging.Formatter(""[STREAM][%(levelname)s][%(asctime)s][%(name)s][Line:%(lineno)d] %(message)s"")
    stream_handler = logging.StreamHandler()
    stream_handler.setLevel(logging.DEBUG)
    stream_handler.setFormatter(steam_formatter)
    app.logger.addHandler(stream_handler)
```

I find flask would print two log message with different format .  Soon I understand flask still keep its original stream handler . I think reset logging format should be clarified in stable docs."
2523,"Missing import statement in ""Uploading Files"" doc section",2017-11-17T17:14:36Z,2017-11-17T20:05:35Z,"docs, good first issue",NameError,"NameError: global name 'flash' is not defined","### Expected Behavior

Examples in the documentation should be running after copying them. In this case the import statement for the `flash` function is missing in the example code.

### Actual Behavior

Running the example from [Uploading Files](http://flask.pocoo.org/docs/0.12/patterns/fileuploads/) results in
```console
NameError: global name 'flash' is not defined
```
"
2522,doc: add a pattern doc for Dramatiq,2017-11-15T12:02:01Z,,,,,"This adds an entry to the patterns section for [Dramatiq]. Let me know if there's anything I should change! 

[Dramatiq]: https://dramatiq.io"
2521,"Flask.create_url_adapter should use SCRIPT_NAME, not APPLICATION_NAME",2017-11-14T19:06:20Z,2017-11-24T23:34:29Z,,,,"When [`Flask.create_url_adapter`](https://github.com/pallets/flask/blob/c74f46979a8b8358437bd7f76e478d04248a9c72/flask/app.py#L1923) is supplied with a request, it passes the request on to [`Map.bind_to_environment` from `werkzeug.routing`](https://github.com/pallets/werkzeug/blob/master/werkzeug/routing.py#L1253). This will result in a call to `Map.bind`, where the `script_name` argument is set to the value of the environment variable `SCRIPT_NAME`.

However, when it isn't supplied with a request, `Flask.create_url_adapter` will call `Map.bind` directly. Instead of `SCRIPT_NAME`, it passes the value of `APPLICATION_NAME` via the `script_name` argument. Per #1714, I understand that `APPLICATION_NAME` has nothing to do with routing. I guess this should change, but I'm not sure.

I discovered this when debugging a tangentially related issue that turned out to be in my own code (I assumed `MapAdapter` could ultimately be used to translate whole URL paths to endpoints, but it seems I have to strip off `SCRIPT_NAME` myself)."
2520,Don't create View instances for each request,2017-11-14T14:45:10Z,,,,,"`View.as_view` creates a function that instantiates the class every request. This seems inefficient for no real gain.

```python
class DeleteView(View):
    methods = ['DELETE']

    # this only needs to happen once
    def __init__(self, model):
        self.model = model
        # imagine if we did something expensive here
        # like generating a form based on the model
```

The only argument I could think of for instantiating every request is if the constructor does something different based on the request. That seems like bad design, but any use that I can think of for that could be accomplished with properties instead.

Yes, there are ways to make it less expensive, like generating more ahead of time and passing more arguments, but that is not intuitive, and makes the class just a more complicated view factory."
2519,docs: testing: expose init_db function on module,2017-11-13T11:00:52Z,2017-11-13T13:20:54Z,,,,"Hello!

I might've missed it, but when you follow the tutorial, it seems to forget to mention that you need to expose `init_db´ on the module.

Here is a proposal to add it :)

Cheers,

Bernard"
2518,A strange error when a “/a/b/c” route render to a template,2017-11-13T02:58:00Z,2017-11-13T05:12:58Z,,,,"MacOS
* Python version: 2.7.10
* Flask version: 0.12.2
* Werkzeug version: 0.12.2 

I have a view function that render a html template named ""MyViewFunc"", then I add a route rule to this function ```app.add_url_rule(""/a/b/c"", ""MyViewFunc"", MyViewFunc)```.

This caused a strange mistake in browser:
![snip20171113_2](https://user-images.githubusercontent.com/4526759/32707800-ff513d84-c7eb-11e7-8fa9-995cf2fd6eaf.png)

But when write as ```app.add_url_rule(""/a"", ""MyViewFunc"", MyViewFunc)```, it's ok

"
2517,Exception while opening session causes auto_pop not to be executed on the context,2017-11-10T12:31:10Z,,,redis.exceptions:TimeoutError,"redis.exceptions:TimeoutError: Timeout reading from socket","### Expected Behavior

auto_pop of the request context should be executed regardless of whether an exception happened after pushing the context(for example, when opening a session).

We're using Redis sessions from flask_session:
```python
def _setup_session(app):
    from util.cache.region import cache_region
    from dogpile.cache.backends.null import NullBackend
    from flask_session import RedisSessionInterface

    if not isinstance(cache_region.backend, NullBackend):
        redis = cache_region.backend.client
        session_interface = RedisSessionInterface(redis, 'test.session.', use_signer=False, permanent=False)
        app.session_interface = session_interface
```

### Actual Behavior

The request context is not popped whenever there is a timeout getting the session from Redis. 
We can see in following requests the 'g' object still holds information from the failing request.

In ctx.py the context is first pushed and then the session is opened:
```pytb
        _request_ctx_stack.push(self)

        # Open the session at the moment that the request context is
        # available. This allows a custom open_session method to use the
        # request context (e.g. code that access database information
        # stored on `g` instead of the appcontext).
        self.session = self.app.open_session(self.request)
```

But if open_session() fails, then ctx.auto_pop() is not executed. Perhaps ctx.push() should also be under the try...finally block in app.py?

This is the exception that triggers the context not to be popped:
```pytb
redis.exceptions:TimeoutError: Timeout reading from socket
Traceback (most recent call last):
File ""/var/www/censored_production/env/lib/python2.7/site-packages/newrelic-2.74.0.54/newrelic/api/web_transaction.py"", line 738, in __iter__
File ""/var/www/censored_production/env/lib/python2.7/site-packages/newrelic-2.74.0.54/newrelic/api/web_transaction.py"", line 1114, in __call__
File ""/var/www/censored_production/env/lib/python2.7/site-packages/werkzeug/contrib/fixers.py"", line 152, in __call__
File ""/var/www/censored_production/www/censored/util/logging.py"", line 136, in __call__
File ""/var/www/censored_production/env/lib/python2.7/site-packages/flask/app.py"", line 1813, in wsgi_app
File ""/var/www/censored_production/env/lib/python2.7/site-packages/flask/ctx.py"", line 321, in push
File ""/var/www/censored_production/env/lib/python2.7/site-packages/flask/app.py"", line 825, in open_session
File ""/var/www/censored_production/env/lib/python2.7/site-packages/flask_session/sessions.py"", line 132, in open_session
File ""/var/www/censored_production/env/lib/python2.7/site-packages/newrelic-2.74.0.54/newrelic/hooks/datastore_redis.py"", line 67, in _nr_wrapper_Redis_method_
File ""/var/www/censored_production/env/lib/python2.7/site-packages/redis/client.py"", line 880, in get
File ""/var/www/censored_production/env/lib/python2.7/site-packages/redis/client.py"", line 573, in execute_command
File ""/var/www/censored_production/env/lib/python2.7/site-packages/redis/client.py"", line 585, in parse_response
File ""/var/www/censored_production/env/lib/python2.7/site-packages/redis/connection.py"", line 577, in read_response
File ""/var/www/censored_production/env/lib/python2.7/site-packages/redis/connection.py"", line 238, in read_response
File ""/var/www/censored_production/env/lib/python2.7/site-packages/redis/connection.py"", line 168, in readline
File ""/var/www/censored_production/env/lib/python2.7/site-packages/redis/connection.py"", line 139, in _read_from_socket
```

### Environment

* Python version: 2.7.6
* Flask version: 0.10.1
* Werkzeug version: 0.11.11
"
2516,Minor bug in examples/flaskr/README,2017-11-09T22:02:10Z,2017-11-09T22:10:18Z,,,,"### Expected Behavior
Line which exports FLASK_APP ends with success.

### Actual Behavior
Line which exports FLASK_APP ends with error:
bash syntax error near unexpected token ('

PR: https://github.com/pallets/flask/pull/2515"
2515,Minor fix in flaskr example README,2017-11-09T22:01:58Z,2017-11-09T22:10:10Z,,,,"Describe what this patch does to fix the issue.
Export of FLASK_APP ends with success.
"
2514,Unable to generate the PDF version of the documentation,2017-11-09T07:00:59Z,,,,,"commit rev: 470112dd6e708a18eb4ec1daa10c4ea276620dbf
python: 3.6.2

in the `docs` directory, just execute `make latexpdf`, there are issues with `\maketitle` and an unicode char.
```
(/usr/share/texlive/texmf-dist/tex/latex/hyperref/nameref.sty
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/gettitlestring.sty))
! Undefined control sequence.
\maketitle ...tnoterule \relax \ifsphinxpdfoutput 
                                                  \begingroup \def \\{, } \p...
l.66 \maketitle
               
? 
```

```
! Package inputenc Error: Unicode char 🎉 (U+1F389)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.20767 Celebrate 🎉
                      
? 
```

```
Collected error summary (may duplicate other messages):
  pdflatex: Command for 'pdflatex' gave return code 1
      Refer to 'Flask.log' for details
Latexmk: Use the -f option to force complete processing,
 unless error was exceeding maximum runs of latex/pdflatex.
make[1]: *** [Makefile:33: Flask.pdf] Error 12
make[1] : on quitte le répertoire « /home/stephane/src/github.com/pallets/flask/docs/_build/latex »
make: *** [Makefile:101: latexpdf] Error 2
```"
2513,Rewrite tutorial and example,2017-11-08T20:34:02Z,,docs,,,"Rewrite the tutorial and corresponding example, taking into account new and common patterns for Flask."
2512,Idea: `flask run`-like command for production,2017-11-07T08:24:48Z,,,,,"Sentry has this for example, and they simply run uWSGI (which can be installed via `pip`); configured with sane defaults through environment variables: https://github.com/getsentry/sentry/blob/master/src/sentry/services/http.py

I think this would make sense for Flask too since it'd make simple use cases easier (people just wanting to run a small application without having to configure much).

---

This could be done in a separate standalone package providing a new cli command instead of having it in the Flask core, but I think having an issue here is a good idea anyway in case someone is looking for something to contribute."
2511,No documentation for how to test CLI commands,2017-11-06T07:54:29Z,,,,,"There is currently no documentation for how to ""officially"" test Flask CLI commands. It seems appropriate that there should be a section about it on this page: http://flask.pocoo.org/docs/0.12/testing/.

I know there was a previous issue (#1709) that got closed, but I do believe it is an issue that there is no documentation on this very important topic. Furthermore, it is also very hard to find information about how to do it online (that old issue is literally the only page I found that is relevant)."
2510,Improve README for flaskr example,2017-11-05T09:53:57Z,2017-11-08T20:37:05Z,docs,,,"Please improve the [readme file](https://github.com/pallets/flask/blob/master/examples/flaskr/README) for the flaskr example.

Include more details on how to set it up, **especially for step 1**.  

I could not get step 3 to work probably because I didn't get step 1 to work. This is the error I'm getting:
`$ export FLASK_APP=flaskr.factory:create_app() `
`-bash: syntax error near unexpected token `(' `

Thanks !

"
2509,Fixed typo in docs,2017-11-02T19:25:21Z,2017-11-02T19:30:10Z,,,,"Changed ""when"" to ""how"" as the subsequent text talks about ""how to store data on the `g` object"".
<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2508,"Provide a ""media"" route",2017-11-02T15:10:27Z,,,,,"Similar to the static route, add configuration and a route to serve uploaded files. Default to `os.path.join(app.instance_path, 'uploads')` and `/media/<path:filename>`. I've observed new developers thinking they should place user uploads in the static folder, which is not a good pattern (since that would be modifying package assets). A separate media folder will hopefully help with this."
2507,Percent encoded forward slash is stil treated as a URL component delimiter,2017-10-28T15:13:39Z,2017-10-28T15:18:22Z,,,,"### Expected Behavior

When a forward slash (`/`) is percent encoded, it should not be treated as a delimiter in a URL but instead should be treated as a string character.

```python
from flask import Flask
app = Flask(__name__)

@app.route('/<string:foo>')
def index(foo):
    return foo

app.run('localhost', 3000)
```

```bash
$ curl localhost:3000/foo%2Fbar
foo/bar
```


### Actual Behavior

```bash
$ curl localhost:3000/foo%2Fbar
<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again.</p>
```

### Environment

* Python version: `Python 3.5.3`
* Flask version: `0.12.2`
* Werkzeug version: `0.12.2`

venv:
```
click==6.7
Flask==0.12.2
itsdangerous==0.24
Jinja2==2.9.6
MarkupSafe==1.0
Werkzeug==0.12.2
```

### Use Case

A website has the URL rule `/<string:company>/<string:user>`. Company names and users would have to have the slash character disallowed otherwise they would not be able to be cleanly represented as a URL.


### A Second Example

A second issue that I assume is directly related is that `url_for` doesn't escape the forward slash.

```python
from flask import Flask, Markup, request, redirect, url_for
app = Flask(__name__)

@app.route('/', methods=('GET', 'POST'))
def index():
    if request.method == 'POST':
        return redirect(url_for('other', foo=request.form['foo'], bar=request.form['bar']))
    else:
        return Markup(
            '''<form method=""POST"">
                 <input name=""foo"" type=""text"">
                 <input name=""bar"" type=""text"">
                 <input type=""submit"" value=""Submit"">
               </form>
            ''')


@app.route('/other/<string:foo>/<string:bar>')
def other(foo, bar):
    return '{}<br>{}'.format(foo, bar)


app.run('localhost', 3000)
```

In the browser, submitting `foo/moarfoo` and `bar` into the two fields yields the URL `/foo/moarfoo/bar` instead of `/foo%2Fmoarfoo/bar`."
2506,add option to use None config for later evaluation,2017-10-27T23:58:10Z,2017-10-30T20:47:05Z,,,,"Allows to create ""empty"" configuration object in order to initialize it in later during runtime. #2495"
2505,Flask server not running on Arch Linux,2017-10-26T18:32:59Z,2017-10-26T19:48:33Z,,,,"I get this error with: python -m app.py
**Error while finding module specification for 'app.py' (AttributeError: module 'app' has no attribute '__path__')**

and with python app.py nothing happening, either in venv or system."
2504,Remove IRC notifications from Travis CI,2017-10-25T05:59:57Z,2017-10-25T11:09:42Z,,,,"Fixes #2481.


<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2503,WAV files cannot play in Safari,2017-10-24T22:46:38Z,,,,,"### Expected Behavior

I'm trying to embed an audio player in my Flask website. Here's the relevant part of my `index.html`:

    <audio controls>
    <source src=""/static/{{audio_file}}"" type=""audio/wav"">
    Your browser does not support the audio element.
    </audio>

This works well in Firefox, but not in Safari.

### Actual Behavior

- Safari does show the audio controls, but the audio doesn't load.  
- I can download the file in Safari if I right-click the audio player.
- 'Open audio in new window' gives me a window with the 'play' button with a line struck through, indicating that Safari cannot play the file.

What's frustrating is that *the exact same HTML* (replacing `{{audio_file}}` with the actual filename) does work in Safari when I'm not using Flask (i.e. just opening static html in Safari). So something inside Flask keeps the audio from working.

I just tried a different file type (mp3, using `house_lo.mp3` copied from the pygame examples), and that works fine in Safari. So the problem only occurs when using `.wav` files. mp3 could solve the problem for me (just convert everything), but it's not ideal.

    <audio controls>
    <source src=""/static/house_lo.mp3"" type=""audio/mp3"">
    Your browser does not support the audio element.
    </audio>

### Environment

* Python version: 3.6.1 , Anaconda, OS X Sierra
* Flask version: 0.12
* Werkzeug version: 0.11.15

I've posted this issue on [StackOverflow](https://stackoverflow.com/questions/46914468/how-to-make-embedded-wav-audio-work-in-safari-using-flask) as well."
2502,Fix typo in cli.py,2017-10-24T06:09:40Z,2017-10-24T06:10:13Z,,,,Fix typo in documentation.
2501,Add CODE OF CONDUCT,2017-10-24T03:45:52Z,2017-10-24T04:19:02Z,,,,"It is recommended by GitHub as a part of its [community standards](https://opensource.guide/).
As it facilitates healthy and constructive community behavior.
More on this [here](https://opensource.guide/code-of-conduct/)."
2500,Improvements in the final sections of appfactories.rst,2017-10-19T19:47:53Z,2017-10-30T20:48:29Z,,,,"This fixes a self-reported issue.

The final sections of `appfactories.rst` stood out to me while I was going through the docs.

Made some minor changes to sentences so that they flow better.
The punctuation is also more consistent now (in the final list).

With regards to:

> The following changes are straightforward and possible:

""possible"" was removed because it felt like it was implied in the context (why suggest them if they're not possible?). I did not get the same feeling about the implementation part, so I added an explicit ""to implement"" (because that's what the straightforwardness refers to)."
2499,doron-test - ignore please,2017-10-19T10:52:35Z,2017-10-19T10:52:44Z,,,,"Describe what this patch does to fix the issue.

Link to any relevant issues or pull requests.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2498,Flask uploaded files successfully and the database changed but can't find the uploaded file in in the server,2017-10-19T10:33:43Z,2017-10-19T12:30:25Z,,,,"hi,I used Flask to upload files to the server,.while I was uploading,nothing went wrong and there were not any bugs either, after the file was uploaded,the database was also modified, but when uploading finished, I clicked on the file link to find that no corresponding file on the server so the downloading process failed.Actually,there was a judgment after uploading,only when the file saved successfully success that it would write the database, but now the result turned out to be opposite,so I don't know where went wrong.Can somebody have a look?

### my upload file function
```
def upload_file(file_src, des_path, allowed_type=None):
    if file_src.filename == '':
        message = gettext('No selected file')
        return False, message

    extension = file_src.filename[file_src.filename.rfind('.')+1:]
    file_type = extension_to_file_type(extension)
    folder = des_path[:des_path.rfind('/')]

    if not allowed_type:
        allowed_type = current_app.config['ALLOWED_RESOURCE_TYPE']

    if file_src and '.' in file_src.filename and file_type in allowed_type:
        if not os.path.exists(folder):
            os.makedirs(folder)
        file_src.save(des_path)
        unique_uri = os.stat(des_path).st_mtime
        if os.path.exists(des_path):
            return True, unique_uri
        else:
            message = gettext(""Save File Failed!"")
            return False, message
    else:
        message = gettext(""Invalid file"")
        return False, message
```


```python
Paste a minimal example that causes the problem.
```



### Environment

* Python version: 2.7.14
* Flask version: 0.11.1
* Werkzeug version:
"
2497,"Support ""immutable"" Cache-Control extension",2017-10-18T09:16:05Z,2017-10-18T12:37:43Z,,,,"https://bitsup.blogspot.fr/2016/05/cache-control-immutable.html

It would mean adding the `immutable` attribute to [ResponseCacheControl](http://werkzeug.pocoo.org/docs/0.12/datastructures/#werkzeug.datastructures.ResponseCacheControl) (default to False)."
2496,Unable to execute Flask.,2017-10-18T06:17:34Z,2017-10-18T12:38:58Z,,,,"i installed flask and flask-ask . and then i wrote flask run command but error occured
it says : Could not locate Flask application. You did not provide the FLASK_APP environment variable.
i'm stuck here.
plz help me."
2495,Support for Config(None) initialization,2017-10-17T20:30:58Z,2017-10-30T20:46:41Z,,TypeError,"TypeError: expected str, bytes or os.PathLike object, not NoneType","
### Expected Behavior

It may be an unusual case, but I initialize Config objects just to load remote secure environment variables in addition to my normal app config loading. I've always just initialized with Config(None) under Python 2, but have just switched over to Python 3 and it throws an exception as described below. Note that the file is loaded into a local temp file.

I can work around the problem by putting anything in for root_path, but it would be cleaner if I could pass None for the root_path. I would expect Flask to assume fully qualified paths for files if root_path is not set.

```python
config = Config(None)
with tempfile.NamedTemporaryFile() as s3_file:
    if get_config_file(stage, s3_file.name):
        config.from_pyfile(s3_file.name)
```

### Actual Behavior

The os.path.join() call fails since the root_path is None.

```pytb
  File ""/app/config.py"", line 28, in _from_s3
    config.from_pyfile(s3_file.name)
  File ""/usr/lib/python3.6/site-packages/flask/config.py"", line 125, in from_pyfile
    filename = os.path.join(self.root_path, filename)
  File ""/usr/lib/python3.6/posixpath.py"", line 78, in join
    a = os.fspath(a)
TypeError: expected str, bytes or os.PathLike object, not NoneType
```

### Environment

* Python version: 3.6
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2494,The FlaskClient.open(test_client) parameter could be explict,2017-10-16T16:29:50Z,,,,,"Hi,
I'm always confuse about  keyword args in test method(GET, POST...). 
For example, test post files or json, but I find solutions in StackOverFlow everytimes. 

I debug in source code, find  `FlaskClient.open` and `werkzeug.EnvironBuilder` .

Maybe, we could give some test demo in  Testing and  give more explict description in `FakeClient.open` like [requests](http://docs.python-requests.org/en/master/api/)


"
2493,Fix misleading documentation,2017-10-13T12:28:40Z,2017-10-13T13:06:38Z,,,,"IMO, you would normally interpret ""creating and closing database connections all the time"" as ""creating and closing database connection on each request"" as opposed to keeping persistent database connection for a lifetime of an application. However, the documentation is either misleading or ""creating and closing database connection on each query"" was implied. This, and the term ""**application** context"" itself makes it look like data placed into flask.g will be available for the following requests, which is not true at all. Let's make the documentation more explicit on this."
2492,Fix typo in logging.rst,2017-10-13T11:52:51Z,2017-10-13T11:53:50Z,,,,"Remove extra parenthesis from RequestFormatter constructor.
"
2491,Fixed grammar/typos,2017-10-11T13:55:52Z,2017-10-11T14:03:33Z,,,,
2490,Rewrite CLI errors and docs,2017-10-10T18:21:24Z,2017-10-10T18:59:29Z,docs,,,"Reword the CLI loader errors to use current examples and try to describe the issues more accurately. Refactor the loader code.

Entirely rewrite the CLI docs. Wording is tightened up, sections are reorganized. Section about app detection quickly explains basics and shows typical values, then explains full rules.

closes #2027 
"
2489,pickle and cPickle can't find class from import,2017-10-10T15:39:57Z,2017-10-10T16:08:30Z,,AttributeError,"AttributeError: 'module' object has no attribute 'Foo'","### Expected Behavior

inside blueprints.flaskr.py from flask examples I add some code

```python
from foo import Foo

@bp.route('/')
def index():
    a = Foo()
    print a
    # a is valid Foo object, no error here
    with open('some_pkl_file', 'rb') as f:
        # Foo object in some_pkl_file
        my_foo = cPickle.load(f)
    print my_foo
    # other things
```

### Actual Behavior

cPickle and pickle can't find Foo. Even after I installed ```foo``` as package. Looks like ```import``` inside flask application imports packages to some special namespace or context, where ```pickle``` or ```cPicke``` can't find them. I open this issue because I spent a day and didn't find any information about this. If someone know how to fix this, help me =)

```pytb
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1997, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1985, in wsgi_app
    response = self.handle_exception(e)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1540, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1982, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1614, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1517, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1612, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1598, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/path/flaskr/flaskr/blueprints/flaskr.py"", line 58, in index
    my_foo = cPickle.load(f)
AttributeError: 'module' object has no attribute 'Foo'
```

### Environment

* Python version: 2.7
* Flask version:0.12.2
* Werkzeug version:'0.12.2'
"
2488," ""flask_wtf.Form"" has been renamed to ""FlaskForm"" and will be removed in 1.0.",2017-10-10T12:42:29Z,2017-10-10T12:43:08Z,,,,"I working from i didn't face any issues but now i'm getting issues when i am submitting form data like this  ""flask_wtf.Form"" has been renamed to ""FlaskForm"" and will be removed in 1.0."
2487,RE: Errors and BeagleBone Black/Flask and Python,2017-10-09T00:47:50Z,2017-10-09T02:27:10Z,,,,"Hello,

I have an issue. I am basically reading out of a book. I run a Debian Distro kernel 4.4.x on a beagleBone Black Wireless.

I am using Adafruit_BBIO for software to hardware connections. Adafruit_BBIO is basically a Rasp. Pi build for the BBB with PWM, i2c, UART, ADC, and others.

Expected Behavior of the Program:

This software runs a Flask app to allow me to know when, while online via 192.168.7.2:5000, someone has opened my door and for how long. I have followed some directions out of a book I purchased.

There is also a LED that should allow for dimming and brightening via Web address and a numerical value of that address. 

    from flask import Flask, render_template
    app = Flask(__name__)
    import Adafruit_BBIO.GPIO as GPIO
    import Adafruit_BBIO.PWM as PWM

    PWM.start(""P8_13"", 0.0)

    @app.route(""/"")
    def hello():
        if GPIO.input(P8_11):
            doorStatus = ""open""
        else:
            doorStatus = ""closed""
        templateData = {
            'doorStatus': doorStatus,
        }
        return render_template('main-door.html', **templateData)
    
    @app.route('/ledLevel/<level>')
    def pin_state(level):
        PWM.set_duty_cycle(""P8_13"", float(level))
        return ""LED level set to "" + "".""
    
    if __name__ == ""__main__"":
        app.run(host='192.168.7.2', port=5000, debug=True)

I get an error code. 

    Exception in thread Thread-1 (most likely raised during interpreter shutdown):
    Traceback (most recent call last):
      File ""/usr/lib/python2.7/threading.py"", line 801, in __bootstrap_inner
      File ""/usr/lib/python2.7/threading.py"", line 754, in run
      File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 702, in inner
      File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 539, in serve_forever
      File ""/usr/lib/python2.7/SocketServer.py"", line 236, in serve_forever
      File ""/usr/lib/python2.7/threading.py"", line 585, in set
      File ""/usr/lib/python2.7/threading.py"", line 407, in notifyAll
    <type 'exceptions.TypeError'>: 'NoneType' object is not callable

![book work](https://user-images.githubusercontent.com/9708195/31322636-2904638c-ac61-11e7-94ee-8981d78a2321.JPG)



### Environment

* Python version: 2.7.13
* Flask version: 0.12.2
* Werkzeug version: I cannot find what version is located on my system. I did find this when trying to sudo pip install flask:  Werkzeug>=0.7

Seth

P.S. If you have time to review all this mess, please let me know. If you want me to look up items, please direct me. Thank you again for any support. 
"
2486,Drop unsupported Python 2.6 and 3.3,2017-10-08T19:05:22Z,2017-10-08T19:33:11Z,,,,"## Reasons for dropping old ones

### 2.6

* Unsupported since [2013-10-29](https://en.wikipedia.org/wiki/CPython#Version_history)
* https://snarky.ca/stop-using-python-2-6/
* http://www.curiousefficiency.org/posts/2015/04/stop-supporting-python26.html
* http://www.python3statement.org
* Current pip 9 deprecates Python 2.6 support, pip 10 won't support it (https://github.com/pypa/pip/issues/3955)
* Not much PyPI traffic (June 2016) https://github.com/pypa/pip/issues/3796

### 3.2

* (Already dropped 👍 )

### 3.3

* Unsupported since [2017-09-29](https://en.wikipedia.org/wiki/CPython#Version_history)
* pip 10 will deprecate Python 3.3 support, pip 11 won't support it (https://github.com/pypa/pip/issues/3796)
* Very little PyPI traffic (June 2016) https://github.com/pypa/pip/issues/3796

### Also

This prevents this project's dependencies, such as MarkupSafe, from moving forward. See https://github.com/pallets/markupsafe/pull/79#issuecomment-335014965.
* [ ] Changelog

"
2485,running flask with debug mode throws an error,2017-10-08T12:10:10Z,2017-10-08T20:34:35Z,,SyntaxError,"SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\Users\Tim\Anaconda3\envs\flaskr\Scripts\flask.exe on line 1, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details","### Expected Behavior

If I active debug mode the program fails as is shown below. However with deactivated debug mode the program runs fine.

```python
from flask import Flask

app = Flask(__name__)


@app.route('/')
def hello_world():
    return 'Hello World!'


if __name__ == '__main__':
    app.run()
```

### Actual Behavior


```pytb
* Serving Flask app ""flask_hello_world""
 * Forcing debug mode on
 * Restarting with stat
  File ""C:\Users\Tim\Anaconda3\envs\flaskr\Scripts\flask.exe"", line 1
SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\Users\Tim\Anaconda3\envs\flaskr\Scripts\flask.exe on line 1, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details
```

### Environment

I am running it on Windows 10. Python and packages are installed through Anaconda.

* Python version: 3.6
* Flask version: 0.12.2
* Werkzeug version: 12.2
"
2484,Allow users to customize the behavior of flask.abort,2017-10-06T14:15:38Z,2017-10-09T14:23:23Z,,,,"Prior to werkzeug 0.12.2, it was possible to manipulate the status code to exception type maps flask used by invoking

    flask.abort.mapping.update(mapping)

This brings that back by creating a flask specific werkzeug.exceptions.Aborter object and exposing it as flask.aborter. It also implements a flask.abort function so that the correct docstring is exposed:

    flask.aborter.mapping.update(mapping)

I've included tests for the new feature which include 100% coverage of the new code branches, and all tests pass (in python 2.7).

This also helps address #2218 without having to lock to the specific version of werkzeug."
2483,AttributeError: 'module' object has no attribute 'app',2017-10-04T15:37:58Z,2017-10-04T15:41:39Z,,AttributeError,"AttributeError: 'module' object has no attribute 'app'","I pulled the latest master branch and ran ""python setup.py install"". 
Then, I tried to load flask.app.test_client(), but it fails.
Please let me know how to overcome this. Thank you!

```
MOOLE04mac1231:flask moole04$ python
Python 2.7.10 (default, Feb  7 2017, 00:08:15)
[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.34)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import flaskr
>>> t= flaskr.app.test_client()
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
AttributeError: 'module' object has no attribute 'app'
>>>
```"
2482,TypeError: Decimal('1.600') is not JSON serializable,2017-10-03T09:43:05Z,2017-10-03T12:51:08Z,,,,"I've encountered an avoidable bug in Flask's jsonify module. 
When trying to push a dictionary with includes one (or multiple) Decimal objects through jsonify we encounter the following error:
 

> TypeError: Decimal('1.600') is not JSON serializable

I've traced back the error to the following python file:
/usr/lib64/python2.7/site-packages/flask/json.py


The JSON module used by Flask comes from 'itsdangerous' which doesn't seem like a great idea, mostly because the version seems depreciated. 
Since a lot of users run queries from the database through jsonify it is not unthinkable that more users are facing this issue, and have to jump around in hoolaphoops to get it working. 
By using the 'simplejson' module ( > 2.1 ; released on 11 Mar 2010) we can avoid this and use the 'use_decimals' option in simplejson.dump. 

Thefore I would like to propose the following codechange in flask/json.py: 
[import statement]
```
# Try to use the default simplejson implementation. This is good for performance and stability.
# Otherwise use the same json implementation as itsdangerous on which we
# depend anyways.
try:
    import simplejson as _json
except ImportError:
    try:
        from itsdangerous import simplejson as _json
    except ImportError:
        from itsdangerous import json as _json
```

### Environment

* Python version: 2.7
* Flask version: 0.12.2
* Werkzeug version: 0.12
* simplejson version: 3.11.1
"
2481,stop travis irc notifications from forks,2017-09-30T16:38:18Z,2017-10-25T11:09:42Z,,,,"See https://github.com/travis-ci/travis-ci/issues/1094#issuecomment-215019909 and 
https://github.com/mozilla/build-tools/commit/c13a297. Using a secure value for the IRC channel prevents notifications from forks."
2480,Flask complete demo app,2017-09-30T15:31:28Z,2017-09-30T15:32:33Z,,,,"Hi all, 

[removed link]

If it can help you in study and practices, I would like to share with you a complete flask demo app, easy professional examples of common web services we can get with this great micro-framework flask ; Featurng bootstrap themes, authentication and backoffice admin, Secured admin panel, pagination, resources CRUD, modular structure, REST json responses or Html renders, some utils like config files for Nginx and Gunicorn and much more. 


### Environment
* Python version: 2 and 3
* Flask version: 0.12
* Werkzeug version: 0.11.15
"
2479,Flask crashes on startup,2017-09-30T08:12:25Z,2017-09-30T09:17:48Z,,SyntaxError,"SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\Anaconda3\envs\flaskui\Scripts\flask.exe on line 1, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details","---

### Expected Behavior

The app should've run

```python
any flask app really
```

### Actual Behavior

Flask didn't startup properly and threw an errorcode

```pytb
$ flask run
* Serving Flask app ""falsker""
* Forcing debug mode on
* Restarting with stat
File ""C:\Anaconda3\envs\flaskui\Scripts\flask.exe"", line 1
SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\Anaconda3\envs\flaskui\Scripts\flask.exe on line 1, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details
```

### Environment

* Python version: 3.6.2 on Anaconda
* Flask version:0.12.2
* Werkzeug version:0.12.2
"
2478,Adding elements to a dictionary global to an app,2017-09-29T09:14:48Z,2017-09-29T09:15:58Z,,,,"Inside my flask app, I want to have a dictionary to which key-value pairs can be added throughout the app lifecycle.

Here is what I am trying to do:

```
app = Flask(__name__)

@app.route('/incoming_key_value', methods=['POST'])
def add_dic_element():
    global results
    results[time.time()] = time.time()
    print (results)
    return 'OK'

if __name__ == '__main__':
    results = {'test':00000}
    app.run()
```
I want to add a key-value pair to the dictionary with every POST request.

So, after hitting `add_dic_element` function twice I would expect my `results` to look like this:

`{1506672672.252906: 1506672672.2529054, 1506672665.4726737: 1506672665.472673, 'test': 00000}`

But regardless how many times I hit the `add_dic_element` function the `results` will only have the initial element and the **last** value added by `add_dic_element`. Like this:

`{1506672672.252906: 1506672672.2529054, 'test': 0}`

How do I make so that I keep adding elements to the global dictionary?"
2477,Add a concept of application teardown,2017-09-27T18:44:10Z,2017-10-09T14:12:26Z,,,,"The main purpose of this is to have a single place where extensions
can register their cleanup functions. If you are creating many app
instances for testing purposes, you need to keep track of all
individual extensions and release the resources from all of them.
Allowing them to register a cleanup function inside init_app would
hide the complexity and app.close() would be the only thing tests
need to care about."
2476,Fix Travis CI argparse import error on Python 2.6,2017-09-24T01:20:38Z,2017-09-28T17:59:43Z,,ImportError,"ImportError: No module named argparse","Tracebacks in [Travis CI](https://travis-ci.org/pallets/flask/jobs/278955320) :
```pytb
codecov runtests: commands[2] | codecov
Traceback (most recent call last):
  File ""/home/travis/build/pallets/flask/.tox/codecov/bin/codecov"", line 7, in <module>
    from codecov import main
  File ""/home/travis/build/pallets/flask/.tox/codecov/lib/python2.6/site-packages/codecov/__init__.py"", line 8, in <module>
    import argparse
ImportError: No module named argparse
ERROR: InvocationError: '/home/travis/build/pallets/flask/.tox/codecov/bin/codecov'
___________________________________ summary ____________________________________
  py: commands succeeded
ERROR:   codecov: commands failed
```

Tips in [argparse's PyPI page](https://pypi.python.org/pypi/argparse):
> As of Python >= 2.7 and >= 3.2, the argparse module is maintained within the Python standard library. For users who still need to support Python < 2.7 or < 3.2, it is also provided as a separate package, which tries to stay compatible with the module in the standard library, but also supports older Python versions.

Relevant pull request: #2475 "
2475,Fix typo in comment,2017-09-23T14:28:01Z,2017-09-28T18:00:49Z,,,,"Delete repeat word in comment.
"
2474,"flask thread is always running, can't stop",2017-09-22T13:25:39Z,2017-10-09T15:30:57Z,,RuntimeError,"RuntimeError: dictionary changed size during iteration","### flask thread is always running, can't stop
I use flask as http server, for Multi-threaded support, I set `threaded=True`, The Call Stack shows every thread is running and not cancel when function finished.

![20170920194345](https://user-images.githubusercontent.com/4026598/30746348-24f4018a-9fdc-11e7-9a37-d93867813967.png)

And the memory has been growing until crashed.
![ilekf](https://user-images.githubusercontent.com/4026598/30746436-6139ae24-9fdc-11e7-98a9-8aaa6433f98e.png)

```
[2017-09-22 21:05:07,303] ERROR in app: Exception on /api [POST]
Traceback (most recent call last):
  File ""D:\Program_Files\Python\Python2\lib\site-packages\flask-0.12.2-py2.7.egg\flask\app.py"", line 1982, in wsgi_app
    response = self.full_dispatch_request()
  File ""D:\Program_Files\Python\Python2\lib\site-packages\flask-0.12.2-py2.7.egg\flask\app.py"", line 1614, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""D:\Program_Files\Python\Python2\lib\site-packages\flask-0.12.2-py2.7.egg\flask\app.py"", line 1517, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""D:\Program_Files\Python\Python2\lib\site-packages\flask-0.12.2-py2.7.egg\flask\app.py"", line 1612, in full_dispatch_request
    rv = self.dispatch_request()
  File ""D:\Program_Files\Python\Python2\lib\site-packages\flask-0.12.2-py2.7.egg\flask\app.py"", line 1598, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""d:\Workspace\python\ftp-server\code\Http_Server.py"", line 37, in api
    for index in socket_map:
RuntimeError: dictionary changed size during iteration
```

### Environment

* Python version: 2.7.13
* Flask version: flask-0.12.2-py2.7.egg
* Werkzeug version: werkzeug-0.12.2-py2.7.egg
"
2473,Error: The file/path provided (server) does not appear to exist.  Please verify the path is correct. ,2017-09-19T14:18:06Z,2017-09-19T14:21:28Z,,"Error, ImportError","Error: The file/path provided (flask_error_demonstration) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py, ImportError: No module named 'aoeu'","### Expected Behavior

When I `import some_package_that_doesnt_exist` I should get `ImportError: No module named 'some_package_that_doesnt_exist'`, but something is swallowing the `ImportError` and assuming it means I mistyped the filename of my server code.


```python
from flask import Flask
app = Flask(__name__)

import aoeu
```

what happens

```bash
$ export FLASK_APP='flask_error_demonstration.py'
$ flask run
Usage: flask run [OPTIONS]

Error: The file/path provided (flask_error_demonstration) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py
```

what should happen

```bash
$ export FLASK_APP='flask_error_demonstration.py'
$ flask run
ImportError: No module named 'aoeu'
```

* Python version: 3.5.3
* Flask version: 0.12.2
"
2472,nvm,2017-09-15T18:37:42Z,2017-09-15T18:39:36Z,,,,
2471,Link to PDF version of docs on website is broken,2017-09-12T17:42:52Z,2017-09-12T19:30:33Z,,,,"Website link to PDF documentation is broken.

http://flask.pocoo.org/docs/0.12/.latex/Flask.pdf"
2470,[ImgBot] optimizes images,2017-09-12T04:37:03Z,2017-09-12T10:55:41Z,,,,"Hey there. I've just optimized all of your images. They are the same dimensions and quality as before, only they take up less space now.

\docs\_static\no.png (18.3%))
\docs\_static\touch-icon.png (64.21%))
\docs\_static\flaskr.png (8.32%))
\docs\_static\pycharm-runconfig.png (14.65%))
\docs\_static\debugger.png (2.79%))
\docs\_static\flask.png (30.15%))
\docs\_static\yes.png (13%))
\docs\_static\logo-full.png (29.33%))

Describe what this patch does to fix the issue.

Link to any relevant issues or pull requests.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2469,"url_for uses _request_ctx for its choice of default_methods, this seems wrong",2017-09-08T20:32:20Z,2017-10-12T14:57:34Z,,,,"In response to a POST, I wanted to construct a URL pointing at a different URL (the home of the created object) which did NOT support POST.

It turns out, this doesn't work with Flask==0.12.2. The rule I want doesn't match, so I end up matching a less specific rule, with the distinguishing name treated as a parameter, not a path.

What appears to be happening is that default method is being pulled out of _request_ctx early in url_for(). In this case, that method will be a POST.

I'm not sure if defaulting to the request's current method is really desirable. How often are you responding to a POST and want url_for to respond with the best match for POST? I think typically most endpoints will respond to a GET, but many endpoints won't respond to a POST.

The workaround is to include the undocumented _method keyword argument. That will work (hopefully permanently), but I'd prefer:

A) for this to be explicitly supported by the API, and
B) I think the default should probably always be GET. My guess is that will be correct far more 
"
2468,helpers.send_file doesn't close file,2017-09-08T10:11:45Z,2017-09-22T01:01:52Z,,,,"### Expected Behavior
`send_file` closes the file which it opens
https://github.com/pallets/flask/blob/0.12.2/flask/helpers.py#L549

### Actual Behavior

File is not closed.
Tests are yelling:
`tests2.py:14: ResourceWarning: unclosed file <_io.BufferedReader name='path/tests2.py'>`

```
> python3 tests2.py 
tests2.py:14: ResourceWarning: unclosed file <_io.BufferedReader name='path/tests2.py'>
  self.client.get('/')
.
----------------------------------------------------------------------
Ran 1 test in 0.012s

OK

> cat tests2.py 
import unittest
from flask import Flask
from flask import current_app, send_from_directory
app = Flask(__name__)

@app.route(""/"")
def hello():
    return send_from_directory('.', __file__)

class TestCase(unittest.TestCase):
    def test_x(self):
        self.client = app.test_client()

        self.client.get('/')


if __name__ == '__main__':
    unittest.main()
```

### Environment

* Python version: Python 3.5.3
* Flask version: Flask==0.12.2
* Werkzeug version: Werkzeug==0.12.2
"
2467,Add additional information in the url_rule docs,2017-09-07T04:31:47Z,2017-10-07T17:52:45Z,,,,"Small doc change because it is not documented anywhere else and may be confusing. 

If a user is making use of the `@errorhandler(405)` decorator, and they wish to include an Allow header (as per HTTP spec), they may be confused to find that url_rule is None (when they were attempting to get the allowed methods). While an experienced Flask user knows why this won't work, it may be unclear to a new user who is attempting to conform to HTTP. 

This doc change aims to clarify that: because the request was never successfully matched, it was never bound to a URL rule.  In order to access the valid methods, they must examine `routing_exception` instead.

Doc change only, no uncommented code is affected. 
"
2466,Flask Custom jinja2 extension caching template states after new request,2017-09-06T12:52:19Z,2017-09-06T12:56:01Z,,,,"I'm Looking to create a similar custom extension to push any javascript code blocks to a designated area on the page or below footer.

My version works using Python 3.6,Flask and Jinja 2.9. However I have a major
issue that occurs after changing the line number or content within the blocks.
The content will appear multiple times on render.

    from jinja2 import nodes
    from jinja2.ext import Extension
    
    class JavascriptBuilderExtension(Extension):
        tags = set(['push'])
    
        def __init__(self, environment):
            super(JavascriptBuilderExtension, self).__init__(environment)
            self._myScope = {}
            environment.extend(
                pull = self._myScope
                )
        def parse(self, parser):
            """"""Parse tokens """"""
            tag = parser.stream.__next__()
            args = [parser.parse_expression(), nodes.Const(tag.lineno)]
            body = parser.parse_statements(['name:endpush'], drop_needle=True)
            callback = self.call_method('compiled', args)
            return nodes.CallBlock(callback,[], [], body).set_lineno(tag.lineno)
    
        def compiled(self,tagname,linenum,caller):
            tagname = ""{}_{}"".format( tagname, linenum)
            self._myScope[tagname] = caller()
            return ""<!-- moved {} from line {} -->"".format(tagname,linenum)
        

My template code looks like this

    <html> <head></head> <body> <h1>Test template</h1>
    {% push 'js' %} X {% endpush %}
    {% push 'html' %} Z {% endpush %}
    {% push 'js' %} Y {% endpush %}
    {{ pull }}
    </body> </html>

My rendered output is below:

    <html> <head></head> <body> <h1>Test template</h1>
    name = hyper testing jinja
    date = right now
    <!-- moved js_4 from line 4 -->
    <!-- moved html_5 from line 5 -->
    <!-- moved js_6 from line 6 -->
    {'js_4': ' X ', 'html_5': ' Z ', 'js_6': ' Y '}
    </body> </html>

**The Problem happens after I change the template block line number or content.**

**After changing content and line numbers**

    <html> <head></head> <body> <h1>Test template</h1>
    {% push 'js' %} ABC {% endpush %}

    {% push 'html' %} Z {% endpush %}

    {% push 'js' %} 123{% endpush %}
    {{ pull }}
    </body> </html>

**Render changed blocks now has prior content**

    <html> <head></head> <body> <h1>Test template</h1>
    name = hyper testing jinja
    date = right now
    <!-- moved js_4 from line 4 -->

    <!-- moved html_7 from line 7 -->

    <!-- moved js_9 from line 9 -->
    {'js_4': ' X ABC', 'html_5': ' Z ', 'js_6': ' Y ','js_9':'123','html_7':'Z'}
    </body> </html>

This issue causes duplicate content to be added into the response.

Is there a way to call the extension on ever page request to re-parse the template for new changes? or Possible to not cache the enclosed extension blocks?

I have already tried adding the code below to auto reload templates but does not help the issue.

`app.jinja_env.auto_reload = True`


### Environment

* Python version: 3.6
* Flask version:0.10
* Werkzeug version:0.12.2
"
2465,Mention Flask instead of Jinja in the issue template,2017-09-06T11:30:39Z,2017-09-06T11:31:59Z,,,,"For people not really comfortable with the flask ecosystem this can be really confusing.
"
2464,flask hang up during debug mode enabled,2017-09-05T07:25:59Z,2017-09-05T12:38:46Z,,,,"Hi guys.

When I tested the example code(hello world) with debug mode, the flask did NOT respond from web request.
But without debug mode, the code was working very well.

I have tested both of python3 and python2 also a few version of flask.

I cannot imagine what is the root cause..

Somebody experienced this issue?


### Environment
* Python version: 3.6.2, 2.6
* Flask version: 0.12.2, 0.12, 0.11
* Werkzeug version: 0.12
"
2463,parse cli command's args with the application context,2017-09-05T07:13:46Z,2017-09-28T18:03:20Z,,,,"this allows to use application object in a callbacks, resolves #2410
"
2462,"Missing module Markupsafe on ""flask run""",2017-09-03T17:43:05Z,2017-09-03T18:20:21Z,,ModuleNotFoundError,"ModuleNotFoundError: No module named 'markupsafe._compat'","Migrated a project to Python3 and when using the ""Flask run"" command on the windows cmd it throws me a ""missing module"" error:

### pytr
(venv1) C:\Users\usrname\projectfolder>flask run
Traceback (most recent call last):
  File ""c:\users\usrname\appdata\local\programs\python\python36-32\Lib\runpy.py"", line 193, in _run_module_as_main
    ""__main__"", mod_spec)
  File ""c:\users\usrname\appdata\local\programs\python\python36-32\Lib\runpy.py"", line 85, in _run_code
    exec(code, run_globals)
  File ""C:\Users\usrname\Envs\venv1\Scripts\flask.exe\__main__.py"", line 5, in <module>
  File ""c:\users\usrname\envs\venv1\lib\site-packages\flask\__init__.py"", line 19, in <module>
    from jinja2 import Markup, escape
  File ""c:\users\usrname\envs\venv1\lib\site-packages\jinja2\__init__.py"", line 33, in <module>
    from jinja2.environment import Environment, Template
  File ""c:\users\usrname\envs\venv1\lib\site-packages\jinja2\environment.py"", line 15, in <module>
    from jinja2 import nodes
  File ""c:\users\usrname\envs\venv1\lib\site-packages\jinja2\nodes.py"", line 19, in <module>
    from jinja2.utils import Markup
  File ""c:\users\usrname\envs\venv1\lib\site-packages\jinja2\utils.py"", line 624, in <module>
    from markupsafe import Markup, escape, soft_unicode
  File ""c:\users\usrname\envs\venv1\lib\site-packages\markupsafe\__init__.py"", line 14, in <module>
    from markupsafe._compat import text_type, string_types, int_types, \
ModuleNotFoundError: No module named 'markupsafe._compat'


However markupsafe is installed in the venv: 

(venv1) >pip show markupsafe
Name: MarkupSafe
Version: 1.0
Summary: Implements a XML/HTML/XHTML Markup safe string for Python
Home-page: http://github.com/pallets/markupsafe
Author: Armin Ronacher
Author-email: armin.ronacher@active-4.com
License: BSD
Location: c:\users\...\lib\site-packages
Requires:

### Environment

* Python version: 3.6
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2461,Command to set FLASK_APP variable in flask/examples/flasker README is not compatible with released version of Flask(0.12.2),2017-09-03T13:06:17Z,2017-09-03T19:00:16Z,,RuntimeError,"RuntimeError: Failed to find application in module ""flaskr.factory"".","### Expected Behavior
In README of the example of flask/examples/flasker has following step to set  FLASK_APP env variable:
**export FLASK_APP=flaskr.factory:create_app()**

Next step is to initialize the DB:
And it should produce output as follows:
**Initialized the database.**

### Actual Behavior

This method to set FLASK_APP env is not compatible with the current released version of flask.
If set this way following error is observed while running next step ""flask initdb"":
RuntimeError: Failed to find application in module ""flaskr.factory"".

The issue is resolved in master branch. Still, this being starting example for many people, should be corrected.

```pytb
flask initdb
Traceback (most recent call last):
  File ""/Users/prasadghagare/Desktop/projects/repo/.my_env/bin/flask"", line 11, in <module>
    sys.exit(main())
  File ""/Users/prasadghagare/Desktop/projects/repo/.my_env/lib/python2.7/site-packages/flask/cli.py"", line 513, in main
    cli.main(args=args, prog_name=name)
  File ""/Users/prasadghagare/Desktop/projects/repo/.my_env/lib/python2.7/site-packages/flask/cli.py"", line 380, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""/Users/prasadghagare/Desktop/projects/repo/.my_env/lib/python2.7/site-packages/click/core.py"", line 697, in main
    rv = self.invoke(ctx)
  File ""/Users/prasadghagare/Desktop/projects/repo/.my_env/lib/python2.7/site-packages/click/core.py"", line 1061, in invoke
    cmd_name, cmd, args = self.resolve_command(ctx, args)
  File ""/Users/prasadghagare/Desktop/projects/repo/.my_env/lib/python2.7/site-packages/click/core.py"", line 1100, in resolve_command
    cmd = self.get_command(ctx, cmd_name)
  File ""/Users/prasadghagare/Desktop/projects/repo/.my_env/lib/python2.7/site-packages/flask/cli.py"", line 351, in get_command
    rv = info.load_app().cli.get_command(ctx, name)
  File ""/Users/prasadghagare/Desktop/projects/repo/.my_env/lib/python2.7/site-packages/flask/cli.py"", line 237, in load_app
    rv = locate_app(self.app_import_path)
  File ""/Users/prasadghagare/Desktop/projects/repo/.my_env/lib/python2.7/site-packages/flask/cli.py"", line 109, in locate_app
    % module)
RuntimeError: Failed to find application in module ""flaskr.factory""
```

### Environment

* Python version: 2.7.13
* Flask version: 0.12.2
* Werkzeug version: 0.7
"
2460,Apps importing grequests crash when a restart/reload is attempted,2017-09-02T16:48:32Z,,,TypeError,"TypeError: child watchers are only available on the default loop","### Expected Behavior

Flask apps run in debug mode (importing grequests) should reload when filesystem changes are detected.

### Actual Behavior

Instead, the following app crashes as changes are introduced and an app reload is attempted. Oddly enough, if the app is started with grequests commented out, and then uncommented, reloads process successfully.

```python
import flask              

import grequests          
import sys                

app = flask.Flask(__name__)                          
app.debug = True          

@app.route('/syspath')    
def syspath():            
    return '\n'.join(sys.path) + '\n'       
```

```
$ FLASK_APP=demo.py FLASK_DEBUG=1 flask run --host=0.0.0.0
 * Serving Flask app ""demo""                          
 * Forcing debug mode on                             
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)                                                 
 * Restarting with stat                              
 * Debugger is active!                               
 * Debugger PIN: 313-109-065                         
 * Detected change in '/home/bpaterni/usr/local/src/python/flask-app-restart-demo/demo.py', reloading     
 * Restarting with stat                              
Traceback (most recent call last):                   
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/bin/flask"", line 11, in <module>                
    sys.exit(main())                                 
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/flask/cli.py"", line 513, in main                                                                                              
    cli.main(args=args, prog_name=name)              
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/flask/cli.py"", line 380, in main                                                                                              
    return AppGroup.main(self, *args, **kwargs)      
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/click/core.py"", line 697, in main                                                                                             
    rv = self.invoke(ctx)                            
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/click/core.py"", line 1066, in invoke                                                                                          
    return _process_result(sub_ctx.command.invoke(sub_ctx))                                               
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/click/core.py"", line 895, in invoke                                                                                           
    return ctx.invoke(self.callback, **ctx.params)   
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/click/core.py"", line 535, in invoke                                                                                           
    return callback(*args, **kwargs)                 
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/click/decorators.py"", line 64, in new_func                                                                                    
    return ctx.invoke(f, obj, *args[1:], **kwargs)   
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/click/core.py"", line 535, in invoke                                                                                           
    return callback(*args, **kwargs)                 
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/flask/cli.py"", line 438, in run_command                                                                                       
    use_debugger=debugger, threaded=with_threads)    
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/werkzeug/serving.py"", line 737, in run_simple                                                                                 
    reloader_type)                                   
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/werkzeug/_reloader.py"", line 265, in run_with_reloader                                                                        
    sys.exit(reloader.restart_with_reloader())       
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/werkzeug/_reloader.py"", line 124, in restart_with_reloader                                                                    
    close_fds=False)                                 
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/gevent/subprocess.py"", line 234, in call                                                                                      
    with Popen(*popenargs, **kwargs) as p:           
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/gevent/subprocess.py"", line 554, in __init__                                                                                  
    restore_signals, start_new_session)              
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/gevent/subprocess.py"", line 1160, in _execute_child                                                                           
    self.pid = fork_and_watch(self._on_child, self._loop, True, fork)                                     
  File ""/home/bpaterni/usr/local/src/python/venvs/venv-01/lib/python3.5/site-packages/gevent/os.py"", line 375, in fork_and_watch                                                                                    
    watcher = loop.child(pid, ref=ref)               
  File ""gevent.libev.corecext.pyx"", line 518, in gevent.libev.corecext.loop.child (src/gevent/libev/gevent.corecext.c:7601)                                                                                         
  File ""gevent.libev.corecext.pyx"", line 1886, in gevent.libev.corecext.child.__init__ (src/gevent/libev/gevent.corecext.c:21676)                                                                                   
TypeError: child watchers are only available on the default loop
```

### Environment

* Python version: 3.5.4
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
* grequests: 0.3.0
* gevent version: 1.2.2
* Click version: 6.7"
2459,jsonify() silently strips timezone from datetime objects,2017-08-31T15:55:55Z,2017-08-31T15:58:54Z,,,,"### Expected Behavior

When given a tz-aware datetime object, I would expect jsonify to either raise an exception (because there is no native representation of a datetime in json) or at least convert it to a string format while keeping the timezone intact

```python
import flask
from datetime import datetime, timezone, timedelta

app = flask.Flask(__name__)

@app.route('/')
def index():
    tz = timezone(timedelta(hours=2))
    t = datetime(2017, 1, 1, 12, 0, 0, tzinfo=tz)
    return flask.jsonify(t)

with app.app_context():
    resp = app.test_client().get('/')
    print(resp.data)
```

### Actual Behavior

The datetime object is converted to a RFC 1123 date string, ignoring the timezone entirely and assuming GMT

```
b'""Sun, 01 Jan 2017 12:00:00 GMT""\n'
```

### Environment

* Python version: 3.6
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2458,Float converter does not match number values lacking a decimal,2017-08-31T14:59:01Z,2017-08-31T15:33:14Z,,,,"The behavior of the float converter not matching decimal-less values is a poor choice in my opinion.  The problem is that Javascript lacks separate number types, and it will happily produce decimal-less number values from operations on several floating point values (e.g. 0.5 + 0.5).  As a result, some combinations of user input cause a route with a float converter to fail to resolve.

I think better behavior would be for the float converter to match decimal-less values, but at a lower priority than the integer converter.  This would avoid the problem edge case route failures while still letting people define overlapping routes if they really wanted to.

### Environment

* Python version: 3.6.1
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2457,Update App Engine link,2017-08-30T21:53:36Z,2017-08-30T21:58:06Z,,,,"Point to an authoritative site for Flask on App Engine that is maintained.

Describe what this patch does to fix the issue: updates link.

Link to any relevant issues or pull requests.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2456,The request method to another website in views function didn't run correctly,2017-08-29T02:35:00Z,2017-08-29T13:02:43Z,,,,"### Unexpected Behavior

   I have a simple function to get json data from a website using ""POST"" method, for convenience, I save it as get_music.py file. Here is the code.
   ```python
import requests
def get_music():
    baseUrl = ""http://music.163.com/api/search/get/""
    parameters = {
        's': ""acg"",
        'limit': 100,
        'type': 1
    }
    response = requests.post(baseUrl, data=parameters)
    answer = response.json()
    return answer
```
and when we call the function, a json data will returned, that's no problems. But when i call it in the views function, things become strange. here is views.py.
```python
from .get_music import get_music
from flask import render_template
from . import main

@main.route('/', methods=['GET', 'POST'])
def index():
    music = get_music()
    return render_template(""index.html"", music=music)
```
  When I run the flask program, the json data is "" {'msg': ""Request method 'GET' not supported"", 'code': 400}"", it's not correct. 
  After debug i found the request method is ""GET"" when i use flask, but if  run the get_music.py without flask , the request method is ""POST"". it's any problem in views funtion change the request method?
"
2455,The link for downloadable PDF documentation is not working,2017-08-28T00:07:31Z,2017-08-28T13:49:23Z,,,,I have tried to download the documentation in PDF from the official site (http://flask.pocoo.org/) and the link there (http://flask.pocoo.org/docs/0.12/.latex/Flask.pdf) is returning error 404.
2454,Changes documentation screenshots for a more recent UI,2017-08-25T13:33:50Z,2017-08-25T13:36:27Z,,,,"Small cosmetic change for the docs. 

The current screenshots in Flask's docs are 8 years old. These new ones have the same info but with a recent UI (the CSS for the debugger and the browser's UI has changed since).

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2453,Cannot login with Google provider,2017-08-24T01:30:07Z,2017-08-24T01:53:01Z,,`Error,"`Error: The OpenID was invalid`","The link `http://flask.pocoo.org/login/?provider=google` will not redirect to anywhere for me to input the OpenID from my google account. 

If I paste the OpenID from google into the `http://flask.pocoo.org/login` page, the following error message is always shown.
`Error: The OpenID was invalid`

Is this a bug? How to login with google?
"
2452,Feature request : Highlight 'user code' in traceback interpreter output,2017-08-22T13:12:06Z,2017-08-22T13:14:58Z,,,,"### Expected Behavior

In debug mode, a very helpful call trace page comes up when an exception is thrown. Thanks for that!

A quick improvement would be to highlight the blocks which represent user's code. I believe this would give a decent speed boost when recognizing where errors come from. I think this could be as simple as giving a light red-tint on any code boxes which comes from the file defined in the FLASK_APP variable.

This would be unobtrusive, and would help speed up use for many users.

e.g. we could highlight this line:

![image](https://user-images.githubusercontent.com/328294/29567073-ffdc8b52-8743-11e7-95fd-be26eb6c93be.png)

Alternatively, the call trace could automatically collapse the 'app runner' code which the user is likely uninterested in.

Apologies if this place is for bugs only (not features)
"
2451,Dynamically appending templates one after another,2017-08-21T12:08:50Z,2017-08-21T12:41:47Z,,,,"Hi all,

I am building a chatbot. There are few child templates like login.html, messages.html, transaction.html, etc. I want to append these templates in base.html. I am extending base.html in all these templates. My problem is only one template is rendered at a time. Is there any solution for appending these templates one after another? I have used {%include%} but it's a static approach. I need dynamic.

printer.py looks like -

@app.route('/respond', methods=['GET','POST'])
def respond_def():
   message = request.form['message_input']
   if message == ""l"":
       return render_template('printer/login.html')
   elif message == ""t"":
       return render_template('printer/transactionID.html')
base.html looks like -

//some code here
<li>
    {% block template %}{% endblock %}
</li>
//some code here

message.html looks like -

{% extends ""base.html"" %}
{% block template %}
<div> Message template called </div>
{% endblock %}
"
2450,Blueprint view function name should not contain dots,2017-08-19T03:46:06Z,2017-10-09T15:18:35Z,,,,"

I want to use `before_request` function to my `blueprint`. here is my usecase:


```
from flask import Flask, Blueprint, request, abort
from flask.views import MethodView


app = Flask(__name__)
system = Blueprint('system', __name__, url_prefix='/system')


@system.before_request
def auth():
    if not request.headers.get('token', None):
        abort(401)


class UserView(MethodView):
    def get(self):
        return 'user list'


class UserProfileView(MethodView):
    def get(self, id):
        return 'hello {}'.format(id)


system.add_url_rule('/user', view_func=UserView.as_view('user'))
system.add_url_rule('/user/<int:id>/profile', view_func=UserProfileView.as_view('user.profile'))

app.register_blueprint(system)

app.run(debug=True)

```

when I test `/system/user`, `auth` function can work, when I test `/system/user/1/profile` it doesn't work.

so I debug my code on shell:

```
In [1]: from test import app

In [2]: app
Out[2]: <Flask 'test'>

In [3]: app.blueprints
Out[3]: {'system': <flask.blueprints.Blueprint at 0x1020bc850>}

In [4]: from flask import request

In [5]: with app.test_request_context('/system/user'):
   ...:     print request.blueprint
   ...:
system

In [6]: with app.test_request_context('/system/user/1/profile'):
   ...:     print request.blueprint
   ...:
system.user
```

it's ridiculous!

so I read the [flask/wrapper.py](https://github.com/pallets/flask/blob/7c510199850957161240f081359e2246d8982be1/flask/wrappers.py#L152)

```
@property
def blueprint(self):
   """"""The name of the current blueprint""""""
   if self.url_rule and '.' in self.url_rule.endpoint:
       return self.url_rule.endpoint.rsplit('.', 1)[0]
```

I know my view function endpoint name is not normative.

I think Blueprint endpoints should not contain dots. view function name can instead endpoint when endpoint is none, so view function name should not contain dots either.


sorry for my bad English. I'm shame it!


"
2449,Flask Python3 ?,2017-08-16T15:04:30Z,2017-08-16T15:06:43Z,,,,Is Flask Python3 compatible ?
2448,Changing SESSION_COOKIE_NAME invalidates session cookies earlier than permanent_session_lifetime,2017-08-15T14:16:34Z,2017-08-15T14:24:19Z,,,,"### Expected Behavior
Normally, if you want a permanent cookie, you can set
```python
session.permanent = True
app.permanent_session_lifetime = datetime.timedelta(weeks=156)  # 3 years
```
However, if you also change `SESSION_COOKIE_NAME` in app.config to something else, this should only change the name of the cookie, however, it also makes the session cookies invalidate after a browser session, not the `permanent_session_lifetime`.

Demo:
```python
import datetime
from flask import Flask, session

app = Flask(__name__)
app.secret_key = 'super_secret'

@app.before_request
def settings():
    app.config['PERMANENT_SESSION_LIFETIME'] = datetime.timedelta(weeks=156)  # 3 years
    # app.config['SESSION_COOKIE_NAME'] = 'other_name'

@app.route('/')
def index():
    if 'test' in session:
        return 'You have a cookie'
    return 'You do not have a cookie'
    
@app.route('/get_cookie')
def get_cookie():
    session['test'] = 'testcookie'
    return 'Cookie sent'

app.run()
```

### Actual Behavior

If you run the above script, and visit `/get_cookie`, then visit `/`, notice that it works as expected. You can also close and reopen the browser, and the cookie stays, as expected, because of the `permanent_session_lifetime`.

However, if you uncomment the bit that sets the `SESSION_COOKIE_NAME`, then re-run the script, and follow the above steps again (including reopening the browser), you will notice that the session is invalidated upon reopening the browser.

### Environment

* Python version: 3.5.2
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2447,Fix typos and formatting,2017-08-15T14:04:38Z,2017-08-15T14:05:49Z,,,,"Simple typos. (First pull request)

Link to any relevant issues or pull requests.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2446,replace @pytest.yield_fixture by @pytest.fixture,2017-08-14T14:40:01Z,2017-08-14T22:05:49Z,,,,"It's suggested to use pytest.fixture directly, and flask already requires 'pytest>=3'.



<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2445,Add version warning to Flaskr tutorial,2017-08-11T05:13:44Z,2017-08-14T06:01:11Z,,,,"Adds a warning to the Flaskr tutorial to tell folks looking at a specific version of the docs, to be sure to check out the same tag in the repository, otherwise the tutorial may be different than the example. 

Issues with docs/code version mismatches reported in https://github.com/pallets/flask/issues/2437 and https://github.com/pallets/flask/issues/1902"
2444,"While streaming back long responses, Flask loses encodings or alters the stream",2017-08-08T23:48:05Z,2017-08-09T17:20:01Z,,,,"I have a large response in the order of 2MB. I generate it in my Python code and send it back using jsonify(resp) and the server cut short the response and delivered partial response. - Issue 1

to overcome this issue I streamed the response into a file and exposed a GET api using send_from_directory(absolute_file_path, filename) - it sends back the file but has compressed some items like byte streams inside! 

Please find attached an example of this file.
[train_response.zip](https://github.com/pallets/flask/files/1209855/train_response.zip)

"
2443,Casting the value received from the Web Server in the request object …,2017-08-08T17:33:32Z,2017-08-08T17:34:46Z,,,,"Casting the value received from the Web Server in the request object if it is a string

I'm using apache2 with libapache2-mod-wsgi-py3 When flask tries to convert the permanent_session_lifetime the following error appears.

```
[Mon Aug 07 20:22:54.177034 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058] mod_wsgi (pid=21324): Exception occurred processing WSGI script '/var/www/app/web/run.wsgi'.
[Mon Aug 07 20:22:54.177830 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058] Traceback (most recent call last):
[Mon Aug 07 20:22:54.177881 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]   File ""/var/www/app/instance/venv/lib/python3.5/site-packages/flask/app.py"", line 1998, in __call__
[Mon Aug 07 20:22:54.177889 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]     return self.wsgi_app(environ, start_response)
[Mon Aug 07 20:22:54.177902 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]   File ""/var/www/app/instance/venv/lib/python3.5/site-packages/flask/app.py"", line 1979, in wsgi_app
[Mon Aug 07 20:22:54.177908 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]     ctx.push()
[Mon Aug 07 20:22:54.177919 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]   File ""/var/www/app/instance/venv/lib/python3.5/site-packages/flask/ctx.py"", line 332, in push
[Mon Aug 07 20:22:54.177925 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]     self.session = self.app.open_session(self.request)
[Mon Aug 07 20:22:54.177935 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]   File ""/var/www/app/instance/venv/lib/python3.5/site-packages/flask/app.py"", line 913, in open_session
[Mon Aug 07 20:22:54.177941 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]     return self.session_interface.open_session(self, request)
[Mon Aug 07 20:22:54.177953 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]   File ""/var/www/app/instance/venv/lib/python3.5/site-packages/flask/sessions.py"", line 330, in open_session
[Mon Aug 07 20:22:54.177958 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]     max_age = total_seconds(app.permanent_session_lifetime)
[Mon Aug 07 20:22:54.177970 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]   File ""/var/www/app/instance/venv/lib/python3.5/site-packages/flask/config.py"", line 33, in __get__
[Mon Aug 07 20:22:54.177975 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]     rv = self.get_converter(rv)
[Mon Aug 07 20:22:54.177987 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]   File ""/var/www/app/instance/venv/lib/python3.5/site-packages/flask/app.py"", line 47, in _make_timedelta
[Mon Aug 07 20:22:54.177993 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058]     return timedelta(seconds=value)
[Mon Aug 07 20:22:54.178022 2017] [wsgi:error] [pid 21324:tid 139774833305344] [remote 172.17.0.1:38058] TypeError: unsupported type for timedelta seconds component: str
```

With that pull, the permanent_session_lifetime and send_file_max_age_default will be converted correctly from string type value."
2442,corrected indentations for pypi description,2017-08-06T00:07:36Z,2017-08-14T06:01:46Z,,,,corrected wrong indentations in 'And Easy to Setup' section's paragraph.
2441,web: URL to PDF on home doesn't work,2017-08-04T06:43:09Z,2017-08-04T07:53:49Z,,,,"URL to download documentation in PDF on http://flask.pocoo.org/

http://flask.pocoo.org/docs/0.12/.latex/Flask.pdf

returns

Chapter 404: The Lost Page
A careful and diligent search has been made for the desired page, but it just cannot be found.
And so they returned to familiar waters."
2440,Suggestion : decorated blueprints,2017-08-02T13:12:24Z,2017-08-02T13:13:24Z,,,,"It would be useful to be able to decorate a blueprints or then pass it a function rather than adding decorators to each road.
For an admin module that requires admin privileges for example.
"
2439,Add clean command to flask cli,2017-08-01T08:38:20Z,2017-08-01T09:34:20Z,,,,The added command `flask clean` can be used to remove all the `.pyc` and `.pyo` file recursively starting at the path to the root of the application. Similar to Flask-Script's `clean` command.
2438,Adds support DEBUG variable from config.,2017-07-29T20:13:17Z,2017-07-29T20:34:57Z,,,,"It's just small fix. 
Which should revert back support DEBUG variable from config instead of OS env."
2437,The example flaskr can't easily be run by a beginner in Flask framework,2017-07-29T08:54:50Z,2017-11-08T20:35:33Z,docs,,,"Even if I followed the instruction sequences in the README file in the project flaskr, I still couldn't correctly run this application. It's so depressing. I have already seen another similar issue #1902, but it is not helpful.
"
2436,Simplify logging,2017-07-28T22:14:05Z,2017-07-31T20:23:45Z,"docs, logging",,,"Based on discussion in #2023 and #641, Flask interferes too much with logging. This patch greatly reduces the logging configuration that Flask does.

* Remove `LOGGER_NAME` and `LOGGER_HANDLER_POLICY` configuration.
* `app.logger` is always named `'flask.app'`. Use the `'flask'` namespace to allow other logging from Flask in the future.
* Don't use a `Logger` subclass to override `getEffectiveLevel`. Call `setLevel` when the logger is first accessed, based on `app.debug`, instead of checking `debug` for every message.
* Only one handler with one format is added, instead of different formats for production and development.
* A handler is only added if there are no handlers configured that would handle the logger's `getEffectiveLevel`.
* Handlers are never removed.
* The `default_handler` is accessible so that it can be passed to `removeHandler` in case the user wants to get rid of the default handler after it is configured.
* The proxy stream to `environ['wsgi.errors']` is exposed as `wsgi_errors_stream`, in case the user wants to use it in their own configuration.
* Logging documentation is split from error handling documentation and reorganized to address the key concepts.
* Added documentation for injecting request information into messages.
* Logging tests are split into a separate module.
* Some previously miscategorized tests are correctly organized."
2435,Execute/debug flask CLI from IDE,2017-07-28T16:41:34Z,2017-07-28T17:38:18Z,,,,"How does one debug flask CLI commands from an IDE?
E.g. if I want to debug the `flask run` command, or even more importantly my custom commands (in my case, `flask initdb`).

Do I have to manually create a separate script file that executes the functions that I want to debug?"
2434,Idiomatic way to stop pylint complaining about flask route unused function names?,2017-07-28T14:43:59Z,2017-07-28T14:53:28Z,,,,"My Python Flask application contains a lot of route definitions like

```
@app.route('/')
def index():
```

Then pylint complains

    W: 72, 4: Unused variable 'index' (unused-variable)

which is technically correct.  I can't replace all the function names by `_`, say, because then Flask complains

    AssertionError: View function mapping is overwriting an existing endpoint function: _

I could replace all the handler function names with their underscore-prefixed equivalents, i.e. change `index` to `_index`, etc..  Is there another idiomatic way of dealing with this problem?

([I also asked this question on StackOverflow](https://stackoverflow.com/questions/45214742/idiomatic-way-to-stop-pylint-complaining-about-flask-route-unused-function-names) but got no responses.)
"
2433,Suggestion for jsonify,2017-07-28T03:18:41Z,2017-07-28T04:09:03Z,,,,"Hi, Where i use jsonify to return JSON response i can't change any http header. It is possible to make jsonify support this feature.

like use double underline param
```python
jsonify(a=1, b=2, __headers={'X-TOKEN': 'token'})
```

"
2432,Distribute documentation mis-formatted,2017-07-27T13:37:36Z,2017-07-27T14:04:45Z,,,,"I think the documentation for http://flask.pocoo.org/docs/dev/patterns/distribute/ is mis-formatted when discussing `Tagging builds` when it shows:
```
    [egg_info] tag_build = .dev tag_date = 1

    [aliases] release = egg_info -RDb ”
```"
2431,TCP port 5000 blocked by corporate firewalls,2017-07-27T12:49:39Z,2017-07-27T12:50:45Z,,,,"Using TCP/5000 as the default port for flask may be a bad choice. I just had to debug a problem where I wasn't able to reach my service from outside of my network because the firewall (and I assume many firewalls do this) blocks incoming requests on port 5000.

This port is used for universal plug-and-play (UPNP) and it's considered a security problem if it's reachable from the internet says [source1](http://www.linklogger.com/TCP5000.htm) and [source2](https://www.grc.com/port_5000.htm).

I therefore suggest to change the default port or mention this possible problem in the [documentation](http://flask.pocoo.org/docs/dev/quickstart/#public-server) so others don't have to search for this problem as long as I did."
2430,make_test_environ_builder: use url_scheme from path if provided,2017-07-27T11:56:15Z,2017-07-29T20:09:17Z,,,,"When providing https url in path (""https://example.com/"")
we hope that we will get https scheme in environment

"
2429,Tagging builds section in docs have misleading information,2017-07-27T05:57:38Z,2017-07-27T14:08:06Z,,,,"### Expected Behavior

[Tagging builds docs](http://flask.pocoo.org/docs/0.12/patterns/distribute/#tagging-builds) are unambiguous.

### Actual Behavior

Docs introduced confusion, as shown in [stack overflow question](https://stackoverflow.com/questions/45340747/python3-6-2-install-package-cause-error)

### Environment
None - problem is in docs.

### Suggested solution
- wrapping setup.cfg snippet with markdown, similar to other code snippets.
- making sure that encoding of this snippet is correct (likely an ASCII)."
2428,Werid behaviour of BuildError,2017-07-27T01:17:36Z,2017-07-27T02:20:54Z,,BuildError,"BuildError: Could not build url for endpoint 'avatar' with values ['size']. Did you forget to specify values ['filename']?","### Expected Behaviour

I register a route to serve avatar image directly on `app`:
```python
@app.route('/avatar/<filename>/<size>')
def avatar(filename, size='m'):
    path = current_app.config['AVATARS_UPLOAD_PATH']
    filename = '%s_%s.png' % (filename, size)
    return send_from_directory(path, filename)
```
Then I use this in template to get avatar:
```jinja
{{ url_for('avatar', filename=user.avatar, size='l') }}
```

### Actual Behaviour

I have four templates use this code, but only one template got the image, others got the error below:
```pytb
BuildError: Could not build url for endpoint 'avatar' with values ['size']. Did you forget to specify values ['filename']?
...
File ""C:\Users\Administrator\projects\moments-dev\moments\templates\home\index.html"", line 16, in block ""page_content""
src=""{{ url_for('avatar', filename=photo.author.avatar, size='s') }}"">
File ""c:\users\administrator\projects\moments-dev\venv\lib\site-packages\flask\helpers.py"", line 333, in url_for
return appctx.app.handle_url_build_error(error, endpoint, values)
File ""c:\users\administrator\projects\moments-dev\venv\lib\site-packages\flask\app.py"", line 1805, in handle_url_build_error
reraise(exc_type, exc_value, tb)
File ""c:\users\administrator\projects\moments-dev\venv\lib\site-packages\flask\helpers.py"", line 323, in url_for
force_external=external)
File ""c:\users\administrator\projects\moments-dev\venv\lib\site-packages\werkzeug\routing.py"", line 1768, in build
raise BuildError(endpoint, values, method, self)
```
However, I actually did specify the `filename`, you can see it in error output.

Here is the templates structure:
```
templates/
    home/
        - photo.html ---- error
        - index.html ---- error
    user/
        - index.html ---- ok
    macros.html ---- error
```
 
I tried to request the URL, such as `http://127.0.0.1:5000/avatar/<filename>/<size>`, it works fine on every size.
### Environment

* Python version: 2.7
* Flask version: 0.12.2
* Werkzeug version: 0.12.2 
* OS: Windows 7
"
2427,Flask mangles traceback for Syntax Errors,2017-07-26T19:32:21Z,2017-07-26T19:42:22Z,,SyntaxError,"SyntaxError: unexpected EOF while parsing","Example: 

```python
#min.py
from flask import Flask
app = Flask(__name__)


@app.route('/')
def hello_world():
```

```bash
FLASK_DEBUG=1 FLASK_APP=min.py python -m flask run 
```

### Expected Behavior

```
Traceback (most recent call last):
  File ""/home/henniss/envs/min-flask/lib/python3.6/site-packages/flask/cli.py"", line 189, in __call__
    rv = self._load_unlocked()
  File ""/home/henniss/envs/min-flask/lib/python3.6/site-packages/flask/cli.py"", line 176, in _load_unlocked
    self._app = rv = self.loader()
  File ""/home/henniss/envs/min-flask/lib/python3.6/site-packages/flask/cli.py"", line 237, in load_app
    rv = locate_app(self.app_import_path)
  File ""/home/henniss/envs/min-flask/lib/python3.6/site-packages/flask/cli.py"", line 90, in locate_app
    __import__(module)
  File ""/home/henniss/gitlab/min-flask/min.py"", line 6
    def hello_world():
                     ^
SyntaxError: unexpected EOF while parsing
```

### Actual Behavior
```
Traceback (most recent call last):
  File ""/home/henniss/envs/min-flask/lib/python3.6/site-packages/flask/cli.py"", line 189, in __call__
    rv = self._load_unlocked()
  File ""/home/henniss/envs/min-flask/lib/python3.6/site-packages/flask/cli.py"", line 176, in _load_unlocked
    self._app = rv = self.loader()
  File ""/home/henniss/envs/min-flask/lib/python3.6/site-packages/flask/cli.py"", line 237, in load_app
    rv = locate_app(self.app_import_path)
  File ""/home/henniss/envs/min-flask/lib/python3.6/site-packages/flask/cli.py"", line 90, in locate_app
    __import__(module)
File ""/home/henniss/gitlab/min-flask/min.py"", line 6
    def hello_world():
                     ^
SyntaxError: unexpected EOF while parsing
```

Note incorrect indentation on the 4th line from the end.

I know this seems super pedantic, but it seems to mean that flask-failsafe won't detect that it needs to reload when `min.py` changes, since it doesn't see that portion of the traceback. 

### Environment

* Python version: 3.6.1
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2426,PDF version of docs unavailable,2017-07-24T01:32:34Z,2017-07-24T12:36:59Z,,,,"The main page [flask.pocoo.org](http://flask.pocoo.org/) points to the PDF, but it's unavailable
I understand the PDF could be also built from source, but it's much more convenient to have that link working.

**UPD:** found pdf [here](https://media.readthedocs.org/pdf/flask/stable/flask.pdf)"
2425,"give context about purpose of this section, #2421",2017-07-20T18:02:53Z,2017-07-27T13:16:38Z,,,,Otherwise it's unclear why you should be installing at all (the quickstart describes a hello.py file that doesn't require any installation). Resolves #2421.
2424,The reloader fails on SyntaxError when using a custom cli entry point,2017-07-20T07:46:15Z,,docs,,,"### Expected Behavior

The reloader should keep working even on SyntaxError when using a custom cli entry point. Obviously it might be diffcult to make it work as is, so it might require the cli entry point to be written in a certain way for this to work. For example it should be in a separate file that is not modified often during app development and should import the app only from the `create_app` function. This might just require documenting this more clearly.

```python
import click
from flask import Flask
from flask.cli import FlaskGroup

app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello, World!'

@click.group(cls=FlaskGroup, create_app=lambda info: app)
def cli():
    pass

if __name__ == '__main__':
    cli()
```

```cmd
set FLASK_DEBUG=1
python app.py run
```

### Actual Behavior

Introucing a SyntaxError into the file will cause the reloader to exit.

### Environment

* Python version: 2.7.13
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2423,Reloader fails to reload after SyntaxError when the app is in an __init__.py file,2017-07-19T08:23:42Z,,,"NoAppException, SyntaxError","NoAppException: Failed to find application in module ""hello"". Are you sure it contains a Flask application? Maybe you wrapped it in WSGI middleware or you are using a factory function., SyntaxError: ...","### Expected Behavior

The reloader should work correctly even for an app in a package's `__init__.py` file.

In `hello/__init__.py`:
```python
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello, World!'
```

```cmd
set FLASK_APP=hello
set FLASK_DEBUG=1
flask run
```

Than edit `__init__.py` and introduce a syntax error.

### Actual Behavior

I get the SyntaxError the first time I try to browse and afterwards get:

```pytb
Traceback (most recent call last):
  File ""flask\cli.py"", line 48, in find_best_app
    'using a factory function.' % modules.__name__)
NoAppException: Failed to find application in module ""hello"". Are you sure it contains a Flask application? Maybe you wrapped it in WSGI middleware or you are using a factory function.
```

### Cause

This is caused by weird CPython behavior which might be a bug:
```py
>>> __import__('syntax_error')
...
SyntaxError: ...
>>> a = __import__('syntax_error')  # woot it works?!
>>> a.__file__
'<path to the directory containing __init__.py>'  # Instead of path to __init__.py
```

After the `SyntaxError` in the app, the Wekzeug reloader won't know about the `__init__.py` file any more since it iterates `sys.modules` and the entry there contains the path to the directory instead of the path to the `__init__.py` file, and Flask will call `__import__` repeatedly but will get the weird empty module and will fail to find an app in it, leading to the described exception.

### Environment

* Python version: 2.7.13
* Flask version: 0.12.2
* Werkzeug version: 0.12.2

Not sure if this happens in Python 3."
2422,Add more information to doc regarding PERMANENT_SESSION_LIFETIME config.,2017-07-18T21:35:26Z,2017-08-01T15:28:51Z,,,,I was struggling to identify how to reduce the time possible for a replay attack. I came across [this stackoverflow answer](https://stackoverflow.com/a/25137976/5179470) which provided me the necessary information - hence updating here.
2421,Tutorial: step 3 (Installing as package) needs rationale,2017-07-18T14:37:21Z,2017-11-08T20:35:46Z,docs,,,"Step 3 of the tutorial ([installing flaskr as a package](http://flask.pocoo.org/docs/0.12/tutorial/packaging/)) needs rationale at the top. As it stands, that section of the tutorial tells the user out of the blue that they should install their webapp as a package, but doesn't say why. The user can already run their webapp via `flask run`, so it's not clear why they should at this point set up and install their package into their venv.
"
2420,Typeo in readme for flaskr example,2017-07-17T02:13:03Z,2017-07-17T02:16:42Z,,,,"Really simple bug. 
Readme file in flaskr has a typo, there shouldn't be parentheses at the end of this line:
export FLASK_APP=flaskr.factory:create_app()
"
2419,Fixed typo in documentation,2017-07-16T19:06:09Z,2017-07-16T19:07:25Z,,,,
2418,[0.11.x] Remove outdated text on flask.ext redirect package,2017-07-15T08:49:27Z,2017-07-16T20:57:01Z,,,,"See #2417. Same thing except for 0.11.x instead of 0.12.x

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2417,[0.12.x] Remove outdated text on flask.ext redirect package,2017-07-15T08:43:13Z,2017-07-16T20:57:58Z,,,,"...from 0.12.x documentation. i.e. here: http://flask.pocoo.org/docs/0.12/extensiondev/#ext-import-transition

I noticed that the live documentation for 0.12.x has this paragraph on the current stable version saying that the flask.ext. namespace should be used. This is deprecated since 0.11.x right? The development version has that paragraph removed, so I just did the same for this branch.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2416,Add .env support,2017-07-15T05:51:09Z,2017-07-16T20:55:19Z,cli,,,"If installed, [python-dotenv](https://github.com/theskumar/python-dotenv#readme) is used to load environment variables from `.env` and `.flaskenv` files. Manual vars override `.env`, which overrides `.flaskenv`. `.flaskenv` is intended for public vars, `.env` is intended for private vars that won't be committed to the repository.

The working directory is set to the location of the files, with the assumption that they are in the top level of the project, to facilitate local package imports (#2383).

The files are only loaded when calling the `flask` command or `app.run`, and can be disabled by passing `load_dotenv=False` to a custom `FlaskGroup` or `app.run`. If a user wants to load dotenv files in production, they can call `flask.cli.load_dotenv` manually from a `wsgi.py` file.

Closes #2375
Based off #2164 

---

Example, assuming python-dotenv is installed:

`flaskr/app.py`:

```python
from flask import Flask

def create_app():
    return Flask('flaskr')
```

`.flaskenv`:

```
FLASK_APP=flaskr.app
```

```
flask run
# no need to set FLASK_APP
# no need for intermediate file to call create_app
```"
2415,404 error when using debug=True,2017-07-15T02:53:42Z,2017-07-15T02:55:46Z,,,,"I created simple script using flask, it run smoothly, but when using `app.run(debug=True)` it returns 404 error
Run with:
`export FLASK_APP=main.py`

`flask run`


```python
from flask import Flask,request
app = Flask(__name__)
app.run(debug=True)
@app.route('/')
def hello_world():
    return 'hellow'
```

It return 404 error

```pytb
127.0.0.1 - - [15/Jul/2017 16:41:56] ""GET / HTTP/1.1"" 404 -
127.0.0.1 - - [15/Jul/2017 16:43:03] ""GET /favicon.ico HTTP/1.1"" 404 -

```

### Environment

* Python version: 3.5.3
* Flask version: 0.12.2
* Werkzeug version: 0.12.1
"
2414,FLASK_APP doesn't require .py extension for local packages,2017-07-15T02:52:04Z,2017-07-15T02:59:51Z,cli,,,"This drops the requirement where `FLASK_APP` had to point to a `.py` file for packages that were not installed in develop mode. If the file is not importable, it will fail later in the loading process.

Also adds some more tests for the loading mechanism and refactors the tests with `pytest.mark.parametrize`.

Closes #2377 "
2413,Flaskr example code RuntimeError,2017-07-13T18:24:38Z,2017-07-13T18:39:39Z,cli,RuntimeError,"RuntimeError: Failed to find application in module ""flaskr.factory""","### Expected Behavior

The flaskr example code (in examples/flaskr) should work off-the-shelf. But I was able to reproduce the following issue by forking a clean copy of the repository and following the instructions in the README.md of the flaskr example. Namely, these are the commands I'm executing:

```
$ git clone https://github.com/alexander-jiang/flask.git
$ cd flask/examples/flaskr
$ virtualenv venv
$ venv\Scripts\activate
$ pip install -e .
$ set FLASK_APP=flaskr.factory:create_app()
$ flask initdb
$ flask run
```

### Actual Behavior

The `flask initdb` command fails with a `RuntimeError`:
```pytb
Traceback (most recent call last):
  File ""c:\users\xxxxxxxxx\appdata\local\programs\python\python36-32\Lib\runpy.py"", line 193, in _run_module_as_main
    ""__main__"", mod_spec)
  File ""c:\users\xxxxxxxxx\appdata\local\programs\python\python36-32\Lib\runpy.py"", line 85, in _run_code
    exec(code, run_globals)
  File ""C:\Users\xxxxxxxxx\flask\examples\flaskr\venv\Scripts\flask.exe\__main__.py"", line 9, in <module>
  File ""c:\users\xxxxxxxxx\flask\examples\flaskr\venv\lib\site-packages\flask\cli.py"", line 513, in main
    cli.main(args=args, prog_name=name)
  File ""c:\users\xxxxxxxxx\flask\examples\flaskr\venv\lib\site-packages\flask\cli.py"", line 380, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""c:\users\xxxxxxxxx\flask\examples\flaskr\venv\lib\site-packages\click\core.py"", line 697, in main
    rv = self.invoke(ctx)
  File ""c:\users\xxxxxxxxx\flask\examples\flaskr\venv\lib\site-packages\click\core.py"", line 1061, in invoke
    cmd_name, cmd, args = self.resolve_command(ctx, args)
  File ""c:\users\xxxxxxxxx\flask\examples\flaskr\venv\lib\site-packages\click\core.py"", line 1100, in resolve_command
    cmd = self.get_command(ctx, cmd_name)
  File ""c:\users\xxxxxxxxx\flask\examples\flaskr\venv\lib\site-packages\flask\cli.py"", line 351, in get_command
    rv = info.load_app().cli.get_command(ctx, name)
  File ""c:\users\xxxxxxxxx\flask\examples\flaskr\venv\lib\site-packages\flask\cli.py"", line 237, in load_app
    rv = locate_app(self.app_import_path)
  File ""c:\users\xxxxxxxxx\flask\examples\flaskr\venv\lib\site-packages\flask\cli.py"", line 109, in locate_app
    % module)
RuntimeError: Failed to find application in module ""flaskr.factory""
```

### Environment

* OS: Windows 10 (64 bit)
* Python version: 3.6.1
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2412,support passing environ to test client,2017-07-13T15:15:21Z,2017-07-13T15:42:54Z,testing,,,"This allows passing an `EnvironBuilder` or `dict` as the only argument to `flask.testing.FlaskClient.open`, similar to `werkzeug.test.Client.open`. Since `FlaskClient` does some other configuration for the environ, this makes sure that a passed environ is copied and modified appropriately.

closes #2411
"
2411,TestClient: EnvironBuilder cannot be passed in,2017-07-11T12:38:44Z,2017-07-13T15:42:53Z,testing,,,In a normal test client from werkzeug you can pass the environment builder in. With Flask that is currently not possible. In some situations people might want to interface with the builder directly.
2410,Flask CLI doesn't support application context in argument callbacks,2017-07-10T14:17:27Z,,cli,RuntimeError,"RuntimeError: Working outside of application context.","I recently converted an old managing script to use Flask's built in CLI instead. I have a table for clients that are identified using a shortname/slug. I thought about using Click's argument callback for this. Given a shortname my function would get an instance of the client from my ORM. The problem is that the application context is not active when the callback is run.

### Expected Behavior

Since many scripts will rely on a database connection it makes sense to have the application context be available in arguments.

```python
import click
from flask import current_app, Flask

app = Flask(""demo"")

def example_callback(ctx, param, value):
    # Access the application context to trigger an exception
    click.echo(current_app.config)
    return {""id"": 1, ""shortname"": value}

@app.cli.command()
@click.argument(""arg"", callback=example_callback)
def view(arg):
    click.echo(arg)
```

I run this using `flask view foobar`.

### Actual Behavior

```pytb
Traceback (most recent call last):
  File ""/dev/flask-cli-demo/venv/bin/flask"", line 11, in <module>
    sys.exit(main())
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/flask/cli.py"", line 513, in main
    cli.main(args=args, prog_name=name)
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/flask/cli.py"", line 380, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/click/core.py"", line 697, in main
    rv = self.invoke(ctx)
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/click/core.py"", line 1064, in invoke
    sub_ctx = cmd.make_context(cmd_name, args, parent=ctx)
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/click/core.py"", line 621, in make_context
    self.parse_args(ctx, args)
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/click/core.py"", line 880, in parse_args
    value, args = param.handle_parse_result(ctx, opts, args)
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/click/core.py"", line 1404, in handle_parse_result
    self.callback, ctx, self, value)
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/click/core.py"", line 78, in invoke_param_callback
    return callback(ctx, param, value)
  File ""/dev/flask-cli-demo/app.py"", line 8, in example_callback
    click.echo(current_app.config)
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/werkzeug/local.py"", line 347, in __getattr__
    return getattr(self._get_current_object(), name)
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/werkzeug/local.py"", line 306, in _get_current_object
    return self.__local()
  File ""/dev/flask-cli-demo/venv/local/lib/python2.7/site-packages/flask/globals.py"", line 51, in _find_app
    raise RuntimeError(_app_ctx_err_msg)
RuntimeError: Working outside of application context.
```

### Environment
```
click==6.7
Flask==0.12.2
itsdangerous==0.24
Jinja2==2.9.6
MarkupSafe==1.0
pkg-resources==0.0.0
Werkzeug==0.12.2
```

### Workaround
The only workaround I've found is doing the same thing `@with_appcontext` does which is:

```python
with ctx.ensure_object(ScriptInfo).load_app().app_context():
```

Using `@with_appcontext` on `example_callback` doesn't work since that gives a warning about using a deprecated function signature (from before Click 2.0).

### Why is this a problem?
This results in two separate instantiations of my ORM. Some ORM's (like the one I'm using) doesn't allow sharing objects across instances (for good reason) which makes the client object I produce unusable anyway."
2409,Clarify docs and tests for exception handling in Flask.teardown_appcontext(),2017-07-08T00:50:56Z,2017-07-10T14:20:01Z,,,,"I had asked to clarify the behavior for in the IRC channel on [2017-07-01](https://botbot.me/freenode/pocoo/2017-07-01/?tz=America/Los_Angeles) and [2017-07-03](https://botbot.me/freenode/pocoo/2017-07-03/?tz=America/Los_Angeles) but did not get a reply.

So I've updated the documentation and regression tests to prove and clarify that [Flask.teardown_appcontext()](http://flask.pocoo.org/docs/0.11/api/#flask.Flask.errorhandler) only receives **unhandled** exceptions.
- [x] Added tests that fail without the patch
- [x] Ensured all tests pass with ``pytest``
- [x] Added documentation to the relevant docstrings or pages

Since the application code was _not_ modified:
* No ``versionadded`` or ``versionchanged`` directives were added
* No changelog entry was added

"
2408,Suggestions for Tutorial,2017-07-07T04:44:48Z,2017-11-08T20:36:00Z,docs,,,"### Environment

* Python version: 3.5
* Flask version: 0.12

Notes and suggestions from working through the 0.12 Tutorial:

* Step 1

So ... do I run this schema.sql file? Will Flask run it for me?


* Step 2

That ""import ... g ..."""" looks like a typo. I left it out until I
read step 4.

""The SECRET_KEY is needed...""
What do real systems do? No need to go into details, just mention
something. SHA1? SSH keys?


* Step 3

""Flask is now shipped with built-in support for Click.""
That's nice I guess, but what does it have to do with anything else
in this step?

""A useful pattern to manage a Flask application...""
Why? Will it make deployment in my production environment easier? To
other people? What happens if I don't?

It would be better if the text said which directory to use
before the command


* Step 4

""def get_db():""

Looks like an unsafe singleton. Does Flask use threads or processes?

""Hint: Where do I put this code?""

I'd been using Flask for 30 minutes, I had no idea where to put the
code. This should be at the start.


* Step 5

    (flask) /home/hugh/Flask/Tutorial/flaskr/$ flask initdb
    Usage: flask [OPTIONS] COMMAND [ARGS]...

    Error: No such command ""initdb"".

Hmm, function has to have same name as in decorator?
No

Maybe the command is really flask --initdb?
No

Have I screwed up the environment var?
    $ flask run
That seems to work.

(And yes I worked out shortly afterwards that this is an illusion, trying
to load a page will throw a ""does not appear to exist"" exception.)

    $ cd flaskr
    $ flask initdb
Aha!

General note: having two identically named dirs is confusing, need
to be clearer about where you should be at each step


Useful exercise that could be added:

If you want the second database attribute, the blog entry HTML, to
be named ""body"" instead of ""text"", how many files do you need to edit?

"
2407,Integrate flask log messages to Gunicorn log files,2017-07-06T08:17:35Z,2017-07-10T13:57:16Z,,,,"http://jsn-techtips.blogspot.com/2016/02/set-up-logging-with-flask-and-gunicorn.html

I have 2 RHEL 6 unix servers. There are slight differences in between the versioning listed below. One server is already set-up and it is working well following the steps from the above link to configure logging integrated with gunicorn log file. However, when i followed the same approach to configure in a newer versions environment, those app.logger.info() message did not log to the gunicorn log file. I suspect it may be due to the change in 0.12 release. Any idea? 

Version 0.12
Released on December 21st 2016, codename Punsch.
...
**Disable logger propagation by default for the app logger.**
...

### Environment
Working Environment
* Python version: 2.7.12
* Flask version: 0.11.1
* Werkzeug version: 0.11.11

Not Working Environment
* Python version: 2.7.13
* Flask version: 0.12.0
* Werkzeug version: 0.11.15
"
2406,The exception of installing ,2017-07-06T01:03:14Z,2017-07-06T02:28:00Z,,,,"**This issue tracker is a tool to address bugs in Flask itself.
Please use the #pocoo IRC channel on freenode or Stack Overflow for general
questions about using Jinja or issues not related to Jinja.**

If you'd like to report a bug in Flask, fill out the template below. Provide
any any extra information that may be useful / related to your problem.
Ideally, create an [MCVE](http://stackoverflow.com/help/mcve), which helps us
understand the problem and helps check that it is not caused by something in
your code.

---

### Expected Behavior

Tell us what should happen.
I open my command line tool  and then run ""pip install Flask'
It shows the exception ,I am new here about python.So pls give me some tips to solve it 

```python
Paste a minimal example that causes the problem.
```

### Actual Behavior

Tell us what happens instead.

```pytb
Paste the full traceback if there was an exception.
```
Collecting Flask
  Using cached Flask-0.12.2-py2.py3-none-any.whl
Collecting itsdangerous>=0.21 (from Flask)
  Using cached itsdangerous-0.24.tar.gz
Collecting Werkzeug>=0.7 (from Flask)
  Using cached Werkzeug-0.12.2-py2.py3-none-any.whl
Collecting Jinja2>=2.4 (from Flask)
  Downloading Jinja2-2.9.6-py2.py3-none-any.whl (340kB)
    100% |████████████████████████████████| 348kB 239kB/s
Collecting click>=2.0 (from Flask)
  Downloading click-6.7-py2.py3-none-any.whl (71kB)
    100% |████████████████████████████████| 71kB 207kB/s
Collecting MarkupSafe>=0.23 (from Jinja2>=2.4->Flask)
  Downloading MarkupSafe-1.0.tar.gz
Installing collected packages: itsdangerous, Werkzeug, MarkupSafe, Jinja2, click, Flask
  Running setup.py install for itsdangerous ... error
    Complete output from command /usr/bin/python -u -c ""import setuptools, tokenize;__file__='/private/var/folders/fd/g2bjwxln7t12740h9w8pc1p40000gn/T/pip-build-c2g0Ki/itsdangerous/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /var/folders/fd/g2bjwxln7t12740h9w8pc1p40000gn/T/pip-aTf7nB-record/install-record.txt --single-version-externally-managed --compile:
    running install
    running build
    running build_py
    creating build
    creating build/lib
    copying itsdangerous.py -> build/lib
    running install_lib
    copying build/lib/itsdangerous.py -> /Library/Python/2.7/site-packages
    error: [Errno 13] Permission denied: '/Library/Python/2.7/site-packages/itsdangerous.py'

    ----------------------------------------
Command ""/usr/bin/python -u -c ""import setuptools, tokenize;__file__='/private/var/folders/fd/g2bjwxln7t12740h9w8pc1p40000gn/T/pip-build-c2g0Ki/itsdangerous/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /var/folders/fd/g2bjwxln7t12740h9w8pc1p40000gn/T/pip-aTf7nB-record/install-record.txt --single-version-externally-managed --compile"" failed with error code 1 in /private/var/folders/fd/g2bjwxln7t12740h9w8pc1p40000gn/T/pip-build-c2g0Ki/itsdangerous/
### Environment

* Python version:2.7
* Flask version:
* Werkzeug version:
"
2405,Custom JSON encoder doesn't work for dictionary keys,2017-07-05T23:21:35Z,2017-07-05T23:58:59Z,,,,"I have defined a custom json encoder that supports encoding a bson ObjectId() into a string (see below for encoder code).

This works great until I attempt to serialize a dictionary who's key is an ObjectId(). The custom encoder seems to only work for dictionary values.

To reproduce the bug, see the /test_json2 route in the example below :

```python
import bson
@app.route(""/test_json"", methods=['GET'])
def test_json():
    test = {
        'a': bson.objectid.ObjectId(""595d5f4c4588b817c4030277"")
    }
    return flask.jsonify(test=test)

@app.route(""/test_json2"", methods=['GET'])
def test_json2():
    test = {
        bson.objectid.ObjectId(""595d5f4c4588b817c4030277""): 'a'
    }
    return flask.jsonify(test=test)
```

Custom json encoder code : 

```python
import bson
from flask.json import JSONEncoder

class CustomJSONEncoder(JSONEncoder):
    '''custom json encoder that supports mongo's ObjectID()
out of the box
    '''
    def default(self, obj):
        if isinstance(obj, bson.objectid.ObjectId):
            return str(obj)
        return JSONEncoder.default(self, obj)

app.json_encoder = CustomJSONEncoder
```

Using 
Werkzeug==0.12.2
Flask==0.12.2"
2404,datetime json encoding is one sided: Fix for JSONDecoder is needed,2017-07-03T09:27:41Z,2017-07-03T09:28:37Z,,,,"### Expected Behavior

When using Flask json to encode, datetime is encoded to a string and it would be expected that the reverse operation also works.

```python
>>> import datetime
>>> from flask import json
>>> json.dumps({'a': datetime.datetime.utcnow()})
'{""a"": ""Mon, 03 Jul 2017 09:13:33 GMT""}'
>>> json.loads(json.dumps({'a': datetime.datetime.utcnow()}))
{'a': 'Mon, 03 Jul 2017 09:13:42 GMT'}
```
Expected would be
```python
>>> json.loads(json.dumps({'a': datetime.datetime.utcnow()}))
{'a': datetime.datetime(2017, 7, 3, 9, 13, 42, 564641)}
```

### Environment

* Python version: 3.6.0
* Flask version: 0.12
* Werkzeug version: 0.11.15
"
2403,Remove unused import from test_basic.,2017-06-30T15:22:10Z,2017-06-30T15:28:49Z,,,,"Describe what this patch does to fix the issue.
Removed the unused import of `pickle` in `tests/test_basic`.

Link to any relevant issues or pull requests.

Pickle isn't used explicitly in the file, and I ran the tests and they all still pass.
"
2402,render_template_string() recompiles the template every time,2017-06-29T17:15:49Z,2017-06-29T17:25:39Z,,,,"When `flask.render_template_string()` is invoked with the same template string multiple times, it still compiles it on every invocation. This makes it pretty much unusable in any application where performance is of any concern.

As a dirty workaround, I use memoized version.
It only makes sense if template strings are not generated dynamically, but that sounds like a reasonable assumption.

```python
import flask.globals
import flask.templating

_compiled_templates = {}

def memoized_render_template_string(source, **context):
    """"""Same as flask.render_template_string(), but does not recompile.

    No cache expiration.
    Assumes that Jinja environment configuration does not change at runtime.
    """"""
    ctx = flask.globals._app_ctx_stack.top
    ctx.app.update_template_context(context)
    jinja_env = ctx.app.jinja_env
    k = jinja_env, source
    if k in _compiled_templates:
        template = _compiled_templates[k]
    else:
        template = _compiled_templates[k] = jinja_env.from_string(source)
    return flask.templating._render(template, context, ctx.app)
```

Perhaps this problem should be addressed in the actual implementation of `render_template_string()`?
I'm not sure what would be the proper way to do it, though."
2401,formatting of setup.cfg code snippet,2017-06-29T02:32:18Z,2017-06-29T02:56:45Z,,,,"see https://github.com/pallets/flask/issues/2400
"
2400,setup.cfg code snippet not formatted correctly,2017-06-29T02:22:10Z,2017-06-29T02:55:47Z,,,,"### Expected Behavior

On the ""Deploying With Setuptools page"", the [setup.cfg code snippet](http://flask.pocoo.org/docs/0.12/patterns/distribute/#tagging-builds) should look like this:
```
[egg_info]
tag_build = .dev
tag_date = 1

[aliases]
release = egg_info -RDb
```



### Actual Behavior

Instead it looks like this:
```
[egg_info] tag_build = .dev tag_date = 1

[aliases] release = egg_info -RDb ”
```
Also note the  erroneous quotation mark at the end.
### Environment

* Python version: N/A
* Flask version: N/A
* Werkzeug version: N/A
"
2399,clean up secret key docs,2017-06-28T15:00:04Z,2017-06-28T15:00:09Z,"docs, testing",,,"consistent key across docs and examples
set test key in conftest"
2398,fix variable substitution in error message,2017-06-27T14:29:56Z,2017-06-27T14:50:21Z,,,,@davidism looks like you've made a small mistake in how the module variable is replaced in the error message when you edited my commit from a few days ago. This should address it.
2397,Un-deprecate Request.json,2017-06-26T16:39:48Z,2017-06-26T16:47:37Z,json,,,"After much discussion in #1421, I was not convinced there was a direct need to deprecate `Request.json`. It's existence is consistent with other parts of the API and it does not interfere with other properties.

Note that it still may be deprecated in the future if a need arises, but that's not now."
2396,Remove old 0.7 upgrade script,2017-06-26T16:23:01Z,2017-06-26T16:23:07Z,,,,#2385
2395,Remove deprecated flask.ext,2017-06-26T15:54:37Z,2017-06-26T16:18:21Z,,,,"`flask.ext` was deprecated a year ago when 0.12 was released. We've contacted as many extensions as possible to fix docs and examples, I update Stack Overflow questions as I come across them, and most new questions do not use the old form. It's safe to remove at this point and should not be present in 1.0.

#2385"
2394,Remove deprecated code,2017-06-26T15:09:08Z,2017-06-26T15:29:43Z,,,,"* `Flask.error_handlers`
* `Flask.static_path`
* `Request.module`

#2385"
2393,Remove deprecated code from app.py,2017-06-26T09:04:51Z,2017-06-26T14:35:20Z,,,,"Refs issue #2385 

- Removed deprecated `init_jinja_globals` method
- Removed deprecated `_get_request_globals_class`and `_set_request_globals_class`

"
2392,jsonify response converts datetime object into string with GMT regardless of objects tzinfo.,2017-06-24T00:19:31Z,2017-06-24T00:35:54Z,,,,"### Expected Behavior
Flask's `jsonify` response incorrectly marks the timezone when stringing the datetime object. It always contains the string `GMT`, regardless of if the datetime object is not naive or has tzinfo set.

I originally suspected it may be something to do with the http_date function, which is called on the datetime object if its detected. However, when I print `http_date(time)` on the object it correctly converts the time zone to GMT.

I believe that this logic is somehow incorrectly identifying the object as a `date` object and not `datetime`, and thusly calling `timetuple()` (which has this affect) and not `utctimetuple()` which maintains the time).

```
   65         if isinstance(o, datetime):
   66             return http_date(o.utctimetuple())
   67         if isinstance(o, date):
   68             return http_date(o.timetuple())
```

### Tell us what should happen.
A `jsonify`'d response should print the correct datetime 3-letter timezone abbreviation according to the datetime's tzinfo response. Or, if forcing a converstion to GMT, should correctly convert the object to GMT time from its localized time zone.

The below jsonify'd/stringed 3-letter time-zone response says `GMT`, but the datetime object is PDT. The time in the response is also in PST and has not been converted to GMT.

```
""Fri, 23 Jun 2017 17:12:18 GMT""
```

```python
#!/usr/bin/env python2.7

from werkzeug.http import http_date
from datetime import datetime
import pytz

from flask import Flask, jsonify

app = Flask(__name__)

@app.route('/')
def root():
    # Localize time
    local_time = pytz.timezone(""America/Los_Angeles"")
    time = datetime.utcnow().replace(microsecond=0).replace(tzinfo=pytz.utc)
    time = time.astimezone(local_time)

    print(""iso format:"", time.isoformat())
    print(""object:"", time.tzinfo)
    print(""http date:"", http_date(time))

    result = [time]

    print(""Test object: %s"" % result)

    return jsonify(result)

app.run(host='127.0.0.1', port=8080, debug=False)
```

### Actual Behavior
Webserver returns response with GMT timezone with localized time:

```
[
""Fri, 23 Jun 2017 17:12:18 GMT""
]
```

The logs in the console correctly identify the datetime object as PDT:
```
('iso format:', '2017-06-23T17:28:11-07:00')
('object:', <DstTzInfo 'America/Los_Angeles' PDT-1 day, 17:00:00 DST>)
('http date:', 'Sat, 24 Jun 2017 00:28:11 GMT')
Test object: [datetime.datetime(2017, 6, 23, 17, 28, 11, tzinfo=<DstTzInfo 'America/Los_Angeles' PDT-1 day, 17:00:00 DST>)]
127.0.0.1 - - [23/Jun/2017 17:28:11] ""GET / HTTP/1.1"" 200 -
```

### Environment

* Python version: 2.7 or 3.6 (affects both in identical way)
* Flask version: Flask==0.12.2
* Werkzeug version: Werkzeug==0.12.2
"
2391,Flask fails silently when it does not have permission to SSL cert/key files,2017-06-24T00:17:13Z,2017-06-24T00:37:36Z,,OpenSSL.SSL.Error,"OpenSSL.SSL.Error: [('system library', 'fopen', 'Permission denied'), ('BIO routines', 'FILE_CTRL', 'system lib'), ('SSL routines', 'SSL_CTX_use_PrivateKey_file', 'system lib')]","Running Flask with an SSL context that uses cert files which the process does not have permission to results in a silent fail on the server.

Allowing the process to have access to the files fixes this problem.

Server code used:
```python
from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello:
    return 'hi'

if __name__ == '__main__':
    context = ('/path/to/cert.pem','/path/to/key.pem')
    app.run(debug=True, ssl_context=context)
```

### Expected Behavior
A stack saying the process cannot access the cert files. Ideally this trace would appear during startup before the first request is made.

For example, when using pyopenssl with the same files, the following trace is thrown on startup:

```pytb
Traceback (most recent call last):
  File ""server.py"", line 20, in <module>
    context.use_privatekey_file('/path/to/private/key.pem')
  File ""/home/user/.virtualenvs/dev/local/lib/python2.7/site-packages/OpenSSL/SSL.py"", line 798, in use_privatekey_file
    self._raise_passphrase_exception()
  File ""/home/user/.virtualenvs/dev/local/lib/python2.7/site-packages/OpenSSL/SSL.py"", line 777, in _raise_passphrase_exception
    _raise_current_error()
  File ""/home/user/.virtualenvs/dev/local/lib/python2.7/site-packages/OpenSSL/_util.py"", line 54, in exception_from_error_queue
    raise exception_type(errors)
OpenSSL.SSL.Error: [('system library', 'fopen', 'Permission denied'), ('BIO routines', 'FILE_CTRL', 'system lib'), ('SSL routines', 'SSL_CTX_use_PrivateKey_file', 'system lib')]
```

### Actual Behavior

After a request, the server returns a 200 response and disconnects the socket:

- `curl` clients receive a 200 and then throw errno 35 (Unknown SSL protocol error in connection to [secure site]:443).

- `nc` clients return a 200 and immediately disconnect.

- Web browsers report the following error:
<img width=""645"" alt=""screenshot 2017-06-24 09 53 44"" src=""https://user-images.githubusercontent.com/484926/27503820-94e6307c-58c3-11e7-8532-ebf58700fce1.png"">


What makes this problem worse is that Flask does not acknowledge that an attempted connection was made. Throughout all three of the above requests this is all that Flask printed in debug mode:

```
 * Running on https://0.0.0.0:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger pin code: 000-000-000
```

### Environment

* Python version: 2.7.6
* Flask version: 0.12.2 (also tested on 0.10.1)
* Werkzeug version: 0.12.2 (also tested on 0.11.5)
"
2390,Bad interaction between flask.json.load() and werkzeug LimitedStream,2017-06-23T15:13:12Z,2017-06-29T14:48:17Z,,AttributeError,"AttributeError: 'LimitedStream' object has no attribute 'readable'","

### Expected Behavior

I expected to be able to hand flask.request.stream to flask.json.load() in order to get a Python object back. flask.request.stream provides a bytes interface which the built-in python module doesn't like (it wants string) and the flask.json module has a couple of bits of code to work around this, so I expected it to work.

See attached file (reproduced here: https://gist.github.com/flexo/5cf4fde37f7b066fb6c7a77cb7416883 )
[test.py.zip](https://github.com/pallets/flask/files/1098240/test.py.zip)


### Actual Behavior

An exception is raised because LimitedStream has no 'readable' attribute. Possibly this makes it a bug in Werkzeug rather than Flask but since Flask provided the json module I thought it'd be best to report it here first.

```pytb
Traceback (most recent call last):
  File ""[...]/venv/lib/python3.5/site-packages/flask/app.py"", line 1982, in wsgi_app
    response = self.full_dispatch_request()
  File ""[...]/venv/lib/python3.5/site-packages/flask/app.py"", line 1614, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""[...]/venv/lib/python3.5/site-packages/flask/app.py"", line 1517, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""[...]/venv/lib/python3.5/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""[...]/venv/lib/python3.5/site-packages/flask/app.py"", line 1612, in full_dispatch_request
    rv = self.dispatch_request()
  File ""[...]/venv/lib/python3.5/site-packages/flask/app.py"", line 1598, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""[...]/test.py"", line 31, in errors
    data = json.load(request.stream)
  File ""[...]/venv/lib/python3.5/site-packages/flask/json.py"", line 154, in load
    fp = _wrap_reader_for_text(fp, kwargs.pop('encoding', None) or 'utf-8')
  File ""[...]/venv/lib/python3.5/site-packages/flask/json.py"", line 37, in _wrap_reader_for_text
    fp = io.TextIOWrapper(io.BufferedReader(fp), encoding)
AttributeError: 'LimitedStream' object has no attribute 'readable'
```

### Environment

* Python version: 3.5.3
* Flask version: 0.12.2
* Werkzeug version: 0.12.2


"
2389,Flaskr fails being run from cli,2017-06-23T14:03:32Z,2017-06-23T14:52:49Z,,NoAppException,"NoAppException: The file/path provided (flaskr.factory) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py","### Expected Behavior

According to this [README](https://github.com/pallets/flask/blob/master/examples/flaskr/README) the Flaskr example application should run after doing following:

`pip install --editable .`
`export FLASK_APP=flaskr.factory:create_app()`
`flask initdb`
`flask run`

### Actual Behavior

Flaskr fails running throwing a NoAppException.

```pytb
NoAppException: The file/path provided (flaskr.factory) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py
```

### Environment

* Python version: 2.7
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2388,pdf link on home page is broken,2017-06-23T03:13:30Z,2017-06-23T14:53:51Z,,,,
2387,Flask app doesn't run when importing Python-Markdown module,2017-06-22T04:50:55Z,2017-06-22T13:11:33Z,,Error,"Error: The file/path provided (flask_test) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py","### Expected Behavior

Import the Python-Markdown module and run the Flask app

```python
# flask_test.py
from flask import Flask
import markdown

app = Flask(__name__)

@app.route('/')
def index():
    return 'Hello, world!'
```

### Actual Behavior

```shell
export FLASK_APP=flask_test.py
flask run

Usage: flask-script.py run [OPTIONS]

Error: The file/path provided (flask_test) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py
```

If I simply comment out the `import markdown` line, the app launches/works just fine.

### Environment

* Python version: 2.7.12
* Flask version: 0.12
* Werkzeug version: 0.11.2
* Python-Markdown version: 2.6.8

I'm running on Windows 10 using Git Bash (mintty), which lets me use `export` instead of `set` for `FLASK_APP`. However I found that `set` doesn't change the outcome."
2386,Add command to CLI to generate secure random strings,2017-06-21T23:13:35Z,2017-06-24T16:35:38Z,,,,"I wrote command-line utility to generate a secure random string. It can be used, for example, to set Flask's `SECRET_KEY`.
The command is called with `flask generate-secret [--length <length>]` (length defaults to 30)."
2385,Remove deprecated code,2017-06-21T19:11:14Z,2017-06-26T16:23:20Z,,,,"Remove old code that has deprecation warnings:

- [x] **`Flask.ext`**
- [x] `Flask.init_jinja_globals`
- [x] `Flask.error_handlers`
- [x] `Flask.request_globals_class`
- [x] `Flask.static_path`
- [x] ~`send_file` mimetype guessing~ removed in 0.12 #1849
- [x] `Request.module`
- [x] `scripts/flask-07-upgrade.py`"
2384,Problem with partial video content: send_from_directory() + x-sendfile + mod_wsgi,2017-06-19T15:19:07Z,,,,,"I found that using send_file() to serve video (mp4) files works fine but the same content is not served using send_from_directory(). Only small parts (hundreds of bytes) are delivered to browser.
On Firefox video embedded through \<video\> tags is playable in most cases but opened directly from address bar not. On Chrome both methods are not working.

With x-sendfile switched off, send_from_directory() works ok.

Tested on:
Debian: python 3.5.3, flask  0.12.2, apache 2.4.25, mod_wsgi 4.5.11
Ubuntu: python 3.5.2, flask 0.12.2, apache 2.4.18, mod_wsgi 4.3.0"
2383,Don't require FLASK_APP to have .py extension,2017-06-18T20:48:26Z,2017-07-15T02:53:52Z,,,,"Addresses #2377. The simplest way that I found to do this was to just patch the `find_default_import_path` method to check if there's a file with the `.py` extension.

Worked in all of my testing. 🙂 
<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2382,"FLASK_APP var is not being parsed correctly for paths, imports system and third party modules.",2017-06-18T04:55:55Z,2017-06-19T13:14:50Z,,flask.cli.NoAppException,"flask.cli.NoAppException: Failed to find application in module ""site"".  Are you sure it contains a Flask application?  Maybe you wrapped it in a WSGI middleware or you are using a factory function.","If you create a file called `site.py` which defines your Flask app, and then set the env var as `FLASK_APP=""site.py""`, Flask will find the file but it can't find the application instance. 

```
Traceback (most recent call last):
  File ""/asdf/venv/lib/python3.4/site-packages/flask/cli.py"", line 48, in find_best_app
    'using a factory function.' % module.__name__)
flask.cli.NoAppException: Failed to find application in module ""site"".  Are you sure it contains a Flask application?  Maybe you wrapped it in a WSGI middleware or you are using a factory function.
```

This looks like an issue with Flask importing a third party (+system) module instead of a local module. When appending a `.py` extension, it should be treated as a path, not a python import. However, even if I do a full absolute path to the file, it looks like it's still treating it as a third party module.

You can also reproduce this issue by testing out different entrypoint names: os, string, flask.

Folder structure: http://i.imgur.com/CR88kUo.png

requirements.txt

```
Flask==0.12.1
Flask-SQLAlchemy==2.2
Jinja2==2.9.6
MarkupSafe==1.0
SQLAlchemy==1.1.10
Werkzeug==0.12.1
click==6.7
itsdangerous==0.24
```"
2381,removed bug in memory sqlite uri,2017-06-16T19:21:41Z,2017-06-16T19:38:34Z,docs,,,The in memory uri was bad.
2380,Maybe view function names should not be used as default endpoints,2017-06-16T05:38:16Z,2017-06-16T06:12:55Z,,,,"Hi,

Is there any reason the view function name is used as the default endpoint? Taken `view_func.__name__` as the default endpoint name I have to specify endpoints myself if my view functions are all subclassed from a same class and call a same method, or an `View function mapping is overwriting an existing endpoint function` error will be raised, which is not good for reusability.

Take the example below:
```python
class APIBase():
    def call(self, **kwargs):
        # assign url variables to self
        for k, v in kwargs.iteritems():
            self.setattr(k, v)
        m = getattr(self, request.method)
        m()

class DuckAPI(APIBase):
    def post(self):
        pass

class ChickenAPI(APIBase):
    def post(self):
        pass

context.route('/duck/<duck_id>', *args, **kwargs)(DuckAPI().call)
context.route('/chicken/<chicken_id>', *args, **kwargs)(ChickenAPI().call)
```

This will raise `View function mapping is overwriting an existing endpoint function module_name.call`, but actually the `call` function are from different instances.

I understand that typically `context.route` is used as a decorator thus having little possibility that the decorated functions' names in the same module will collide, but there're chances people like me will prefer to use it as a wrapper to define routes dynamically.

Will it be better if we use `str(view_func)` as the default endpoint?

I think we should at least change the error message, since the `call` in the above error message is not bound to the module it self, but described as `endpoint function {module_name}.call`. This took me a long time to trace the problem.
"
2379,Odd behavior with send_from_directory,2017-06-15T19:29:11Z,2017-06-15T21:28:30Z,,,,"I wrote some code for on-demand thumbnail generation but ran in to some weirdness with `send_from_directory`:

```py

# Just a relative directory called ""thumbs"" that's supposed to hold a replica directory tree, only with thumbnails
thumbcache = 'thumbs'

# ...

@app.route('/thumb/<path:path>')
def thumbnail(path):
    
    # Simple True/False return for success/failure.
    success = cache_thumbnail(path)
    if not success:
        raise Exception(""Thumbnail generation failed!"")

    # All thumbnails are jpg so I need to replace the file extension:
    thumbpath, _ = os.path.splitext(path)
    thumbpath += "".jpg""

    ## thumbpath = thumbpath.replace('\\', '/')

    #return send_file(thumbcache + '/' + thumbpath)
    return send_from_directory(thumbcache, thumbpath)
```

The `'/thumb/<path:path>` URL is being generated by: 
```html
<img id=""{{loop.index}}"" src=""{{ url_for('thumbnail', path=file) }}"">
```

The requests look like: `""GET /thumb/gw%5Calpha%5C1430f690aa3fcfda5c10beceb9c120ea.jpg HTTP/1.1""`

### Actual Behavior

The code above, as is, results in a 404 - File not found error. No exception.

### Expected Behavior

The file should be served.

If I uncomment the line `return send_file(thumbcache + '/' + thumbpath)` and thereby bypassing any security, it works but that's an undesirable workaround.

If I uncomment the line `thumbpath = thumbpath.replace('\\', '/')` to replace all backslashes with forward slashes, it works fine.  
I don't know why `url_for` generated backslashes in the first place. Maybe an artifact because I am running this code on a Windows machine?


### Environment

* Python version: Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:18:55) [MSC v.1900 64 bit (AMD64)] on win32
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2378,Import app from wsgi.py or app.py if FLASK_APP is not defined,2017-06-15T19:01:32Z,2017-06-16T14:00:27Z,,,,"Fixes #2376

This patch adds support for looking for the Flask app instance in `wsgi.py` or `app.py` modules (in that order) when `FLASK_APP` is not defined."
2377,flask command should not require .py extension,2017-06-15T16:20:20Z,2017-07-15T02:59:51Z,cli,,,"If you don't install your app in the env, you have to append `.py` in the `FLASK_APP` var.

Haven't dug into why it's like this yet, but it might be more straightforward to add the cwd to PYTHONPATH so that `FLASK_APP=app.py` becomes `FLASK_APP=app` even if the app isn't installed in the env.

We can still support paths to set the cwd. `FLASK_APP=/path/to/app` would set the current directory to `/path/to` then try to import `app`."
2376,flask command should auto-detect module,2017-06-15T16:17:22Z,2017-06-16T14:00:26Z,cli,,,"Even when installed as a package, it can be useful in complex situations to have a `wsgi.py` file for setting the app up to run. The `flask` command should detect this file if no `FLASK_APP` is specified at all.

Additionally, it's common to name quick demo apps `app.py`, so that should be detected too.

From discussion in #2375."
2375,"Add .env support, take 2",2017-06-14T20:18:30Z,2017-07-16T20:55:19Z,cli,,,"Setting the `FLASK_APP` and `FLASK_DEBUG` for every new terminal session is inconvenient. The CLI could load a `.env` file that contained these values instead. Since Heroku is a popular deployment option, this would also help developers who want the same scheme locally.

Instead of writing our own parser, we should use [python-dotenv](https://github.com/theskumar/python-dotenv). This reduces maintenance burden on us and can be an optional dependency. If it is installed, the CLI will load the `.env`, otherwise it will skip it.

Previously discussed in #2164.

---

@miguelgrinberg raised a good point in the previous thread. `.env` is typically used to store sensitive configuration. The convenience of setting `FLASK_APP=` there could encourage users to commit the file publicly, which would be bad.

A solution would be to load two files, `.flask-env` and `.env`, and prominently document that `.flask-env` can be committed but should not contain secrets."
2374,Correctly JSON-encode datetimes aware of non-UTC timezones,2017-06-14T19:39:26Z,2017-06-15T01:42:15Z,,,,"http_date() requires timetuple in UTC, but JSONEncoder.default() was
passing a local timetuple instead.

This fixes #2372.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2373,Reconfigure app when debug is set by run command,2017-06-14T19:17:48Z,2017-06-14T19:56:43Z,cli,,,"`app.jinja_env` is a property that creates the environment on first access. If `app.debug` is not configured explicitly before accessing `app.jinja_env`, `env.auto_reload` will be calculated as `False`. The `run` command's `debug` flag can change the app's debug flag, at which point `auto_reload` needs to be reconfigured.

This extracts the logic for `auto_reload` to `Flask.templates_auto_reload`. It adds a new method to be called by `app.run` or `ScriptInfo.load_app` that will reconfigure the app if `debug` is set by the command.

continues #1910
closes #1907"
2372,JSONEncoder encodes aware datetime objects in non-UTC timezone incorrectly as being in GMT.,2017-06-14T18:11:04Z,2017-06-15T01:42:15Z,"good first issue, json",,,"``flask.json.JSONEncoder()`` encodes aware datetime objects in non-UTC timezone incorrectly using local time tuple with GMT.

### Expected Behavior

The following code segment should print ``""Sun, 01 Jan 2017 20:34:56 GMT""``  (12:34:56 PST8PDT is 20:34:56 GMT):

```python
from datetime import datetime
from pytz import timezone
dt = timezone('PST8PDT').localize(datetime(2017, 1, 1, 12, 34, 56))

from flask.json import JSONEncoder
encoder = JSONEncoder()
print(encoder.encode(dt))
```

### Actual Behavior

The preceding code segment prints ``""Sun, 01 Jan 2017 12:34:56 GMT""`` instead, that is, local timetuple() appended with GMT.

### Environment

* Python version: 3.5.3
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2371,document `Flask.register_blueprint` arguments,2017-06-14T14:18:26Z,2017-06-14T14:41:44Z,"blueprints, docs",,,"closes #1809
"
2370,Add docutils label for class-based views,2017-06-12T21:16:07Z,2017-06-13T13:28:19Z,,,,Make section available via intersphinx
2369,Add docutils label for templates page,2017-06-12T21:08:02Z,2017-06-13T13:27:47Z,,,,For consistency with rest of pages. Linkable via intersphinx
2368,Discussion: from_envvar's behavior,2017-06-11T22:43:52Z,2017-06-13T13:30:17Z,,,,"There is an issue I've been having for a few years regarding Flask and I failed to articulate it correctly. I find ``from_envvar``'s behavior unintuitive. Also, I haven't been able to find prior discussions mentioning it. Probably because of [Chesterton's fence](https://en.wikipedia.org/wiki/Wikipedia:Chesterton%27s_fence), or they feel they'd be told to work around it. Which only takes one line:

``app.config.from_object(os.environ[""app.config.dev""])``, see [Google results](https://www.google.com/search?q=%22from_object(os.environ%22)) 😄 

The first google result I see is [people perplexed by from_envvar](https://stackoverflow.com/questions/20062256/how-to-use-app-config-from-envvar-flask). Why? I'm not sure. For some reason, in recent years, Django (and frankly, Flask also) got devs accustomed to importing modules via strings.

Current behavior: 

- ``from_envvar`` forwards to ``from_pyfile``, which strictly requires an absolute/relative file path (*i.e. not a module string*).

Expected behavior:

- ``from_envvar`` should wrap ``from_object``

   Why:

   - ``from_envvar`` [only works with files](https://github.com/pallets/flask/blob/789715a/flask/config.py#L109)
   -  File from ``from_envvar`` [are interpreted as modules anyway](https://github.com/pallets/flask/blob/789715a/flask/config.py#L111)
   - ``from_envvar`` (``from_pyfile``) cannot point to classes
   - ``from_object`` supports **string**  module/class paths (e.g. ``app.config.dev``), which works with environmental variables
   - ``from_object``supports both [classes and modules](https://github.com/pallets/flask/blob/789715a/flask/config.py#L139). Especially important since the official documentation [gives examples of using classes](http://flask.pocoo.org/docs/0.12/config/#development-production).
   - It's more customary for users invoking configuration by *files* to do so via CLI arguments.
   - A local, dev, staging, or production deployment in practice would opt to use environmental variables to point to a python object (module/class) via string.

      For instance: Let's say we're deploying to production with a uwsgi config. Since python production deployment is highly driven by packages, *we've likely already done the work of figuring out our python environmental / package locations*. It'd be more intuitive to point to a python object by string, rather than by file path.

- Alternative: ``from_envvar`` should additionally wrap ``from_object`` for non-file paths.

* Python version: 3.6
* Flask version: 1.12
* Werkzeug version: 0.12.2
"
2367,removes a duplicate word docstring for class Flask,2017-06-10T12:51:59Z,2017-06-10T12:53:41Z,,,,
2366,Add basic how-to on using envvars for config,2017-06-09T14:22:52Z,2017-06-09T17:30:32Z,,,,Addresses issue #2329 -- adds basic how-to on configuring a Flask application using environmental variables.
2364,mention csp for javascript: uri xss,2017-06-06T16:22:43Z,2017-06-06T16:22:50Z,docs,,,closes #2174
2363,document inherited attributes for Flask and Blueprint,2017-06-06T14:52:41Z,2017-06-06T14:52:56Z,docs,,,"Sphinx autodoc `:inherited-members:` doesn't include attributes. The only solution is to duplicate the `_PackageBoundObject` attributes and their docs in the `Flask` and `Blueprint` classes.

The duplicated attributes can be removed once sphinx-doc/sphinx#741 is fixed.

closes #480"
2362,Remove error handler cache,2017-06-05T13:26:59Z,2017-06-05T13:34:50Z,,,,"Caching handlers for the exception MRO caused issues with some inheritance setups. I don't expect hierarchies to be deep enough for this to affect most cases, but if performance is an issues handlers should be explicitly registered for each class they apply to.

closes #2267, closes #1433"
2361,Include flask.json package in setup(),2017-06-05T08:12:17Z,2017-06-05T12:03:50Z,,,,
2360,Fixed several PEP8 errors,2017-06-05T07:00:51Z,2017-06-05T12:12:42Z,,,,"* E309 expected 1 blank line after class declaration
* E128 continuation line under-indented for visual indent
* E265 block comment should start with ""# ""
* E306 expected 1 blank line before a nested definition, found 0

Describe what this patch does to fix the issue.

Link to any relevant issues or pull requests.

<!--
Commit checklist:

* add tests that fail without the patch
* ensure all tests pass with ``pytest``
* add documentation to the relevant docstrings or pages
* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings
* add a changelog entry if this patch changes code

Tests, coverage, and docs will be run automatically when you submit the pull
request, but running them yourself can save time.
-->
"
2359,"Be smarter about adding "".cli"" to reloader command",2017-06-04T19:31:53Z,2017-06-04T19:38:34Z,cli,,,"`python -m flask.cli` raises an import warning on > 2.6. It's only needed on 2.6, `python -m flask` works otherwise.
closes #2357"
2358,JSON support for test client and Response,2017-06-04T18:55:06Z,2017-06-04T19:02:41Z,"json, testing",,,"Continues #1984.

* `json` argument to test client request methods serializes data as JSON and sets content type.
* Extract request JSON methods to mixin, apply to Response."
2357,python -m flask run raises RuntimeWarning,2017-06-04T16:20:14Z,2017-06-04T19:38:34Z,cli,,,"### Expected Behavior

Given a project with the following structure:

```
project/
    my_cool_app/
        __init__.py
```

```python
from flask import Flask

app = Flask(__name__)
```

Running the following should work without warnings:

```
FLASK_DEBUG=1 FLASK_APP=my_cool_app python -m flask run
```

I use `python -m flask run` in order to not need `my_cool_app/__init__.py` as `FLASK_APP`, per the discussion around [this issue](https://github.com/pallets/flask/issues/1847).

### Actual Behavior

A warning is printed on the console when using the reloader:

```
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py:125:
RuntimeWarning: 'flask.cli' found in sys.modules after import of package 'flask',
but prior to execution of 'flask.cli'; this may result in unpredictable behaviour
```

### Environment

* Python version: 3.6.1 (MacOS 10.12.5)
* Flask version: 0.12.2
* Werkzeug version: 0.12.2
"
2356,doc: following web standards,2017-06-03T08:33:49Z,2017-06-03T14:33:43Z,,,,"Add double quotation marks on documents for following web standards.

https://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.2"
2355,Wrong release version,2017-06-02T22:08:14Z,2017-06-04T01:51:29Z,,,,"In the 0.12.2 release the version in `flask/__init__.py` is still 0.12.2-dev

This is causing problems with programs checking the flask version."
2354,Only open session if request does not have open session,2017-06-02T18:16:30Z,2017-06-03T19:26:15Z,session,,,"When using `stream_with_context`, a new session was being opened based on the original request data. If the view containing the generator had modified the session, those changes were not visible.

This does not enable modifying the session in the generator, as the headers will have already been sent. (Possibly does not apply to server-side sessions, but you would still need to manually save the session in the generator.)

Closes #1348."
2353,Clarify documentation for json parsing,2017-06-02T16:08:37Z,2017-06-02T17:23:52Z,,,,Documentation does not currently mention that is_json accepts mimetypes that are not strictly application/json.
2352,Make session serializer extensible,2017-06-02T06:12:33Z,2017-06-02T17:07:57Z,"json, session",,,"Continues #1452.

Refactors `flask.session.TaggedJSONSerializer` to a new `flask.json.tag` module. Creates a `JSONTag` interface and a `TaggedJSONSerializer.register` method to register new tags.

~~~python
from flask.json.tag import JSONTag

class TagOrderedDict(JSONTag):
    __slots__ = ('serializer',)
    key = ' od'

    def check(self, value):
        return isinstance(value, OrderedDict)

    def to_json(self, value):
        return [[k, self.serializer.tag(v)] for k, v in iteritems(value)]

    def to_python(self, value):
        return OrderedDict(value)

app.session_interface.serializer.register(TagOrderedDict, 0)
~~~

Since `register` takes an index, it can be used to override existing tags (although it would be slightly more efficient to subclass `TaggedJSONSerializer` instead). This can address #1908 by adding a higher-priority `dict` serializer that uses a different format to support non-string keys.

Closes #1438, #1511, #1908.

~Still needs:~

- [x] refactor to move the `serializer` argument to `self.serializer` instead. It was an attempt at optimization but didn't change anything.
- [x] refactor `TagDict` to split the logic between addressing #1511 and regular dict passthrough, as #1452 originally did. This was another optimization attempt that didn't help, it just made the code more confusing.
- [x] more tests
- [x] documentation"
2351,How to set connection read timeout and support flask run in multi-thread mode?,2017-06-01T09:25:49Z,2017-06-01T09:43:56Z,,,,"Hi 
   When I use Flask as my web server, I meet a diffcult problem.
   Because of network problem, the flask server sometimes hang forever(The client build a connection to server and then died before send anything). And I found it hanged at socket read function. The server was started by  ""app.run()"" (The way you don't suggest to use) . So I readed the flask and werkzeug code and found werkzeug didn't set socket timeout default. So I must writed a class extends serving.WSGIRequestHandler and set the timeout = 0.5 and  made it as a parameter for ""app.run()"" , it worked well.

 But there was another problem, I couldn't run this server in multi-thread mode, because when I used flask commod to run this server, there was no way to set timeout, it didn't make ""app.run()"" as the  start point。

I also tried gunicorn and still couldn't find a way both set timeout and run server in muti-thread mode. 

what should I do ?"
2350,show nice message when registering error handler for unknown code,2017-06-01T01:09:53Z,2017-06-01T04:04:21Z,docs,,,"When registering an error handler for a code that's not registered in `werkzeug.exceptions`, a `KeyError` is raised. This changes the error to show a helpful ""use a HTTPException subclass"" as well. Documentation is updated to describe this behavior and other clean up.

The supported pattern for unknown codes is:

~~~python
class UnknownError(HTTPException):
    code = 999
    description = ""A very large error occurred.""

app.register_error_handler(UnknownError, handle_999)

raise UnknownError
~~~

If a standard code does not work, submit a patch to add it to Werkzeug.

closes #1837"
2349,Adding Couchdb views from blueprint,2017-05-31T21:11:01Z,2017-05-31T21:25:59Z,,RuntimeError,"RuntimeError: Working outside of application context.","Adding Couchdb views from the blueprints are showing error... Tried with accessing the main app as 'current_app' but showing error 'RuntimeError: Working outside of application context.'
My Code from blueprint for adding/syncing couchdb views are as following:


```python
from flask import current_app as app
manager = CouchDBManager()

with app.app_context():
    manager.setup(app.app_context())
    manager.add_viewdef(my_couchdb_view_from_blueprint)
    manager.sync(app.app_context())
```


The error message is as following:


RuntimeError: Working outside of application context.
This typically means that you attempted to use functionality that needed
to interface with the current application object in a way.  To solve
this set up an application context with app.app_context().


"
2348,make debugging bad key errors easier,2017-05-30T02:11:10Z,2017-05-30T02:53:19Z,,,,"* `TRAP_BAD_REQUEST_ERRORS` is enabled by default in debug mode
* `BadRequestKeyError` has the key in the description in debug mode

If `app.debug` is true but we're not running in the interactive debugger, this now raises a 500 error (the traceback in the console has the key error though). Can get the old behavior by setting `TRAP_BAD_REQUEST_ERRORS = False`.

This error is one of the most recurring questions about Flask on Stack Overflow. Making the error visible will hopefully answer a lot of questions before they're asked.

closes #382"
2347,deprecate app session methods in favor of session_interface,2017-05-29T20:35:44Z,2017-05-29T20:42:07Z,session,,,"`Flask.save_session`, `open_`, and `make_null_` are deprecated in favor of using a custom `session_interface`. Their docs already recommended doing that. Marked as deprecated in 1.0, removed in 1.1.

ref #1182"
2346,use existing response.vary property to set vary header,2017-05-29T17:10:30Z,2017-05-29T17:16:29Z,session,,,closes #2345
2345,Use existing response.vary property to set vary header,2017-05-29T15:50:44Z,2017-05-29T17:16:29Z,session,,,"#2288 and #2322 added support for setting `Vary: Cookie` and not clobbering the existing `Vary` header. Unfortunately, there was already built-in support for that, we just missed it. Switch to this:

~~~python
response.vary.add('Cookie')
~~~"
2344,APPLICATION_ROOT defaults to '/',2017-05-28T21:12:27Z,2017-05-28T21:17:57Z,,,,"All places that use `APPLICATION_ROOT` were using the pattern `app.config.get('APPLICATION_ROOT') or '/'`. This sets the default config to `'/'` to simplify things, since it was the implicit default and didn't do anything special if it wasn't set."
2343,update development resources,2017-05-28T17:29:14Z,2017-05-28T17:42:17Z,"docs, testing",,,"* fix tox to test examples again 😞
* add detox env for faster testing, `tox -e detox`, although sometimes there are weird failures that work fine with plain `tox`
* clean up makefile, add tox target
* add extra group for installing dev requirements, `pip install -e "".[dev]""
* clean up contributing doc, build with docs
* expand issue template
* add pull request template"
2342,#2341: Accept default argument value when args lenght equal 1,2017-05-27T22:03:42Z,2017-05-28T01:09:35Z,,,,Fix issue https://github.com/pallets/flask/issues/2341
2341,"If FLASK_APP accept one argument and I do not send it, the default value is not correct, instead I get a ScriptInfo object.",2017-05-27T21:36:21Z,2017-05-28T01:10:08Z,,,,"An example is in the Flickr app [link here](https://github.com/pallets/flask/blob/master/examples/flaskr/flaskr/factory.py#L19)

As a newcomer it is confusing when I follow the [README.md](https://github.com/pallets/flask/blob/master/examples/flaskr/README#L24), but the when running the app it results in the following error. 
![image](https://cloud.githubusercontent.com/assets/11146130/26524504/51b31274-4302-11e7-8dd6-21426b08bbbf.png)

"
2340,Reduce ci matrix,2017-05-27T17:44:23Z,2017-05-27T17:52:46Z,,,,
2339,investigate build stages on travis,2017-05-26T16:39:17Z,2017-05-27T18:30:05Z,,,,https://blog.travis-ci.com/2017-05-11-introducing-build-stages
2338,cleanup #2326,2017-05-26T13:17:16Z,2017-05-26T13:17:41Z,,,,
2337,flask mutable session (with flask-session RedisSessionInterface),2017-05-26T11:31:50Z,2017-05-29T18:42:56Z,,,,"I am using the [RedisSessionInterface](https://pythonhosted.org/Flask-Session/#flask.ext.session.RedisSessionInterface) of [flask-session](https://pythonhosted.org/Flask-Session/) to implement my server side sessions.  I have a test case that relies on mutating the session and I have read that this is possible [from the Flask documentation](http://flask.pocoo.org/docs/dev/testing/#accessing-and-modifying-sessions).

Here's my test code (using [pytest](https://pytest.org/)):

``` python

def test_code_already_used(app, client):
    uri = url_for(""login.username"")
    response = client.get(uri)  # stores the initial state in the session
    assert response.status_code == 302

    query = urlparse(response.location).query
    payload = dict(parse_qsl(query))
    state = payload['state']  # get key for session state

    with app.test_client() as context:
        transaction = context.session_transaction()
        with transaction as mutable_session:
            mutable_session[state] = {'exchanged': True}  # mutates the session

    # test code later fails becase the modification is not propagated
```

My application relies on seeing `exchanged=True` but this change is not there.

Any ideas!?"
2336,Switch theme to Alabaster,2017-05-25T21:35:36Z,2017-05-25T21:39:04Z,,,,
2335,reduce the number of build targets in the travis matrix,2017-05-25T21:34:55Z,2017-05-28T03:38:43Z,,,,"https://travis-ci.org/pallets/flask/builds/236168998?utm_source=github_status&utm_medium=notification

there are currently 22 targets. There's no way those are all needed. "
2334,Docs sidebar missing space,2017-05-25T16:55:38Z,2017-05-25T17:06:54Z,,,,"Smallest PR ever, but that missing space has been annoying me for a very long time."
2333,Fixed typo in docs,2017-05-25T11:22:02Z,2017-05-25T15:24:52Z,,,,
2332,PyCharm Run Configuration Guide,2017-05-25T01:54:12Z,2017-05-25T16:52:47Z,,,,"A guide showing how to get the `flask run` cli functionality directly within PyCharm-- addresses issue #2198. Even when PyCharm implements smoother integration, we're probably still going to need a variation of this to address factories/etc."
2331,"Reduce test envs, add coverage reports, other test fixups",2017-05-24T22:45:32Z,2017-05-24T22:57:57Z,testing,,,"* reduce number of tox and travis envs, was taking way too long to run (~50 minutes)
* bump minimum werkzeug version to fix tests. I don't find this particularly controversial, but someone else can bump it back down if 0.9 from 2013 is too recent.
* use archive packages from github for devel, cloning was taking too long
* cache pip pacakges on travis
* collect branch coverage
* collect coverage of test code
* report coverage across envs
* test building docs, don't linktest by default
* enable codecov integration"
2330,Minor edits to tutorial for clarity.,2017-05-24T20:56:13Z,2017-05-25T00:00:20Z,docs,,,Minor edits/formatting/add links in 8 files in the Flaskr tutorial pages.  Intended to aid newbies to follow.
2329,Document how to write a config.py that loads config from the environment,2017-05-24T15:34:36Z,2017-06-09T17:30:59Z,docs,,,"On Heroku, we can't add a local config `instance/config.py` that's not part of the repo. Instead, they support configuration through env vars. Document this pattern.

`myapp/config.py`:

~~~python
MAIL_USERNAME = os.environ.get('FLASK_MAIL_USERNAME', 'default')
LDAP_PORT = int(os.environ.get('FLASK_LDAP_PORT', 636))
~~~"
2328,How Can I Make Pagination In Flask??,2017-05-24T15:21:12Z,2017-05-24T15:21:54Z,,,,"The issue tracker is a tool to address bugs.
Please use the #pocoo IRC channel on freenode or Stack Overflow for questions.
How Can I Make Pagination In Flask??"
2327,Docs theme not responsive,2017-05-24T02:52:07Z,2017-05-25T21:35:50Z,,,,"Hi,  I'm reading the docs and working on code at the same time with somewhat narrow windows.  
The Flask docs have a big sidebar on the left that is not always useful, and worse the body text has a fixed width that pushes it off the right side of the page.  Makes it very hard to read without constantly scrolling.

Doesn't fit in with old-school html wrapping or new responsive hotness.  Disabling:

```
div.document {
	/* width: 940px; */
}
```

with the dev tools fixed the width problem, responsive css could disable the sidebar when the window is narrow.  Cheers,
"
2326,Handle app factory with arguments in FLASK_APP,2017-05-24T00:15:20Z,2017-05-25T21:57:18Z,,,,#2264 
2325,More DRYing up the test suite,2017-05-24T00:05:10Z,2017-05-25T00:27:36Z,,,,"I have found more spots in the test suite that could have been ""DRYed"" up."
2324,Fix for Issue 2313 - refactoring gevent tests into class,2017-05-23T23:53:24Z,2017-05-24T00:31:45Z,,,,
2323,Cleanup test_blueprint.py to use test fixtures,2017-05-23T23:43:54Z,2017-05-24T00:14:58Z,,,,Modify several tests to use the app and client test fixtures.
2322,Don't overwrite Vary header when setting for cookie access,2017-05-23T23:41:58Z,2017-05-25T17:46:46Z,,,,Closes #2317 
2321,Add test for Blueprint app-wide url processing,2017-05-23T23:27:47Z,2017-05-24T00:14:23Z,,,,"The test add coverage for methods: `Blueprint.app_url_defaults`, and
`Blueprint.app_url_preprocessing`. This PR increases the coverage of
blueprint module by 2%."
2320,Update click dependency info.,2017-05-23T22:32:41Z,2017-05-23T23:20:59Z,,,,"Flask requires click >= 4.0, not 2.0 as `click.echo` doesn't have `color` argument in 2.0
See https://lgtm.com/projects/g/pallets/flask/snapshot/d8cd0c47028efe0b0efe052bccc8bd52de87be7c/files/flask/cli.py#L163"
2319,Support `create_app` without script_info or with script_info as named argument,2017-05-23T20:53:45Z,2017-05-23T23:24:30Z,,,,#2266 
2318,Fix a small oversight in the testing docs,2017-05-23T20:25:05Z,2017-05-23T20:31:56Z,,,,The `request` fixture is not needed anymore.
2317,Don't overwrite Vary header when setting for cookie access,2017-05-23T19:08:12Z,2017-05-25T17:46:46Z,,,,"If the `Vary` header is already set, the current session code just adds another header line. What it should do is update the existing header by splitting, adding the new option to the set, joining, and setting the new value. See Django's [`patch_vary_headers`](https://github.com/django/django/blob/1ce04bcce0076360623ae164afd3541a5c031af2/django/contrib/sessions/middleware.py#L45).

Related to #2288 "
2316,Adds provide_automatic_options to Class-based Views,2017-05-23T18:52:53Z,2017-05-23T19:46:31Z,,,,
2315,Added documentation for PowerShell environment variables,2017-05-23T18:35:43Z,2017-05-23T22:33:59Z,,,,"This is just a small addition to the documentation, closing #2281. I included a dummy path in order to fit the appearance of the Windows CLI prompts."
2314,Added support for generic HTTPException handlers on app and blueprints,2017-05-23T17:42:18Z,2017-05-23T18:51:17Z,,,,"Resolves issue #941, replaces pr #2082 and #2144, code based on #2144, tangentially related to #1383
Error handlers are now returned in order of blueprint:code, app:code, blueprint:HTTPException, app:HTTPException, None

Corresponding tests also added.

Resubmit of #2304 "
2313,Organize the gevent tests into a single class,2017-05-23T17:25:24Z,2017-05-24T00:53:22Z,"good first issue, testing",,,"https://github.com/pallets/flask/blob/c8e56d58077d29e2c9478f133b3c69ba73deead5/tests/test_reqctx.py#L147-L196 could be organized into a single class specifically for tests about greenlets. 

This is cleaner because Pytest supports conditionally skipping the entire class if greenlets are missing rather than having to mark each test separately. And can trigger just that class of tests etc."
2312,Replace `modules_tmpdir` fixture with pytest's built-in `tmpdir` fixture,2017-05-23T17:17:15Z,2017-05-23T17:21:07Z,,,,"I'm wondering if the [`modules_tmpdir` fixture](https://github.com/pallets/flask/blob/c8e56d58077d29e2c9478f133b3c69ba73deead5/tests/conftest.py#L68-L79), could be removed/replaced in the tests with `pytest`'s built-in [`tmpdir` fixture](https://docs.pytest.org/en/latest/tmpdir.html)? 

Not 100% confident this is possible/the right move, but it's worth investigating."
2311,Use the yield syntax in pytest's fixtures,2017-05-23T16:37:45Z,2017-05-23T19:00:35Z,,,,"Hi,

Pytest's documentation recommends the use of the yield syntax over teardown functions.

I did not modify the flaskr example as it is being handled by #2307.
Also, I'm not familiar enough with Flask's tests to refactor the last two uses of `request.addfinalizer`:
- [tests/conftest.py#L126](https://github.com/pallets/flask/blob/master/tests/conftest.py#L126)
- [tests/test_instance_config.py#L131](https://github.com/pallets/flask/blob/master/tests/test_instance_config.py#L131)"
2310,Fix refactoring error in static_folder docstring,2017-05-23T05:34:53Z,2017-05-23T06:46:22Z,,,,
2309,Add http headers security notes ,2017-05-23T03:54:19Z,2017-05-25T21:44:24Z,,,,"Add notes about the following http headers and protocols:

 
- SSL/HTTPS
- Security Headers
- Content Security Policy (CSP)
- HTTP Strict Transport Security (HSTS)
- X-FRAME-OPTIONS (Clickjacking protection)
- X-Content-Type-Options
- Cookie options
- HTTP Public Key Pinning (HPKP)"
2308,Support for unregistering blueprints (or endpoints).,2017-05-23T03:45:20Z,2017-05-23T18:57:25Z,,,,">The downside is that you cannot unregister a blueprint once an application was created without having to destroy the whole application object.

this statement appears in the [docs](http://flask.pocoo.org/docs/0.12/blueprints/), but is there a design reason behind this, or is it just because it hasn't been implemented yet? if it's not possible, what are alternatives for disabling an endpoint other than using some kind of variable to store whether an endpoint should be active?"
2307,For Issue #2286: Update unittest references,2017-05-23T00:46:44Z,2017-05-23T18:50:31Z,,,,"These changes look to replace references to `unittest` in the documentation with `pytest`.

In particular, for `docs/testing.rst`, code examples have been updated to reflect the current state of  `test_flaskr.py`: https://github.com/pallets/flask/blob/master/examples/flaskr/tests/test_flaskr.py"
2306,DRYing up the test suite using pytest fixtures,2017-05-23T00:32:30Z,2017-05-23T22:18:40Z,,,,Using pytest fixtures for test cases. Resolves #2287 
2305,Updating contributing rst,2017-05-23T00:07:52Z,2017-05-23T18:19:58Z,,,,
2304,Added support for generic HTTPException handlers on app and blueprints,2017-05-22T23:23:35Z,2017-05-23T17:39:47Z,,,,"Resolves issue #941, replaces pr #2082 and #2144, code based on #2144, tangentially related to #1383
Error handlers are now returned in order of blueprint:code, app:code, blueprint:HTTPException, app:HTTPException, None

Corresponding tests also added.
"
2303,Added tests for make_response and get_debug_flag to improve coverage of helpers.py,2017-05-22T23:20:02Z,2017-05-23T15:34:23Z,,,,"Got less coverage improvement than I was hoping, but it did get a bit more."
2302,Added uWSGI and example usage to stand-alone WSGI containers documentation,2017-05-22T23:20:00Z,2017-05-23T01:08:41Z,,,,Talked with @davidism and decided to add section for uWSGI HTTP router / server via embedded mode.
2301,Add coverage for Blueprint request process methods,2017-05-22T22:58:12Z,2017-05-23T01:06:31Z,,,,"Add test to cover following methodss to the `Blueprint` object:
`before_request`, `after_request`, `before_app_request`,
`before_app_first_request`, `after_app_request`.
This PR increases the coverage of flask.blueprints by 6%."
2300,Moved WSGI Standalone first in deployment documentation,2017-05-22T21:50:54Z,2017-05-22T22:28:43Z,,,,This references “Reorder deploy docs to mention standalone wsgi first” in project sprint.
2299,Add coverage for Blueprint.add_app_template_global,2017-05-22T21:36:28Z,2017-05-22T22:29:47Z,,,,"This tests the `Blueprint.add_app_template_global` mothod, which internally
calls the `Blueprint.app_template_global` method. The methods are used to
registering a function to the jinja template environment.
This PR increases the test coverage for module `flask.blueprint` by 4%."
2298,Add coverage for Blueprints.(app_)context_processor,2017-05-22T20:18:11Z,2017-05-22T21:02:00Z,,,,"Test both context_processor and app_context_processor functions.
Two context parameters are added into the context: one added to
the blueprint locally; another added to the app globally. The test
asserts the behaviors in both blueprint scope and the app scope.
The coverage for flask.blueprints is increased by 3%."
2297,Auto-detect create_app() in find_best_app() #2265,2017-05-22T19:35:25Z,2017-05-22T23:13:28Z,,,,Resubmit for #2265 (git issues)
2296,Added reference and link to Werkzeug debugger documentation,2017-05-22T19:22:00Z,2017-05-22T19:28:06Z,docs,,,
2295,Add coverage for Blueprint.app_errorhandler,2017-05-22T19:01:07Z,2017-05-22T19:30:52Z,testing,,,"This test case registers an application-wise error handler from
a Blueprint. Verifies the error handler by aborting the flask app
from the application itself as well as from another registered
Blueprint."
2294,Auto-detect create_app() in find_best_app() #2265,2017-05-22T18:57:20Z,2017-05-22T19:16:11Z,,,,#2265 
2293,Debug mode 2261,2017-05-22T18:29:33Z,2017-05-22T18:43:58Z,docs,,,#2261 
2292,Investigate adding app and debug args back into the CLI,2017-05-22T17:43:01Z,2017-06-14T19:53:33Z,cli,,,"The `-a myapp:app` and `--debug` flags were removed from the CLI and became environment variables instead. I'm not very clear on the reasons behind that, but at the time it was stated that Click could be fixed to support that again. Has Click been fixed? Let's try adding it back."
2291,"log a clickable url to home page when listening 0.0.0.0, more beginne…",2017-05-21T09:38:56Z,2017-05-22T00:59:02Z,,,,"Hello, I'm a novice.  I use pycharm for development, when I ran my application to listen on 0.0.0.0, I needed to type “http://localhost:5000"" to webbroswer to visit my website. It's a bit inconvenient! So I add a some codes to the app.py file to render the url.

```
 * Restarting with stat
 * You can visit http://localhost:5000/
 * Debugger is active!
 * Debugger pin code: 294-762-868
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
```

 In my opinion, it's convenient than before. 

Thanks you very much!
"
2290,can i preserve my json output ?,2017-05-20T22:48:30Z,2017-05-22T00:08:26Z,,,,"example
```
test = {
    ""b"": ""test"",
    ""a"": ""test"",
    ""h"": ""test"",
    ""f"": ""test""
}
```
they should return
```
 {
    ""b"": ""test"",
    ""a"": ""test"",
    ""h"": ""test"",
    ""f"": ""test""
}
```

adding this app.config[""JSON_SORT_KEYS""] = False   will not follow my desire output
```
 {
    ""h"": ""test"",
    ""b"": ""test"",
    ""f"": ""test"",
    ""a"": ""test""
}
```

removing that it will sort ...
```
 {
    ""a"": ""test"",
    ""b"": ""test"",
    ""f"": ""test"",
    ""h"": ""test""
}
```
i just want like JSON.stringify output ... preserving its order..
"
2289,Please tag a release,2017-05-20T19:27:21Z,2017-05-21T10:24:52Z,,,,You published 0.12.2 to PyPI but didn't tag a git release.
2288,"Set ""Vary: Cookie"" header when session is accessed",2017-05-20T19:16:04Z,2017-05-20T20:45:49Z,session,,,"Based on [Django's behavior](https://github.com/django/django/blob/1ce04bcce0076360623ae164afd3541a5c031af2/django/contrib/sessions/middleware.py#L45), order is delete cookie if empty, append vary header if accessed, set cookie if modified.

continues #1026"
2287,DRY up the test suite using pytest fixtures,2017-05-19T19:14:12Z,2017-05-23T22:18:40Z,"good first issue, testing",,,"The test suite is a bit of a mess as far as how each test sets up an app context, request context, etc.

It'd be nice to DRY this up using pytest fixtures.

Benefits:
1. More readable tests.
2. Tests are easier to write.
3. Tests are easier to refactor.
3. Tests are more robust because it's easier to run a test with multiple parameters.

This is a large project, but easy to tackle incrementally. Perhaps it should be broken into multiple issues, as each section of tests requires some specific fixtures, for example `jsonify()` tests require some specific `json` setup.

Related: #2286 

"
2286,Rewrite the testing docs,2017-05-19T18:51:30Z,2017-05-23T18:53:39Z,"docs, testing",,,The testing docs still talk about unittest. We need to update these with modern patterns using PyTest and fixtures.
2285,Review HTTP security,2017-05-16T02:10:01Z,2017-05-27T17:08:18Z,"docs, good first issue",,,"We should make sure we're providing good, thorough security defaults, or at least documentation on the available options. Not sure if this fits better as Flask config, Werkzeug middleware, or a separate Flask-HTTP-Security extension.

Overview of HTTP security headers: https://blog.appcanary.com/2017/http-security-headers.html
Django's security options: https://docs.djangoproject.com/en/1.11/topics/security/ (some things, such as CSRF and SQL are handled by other libraries, not Flask)

As a first step, good for beginners, it would be nice to get a writeup here of what's already covered and what's not."
2284,safe_join on Windows uses posixpath,2017-05-16T00:00:08Z,2017-05-16T00:11:35Z,bug,,,"Python on Windows supports mixed `/` and `\` separators, so this doesn't break anything. `/` is already assumed to be the safe separator anyway.

fixes #2033, closes #2059"
2283,Flask development server segmentation fault on Alpine Linux,2017-05-15T10:30:15Z,2017-05-17T13:55:53Z,,,,"Hi,

I am getting a segmentation fault when running the flask development server on Alpine Linux. Oddly, this issue only appears to occur when I install a recent version of the `requests` library (>= v2.13.0). In addition, this issue occurs even if my application is not using or importing the `requests` lib.

**Environment:**
- `python:3.6-alpine` Docker image
- Python 3.6.1
- Flask 0.12
- Werkzeug 0.12.1

**Commands ran:**

```
/app # flask run
 * Serving Flask app ""service""
 * Forcing debug mode on
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 960-427-520


/app # pip install requests==2.12.5
...
Successfully installed requests-2.12.5
/app # flask run
 * Serving Flask app ""service""
 * Forcing debug mode on
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 960-427-520


/app # pip install requests==2.13.0
...
Successfully installed requests-2.13.0
/app # flask run
 * Serving Flask app ""service""
 * Forcing debug mode on
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
Segmentation fault
/app #  * Debugger is active!
 * Debugger PIN: 960-427-520
```

Thanks in advance"
2282,Refactor session cookie domain,2017-05-14T05:00:23Z,2017-05-14T05:13:54Z,session,,,"* Show a warning when the domain is dropped because the domain does not contain a `.`, for example for `localhost`.
* Show a warning when the domain is an IP address.
* Allow IP addresses in Chrome by not prepending `.`.
* Cache result of `SERVER_NAME` detection in `SESSION_COOKIE_DOMAIN` so it won't run every request (at least within a given process).

Continues #2105."
2281,Document how to set env vars for PowerShell,2017-05-12T14:14:26Z,2017-05-24T00:21:45Z,"docs, good first issue",,,"PowerShell's syntax is different than CMD's.

    $env:FLASK_APP = ""hello.py""
    $env:FLASK_DEBUG = ""1""
    flask run"
2280,Cannot add headers to static files,2017-05-12T12:56:11Z,2017-05-12T13:28:12Z,,,,"Hi,

It seems that it is not possible to add HTTP headers to static files. Using this [link](http://stackoverflow.com/questions/30717152/python-flask-how-to-set-response-header-for-all-responses) as reference, it was only able to modify headers for routes (not static files). 
"
2279,Clean up deferred callback doc,2017-05-12T05:50:22Z,2017-05-12T05:50:29Z,docs,,,"Remove doc about writing `after_this_request`, following up on #1965."
2278,Rewrite installation docs,2017-05-11T21:35:36Z,2017-05-11T21:37:32Z,docs,,,
2277,Improve quickstart's Routing section,2017-05-11T05:55:30Z,2017-05-12T05:32:01Z,,,,"Hi, I'm a tech writer and I edited a portion of the quickstart as a homework assignment. Maybe you'll find some of these edits useful. I'm happy to adjust/correct my changes.

Changes:

- Edited the entire section for clarity and concision. I rewrote sentences to make them shorter and easier to understand.
- Added a code sample to show the path converter type
- Removed the HTTP method overview. Although it was well written, the overview wasn't necessary in the quickstart. Readers can easily find an overview elsewhere."
2276,Removed unused import,2017-05-09T16:37:24Z,2017-05-09T17:19:52Z,,,,
2275,Fix import order to accommodate pocoo style,2017-05-09T08:31:21Z,2017-05-09T12:12:24Z,,,,Fix some import order 
2274,server has 127 CLOSE_WAIT ,2017-05-08T20:36:36Z,2017-05-08T21:02:17Z,,,,"```python
import re

import json
import time
import mapi
import sys
from flask import Flask, request, abort, render_template

app = Flask(__name__)

@app.route('/cityinfo', methods=['GET'])
def cityinfo():
    if request.method == 'GET':
        echo_str = request.args.get('echostr', '')
        try:
            key = request.headers.get('location')
        except:
            return ''
        return mapi.getcity(key) #about use 10~59ms


@app.route('/alive', methods=['GET'])
def alive():
    return 'ok'
if __name__ == '__main__':
    crt = 'key/Nginx/1_bg.xxxx.club_bundle.crt'
    key = 'key/Nginx/2_bg.xxxx.club.key'
    try:
        app.run('0.0.0.0',port=443,threaded=True,ssl_context=(crt,key))
    except:
        print 'error'`
```

    nohup sudo python as.py >1.log 2>&1 &


about run in 1000+/day for wechatapp ,then it down by CLOSE_WAIT"
2273,request.input_stream inconsistency btw debug and normal mode,2017-05-08T08:13:43Z,2017-05-08T13:14:38Z,,,,"When `app.config['DEBUG] = True`, `request.input_stream` object has `__enter__` and `__exit__` methods which is cool because we can use it with `with` clause.

When not in debug mode though, using `input_stream` object with `with` clause causes an `AttributeError: __exit__` to be thrown.

I am using `request.input_stream` object in a flask-restplus end-point to retrieve a file whose size is larger than RAM. I also realized that this stream object will not be there if the file size is small.

python version = 2.7.12"
2272,[Future] Option to get decoded urls in log,2017-05-05T16:48:25Z,2017-05-05T16:55:25Z,,,,"Hello! Flask logs urls as encoded strings. For example if I have route with cyrillic characters: @app.route('/привет') (https://gist.github.com/dima74/5e025da90ee90a78b65bc3e3c69623ea), than flask will log ""GET /%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82 HTTP/1.1"". It would be very nice if there is option to get that Flask logs urls decoded. (Thanks for Flask!)"
2271,Collapse old changelog directives,2017-05-05T01:30:53Z,2017-05-05T01:42:34Z,docs,,,"I created a Sphinx extension, [sphinxcontrib-log-cabinet](https://github.com/davidism/sphinxcontrib-log-cabinet), to handle #1704. It collects each group of changelog directives, sorts them newest to oldest, then collapses all logs older than the current version. Deprecations are never collapsed.

The extension is optional, a warning is printed if it's not installed but the build continues. The flask-docs build script needs to be updated to install this if we want it to actually take effect.

The collapse doesn't work on IE because they don't support `<details>`. A later version can add a polyfill for it, but I'm not too concerned."
2270,after_request func called too early for streaming responses,2017-05-04T10:04:29Z,2017-05-04T11:54:17Z,,,,"`process_response()` calls the `after_request` handlers as soon as a response object is returned.

In the case of streaming responses, it would be more desirable to call after_request handlers at the same time as response.close() is called."
2269,Flaskr application problem,2017-05-03T03:03:24Z,2017-05-03T17:26:21Z,,,,"The issue tracker is a tool to address bugs.
Please use the #pocoo IRC channel on freenode or Stack Overflow for questions.
"
2268,Catch-all errorhandler does not catch BadRequestKeyError,2017-05-02T11:52:39Z,2017-05-30T16:57:37Z,,,,"## Versions

Python 3.6.1
Flask 0.12.1
Werkzeug 0.12.1

## Issue

A catch-all error handler (one that catches`Exception`), does not catch `werkzeug.exceptions.BadRequestKeyError`. Here's a very quick illustration of the issue:

https://github.com/sampeka/flask-issue

Steps to repoduce:
1. Clone the repo above, install requirements etc
2. Run `python ./example.py`
3. Navigate to `/good`, see that the error handler is correctly called 
4. Navigate to `/bad`, see that the error handler is not called 

If I define an error handler specifically for `BadRequestKeyError` it will be called, as expected.

Edit: If you downgrade to `Flask==0.10.1`, this example will work."
2267,Flask error handler caching leads to inconsistent behavior,2017-05-02T01:20:27Z,2017-06-05T13:34:49Z,bug,,,"When Flask finds an error handler for a given exception, it caches it in the handler map.  This can lead to incorrect behavior for subclasses of the exception.

Here is some code demonstrating the problem:
```
from flask import Flask
from werkzeug.exceptions import InternalServerError


class E1(Exception):
    pass


class E2(Exception):
    pass


class E(E1, E2):
    pass


app = Flask(__name__)


@app.errorhandler(E2)
def handle_e2(e):
    return ""E2"", 500


@app.errorhandler(Exception)
def handle_exception(e):
    return ""Exception"", 500


@app.route(""/<exception>"", methods=['POST'])
def raise_exception(exception):
    exc = globals()[exception]
    raise exc


def test_errorhandler_precedence():
    client = app.test_client()

    response1 = client.post('/E1')
    assert response1.data == ""Exception""

    response2 = client.post('/E')
    assert response2.data == ""E2""
```

In this example, we have two exception classes, `E1` and `E2`, and a third exception `E` that inherits from both.  We register error handlers for `E2` and `Exception`.  When `E` is raised, Flask should invoke the `E2` error handler as `E2` comes before `Exception` in the MRO of `E`.  But if `E1` has been raised in the past, then the `Exception` error handler will be ""cached"" as the handler for `E1`, so that handler will be invoked instead."
2266,Support create_app that doesn't take ScriptInfo as first argument,2017-05-01T14:20:57Z,2017-05-24T00:22:04Z,cli,,,"Use `inspect` to check if the factory takes an argument before passing the script info instance to it.

Preferably pass the info as a keyword instead of positional argument, so that the developer could do something like `def create_app(config=None, script_info=None)`. Still check if the function takes a `script_info` argument before passing it.

Alternatively (or additionally), show how to pass arguments to the factory through the info. I *think* this can be done by overriding `run`, adding an option like `--config`, and setting `info.data['config']` before invoking the built-in run command."
2265,Detect `create_app` when FLASK_APP doesn't specify app object,2017-05-01T14:09:54Z,2017-05-22T23:16:28Z,"cli, good first issue",,,"`find_best_app` only looks for `app` and `application`. If it can't find those but finds the name `create_app`, it should try to call that with no arguments to get the Flask app.

If we modify `ScriptInfo.load_app` to pass itself to `locate_app` and `find_best_app`, we can make this consistent with #2266."
2264,Handle app factory in FLASK_APP,2017-05-01T14:07:50Z,2017-05-28T01:14:50Z,cli,,,"`FLASK_APP=myproject.app:create_app('dev')`
[
Gunicorn does this with `eval`](https://github.com/benoitc/gunicorn/blob/fbd151e9841e2c87a18512d71475bcff863a5171/gunicorn/util.py#L364), which I'm not super happy with. Instead, we could use `literal_eval` to allow a simple list of arguments. The line should never be so complicated that `eval` would be necessary anyway.

~~~python
# might need to fix this regex
m = re.search(r'(\w+)(\(.*\))', app_obj)

if m:
    app = getattr(mod, m.group(1))(*literal_eval(m.group(2)))
~~~"
2263,"""Cookie header"" munge bad and good cookies together",2017-04-30T18:03:14Z,2017-05-01T14:57:40Z,,,,"As I am trying to understand how different apps servers and libraries deal with invalid Cookie inside the ""Cookie header"" (see https://github.com/dorfsmay/Invalid_cookies_in_Cookie_header ), I realised that Flask is munging the invalid cookie with the next one, together:

`curl -b 'SID=31d4d96e407aad42; muffin ; lang=en-US;' localhost:8080` 

==> `{'SID': '31d4d96e407aad42', 'muffin ; lang': 'en-US'}`

I'm sure this was not the desired behaviour, wouldn't it better to just ignore any string between semi-colons that cannot be translated into a valid cookie (so any string without an equal sign)?"
2262,Py36 json support added,2017-04-28T23:35:00Z,2017-04-29T18:09:20Z,,,,"Resolves #2243 

1. Added variable in _config.py to check if system is 3.6+
2. Added logic in json.py to check if system is 3.6+ to simply decode json 

EDIT : 3.6 to 3.6+"
2261,"Documentation: Term ""development mode"" is unclear",2017-04-27T19:47:20Z,2017-05-22T18:49:13Z,"docs, good first issue",,,"I'm doing some work which requires defining some context hooks for our flask app. When reading the documentation for [request contexts*](http://flask.pocoo.org/docs/dev/reqcontext/#callbacks-and-errors) I came across the passage:

>>> In production mode if an exception is not caught, the 500 internal server handler is called. In development mode however...

As a user, I want to know: What is 'development mode?' I _think_ it's debug mode (e.g. `app.run(debug=True)`). I've seen several people use the terms interchangeably when searching for help, but not either the flask developers or the official documentation. The flask docs don't appear to have an index (is it hidden somewhere?), and quick search does not appear to work. Google site search of the dev docs does not immediately turn up an obvious answer.

IMO, this is a bug in the documentation. Assuming for the sake of argument I'm right about dev=debug, that passage should be either:

0. ""In development mode (i.e. with `debug=True`) however..."" or
1. The text 'development mode' is a link to a list of terms & their definitions
2. Something along those lines.

Maybe if I had carefully read all of the docs from beginning to end, or at least carefully read the tutorial twice, I might not be confused about this. But lots of your users won't do that. That's why I call it a bug (it's sorta like failing to validate input).

*I was in fact reading the docs for the version of flask I'm using, but pointing to dev-version docs b/c I presume they represent the current state of the documentation"
2260,Flask does not detect route collisions between blueprints and app,2017-04-27T04:29:30Z,2017-04-27T11:42:24Z,,,,"The following program demonstrates the effect of defining the same route across blueprints and the app - fetch http://localhost:5678/hello for each run:
```
$ python server.py app app
$ python server.py bp
$ python server.py app
$ python server.py app bp
$ python server.py bp app
$ python server.py bp app bp
```

It surprised me that Flask does not report route collisions.
```
import sys
from flask import Flask, Blueprint


def main():
    bp_num = 1
    app = Flask(__name__)
    for arg in sys.argv:
        if arg == 'bp':
            bp_name = 'bp%d' % bp_num
            bp_num += 1
            bp = Blueprint(bp_name, __name__)

            @bp.route('/hello')
            def hello_bp():
                return 'Hello ' + bp_name
            app.register_blueprint(bp)

        if arg == 'app':
            @app.route('/hello')
            def hello():
                return 'Hello'

    app.run(host='0.0.0.0', port=5678)


if __name__ == '__main__':
    main()
```"
2259,Add routes command,2017-04-26T17:30:22Z,2017-04-26T17:43:18Z,cli,,,"Based on #1446, with some ideas from #2092. The whole command is basically reworked, but the most important change is that there is a `match` sort order to show the order Flask will dispatch in (which is really just not sorting)."
2258,Clean up preprocess_request docs,2017-04-25T19:05:01Z,2017-04-25T19:06:40Z,docs,,,Continues #1684. Reduce verbosity of previous PR. Move examples and description of functions out of registry docs to decorator docs.
2257,QueueHandler logging does not work behind uwsgi,2017-04-25T16:54:56Z,2017-04-25T18:01:59Z,,,,"(I'm not sure if I should open this here or at uwsgi, feel free to close if this is not appropriate).

Using a QueueHandler with flask works fine when using the built in flask server, but it fails to log to any of the handlers specified in the QueueHandler when run behind uwsgi (Flask==0.12.1, uWSGI==2.0.15, python==3.5.2). 

Here is an example app to demonstrate this:

```python
import logging
from logging.handlers import SMTPHandler, QueueHandler, QueueListener
from queue import Queue
from flask import jsonify, Flask

app = Flask(__name__)
app.debug = False
app.logger.setLevel(logging.INFO)

# Setup logging formatting
log_fmt = logging.Formatter(
    fmt='%(levelname)s: %(asctime)s - %(name)s - %(message)s',
    datefmt='%m/%d/%Y %H:%M:%S'
)

# Setup file log handler
file_handler = logging.FileHandler('/tmp/test_logger.log')
file_handler.setLevel(logging.INFO)
file_handler.setFormatter(log_fmt)

# Setup email log handler
mail_handler = SMTPHandler(
    'localhost',
    'flask_app_error@domain.tld',
    ['email@domain.tld'],
    'Error in flask app'
)
mail_handler.setLevel(logging.ERROR)
mail_handler.setFormatter(log_fmt)

# Setup a queue handler which will handle logs on a separate thread
log_queue = Queue(-1)
queue_handler = QueueHandler(log_queue)
queue_listener = QueueListener(log_queue, mail_handler, file_handler,
                               respect_handler_level=True)
app.logger.addHandler(queue_handler)
queue_listener.start()

log = logging.getLogger(__name__)

@app.route('/error')
def error_test():
    log.error(""Test logging"")
    return jsonify({'foo': 'bar})

if __name__ == '__main__':
    app.run()
```

And I run it with:
```bash
uwsgi --http :5000 --mount /=test_logger:app --manage-script-name
```

If instead of using a QueueHandler/QueueListener, I pass the log handlers to the app.logger directly, things work as expected.
```python
app.logger.addHandler(file_handler)
app.logger.addHandler(mail_handler)
```
 However, I would like to be able to utilize QueueHandler and QueueListener to do logging on a separate thread if possible."
2256,refactor make_response to be easier to follow,2017-04-25T15:23:42Z,2017-04-25T15:46:23Z,,,,"* be explicit about how tuples are unpacked
* allow `bytes` for status value
* allow `Headers` for headers value
* use `TypeError` instead of `ValueError`
* errors are more descriptive
* document that view must not return `None`
* update documentation about return values
* test more response types
* test error messages

closes #1676

`TypeError` is more correct by definition (wrong type to function), and I don't think anyone should be catching that error anyway (what would it mean to do that?), so I'm ok if this somehow breaks some code. This is also consistent with what `force_type` returns for bad input.

I had to get a bit creative with displaying the error from `force_type` while injecting a new descriptive message. It would be nice if we could just use `raise new_error from original_error`, but that's Python 3 only.

These error messages will hopefully help avoid a class of questions that are frequently asked on Stack Overflow. In particular, there was no error about incorrect types that made it to `force_type`, so users trying to return JSON with something like `return True` would get a mysterious ""bool object is not callable"" error."
2255,Generating relative url with app context should not require SERVER_NAME,2017-04-23T16:26:40Z,2017-04-23T20:44:11Z,good first issue,,,"This is a pattern to generate the url to pass to the test client during testing, instead of writing out the url manually.

~~~python
with app.app_context():
    url = url_for('foo', _external=False)
~~~

This currently fails if no `SERVER_NAME` is set, even though it's not needed for relative urls. `url_for` could be modified to support the case where there's only an app context and `_external=False` was passed. Instead of raising an error, create an adapter with a dummy server name, like `localhost`.

Documenting the pattern in the testing docs might be useful too.

Continued from #801."
2254,Ensure error while opening session pops context,2017-04-22T21:00:49Z,2017-04-22T21:43:22Z,"bug, session",,,"Reported in #1528. #1538 provided a solution, but can be simplified by only moving `ctx.push()` into the `try` block. Errors raised by `SessionInterface.open_session` and `.make_null_session` will be handled by the normal app error handling mechanism, and the context will be popped at the end of the request."
2253,Flask installation issue,2017-04-22T06:25:16Z,2017-04-22T06:25:20Z,,,,"No distribution found 
"
2252,Continue #1936: Add the ability to combine MethodViews,2017-04-21T17:45:51Z,2017-04-21T18:16:19Z,,,,"Merge master into #1936. The collection logic is changed to collect all inherited methods, not just ones specified by base class `methods` attrs."
2251,Class-based View should set provide_automatic_options attr in as_view,2017-04-21T15:33:37Z,2017-05-23T19:46:44Z,good first issue,,,"~Deprecate in favor of #2249, #1489, #1488, which adds the arg to `add_url_rule`. We couldn't figure out if there was a reason for doing it with an attribute originally.~"
2250,circular import error with flask cli is misleading,2017-04-21T15:03:59Z,2017-04-24T16:11:59Z,,">NoAppException, >ImportError",">NoAppException: The file/path provided (run) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py, >ImportError: cannot import name XXXX","I got a circular import error in my flask app, 
and i launch it using flask run.

it seems to launch but when i go the endpoint with my browser, 
i got a pretty misleading error message : 

>NoAppException: The file/path provided (run) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py

but when i run it using the run.py file i got:
>ImportError: cannot import name XXXX

it can be great to have a better exception when there is an import error

"
2249,Continue #1489: Add kwarg to disable auto OPTIONS on add_url_rule ,2017-04-21T14:18:59Z,2017-04-21T15:31:12Z,,,,Merge master into #1489 and do some cleanup.
2248,Fixes typo in app.py,2017-04-19T05:06:46Z,2017-04-19T05:46:33Z,,,,
2247,0.12 maintenance,2017-04-17T08:58:42Z,2017-04-17T11:39:21Z,,,,
2246,CLI silences ImportError,2017-04-16T18:51:32Z,2017-04-16T18:56:47Z,,"ImportError, Error","ImportError: cannot import name abord, Error: The file/path provided (flaskr) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH","Environment (CentOS 7 Vagrant in Virtualbox on Windows 10):
```
[vagrant@localhost flaskr]$ cat /etc/redhat-release
CentOS Linux release 7.3.1611 (Core)
[vagrant@localhost flaskr]$ python --version
Python 2.7.5
[vagrant@localhost flaskr]$ pip freeze | grep -i flask
Flask==0.12
flaskr==0.0.0
```

I was following the flask tutorial and could not get `initdb` to show up.  Upon randomly trying the flaskr.py script I received the following:

```
[vagrant@localhost flaskr]$ python flaskr/flaskr.py
Traceback (most recent call last):
  File ""flaskr/flaskr.py"", line 3, in <module>
    from flask import Flask, request, session, g, redirect, url_for, abord, \
ImportError: cannot import name abord
```

When `flask` is run with the proper export statements here is the output:

```
[vagrant@localhost flaskr]$ flask
Usage: flask [OPTIONS] COMMAND [ARGS]...

  This shell command acts as general utility script for Flask applications.

  It loads the application configured (through the FLASK_APP environment
  variable) and then provides commands either provided by the application or
  Flask itself.

  The most useful commands are the ""run"" and ""shell"" command.

  Example usage:

    $ export FLASK_APP=hello.py
    $ export FLASK_DEBUG=1
    $ flask run

Options:
  --version  Show the flask version
  --help     Show this message and exit.

Commands:
  run    Runs a development server.
  shell  Runs a shell in the app context.
```

I found this out by trying to get the shell to run to see if I could just find the init_db() function through the flask shell.

```
[vagrant@localhost flaskr]$ flask shell
Usage: flask shell [OPTIONS]

Error: The file/path provided (flaskr) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH
, ensure the extension is .py
```

Immediately upon fixing the spelling error, I was able to access `flask initdb`.

I searched through the open and closed errors and could not find this exact thing.  It simply seems unclear, and might be nice to bubble up errors to the flask CLI like the above."
2245,file input request filepath.,2017-04-15T02:36:28Z,2017-04-15T03:10:38Z,,,,"hello flask,

I just need help regarding request.files['spam'].
why request.files not have filepath attribute?

here my stackflow issue http://stackoverflow.com/questions/41882959/get-path-of-file-uploaded-to-flask
that needed a fullpath attribute.

please kindly support it."
2244,Remove empty XML tag.,2017-04-14T20:39:05Z,2017-04-14T20:45:54Z,,,,
2243,Take advantage of Py3.6 json support for bytes,2017-04-14T20:30:45Z,2017-05-12T14:26:01Z,"good first issue, json",,,"[Python 3.6 added support for loading json from str or bytes.](https://docs.python.org/3.6/library/json.html#json.loads) It handles detection of the three encodings supported by JSON. Would be nice to take advantage of this if the user is using 3.6+ instead of our basic ""assume it's UTF-8"" approach.

Would have to make sure simplejson also allows this (I think it does).

Then again, I'm not sure there have been any reports of Flask decoding JSON incorrectly. Maybe no real clients are encoding with anything besides UTF-8?"
2242,get mtime in utc,2017-04-13T21:58:27Z,2017-04-13T22:14:26Z,"bug, testing",,,"Test `test_helpers.TestSendfile.test_send_file_range_request` was failing on my machine but not on Travis. Turned out it was sending the mtime of the file as local time, but comparing to a UTC time. Local time on Travis was UTC, so it didn't get caught there. Use `utcfromtimestamp` instead of `fromtimestamp`."
2241,Documentation on Larger Applications could reference Blueprints (0.12.1),2017-04-13T17:10:35Z,2017-04-13T18:14:24Z,,,,"From line https://github.com/pallets/flask/blame/master/docs/patterns/packages.rst#L123 to https://github.com/pallets/flask/blame/master/docs/patterns/packages.rst#L133 circular imports are discussed, correctly pointing out that in the example, one has been introduced. However, surely that *could* be avoided if instead the views file ised a `Blueprint`, removing the dependency on the `Flask` object `app` 

(For reference here is the same page: http://flask.pocoo.org/docs/0.21/patterns/packages/)"
2240,update send_file cache control timeout=-1 no-cache,2017-04-13T02:02:46Z,2017-05-29T18:35:05Z,,,,"update send_file cache control
set timeout <= 0 will no-cache no-store"
2239,Bind to IPv6 and IPv4 simultanously (Dual Stack operation),2017-04-12T18:51:49Z,2017-04-12T19:26:38Z,,,,"At this time, `Flask.run()` accepts only a `host=` parameter containing a single address. While `::` for the Linux kernel also accepts IPv4-mapped IPv6 addresses from the `::ffff:0.0.0.0/96` range, other dual stack implementations, such as Windows (and OpenBSD I think) do not map IPv4 addresses into the IPv6 address space for (IMHO sound) security rationales.

Please support binding to multiple addresses, thus supporting dual stack deployment, such as `host=('0.0.0.0', '::')`."
2238,"filename can be latin-1, not just ascii",2017-04-12T16:22:22Z,2017-04-12T17:12:30Z,,,,"* The filename header, being a header, can include Latin-1 characters, not just ASCII.
* Don't normalize the unicode name until we know the UTF-8 version needs to be sent. Otherwise you create situations where the name *could* be sent as just the single field, but the normalized form doesn't encode to Latin-1.

ref #2223"
2237,spelling fix,2017-04-11T19:43:34Z,2017-04-11T19:44:33Z,,,,"patch contains some spelling fixes ( just in comments ) as found by a bot ( http://www.misfix.org, https://github.com/ka7/misspell_fixer ). Any upcoming License changes (e.g. GPL2 to GPL3+) are hereby granted."
2236,Bug in url_for() function when you run a Flask application through CGI,2017-04-11T17:56:34Z,2017-04-11T18:30:56Z,,*Note,"*Note: I don't observe this bug if I run application on a dedicated server (VDS) with Nginx and uWSGI or Gunicorn, only on an shared hosting (Apache2).*","*Note: I don't observe this bug if I run application on a dedicated server (VDS) with Nginx and uWSGI or Gunicorn, only on an shared hosting (Apache2).*

My application structure:

```bash
└─ site.com
     └── public_html
             ├─ venv             <-- virtualenv dir with Python 3.4.3
             ├─ templates        <-- templates dir with `page.html`
             ├─ .htaccess        <-- HTACCESS file
             ├─ app.cgi          <-- CGI script
             └─ app.py           <-- Very basic Flask application
```

Files ```.htaccess``` and ```app.cgi``` I take from [official docs](http://flask.pocoo.org/docs/0.12/deploying/cgi/), but duplicate for comfort.

And this is **.htaccess** file:

```bash
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^(.*)$ /home/XXXX/site.com/public_html/app.cgi/$1 [L]
```

Yep, it's **app.cgi**:

```cgi
#!/home/XXXX/site.com/public_html/venv/bin/python3.4
# -*- coding: utf-8 -*-

from wsgiref.handlers import CGIHandler
from app import app

CGIHandler().run(app)
```

This is my **app.py** file:

```python
# -*- coding: utf-8 -*-

from flask import Flask, render_template, url_for

app = Flask(__name__)

@app.route('/<slug>')
def page(slug):
    return render_template('page.html', slug=slug)

if __name__ == '__main__':
    app.run(host='0.0.0.0')
```

Template is:

```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""utf-8""/>
    <title>{{ slug }}</title>
</head>
<body>
    <a href=""{{ url_for('page', slug='about') }}"">About page</a>
    <a href=""{{ url_for('page', slug='contacts') }}"">Contacts page</a>
</body>
</html>
```

All working fine, but if I go to ```http://site.com/about``` and click to ```Contacts page``` link — URL on browser adress is ```http://site.com/app.cgi/contacts``` instead ```http://site.com/contacts``` O_o I delete ```/app.cgi/``` from adress stroke and get the same page!

What is this? Bug in ```url_for()``` functon? Fix it please."
2235,Import error while config the app,2017-04-09T12:30:50Z,2017-04-09T12:36:26Z,,,,"I try this to config my flask application, It returns the import error 

`app.config.from_object('config')`

I try `app.config.from_object('app.config')`
then it works"
2234,Add example for virtualenv integration in cli docs,2017-04-07T12:57:57Z,2017-04-07T14:10:44Z,,,,
2233,Does Flask support regular expressions in its subdomain,2017-04-07T10:07:01Z,2017-04-07T10:23:04Z,,,,"The issue tracker is a tool to address bugs.
Please use the #pocoo IRC channel on freenode or Stack Overflow for questions.
"
2232,FLASK_DEBUG=1 causes ModuleNotFoundError: No module named 'flask' ,2017-04-06T20:05:35Z,2017-04-06T21:43:24Z,,,,"A similar phenomenon has been described on Win10, however this occurs on a Mac (10.12.5 Beta) after upgrading to Python Version 3.6.1. The Flask application runs fine without DEBUG enabled. 
Before filing this as a dupe please consider that I am using Werkzeug (0.12.1) already.

pip3 list:
appdirs (1.4.0)
argh (0.26.2)
click (6.7)
dominate (2.3.1)
Flask (0.12.1)
Flask-Bootstrap (3.3.7.1)
Flask-Bower (1.2.1)
Flask-WTF (0.14.2)
itsdangerous (0.24)
Jinja2 (2.9.6)
MarkupSafe (1.0)
packaging (16.8)
pathtools (0.1.2)
pbr (1.10.0)
pip (9.0.1)
pyparsing (2.1.10)
PyYAML (3.12)
requests (2.13.0)
setuptools (28.8.0)
six (1.10.0)
stevedore (1.20.0)
virtualenv (15.1.0)
virtualenv-clone (0.2.6)
virtualenvwrapper (4.7.2)
visitor (0.1.3)
Werkzeug (0.12.1)
wheel (0.29.0)
WTForms (2.1)
"
2231,Update out of date jsonify documentation,2017-04-06T15:26:11Z,2017-04-06T15:31:26Z,,,,"https://github.com/pallets/flask/pull/2193 changed the conditions for when jsonify pretty prints, but this comment wasn't updated."
2230,Correct imports in file upload example,2017-04-04T20:25:49Z,2017-04-04T20:26:40Z,,,,"The example code uses `flash` but doesn't import it. So the code as written doesn't work.

This simply adds `flash` to the list of imports in the sample code."
2229,Chunked uploads missing body data.,2017-04-04T11:29:37Z,2017-05-28T03:41:29Z,,,,"## Summary

In basic Flask applications, the body data of chunked uploads appears to go missing: that is, they do not appear in `request.data`. I have reproduced this with two different WSGI servers (gunicorn and twisted), both of which handle chunked data appropriately. Non-chunked data does not suffer this problem. I've reproduced this problem on both Python 2.7 and Python 3.6.

## Reproduction

The following Flask application demonstrates the problem:

```python
from flask import Flask, request
app = Flask(__name__)

@app.route('/', methods=['GET', 'POST'])
def hello_world():
    return request.data
```

when run like this: `gunicorn -w 4 example:app`.

The following test script can be run:

```python
import requests

def gen():
    yield b""hello""
    yield b""world""

print(""Making first request"")
r = requests.post('http://localhost:8000/', data=b'helloworld')
print(""Got: %s"" % r.content.decode('utf-8'))
print(""Making second request"")
r = requests.post('http://localhost:8000/', data=gen())
print(""Got: %s"" % r.content.decode('utf-8'))
```

### Expected Output

```
Making first request
Got: helloworld
Making second request
Got: helloworld
```

### Actual Output

```
Making first request
Got: helloworld
Making second request
Got: 
```

## Environment

```
% python -VV                                      
Python 3.6.0 (default, Jan 18 2017, 18:08:34) 
[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)]
```

```
% pip freeze                                      
appdirs==1.4.3
click==6.7
Flask==0.12.1
gunicorn==19.7.1
itsdangerous==0.24
Jinja2==2.9.6
MarkupSafe==1.0
packaging==16.8
pyparsing==2.2.0
six==1.10.0
Werkzeug==0.12.1
```

## References

This was spotted at httpbin. See kennethreitz/httpbin#340 for more."
2228,Add blueprint and the app factory pattern into the flaskr example,2017-04-02T16:34:07Z,2017-05-25T22:00:03Z,,,,
2227,flask.pocoo.org not updated with latest release (0.12.1),2017-04-01T14:45:36Z,2017-06-13T17:23:04Z,,,,I was trying to find out what changed from 0.12 to 0.12.1 and had to come here. Please update the changelog on the website.
2226,Enable TRAP_BAD_REQUEST_ERRORS when in debug mode,2017-03-31T18:22:13Z,2017-04-20T04:46:56Z,docs,,,"Stack Overflow gets a *constant* stream of questions about 400 errors that are caused by missing keys. The fact that accessing `args`, `form`, `files`, `values`, `session`, and `headers` returns an HTTP error instead of a traceback is confusing to a lot of users; they get no feedback about what went wrong and it's easy to miss typos or a missing name attribute. This config should default to the value of `DEBUG` and the behavior should be much more clearly documented."
2225,Debugging during bootstrapping,2017-03-27T21:50:01Z,2017-03-27T22:54:59Z,,,,"Hi,

when I start my `Flask` app via `python3 -m flask run` and there is an error in my code, `Flask` only returns with the following message:

    Usage: python -m flask run [OPTIONS]
    
    Error: The file/path provided (server2.run) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py

Is there a way to get proper error stack messages or am I not seeing the obvious.. :thinking: 

~ For Frodo"
2224,Per blueprint errorhandlers.,2017-03-24T16:29:18Z,2017-03-24T16:41:58Z,,,,"It would be nice having error handlers by blueprint, is this achievable ?
"
2223,Fix send_file's attachment_filename to work with non-ascii filenames,2017-03-23T16:40:06Z,2017-04-08T17:54:21Z,,UnicodeEncodeError,"UnicodeEncodeError: 'latin-1' codec can't encode character '\uff0f' in position 58: ordinal not in range(256)","This commit implements https://tools.ietf.org/html/rfc2231#section-4 in
order to support sending unicode characters. Tested on both Firefox and
Chromium under Linux.

~~This adds unidecode as a dependency, which might be relaxed by using
.encode('latin-1', 'ignore') but wouldn't be as useful.~~ This pull request no longer adds any new dependency.

Also, added a test for the correct headers to be added.

Previously, using a filename parameter to send_file with unicode characters, it
failed with the next error since HTTP headers don't allow non latin-1 characters.
Error on request:
Traceback (most recent call last):
  File ""/usr/lib/python3.6/site-packages/werkzeug/serving.py"", line 193, in run_wsgi
    execute(self.server.app)
  File ""/usr/lib/python3.6/site-packages/werkzeug/serving.py"", line 186, in execute
    write(b'')
  File ""/usr/lib/python3.6/site-packages/werkzeug/serving.py"", line 152, in write
    self.send_header(key, value)
  File ""/usr/lib64/python3.6/http/server.py"", line 509, in send_header
    (""%s: %s\r\n"" % (keyword, value)).encode('latin-1', 'strict'))
UnicodeEncodeError: 'latin-1' codec can't encode character '\uff0f' in position 58: ordinal not in range(256)

Fixes #1286"
2222,Handle BaseExceptions,2017-03-23T14:47:35Z,2017-03-31T16:07:43Z,,,,This ensures that `auto_pop` is called with a non-`None` value in the case of a BaseException being thrown.
2221,Flask treats SystemExit and other BaseExceptions as indicating success,2017-03-23T14:01:44Z,2017-05-30T16:52:38Z,,,,"See here:
https://github.com/pallets/flask/blob/master/flask/app.py#L1991

When combined with a database layer, this completely breaks transaction guarantees, as the request context ""pop"" handler will see no error and assume the transaction was successful, resulting in it being committed while in an inconsistent state."
2220,"app.run(port='5000', debug=True) error",2017-03-23T10:46:42Z,2017-03-27T21:36:34Z,,TypeError,"TypeError: an integer is required (got type str)```","Inappropriate  behaviour in app.run function with debug set to True and False

```app.run(port='5000', debug=False)``` runs perfectly 

however when debug=True

```app.run(port='5000', debug=True)``` it throws error 
```python3 hello_world.py 
Traceback (most recent call last):
  File ""hello_world.py"", line 13, in <module>
    app.run(port='5000', debug=True)
  File ""/usr/lib64/python3.5/site-packages/flask/app.py"", line 841, in run
    run_simple(host, port, self, **options)
  File ""/usr/lib/python3.5/site-packages/werkzeug/serving.py"", line 717, in run_simple
    s.bind((hostname, port))
TypeError: an integer is required (got type str)```

"
2219,Spruce-up the README to a Markdown version with logo,2017-03-23T01:18:45Z,2017-03-23T01:23:57Z,,,,
2218,Werkzeug 0.12.0 changed how abort works,2017-03-22T04:07:37Z,2017-03-23T13:21:13Z,,,,"
[This line in flask.\_\_init\_\_.py](https://github.com/pallets/flask/blob/master/flask/__init__.py#L17) breaks everything now that `werkzeug==0.12.0` was released.

`werkzeug.exceptions.abort` is now a function, so `abort.mapping` throws an error.

[This line in setup.py](https://github.com/pallets/flask/blob/master/setup.py#L74) definitely needs to be updated - preferably with a frozen Werkzeug version so this doesn't happen again."
2217,shorten output when ImportError due to app bug.,2017-03-21T19:23:08Z,2017-03-24T15:59:01Z,cli,"ImportError, Error","ImportError: No module named whatisthisidonteven, Error: There was an error trying to import the app (error):","Improves output for #2214 

Before:
```
C:\dev\tmp>py -2 -m flask run
Traceback (most recent call last):
  File ""C:\Python27\lib\runpy.py"", line 174, in _run_module_as_main
    ""__main__"", fname, loader, pkg_name)
  File ""C:\Python27\lib\runpy.py"", line 72, in _run_code
    exec code in run_globals
  File ""c:\dev\sourcetree\flask\flask\__main__.py"", line 15, in <module>
    main(as_module=True)
  File ""c:\dev\sourcetree\flask\flask\cli.py"", line 523, in main
    cli.main(args=args, prog_name=name)
  File ""c:\dev\sourcetree\flask\flask\cli.py"", line 383, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""C:\Python27\lib\site-packages\click\core.py"", line 697, in main
    rv = self.invoke(ctx)
  File ""C:\Python27\lib\site-packages\click\core.py"", line 1066, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File ""C:\Python27\lib\site-packages\click\core.py"", line 895, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File ""C:\Python27\lib\site-packages\click\core.py"", line 535, in invoke
    return callback(*args, **kwargs)
  File ""C:\Python27\lib\site-packages\click\decorators.py"", line 64, in new_func
    return ctx.invoke(f, obj, *args[1:], **kwargs)
  File ""C:\Python27\lib\site-packages\click\core.py"", line 535, in invoke
    return callback(*args, **kwargs)
  File ""c:\dev\sourcetree\flask\flask\cli.py"", line 433, in run_command
    app = DispatchingApp(info.load_app, use_eager_loading=eager_loading)
  File ""c:\dev\sourcetree\flask\flask\cli.py"", line 153, in __init__
    self._load_unlocked()
  File ""c:\dev\sourcetree\flask\flask\cli.py"", line 177, in _load_unlocked
    self._app = rv = self.loader()
  File ""c:\dev\sourcetree\flask\flask\cli.py"", line 238, in load_app
    rv = locate_app(self.app_import_path)
  File ""c:\dev\sourcetree\flask\flask\cli.py"", line 91, in locate_app
    __import__(module)
  File ""C:\dev\tmp\error.py"", line 1, in <module>
    import whatisthisidonteven
ImportError: No module named whatisthisidonteven
```

After:
```
C:\dev\tmp>py -2 -m flask run
Usage: python -m flask run [OPTIONS]

Error: There was an error trying to import the app (error):
Traceback (most recent call last):
  File ""c:\dev\sourcetree\flask\flask\cli.py"", line 91, in locate_app
    __import__(module)
  File ""C:\dev\tmp\error.py"", line 1, in <module>
    import whatisthisidonteven
ImportError: No module named whatisthisidonteven
```"
2216,EOFError during GET request due to broken session file.,2017-03-20T17:51:43Z,2017-05-24T00:23:06Z,,EOFError,"EOFError: Ran out of input","I get this error in my logs from time to time and the only solution is to restart the server. I have no idea from where it comes but I assume this is a flask internal issue.

```
2017-03-20 18:42:17,346 ERROR    xposed.xposed_main                            Exception on /serverstats [GET]
Traceback (most recent call last):
  File ""/usr/local/lib/python3.4/dist-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python3.4/dist-packages/flask/app.py"", line 1479, in full_dispatch_request
    response = self.process_response(response)
  File ""/usr/local/lib/python3.4/dist-packages/flask/app.py"", line 1693, in process_response
    self.save_session(ctx.session, response)
  File ""/usr/local/lib/python3.4/dist-packages/flask/app.py"", line 837, in save_session
    return self.session_interface.save_session(self, session, response)
  File ""/usr/local/lib/python3.4/dist-packages/flask_session/sessions.py"", line 355, in save_session
    total_seconds(app.permanent_session_lifetime))
  File ""/usr/local/lib/python3.4/dist-packages/werkzeug/contrib/cache.py"", line 762, in set
    self._prune()
  File ""/usr/local/lib/python3.4/dist-packages/werkzeug/contrib/cache.py"", line 715, in _prune
    expires = pickle.load(f)
EOFError: Ran out of input

```"
2215,Support for dict-like arguments in request.args,2017-03-20T14:44:59Z,2017-03-21T12:25:02Z,,,,"Sometimes you need key-value pairs in your query params, and at those times it would be nice to have a built-in support. Here's what I've seen some APIs use, which looks reasonable to me:

    http://example.com/api/search?name=Markus&hobby[football]=1&hobby[basketball]=0

Which would construct `request.args` like so:

    {
        'name': 'Markus',
        'hobby': {
            'football': 1,
            'basketball': 0,
        }
    }"
2214,Flask blames FLASK_APP on all ImportErrors,2017-03-20T14:20:09Z,2017-03-24T16:28:38Z,,Error,"Error: The file/path provided (error) does not appear to exist.","(Observed on Python 2.7; untested on 3.x)

## Steps to reproduce:

```
echo ""import thisisnotarealpackage"" > error_app.py
export FLASK_APP=error_app.py
flask run
```

## Expected result:

* Some indication that `thisisnotarealpackage` is not a real package

## Observed result:

```
Usage: python -m flask run [OPTIONS]

Error: The file/path provided (error) does not appear to exist.
Please verify the path is correct.
If app is not on PYTHONPATH, ensure the extension is .py
```

(Newlines added)

## Why Bother

This has been causing some confusion on my team because `cx_Oracle` can fail to import (from the bowels of SQLAlchemy) if it can't find certain Oracle support files on the host machine."
2213,Issue #2212: documentation: virtualenv and python3,2017-03-19T17:06:20Z,2017-05-09T18:04:23Z,docs,,,"Please note that for clarity, I changed for folder name of the created virtual environment from `venv` to `virtenv`, seeing the relevant python3-command uses the argument `venv`."
2212,Documentation: Installing and virtual environment under python3,2017-03-19T16:09:09Z,2017-05-19T19:52:03Z,docs,,,"For installing Flask under a virtual environment with python3, the procedure is somewhat different that what is proposed in the Documentation, under Installation, virtuallenv. See [Answer by _geckon_ to question _Using Python 3 in virtualenv_
](http://stackoverflow.com/a/30233408/3493586)

This is a minor change, just 
`python3 -m venv /path/to/new/virtual/environment`
instead of 
`virtualenv venv`

I would be willing to contribute with this if assigned the task."
2211,Fix static route when using host_matching = True,2017-03-18T02:29:29Z,2017-03-27T20:01:20Z,,,,"Change `Flask.__init__` to accept a new `static_host` keyword argument,
defaulting to None. <s>Passing this results in url_map.host_matching to be
set to True implicitly. This is because host_matching must be set by the
time the static route is added, or else it won't match.</s> (Edit: see updates below.)

Fixes #1559.
Subsumes #1560."
2210,Clarify APPLICATION_ROOT documentation,2017-03-17T04:43:54Z,2017-05-09T15:47:24Z,docs,,,See #1714.
2209,Print a stacktrace on CLI error (closes #2208),2017-03-16T13:39:55Z,2017-03-16T20:43:01Z,cli,,,I've been bitten by this a few times and I believe silently swallowing errors without any debug output is a bad thing to do. This at least prints the resulting stacktrace.
2208,Do not swallow exceptions if CLI fails to load,2017-03-16T10:56:41Z,2017-03-16T20:43:10Z,,,,"I think the changes introduced in https://github.com/pallets/flask/commit/fa6eded6f572dd4bc23b030f025156cdd1e63305 that swallow ALL exceptions if loading a custom CLI command fails are not good for the general development flow. I often do `flask --help` to see whether my custom command comes up fine and when it doesn't I don't get exceptions and I don't really know what I've done wrong.

I think this `try-except` should be removed. I really think the CLI _should_ fail loudly instead of ignoring errors. Let's discuss this and if you guys agree I'll make a PR."
2207,Edit debug mode attention for new version Werkzeug,2017-03-15T00:29:51Z,2017-04-26T13:35:24Z,docs,,,"Starting from Werkzeug 0.11, the debugger was protected by a PIN."
2206,Missing headers on CSV file,2017-03-14T19:58:05Z,2017-03-14T20:13:59Z,,,,"Example file uploaded to flask:

```
account_id,account_name,style,graphic,color,size,team,player_name,player_num,upc,sku
12,Cleveland,C1394_ToddlerTrueClassicKnit NFL_S401ACY1,C1394_AZC,,OSFA,Arizona Cardinals,,,'12345',1234
12,Cleveland,C1394_ToddlerTrueClassicKnit NFL_S401ACY1,C1394_BBI,,OSFA,Buffalo Bills,,,'6789',5678
12,Cleveland,C1394_ToddlerTrueClassicKnit NFL_S401ACY1,C1394_CBE,,OSFA,Chicago Bears,,,'10111213',91011
```

The FileStorage object from `request.files` has somehow had the CSV header line (line 1) removed.

Using Python 2.7."
2205,Connection reset when posting data,2017-03-14T14:34:36Z,2017-05-23T00:17:42Z,,,,"When posting data with an mimetype unknown to flask unless `request.get_data()` is accessed in whatever way the connection is dropped.

```
@app.route('/abc', methods=['POST'])
def get_history():
    # print request.get_data()  # uncommenting this line fixes the bug
    return 'OK', 200
```

Below is a curl stacktrace:
```
> curl -X POST -d 'a:1' ""http://127.0.0.1:5000/abc""
curl: (56) Recv failure: Connection was reset
```

The most confusing fact is that the flask server reports as if the connection was successful:

`127.0.0.1 - - [14/Mar/2017 20:03:16] ""POST /abc HTTP/1.1"" 200 -`

Flask (0.12) & Python 2.7.12"
2204,Python 3 syntax error in Quickstart docs,2017-03-13T12:56:23Z,2017-03-13T12:58:25Z,,,,"I was going through Quickstart examples and I found syntax error in URL Building section.
Examples uses old Python 2 syntax for printing `url_for` results and crashes if run on Python 3."
2203,[docstring] Documenting host SERVER_NAME config,2017-03-11T17:45:51Z,2017-03-11T17:59:35Z,,,,This PR updates the Sphinx documentation for the `host` param for the `Flask.run` method per the fix provided by https://github.com/pallets/flask/pull/2152. This provides parity with the `port` param.
2202,Fix broken link in the docs ,2017-03-08T19:24:30Z,2017-03-08T19:26:39Z,,,,
2201,docs: Fix typos/grammar,2017-03-06T13:01:25Z,2017-03-06T13:06:00Z,,,,
2200,Can't start in debug mode.,2017-03-06T04:36:35Z,2017-03-06T12:59:27Z,,ValueError,"ValueError: signal only works in main thread","```
 * Serving Flask-SocketIO app ""app""
 * Forcing debug mode on
 * Restarting with stat
 * Debugger is active!
 * Debugger pin code: 256-225-104
Exception in thread Thread-1:
Traceback (most recent call last):
  File ""/usr/lib/python3.5/threading.py"", line 914, in _bootstrap_inner
    self.run()
  File ""/usr/lib/python3.5/threading.py"", line 862, in run
    self._target(*self._args, **self._kwargs)
  File ""/usr/local/lib/python3.5/dist-packages/flask_socketio/cli.py"", line 56, in run_server
    return run_command()
  File ""/usr/local/lib/python3.5/dist-packages/click/core.py"", line 722, in __call__
    return self.main(*args, **kwargs)
  File ""/usr/local/lib/python3.5/dist-packages/click/core.py"", line 697, in main
    rv = self.invoke(ctx)
  File ""/usr/local/lib/python3.5/dist-packages/click/core.py"", line 895, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File ""/usr/local/lib/python3.5/dist-packages/click/core.py"", line 535, in invoke
    return callback(*args, **kwargs)
  File ""/usr/local/lib/python3.5/dist-packages/click/decorators.py"", line 64, in new_func
    return ctx.invoke(f, obj, *args[1:], **kwargs)
  File ""/usr/local/lib/python3.5/dist-packages/click/core.py"", line 535, in invoke
    return callback(*args, **kwargs)
  File ""/usr/local/lib/python3.5/dist-packages/flask/cli.py"", line 432, in run_command
    use_debugger=debugger, threaded=with_threads)
  File ""/usr/local/lib/python3.5/dist-packages/werkzeug/serving.py"", line 706, in run_simple
    reloader_type)
  File ""/usr/local/lib/python3.5/dist-packages/werkzeug/_reloader.py"", line 257, in run_with_reloader
    signal.signal(signal.SIGTERM, lambda *args: sys.exit(0))
  File ""/usr/lib/python3.5/signal.py"", line 47, in signal
    handler = _signal.signal(_enum_to_int(signalnum), _enum_to_int(handler))
ValueError: signal only works in main thread

```"
2199,"Close <li> tag in lines (16,18) (#1951)",2017-03-05T11:59:32Z,2017-03-05T12:07:50Z,,,,Adding a change  in the example code that wasn't added to the docs. https://github.com/pallets/flask/commit/c54d67adee6f99113f525b376da4af27c3001321
2198,Add instructions for running Flask with PyCharm,2017-03-04T20:34:13Z,2017-05-28T04:24:22Z,docs,,,"With the introduction of the `flask` command, setting up PyCharm is not as straightforward. Some screenshots and instructions would be useful. Similar to the section on how to deploy to common platforms."
2197,Allow error handler to pass on decision to subsequent handlers,2017-03-03T07:15:01Z,2017-05-30T19:13:36Z,,,,"I would like to do error handling conditionally, like:

```python
def internal_error(exc: peewee.InternalError) -> Optional[Response]:
    if exc.args[0] == 1213:
        # Deadlock found when trying to get lock; try restarting transaction
        return CustomErrorResponse(...)

def any_exception(exc: Exception) -> Response:
        return CustomErrorResponse(...)

app.register_error_handler(peewee.InternalError, internal_error)
app.register_error_handler(Exception, any_exception)
```

Could it be so that if `None` is returned from an errorhandler, Flask keeps on iterating and calls the next suitable errorhandler?

Lines: https://github.com/pallets/flask/blob/master/flask/app.py#L1521-L1525 Looks like the code has changed somewhat since 0.10.1 that I'm running (in 0.10.1 this would have been 3-line change I think).

Of course I could call `return any_exception(exc)` from `internal_error()` but that kinda adds direct dependency between the two methods and I would like to avoid it (consider the error handlers coming from different modules/classes etc. and maybe there's even third error handler sitting between that would be skipped here)."
2196,Add tips for debug config with flask cli,2017-03-03T03:17:56Z,2017-03-04T10:29:05Z,,,,"`app.debug` and `app.config['DEBUG']` are not compatible with the `flask` script. The app's config is not available in `get_debug_flag()` when starting the server, is there a way to fix that?"
2195,Windows Server - Gevent Deployment,2017-03-01T22:17:46Z,2017-03-01T22:36:08Z,,,,"Hello,

I am using flask for a small web service that my mobile applications use.

I was developing the server on a normal Windows Desktop and port forwarding it through my personal home router. 

I am now at the deployment stage, and I am having trouble with connections on Windows Server 2008.

The flask server runs successfully, and all endpoints are reachable on localhost, but I cannot connect from an external source. I know that the port forwarding is correct, as I have added another test application to Windows IIS to confirm that it wasn't the router's port forwarding, and that test application worked.

Hoping someone has an idea.

Thanks!

Connor

The issue tracker is a tool to address bugs.
Please use the #pocoo IRC channel on freenode or Stack Overflow for questions.
"
2194,Issue with installing app debugger,2017-03-01T15:42:59Z,2017-03-12T19:39:10Z,,OSError,"OSError: [WinError 10038] An operation was attempted on something that is not a socket","I tried to install the app debugger, to make my webapp run instantly when I change the code, with:
app.run(debug=True)

However, I get the Error message below. Does someone know how to fix this?
Many thanks!

```pythontb
* Restarting with stat
* Debugger is active!
* Debugger pin code: xx
Exception in thread Thread-1:
Traceback (most recent call last):
 File ""C:\Users\josep\Anaconda3\lib\threading.py"", line 914, in _bootstrap_inner
   self.run()
 File ""C:\Users\josep\Anaconda3\lib\threading.py"", line 862, in run
   self._target(*self._args, **self._kwargs)
 File ""C:\Users\josep\Anaconda3\lib\site-packages\werkzeug\serving.py"", line 656, in i
   fd=fd)
 File ""C:\Users\josep\Anaconda3\lib\site-packages\werkzeug\serving.py"", line 550, in m
   passthrough_errors, ssl_context, fd=fd)
 File ""C:\Users\josep\Anaconda3\lib\site-packages\werkzeug\serving.py"", line 462, in _
   socket.SOCK_STREAM)
 File ""C:\Users\josep\Anaconda3\lib\socket.py"", line 450, in fromfd
   nfd = dup(fd)
OSError: [WinError 10038] An operation was attempted on something that is not a socket
```"
2193,Don't rely on X-Requested-With for pretty print json response,2017-03-01T06:31:52Z,2017-03-07T01:09:47Z,json,,,"`X-Requested-With` is not reliable nowadays. We shouldn't rely on it any more.

Related issue: https://github.com/pallets/werkzeug/issues/1077"
2192,Inconsistent behaviour on request.get_json(cache=False) #2181 (solution),2017-02-28T07:31:06Z,2017-02-28T16:25:53Z,,,,"#2181 

```
#!/use/bin/env python
from flask import Flask, request
from flask import json
app = Flask(__name__)
@app.route('/', methods=[""GET"", ""POST""])
def hello_uncached():
        if request.headers['Content-Type']=='application/json':
                json1 = json.dumps(request.json)
                data={""abc"":""123""}
                json2 = json.dumps(data)
                return json1+'/'+json2
if __name__ == ""__main__"":
      app.run(host='0.0.0.0')
```
You can do it like this request.data will be used only when you are using text/plain in the case of json data use json.dumps(request.json).

`curl -H ""Content-Type: application/json"" -X POST http://127.0.0.1:5000 -d '{""foo"":""bar""}'`"
2191,Updated documentation for being able to use init_db method,2017-02-27T23:14:37Z,2017-04-21T18:45:16Z,docs,,,minor change for being able to run tests within the tutorial.
2190,testing.rst is missing flask import,2017-02-23T01:38:20Z,2017-06-06T13:01:11Z,docs,,,"When following the tutorial first test was failing because it does not find init_db()
Searching I found [this question](http://stackoverflow.com/questions/41612996/running-unit-tests-on-the-flaskr-tutorial-micro-blogging-app-in-flask) that fixed it, so the rest should be modified 
from
`import flaskr`
to
`from flaskr import flaskr`
I can not push a branch with the change (I suppose I have no permission)
"
2189,Suggestion: Support callables as parameter for url_for,2017-02-21T21:22:04Z,2017-02-21T21:25:00Z,,,,"I'd suggest enhancing the `url_for` function to accept callables as well, i.e. the function name unquoted; as this would help e.g. with code refactoring tools and auto completion.

It can easily be implemented with a few lines; if such a functionality would be desirable, I can prepare a PR with tests, etc.

Best regards, Christian"
2188,Input stream not automatically drained at teardown.,2017-02-20T04:32:41Z,,,,,"I'm not sure if this is intended behaviour and maybe I should know better, but I spent ages trying to figure out why I was getting a `code 400, message Bad request syntax` error and it turned out to be because I was not consuming the data associated with a request when raising an `Unauthorized` exception.

This seems to be a massive hole because if you are not expecting data with a request and so don't read anything then that data is left in the input stream (assuming `keep-alive`) and so forms the start of the next request.  In fact I have even tried sending a request with another request in the data and Flask processes that data as if it were the next request and sends that in response to the following request.

I have resolved this issue by copying the body of the `finally` clause in the `wrapper` function inside `exhaust_stream` from `formparser.py` in [pallets/werkzeug](http://github.com/pallets/werkzeug) and having this new function decorated with `@app.teardown_request`.  This ensures that the input stream is always drained after every request and so left over data is not mis-interpreted as the start of the next request.

Anyway, if I am expected to handle this situation manually as I have done can something be added to the documentation (or if it's already there can you point it out to me, somehow I couldn't find it).  Otherwise, I think Flask should drain the input stream so that subsequent requests are always correctly aligned."
2187,Fix non-working  setup.cfg in tutorial docs with working copy from sa…,2017-02-19T06:28:20Z,2017-02-19T18:48:34Z,,,,"I worked through the tutorial today, but ended up with code that wouldn't run.
The provided example code in the repo does run.  
This pull matches the code in the docs to the example code"
2186,Fix typo in docs/tutorial/templates.rst,2017-02-18T06:32:10Z,2017-02-18T06:41:59Z,,,,
2185,Connection Timed Out,2017-02-17T09:29:04Z,2017-02-17T09:30:13Z,,,,"Hello,

I am deploying a flask app using Apache Web Server in an EC2 instance. My problem is that I can only make a few successful requests per minute, then the service would have a Connection Timed Out error after. I would have to wait for a couple of minutes to make successful requests again.

The application is an SMTP service.

Any thoughts/help is greatly appreciated."
2184,There is no way to add a link in flask.abort() function.,2017-02-17T06:19:00Z,2017-02-17T13:04:57Z,,,,"I am new to flask and i am trying to add a link in flask.abort(). There is no way to add a link in flask.abort() function. If there is a way i guess it must be documented :)
"
2183,Missing documentation about how URL/queries are quoted/unquoted,2017-02-16T08:47:38Z,2017-02-17T07:49:53Z,,,,"The help about `flask.request` http://flask.pocoo.org/docs/0.12/api/#incoming-request-data just includes a simple: _""args: A MultiDict with the parsed contents of the query string. (The part in the URL after the question mark).""_, Thus nothing about how args are generated.

I need to pass a complex string (with spaces and other url characters).

I found from some experiments, ithat I can generate on client side the query string with `urllib.parse.quote(query1, safe='')`, and this query parameter will be unquoted correctly by flask (request.args).

Because there are many quoting convention (e.g. space replaced with '+', it would be nice to have some more info on the documentation about quoting method, and possibly to have the quote and unquote also directly as flask utilities (like the json support), ready to be used client side.

Possibly also the path decoding could have similar problem (in that case with the default 'safe' argument).
"
2182,Fixed typo in module header,2017-02-15T16:54:43Z,2017-02-15T16:55:57Z,,,,"Super minor, but threw me for a second."
2181,Inconsistent behaviour on request.get_json(cache=False),2017-02-13T22:50:45Z,2017-06-04T17:29:05Z,json,,,"The behaviour of the following app should be pretty simple but it actually raises an unwanted exception.

```python

# flask_cache.py
from flask import Flask, request
app = Flask(__name__)

@app.route('/', methods=[""GET"", ""POST""])
def hello_uncached():
    json1 = request.get_json(cache=False)
    request.data = '{""abc"":123}'

    #  exception here because get_json internally returns an empty string
    #   to json.loads() which raises an BadRequest exception
    json2 = request.get_json(cache=False)
    return json1+'/'+json2

if __name__ == ""__main__"":
    app.run()
```

```bash
$ mkvirtualenv flask_cache
$ pip install flask
$ python flask_cache.py
$ curl -H ""Content-type: application/json"" -d '{""foo"":""bar""}' localhost:5000
```

As far as I could debug, the problem is located at [wrappers.get_data](https://github.com/pallets/flask/blob/0.12/flask/wrappers.py#L21). The get_data function ""fails"" silently because request does not has the ""get_data"" property and thus the returned string is empty.
After that, since I passed cache=False, the json.loads("""") fails and everything gets airbourne.

I could not understand this behaviour because if the request.data is suposed to be read-only, it should have been made in a way that `request.data = ""some data"" should not make any side effects, otherwise, we should be able to successfully run the above example code.


Is this the wanted behaviour ? If no, can I proceed with a PR ?"
2180,Migrate various docs links to https,2017-02-11T07:53:34Z,2017-02-11T09:43:11Z,,,,Also fixed a few outdated links
2179,bdist_wheel replaces wheel,2017-02-10T09:06:46Z,2017-02-10T11:20:00Z,,,,https://packaging.python.org/distributing/#universal-wheels
2178,Callback on `app.run`,2017-02-09T22:46:32Z,2017-02-09T23:14:05Z,,,,"When writing local-only apps we want to open the web browser after the flask app starts up.

Currently we do:
```
threading.Timer(1.25, lambda: webbrowser.open(url) ).start()
app.run(port=port)
```

However it would be nice not to have a guessed time like `1.25`, also it would be nice for the opening of the browser to be cancelled incase starting the flask app fails.

Possibly would look like:

`app.run(port=port, onstart=lambda: webbrowser.open(url))`"
2177,Possibly incorrect handling of from-data,2017-02-09T14:44:14Z,2017-02-09T14:49:57Z,,,,"I found an issue in which Flask incorrectly handels the posted form-data when posted from Postman.

The issue can be seen in this test case:

```
from flask import Flask, request

app = Flask(__name__)

@app.route('/', methods=['POST'])
def hello_world():

    f = request.values
    for key in f.keys():
        for value in f.getlist(key):
            print key.__repr__(),"":"",value.__repr__()

    return 'Hello'
```


If we execute the Flask app, and attempt to post the following command we will *NOT* encounter an issue in request no. 1
```
$ curl -X POST -F 'username=davidwalsh' -F 'password=something' http://localhost:1234/
127.0.0.1 - - [09/Feb/2017 15:27:06] ""POST / HTTP/1.1"" 200 -
'username' : u'davidwalsh'
'password' : u'something'
```

This results in the following raw request:

```
$ nc -l 1234
POST / HTTP/1.1
Host: localhost:1234
User-Agent: curl/7.51.0
Accept: */*
Content-Length: 259
Expect: 100-continue
Content-Type: multipart/form-data; boundary=------------------------45f852bd90f5d691

--------------------------45f852bd90f5d691
Content-Disposition: form-data; name=""username""

davidwalsh
--------------------------45f852bd90f5d691
Content-Disposition: form-data; name=""password""

something
--------------------------45f852bd90f5d691--
```


How ever, if we utilise a tool like Chrome/Postman, flask seems to incorrectly handle the request form-data request [seen here](https://i.imgur.com/bmnnwpb.png) from postman:

```
'------WebKitFormBoundaryZBQ6HpTUMMXKs08S\r\nContent-Disposition: form-data; name' : u'""username""\r\n\r\ndavidwalsh\r\n------WebKitFormBoundaryZBQ6HpTUMMXKs08S\r\nContent-Disposition: form-data; name=""password""\r\n\r\nsomething\r\n------WebKitFormBoundaryZBQ6HpTUMMXKs08S--\r\n'

```

And the raw request for the 2nd case:
```
nc -l 1234
POST / HTTP/1.1
Host: localhost:1234
Connection: keep-alive
Content-Length: 253
Postman-Token: bc27dc7d-162c-5684-3c73-b4f5cd409a0d
Cache-Control: no-cache
Origin: chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36
Content-Type: application/x-www-form-urlencoded
Accept: */*
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.8,da;q=0.6

------WebKitFormBoundaryeLtABWI0kqqXwQLL
Content-Disposition: form-data; name=""username""

davidwalsh
------WebKitFormBoundaryeLtABWI0kqqXwQLL
Content-Disposition: form-data; name=""password""

something
------WebKitFormBoundaryeLtABWI0kqqXwQLL--
```

While I realise the Chrome/Postman formatting is slightly different, it should still be very much valid I believe?"
2176,Running tests with nested objects in the data input,2017-02-09T14:33:33Z,2017-02-13T12:46:23Z,,TypeError,"TypeError: add_file() got multiple values for argument 'name'","Currently it does not seem possible to run unit-tests on endpoints that accept a nested dictionary as input when using flask with webargs / marshmallow,

Here is a minimal example,
```py
from flask import Flask
from webargs import fields
from webargs.flaskparser import use_args

app = Flask(__name__)

hello_args = { 
    'a': fields.Nested({'name' : fields.Str()})
}

@app.route('/', methods=['POST'])
@use_args(hello_args)
def index(args):
    return 'Hello ' + str(args)


def test_app():
    app.config['TESTING'] = True
    test_app = app.test_client(use_cookies=False)
    test_app.post(data={""a"": {""name"": ""Alice""}})


if __name__ == '__main__':
    app.run()
```
which runs as expected,
```bash
% curl -H ""Content-Type: application/json"" -X POST \
       -d '{""a"":{""name"": ""Alice""}}' http://localhost:5000  

Hello {'a': {'name': 'Alice'}}%
```
however if I try running tests on it, the argument parsing fails in `werkzeug.test.EnvironBuilder` with the following error,
```
nosetests test.py                                                      
E
======================================================================
ERROR: test.test_app
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/usr/lib64/python3.4/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/tmp/test.py"", line 26, in test_app
    test_app.post(data={""a"": {""name"": ""Alice""}})
  File ""/home/rth/.local/lib64/python3.4/site-packages/werkzeug/test.py"", line 788, in post
    return self.open(*args, **kw)
  File ""/home/rth/.local/lib64/python3.4/site-packages/flask/testing.py"", line 103, in open
    builder = make_test_environ_builder(self.application, *args, **kwargs)
  File ""/home/rth/.local/lib64/python3.4/site-packages/flask/testing.py"", line 34, in make_test_environ_builder
    return EnvironBuilder(path, base_url, *args, **kwargs)
  File ""/home/rth/.local/lib64/python3.4/site-packages/werkzeug/test.py"", line 338, in __init__
    self._add_file_from_data(key, value)
  File ""/home/rth/.local/lib64/python3.4/site-packages/werkzeug/test.py"", line 355, in _add_file_from_data
    self.files.add_file(key, **value)
TypeError: add_file() got multiple values for argument 'name'

----------------------------------------------------------------------
Ran 1 test in 0.011s

FAILED (errors=1)
```
this uses Python 3.5, flask 0.12 and webargs 1.5.2. 
Any suggestions on how to address this issue (or possible workarounds) would be much appreciated."
2175,Update 4.4.3 HTTP Methods Example,2017-02-09T11:40:15Z,2017-02-09T14:29:59Z,,,,"I just started learning `flask` and following the documentation pdf. When I reached the topic `4.4.3 HTTP Methods`, I encountered this `ValueError: View function did not return a response` even though I followed the tutorial. It made me confused and had to search on [stackoverflow](http://stackoverflow.com/a/18211982).

This might not be a good fix for an example but the previous example did confuse a beginner, me, who followed the documentation.

Cheers,
swan"
2174,Security Considerations Oversight,2017-02-08T16:32:39Z,2017-06-06T16:22:50Z,"docs, ready",,,"Not a bug report, per se, but still should be noted. On the [Security Considerations page](http://flask.pocoo.org/docs/0.12/security/), after describing the XSS remediation that Jinja2 provides, it describes the one caveat that unquoted html attributes are still vulnerable. It follows with a ""correct"" example:
`<a href=""{{ href }}"">the text</a>`

However that example is also vulnerable to XSS. An attacker could still set `href` to `javascript:alert(1)` to inject javascript into the tag (although it would require a user to click the link).

Perhaps the example should use a different quoted attribute as the example, like a default value for an input field or something of the like."
2173,py.test => pytest,2017-02-07T20:26:44Z,2017-02-09T17:34:17Z,,,,"Really a minor thing, only experienced by a newcomer.
When following the README or CONTRIBUTE  docs, the first test run results in lots of failures.
This is because a simple `py.test` also discovers the tests in examples/

(My plan is to contribute more, this is just to get started ;)
"
2172,multiple Set-Cookie fold in one line HTTP Header,2017-02-06T05:40:12Z,2017-03-02T11:03:46Z,,,,"First, [RFC 6265](https://tools.ietf.org/html/rfc6265) said:
> Origin servers SHOULD NOT fold multiple Set-Cookie header fields into a single header field.


But in flask-admin login(with flask-user) login response, multiple set-cookie(s) are folded:
> Set-Cookie: remember_token=...; Expires=Tue, 06-Feb-2018 05:23:25 GMT; Path=/
session=...; HttpOnly; Path=/

**CAUTION: Path=/[without a space]session=**

And in werkzeug, multiple Set-Cookie unittest(I added this code in werkzeug/tests/test_wrappers.py below), and passed.

    # set multi cookie once
    response = wrappers.BaseResponse()
    response.set_cookie('foo', 'bar', 60, 0, '/blub', 'example.org')
    response.set_cookie('blar', 'zag', 60, 0, '/blob', 'example.org')
    strict_eq(response.headers.to_wsgi_list(), [
        ('Content-Type', 'text/plain; charset=utf-8'),
        ('Set-Cookie', 'foo=bar; Domain=example.org; Expires=Thu, '
         '01-Jan-1970 00:00:00 GMT; Max-Age=60; Path=/blub'),
        ('Set-Cookie', 'blar=zag; Domain=example.org; Expires=Thu, '
         '01-Jan-1970 00:00:00 GMT; Max-Age=60; Path=/blob')
    ])

So I think this maybe a bug or flask. 
Any thought appreciated.
"
2171,The default static folder is being ignored if the number of params to the route are 3,2017-02-05T18:55:22Z,2017-02-05T19:25:07Z,,,,"~~~python
@app.route('/<date>/<username>/<path:filename>')
@login_required
@nocache
def custom_static(filename, username, date):
    path = os.path.join(app.config['CUSTOM_STATIC_PATH'],""username"", username, date)
    print ""Path: {}"".format(path)
    if os.path.isfile(os.path.join(path, filename)):
        return send_from_directory(path, filename)
    else:
        print ""File does not exist: {}"".format(filename](url))
        return
~~~

~~~
Path: ./DataWebserver/username/js/static
File does not exist: bootstrap-datepicker.min.js
~~~"
2170,about jinja2 dynamic extends,2017-02-05T11:55:30Z,2017-02-05T12:01:23Z,,,,"I want to use dynamic extends,like this
`{% extends {{file}} %}`

this ""file"" is come from python file.
but I'cant use it,how to solve it?"
2169,CORS requests hanging on Chrome,2017-02-04T05:15:36Z,2017-03-28T15:09:39Z,,,,"I'm seeing some strange behavior I can't really explain. My CORS requests are hanging for long periods 10, 20, 30 seconds and I'm not sure why. It seems to be specific to both Flask and Chrome.

I'm using python 3.4.3, Flask 0.12, and Flask-Cors 3.0.2.

Consider the following Flask server that returns some basic HTML and some javascript that makes and AJAX request to an API.

```
from flask import Flask

app = Flask(__name__)

@app.route(""/page1"")
def page1():
    return '''
    <html>
        <head>
            <script>
                function resHandler () {
                    document.getElementById('status').innerHTML = 'done!';
                }

                function gopherIt() {
                    document.getElementById('status').innerHTML = 'making request...';
                    var oReq = new XMLHttpRequest();
                    oReq.addEventListener(""load"", resHandler);
                    oReq.open(""GET"", ""http://localhost:3000/hang"");
                    oReq.send();
                }
            </script>
        </head>
        <body>
            <div>
                <input type=""button"" value=""Hang In There"" onclick=""gopherIt()"" />
                <span id=""status"">Click the button</span>
            </div>
            <a href=""http://localhost:8080/page2"">Go to page 2</a>
        </body>
    </html>
    '''

@app.route(""/page2"")
def page2():
    return '''
    <html>
        <body>
            page 2
        </body>
    </html>
    '''

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)
```

Here is the Flask API with CORS enabled:

```
from flask import Flask, json
from flask_cors import CORS

app = Flask(__name__)
CORS(app)

@app.route(""/hang"")
def hang10():
    return json.dumps({'iamkule': True})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=3000)
```

Which renders a page like this:

![image](https://cloud.githubusercontent.com/assets/1686534/22615826/61772198-ea63-11e6-8a38-e3456bf2d175.png)

Steps to reproduce:

1. Click the `Go to page 2` link
2. Click the back browser's button
3. Click the `Hang In There` button

You'll see a message next to the button that says ""making request..."" that basically just sits there while the API request hangs. Sometimes clicking it multiple times kinds of wakes it up and fixes it but not always. Sometimes it will also happen right after you refresh the page. It isn't as consistent as using the back button though.

If you open the Chrome debugger you can see all the XHR requests just sitting there.

![image](https://cloud.githubusercontent.com/assets/1686534/22615858/9608c906-ea64-11e6-851c-217028ee2030.png)


Here are some interesting points to consider:

1. This does not happen when the CORS library is not used. If I open Chrome with the same origin policy checks disabled by running `open -a Google\ Chrome --args --disable-web-security --user-data-dir` and run the app, it will not hang.

2. This happens in Chrome on both macOS Sierra and Windows 10.

3. This does not happen in Firefox on Mac or Windows.

4. This does not happen in node. I rewrote the exact same static server and API using node and express and everything works fine (which is why I'm posting this here).

So it kind of seems like some combination of Flask and Chrome not getting along. Does anyone have any ideas about what's going on here?

"
2168,"Flask, mod_wsgi, and Apache: ImportError mysql ",2017-02-02T23:52:51Z,2017-02-02T23:53:56Z,,,,"when i am running python3 test.py it is working fine with mysql
but when i running on apache server i am getting **wsgi error no module name mysql**
"
2166,Sending POST requests with input data exceeding 10KB results in 400 Bad Request under WSGI,2017-01-30T15:32:04Z,2017-01-30T15:37:56Z,,,,Moved to https://github.com/pallets/werkzeug/issues/1068
2165,Error accessing static components in subfolder,2017-01-30T10:41:22Z,2017-01-30T11:52:50Z,,,,"I am having issues when retrieving static components on subfolders in my project. Let me explain

My structure is as follows:

Main.py
--- App1.py
--- App2.py

It is, i have a main page that has links that refers to App1.py or App2.py, which are also flask programs

When i access App1.py, i dont have static content displayed. The html of the page is correctly displayed (under templates/App1/app1.html), but, looks like it is unable to find the static component referred in that page (i am referring from the html to static component under static/app1/css/app1.css). I have a 404 response

Is that something that is not supported by flask?

Thanks"
2164,Added .env support,2017-01-29T19:30:31Z,2017-04-07T16:39:08Z,,,,"This will instruct Flask to read .env files and then to load the
environment variables from there.  Additionally it automatically
changes the working directory to the path the .env is contained in."
2163,Add support for custom console-scripts,2017-01-29T14:18:54Z,2017-05-25T21:30:40Z,"cli, in progress",,,"For an installed app there is currently no clean way to provide a custom (e.g. `testapp`) console script instead of using the `flask` script (which needs FLASK_APP to be set) - using any entry point that resides within the app's package would stop the reloader from surviving import-time errors in the app's package.

With this PR it's easy to define a custom console script and also specify its app or app factory, making `FLASK_APP` unnecessary when using that script.

The application's setup.py would simply have to add this to the `setup()` call:

```python
    entry_points={
        'console_scripts': [
            'testapp = flask.cli:main'
        ],
        'flask.cli_apps': [
            'testapp = testapp.app:make_app'
        ]
    }
```

---

### TODO

- [x] Override default FlaskGroup help for custom commands (do not mention `FLASK_APP`)
- [x] Changelog
- [x] Docs
- [ ] Tests?"
2162,GAE not displaying error messages for 0.12,2017-01-29T00:05:15Z,2017-05-22T23:20:07Z,,ZeroDivisionError,"ZeroDivisionError: integer division or modulo by zero","When I use Flask 0.12 in my Google App Engine project I get no error messages. So a function that might throw an error would result in a log like:

```
INFO     2017-01-29 00:03:05,820 sdk_update_checker.py:229] Checking for updates to the SDK.
INFO     2017-01-29 00:03:06,428 api_server.py:205] Starting API server at: http://localhost:54929
INFO     2017-01-29 00:03:06,432 dispatcher.py:197] Starting module ""default"" running at: http://127.0.0.1:8080
INFO     2017-01-29 00:03:06,434 admin_server.py:116] Starting admin server at: http://localhost:8000
INFO     2017-01-29 00:03:10,212 module.py:787] default: ""GET / HTTP/1.1"" 500 291
INFO     2017-01-29 00:03:11,711 module.py:787] default: ""GET /favicon.ico HTTP/1.1"" 404 233
```

whereas when I downgrade to Flask 0.11.1 I actually get the error messaging I've come to know and love:

```
INFO     2017-01-28 23:58:06,986 sdk_update_checker.py:229] Checking for updates to the SDK.
INFO     2017-01-28 23:58:07,234 api_server.py:205] Starting API server at: http://localhost:54720
INFO     2017-01-28 23:58:07,238 dispatcher.py:197] Starting module ""default"" running at: http://127.0.0.1:8080
INFO     2017-01-28 23:58:07,240 admin_server.py:116] Starting admin server at: http://localhost:8000
ERROR    2017-01-28 23:58:11,804 app.py:1587] Exception on / [GET]
Traceback (most recent call last):
  File ""/Users/alex/yphh/petition_companies/lib/flask/app.py"", line 1988, in wsgi_app
    response = self.full_dispatch_request()
  File ""/Users/alex/yphh/petition_companies/lib/flask/app.py"", line 1641, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/Users/alex/yphh/petition_companies/lib/flask/app.py"", line 1544, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/Users/alex/yphh/petition_companies/lib/flask/app.py"", line 1639, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/Users/alex/yphh/petition_companies/lib/flask/app.py"", line 1625, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/Users/alex/yphh/petition_companies/main.py"", line 70, in index
    1 / 0
ZeroDivisionError: integer division or modulo by zero
INFO     2017-01-28 23:58:11,821 module.py:787] default: ""GET / HTTP/1.1"" 500 291
INFO     2017-01-28 23:58:13,100 module.py:787] default: ""GET /favicon.ico HTTP/1.1"" 404 233
```

Aside from the traceback the two are the same."
2161,KeyError problem ,2017-01-28T20:44:14Z,2017-01-28T21:21:44Z,,KeyError,"KeyError: 'socketio'","I'm trying to start the extremely basic flask application noted here: http://flask.pocoo.org/docs/0.12/quickstart/

When I try to run ""flask run"" however I get the following error 

```
 * Serving Flask-SocketIO app ""hello""
Traceback (most recent call last):
  File ""/usr/local/bin/flask"", line 11, in <module>
    load_entry_point('Flask', 'console_scripts', 'flask')()
  File ""/home/rohan/flask/flask/cli.py"", line 513, in main
    cli.main(args=args, prog_name=name)
  File ""/home/rohan/flask/flask/cli.py"", line 380, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 696, in main
    rv = self.invoke(ctx)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 1060, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 889, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 534, in invoke
    return callback(*args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/click/decorators.py"", line 64, in new_func
    return ctx.invoke(f, obj, *args[1:], **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 534, in invoke
    return callback(*args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/flask_socketio/cli.py"", line 58, in run
    run_server()
  File ""/usr/local/lib/python2.7/dist-packages/flask_socketio/cli.py"", line 50, in run_server
    socketio = app.extensions['socketio']
KeyError: 'socketio'
```

I've tried installing Flask via pip as well as from source, and verified that all the dependencies are installed. If I use the `app.run()` command in `main` it works fine, but I'd like to use `flask run` after exporting the program name but it doesn't seem to work. I've followed the instructions exactly from the website. Any advice? 
"
2160,Python - Headers not decoded properly,2017-01-25T18:05:09Z,2017-01-25T20:55:07Z,,,,"Hi,
I try to pass information in headers, such as passwords.
When receiving it in my program, special characters are not properly decoded, such as €£ and french accented chars.
It works fine if they're encoding in regular http args.

Example:
> curl -v  --header ""user_email:toto@toto.com"" --header ""user_password:é€""  -X GET  ""http://localhost:5000/api/private/v1.0/auth""
 >  Trying ::1...
 > connect to ::1 port 5000 failed: Connection refused
 > Trying 127.0.0.1...
 > Connected to localhost (127.0.0.1) port 5000 (#0)
> GET /api/private/v1.0/auth HTTP/1.1
> Host: localhost:5000
> User-Agent: curl/7.43.0
> Accept: */*
> user_email:toto@toto.com
> user_password:é€`



On the app side:

> Headers=Accept: */*
> Content-Length: 
> User-Agent: curl/7.43.0
> User-Password: Ã©â¬
> Host: localhost:5000
> User-Email: toto@toto.com
> Content-Type: 


"
2159,CSS and JS TTFB take too long in flask 0.11.1 and 0.12,2017-01-24T03:24:01Z,2017-01-24T03:28:14Z,,,,"Thank you for the awesome framework first!
      Sorry I find the problem was flask-session connecting  remote redis caused
"
2158,flask run not work,2017-01-23T10:48:10Z,2017-01-23T11:39:54Z,,Error,"Error: The file/path provided (manage) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py","I have set `FLASK_APP=manage.py', but got：

```
Error: The file/path provided (manage) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py
```"
2157,Merge pull request #1 from pallets/master,2017-01-22T08:39:28Z,2017-01-22T08:59:44Z,,,,Update from upstream
2156,AssertionError with webtest when returning 204,2017-01-18T16:11:55Z,2017-01-27T13:15:13Z,,,,"I have a handler that returns a 204 with no Content-Type, like this:
```python
from flask import Response

def make_204_response():
    resp = Response('', 204)
    del resp.headers['Content-Type']
    return resp
```

It works as expected, but when I run my unit tests using webtest I get this error:
```
Exception AssertionError: AssertionError(u'Iterator garbage collected without being closed',) in <bound method IteratorWrapper.__del__ of <webtest.lint.IteratorWrapper object at 0x7f90f7a6b550>> ignored
```

It looks like webob had pretty much the same problem:
https://github.com/Pylons/webob/issues/305"
2155,Disable debug when FLASK_DEBUG=False,2017-01-17T12:06:08Z,2017-01-17T15:15:51Z,,,,"I got confused why setting FLASK_DEBUG environment variable to `False`, as it's written in Python, didn't disable debug."
2154,"Update docs that request is an object, not a class",2017-01-16T21:30:44Z,2017-01-17T19:20:08Z,,,,"Cleanup sphinx formatting to show that `request` is an object, not a class. The actual class name is `Request`.

Based on discussion [here](https://github.com/pallets/flask/pull/2151#issuecomment-272699147)."
2153,add travis badge to readme,2017-01-16T08:31:36Z,2017-01-16T10:12:26Z,,,,Is there any reason not to switch to markdown and add a build badge?
2152,use SERVER_NAME to set host and port in app.run(),2017-01-16T08:26:38Z,2017-01-17T21:22:17Z,,,,Addresses #2109 
2151,Fix Request Reference,2017-01-14T04:34:29Z,2017-01-14T20:58:46Z,,,,Points flask.Request to appropriate place in the documentation.
2150,Connection refused for flask redis session,2017-01-14T02:47:32Z,2017-01-14T05:39:22Z,,,,"I attempted to replace flask's internal [`session`](http://flask.pocoo.org/docs/0.12/quickstart/#sessions) by [implementing](http://flask.pocoo.org/snippets/75/) redis.  I thought this was a good idea, since it would mean more secure sessions, since they are not stored as cookies, rather on the redis-server:

- http://flask.pocoo.org/snippets/75/
- https://github.com/mrichman/flask-redis/blob/master/redissession.py

After copying the latter [reference](https://github.com/mrichman/flask-redis/blob/master/redissession.py), as [`redis_session.py`](https://github.com/jeff1evesque/machine-learning/blob/340e19ab43cd2162b712d1f485e69411ec83fe91/brain/cache/redis_session.py), followed by adjusting [`factory.py`](https://github.com/jeff1evesque/machine-learning/commit/4eea9251f69e392d2ce2e5ca6bbd2d53c964d2b0):

```python
            # replace default cookie session with server-side redis
            app.session_interface = RedisSessionInterface()
```

My travis ci indicated a [failed](https://travis-ci.org/jeff1evesque/machine-learning/builds/190594385#L3623-L3725) build:

>E           ConnectionError: Error 111 connecting to localhost:6379. Connection refused.

I'm not sure why my application failed to connect to redis.  The redis-server should have properly started via [`redis.dockerfile`](https://github.com/jeff1evesque/machine-learning/blob/962cfee5d8031fc09802da82f04b04a6280d4242/redis.dockerfile#L12), which is implemented by the overall [`travis.yaml`](https://github.com/jeff1evesque/machine-learning/blob/e801c5f8bffdf1b402af760c4ccbb2faf9991d76/.travis.yml#L105).  Prior to actually implementing `redis_session.py`, my application was already using redis successfully for other things (like serializing sciki-learn objects, and storing it into redis), as indicated by [prior builds](https://travis-ci.org/jeff1evesque/machine-learning/builds/190431244#L3624).  Specifically, the `test_model_generate` function from [`pytest_svm_file_upload.py`](https://github.com/jeff1evesque/machine-learning/blob/203ec97281314c9ca97ab58b0e3a3e7342990bd5/test/live_server/programmatic_interface/file_upload/pytest_svm_file_upload.py#L106-L125), basically computes a prediction object, then stores it into redis via a custom [`cache`](https://github.com/jeff1evesque/machine-learning/blob/203ec97281314c9ca97ab58b0e3a3e7342990bd5/brain/cache/cache_model.py#L45-L58) method:

```python
    def cache(self, hash_name, key):
        '''@cache
        This method serializes, then caches the provided model into a redis
        hash cache.
        '''

        try:
            serialized = Serialize_Model(self.model).serialize()
            self.myRedis.hset(hash_name, key, serialized)
        except Exception, error:
            self.list_error.append(str(error))
            print self.list_error
```

If the model was not properly cached into redis, then my successive unit test, [`test_model_predict`](https://github.com/jeff1evesque/machine-learning/blob/203ec97281314c9ca97ab58b0e3a3e7342990bd5/test/live_server/programmatic_interface/file_upload/pytest_svm_file_upload.py#L128-L147) which uncaches the same model, in order to perform corresponding computation, would fail.

Because my travis ci [builds](https://travis-ci.org/jeff1evesque/machine-learning/builds) began breaking with the introduction of overloading [`app.session_interface = RedisSessionInterface()`](https://github.com/jeff1evesque/machine-learning/commit/4eea9251f69e392d2ce2e5ca6bbd2d53c964d2b0#diff-ab2c5ef35603caa654ec40f8cad9162aR53) in my app factory, I'm wondering if the problem is redis, flask, docker, or a combination of the three?"
2149,Use SOURCE_DATE_EPOCH for copyright year to make build reproducible,2017-01-13T10:00:35Z,2017-01-13T13:30:22Z,,,,"Hi,

Whilst working on the ""reproducible builds"" effort [0], we noticed that flask-restful could not be built reproducibly.

SOURCE_DATE_EPOCH is explained [1]

[0] https://wiki.debian.org/ReproducibleBuilds
[1] https://wiki.debian.org/ReproducibleBuilds/TimestampsProposal
"
2148,Added python3.6 support for tests,2017-01-10T17:55:58Z,2017-01-10T18:07:26Z,,,,"
python 3.6 has deprecated the use of flags not at the start of regular expression,
plans for 3.7 is to rasie an exception: [http://bugs.python.org/issue22493](http://bugs.python.org/issue22493)

new on 3.6  [ModuleNotFoundError](https://docs.python.org/3/library/exceptions.html#ModuleNotFoundError)"
2147,add missing quotes for dict key in views.rst,2017-01-10T14:59:29Z,2017-01-10T15:00:09Z,,,,
2146,Added python 3.6,2017-01-08T23:15:04Z,2017-01-10T18:07:52Z,,,,
2145,AttributeError: 'module' object has no attribute 'TCPServer',2017-01-08T22:42:17Z,2017-02-05T19:25:53Z,,AttributeError,"AttributeError: 'module' object has no attribute 'TCPServer'","What I am missing ?

```
aceback (most recent call last):
  File ""main.py"", line 225, in <module>
    main = Main()
  File ""main.py"", line 38, in __init__
    self.start_flask()
  File ""main.py"", line 44, in start_flask
    self.flask.run()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 827, in run
    from werkzeug.serving import run_simple
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 70, in <module>
    from BaseHTTPServer import HTTPServer, BaseHTTPRequestHandler
  File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 102, in <module>
    class HTTPServer(SocketServer.TCPServer):
AttributeError: 'module' object has no attribute 'TCPServer'
```

My code is:

```
from flask import Flask
app = Flask(__name__)

@app.route(""/"")
def hello():
    return ""Hello World!""

if __name__ == ""__main__"":
    app.run()
```

What I am missing ?"
2144,Allow default Errorhandler for HTTPException,2017-01-08T21:16:37Z,2017-05-23T06:11:16Z,,,,"Allow an default errorhandler for all HTTPException.

This will come handy when building a REST API where you want all Errors return JSON instead of the default behaviour.

PR https://github.com/pallets/flask/pull/2082 solves the same problem, but it didn't work in my environment. Tests are included."
2143,Unable to infer MIME-type because no filename is available.,2017-01-07T15:34:50Z,2017-01-07T15:39:13Z,,,,The Flask 0.12 apparently changed the name of the file transfer. everything is stable in Flask 0.11-0.11.1.
2142,Website still lists 0.11 as the latest release even though 0.12 is release,2017-01-05T09:14:28Z,2017-01-05T15:59:37Z,,,,"http://flask.pocoo.org/ (BTW, can I haz HTTPS please?) says:

>  Latest Version: 0.11 

It should say:

>  Latest Version: 0.12 

(with the correct link).

:sparkles: "
2141,Remove extra HTML tag from fileupload docs,2017-01-04T11:49:16Z,2017-02-28T05:05:10Z,,,,
2140,？？？,2017-01-03T12:47:24Z,2017-01-03T12:48:31Z,,,,"
This is your own development?
"
2139,Flask 0.12 incompatible with Google App Engine?,2017-01-02T19:43:53Z,2017-04-08T18:00:32Z,,,,"A very simple boilerplate Google App Engine example using Flask fails when upgrading from 0.10 to 0.12.  The problem is something cryptic relating to module path resolution.  

The straight-off-the-web GAE Flask Hello World example works fine when deployed to a live GAE project.  The reason why this works ok is that it is so simple that it makes no use of third-party libraries outside of those that are natively installed along with Flask as a standard 'pip' install.

But when I extended this example to make the simplest use of the Google Cloud Datastore, then when the code is deployed, and a GET request is made, it fails with the following stack traceback:
> Traceback (most recent call last):
>   File ""/google/google-cloud-sdk/platform/google_appengine/google/appengine/runtime/wsgi.py"", line 240, in Handle
>     handler = _config_handle.add_wsgi_middleware(self._LoadHandler())
>   File ""/google/google-cloud-sdk/platform/google_appengine/google/appengine/runtime/wsgi.py"", line 299, in _LoadHandler
>     handler, path, err = LoadObject(self._handler)
>   File ""/google/google-cloud-sdk/platform/google_appengine/google/appengine/runtime/wsgi.py"", line 85, in LoadObject
>     obj = __import__(path[0])
>   File ""/home/cinchent/flask-skel/main.py"", line 8, in <module>
>     from google.cloud import datastore
> ImportError: cannot import name datastore

Digging deeper into this, I tried to use the GAE development application server on my local Windows box, and lo! then even the stock Hello World example fails: Flask is unable to even successfully import the native Python 'msvcrt' module from within its own Click initializer.  Here's the traceback from that:

> Traceback (most recent call last):
>   File ""C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\platform\google_appengine\google\appengine\runtime\wsgi.py"", line 240, in Handle
>     handler = _config_handle.add_wsgi_middleware(self._LoadHandler())
>   File ""C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\platform\google_appengine\google\appengine\runtime\wsgi.py"", line 299, in _LoadHandler
>     handler, path, err = LoadObject(self._handler)
>   File ""C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\platform\google_appengine\google\appengine\runtime\wsgi.py"", line 85, in LoadObject
>     obj = __import__(path[0])
>   File ""C:\CINCH\Freewave\GCP\appengine-flask-skeleton\main.py"", line 8, in <module>
>     from flask import Flask
>   File ""C:\CINCH\Freewave\GCP\appengine-flask-skeleton\lib\flask\__init__.py"", line 21, in <module>
>     from .app import Flask, Request, Response
>   File ""C:\CINCH\Freewave\GCP\appengine-flask-skeleton\lib\flask\app.py"", line 26, in <module>
>     from . import json, cli
>   File ""C:\CINCH\Freewave\GCP\appengine-flask-skeleton\lib\flask\cli.py"", line 17, in <module>
>     import click
>   File ""C:\CINCH\Freewave\GCP\appengine-flask-skeleton\lib\click\__init__.py"", line 18, in <module>
>     from .core import Context, BaseCommand, Command, MultiCommand, Group, \
>   File ""C:\CINCH\Freewave\GCP\appengine-flask-skeleton\lib\click\core.py"", line 7, in <module>
>     from .types import convert_type, IntRange, BOOL
>   File ""C:\CINCH\Freewave\GCP\appengine-flask-skeleton\lib\click\types.py"", line 4, in <module>
>     from ._compat import open_stream, text_type, filename_to_ui, \
>   File ""C:\CINCH\Freewave\GCP\appengine-flask-skeleton\lib\click\_compat.py"", line 164, in <module>
>     import msvcrt
>   File ""C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\platform\google_appengine\google\appengine\tools\devappserver2\python\sandbox.py"", line 964, in load_module
>     raise ImportError('No module named %s' % fullname)
> ImportError: No module named msvcrt

GAE runs the Flask webapp within a sandbox, but it provides the proper module paths to the installed modules, provided those obey a somewhat orthodox Python path resolution technique, but whatever exotic technique Flask now uses in 0.12 fails within that sandbox.  (Other third-party libraries can be imported from within the sandbox just fine.)

These problems are completely absent in Flask 0.10.  (Once you're past the problem of importing 'protobuf', that is, a separate but known incompatibility with GAE's internal use, which has a workaround.)

I've googled high and low for any information about what I may be missing in the Flask initialization recipe -- surely I must not be the only person to have encountered this! -- but have turned up nothing.

---
In the enclosed 'main.py', setting the DATASTORE_EXAMPLE global to False causes it to behave as the stock GAE Hello World example app, and setting it to True extends that app to attempt use of the Cloud Datastore.

[bundle.zip](https://github.com/pallets/flask/files/681314/bundle.zip)
"
2138,Fix fastcgi lighttpd example documentation.,2017-01-02T02:41:13Z,2017-01-02T02:51:21Z,,,,"Add a trailing slash to the dummy static path alias in the fastcgi lighttpd setup
documentation. Omitting a trailing slash leads to unintended behavior.

Without the trailing slash, the result of the lighttpd alias looks like this(in debug mode):

    2017-01-02 02:25:11: (response.c.624) -- file not found
    2017-01-02 02:25:11: (response.c.625) Path : /var/www/myapp/staticfoo.txt

Instead of `/var/www/myapp/static/foo.txt`"
2137,How to sovle the error:KeyError: 'socketio'`,2017-01-01T09:06:41Z,2017-01-01T15:26:49Z,,KeyError,"KeyError: 'socketio'","When I run the 5th command 'flask run' for example/flaskr. It shows error

```
* Serving Flask-SocketIO app ""flaskr""
Traceback (most recent call last):
  File ""/usr/local/bin/flask"", line 9, in <module>
    load_entry_point('Flask==0.13.dev0', 'console_scripts', 'flask')()
  File ""/usr/local/lib/python2.7/dist-packages/flask/cli.py"", line 507, in main
    cli.main(args=args, prog_name=name)
  File ""/usr/local/lib/python2.7/dist-packages/flask/cli.py"", line 374, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 696, in main
    rv = self.invoke(ctx)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 1060, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 889, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 534, in invoke
    return callback(*args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/click/decorators.py"", line 64, in new_func
    return ctx.invoke(f, obj, *args[1:], **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 534, in invoke
    return callback(*args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/flask_socketio/cli.py"", line 58, in run
    run_server()
  File ""/usr/local/lib/python2.7/dist-packages/flask_socketio/cli.py"", line 50, in run_server
    socketio = app.extensions['socketio']
KeyError: 'socketio'
```

How to solve this problem? Thankyou very much!"
2136,Added missing html tag in wtforms docs,2016-12-31T13:32:23Z,2016-12-31T13:33:32Z,,,,
2135,Inherit Werkzeug docs,2016-12-30T21:24:20Z,2016-12-31T15:31:44Z,,,,Fix #2132
2134,Document change in Request.form behaviour with Werkzeug 0.9,2016-12-30T21:15:20Z,2016-12-30T22:34:36Z,,,,"Fixes: #2132
Signed-off-by: Patrick Uiterwijk <patrick@puiterwijk.org>"
2133,prevent NoAppException when ImportError occurs within imported module,2016-12-30T21:11:23Z,2016-12-30T21:46:36Z,,,,"Currently this will cause `flask run` to show a `NoAppException` error:
```
from flask import Flask

raise ImportError()

testapp = Flask('testapp')
``` 

The expected behavior is to see the `ImportError` when you visit the page instead of the  `NoAppException` error.

This happens because the code does not differentiate between an `ImportError` when `flask run` tries to import the module and an `ImportError` from the module after it is imported.

The fix came from here: http://stackoverflow.com/a/24262408"
2132,Flask documentation inconsistent with implementation for form parsing,2016-12-30T20:47:39Z,2016-12-31T15:31:44Z,,,,"Since Werkzeug 0.9, request.form is populated for all requests as long as they contain a Content-Type header (https://github.com/pallets/werkzeug/blob/master/werkzeug/wrappers.py#L328).
The Flask documentation however implies that request.form is only available with POST and PUT requests, and that is the case with Werkzeug<0.9 (well, 0.8.3 parses for POST, PUT and PATCH)."
2131,Add larger app ex,2016-12-30T18:48:08Z,2017-01-15T04:56:13Z,,,,"I chose the wrong base: https://github.com/pallets/flask/pull/2130

Original PR message:

> Addresses: #1902 (comment)
> 
> Confirms that the larger application as outlined in the docs, works as expected. For the sake of less confusion, for those working through this example, having src might be helpful. Not everyone will want to work along with the docs. If there are parts of the docs that are not clear, we should fix that as well. (They seemed clear to me).

Thiefmaster's response:

> The weird commits in this PR aside (rebase to upstream/master and force-push to fix), I'm not sure how useful this is to have in the repo... Especially since having a ""large"" app without an app factory is somewhat questionable...

My response:

> @ThiefMaster Sorry about that. I didn't choose correct base. I was thinking that in order to debug issues that people are having with code examples in the docs, it would be useful to have those examples on-hand.
> 
> I agree. But maybe until we can put something better together for #2027, this addition could just be temporary and we could deprecate this ""larger applications"" example at later time."
2130,Add a largeapp example under flask/examples,2016-12-30T17:58:58Z,2016-12-30T17:59:53Z,,,,"Addresses: https://github.com/pallets/flask/issues/1902#issuecomment-269781735

Confirms that the larger application as outlined in the docs, works as expected. For the sake of less confusion, for those working through this example, having src might be helpful. Not everyone will want to work along with the docs. If there are parts of the docs that are not clear, we should fix that as well. (They seemed clear to me)."
2129,How to setup this website?,2016-12-30T09:33:53Z,2016-12-30T09:36:14Z,,,,Hello. How to setup this website?  Which script I should run then visit this website through 'losthost:5000'?
2128,Socketserver problem in Python 3.6,2016-12-30T09:23:17Z,2016-12-30T15:41:21Z,,"ModuleNotFoundError, ImportError","ModuleNotFoundError: No module named 'SocketServer', ImportError: cannot import name 'ForkingMixIn'","In python 3.6 Flask can't run and return error:

> Traceback (most recent call last):
  File ""D:\enviroments\flask\lib\site-packages\werkzeug\serving.py"", line 65, in <module>
    from SocketServer import ThreadingMixIn, ForkingMixIn
ModuleNotFoundError: No module named 'SocketServer'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File ""C:/Users/User/Desktop/Blueprints/main.py"", line 25, in <module>
    application.run()
  File ""D:\enviroments\flask\lib\site-packages\flask\app.py"", line 827, in run
    from werkzeug.serving import run_simple
  File ""D:\enviroments\flask\lib\site-packages\werkzeug\serving.py"", line 68, in <module>
    from socketserver import ThreadingMixIn, ForkingMixIn
ImportError: cannot import name 'ForkingMixIn'"
2127,Why doesn't flask reload when I change my code? It should automatically reload my app,2016-12-28T21:36:42Z,2017-01-09T03:31:30Z,,,,"Why doesn't flask reload when I change my code? It should automatically reload my app.... Is flask-script now obsolete in 0.12 flask? 

https://github.com/smurfix/flask-script/issues/172"
2126,Update Flask-SQLAlchemy link,2016-12-28T15:10:53Z,2016-12-28T15:11:34Z,,,,
2125,"debugging PIN is not being displayed, no request info displayed",2016-12-27T15:28:00Z,2016-12-28T11:41:56Z,,,,"Sorry to post this here as it is probably a question as opposed to an issue, but my query on stackoverflow yielded no answers. See http://stackoverflow.com/questions/40666325/flask-application-starts-without-giving-debugging-pin-also-no-request-info-disp

Any suggestions how to debug this would be appreciated.


"
2124,code icon show other,2016-12-27T11:14:00Z,2016-12-27T11:18:50Z,,,,"'code icon', 'file code outline icon' is showing different then the link http://semantic-ui.com/elements/icon.html

http://jsfiddle.net/efp8z6Ln/428/"
2123,Fix config.from_pyfile on Python 3,2016-12-25T15:37:43Z,2016-12-26T02:50:48Z,,,,Fix #2118
2122,Make flaskr.py command line friendlier,2016-12-25T01:51:03Z,2016-12-25T17:54:22Z,,,,"This allows for
```
python flaskr.py initdb
python flaskr.py run
```"
2121,"cant set session timeout, tried many permutations and asked in irc and stack. to no avail.",2016-12-24T04:00:36Z,2016-12-24T04:49:41Z,,,,"Hi, Im only posting my issue here as a last resort, I understand this is a bug tracker. But I think its fair to say that flask default session lasting 31 days is a bug and security flaw in itself, and havent found an easy way to change this.  Im simply trying to set a timeout of 15 minutes idle activity for my user sessions (site-wide but particularly for my @login_required '/dashboard/' area) I tried eliminating different variables to solve the problem but still the session lasts indefinitely.  Heres the post of my imports, config, dashboard, blueprint, register / login system in its entirety (dont worry its rather succinct).  Hopefully someone can see an error I overlooked.  Thank you.

https://dpaste.de/1pVD"
2120,Style the flask command consistently,2016-12-21T19:27:43Z,2016-12-21T20:06:48Z,,,,It's done like this in other parts of this doc.
2119,Update README for minitwit,2016-12-21T05:21:01Z,2016-12-21T20:07:10Z,,,,add step 2 to run minitwit
2118,config.from_pyfile crashes on Python 3 when source isn't encoded in default encoding,2016-12-20T03:01:50Z,2016-12-26T02:51:24Z,bug,,,"when I read my instance config file, I get an error. 

> exec(compile(config_file.read(), filename, 'exec'), d.__dict__)
> UnicodeDecodeError: 'gbk' codec can't decode byte 0x80 in position 437: illegal multibyte sequence
Then I modify the code of config.from_pyfile to this

> with open(filename, 'rb') as config_file:
The problem is resolved. 

"
2117,Added missing testing config,2016-12-19T16:06:43Z,2017-04-13T23:45:25Z,,,,"This PR contains an update to docs/testing.rst:

The testing documentation was missing `TESTING` config from one of the examples.

fixes #1302 
"
2116,Remove wrong comma,2016-12-18T20:23:56Z,2016-12-19T13:37:34Z,,,,I don't think that comma belongs there.
2115,Feature/ascii,2016-12-18T18:33:55Z,2017-04-08T18:03:49Z,,,,Implemented the solution purposed by @dsully for issue #1286 
2114,Template File will not download file (window.open command in HTML) when run from flask,2016-12-18T08:46:15Z,2016-12-18T10:18:32Z,,,,"I have an HTML template that works correctly and downloads a file when open it directly in the browser (Chrome or Firefox), but the window.open command does not run (does not download the file) when the HTML is called from flask.

<script>
window.open(""file:///C:/mypath/mywordfile.docx"")
</script>

see attached sample
[issue.txt](https://github.com/pallets/flask/files/659321/issue.txt)
"
2113,`flask run` not processing SERVER_NAME for port binding,2016-12-17T11:28:46Z,2017-05-29T19:04:53Z,,,,"When running a development server, using `flask run`, with the `SERVER_NAME` config variable set to a port number other than 5000, the server still defaults to 5000. Looking into the code, it seems that [`flask.cli.run_command`](https://github.com/pallets/flask/blob/7fca843b5f361e79534bd18c4cd20f3f44094337/flask/cli.py#L394) calls `werkzeug.serving.run_simple` directly, without passing through [`Flask.run`](https://github.com/pallets/flask/blob/7fca843b5f361e79534bd18c4cd20f3f44094337/flask/app.py#L782), where the code for processing the server name resides.

This is using python 3.5, and Werkzeug 0.11.11"
2112,ImportError: No module named minitwit,2016-12-15T09:40:27Z,2016-12-16T10:09:09Z,,ImportError,"ImportError: No module named minitwit","I am new to Flask and wanted to try out the demo.

```
Traceback (most recent call last):
  File ""/usr/local/bin/flask"", line 11, in <module>
    sys.exit(main())
  File ""/usr/local/lib/python2.7/dist-packages/flask/cli.py"", line 478, in main
    cli.main(args=args, prog_name=name)
  File ""/usr/local/lib/python2.7/dist-packages/flask/cli.py"", line 345, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 696, in main
    rv = self.invoke(ctx)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 1055, in invoke
    cmd_name, cmd, args = self.resolve_command(ctx, args)
  File ""/usr/local/lib/python2.7/dist-packages/click/core.py"", line 1094, in resolve_command
    cmd = self.get_command(ctx, cmd_name)
  File ""/usr/local/lib/python2.7/dist-packages/flask/cli.py"", line 316, in get_command
    rv = info.load_app().cli.get_command(ctx, name)
  File ""/usr/local/lib/python2.7/dist-packages/flask/cli.py"", line 209, in load_app
    rv = locate_app(self.app_import_path)
  File ""/usr/local/lib/python2.7/dist-packages/flask/cli.py"", line 89, in locate_app
    __import__(module)
ImportError: No module named minitwit

```"
2111,Add url_for_self() function to reference current endpoint,2016-12-14T17:02:40Z,2016-12-15T10:37:06Z,,,,"It's often useful to reference current endpoint, sometimes modifying some of arguments. For example, imagine some generic item viewer application which shows items from different sources:

```
@app.route(""/<source>/<item>"")
def item(source, item):
    return render_template(""item.html"")
```
```
<a href=""{{ url_for(???) }}"">This item from another source</a>
<a href=""{{ url_for(???) }}"">Different item from the same source</a>
```

Currently, request.endpoint and request.view_args may be used to construct such urls, but it's cumbersome if done generic way:

```
<a href=""{{ url_for(request.endpoint, *dict(request.view_args, source=""another"")) }}"">This item from another source</a>
<a href=""{{ url_for(request.endpoint, *dict(request.view_args, item=""different"")) }}"">Different item from the same source</a>
```

So I propose to add ```url_for_self()``` function which does it in simple way. I've implemented it like this for myself:

```
def url_for_self(**args):
    return flask.url_for(flask.request.endpoint, **dict(flask.request.view_args, **args))

app.jinja_env.globals['url_for_self'] = url_for_self
```

This simplifies above mentioned template code into much more readable:

```
<a href=""{{ url_for_self(source=""another"") }}"">This item from another source</a>
<a href=""{{ url_for_self(item=""different"") }}"">Different item from the same source</a>
```

Note that this allows both adding, modifying and clearing (with ```foo=None```) parameters."
2110,Doubt in flask session.py save_session method,2016-12-14T15:12:28Z,2016-12-14T15:13:38Z,,,,"On line #340 in sessions.py, I see that session.modified is being checked AFTER the session object has already been evaluated to False. Is that a bug? How does it work otherwise?

https://github.com/pallets/flask/blob/master/flask/sessions.py#L340"
2109,"app.run(host, port) and SERVER_NAME should correspond to where flask is actually running",2016-12-14T12:58:31Z,2017-05-19T19:55:09Z,,,,"Assuming the SERVER_NAME config variable is configured as '0.0.0.0:5555':

1) Calling app.run(host=None, port=None) results in flask running on http://127.0.0.1:5555/
2) Calling app.run(host='127.0.0.1', port=5000) results in flask running on http://127.0.0.1:5000/

In both cases the SERVER_NAME config variable does not correspond to where flask is actually running.

The host and port parameters in app.run() must of course take precedence, but should be set according to the SERVER_NAME config variable if present.

The current implementation in app.run():

    if host is None:
        host = '127.0.0.1'
    if port is None:
        server_name = self.config['SERVER_NAME']
        if server_name and ':' in server_name:
            port = int(server_name.rsplit(':', 1)[1])
        else:
            port = 5000

Could be replaced by the following:

    _host = '127.0.0.1'
    _port = 5000
    servername = self.config['SERVER_NAME']
    if server_name:
        if server_name and ':' in server_name:
            _host, _port = servername.split(':', 1)
    if host is None:
        host = _host
    if port is None:
        port = _port

The following can be used to make sure the SERVER_NAME config variable corresponds to where flask is actually running:

    if servername:
        self.config['SERVER_NAME'] = host + ':' + port
"
2108,Using absolute path in FLASK_APP can't run `flask db init` cli module error,2016-12-14T02:26:26Z,2016-12-26T16:33:57Z,,ImportError,"ImportError: No module named 'D'","when I specify absolute path like this `D:\personal\prjs\cfblog2\cfblog2\app.py` in FLASK_APP, run `flask db init` will raise a exception:
```
Traceback (most recent call last):
  File ""c:\userprograms\python35\Lib\runpy.py"", line 184, in _run_module_as_main
    ""__main__"", mod_spec)
  File ""c:\userprograms\python35\Lib\runpy.py"", line 85, in _run_code
    exec(code, run_globals)
  File ""D:\personal\local\cfblog2\lib\site-packages\flask\__main__.py"", line 15, in <module>
    main(as_module=True)
  File ""D:\personal\local\cfblog2\lib\site-packages\flask\cli.py"", line 479, in main
    cli.main(args=args, prog_name=name)
  File ""D:\personal\local\cfblog2\lib\site-packages\flask\cli.py"", line 346, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""D:\personal\local\cfblog2\lib\site-packages\click\core.py"", line 696, in main
    rv = self.invoke(ctx)
  File ""D:\personal\local\cfblog2\lib\site-packages\click\core.py"", line 1060, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File ""D:\personal\local\cfblog2\lib\site-packages\click\core.py"", line 1060, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File ""D:\personal\local\cfblog2\lib\site-packages\click\core.py"", line 889, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File ""D:\personal\local\cfblog2\lib\site-packages\click\core.py"", line 534, in invoke
    return callback(*args, **kwargs)
  File ""D:\personal\local\cfblog2\lib\site-packages\click\decorators.py"", line 17, in new_func
    return f(get_current_context(), *args, **kwargs)
  File ""D:\personal\local\cfblog2\lib\site-packages\flask\cli.py"", line 229, in decorator
    with __ctx.ensure_object(ScriptInfo).load_app().app_context():
  File ""D:\personal\local\cfblog2\lib\site-packages\flask\cli.py"", line 210, in load_app
    rv = locate_app(self.app_import_path)
  File ""D:\personal\local\cfblog2\lib\site-packages\flask\cli.py"", line 90, in locate_app
    __import__(module)
ImportError: No module named 'D'
```
It seems like function `locate_app` can't handle win-style path correctly.

And also please consider using command-line arguments to specify flask startup file/module instead of using environment.
"
2107,API exception pattern docs do not mention PROPAGATE_EXCEPTIONS,2016-12-06T16:33:07Z,2017-05-30T13:59:14Z,,,,"http://flask.pocoo.org/docs/0.11/patterns/apierrors/

...discusses a pattern for defining and catching custom exceptions. However, this pattern does not work unless PROPAGATE_EXCEPTIONS is set, because the exception gets eaten and turned into a 500.

Confusingly it will work in DEBUG=True mode then break in production.

Can the docs be updated? Or am I missing something?"
2106,Invalid Host header returns HTTP/500 insetad of HTTP/400,2016-12-05T12:01:28Z,2017-05-22T17:22:06Z,,,,"test.py:

```from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello, World!'
```

run:

```
$> FLASK_APP=test.py flask run
 * Serving Flask app ""test""
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
```

query:

```
$> curl localhost:5000 -H ""Host: '`python -c 'print \""\xbf\""'`"" -i
HTTP/1.0 500 INTERNAL SERVER ERROR
Content-Type: text/html
Content-Length: 291
Server: Werkzeug/0.11.11 Python/2.7.12
Date: Mon, 05 Dec 2016 11:57:46 GMT

<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">
<title>500 Internal Server Error</title>
<h1>Internal Server Error</h1>
<p>The server encountered an internal error and was unable to complete your request.  Either the server is overloaded or there is an error in the application.</p>
```

server log:
```
127.0.0.1 - - [05/Dec/2016 12:57:46] ""GET / HTTP/1.1"" 500 -
Error on request:
Traceback (most recent call last):
  File ""/private/tmp/venv/lib/python2.7/site-packages/werkzeug/serving.py"", line 193, in run_wsgi
    execute(self.server.app)
  File ""/private/tmp/venv/lib/python2.7/site-packages/werkzeug/serving.py"", line 181, in execute
    application_iter = app(environ, start_response)
  File ""/private/tmp/venv/lib/python2.7/site-packages/flask/app.py"", line 2000, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/private/tmp/venv/lib/python2.7/site-packages/flask/app.py"", line 1983, in wsgi_app
    ctx = self.request_context(environ)
  File ""/private/tmp/venv/lib/python2.7/site-packages/flask/app.py"", line 1944, in request_context
    return RequestContext(self, environ)
  File ""/private/tmp/venv/lib/python2.7/site-packages/flask/ctx.py"", line 242, in __init__
    self.url_adapter = app.create_url_adapter(self.request)
  File ""/private/tmp/venv/lib/python2.7/site-packages/flask/app.py"", line 1771, in create_url_adapter
    server_name=self.config['SERVER_NAME'])
  File ""/private/tmp/venv/lib/python2.7/site-packages/werkzeug/routing.py"", line 1327, in bind_to_environ
    query_args=query_args)
  File ""/private/tmp/venv/lib/python2.7/site-packages/werkzeug/routing.py"", line 1239, in bind
    raise BadHost()
BadHost: 400: Bad Request
```

I'm not sure if this issue should be created here or on the werkzeug repository.

Anyway, I think a HTTP/400 should be returned to the client instead of a HTTP/500."
2105,Warn when cookie domain is set to an IP,2016-12-04T22:04:34Z,2017-05-14T05:00:55Z,,,,"Possible solution for issue #2007, it gives a warning message when an IP is set as SESSION_COOKIE_DOMAIN as user untitaker asked us to do, SERVER_DOMAIN isn't checked because he didn't remembered why it was needed, but the function is_IP in /flask/helpers is prepared to it. If you have any doubt feel free to ask."
2104,Happy new year 2016,2016-12-03T16:13:51Z,2016-12-03T17:27:21Z,,,,"Quickly, before 2017 comes..."
2103,fix unclosed p tag,2016-12-03T08:54:48Z,2016-12-03T09:26:13Z,,,,
2102,Validate Flaskr HTML,2016-11-29T15:08:01Z,2016-11-29T15:09:14Z,,,,
2101,Authenticating with NTLM,2016-11-28T11:42:23Z,2016-11-28T14:13:59Z,,,,"How can I authenticate a user with NTLM Authentication in Windows?

I have a Python Flask Application hosted in IIS server with Windows Authentication enabled. When a user visits the site within our network I want the user to be auto logged in else redirect the user to login page.

How can this be achieved?"
2100,"Header issue with many body request (put, post, etc)",2016-11-25T11:47:44Z,2016-12-02T19:02:47Z,,,,"Hi everyone, i have been seeing this issue some days intermittently.

I have some methods with request.method = POST, but when i want to resend the same request to the same endpoint, there is an issue with the request.method and Flask throws Method not Allowed.

`@app.route('/api/pause', methods=['POST'])`
`json = {""signature"":""1234"", ""value"":""b""}`

The first time was good and data was printed on console: `print request.json`

but the second time (i am doing the requests from Postman and this time i have changed value for a) i can see this on log:

`{""signature"":""1234"",""value"":""b""}POST /api/pause HTTP/1.1"" 405 -`

the third time i can see this on log:

`{""signature"":""1234"",""value"":""a""}POST /api/pause HTTP/1.1"" 405 -`

So, i do not know why Flask is inserting the previous POST values at the request.method and of course it throws Method Not Allowed, because pause method has not this allowed.

Note: I tried with or without threaded Flask option.

Do you know why i have this problem ? It is so important because i can not create a good API without POST or PUT as you would think.
"
2099,Problems with unicode,2016-11-24T12:35:18Z,2016-12-02T17:43:29Z,,,,"Hi

Looks like flask works different than plain python with Unicode. Let me explain

If i assign an unicode string to a parameter, (test=""%$£"") it works fine

When i run this code as part of a flask execution, i have an error. UnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 3: ordinal not in range(128)

I can encode this in utf-8, but i would like to understand why the behaviour is different using flask?

Thanks

"
2098,add rails style model,2016-11-24T03:25:18Z,2016-11-24T07:33:20Z,,,,"now, when we want to operate the model, we have to define the database model every time, whether we can add some code to the flask, so that we do not need to define the database like the cakephp model style...."
2097,Fix typo: star => start,2016-11-22T01:22:30Z,2016-11-22T02:57:45Z,,,,
2096,@app.teardown_appcontext fires before request finishes.,2016-11-21T16:54:17Z,2016-11-21T17:03:25Z,,,,"The function I designated as `@app.teardown_appcontext` is running before the view code runs - at least according to my own investigations. Printing something in `teardown_appcontext` and something in a view body results in the former appearing before the latter, at the very least. Using `teardown_request`, however, works as expected.

[From the documentation](http://flask.pocoo.org/docs/0.11/api/#flask.Flask.teardown_appcontext), I would've expected `teardown_appcontext` to fire at roughly the same time (""These functions are typically also called when the request context is popped""), except it'd also work with `with app.app_context`. It seems that's not the case, however!

I'm on Python 2.7.12 with Flask 0.11.1 and Werkzeug 0.11.11."
2095,added blank line before def,2016-11-21T11:45:59Z,2016-11-21T11:47:16Z,,,,added blank line before def
2094,added whitespace before key,2016-11-21T11:33:37Z,2016-11-21T11:34:18Z,,,,added whitespace before key
2093,use dict instead of if/else logic,2016-11-20T23:33:30Z,2016-12-21T20:07:58Z,,,,
2092,Add routes command to flask cli,2016-11-20T18:45:09Z,2017-04-26T17:35:09Z,cli,,,"Running `flask routes` will list all registered routes for a given app, sorted by endpoint

Inspired by [`mix phoenix.routes`](http://www.phoenixframework.org/docs/routing), this will display a list of all registered routes in an application. This is basically #1446, but I have updated it and made it ""dumber"". 

NB: I know that the other PR is old and there doesn't seem to be much enthusiasm for it, but I do think this is useful to have to get a high level overview of application routes, especially if they are being generated programmatically. 

Example output:

```sh
$ flask routes
api.me                    GET              /api/users/me/
api.users                 GET              /api/users/
                          POST             /api/users/
                          PUT, DELETE, GET /api/users/<pk>
api.users_schema          GET              /api/users/schema/
auth_blueprint.authorized GET              /login/authorized
auth_blueprint.do_login   GET              /do-login
auth_blueprint.login      GET              /login
auth_blueprint.logout     GET              /logout
auth_blueprint.lr_test    GET              /lr
static                    GET              /static/<path:filename>
```"
2091,small refactoring of  is_json function.,2016-11-17T20:48:06Z,2016-11-17T20:56:32Z,,,,
2090,remove redundant parameter,2016-11-17T19:53:22Z,2016-11-17T20:02:09Z,,,,
2089,Ignore cache on request.get_json(cache=False) call,2016-11-17T15:18:53Z,2016-12-21T20:08:39Z,,,,"Removes usage of `_cached_json` property when `get_json` is called with
disabled cache argument. (closes #2087)"
2088,Add link to AWS EB Flask tutorial,2016-11-17T14:02:06Z,2016-11-18T14:38:31Z,,,,
2087,Do not use cache when `Request.get_json(cache=False)` is called.,2016-11-17T13:26:11Z,2016-12-21T20:08:39Z,,,,"The `_cached_json` property is used even when arguments change.

Proposal:
```diff
         rv = getattr(self, '_cached_json', _missing)
-        if rv is not _missing:
+        if cache and rv is not _missing:
              return rv
```

Test case:
```python
# POST with an invalid JSON data
assert request.get_json(silent=True) is None
with pytest.raises(BadRequest):
    request.get_json(silent=False, cache=False)
```"
2086,large file uploads eating up memory,2016-11-16T16:35:11Z,2017-06-02T15:00:50Z,,,,"Hi, 

when handling large file uploads +300MB, the files seem to be cached in memory till the upload is finished. This is not very practical.
The [doc](http://flask.pocoo.org/docs/0.11/patterns/fileuploads) states: 

>(...) So how exactly does Flask handle uploads? Well it will store them in the webserver’s memory if the files are reasonable small otherwise in a temporary location

I am unsure on how to interpret this, but as I saw it: cache the data on disk till the file is uploaded, before moving on. :-)

So my question is: is storing everything in memory during upload, intended behaviour?

To give a little more details on the code: 

```
def store_upload(project_id):
    file = request.files['file']
    # boiler plate checks ...
    file.save(os.path.join(destination_base, destination))  #save file to decent location
    return _response_stuff()
```
I am using python 3.5, flask 0.11.1. 

PS: I went through #pocoo and github issues here, but couldn't find any answer matching my request

Thanks!
"
2085,Fix rST rendering of env var,2016-11-15T09:13:24Z,2016-11-15T10:57:09Z,,,,This was broken in https://github.com/pallets/flask/commit/ad011bc32d7b9160354efafcd43e20f7042a6a13#diff-fd40cf2be7711772de9d8316da038cceR263
2084,Multiple filters in a single qurery,2016-11-14T07:05:53Z,2016-11-14T07:08:21Z,,,,"Hello I am working on a flask app and i want to creeate a query that has multiple filters in order to show the correct results within the same table:

example:
tab = session.query(Tabs).filter_by(column1 = hello).filter_by(column2 = world).all()

but none of the methods i am trying will work. 
BOTH of the definition columns are from the same table...."
2083,Application did not run with `flask run` with FLASK_DEBUG=1(But can run by using command`python -m flask run`) in Win10,2016-11-13T17:40:33Z,2016-12-09T18:10:54Z,,,,"Error message:
`d:\projects\cfblog2_env\scripts\python.exe: can't open file 'D:\projects\cfblog2_env\Scripts\flask': [Errno 2] No such file or directory`

Environment: Win 10, Py 3.5.2(VirtualEnv)，Flask 0.11
This error was came from '_reload.py' in werkzeug.It seems like when run with flask.exe, sys.executable still equal to python's exe path and sys.argv is something like this:`'D:\\projects\\cfblog2_env\\Scripts\\flask', 'run'`

I am not sure what cause this problem actually(werkzeug,packer of flask.exe or flask itself).But this error happend when I using flask. So I put the issuse here.

To whom has the same error, you can use`python -m flask run` for workaround.
And last, sorry for my poor english.
"
2082,Error handler support for generic HttpException,2016-11-09T11:17:04Z,2017-05-23T06:22:45Z,,,,"Flask supports setting HttpException as error handler class:

    app.register_error_handler(HTTPException, lambda error: jsonify(error=error.code, text=str(error)))

This fills `error_handler_spec` with something like this for any blueprint `{None: {None: lambda_function}}`

However, when finding the error handler it checks the error code which is e.g. 404 and ignores None, the error handler for any error, previously set by register_error_handler. It doesn't find 404, doesn't check for None in the dict and falls back to the default error handler which shouldn't happen."
2081,Added a link to instructions for PythonAnywhere,2016-11-07T17:50:45Z,2016-11-07T18:10:03Z,,,,The linked page is the normal help docs for people who know at least roughly how WSGI works.  We also have a tutorial at http://blog.pythonanywhere.com/121/ that explains (for beginners) how to build a web app using Flask and MySQL (plus git) but that's probably not the best fit for this page.
2080,switch to packaged sphinx theme,2016-11-04T06:03:31Z,2017-05-25T21:36:07Z,"docs, in progress",,,"I fixed up  flask-sphinx-themes so that it's an installable package. No longer need to copy files or use submodule, just `pip install Flask-Sphinx-Themes`."
2079,Flask doesn't require blinker,2016-11-03T23:11:27Z,2016-11-03T23:28:06Z,,,,We installed flask 0.11.1 from pip today. Our application would not start unless we also installed blinker via pip. Seems like blinker should be in your requires.txt.
2078,Adding documentation on best practices for Server-sent events and WebSockets,2016-11-03T01:34:42Z,2017-06-01T04:16:44Z,,,,"Earlier this year I did some development involving Server-sent events (SSE) using Flask. I found there is no official documentation on how to best handle this. Since the specification is simple I ended up implementing it myself. However, I think there is room for improvement.

I find there are a couple of problems with working with SSE and Flask:

- Development environment requires using a separate service or threading. Using a separate service adds complexity and using threading disallows the use of frame inspection in the built-in Don't Panic debugger for all requests.
- There is no official information on best practices when it comes to deployment of SSE. Should it be a separate service or can it be included in the application? Especially for smaller applications I find the complexity of introducing a separate service for managing SSE adds a lot of complexity to an otherwise simple project.

The same points hold true for WebSockets as they are similar."
2077,Mention existence of register_error_handler in errorpages.rst,2016-11-02T20:37:55Z,2017-04-30T15:48:23Z,docs,,,See https://github.com/pallets/flask/issues/1837 for context.
2076,FIX py.test import error,2016-11-02T13:55:14Z,2016-11-02T14:03:10Z,,,,
2075,Fix LogRecord class reference,2016-11-02T03:22:16Z,2016-11-02T04:04:20Z,,,,
2074,Update errorhandling.rst for readability,2016-11-02T02:53:55Z,2016-11-02T02:58:23Z,,,,
2073,Parameterizing test,2016-11-01T20:46:57Z,2016-11-03T17:11:24Z,,,,
2072,Remove busy-work.,2016-11-01T13:57:19Z,2016-11-01T14:35:17Z,,,,"It is entirely sufficient to walk the MRO of the exception class, no need to check for classes re-appearing later on, no need to add the MRO of any superclass.

* Python refuses point-blank to create a class with a circular MRO.
* All classes in a superclass MRO *already* appear in the MRO of the derived type. Re-adding the contents of a superclass MRO is doing double work."
2071,Adding coverage generation to tox,2016-10-31T20:24:19Z,2016-10-31T22:10:27Z,,,,Adds the ability to measure code coverage via unit tests.
2070,Update docstring for errorhandler(),2016-10-31T15:27:31Z,2016-10-31T16:41:38Z,,,,update the `:param` definition for the `errorhandler()` decorator in `app.py`.
2069,Development,2016-10-30T23:42:52Z,2016-10-30T23:45:09Z,,,,"2º  assignment
"
2068,Fixes import statement in flaskr,2016-10-30T01:40:17Z,2016-10-30T13:34:50Z,,,,"- `from flaskr.flaskr import app` in flaskr/**init**.py
  causes an import error with Python 2
- The relative import now used works for py2 and py3

Ref: https://github.com/pallets/flask/issues/2058 

The issue was that the absolute import `from flaskr.flaskr import app` works in python 3 but not python 2. While there is probably a simple answer why, for now, this relative import works on both.
"
2067,Capitalize occurrences of 'flask',2016-10-28T02:45:11Z,2016-11-02T01:52:32Z,,,,"also, minor typo fix.
"
2066,Process responses generated by exceptions,2016-10-26T22:36:59Z,2016-10-27T18:06:11Z,,,,"When handling exceptions, some post processing on requests are not being called, such as `after_request` and `request_finished`.
This can be quite a problem in production environments when things such as logging and consistant headers are required.

For example, let's take this simple application:

``` python
from flask import Flask, request

from mysite.business_logic import do_work
from mysite.logging import log_req_res

app = Flask(__name__)

@app.route('/')
def index():
    return do_work(request)


@app.errorhandler(500)
def error_handler(exception):
    # Render a nice error message here
    pass


@app.after_request
def add_response_headers(response):
    response.headers['P3P'] = 'CP=""IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT""'


@app.after_request
def log_request_response(response)
    from flask import request

    log_req_res(request, response)
    return response
```

One day, a change is made within `mysite.business_logic:do_work` that causes it to raise an exception to some users. Because of the current way things are working, the req/res will not be logged as well as not be applied the P3P header.
Currently there is no way to intercept ALL requests and responses for these use cases.

A simple solution, proposd in this PR is to process exception responses similarly to successful responses. This could be a breaking change to some library consumers so I'm putting it up as an RFC.

[tests to come soon]
"
2065,Cloning flask fails with Git config transfer.fsckobjects = true; repository broken?,2016-10-26T13:37:47Z,2016-10-26T13:46:01Z,,`error,`error: object 0b404df8c030cdeaca7b373956c3a697efd32f78: zeroPaddedFilemode: contains zero-padded file modes`.,"Hi!

One of my machines has Git configured to fsck objects on transfer. On the Flask repository, it errors with:
`error: object 0b404df8c030cdeaca7b373956c3a697efd32f78: zeroPaddedFilemode: contains zero-padded file modes`.
Without fsck, cloning works fine.

To reproduce:

```
$ git clone https://github.com/pallets/flask.git
Cloning into 'flask'...
remote: Counting objects: 12684, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 12684 (delta 0), reused 0 (delta 0), pack-reused 12680
Receiving objects: 100% (12684/12684), 3.56 MiB | 4.44 MiB/s, done.
Resolving deltas: 100% (8794/8794), done.

$ rm -Rf flask/

$ git config --global transfer.fsckobjects true

$ cat ~/.gitconfig 
[transfer]
        fsckobjects = true

$ git clone https://github.com/pallets/flask.git
Cloning into 'flask'...
remote: Counting objects: 12684, done.
remote: Compressing objects: 100% (4/4), done.
error: object 0b404df8c030cdeaca7b373956c3a697efd32f78: zeroPaddedFilemode: contains zero-padded file modes
fatal: Error in object
fatal: index-pack failed

# git --version
git version 2.10.1
```

I'd be curious if you can reproduce it or if this is a bug in Git or something.
"
2064,"why loop redirect with redirect('{0}/{1}'.format(site, page_name), code=301)?",2016-10-26T09:24:19Z,2016-10-26T09:27:49Z,,,,"- work right

`return redirect('{0}/{1}'.format('http://www.newweb.com/', page_name), code=301)`
- work loop

`return redirect('{0}/{1}'.format(app.config.get('NEW_SERVER_NAME'), page_name), code=301)`
- all my code

``` python
app = Flask(__name__)
app.config.update(NEW_SERVER_NAME='www.newweb.net')


@app.route('/<path:page_name>/')
@app.route('/')
def index(page_name=''):
    print '''
    UserAgent: {}
    Method   : {}
    GetArgs  : {}
    PostArgs : {}
    '''.format(
        request.headers.get('User-Agent'),
        request.method,
        request.args,
        request.form,
    )
    return redirect('{0}/{1}'.format(app.config.get('NEW_SERVER_NAME'), page_name), code=301)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=9000, debug=app.debug)
```

> 127.0.0.1 - - [26/Oct/2016 17:20:03] ""GET /www.newweb.net/www.newweb.net/www.new
> web.net/www.newweb.net/www.newweb.net/www.newweb.net/www.newweb.net/www.newweb.n
> et/www.newweb.net/www.newweb.net/asdasdas/asdasdasda HTTP/1.1"" 301 -
> 
> i dont know why redirect with loop and before redirect code not running,please help, thank you very much~
"
2063,grammar fix,2016-10-24T11:20:08Z,2016-10-24T11:20:54Z,,,,
2062,add_resource does not preserve api function docstring,2016-10-21T02:38:15Z,2016-10-21T03:20:46Z,,,,"I'm trying to auto generate API help using this piece of code:

```
@app.route('/api/help', methods=['GET'])
def api_help():
    """"""Returns all registered APIs available in this application.""""""
    func_list = {}
    for rule in app.url_map.iter_rules():
        if rule.endpoint != 'static':
            func_list[rule.rule] = app.view_functions[rule.endpoint].__doc__
    return jsonify(func_list)
```

It relies on `__doc__` of a function and works fine for APIs defined with a `route` decorator:

`@app.route('/someapi'...`

However, when a route is registered with `add_resource` the docstring is lost.

The help api returns data in this format:

```
{
  ""/api/help"": ""Returns all registered APIs available in this application."", 
  ""someapi"": null
}
```

tried on latest versions:

> Name: Werkzeug
> Version: 0.11.11
> 
> Name: Flask
> Version: 0.11.1
> 
> python --version
> Python 3.5.1 :: Anaconda 4.0.0 (64-bit)
"
2061,Correct grammar,2016-10-19T03:18:42Z,2016-11-02T01:52:54Z,,,,
2060,"View.dispatch_request doesn't take args, raises error about that instead of not implemented error",2016-10-18T10:01:23Z,2016-10-19T07:30:04Z,,,,"the dispatch_request() does not have any parameters. 
"
2059,Fix safe_join test behavior on Windows,2016-10-17T13:10:32Z,2017-05-16T00:11:35Z,testing,,,"this is for resolution of https://github.com/pallets/flask/issues/2033

Base directory test is not extended to windows as not sure if they pose a security risk or not or what can the resolution be. Currentl base directory tests raise NotFound exception
"
2058,The file/path provided (flaskr) does not appear to exist. ,2016-10-15T02:47:11Z,2017-02-28T19:57:53Z,,Error,"Error: The file/path provided (flaskr) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py","The issue tracker is a tool to address bugs.
Please use the #pocoo IRC channel on freenode or Stack Overflow for questions.

~/flask-master/examples/flaskr$ flask run
Usage: flask run [OPTIONS]

Error: The file/path provided (flaskr) does not appear to exist.  Please verify the path is correct.  If app is not on PYTHONPATH, ensure the extension is .py
"
2057,"add 'caution' section to docs, workaround for zero-padded file modes",2016-10-14T05:29:03Z,2016-10-14T08:13:42Z,,,,"As requested in issue #2029, I added a section to the contributing file in case anyone has problems with cloning or pushing the repo.
@untitaker 
"
2056,Installation documentation for Windows: minor typo,2016-10-12T19:01:27Z,2016-10-12T19:15:01Z,,,,"Where it says,
If you are a Windows user, the following command is for you:
$ venv\scripts\activate

The word 'scripts' should be capitalised, as 'Scripts'.
"
2055,Updated Celery pattern,2016-10-11T13:32:48Z,2017-05-15T19:41:13Z,docs,,,"The given pattern caused Celery to lose the current Context.

```
> ~/celery/app/task.py(424)__call__()
-> try:
(Pdb) p self.request
<Context: {}>
```

And with this new pattern:

```
(Pdb) p self.request
<Context: {'called_directly': False, 'retries': 5, 'is_eager': True, 'loglevel': 0, 'delivery_info': {'is_eager': True}, 'args': (), 'callbacks': None, 'errbacks': None, 'kwargs': {}, 'logfile': None, 'id': '9fbd9fa0-1a42-4e70-9c52-558ad3bc9d72', 'headers': None}>
```

Note that I'm using Celery 3.1.24. The current pattern may be outdated (last change was 2013)
"
2054,flask CLOEXEC,2016-10-09T09:26:04Z,2016-10-09T10:56:52Z,,,,"How to solve the problem of file descriptors, flask as main thread, when the main thread to exit the child thread inheritance file descriptor problem?
"
2053,Add possible overriding of builtin cli cmds,2016-10-09T02:50:57Z,2017-05-27T15:48:28Z,cli,,,"This PR is in reference to #2020 (cc @davidism). Basically, a CLI command was checked if it was a builtin, and if so, it executed it. I've changed this to now wait until it sees if the same command exists in the user-created commands.

Also, the test I added works both with and without the changes, so definitely let me know what I'm missing.
"
2052,Address #2051: Fix flaskr import in flaskr/__init__.py,2016-10-08T18:17:23Z,2016-10-08T18:34:56Z,,,,
2051,flaskr project (in dev docs and on github) needs to use relative import in __init__.py for Python 3,2016-10-08T01:37:29Z,2016-10-08T18:35:01Z,,ImportError,ImportError: cannot import name 'app'`,"Currently, while following the dev docs or cloning the existing flaskr project on GitHub, it will not run in a Python 3 virtualenv. The error when running the cloned flaskr application is:

`Traceback (most recent call last):
  File ""/home/todd/flaskr/flask/examples/flaskr/env/lib/python3.5/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""/home/todd/flaskr/flask/examples/flaskr/flaskr/__init__.py"", line 1, in <module>
    from flaskr import app
ImportError: cannot import name 'app'`

This is the same error when following the docs to recreate the flaskr application. By modifying `flaskr/__init__.py` to include a relative import when using a Python 3 virtualenv, everything works fine.

That is, in `flaskr/__init__.py`, change:
`from flaskr import app`
to:
`from .flaskr import app`

(note the period)

At this point, I am still not comfortable contributing, nor do I know if this is the correct solution or if this has any implications for Python 2. Hence the issue, hoping someone else can confirm this is correct, or provide a better solution.
"
2050,Many 'requests.post' generates internal ImportError,2016-10-06T12:39:17Z,2016-11-04T17:45:32Z,,ImportError,ImportError: No module named test,"When running a script that performs several `requests.post` against flask's `app.py`, running in the background, various `ImportError`'s occur:

``` bash
Original exception was:
Traceback (most recent call last):
  File ""app.py"", line 32, in <module>
    app.run(host='0.0.0.0')
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 843, in run
    run_simple(host, port, self, **options)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 694, in run_simple
    inner()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 659, in inner
    srv.serve_forever()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 499, in serve_forever
    HTTPServer.serve_forever(self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 238, in serve_forever
    self._handle_request_noblock()
  File ""/usr/lib/python2.7/SocketServer.py"", line 297, in _handle_request_noblock
    self.handle_error(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 295, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 321, in process_request
    self.finish_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 334, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 649, in __init__
    self.handle()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 216, in handle
    rv = BaseHTTPRequestHandler.handle(self)
  File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 340, in handle
    self.handle_one_request()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 251, in handle_one_request
    return self.run_wsgi()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 193, in run_wsgi
    execute(self.server.app)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 181, in execute
    application_iter = app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 2000, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1991, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1746, in make_response
    rv = self.response_class.force_type(rv, request.environ)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/wrappers.py"", line 847, in force_type
    response = BaseResponse(*_run_wsgi_app(response, environ))
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/wrappers.py"", line 56, in _run_wsgi_app
    from werkzeug.test import run_wsgi_app as _run_wsgi_app
ImportError: No module named test
```

**Note:** a more complete [traceback](https://github.com/jeff1evesque/machine-learning/pull/2763#issuecomment-251584807) can be reviewed.
"
2049,Cannot run many 'requests.post' against 'app.py',2016-10-06T11:36:22Z,2016-10-06T12:08:34Z,,"AttributeError, ImportError","AttributeError: 'SQL' object has no attribute 'cursor', ImportError: No module named test","My application has automatic pytest on the travis ci, which implements `live_server`, so the app context only lives for the duration of the unit tests.  This contraption was devised using a series of docker containers.  Long story short, I didn't have time to replicate this automated process for my vagrant development environment.  So, I created some unit tests, which predicates on the following assumptions:
- create self contain vagrant vm with [my application](https://github.com/jeff1evesque/machine-learning)
  - download virtualbox with virtualbox guest
  - download vagrant
  - clone repository
  - finally run `cd /path/to/clone/repository && vagrant up`
- app context needs to be created by manually running `(cd /vagrant && python app.py &)`

Then, the problems begin happening when I run a series of `requests.post` against the flask app.  I run such processes by triggering my manual pytests, which does a combination of `assert` against multiple `requests.post`.  So, in the same vagrant vm, I would run `(cd /vagrant/test && pytest manual)`.  This would run any python scripts prefixed with `pytest_*.py`, or `configure_.*.py`, in the [`manual/`](https://github.com/jeff1evesque/machine-learning/tree/master/test/manual) directory.

When I run my manual unit tests one pass through, the [tests succeed](https://github.com/jeff1evesque/machine-learning/pull/2763#issuecomment-251582653), and as intended:

``` bash
vagrant@vagrant-ubuntu-trusty-64:/vagrant/test$ pytest manual
========================================= test session starts ==========================================
platform linux2 -- Python 2.7.6, pytest-3.0.3, py-1.4.31, pluggy-0.4.0
rootdir: /vagrant/test/manual, inifile: pytest.ini
plugins: flask-0.10.0
collected 20 items

manual/configure_database.py .
manual/configure_redis.py .
manual/authentication/pytest_crypto.py .
manual/authentication/pytest_validate_password.py .
manual/programmatic_interface/dataset_url/pytest_svm_dataset_url.py ....
manual/programmatic_interface/dataset_url/pytest_svr_dataset_url.py ....
manual/programmatic_interface/file_upload/pytest_svm_file_upload.py ....
manual/programmatic_interface/file_upload/pytest_svr_file_upload.py ....

====================================== 20 passed in 51.27 seconds ======================================
```

However, if I run the same tests again, without restarting flask, it breaks:

``` bash
vagrant@vagrant-ubuntu-trusty-64:/vagrant/test$ pytest manual
========================================= test session starts ==========================================
platform linux2 -- Python 2.7.6, pytest-3.0.3, py-1.4.31, pluggy-0.4.0
rootdir: /vagrant/test/manual, inifile: pytest.ini
plugins: flask-0.10.0
collected 20 items

manual/configure_database.py .
manual/configure_redis.py .
manual/authentication/pytest_crypto.py .
manual/authentication/pytest_validate_password.py .
manual/programmatic_interface/dataset_url/pytest_svm_dataset_url.py ....
manual/programmatic_interface/dataset_url/pytest_svr_dataset_url.py ....
manual/programmatic_interface/file_upload/pytest_svm_file_upload.py ....
manual/programmatic_interface/file_upload/pytest_svr_file_upload.py [2016-10-05 01:11:23,116] ERROR in app: Exception on /load-data/ [POST]
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1988, in wsgi_app
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1641, in full_dispatch_request
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1544, in handle_user_exception
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1639, in full_dispatch_request
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1625, in dispatch_request
  File ""/vagrant/interface/views.py"", line 85, in load_data
  File ""/vagrant/brain/load_data.py"", line 78, in load_data_new
  File ""/vagrant/brain/session/base_data.py"", line 129, in save_premodel_dataset
  File ""/vagrant/brain/session/data/save_dataset.py"", line 34, in dataset
  File ""/vagrant/brain/database/save_feature.py"", line 86, in save_feature
  File ""/vagrant/brain/database/db_query.py"", line 98, in sql_connect
AttributeError: 'SQL' object has no attribute 'cursor'
Traceback (most recent call last):
  File ""app.py"", line 32, in <module>
    app.run(host='0.0.0.0')
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 843, in run
    run_simple(host, port, self, **options)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 694, in run_simple
    inner()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 659, in inner
    srv.serve_forever()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 499, in serve_forever
    HTTPServer.serve_forever(self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 238, in serve_forever
    self._handle_request_noblock()
  File ""/usr/lib/python2.7/SocketServer.py"", line 297, in _handle_request_noblock
    self.handle_error(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 295, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 321, in process_request
    self.finish_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 334, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 649, in __init__
    self.handle()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 216, in handle
    rv = BaseHTTPRequestHandler.handle(self)
  File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 340, in handle
    self.handle_one_request()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 251, in handle_one_request
    return self.run_wsgi()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 193, in run_wsgi
    execute(self.server.app)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 181, in execute
    application_iter = app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 2000, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1991, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1746, in make_response
    rv = self.response_class.force_type(rv, request.environ)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/wrappers.py"", line 847, in force_type
    response = BaseResponse(*_run_wsgi_app(response, environ))
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/wrappers.py"", line 56, in _run_wsgi_app
    from werkzeug.test import run_wsgi_app as _run_wsgi_app
ImportError: No module named test
Error in sys.excepthook:
Traceback (most recent call last):
  File ""/usr/lib/python2.7/dist-packages/apport_python_hook.py"", line 63, in apport_excepthook
    from apport.fileutils import likely_packaged, get_recent_crashes
  File ""/usr/lib/python2.7/dist-packages/apport/__init__.py"", line 5, in <module>
    from apport.report import Report
ImportError: No module named report

Original exception was:
Traceback (most recent call last):
  File ""app.py"", line 32, in <module>
    app.run(host='0.0.0.0')
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 843, in run
    run_simple(host, port, self, **options)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 694, in run_simple
    inner()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 659, in inner
    srv.serve_forever()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 499, in serve_forever
    HTTPServer.serve_forever(self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 238, in serve_forever
    self._handle_request_noblock()
  File ""/usr/lib/python2.7/SocketServer.py"", line 297, in _handle_request_noblock
    self.handle_error(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 295, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 321, in process_request
    self.finish_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 334, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 649, in __init__
    self.handle()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 216, in handle
    rv = BaseHTTPRequestHandler.handle(self)
  File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 340, in handle
    self.handle_one_request()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 251, in handle_one_request
    return self.run_wsgi()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 193, in run_wsgi
    execute(self.server.app)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 181, in execute
    application_iter = app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 2000, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1991, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1746, in make_response
    rv = self.response_class.force_type(rv, request.environ)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/wrappers.py"", line 847, in force_type
    response = BaseResponse(*_run_wsgi_app(response, environ))
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/wrappers.py"", line 56, in _run_wsgi_app
    from werkzeug.test import run_wsgi_app as _run_wsgi_app
ImportError: No module named test
FFFF

=============================================== FAILURES ===============================================
____________________________________________ test_data_new _____________________________________________

    def test_data_new():
        '''@test_data_new

        This method tests the 'data_new' session.

        '''

>       assert requests.post(
            endpoint_url,
            headers=headers,
            data=get_sample_json('svr-data-new.json', 'svr')
        )

manual/programmatic_interface/file_upload/pytest_svr_file_upload.py:71:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/usr/lib/python2.7/dist-packages/requests/api.py:88: in post
    return request('post', url, data=data, **kwargs)
/usr/lib/python2.7/dist-packages/requests/api.py:44: in request
    return session.request(method=method, url=url, **kwargs)
/usr/lib/python2.7/dist-packages/requests/sessions.py:455: in request
    resp = self.send(prep, **send_kwargs)
/usr/lib/python2.7/dist-packages/requests/sessions.py:558: in send
    r = adapter.send(request, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <requests.adapters.HTTPAdapter object at 0x7fe471358810>, request = <PreparedRequest [POST]>
stream = False, timeout = <urllib3.util.Timeout object at 0x7fe4706dc0d0>, verify = True, cert = None
proxies = OrderedDict()

    def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):
        """"""Sends PreparedRequest object. Returns Response object.

            :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
            :param stream: (optional) Whether to stream the request content.
            :param timeout: (optional) The timeout on the request.
            :param verify: (optional) Whether to verify SSL certificates.
            :param cert: (optional) Any user-provided SSL certificate to be trusted.
            :param proxies: (optional) The proxies dictionary to apply to the request.
            """"""

        conn = self.get_connection(request.url, proxies)

        self.cert_verify(conn, request.url, verify, cert)
        url = self.request_url(request, proxies)
        self.add_headers(request)

        chunked = not (request.body is None or 'Content-Length' in request.headers)

        if stream:
            timeout = TimeoutSauce(connect=timeout)
        else:
            timeout = TimeoutSauce(connect=timeout, read=timeout)

        try:
            if not chunked:
                resp = conn.urlopen(
                    method=request.method,
                    url=url,
                    body=request.body,
                    headers=request.headers,
                    redirect=False,
                    assert_same_host=False,
                    preload_content=False,
                    decode_content=False,
                    retries=self.max_retries,
                    timeout=timeout
                )

            # Send the request.
            else:
                if hasattr(conn, 'proxy_pool'):
                    conn = conn.proxy_pool

                low_conn = conn._get_conn(timeout=timeout)

                try:
                    low_conn.putrequest(request.method,
                                        url,
                                        skip_accept_encoding=True)

                    for header, value in request.headers.items():
                        low_conn.putheader(header, value)

                    low_conn.endheaders()

                    for i in request.body:
                        low_conn.send(hex(len(i))[2:].encode('utf-8'))
                        low_conn.send(b'\r\n')
                        low_conn.send(i)
                        low_conn.send(b'\r\n')
                    low_conn.send(b'0\r\n\r\n')

                    r = low_conn.getresponse()
                    resp = HTTPResponse.from_httplib(
                        r,
                        pool=conn,
                        connection=low_conn,
                        preload_content=False,
                        decode_content=False
                    )
                except:
                    # If we hit any problems here, clean up the connection.
                    # Then, reraise so that we can handle the actual exception.
                    low_conn.close()
                    raise
                else:
                    # All is well, return the connection to the pool.
                    conn._put_conn(low_conn)

        except socket.error as sockerr:
            raise ConnectionError(sockerr)

        except MaxRetryError as e:
>           raise ConnectionError(e)
E           ConnectionError: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /load-data/ (Caused by <class 'httplib.BadStatusLine'>: '')

/usr/lib/python2.7/dist-packages/requests/adapters.py:378: ConnectionError
___________________________________________ test_data_append ___________________________________________

    def test_data_append():
        '''@test_data_append

        This method tests the 'data_append' session.

        '''

>       assert requests.post(
            endpoint_url,
            headers=headers,
            data=get_sample_json('svr-data-append.json', 'svr')
        )

manual/programmatic_interface/file_upload/pytest_svr_file_upload.py:85:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/usr/lib/python2.7/dist-packages/requests/api.py:88: in post
    return request('post', url, data=data, **kwargs)
/usr/lib/python2.7/dist-packages/requests/api.py:44: in request
    return session.request(method=method, url=url, **kwargs)
/usr/lib/python2.7/dist-packages/requests/sessions.py:455: in request
    resp = self.send(prep, **send_kwargs)
/usr/lib/python2.7/dist-packages/requests/sessions.py:558: in send
    r = adapter.send(request, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <requests.adapters.HTTPAdapter object at 0x7fe4706fa5d0>, request = <PreparedRequest [POST]>
stream = False, timeout = <urllib3.util.Timeout object at 0x7fe4706fa8d0>, verify = True, cert = None
proxies = OrderedDict()

    def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):
        """"""Sends PreparedRequest object. Returns Response object.

            :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
            :param stream: (optional) Whether to stream the request content.
            :param timeout: (optional) The timeout on the request.
            :param verify: (optional) Whether to verify SSL certificates.
            :param cert: (optional) Any user-provided SSL certificate to be trusted.
            :param proxies: (optional) The proxies dictionary to apply to the request.
            """"""

        conn = self.get_connection(request.url, proxies)

        self.cert_verify(conn, request.url, verify, cert)
        url = self.request_url(request, proxies)
        self.add_headers(request)

        chunked = not (request.body is None or 'Content-Length' in request.headers)

        if stream:
            timeout = TimeoutSauce(connect=timeout)
        else:
            timeout = TimeoutSauce(connect=timeout, read=timeout)

        try:
            if not chunked:
                resp = conn.urlopen(
                    method=request.method,
                    url=url,
                    body=request.body,
                    headers=request.headers,
                    redirect=False,
                    assert_same_host=False,
                    preload_content=False,
                    decode_content=False,
                    retries=self.max_retries,
                    timeout=timeout
                )

            # Send the request.
            else:
                if hasattr(conn, 'proxy_pool'):
                    conn = conn.proxy_pool

                low_conn = conn._get_conn(timeout=timeout)

                try:
                    low_conn.putrequest(request.method,
                                        url,
                                        skip_accept_encoding=True)

                    for header, value in request.headers.items():
                        low_conn.putheader(header, value)

                    low_conn.endheaders()

                    for i in request.body:
                        low_conn.send(hex(len(i))[2:].encode('utf-8'))
                        low_conn.send(b'\r\n')
                        low_conn.send(i)
                        low_conn.send(b'\r\n')
                    low_conn.send(b'0\r\n\r\n')

                    r = low_conn.getresponse()
                    resp = HTTPResponse.from_httplib(
                        r,
                        pool=conn,
                        connection=low_conn,
                        preload_content=False,
                        decode_content=False
                    )
                except:
                    # If we hit any problems here, clean up the connection.
                    # Then, reraise so that we can handle the actual exception.
                    low_conn.close()
                    raise
                else:
                    # All is well, return the connection to the pool.
                    conn._put_conn(low_conn)

        except socket.error as sockerr:
            raise ConnectionError(sockerr)

        except MaxRetryError as e:
>           raise ConnectionError(e)
E           ConnectionError: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /load-data/ (Caused by <class 'socket.error'>: [Errno 111] Connection refused)

/usr/lib/python2.7/dist-packages/requests/adapters.py:378: ConnectionError
_________________________________________ test_model_generate __________________________________________

    def test_model_generate():
        '''@test_model_generate

        This method tests the 'model_generate' session.

        '''

>       assert requests.post(
            endpoint_url,
            headers=headers,
            data=get_sample_json('svr-model-generate.json', 'svr')
        )

manual/programmatic_interface/file_upload/pytest_svr_file_upload.py:99:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/usr/lib/python2.7/dist-packages/requests/api.py:88: in post
    return request('post', url, data=data, **kwargs)
/usr/lib/python2.7/dist-packages/requests/api.py:44: in request
    return session.request(method=method, url=url, **kwargs)
/usr/lib/python2.7/dist-packages/requests/sessions.py:455: in request
    resp = self.send(prep, **send_kwargs)
/usr/lib/python2.7/dist-packages/requests/sessions.py:558: in send
    r = adapter.send(request, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <requests.adapters.HTTPAdapter object at 0x7fe4706f1ed0>, request = <PreparedRequest [POST]>
stream = False, timeout = <urllib3.util.Timeout object at 0x7fe4706939d0>, verify = True, cert = None
proxies = OrderedDict()

    def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):
        """"""Sends PreparedRequest object. Returns Response object.

            :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
            :param stream: (optional) Whether to stream the request content.
            :param timeout: (optional) The timeout on the request.
            :param verify: (optional) Whether to verify SSL certificates.
            :param cert: (optional) Any user-provided SSL certificate to be trusted.
            :param proxies: (optional) The proxies dictionary to apply to the request.
            """"""

        conn = self.get_connection(request.url, proxies)

        self.cert_verify(conn, request.url, verify, cert)
        url = self.request_url(request, proxies)
        self.add_headers(request)

        chunked = not (request.body is None or 'Content-Length' in request.headers)

        if stream:
            timeout = TimeoutSauce(connect=timeout)
        else:
            timeout = TimeoutSauce(connect=timeout, read=timeout)

        try:
            if not chunked:
                resp = conn.urlopen(
                    method=request.method,
                    url=url,
                    body=request.body,
                    headers=request.headers,
                    redirect=False,
                    assert_same_host=False,
                    preload_content=False,
                    decode_content=False,
                    retries=self.max_retries,
                    timeout=timeout
                )

            # Send the request.
            else:
                if hasattr(conn, 'proxy_pool'):
                    conn = conn.proxy_pool

                low_conn = conn._get_conn(timeout=timeout)

                try:
                    low_conn.putrequest(request.method,
                                        url,
                                        skip_accept_encoding=True)

                    for header, value in request.headers.items():
                        low_conn.putheader(header, value)

                    low_conn.endheaders()

                    for i in request.body:
                        low_conn.send(hex(len(i))[2:].encode('utf-8'))
                        low_conn.send(b'\r\n')
                        low_conn.send(i)
                        low_conn.send(b'\r\n')
                    low_conn.send(b'0\r\n\r\n')

                    r = low_conn.getresponse()
                    resp = HTTPResponse.from_httplib(
                        r,
                        pool=conn,
                        connection=low_conn,
                        preload_content=False,
                        decode_content=False
                    )
                except:
                    # If we hit any problems here, clean up the connection.
                    # Then, reraise so that we can handle the actual exception.
                    low_conn.close()
                    raise
                else:
                    # All is well, return the connection to the pool.
                    conn._put_conn(low_conn)

        except socket.error as sockerr:
            raise ConnectionError(sockerr)

        except MaxRetryError as e:
>           raise ConnectionError(e)
E           ConnectionError: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /load-data/ (Caused by <class 'socket.error'>: [Errno 111] Connection refused)

/usr/lib/python2.7/dist-packages/requests/adapters.py:378: ConnectionError
__________________________________________ test_model_predict __________________________________________

    def test_model_predict():
        '''@test_model_predict

        This method tests the 'model_predict' session.

        '''

>       assert requests.post(
            endpoint_url,
            headers=headers,
            data=get_sample_json('svr-model-predict.json', 'svr')
        )

manual/programmatic_interface/file_upload/pytest_svr_file_upload.py:113:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/usr/lib/python2.7/dist-packages/requests/api.py:88: in post
    return request('post', url, data=data, **kwargs)
/usr/lib/python2.7/dist-packages/requests/api.py:44: in request
    return session.request(method=method, url=url, **kwargs)
/usr/lib/python2.7/dist-packages/requests/sessions.py:455: in request
    resp = self.send(prep, **send_kwargs)
/usr/lib/python2.7/dist-packages/requests/sessions.py:558: in send
    r = adapter.send(request, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <requests.adapters.HTTPAdapter object at 0x7fe4706f3850>, request = <PreparedRequest [POST]>
stream = False, timeout = <urllib3.util.Timeout object at 0x7fe4706f3410>, verify = True, cert = None
proxies = OrderedDict()

    def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):
        """"""Sends PreparedRequest object. Returns Response object.

            :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
            :param stream: (optional) Whether to stream the request content.
            :param timeout: (optional) The timeout on the request.
            :param verify: (optional) Whether to verify SSL certificates.
            :param cert: (optional) Any user-provided SSL certificate to be trusted.
            :param proxies: (optional) The proxies dictionary to apply to the request.
            """"""

        conn = self.get_connection(request.url, proxies)

        self.cert_verify(conn, request.url, verify, cert)
        url = self.request_url(request, proxies)
        self.add_headers(request)

        chunked = not (request.body is None or 'Content-Length' in request.headers)

        if stream:
            timeout = TimeoutSauce(connect=timeout)
        else:
            timeout = TimeoutSauce(connect=timeout, read=timeout)

        try:
            if not chunked:
                resp = conn.urlopen(
                    method=request.method,
                    url=url,
                    body=request.body,
                    headers=request.headers,
                    redirect=False,
                    assert_same_host=False,
                    preload_content=False,
                    decode_content=False,
                    retries=self.max_retries,
                    timeout=timeout
                )

            # Send the request.
            else:
                if hasattr(conn, 'proxy_pool'):
                    conn = conn.proxy_pool

                low_conn = conn._get_conn(timeout=timeout)

                try:
                    low_conn.putrequest(request.method,
                                        url,
                                        skip_accept_encoding=True)

                    for header, value in request.headers.items():
                        low_conn.putheader(header, value)

                    low_conn.endheaders()

                    for i in request.body:
                        low_conn.send(hex(len(i))[2:].encode('utf-8'))
                        low_conn.send(b'\r\n')
                        low_conn.send(i)
                        low_conn.send(b'\r\n')
                    low_conn.send(b'0\r\n\r\n')

                    r = low_conn.getresponse()
                    resp = HTTPResponse.from_httplib(
                        r,
                        pool=conn,
                        connection=low_conn,
                        preload_content=False,
                        decode_content=False
                    )
                except:
                    # If we hit any problems here, clean up the connection.
                    # Then, reraise so that we can handle the actual exception.
                    low_conn.close()
                    raise
                else:
                    # All is well, return the connection to the pool.
                    conn._put_conn(low_conn)

        except socket.error as sockerr:
            raise ConnectionError(sockerr)

        except MaxRetryError as e:
>           raise ConnectionError(e)
E           ConnectionError: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /load-data/ (Caused by <class 'socket.error'>: [Errno 111] Connection refused)

/usr/lib/python2.7/dist-packages/requests/adapters.py:378: ConnectionError
================================ 4 failed, 16 passed in 119.02 seconds =================================
```

When the flask errors, it also kills the `app.py` process, which I verified by running `netstat -ntlup`:

``` bash
vagrant@vagrant-ubuntu-trusty-64:/vagrant/test$ netstat -ntlup
(No info could be read for ""-p"": geteuid()=1000 but you should be root.)
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      -
tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN      -
tcp        0      0 0.0.0.0:55019           0.0.0.0:*               LISTEN      -
tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      -
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -
tcp6       0      0 :::111                  :::*                    LISTEN      -
tcp6       0      0 :::22                   :::*                    LISTEN      -
tcp6       0      0 :::56952                :::*                    LISTEN      -
udp        0      0 0.0.0.0:111             0.0.0.0:*                           -
udp        0      0 0.0.0.0:40866           0.0.0.0:*                           -
udp        0      0 0.0.0.0:679             0.0.0.0:*                           -
udp        0      0 0.0.0.0:52672           0.0.0.0:*                           -
udp        0      0 127.0.0.1:739           0.0.0.0:*                           -
udp        0      0 0.0.0.0:68              0.0.0.0:*                           -
udp6       0      0 :::111                  :::*                                -
udp6       0      0 :::42109                :::*                                -
udp6       0      0 :::679                  :::*                                -
udp6       0      0 :::34032                :::*                                -
```

**Notice:** there is no process running on the default port `5000`.

So, I did some minor debugging, and found that my application never throttles [70.2% memory](https://github.com/jeff1evesque/machine-learning/pull/2763#issuecomment-251841492), of the `512MB` virtualbox virtual machine.  When the application finishes the series of `requests.post`, it returns to baseline measure:

![top-2](https://cloud.githubusercontent.com/assets/2907085/19150519/46828792-8b95-11e6-88b7-ca074b2a6b6c.PNG)

![top-3](https://cloud.githubusercontent.com/assets/2907085/19150527/4b82e782-8b95-11e6-8fa7-c4e8a79b3aed.PNG)

**Note:** top is always updating the processes in the terminal output, which is why I pasted two screenshots.  Also, these screenshots are taken about 8 hours since I ran my last attempt of my manual unit tests, which killed `app.py`.  So, `app.py` is not currently running.

I haven't configured uwsgi, or gunicorn.  I'm hoping if I configure gunicorn, it will create work processes, that can handle such `requests.post` against `app.py` more elegantly, to prevent `app.py` from exiting.   But, I'm not sure if my problem is an internal flask bug, given my use case.  Therefore, I'm not sure if gunicorn will solve my problem.

The [database user](https://github.com/jeff1evesque/machine-learning/blob/7a4989fc6d93a6df73027715dbbba16ae997776b/puppet/environment/docker/modules/database/manifests/server.pp#L28-L35) which runs the application, is allowed unlimited connections, and queries.  So, I don't know why my application stops running on the second iteration of the manual `pytest`'s.  Additionally, when my manual unit tests run, I make sure I empty the database tables, which will be operated on.  Since, [`configure_database.py`](https://github.com/jeff1evesque/machine-learning/blob/780d0cd1a6ca724e4db09c0bbceac522f03e2789/test/manual/configure_database.py#L43-L48) is the first file alphabetically closest to the start of the alphabet, it runs first.  So, the database is always refreshed on each iteration, and the [database user](https://github.com/jeff1evesque/machine-learning/blob/7a4989fc6d93a6df73027715dbbba16ae997776b/puppet/environment/docker/modules/database/manifests/server.pp#L44-L50) that performs the `TRUNCATE` operation on each of the database tables, has adequate permission.  I did have another idea, since I was getting errors related to database `cursor`.  Specifically, I thought that maybe my application was heavy on the database operations.  And, for the first time, I checked my database api [`db_query.py`](https://github.com/jeff1evesque/machine-learning/blob/c761a61d58e0444b1a325e81f62310f911c3f784/brain/database/db_query.py#L131), and realized that after each database transaction, including during connection, and disconnection, I write to a log file.  I think after running my manual unit tests, I checked in the corresponding text log file, and it was already 301MB.  This is just from writing to the logs for running the manual unit tests twice.  So, I commented out all instances of writing to a logfile, in `db_query.py`, the API for all of my database queries, and my errors still persists.
"
2048,Binary file corrupted between the server and the client,2016-10-04T10:14:05Z,2016-10-04T11:20:58Z,,,,"I am using **Python 3** and the following code:

```
@app.route('/')
def pdf():
    # [Generate PDF as a byte string]
    with open('file.pdf', 'wb') as f:
        f.write(pdf)
    return send_file(BytesIO(pdf))
```

On the server, a valid PDF file is written. On the client, I get an invalid PDF about twice the expected size.

it looks like an encoding issue, so I am guessing that the fact that I am using Python 3 may be relevant. The differences between the file saved on the server and the one I get on the client is similar to that of [this StackOverflow question](http://stackoverflow.com/questions/35368352/pdf-response-is-corrupted-in-python-3-but-works-in-python-2), but the poster there was passing the PDF data as a string, whereas in my code `pdf` is made of bytes (Python 3 would not let me write the file otherwise).
"
2047,Default environ,2016-10-01T16:54:53Z,2016-10-12T06:54:25Z,,,,"Addresses #1467. Now you can pass `environ_base` dictionary into `app.test_client`. This also allows overriding per `open` call (or `make_test_environ_builder` call).

Perhaps a better solution would be to edit werkzeug directly and add it to that init (which, in turn, would allow us to remove the subclass init). I don't believe that would cause any unintended behavior, but I'm open to further conversation on it.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2047)

<!-- Reviewable:end -->
"
2046,Remove `-a/--app` from Quickstart documentation,2016-10-01T15:54:39Z,2016-10-01T16:45:22Z,,,,"As mentioned in #2009, simplifying the CLI saw the removal of the `-a/--app` flag. Therefore, the only way to specify the module to import is by setting `FLASK_APP`.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2046)

<!-- Reviewable:end -->
"
2045,A: hello!Flask how to solve this problem,2016-09-30T02:52:58Z,2016-09-30T03:08:29Z,,,,"http://denizeren.net/2014/07/14/flask-file-descriptor-inheritance-problem/
"
2044,"MethodView requires settings ""methods"" attribute",2016-09-29T17:35:01Z,2017-04-21T17:30:12Z,,,,"In the example for MethodView, post() will not be called unless methods is set on the class or with add_url_rule

https://github.com/pallets/flask/blob/master/flask/views.py#L123

A fix might be having MethodView.methods set to a copy of http_method_funcs i.e. all available methods

If I am missing something here my apologies
"
2043,Assert should not be used outside of testing,2016-09-29T15:17:09Z,2016-09-29T15:20:42Z,,,,"assert should not be used in production because assert statements are discarded if the program is compiled to bytecode with the PYTHONOPTIMIZE turned on

https://github.com/pallets/flask/blob/master/flask/views.py#L148
"
2042,Question: Authenticating to a protected API call not working (GAE Flask connecting to ParseServer),2016-09-27T17:42:17Z,2016-09-27T18:05:00Z,,,,"What I am trying to achieve is pretty simple.

I want to use Flask to create a web app that connects to a remote Server via API calls (specifically ParseServer).
I am using a third-party library to achieve this and everything works perfectly when I am running my code in a stand-alone script. But when I add my code into the Flask I suddenly can't authenticate with the Server.

It seems to me that in Flask, the registration method used by the APi library is not remembered.

I tried many things of putting the registration and initialization code in different places in Flask, nothing worked. 

I asked a similar question in the Github of the [Library](https://github.com/milesrichardson/ParsePy/issues/147) with no help. 

So I guess I have **two questions** that could help me solve this:
1) Where should I put a registration method and import of the files from this library?
&
2) What can I do to identify the issue specifically, eg. to know precisely what's wrong?

Here's some code

The Flask code is here

```
@app.route('/parseinsert')
def run_parse_db_insert():
    """"""The method for testing implementation and design of the Parse Db
    """"""
    pc = ParseCommunication()
    print(pc.get_all_names_rating_table())
    return 'done'

```

The ParseCommunication is my Class that deals with Parse. If I run ParseCommunication from that script, with the same code as above in the **main** part, everything works perfectly.

I run the Flask app with dev_appserver.py from Google App Engine.

My folder structure 
/parseTest
  /aplication
    views.py
  app.yaml
  run.py

My run.py code

```
import os
import sys

sys.path.insert(1, os.path.join(os.path.abspath('.'), 'lib'))
sys.path.insert(1, os.path.join(os.path.abspath('.'), 'application'))

import aplication
```
"
2041,Flask Extension that doesn't require user code changes,2016-09-26T08:23:44Z,2016-09-26T08:31:54Z,,,,"Hi,

Can a flask extension be installed using pip and run without user code changes at all?

I want to write a flask extension that uses flask's before_request and after_request hooks.
The user will just need to `pip install flask_<my_extension>` and that's it.

Thanks in advance.
"
2040,fix unclosed HTML tags,2016-09-26T07:05:54Z,2016-09-26T07:10:42Z,,,,"fix unclosed HTML tags

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2040)

<!-- Reviewable:end -->
"
2039,Fix unbound error,2016-09-25T16:23:55Z,2016-09-25T16:25:54Z,,TypeError,TypeError: unbound method to_url() must be called with BaseConverter instance as first argument (got str instance instead),"I create a converter, this copied from docs:

```
import urllib

from flask import Flask, url_for
from werkzeug.routing import BaseConverter


class ListConverter(BaseConverter):
    def to_python(self, value):
        return value.split(',')

    def to_url(self, values):
        return ','.join(BaseConverter.to_url(value)
                        for value in values)


app = Flask(__name__)
app.url_map.converters['list'] = ListConverter


@app.route('/<list:lst>/')
def test(lst):
    return str(lst)


@app.route('/')
def index():
    return url_for('test', lst='a,b')


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=4000, debug=True)
```

I visit `http://localhost:4000/a,b`, it works. but can not visit `http://localhost:4000/`:

```
TypeError: unbound method to_url() must be called with BaseConverter instance as first argument (got str instance instead)
```

Python 3 also raise error:

```
TypeError: to_url() missing 1 required positional argument: 'value'
```

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2039)

<!-- Reviewable:end -->
"
2038,Updated mod_wsgi.rst to point to new mod_wsgi repo,2016-09-23T18:02:01Z,2016-09-24T11:07:19Z,,,,"The http://flask.pocoo.org/docs/0.11/deploying/mod_wsgi/ site currently uses the old Google Code page for `mod_wsgi`. This PR updates the urls for `mod_wsgi` to point to the new [GitHub repo](https://github.com/GrahamDumpleton/mod_wsgi) and [documentation](http://modwsgi.readthedocs.io/en/develop/index.html).

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2038)

<!-- Reviewable:end -->
"
2037,do you have Extensions for VScode ?,2016-09-23T16:04:02Z,2016-09-23T16:25:35Z,,,,"https://marketplace.visualstudio.com/search?term=flask&target=VSCode&sortBy=Relevance

i don't find it

can you help me  ?

my friend
"
2036,Feature packt book in docs,2016-09-23T07:16:39Z,2016-09-23T12:47:30Z,,,,"Hi,

Packt is proud to publish a new book on Flask this year
[Flask By Example](https://www.packtpub.com/web-development/flask-example)

I would appreciate if you could fearure this book on http://flask.pocoo.org/ to help developers in their learning of Flask.

Let me know what you think.

Many thanks.
"
2035,Modified test_instance_config.py (test_main_module_paths) to reflect flask behavior,2016-09-21T17:46:43Z,2016-09-21T18:29:03Z,,,,"fix for issue: #1879 
The test of checking default location of the instance folder when running flask app as **main** fails from within VirtualEnv directory because the working directory shares a prefix with sys.prefix. That is partially how flask decides which kind of instance folder to return:

```
""package_path""/var/""name""-instance
or:
""working_dir""/instance.
```

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2035)

<!-- Reviewable:end -->
"
2034,Update minitwit.py,2016-09-21T16:56:42Z,2016-09-21T16:57:47Z,,,,
2033,failing test for safe_join in windows,2016-09-21T09:41:07Z,2017-05-16T00:11:35Z,"bug, testing",,,"This seems like a bug on windows:
Test run on windows gave me the following error

```

> py.test tests\test_helpers.py
←[1m============================= test session starts ==========================
===←[0m
platform win32 -- Python 2.7.10, pytest-3.0.2, py-1.4.31, pluggy-0.3.1
rootdir: , inifile: setup.cfg
collected 42 items ←[0m←[1m
←[0m
tests\test_helpers.py ........................................F.

================================== FAILURES ===================================
←[1m←[31m_________________________ TestSafeJoin.test_safe_join _________________
________←[0m

self = <test_helpers.TestSafeJoin object at 0x02F3F790>

←[1m    def test_safe_join(self):←[0m
←[1m        # Valid combinations of *args and expected joined paths.←[0m
←[1m        passing = (←[0m
←[1m            (('a/b/c', ), 'a/b/c'),←[0m
←[1m            (('/', 'a/', 'b/', 'c/', ), '/a/b/c'),←[0m
←[1m            (('a', 'b', 'c', ), 'a/b/c'),←[0m
←[1m            (('/a', 'b/c', ), '/a/b/c'),←[0m
←[1m            (('a/b', 'X/../c'), 'a/b/c', ),←[0m
←[1m            (('/a/b', 'c/X/..'), '/a/b/c', ),←[0m
←[1m            # If last path is '' add a slash←[0m
←[1m            (('/a/b/c', '', ), '/a/b/c/', ),←[0m
←[1m            # Preserve dot slash←[0m
←[1m            (('/a/b/c', './', ), '/a/b/c/.', ),←[0m
←[1m            (('a/b/c', 'X/..'), 'a/b/c/.', ),←[0m
←[1m            # Base directory is always considered safe←[0m
←[1m            (('../', 'a/b/c'), '../a/b/c'),←[0m
←[1m            (('/..', ), '/..'),←[0m
←[1m        )←[0m
←[1m    ←[0m
←[1m        for args, expected in passing:←[0m
←[1m>           assert flask.safe_join(*args) == expected←[0m
←[1m←[31mE           assert '/a\\b\\c' == '/a/b/c'←[0m
←[1m←[31mE             - /a\\b\\c←[0m
←[1m←[31mE             + /a/b/c←[0m

←[1m←[31mtests\test_helpers.py←[0m:803: AssertionError
←[1m←[31m===================== 1 failed, 41 passed in 1.33 seconds =============
========←[0m
```

In windows the directories on an external location can be accessed using four back-slashes ""\\\\"" from python code. So I would suggest to return ""\\\\a\\b\\c"" if the env is windows. Of course this line of thinking can be naïve and maybe there is a better approach there.
"
2032,time.sleep() swallow FLASH_DEBUG message,2016-09-20T17:45:55Z,2016-09-20T20:09:54Z,,,,"In the sample code below, Testing... never show if I have time.sleep(1) there. If I remove it, I can see the debug message. I'm on macOS 10.11.6, Flask==0.11.1, Python 3.5.2, running inside virtualenv==15.0.2

```
from flask import Flask
import time

app = Flask(__name__)
app.DEBUG = True

@app.cli.command()
def streaming():
   app.logger.debug('Testing...')
   time.sleep(1)

```
"
2031,make use of range requests if available in werkzeug,2016-09-20T08:09:13Z,2016-09-26T10:43:46Z,,,,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2031)

<!-- Reviewable:end -->
"
2030,Support same-site cookies,2016-09-20T06:44:12Z,2017-05-31T19:14:50Z,,,,"There's a new RFC for preventing CSRF by restricting cookies to same-site only (i.e. no 3rd party cookies).
At least Chrome seems to support it since the developer tools list it if you look at cookies.

Adding support for it in Flask should be pretty simple. (Add an attribute to Set-Cookie when setting the session cookie and a configuration option to configure this.)

See:

https://tools.ietf.org/html/draft-west-first-party-cookies-07
"
2029,Zero-padded file modes in repository ,2016-09-19T10:57:48Z,2016-10-14T08:13:53Z,"docs, good first issue",,,"After cloning this repository with git and you run ""git fsck"" there are multiple errors:

`Checking object directories: 100% (256/256), done.
warning in tree 0b404df8c030cdeaca7b373956c3a697efd32f78: contains zero-padded file modes
warning in tree 51ea366fd4253b3a618289dc1c0c4bb16a3c2a22: contains zero-padded file modes
warning in tree 679afdb340e9e1011927b52d2cd48bd221159131: contains zero-padded file modes
warning in tree 77c7430020693d35500ca4fc292cff63fc3e672b: contains zero-padded file modes
warning in tree 6a37da079f3bed362608b2558b162617c0c3af5c: contains zero-padded file modes
Checking objects: 100% (12634/12634), done.`

This prevents the repository from being push'ed to another git server, for example:

`Counting objects: 12435, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3696/3696), done.
remote: error: object 0b404df8c030cdeaca7b373956c3a697efd32f78: zeroPaddedFilemode: contains zero-padded file modes
remote: fatal: Error in object
error: pack-objects died of signal 13`

I suggest the repository is rebuilt to correct the corruption in it.
"
2028,Fix typo in MethodView doc,2016-09-19T02:24:59Z,2016-09-19T03:24:46Z,,,,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2028)

<!-- Reviewable:end -->
"
2027,Update app factory docs for Flask's CLI,2016-09-18T12:17:46Z,2017-10-10T18:59:29Z,"cli, docs",,,"see https://github.com/pallets/flask/pull/1536
"
2026,Removed unused import.,2016-09-18T12:00:10Z,2016-09-18T12:10:00Z,,,,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2026)

<!-- Reviewable:end -->
"
2025,removed a nonsensical line,2016-09-14T18:00:46Z,2016-09-14T18:03:21Z,,,,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2025)

<!-- Reviewable:end -->
"
2024,Add license_file to setup.cfg metadata,2016-09-14T16:17:44Z,2016-11-01T20:11:54Z,,,,"Without this, the LICENSE file is never included in the built wheels: this makes it harder for users to comply with the license.
With this addition a file LICENSE.txt will be created in the `xxx.dist-info` directory with the content of the `license_file` file, e.g. the top level LICENSE.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2024)

<!-- Reviewable:end -->
"
2023,How should logging in Flask look like?,2016-09-12T20:15:42Z,2017-07-31T20:24:59Z,"discussion, logging",,,"Flask started to ship with a default, hardcoded logging handler. Unfortunately this setup makes it harder to install custom logging setups, because then you'll have to undo all the things Flask did to the app logger, or replace the `app.logger` entirely. A symptom of this is #1993, where Flask's own logger had to be tweaked yet again such that messages didn't get logged twice (once via Flask's setup, once via the custom one).

My question is: **Do we even want Flask to do any logging setup?** It appears that this sort of default logging is only useful during development, so maybe it makes sense to set up a default logging handler in the new Flask CLI instead of from within the application.
"
2022,Fix typo in docs,2016-09-12T07:41:27Z,2016-09-12T08:42:24Z,,,,"Also added one missing comma for readability

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2022)

<!-- Reviewable:end -->
"
2021,Address #1980,2016-09-11T15:38:18Z,2016-09-11T15:53:35Z,,,,"- Large apps play nicer with recommended project structure #1980 
- runserver.py --> setup.py
- Run as:
  
  pip install -e.
  export FLASK_APP=yourapplication
  flask run

I did not change much, one new paragraph.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2021)

<!-- Reviewable:end -->
"
2020,Default flask.cli commands are not override-able,2016-09-10T03:04:02Z,2016-10-08T23:55:53Z,,,,"The default commands `run` and `shell` cannot be overridden.

Using a custom command called `shell`, I expect the custom `shell` to override the builtin `shell`

``` python
@app.cli.command('shell', short_help='My custom shell')
def shell():
    pass
```

But running `--help` still produces `flask.cli.shell`'s help

``` bash
> python -m flask
Usage: python -m flask [OPTIONS] COMMAND [ARGS]...

  This shell command acts as general utility script for Flask applications.

  It loads the application configured (either through the FLASK_APP
  environment variable) and then provides commands either provided by the
  application or Flask itself.

  The most useful commands are the ""run"" and ""shell"" command.

  Example usage:

    $ export FLASK_APP=hello
    $ export FLASK_DEBUG=1
    $ flask run

Options:
  --help  Show this message and exit.

Commands:
  run    Runs a development server.
  shell  Runs a shell in the app context.
```

And running gives me `flask.cli.shell`'s shell

``` bash
> python -m flask shell

Python 3.5.2 (default, Jul 17 2016, 00:00:00) 
[GCC 4.8.4] on linux
App: wallet
Instance: app/instance
>>> 
```

Also,

``` python
@app.cli.command('shell_plus', short_help='bar')
def shell_plus_1():
    pass

@app.cli.command('shell_plus', short_help='foo')
def shell_plus_2():
    pass
```

has the behaviour I expect

``` bash
Usage: python -m flask [OPTIONS] COMMAND [ARGS]...

  This shell command acts as general utility script for Flask applications.

  It loads the application configured (either through the FLASK_APP
  environment variable) and then provides commands either provided by the
  application or Flask itself.

  The most useful commands are the ""run"" and ""shell"" command.

  Example usage:

    $ export FLASK_APP=hello
    $ export FLASK_DEBUG=1
    $ flask run

Options:
  --help  Show this message and exit.

Commands:
  run         Runs a development server.
  shell       Runs a shell in the app context.
  shell_plus  foo
```
"
2019,Do not cause errors for unknown files for sendfile,2016-09-10T00:35:40Z,2016-09-12T18:52:42Z,,,,"Unknown files must not raise errors when send with send-file if the
sending happens by filename.  This is particularly important for
send from directory which can send up loads of unknown files.

This regressed at one point in the last two weeks.  It came up
with woff2 files sent from static folders which are unknown in
the default mimetype database.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2019)

<!-- Reviewable:end -->
"
2018,Fix fileuploads manual page redirect URL,2016-09-09T13:51:47Z,2016-09-09T13:53:25Z,,,,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2018)

<!-- Reviewable:end -->
"
2017,Add scheme to url_build error handler parameters,2016-09-09T10:11:30Z,2017-04-20T16:10:28Z,,,,`_scheme` is passed to `url_for` but is not forwarded to error handlers if an exception is raised
2016,"request.args uncompatible with quote, which lead decode error",2016-09-09T02:22:09Z,2016-09-09T08:58:17Z,,,,"I think it is a bug.

My code:

```
from __future__ import unicode_literals, absolute_import
from flask import Blueprint, request, jsonify
from flask_restful import Api, Resource
from six.moves.urllib.parse import unquote
from src.share import filemgr

api = Blueprint('api', __name__, url_prefix='/api')
api_wrap = Api(api)

@api.route('/list', methods=['get'])
def list():
    path = unquote(request.args.get('path', '/'))
    only_folder = request.args.get('only_folder', False)
    nodes = filemgr.list(path)
    if only_folder:
        nodes = filter(lambda x:x.isfolder, nodes)
    return jsonify(nodes)
```

---

ajax get:

```
var path = 'c - 副本'
ajax({
  url: 'http://localhost:5000/api/list',
  params: {
    path: encodeURI(path)
  }
});
```

---

But get `path` decode incorrectly : `u'c - \xe5\x89\xaf\xe6\x9c\xac'`.

It should be `'c - \xe5\x89\xaf\xe6\x9c\xac'` or `u'c - \u526f\u672c''`

I debug into  `list()` and found:

```
>>> request.url
u'http://localhost:5000/api/list?path=c%2520-%2520%25E5%2589%25AF%25E6%259C%25AC'

>>> request.args.get('path', '/')
u'c%20-%20%E5%89%AF%E6%9C%AC'

>>> unquote(request.args.get('path', '/'))
u'c - \xe5\x89\xaf\xe6\x9c\xac'
```

Here the string can not be decode, the correct string is 'c - \xe5\x89\xaf\xe6\x9c\xac', without `u` prefix.

Debug into `request.args at Lib\site-packages\werkzeug\wrappers.py`

in line 431

```
@cached_property
def args(self):
    """"""The parsed URL parameters.  By default an
    :class:`~werkzeug.datastructures.ImmutableMultiDict`
    is returned from this function.  This can be changed by setting
    :attr:`parameter_storage_class` to a different type.  This might
    be necessary if the order of the form data is important.
    """"""
    return url_decode(wsgi_get_bytes(self.environ.get('QUERY_STRING', '')),
                      self.url_charset, errors=self.encoding_errors,
                      cls=self.parameter_storage_class)
```

I try some value:

```
>>> wsgi_get_bytes(self.environ.get('QUERY_STRING', ''))
'path=c%2520-%2520%25E5%2589%25AF%25E6%259C%25AC'

>>> url_decode(wsgi_get_bytes(self.environ.get('QUERY_STRING', '')),
                          self.url_charset, errors=self.encoding_errors,
                          cls=self.parameter_storage_class)
ImmutableMultiDict([('path', u'c%20-%20%E5%89%AF%E6%9C%AC')])


`url_decode` decode querystring into wrong.
```

The problem is `url_decode`, should not decode here, because the querystring maybe quote(like my situation)
"
2015,fixed deprecated syntax in setup.cfg,2016-09-08T17:23:30Z,2016-09-08T17:24:07Z,,,,"I was inspired to fix this by the following warning in pytest:
""[pytest] section in setup.cfg files is deprecated, use [tool:pytest] instead.""

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2015)

<!-- Reviewable:end -->
"
2014,Fixed error in errorhandler doc string.,2016-09-08T15:15:35Z,2016-09-08T15:34:51Z,,,,"Fixed minor error in the errorhandler doc string.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2014)

<!-- Reviewable:end -->
"
2013,Corrected after response for error handlers,2016-09-08T08:57:41Z,2016-09-10T00:36:29Z,,,,"Before this change after request functions were not correctly
invoked for error handlers.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2013)

<!-- Reviewable:end -->
"
2012,Permission to generate stubs for Flask in typeshed,2016-09-07T18:26:02Z,2016-09-07T19:10:58Z,,,,"Howdy,

I'd like to add stubs for Flask to https://github.com/python/typeshed, a repository used to store PEP 484 type signatures for the python stdlib and  popular third party libraries.  As per PEP 484, permission is required from the library owner before merging type signatures into typeshed - https://www.python.org/dev/peps/pep-0484/#the-typeshed-repo

Here's the corresponding typeshed issue -
https://github.com/python/typeshed/issues/28
"
2011,Broken pipe,2016-09-07T08:26:10Z,2016-09-07T13:49:45Z,,,,"my code:

from flask import Flask, make_response, request
app = Flask(**name**)

@app.route(""/dtu/<dtuid>/<addr>"", methods=[""GET"",""OPTIONS""])
def dtu(dtuid, addr):
    o = drawMultipleDtu(dtuid,addr)
    resp = make_response(o)
    resp.headers[""Access-Control-Allow-Origin""] = ""*""
    resp.headers[""Access-Control-Request-Method""] = ""POST,GET,PUT,DELETE,OPTIONS""
    resp.headers[""Access-Control-Allow-Methods""] = ""POST,GET,PUT,DELETE,OPTIONS""
    resp.headers[""Access-Control-Allow-Headers""] = ""X-Requested-With,Content-Type""

```
if request.method == 'OPTIONS':
    print ""it's OPTIONS""
return resp
```

app.run(host=""0.0.0.0"", port=5010)
I always got this error:
## Exception happened during processing of request from ('192.168.44.1', 54412)

Traceback (most recent call last):
  File ""/mnt/ENTER/lib/python2.7/SocketServer.py"", line 290, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/mnt/ENTER/lib/python2.7/SocketServer.py"", line 318, in process_request
    self.finish_request(request, client_address)
  File ""/mnt/ENTER/lib/python2.7/SocketServer.py"", line 331, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/mnt/ENTER/lib/python2.7/SocketServer.py"", line 654, in __init__
    self.finish()
  File ""/mnt/ENTER/lib/python2.7/SocketServer.py"", line 713, in finish
    self.wfile.close()
  File ""/mnt/ENTER/lib/python2.7/socket.py"", line 283, in close
    self.flush()
  File ""/mnt/ENTER/lib/python2.7/socket.py"", line 307, in flush
    self._sock.sendall(view[write_offset:write_offset+buffer_size])
error: [Errno 32] Broken pipe
"
2010,changing ip address to string for localhost,2016-09-07T05:49:16Z,2016-09-08T01:46:20Z,,,,"For https://github.com/pallets/flask/issues/2007

which now is more inline with docs in the home page of http://flask.pocoo.org/

Before the change:

```
python hello_flask.py
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
127.0.0.1 - - [07/Sep/2016 11:08:55] ""GET / HTTP/1.1"" 200 -
127.0.0.1 - - [07/Sep/2016 11:08:55] ""GET /favicon.ico HTTP/1.1"" 404 -
127.0.0.1 - - [07/Sep/2016 11:09:14] ""GET / HTTP/1.1"" 200 -
127.0.0.1 - - [07/Sep/2016 11:09:14] ""GET /favicon.ico HTTP/1.1"" 404 -
```

After the change:

```
python hello_flask.py
 * Running on http://localhost:5000/ (Press CTRL+C to quit)
127.0.0.1 - - [07/Sep/2016 11:09:42] ""GET / HTTP/1.1"" 200 -
127.0.0.1 - - [07/Sep/2016 11:09:59] ""GET / HTTP/1.1"" 200 -
```

As you can see its not ""getting"" the favicon. Is that an issue?

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2010)

<!-- Reviewable:end -->
"
2009,Document not updated after the removal of argument -a and --app,2016-09-07T04:07:30Z,2016-10-06T01:03:38Z,,,,"In short, the documents(both [the online one](http://flask.pocoo.org/docs/0.11/quickstart/#invalid-import-name) and the output of `flask --help`) is not fully updated after CLI interface is [simplified](https://github.com/pallets/flask/commit/523e27118359425048541d92892f20ee048c0b76). The `-a`/`--app` argument has been removed, but the document is somewhat misleading.

This issue comes from [a SO post](http://stackoverflow.com/q/39360392/5399734).  Please read through the comments for more information.
"
2008,AttributeError: 'str' object has no attribute 'write' during unhandled exception logging,2016-09-06T19:42:55Z,2016-09-06T20:51:44Z,,ZeroDivisionError,ZeroDivisionError: integer division or modulo by zero,"Flask + Zappa users are complaining about an error stemming from Flask's logging of exceptions.

We can reproduce this by generating an unhandled exception in a Flask application that breaks our handler's behavior, but which works for other frameworks (Django, Pyramid, etc.).

It looks like something in Flask is treating a string as if it were a stream, but I've been trying to disable all possible logging and I still see this error. I don't know what's happening. This is occurring with the Flask==0.11.1.

Here is an example:

```
[1473180521973] Traceback (most recent call last):
[1473180521973] File ""/usr/lib64/python2.7/logging/init.py"", line 880, in emit
[1473180521992] stream.write(fs % msg)
[1473180521992] File ""/private/var/folders/00/vp4bg2md3ng4sqkg3hrz_j1003frjd/T/pip-build-RmqRtJ/Werkzeug/werkzeug/local.py"", line 343, in getattr
[1473180521992] AttributeError: 'str' object has no attribute 'write'
[1473180521992] Logged from file app.py, line 1587
[1473180521992] [ERROR] 2016-09-06T16:48:41.973Z c29bebc5-7451-11e6-a6f9-bdc91c60ab58 Exception on /fail [GET]
Traceback (most recent call last):
File ""/private/var/folders/00/vp4bg2md3ng4sqkg3hrz_j1003frjd/T/pip-build-KC9Xdu/flask/flask/app.py"", line 1988, in wsgi_app
File ""/private/var/folders/00/vp4bg2md3ng4sqkg3hrz_j1003frjd/T/pip-build-KC9Xdu/flask/flask/app.py"", line 1641, in full_dispatch_request
File ""/private/var/folders/00/vp4bg2md3ng4sqkg3hrz_j1003frjd/T/pip-build-KC9Xdu/flask/flask/app.py"", line 1544, in handle_user_exception
File ""/private/var/folders/00/vp4bg2md3ng4sqkg3hrz_j1003frjd/T/pip-build-KC9Xdu/flask/flask/app.py"", line 1639, in full_dispatch_request
File ""/private/var/folders/00/vp4bg2md3ng4sqkg3hrz_j1003frjd/T/pip-build-KC9Xdu/flask/flask/app.py"", line 1625, in dispatch_request
File ""/var/task/app.py"", line 22, in fail
return 1/0
ZeroDivisionError: integer division or modulo by zero
```

Here is an example using Pyramid instead, failing as expected:
https://css89s7off.execute-api.us-east-1.amazonaws.com/dev/hello/asdf

and the same error in Flask, failing with the stream writing error:
https://pxzhirpoxd.execute-api.us-east-1.amazonaws.com/devor/fail

I am not sure what exactly is happening, and nobody in our little community has been able to figure it out either. We use Werkzeug for some middleware functionality, but since the other frameworks use this same code, I don't think this is the issue, unless there is a specific interaction between Flask and WZ, which I don't think there is.

So, I have a few theories:
    \* A log handler has been configured to write to a file by default. Since Lambda is (essentially) a read-only environment, this will fail.
    \* Code written for Python 3 isn't properly working in Python 2.
    \* Something related to this is happening: https://github.com/pallets/flask/issues/1995

Does anybody have any ideas what might be happening here?

Related tickets and discussion:
https://github.com/Miserlou/Zappa/issues/283
https://github.com/Miserlou/Zappa/pull/302
"
2007,Prevent setting `SERVER_NAME` and `SESSION_COOKIE_DOMAIN` to an IP address,2016-09-06T12:39:36Z,2017-05-14T05:13:57Z,"bug, discussion",,,"See #1946 and #1906. I think we should prevent setting those things to IP addresses in the first place and only allow `None` and domain names != `localhost`.
"
2006,Don't passthrough_errors unless instructed.,2016-09-06T12:19:53Z,2016-09-06T20:32:34Z,,,,"Fix #2005

Revert #1679 and #1996

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2006)

<!-- Reviewable:end -->
"
2005,AttributeError: 'DispatchingApp' object has no attribute 'config',2016-09-06T11:53:13Z,2016-09-06T20:32:34Z,blocker,AttributeError,AttributeError: 'DispatchingApp' object has no attribute 'config',"going through the tutorial on latest master, this exception is raised on `flask run`
(running inside a virtualenv)

```
>>> flask --version
Flask 0.11.2-dev
Python 3.5.2+ (default, Aug  5 2016, 08:07:14) 
[GCC 6.1.1 20160724]
>>> which -v flask
/home/laerus/.venvs/flask/bin/flask (from PATH element 0)
>>> flask run
 * Serving Flask app ""flaskr""
 * Forcing debug mode off
Traceback (most recent call last):
  File ""/home/laerus/.venvs/flask/bin/flask"", line 9, in <module>
    load_entry_point('Flask==0.11.2.dev0', 'console_scripts', 'flask')()
  File ""/home/laerus/.venvs/flask/lib/python3.5/site-packages/flask/cli.py"", line 508, in main
    cli.main(args=args, prog_name=name)
  File ""/home/laerus/.venvs/flask/lib/python3.5/site-packages/flask/cli.py"", line 374, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""/home/laerus/.venvs/flask/lib/python3.5/site-packages/click/core.py"", line 696, in main
    rv = self.invoke(ctx)
  File ""/home/laerus/.venvs/flask/lib/python3.5/site-packages/click/core.py"", line 1060, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File ""/home/laerus/.venvs/flask/lib/python3.5/site-packages/click/core.py"", line 889, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File ""/home/laerus/.venvs/flask/lib/python3.5/site-packages/click/core.py"", line 534, in invoke
    return callback(*args, **kwargs)
  File ""/home/laerus/.venvs/flask/lib/python3.5/site-packages/click/decorators.py"", line 64, in new_func
    return ctx.invoke(f, obj, *args[1:], **kwargs)
  File ""/home/laerus/.venvs/flask/lib/python3.5/site-packages/click/core.py"", line 534, in invoke
    return callback(*args, **kwargs)
  File ""/home/laerus/.venvs/flask/lib/python3.5/site-packages/flask/cli.py"", line 433, in run_command
    passthrough_errors=app.config['PROPAGATE_EXCEPTIONS'])
AttributeError: 'DispatchingApp' object has no attribute 'config'
```
"
2004,Correcting Custom Test Client class docs,2016-09-05T14:33:09Z,2016-09-05T14:57:00Z,,,,"As it was written, that init could not work as Flask was still trying to call it with no authorization parameter.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2004)

<!-- Reviewable:end -->
"
2003,Fix error in send_file helper,2016-09-04T21:05:34Z,2016-09-04T23:28:05Z,,,,"`mimetype_filename` is not defined, it should be `attachment_filename`

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2003)

<!-- Reviewable:end -->
"
2002,Clean up tutorial docs for installable app pattern with flaskr,2016-09-01T19:00:45Z,2016-09-08T13:19:48Z,,,,"- reading sequentially through the tutorial works.
- fixes references to `export FLASK_APP=flaskr.flaskr`

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2002)

<!-- Reviewable:end -->
"
2001,Fix small grammar error in Documentation (Of/Or),2016-08-31T19:44:20Z,2016-08-31T20:05:12Z,,,,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2001)

<!-- Reviewable:end -->
"
2000,Better workflow for flaskr and other basic apps,2016-08-31T16:32:29Z,2016-08-31T16:37:36Z,,,,"- adds `from flaskr import app` to top-level in flaskr module
- effect is that `export FLASK_APP=flaskr` works over the more verbose
  `export FLASK_APP=flaskr.flask`
- see the readme for how to run
- all tests are passing with `py.test` or `python setup.py test` (in
  venv)

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/2000)

<!-- Reviewable:end -->
"
1999,Proposal : splitting the config logic into a different package.,2016-08-31T06:56:44Z,2017-04-26T06:16:01Z,,,,"The config logic of flask is potentially useful for any other long running python server software.

I extracted it, extended is and started using it for my own projects : https://github.com/asmodehn/pyros-config.

It would be good if there was a dedicated (pallets) project for that part, not only in flask, so other could collaborate on it.

Thoughts ?
"
1998,Spelling,2016-08-29T18:39:34Z,2016-08-29T22:26:20Z,,,,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1998)

<!-- Reviewable:end -->
"
1997,gunicorn and flask to work together...,2016-08-27T17:48:06Z,2016-08-27T18:46:35Z,,"TypeError, AttributeError","TypeError: index() takes 0 positional arguments but 2 were given, AttributeError: 'NoneType' object has no attribute 'app'","I have a def that looks like this 

``` python
@app.route(""/"")
def index():
    return render_template('main.html')
```

When trying to call this def I get 

```
TypeError: index() takes 0 positional arguments but 2 were given
```

Most examples I've found doesn't pass any parameters into the def so I'm not sue why I have too?  How can I go about using my def without passing in parameters?

So for whatever reason I have to pass in 2 arguments for gunicorn so I change my code to look like this:

``` python
@app.route(""/"")
def index(arg1, arg2):
    return render_template('main.html')
```

After passing in 2 parameters I get:

```
/python3.4/site-packages/flask/templating.py"", line 132, in render_template
    ctx.app.update_template_context(context)

AttributeError: 'NoneType' object has no attribute 'app'
```

It appears by using gunicorn it doesn't appear it's setting up the correct context to use templates.  How would I go about setting up the 'app` context?
"
1996,Only passthrough_errors if PROPAGATE_EXCEPTIONS,2016-08-27T12:33:58Z,2016-08-27T16:33:08Z,,,,"See pallets/werkzeug#954

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1996)

<!-- Reviewable:end -->
"
1995,No response and No exception traceback when render_template failed and DEBUG=True,2016-08-27T06:14:30Z,2017-05-29T19:50:13Z,"blocker, bug",,,"Here is the code:

app.py

```
from flask import Flask, render_template

app = Flask(__name__)
app.config['DEBUG'] = True

@app.route('/')
def index():
    return render_template('unknown')

if __name__ == '__main__':
    from werkzeug.serving import run_simple
    run_simple('127.0.0.1', 5000, app)
```

Run it by 

```
python app.py
```

or  

```
export FLASK_APP=app.py 
flask run
```

then visit `http://127.0.0.1:5000` will see `ERR_EMPTY_RESPONSE` in browser and nothing in console.
"
1994,dictsort filter fails on nested_dict typed list,2016-08-26T20:53:04Z,2016-08-29T20:02:18Z,,UndefinedError,"UndefinedError: nested_dict.implementation.nested_dict object has no element ('5.008008', defaultdict(<class 'nested_dict.implementation.nested_dict'>, {'full': 'perl-5.8.8', 'tiny': '5.8.8'}))","I have a [`nested_dict`](https://pypi.python.org/pypi/nested_dict) that I want to use the `dictsort` filter on.  The template works without `dictsort`, and the filter works on regular dicts.  However, it fails with the following error when using `dictsort` with a `nested_dict`.

```
UndefinedError: nested_dict.implementation.nested_dict object has no element ('5.008008', defaultdict(<class 'nested_dict.implementation.nested_dict'>, {'full': 'perl-5.8.8', 'tiny': '5.8.8'}))
```

```
{% for perl_number in perl_num2ver|dictsort %}
    <th>{{ perl_num2ver[perl_number]['tiny'] }}</th>  
{% endfor %}
```

```
return render_template('pivot_table.html', perl_num2ver=perl_num2ver())
```

The method creating the `nested_dict` object:

```
from nested_dict import nested_dict

def perl_num2ver():
    cfg = nested_dict()  # so we can do hash of hash, dict of dict
    cfg['5.020003'][ 'full' ] = 'perl-5.20.3'
    # etc.
    return cfg
```

```
click==6.6
Flask==0.11.1
itsdangerous==0.24
Jinja2==2.8
MarkupSafe==0.23
pydumper==1.0.1
pymongo==3.3.0
Werkzeug==0.11.10
```
"
1993,Disable logger propagation by default,2016-08-25T13:43:42Z,2016-09-12T18:54:51Z,,,,"Main motivation for this is that `logging.basicConfig()` otherwise logs
all things twice by default since the logger propagates upwards to the
default handler.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1993)

<!-- Reviewable:end -->
"
1992,access app.config via dot,2016-08-22T11:54:39Z,2016-08-22T12:13:25Z,,,,"How about implementing `__getattr__`  and `__setattr__` for `flask.config.Config` to support dot access?  
instead of writing  `app.config[""DATABASE""]`, I'd like to write `app.config.DATABASE`  
"
1991,ExtDeprecationWarning pymongo ,2016-08-22T11:34:11Z,2016-08-22T11:35:25Z,,,,"`/usr/local/lib/python3.5/dist-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.pymongo is deprecated, use flask_pymongo instead.
`

```
# pip3 show flask

---
Metadata-Version: 2.0
Name: Flask
Version: 0.11.1
Summary: A microframework based on Werkzeug, Jinja2 and good intentions
Home-page: http://github.com/pallets/flask/
Author: Armin Ronacher
Author-email: armin.ronacher@active-4.com
Installer: pip
License: BSD
Location: /usr/local/lib/python3.5/dist-packages
Requires: click, Werkzeug, itsdangerous, Jinja2
Classifiers:
  Development Status :: 4 - Beta
  Environment :: Web Environment
  Intended Audience :: Developers
  License :: OSI Approved :: BSD License
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 2
  Programming Language :: Python :: 2.6
  Programming Language :: Python :: 2.7
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.3
  Programming Language :: Python :: 3.4
  Programming Language :: Python :: 3.5
  Topic :: Internet :: WWW/HTTP :: Dynamic Content
  Topic :: Software Development :: Libraries :: Python Modules
Entry-points:
  [console_scripts]
  flask=flask.cli:main

```

```
# apt-cache policy python3
python3:
  Installed: 3.5.1-4
  Candidate: 3.5.1-4
  Version table:
 *** 3.5.1-4 500
        500 http://ftp.debian.org/debian testing/main amd64 Packages

```
"
1990,Use the Celery result backend setting from the example,2016-08-22T09:48:17Z,2016-08-22T09:49:52Z,,,,
1989,Disable OS-level autocorrect in the interactive debugger,2016-08-22T07:51:21Z,2016-08-22T23:47:57Z,good first issue,,,"If you’re using the interactive debugger in the web browser, and autocorrect is feeling aggressive, it can kick in and try to “fix” the Python commands you’re typing. This is annoying for the end-user, and rarely helpful as autocorrect doesn’t know about Python. More than once this has bitten me, causing me to write invalid Python, or for variable names to change case mid-command.

I don’t have time to create a patch now, but I think the fix is just adding the following attribute to the `<input>` tag where you type commands:

```
autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false""
```

This probably isn’t really Flask’s fault – the OS is what actually makes the unhelpful autocorrections – but it seems like something Flask should be able to fix.

I spotted this on the developer builds of OS&nbsp;X Sierra, where autocorrect seems noticeably keener (especially in `<input>` fields) than older versions.
- Python 3.5.0
- Flask 0.11.1
- Werkzeug 0.11.10
"
1988,Properly remove f.name usage in send_file,2016-08-20T15:38:16Z,2016-08-26T01:08:04Z,blocker,,,"Amend #1849

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1988)

<!-- Reviewable:end -->
"
1987,Update testing.rst,2016-08-19T23:39:36Z,2016-08-20T02:01:13Z,,TypeError,TypeError: Type str doesn't support the buffer API,"Python 3.4.2
TypeError: Type str doesn't support the buffer API
"
1986,Setting items on `response.header` with bytestrings results in new headers in Python 3,2016-08-19T22:56:50Z,2017-05-30T17:06:29Z,,,,"Minimal example below

``` python
# coding=utf8
from flask import Flask, Response

app = Flask(__name__)

@app.route('/')
def hello():
    response = Response(""!!!"")
    response.headers[b'Server'] = 'Flask'
    return response
```

In Python 2.7.12, the resulting response has a HTTP header of `Server: Flask`. In Python 3.5.2, the resulting response has HTTP headers of `Server: Werkzeug/0.11.10 Python/3.5.2` and `b'Server': Flask`.  Python 2 has the expected behavior.

Testing from within a Python 3 venv, `pip freeze` output is:

```
click==6.6
Flask==0.11.1
itsdangerous==0.24
Jinja2==2.8
MarkupSafe==0.23
Werkzeug==0.11.10
```
"
1985,Update testing.rst,2016-08-19T22:17:45Z,2016-08-19T23:41:47Z,,,,"Python 3.4.2

Fix TypeError: Type str doesn't support the buffer API
"
1984,JSON request/response mixin,2016-08-19T19:26:16Z,2017-06-04T18:55:34Z,"in progress, json",,,"Continuing #1416

All inline discussions have been resolved."
1983,"Session no longer being marked as ""modified"" in some situations",2016-08-15T14:05:41Z,2016-08-15T15:23:54Z,,,,"I have some code that basically does:

`self.data = session['cart']`

and then later:

`self.data['some-key'] = 'some-value'`

This always used to update the session, but now it doesn't.  If I change my code to be as follows:

`self.data['some-key'] = 'some-value'`
`session.modified = True`

It suddenly works again.
"
1982,examples/flaskr test error,2016-08-12T06:42:19Z,2016-08-16T07:27:33Z,docs,AttributeError,AttributeError: 'module' object has no attribute 'app',"```
import os
import flaskr
import unittest
import tempfile

class FlaskrTestCase(unittest.TestCase):

    def setUp(self):
        self.db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()
        flaskr.app.config['TESTING'] = True
        self.app = flaskr.app.test_client()
        with flaskr.app.app_context():
            flaskr.init_db()

    def tearDown(self):
        os.close(self.db_fd)
        os.unlink(flaskr.app.config['DATABASE'])

    def test_empty_db(self):
        rv = self.app.get('/')
        assert b'No entries here so far' in rv.data
if __name__ == '__main__':
    unittest.main()
```

(flask) ➜  flask-demo git:(master) ✗ python tests/flaskr_tests.py
ERROR: test_empty_db (**main**.FlaskrTestCase)
Traceback (most recent call last):
  File ""tests/flaskr_tests.py"", line 9, in setUp
    self.db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()
AttributeError: 'module' object has no attribute 'app'

Ran 1 test in 0.004s
FAILED (errors=1)
"
1981,Fix line 31 for conformity with PEP-8,2016-08-11T20:42:22Z,2016-08-12T00:21:23Z,,,,"Hi,
I fixed this line to conform with PEP-8.
Regards,
"
1980,"""Larger Applications"" docs don't play nicely with flask run",2016-08-09T17:51:00Z,2016-09-11T16:05:28Z,"bug, docs",,,"The [Larger Applications docs](http://flask.pocoo.org/docs/0.11/patterns/packages/) recommend creating a `runserver.py` as follows:

``` python
from yourapplication import app
app.run(debug=True)
```

This runs counter to the advice in the [Development Server](http://flask.pocoo.org/docs/0.11/server/) doc for working with the `flask run` command — the `app.run()` call should be under `if __name__ == '__main__'`.

That makes it work properly, anyway. But when using `flask run`, the `runserver.py` file can be removed altogether.
"
1979,flask run does not respect debug config in config files,2016-08-08T19:04:38Z,2016-08-24T17:01:21Z,,,,"To reproduce:

https://github.com/PlasmaSheep/flask-bug

Clone repo and install flask (python2)

```
export FLASK_APP=/path/to/repo/flask-bug/autoapp.py 
flask run
```

Notice the output:

```
[$]>>> flask run
Using config: development
Debug is: True
 * Serving Flask app ""autoapp""
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
```

So debug is enabled in the config, but the debugger is not actually active.

This does work if you set the `FLASK_DEBUG` env variable:

```
[$]>>>  flask run
 * Serving Flask app ""autoapp""
 * Forcing debug mode on
Using config: development
Debug is: True
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
Using config: development
Debug is: True
 * Debugger is active!
 * Debugger pin code: 155-859-497
```

However I think that the debug parameter should be specified in only one place, and that place should be the application config file so that you don't have to worry about setting environment variables for things you already specified in the config.
"
1978,docs: sqlalchemy pattern document has an invalid import,2016-08-04T13:37:53Z,2016-08-08T02:04:34Z,,,,"The [declarative](https://github.com/pallets/flask/blob/master/docs/patterns/sqlalchemy.rst#declarative) section includes the following example:

```
Declarative
-----------

The declarative extension in SQLAlchemy is the most recent method of using
SQLAlchemy.  It allows you to define tables and models in one go, similar
to how Django works.  In addition to the following text I recommend the
official documentation on the `declarative`_ extension.

Here's the example :file:`database.py` module for your application::

    from sqlalchemy import create_engine
    from sqlalchemy.orm import scoped_session, sessionmaker
    from sqlalchemy.ext.declarative import declarative_base

    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)
    db_session = scoped_session(sessionmaker(autocommit=False,
                                             autoflush=False,
                                             bind=engine))
```

`db_session` is a variable, and a paragraph below, it tries to import it. Which isn't really possible.

```

    from yourapplication.database import db_session

    @app.teardown_appcontext
    def shutdown_session(exception=None):
        db_session.remove()
```

This documentation is misleading 
"
1977,Set __qualname__ on class-based view function,2016-08-03T20:29:01Z,2016-08-15T16:18:15Z,,,,"On Python 3, New Relic uses `__qualname__` to trace transactions. Without setting `__qualname__` in `as_view()`, I don't get meaningful accounting of transactions in New Relic on my class-based views.

`__qualname__` is meaningless in Python 2, but I think it's just a harmless no-op in this context.
"
1976,Use path of socket consistently accross document.,2016-08-03T11:43:31Z,2016-08-03T16:22:14Z,,,,"Fixes #1975 
"
1975,Examples in uWSGI docs are not using the same socket.,2016-08-03T07:54:25Z,2016-08-03T16:22:14Z,,,,"From [this page](http://flask.pocoo.org/docs/0.11/deploying/uwsgi/)
uWSGI is started with a socket at `/tmp/uwsgi.sock` and the Nginx config points to `/tmp/application.sock`. Both example should point to the same socket, I'd suggest `/tmp/application.sock`.
"
1974,"POST to Flask has size limit, and provokes ""BrokenPipeError: [Errno 32] Broken pipe"" whenever no request.data is called",2016-08-03T00:43:57Z,2016-09-06T19:55:36Z,,"BrokenPipeError, requests.packages.urllib3.exceptions.ProtocolError, requests.exceptions.ConnectionError","BrokenPipeError: [Errno 32] Broken pipe, requests.packages.urllib3.exceptions.ProtocolError: ('Connection aborted.', BrokenPipeError(32, 'Broken pipe')), requests.exceptions.ConnectionError: ('Connection aborted.', BrokenPipeError(32, 'Broken pipe'))","Hi!
``
We've experienced an interesting issue:

Flask:

``` python
#post_flask.py
from flask import (Flask, request)
app = Flask(__name__)
app.config['MAX_CONTENT_LENGTH'] = 1600 * 1024 * 1024

@app.route('/pepe_post', methods=['POST'])
def post_pepe():
    print('Hey!!!')
    if request.method == 'POST':
        #print(len(request.data))  #<< Uncomment to fix!!!
        return 'hoho'

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5555, debug=True)
```

Client:

``` python
#do_post.py
import requests

def post(url, payload=None):
    """""" Handles POST http requests having an url and some optional payload """"""
    print(""POST against url: '%s'"", url)
    print(""POST payload size: '%s'"", len(payload))
    resp = requests.post(url, data=payload, headers={'content-type':'application/json'})
    print(""POST response: '%s'"", resp.text)
    if resp.status_code != requests.codes.ok:
        print('Service Response indicates error: %s/%s',
                        resp.status_code, resp.content)
        resp.raise_for_status()

if __name__ == '__main__':
    url = 'http://localhost:5555/pepe_post'
    n = 1
    while True:
        print('post with payload of %s' % n)
        payload = n * 1024 * 'a'   # << this breaks avobe 690K payloads
        #payload = n * 1024 * 1024 * 'a'   # << this breaks inmediately
        post(url, payload)
        n += 1
```

Meaning, above ~690K posts, you get:

```
post with payload of 696
POST against url: '%s' http://localhost:5555/pepe_post
POST payload size: '%s' 712704
Traceback (most recent call last):
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py"", line 559, in urlopen
    body=body, headers=headers)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py"", line 353, in _make_request
    conn.request(method, url, **httplib_request_kw)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 1137, in request
    self._send_request(method, url, body, headers)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 1182, in _send_request
    self.endheaders(body)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 1133, in endheaders
    self._send_output(message_body)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 967, in _send_output
    self.send(message_body)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 929, in send
    self.sock.sendall(data)
BrokenPipeError: [Errno 32] Broken pipe


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/adapters.py"", line 376, in send
    timeout=timeout
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py"", line 609, in urlopen
    _stacktrace=sys.exc_info()[2])
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/util/retry.py"", line 247, in increment
    raise six.reraise(type(error), error, _stacktrace)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/packages/six.py"", line 309, in reraise
    raise value.with_traceback(tb)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py"", line 559, in urlopen
    body=body, headers=headers)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py"", line 353, in _make_request
    conn.request(method, url, **httplib_request_kw)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 1137, in request
    self._send_request(method, url, body, headers)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 1182, in _send_request
    self.endheaders(body)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 1133, in endheaders
    self._send_output(message_body)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 967, in _send_output
    self.send(message_body)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py"", line 929, in send
    self.sock.sendall(data)
requests.packages.urllib3.exceptions.ProtocolError: ('Connection aborted.', BrokenPipeError(32, 'Broken pipe'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""do_post.py"", line 21, in <module>
    post(url, payload)
  File ""do_post.py"", line 7, in post
    resp = requests.post(url, data=payload, headers={'content-type':'application/json'})
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/api.py"", line 107, in post
    return request('post', url, data=data, json=json, **kwargs)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/api.py"", line 53, in request
    return session.request(method=method, url=url, **kwargs)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/sessions.py"", line 468, in request
    resp = self.send(prep, **send_kwargs)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/sessions.py"", line 576, in send
    r = adapter.send(request, **kwargs)
  File ""/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/adapters.py"", line 426, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', BrokenPipeError(32, 'Broken pipe'))
```

Can someone give us some information about this? is this by design? bug?

Version:
Flask==0.10.1

Thanks!
"
1973,Update for python3,2016-08-02T14:51:03Z,2016-08-20T15:43:10Z,,,,"Just updated print 'Initialized the database.' with print('Initialized the database.') to be python3 compliant.
"
1972,%-encoded / gets included in wrong <path:...> parameter,2016-08-01T20:15:06Z,2016-08-08T15:48:52Z,,,,"Problem description:

> In a URL with two path:... type arguments (both need to accept URL-path-encoded data) next to each other, a %2F (encoded /) gets included in the wrong parameter.

Versions:

> Python 2.7.11
> Flask 0.11
> Werkzeug 0.11.10

Request URL:
`http://localhost:5000/api/v1/entry/foo.com/%2Fbar%2Fbaz/block/12345/get`

Result:
`{""this_is_a_test"": ""XXX this is test code, not a real thing"", ""path"": ""bar/baz"", ""name"": ""foo.com/""}`

That is:

> name: foo.com/
> path: bar/baz

Expected Result:
`{""this_is_a_test"": ""XXX this is test code, not a real thing"", ""path"": ""/bar/baz"", ""name"": ""foo.com""}`

That is:

> name: foo.com
> path: /bar/baz

The code:

```
# The special modifier ""path"" as in ""<path:somevariablename>"" means
# ""somevariablename"" may be URL path encoded data.
@app.route('/api/v1/entry/<path:name>/get')
@app.route('/api/v1/entry/<path:name>/<path:path>/get')
def get_entry(name, path=None, methods=['GET']):
    name = urllib.unquote(name)

    if path is not None:
        path = urllib.unquote(path)

    return json.dumps({
        'this_is_a_test': 'XXX this is test code, not a real thing',
        'name': name,
        'path': path,
    })
```
"
1971,Implement RFC 7233,2016-08-01T16:17:51Z,2016-09-26T12:00:18Z,,,,"It would be great to support [RFC 7233 : Hypertext Transfer Protocol (HTTP/1.1): Range Requests](https://tools.ietf.org/html/rfc7233) for next major version, at least for non multipart/byteranges media type.

I'm willing to implement this, so please share your thoughts about this.

What must be done:
- Modify `send_file` method to support Range Requests
  - Use existing `conditionnal` parameter to enable Range Requests support ?
"
1970,FLASK_APP variable isn't behaving as specified.,2016-07-31T03:10:09Z,2016-08-08T00:25:27Z,,ImportError,ImportError: No module named 'run',"[The docs](http://flask.pocoo.org/docs/0.11/cli/) on the FLASK_APP variable state that

> In that imported file the name of the app needs to be called `app` or optionally be specified after a colon. For instance _mymodule:application_ would tell it to use the _application_ object in the `mymodule.py` file.

However, creating the following script (run.py):

```
from flask import Flask

webapp = Flask(__name__)
```

setting `FLASK_APP=run.py:webapp`, and running `flask run` gives me an ImportError:

```
Traceback (most recent call last):
  File ""/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py"", line 156, in __call__
    self._flush_bg_loading_exception()
  File ""/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py"", line 144, in _flush_bg_loading_exception
    reraise(*exc_info)
  File ""/Users/me/app/venv/lib/python3.5/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py"", line 133, in _load_app
    self._load_unlocked()
  File ""/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py"", line 148, in _load_unlocked
    self._app = rv = self.loader()
  File ""/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py"", line 209, in load_app
    rv = locate_app(self.app_import_path)
  File ""/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py"", line 89, in locate_app
    __import__(module)
ImportError: No module named 'run'
```

Interestingly, using `FLASK_APP=run.py` actually works even with the app named ""webapp"". So while I'm not sure how much of this is error on my part vs. error on flask's, the docs are wrong in saying that the Flask object _needs_ to be named ""app"".
"
1969,Yield don't work on Chrome,2016-07-29T23:32:28Z,2016-07-29T23:59:24Z,,,,"The following view only generate output **during the execution** on Firefox.
On Chrome the request flush the entire response once, when the `while` ends, at the end.

What are making the it don't work on Chrome?

```
@processes.route('/read_buffer/<int:pid>')
def read_buffer(pid):

    def generate():
        sent = 0
        while not settings.buffers[pid]['finished']:
            for i, row in enumerate(settings.buffers[pid]['lines'][sent:]):
                sent += 1
                yield row

            gevent.sleep(0.5)

    return flask.Response(
        response=generate(),
        status=200,
        mimetype=""text/plain""
    )
```

App config:

```
app = flask.Flask(__name__)
app.config['DEBUG'] = False
app.register_blueprint(processes.processes, url_prefix='/processes')
CORS(app)
socketio = SocketIO(app, async_mode='gevent')
socketio.run(
    app=app,
    host=_config.get('server', 'host', fallback='0.0.0.0'),
    port=_config.getint('server', 'port', fallback=5000),
    use_reloader=False
)
```

Thank you
"
1968,from flask import current_app appears to have side effects,2016-07-29T16:45:39Z,2016-07-30T01:07:39Z,,"TypeError, RuntimeError","TypeError: __import__() argument 1 must be string, not None, RuntimeError: Working outside of request context.","I have been trying to document my project with sphinx, but it seems that when sphinx reads a file that contains `import current_app` it breaks with the following message:

```
[$]>>> make html
sphinx-build -b html -d build/doctrees  -W -v source build/html
Running Sphinx v1.4.5
loading pickled environment... not yet created
building [mo]: targets for 0 po files that are out of date
building [html]: targets for 5 source files that are out of date
updating environment: 5 added, 0 changed, 0 removed
reading sources... [ 20%] index
reading sources... [ 40%] modules
reading sources... [ 60%] quizApp
Traceback (most recent call last):
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/ext/viewcode.py"", line 28, in _get_full_modname
    return get_full_modname(modname, attribute)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/util/__init__.py"", line 300, in get_full_modname
    __import__(modname)
TypeError: __import__() argument 1 must be string, not None
viewcode can't import None, failed with error ""__import__() argument 1 must be string, not None""
Traceback (most recent call last):
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/ext/viewcode.py"", line 28, in _get_full_modname
    return get_full_modname(modname, attribute)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/util/__init__.py"", line 300, in get_full_modname
    __import__(modname)
TypeError: __import__() argument 1 must be string, not None
viewcode can't import None, failed with error ""__import__() argument 1 must be string, not None""
Didn't find ParticipantExperiment.activities in quizApp.models
Didn't find Question.explantion in quizApp.models
Didn't find User.name in quizApp.models
Didn't find User.authenticated in quizApp.models
reading sources... [ 80%] quizApp.forms
reading sources... [100%] quizApp.views

Traceback (most recent call last):
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/cmdline.py"", line 244, in main
    app.build(opts.force_all, filenames)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/application.py"", line 297, in build
    self.builder.build_update()
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/builders/__init__.py"", line 251, in build_update
    'out of date' % len(to_build))
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/builders/__init__.py"", line 265, in build
    self.doctreedir, self.app))
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/environment.py"", line 569, in update
    self._read_serial(docnames, app)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/environment.py"", line 589, in _read_serial
    self.read_doc(docname, app)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/environment.py"", line 742, in read_doc
    pub.publish()
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/core.py"", line 217, in publish
    self.settings)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/io.py"", line 49, in read
    self.parse()
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/readers/__init__.py"", line 78, in parse
    self.parser.parse(self.input, document)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/__init__.py"", line 172, in parse
    self.statemachine.run(inputlines, document, inliner=self.inliner)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 170, in run
    input_source=document['source'])
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/statemachine.py"", line 239, in run
    context, state, transitions)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/statemachine.py"", line 460, in check_line
    return method(match, context, next_state)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 2726, in underline
    self.section(title, source, style, lineno - 1, messages)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 327, in section
    self.new_subsection(title, lineno, messages)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 395, in new_subsection
    node=section_node, match_titles=True)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 282, in nested_parse
    node=node, match_titles=match_titles)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 195, in run
    results = StateMachineWS.run(self, input_lines, input_offset)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/statemachine.py"", line 239, in run
    context, state, transitions)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/statemachine.py"", line 460, in check_line
    return method(match, context, next_state)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 2726, in underline
    self.section(title, source, style, lineno - 1, messages)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 327, in section
    self.new_subsection(title, lineno, messages)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 395, in new_subsection
    node=section_node, match_titles=True)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 282, in nested_parse
    node=node, match_titles=match_titles)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 195, in run
    results = StateMachineWS.run(self, input_lines, input_offset)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/statemachine.py"", line 239, in run
    context, state, transitions)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/statemachine.py"", line 460, in check_line
    return method(match, context, next_state)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 2299, in explicit_markup
    nodelist, blank_finish = self.explicit_construct(match)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 2311, in explicit_construct
    return method(self, expmatch)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 2054, in directive
    directive_class, match, type_name, option_presets)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/docutils/parsers/rst/states.py"", line 2103, in run_directive
    result = directive_instance.run()
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/ext/autodoc.py"", line 1613, in run
    documenter.generate(more_content=self.content)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/ext/autodoc.py"", line 963, in generate
    self.document_members(all_members)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/ext/autodoc.py"", line 855, in document_members
    if cls.can_document_member(member, mname, isattr, self)]
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/ext/autodoc.py"", line 1458, in can_document_member
    isdatadesc = isdescriptor(member) and not \
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/util/inspect.py"", line 101, in isdescriptor
    if hasattr(safe_getattr(x, item, None), '__call__'):
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/sphinx/util/inspect.py"", line 113, in safe_getattr
    if name in obj.__dict__:
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/werkzeug/local.py"", line 343, in __getattr__
    return getattr(self._get_current_object(), name)
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/werkzeug/local.py"", line 302, in _get_current_object
    return self.__local()
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/flask/globals.py"", line 37, in _lookup_req_object
    raise RuntimeError(_request_ctx_err_msg)
RuntimeError: Working outside of request context.

This typically means that you attempted to use functionality that needed
an active HTTP request.  Consult the documentation on testing for
information about how to avoid this problem.

Exception occurred:
  File ""/home/alyosha/.virtualenvs/quizApp-new/lib/python2.7/site-packages/flask/globals.py"", line 37, in _lookup_req_object
    raise RuntimeError(_request_ctx_err_msg)
RuntimeError: Working outside of request context.

This typically means that you attempted to use functionality that needed
an active HTTP request.  Consult the documentation on testing for
information about how to avoid this problem.
The full traceback has been saved in /tmp/sphinx-err-iI83eY.log, if you want to report the issue to the developers.
Please also report this if it was a user error, so that a better error message can be provided next time.
A bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!
make: *** [Makefile:53: html] Error 1
```

It looks like something weird is going on at import time with `current_app`. I'm not 100% sure if this is a sphinx error or flask error, but I'm leaning towards flask.

I made the following example to reproduce it.

https://github.com/PlasmaSheep/sphinx-error

Instructions for running it are in the `README.md` file.
"
1967,Remove unused Redbaron dependency,2016-07-29T10:49:01Z,2016-07-29T12:27:30Z,,,,"Dependency was added for the ext migration script in #1342 but now that we've moved the script to its own [repo](https://github.com/pallets/flask-ext-migrate), Redbaron is no longer a dependency for the main repo.

See also https://github.com/pallets/flask/pull/1627
"
1966,flask app bundle with py2exe issue (AttributeError: function 'PyObject_GetBuffer' not found),2016-07-29T03:12:18Z,2017-05-31T19:15:30Z,,AttributeError,AttributeError: function 'PyObject_GetBuffer' not found,"With current newest version (Flask 0.11.1), there is a issue with py2exe (0.6.9).
It may be caused by flask.cli module (click 6.6).
**Flask 0.10.1 has not this issue.**

A simplest flask script named test_flask.py:

```
from flask import Flask
app = Flask(__name__)

@app.route(""/"")
def hello():
    return ""Hello World!""

if __name__ == ""__main__"":
    app.run()
```

Use this py2exe script to make a test_flask.exe:

```
import sys
import py2exe
from distutils.core import setup

sys.argv.append('py2exe')

setup(
    options={
        'py2exe':
        {
            'bundle_files': 1,
        }
    },
    console=[{'script': 'test_flask.py'}],
)
```

**When execute test_flask.exe, get these:**
Traceback (most recent call last):
  File ""test_flask.py"", line 1, in <module>
  File ""zipextimporter.pyc"", line 82, in load_module
  File ""flask__init__.pyc"", line 21, in <module>
  File ""zipextimporter.pyc"", line 82, in load_module
  File ""flask\app.pyc"", line 27, in <module>
  File ""zipextimporter.pyc"", line 82, in load_module
  File ""flask\cli.pyc"", line 17, in <module>
  File ""zipextimporter.pyc"", line 82, in load_module
  File ""click__init__.pyc"", line 18, in <module>
  File ""zipextimporter.pyc"", line 82, in load_module
  File ""click\core.pyc"", line 7, in <module>
  File ""zipextimporter.pyc"", line 82, in load_module
  File ""click\types.pyc"", line 4, in <module>
  File ""zipextimporter.pyc"", line 82, in load_module
  File ""click_compat.pyc"", line 530, in <module>
  File ""zipextimporter.pyc"", line 82, in load_module
  File ""click_winconsole.pyc"", line 23, in <module>
  File ""ctypes__init__.pyc"", line 378, in **getattr**
  File ""ctypes__init__.pyc"", line 383, in **getitem**
AttributeError: function 'PyObject_GetBuffer' not found

My **pip list**:
alabaster (0.7.9)
Babel (2.1.1)
beautifulsoup4 (4.4.1)
blinker (1.4)
cffi (1.7.0)
click (6.6)
colorama (0.3.3)
cryptography (1.4)
cx-Oracle (5.2)
cycler (0.10.0)
Cython (0.24)
demjson (2.2.4)
docutils (0.12)
ecdsa (0.13)
enum34 (1.1.6)
erequests (0.4.1)
et-xmlfile (1.0.1)
eventlet (0.19.0)
Fabric (1.11.1)
Flask (0.11.1)
Flask-SocketIO (2.5)
greenlet (0.4.10)
idna (2.1)
ipaddress (1.0.16)
itsdangerous (0.24)
jdcal (1.2)
Jinja2 (2.8)
lxml (3.6.0)
MarkupSafe (0.23)
matplotlib (1.5.1)
meliae (0.4.0.final.0)
MySQL-python (1.2.5)
numpy (1.11.0)
openpyxl (2.3.5)
paramiko (2.0.2)
Pillow (3.2.0)
pip (8.1.2)
psutil (4.3.0)
py2exe (0.6.9)
pyasn1 (0.1.9)
pycparser (2.14)
pycrypto (2.6.1)
Pygments (2.0.2)
pymssql (2.0.1)
pyodbc (3.0.7)
pyparsing (2.1.4)
pyserial (2.5rc2)
python-dateutil (2.5.3)
python-engineio (0.9.2)
python-socketio (1.4.2)
pytz (2016.4)
pywin32 (219)
requests (2.10.0)
setuptools (25.1.0)
six (1.10.0)
snowballstemmer (1.2.0)
Sphinx (1.3.1)
sphinx-rtd-theme (0.1.9)
SQLAlchemy (1.0.8)
Twisted (16.3.0)
virtualenv (15.0.2)
Werkzeug (0.11.10)
XlsxWriter (0.8.7)
xlwt (1.1.2)
zope.interface (4.2.0)
"
1965,Added a missing module to import statement,2016-07-28T14:36:04Z,2017-05-12T05:38:37Z,"docs, in progress",,,
1964,Logbook integration?,2016-07-27T22:55:03Z,2016-09-06T12:40:38Z,,,,"Just noticed Logbook 1.0 was released a month ago, and was reminded of discussion about it on the mailing list (e.g. http://librelist.com/browser/flask/2011/12/28/flask-+-logbook/). Armin mentioned his desire to add Logbook integration to Flask in that 5-year-old thread, but I didn't see any mention of it here in the tracker, so I figured I'd open a ticket. If that's no longer the intention please close, but either way looking forward to finding out the latest plans.
"
1963,isolate templates between blueprints,2016-07-27T12:25:57Z,2016-07-27T12:27:00Z,,,,"see the test
"
1962,failing tests,2016-07-27T02:44:52Z,2016-07-27T04:06:25Z,,,,"running py.test on the tests folder, I get a few failures

test_safe_join and test_safe_join_exceptions both fail.
The first one fails with a 'TypeError: safe_join() missing 1 required positional argument: 'filename'
The second fails with a 'TypeError: safe_join() takes 2 positional arguments but 3 were given'

Also

test_send_file_last_modified fails. 
'rv.last_modified' is None. Hence, 'assert rv.last_modified == datetime.datetime(1999,1,1,0,0) fails

I'm somewhat of a amatuer programmer so maybe it's just me :)
"
1961,Improve the layout example,2016-07-23T06:04:40Z,2016-07-23T06:50:54Z,,,,"# There should be two `__init__.py` files in the layout example, one under the folder ""blueprints"" and the other one under folder ""admin"".

like this:

```
yourpackage/
    blueprints/
        admin/
            templates/
                admin/
                    index.html
                __init__.py
            __init__.py
```

However, I think this might confuse people about which folder each `__init__.py` is in.

So, I think put the slash at front can make the example easier to understand.
"
1960,Document the rest arguments of abort function,2016-07-22T15:08:31Z,2016-09-18T13:48:14Z,,,,"Updated abort function in api.rst, to document the ability to use
args and kwargs for HTTPException. Forwarding the rest of the arguments to the exception was not documented, even when it is possible by abort (Aborter).

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1960)

<!-- Reviewable:end -->
"
1959,Not working on AWS Windows instance?,2016-07-21T15:10:33Z,2016-07-21T18:14:56Z,,,,"Locally(within the cloud instance ) being able to create the server and access from browser using localhost.But when trying to access the flask application outside the instance it fails to connect.The port used was 8217.So I created another server on Nodejs on the same port and then the node application is accessible outside the instance with the public IP. Also to ensure I thought that the problem might be only with my python,so to validate it I tried creating a naked server using HTTPServer and it worked fine. Not sure what is going wrong here.Any  help?
"
1958,May flask support live settings like django-constance,2016-07-18T14:48:17Z,2016-07-18T14:49:38Z,,,,"Hi, I'm new to flask, and just wonder if flask could support editing the settings on admin and hot reload as a feature, like the django-constance worked.

Thx.
"
1957,May flask support live settings like django-constance,2016-07-18T14:47:00Z,2016-07-18T14:48:23Z,,,,"Hi, I'm new to flask, and just wonder if flask could support editing the settings on admin and hot reload, like the django-constance worked.

Thx.
"
1956,Update allowed_file function in fileuploads.rst,2016-07-16T16:01:18Z,2016-07-17T18:02:26Z,,,,"Update allowed_file function to accept lowercase and uppercase file extensions.
"
1955,Flask Test Client fails to get on subdomains with explicit port 80,2016-07-14T21:16:58Z,2016-09-08T14:33:42Z,,,,"When `app.config[""SERVER_NAME""]` contains an explicit port of 80 (i.e. `domain.tld:80`) the flask test client fails to process get urls at subdomains.  There are three test cases:
1. Explicit port 80 in SERVER_NAME: All subdomain requests redirect to 404 in test client.
2. Implicit port 80 in SERVER_NAME: Subdomain requests work.
3. Explicit port that is not 80: Subdomain requests work if the port is provided correctly.

[Example gist located here.](https://gist.github.com/CorneliaXaos/9e4fa46f442f72fc5bff07ffedace397)

More information at [this Stack Overflow post.](http://stackoverflow.com/questions/38363885/)

Python Version: 3.5.1+
Output of `pip3 freeze`:

> click==6.6
> Flask==0.11.1
> itsdangerous==0.24
> Jinja2==2.8
> MarkupSafe==0.23
> Werkzeug==0.11.10
"
1954,Update minitwit & improve testing for examples,2016-07-12T17:52:16Z,2016-08-22T18:52:54Z,,,,"- Related to #1945
- Re-works minitwit to be installed and run as:
  
  pip install --editable .
  export FLASK_APP=minitwit.minitwit
  export FLASK_DEBUG=1
  flask initdb
  flask run
- added flaskr and minitwit to norecursedirs
  - tests not properly run when using pytest standards
  - see: http://stackoverflow.com/questions/38313171/configuring-pytest-with-installable-examples-in-a-project
- Both flaskr and minitwit now follow pytest standards.
- Tests can for them as `py.test` or `python setup.py test`
"
1953,Update minitwit & improve testing for examples,2016-07-12T17:42:49Z,2016-07-12T17:52:28Z,,,,"- Related to #1945
- Re-works minitwit to be installed and run as:
  
  pip install --editable .
  export FLASK_APP=minitwit.minitwit
  export FLASK_DEBUG=1
  flask initdb
  flask run
- added flaskr and minitwit to norecursedirs
  - tests not properly run when using pytest standards
  - see: http://stackoverflow.com/questions/38313171/configuring-pytest-with-installable-examples-in-a-project
- Both flaskr and minitwit now follow pytest standards.
- Tests can for them as `py.test` or `python setup.py test`
"
1952,Flask-paginate shows all results on same page,2016-07-11T18:48:30Z,2016-07-11T18:57:03Z,,,,"I am using Flask-paginate for pagination in my app. The results are fetched from database. The problem is that all results show up on 1st page and when I click on the next page number again all results are displayed on that page. The page number in url changes to 2/3/4 etc. I [this](https://pythonhosted.org/Flask-paginate/) as reference. Here is my code snippet

```
from flask.ext.paginate import Pagination
    @app.route('/users')
    def users_page():

        page_size = 25
        limit = 100

        search = False
        q = request.args.get('q')
        if q:
            search = True
        try:
            page = int(request.args.get('page', 1))
        except ValueError:
            page = 1
        with session_scope() as session:
            users = users_dao.get_users(session, limit=limit)
            pagination = Pagination(page=page, total=len(users), per_page=page_size, search=search, record_name='users')
            return render_template(""users.html"", users=users, pagination=pagination)
```

The pagination info on html page says `displaying 1-25 results of 100`. When clicked on page 2, it says `displaying 25-50 results of 100`. So somehow the pagination has figured out on the basis of total and per_page how many results should be displayed but somewhere it fails to force that on number of rows to show.

The template looks like 

```
{{ pagination.info }}
    <table class=""table"">
        <thead>
            <tr>
                <th>User Name</th>
                <th>Phone</th>
                <th>City</th>
                <th>Country</th>
            </tr>
        </thead>
        <tbody>
            {% for user in users %}
            <tr>
                <td>{{ user.user_name }}</td>
                <td>{{ user.phone_number }}</td>
                <td>{{user.city}}</td>
                <td>{{user.country}}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
    {{ pagination.links }}
```
"
1951,"close <li> tag in lines (16,18)",2016-07-09T18:52:33Z,2016-07-28T20:46:42Z,,,,"![screenshot from 2016-07-09 21-51-02](https://cloud.githubusercontent.com/assets/13125847/16709636/47f25eb0-461f-11e6-9fa5-885cba578f6b.png)
i noticed that `<li>` tag haven't closed in lines 15,18 
which is bad practice as if i put `some thing : h1> some text /h1>` in the text-area  all the other articles become h1> so big and color blue
"
1950,adding in try around __import__ to catch invalid files/paths,2016-07-08T05:37:27Z,2016-08-12T13:12:00Z,,,,"I'll start this off by saying this may be a naive approach to what appears to be a common thread between a few recent issues (#1926, #1902, #1829). I'm attempting to solve the issue of mistyped or improperly defined app paths reaching the **import** call for the flask app server. Given the way `cli.py` is currently structured, I can't find a bulletproof way to ensure only correct paths/module names reach the import. 

If that's the case, I believe the best response is to simply catch the error and return something more descriptive than `ImportError: Import by filename is not supported.` for debugging purposes.
"
1949,CLI fails during create database in Flaskr tutorial,2016-07-07T18:40:09Z,2016-07-07T19:19:59Z,,ImportError,ImportError: No module named flaskr,"When following the tutorial, I could not run `$ flask initdb`. 

```
Traceback (most recent call last):
  File ""/Users/dvf/environments/flaskTutorial/bin/flask"", line 11, in <module>
    sys.exit(main())
  File ""/Users/dvf/environments/flaskTutorial/lib/python2.7/site-packages/flask_cli/cli.py"", line 502, in main
    cli.main(args=args, prog_name=name)
  File ""/Users/dvf/environments/flaskTutorial/lib/python2.7/site-packages/flask_cli/cli.py"", line 369, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""/Users/dvf/environments/flaskTutorial/lib/python2.7/site-packages/click/core.py"", line 696, in main
    rv = self.invoke(ctx)
  File ""/Users/dvf/environments/flaskTutorial/lib/python2.7/site-packages/click/core.py"", line 1055, in invoke
    cmd_name, cmd, args = self.resolve_command(ctx, args)
  File ""/Users/dvf/environments/flaskTutorial/lib/python2.7/site-packages/click/core.py"", line 1094, in resolve_command
    cmd = self.get_command(ctx, cmd_name)
  File ""/Users/dvf/environments/flaskTutorial/lib/python2.7/site-packages/flask_cli/cli.py"", line 340, in get_command
    rv = info.load_app().cli.get_command(ctx, name)
  File ""/Users/dvf/environments/flaskTutorial/lib/python2.7/site-packages/flask_cli/cli.py"", line 226, in load_app
    rv = locate_app(self.app_import_path)
  File ""/Users/dvf/environments/flaskTutorial/lib/python2.7/site-packages/flask_cli/cli.py"", line 90, in locate_app
    __import__(module)
ImportError: No module named flaskr
```

This was fixed by changing the environment variable to:

```
export FLASK_APP=flaskr.py
```

On OS X 10.11.3 and Python 2.7.12
"
1948,Documentation for Flask + mod_wsgi + pyvenv + Python 3 doesn't work,2016-07-07T12:52:37Z,,docs,,,"It says [in the documentation](http://flask.pocoo.org/docs/0.11/deploying/mod_wsgi/) (the last section - ""Working with Virtual Environments""):

> For Python 3 add the following lines to the top of your .wsgi file:
> 
> ```
> activate_this = '/path/to/env/bin/activate_this.py'
> with open(activate_this) as file_:
>     exec(file_.read(), dict(__file__=activate_this))
> ```

However `activate_this.py` is no longer present in pyvenv (see http://bugs.python.org/issue21496), thus the above code doesn't work. I found a stackoverflow answer where it said that just copying `activate_this.py` from a 2.7 virtualenv might work, however I didn't go down that route.

How I managed to get it working:

I added `WSGIPythonHome /path/to/env` to the top level of my apache config (ie. outside of VirtualEnv). However that might be a little to big of a hammer if people want to run multiple applications in the same Apache instance. In that case setting `python-path` on `WSGIDaemonProcess` might work (however I didn't try it out).
"
1947,Persona example - deprecated,2016-07-06T12:13:51Z,2016-07-06T15:09:38Z,,,,"From the Mozilla site:
[""The persona.org service is shutting down. This service will be unavailable after November 30th, 2016""](https://wiki.mozilla.org/Identity/Persona_Shutdown_Guidelines_for_Reliers#Why_is_persona.org_being_shut_down.3F)
"
1946,Added 127.0.0.0/8 to the session cookie 'localhost' exception.,2016-07-06T08:52:50Z,2016-09-06T12:33:56Z,,,,"Added 127.0.0.0/8 IP range to the expression which checks whether the session cookie domain is 'localhost' in the method `get_cookie_domain`.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1946)

<!-- Reviewable:end -->
"
1945,Address #1902: Converts example/flaskr to have a setup.py,2016-07-06T00:24:38Z,2016-07-06T00:31:00Z,,,,"Updates the flaskr example, as well as the tutorial docs, for consistency. I tested that following the docs linearly works as expected. 
"
1944,Address #1902: Converts example/flaskr to have a setup.py,2016-07-04T16:28:21Z,2016-07-04T16:37:02Z,,,,
1943,{{ }} has trouble with method calls and array indexes in single call,2016-07-03T10:24:24Z,2016-07-04T14:58:14Z,,"`TypeError, `Error","`TypeError: Method invoked on an object that is not Date., `Error: SyntaxError: Unexpected token !== in file /home/ubuntu/workspace/static/topic.html.","In a forum app I am working on, I have found that this works (in a template):
`{% set lastpost=thread.dataValues.Comments[latest] %}`
`Last post on {{ lastpost.datetime.toLocaleString() }}`

However, if I try to combine it into one line, like so:
`{{ thread.dataValues.Comments[latest].datetime.toLocaleString() }}`
it results in
`TypeError: Method invoked on an object that is not Date.
   at toLocaleString (native)
   at eval (eval at <anonymous> (/home/ubuntu/workspace/node_modules/swig/lib/swig.js:498:13), <anonymous>:79:2009)
   at Object.exports.each (/home/ubuntu/workspace/node_modules/swig/lib/utils.js:45:11)
   at eval (eval at <anonymous> (/home/ubuntu/workspace/node_modules/swig/lib/swig.js:498:13), <anonymous>:50:10)
   at Object.eval [as tpl] (eval at <anonymous> (/home/ubuntu/workspace/node_modules/swig/lib/swig.js:498:13), <anonymous>:95:3)
   at compiled (/home/ubuntu/workspace/node_modules/swig/lib/swig.js:619:18)
   at /home/ubuntu/workspace/node_modules/swig/lib/swig.js:559:20
   at /home/ubuntu/workspace/node_modules/swig/lib/swig.js:690:9
   at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:380:3)`

Additionally, attempting to do 
`{{ typeof(thread.dataValues.Comments[latest].datetime) }}`
results in
`Error: SyntaxError: Unexpected token !== in file /home/ubuntu/workspace/static/topic.html.
   at Object.exports.throwError (/home/ubuntu/workspace/node_modules/swig/lib/utils.js:183:9)
   at precompile (/home/ubuntu/workspace/node_modules/swig/lib/swig.js:505:13)
   at compile (/home/ubuntu/workspace/node_modules/swig/lib/swig.js:606:16)
   at /home/ubuntu/workspace/node_modules/swig/lib/swig.js:684:27
   at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:380:3)`
"
1942,clarify blueprint 404 error handling in docs,2016-07-02T22:13:38Z,2017-05-09T15:44:59Z,docs,,,"Incorporates @ThiefMaster's response to #1935 in the blueprint documentation.  If this isn't clear enough or is inaccurate I'll be happy to do some research and rewrite.

Also, I'm a first time contributor, if I've failed to follow a protocol somewhere please let me know.
"
1941,Flask fails to reload upon Traceback,2016-07-01T16:16:58Z,2016-07-05T15:38:24Z,,IOError,IOError: [Errno 32] Broken pipe,"I have the following Flask app running in a Stage server, and I realized that some requests were affecting its operation, causing Tracebacks and with this, the Flask app was still running as a process, but not answering any sort of request, neither giving a kind of Internal Server Error (5xx).

Here is my code:

``` python
#!/usr/bin/python
# -*- coding: utf-8 -*-

from flask import Flask, jsonify
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address

app = Flask(__name__)
app.config['JSON_AS_ASCII'] = False

limiter = Limiter (
    app,
    key_func=get_remote_address,
    global_limits=[""180 per day"",""30 per hour""]
)

@app.after_request
def server_response(response):
    response.headers[""Server""] = ""WS""
    return response

@app.route('/json')
def f_json():

    d = { ""result"":[
                {""id"":""1"",""name"":""John"",""email"":""john-flask@gmail.com""},
                {""id"":""2"",""name"":""NIkolas"",""email"":""nikolas-flask@gmail.com""},
        {""id"":""3"",""name"":""Samanta"",""email"":""samanta-flask@gmail.com""}
    ]}
    return jsonify(d)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=80, debug=True)
```

Here is what I found in the debug, which caused the Traceback (and Flask was still running, but not answering any request).

```
191.96.249.231 - - [30/Jun/2016 19:11:47] ""GET /plugins/system/plugin_googlemap2/plugin_googlemap2_proxy.php?url=http://191.96.249.231/shodanhq HTTP/1.0"" 404 -
Exception in thread Thread-2:
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
    self.run()
  File ""/usr/lib/python2.7/threading.py"", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 659, in inner
    srv.serve_forever()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 499, in serve_forever
    HTTPServer.serve_forever(self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 238, in serve_forever
    self._handle_request_noblock()
  File ""/usr/lib/python2.7/SocketServer.py"", line 297, in _handle_request_noblock
    self.handle_error(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 295, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 321, in process_request
    self.finish_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 334, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 649, in __init__
    self.handle()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 216, in handle
    rv = BaseHTTPRequestHandler.handle(self)
  File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 340, in handle
    self.handle_one_request()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 251, in handle_one_request
    return self.run_wsgi()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 193, in run_wsgi
    execute(self.server.app)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 184, in execute
    write(data)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 149, in write
    self.send_response(int(code), msg)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 260, in send_response
    self.wfile.write(hdr.encode('ascii'))
IOError: [Errno 32] Broken pipe
```

It also happened in this situation, but I believe that ""Connection Reset by Peer"" was already addressed and fixed, (https://github.com/miguelgrinberg/Flask-SocketIO/issues/184), but I believe it is worth to be mentioned regarding the data which was requested to Flask (it really caught my attention...)

```
169.229.3.91 - - [29/Jun/2016 09:12:37] ""0<B0>$e<AE>x<D4>^?<AB><AC>1<E8><CF>Oۚ<9C>^K@<BA><D2><FE><D4>q_^]i=AS%<D7>`I<CA>`<8F><C8>6<E5>E^SX)B<A5>-{^RoK^BT<E4><82>}O'\<BB><8B><E4>a<86>"" 400 -
Exception in thread Thread-2:
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
    self.run()
  File ""/usr/lib/python2.7/threading.py"", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 659, in inner
    srv.serve_forever()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 499, in serve_forever
    HTTPServer.serve_forever(self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 238, in serve_forever
    self._handle_request_noblock()
  File ""/usr/lib/python2.7/SocketServer.py"", line 297, in _handle_request_noblock
    self.handle_error(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 295, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 321, in process_request
    self.finish_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 334, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 649, in __init__
    self.handle()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 216, in handle
    rv = BaseHTTPRequestHandler.handle(self)
  File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 340, in handle
    self.handle_one_request()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 247, in handle_one_request
    self.raw_requestline = self.rfile.readline()
IOError: [Errno 104] Connection reset by peer
```

I believe that it would be interesting to have a kind of ""recovery"" for Flask, or a better way to deal with it, without staying hanged..
"
1940,Added a property is_body_json,2016-07-01T12:34:30Z,2016-07-01T12:36:46Z,,,,
1939,"Check for empty request data prior to loading JSON, fix for #1933",2016-07-01T12:06:04Z,2016-10-23T13:04:04Z,,,,
1938,`flask run` allows no way to run server on a unix socket,2016-06-30T20:35:25Z,2016-06-30T20:41:55Z,,,,"In our webapp, we deploy on a unix socket.  We'd like to be able to do the same while debugging (since nginx etc. is already configured to handle that).
"
1937,"FLASK_APP should be set to [app].py, not just [app]",2016-06-30T01:05:39Z,2016-07-28T20:49:47Z,,,,"Setting FLASK_APP to flaskr/minitwit as instructed in the README will cause an import error.
"
1936,Add the ability to combine MethodViews,2016-06-29T10:02:35Z,2017-04-21T17:46:22Z,,,,"I just had this bug on my application, let me give you this example:

``` python
class SingleObjectMixin(object):
    def get_object(self):
        # implementation detail

class ShowView(SingleObjectMixin, MethodView):
    def get(self):
        return self.render_response(obj=self.get_object())

class DeleteView(SingleObjectMixin, MethodView):
    def delete(self):
        orm.delete(self.get_object())
        return self.redirect_to_list()

class ShowDeleteView(ShowView, DeleteView):
    pass
```

Because the metaclass for `MethodView` defines a `methods` property on each view, inheriting from two `MethodView` doesn't combine the supported methods.

Right now you have to do:

``` python
class ShowDeleteView(ShowView, DeleteView):
    methods = ['GET', 'DELETE']
```

which is explicit, but which I think is not how `MethodView` was intended to work.

Of course this fix, does allows you to inherit from two `MethodView` and override the supported methods."
1935,blueprint error handler not working??,2016-06-29T09:39:23Z,2017-05-09T15:45:15Z,docs,,,"follow the guide on doc
http://flask.pocoo.org/docs/0.11/blueprints/

```
@simple_page.errorhandler(404)
def page_not_found(e):
    return jsonify(result=result)
```

flask version is 0.11.1
still render the offcial 404 page.
"
1934,Helper method send_file not closing file handle.,2016-06-29T06:42:16Z,2017-04-14T12:39:03Z,,,,
1933,JSON Parsing on empty request content with RequestParser,2016-06-27T07:36:00Z,2016-10-23T13:04:45Z,,,,"From flask-restful/flask-restful#163.
"
1932,fix docs: name of url_value_preprocessor method,2016-06-26T09:42:50Z,2016-06-26T20:32:47Z,,,,"This typo got introduced in 5da1fc22153032923b1560a34a0f346d6517a12d,
the original commit for the url_value_preprocessor decorator.
"
1931,dialogue box?,2016-06-25T10:49:05Z,2016-06-25T12:31:24Z,,,,
1930,Merge pull request #1 from mitsuhiko/master,2016-06-25T03:48:38Z,2016-06-25T03:48:50Z,,,,"Update from origin
"
1929,TypeError when trying to parse request with int data,2016-06-23T22:26:32Z,2016-06-23T22:29:15Z,,,,"If the `Content-Type` header is ""application/json"" but the `data` is a _number_ then it raises a TypeError instead of a `BadRequest`

``` python
        from flask.ext.restful import reqparse, inputs
        from flask import request
        import flask
        app = flask.Flask(__name__)
        with app.test_request_context(method=""post"", data=b""123"", content_type=""application/json""):
            parser = reqparse.RequestParser()
            parser.parse_args()
```

Change the `data` from `b""123""` to `b""abc""` and you get the expected error
"
1928,re-add passthrough_errors to cli runner,2016-06-23T19:50:38Z,2016-06-23T20:00:45Z,cli,,,"This got dropped during the cli simplification.  Re: #1679
"
1927,Removed easy_install method from installation docs,2016-06-23T19:11:37Z,2016-06-23T23:47:58Z,,,,"As per issue #1919, documentation for installing **virtualenv** via **easy_install** has been successfully removed from **docs/installation.rst** file.
"
1926,Unhelpful Error Message on FLASK_APP to Bad Path,2016-06-23T17:24:20Z,2016-08-12T13:12:50Z,cli,ImportError,ImportError: Import by filename is not supported.,"If the path specified in `FLASK_APP` does not exist (for example it is a typo), then the unhelpful error message is shown:

```
ImportError: Import by filename is not supported.
```

This is even though I have:

```
FLASK_APP=alex/server2.py
```

which is ""path-like"" and not module like.

Perhaps [this line](https://github.com/pallets/flask/blob/cd1a9b7d545a9566b6d8ab861572f2e80c67916e/flask/cli.py#L106) should be modified to return `True` for file-like objects.
"
1925,Converts example/flaskr to have a setup.py,2016-06-23T00:25:58Z,2016-07-06T00:26:28Z,,,,"Addresses #1902 

Makes the flaskr app easier to run, ex. workflow:
- pip install --editable .
- export FLASK_APP=flaskr.flaskr
- flask initdb
- flask run

Testing is also easier now:
- python setup.py test
"
1924,Next/Back Buttons in Documentation,2016-06-22T21:54:49Z,2017-01-14T05:44:22Z,,,,"I would like to request adding a **Next/Back** Button at the end of each page within the official documentation. Once you get to the end of the document you have to scroll all the way back up to the very top of the page and go to the next article. I think it would be much nicer to have this feature and the documentation would flow much better. 
"
1923,TaggedJSONSerializer encodes Python 2 strings as bytes,2016-06-22T14:56:46Z,2016-06-22T16:25:04Z,,,,"I've encountered an issue while migrating one of our Flask apps from Python 2 to Python 3.

Consider the canonical sessions example, with one minor tweak which forces a Python 2 ascii string into the session:

```
from flask import Flask, session, redirect, url_for, escape, request

app = Flask(__name__)

@app.route('/')
def index():
    if 'username' in session:
        return 'Logged in as %s' % escape(session['username'])
    return 'You are not logged in'

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        session['username'] = str(request.form['username'])
        return redirect(url_for('index'))
    return '''
        <form action="""" method=""post"">
            <p><input type=text name=username>
            <p><input type=submit value=Login>
        </form>
    '''

@app.route('/logout')
def logout():
    # remove the username from the session if it's there
    session.pop('username', None)
    return redirect(url_for('index'))

# set the secret key.  keep this really secret:
app.secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT'
```

Run that app on Python 2, log in as 'jaraco', then run the app on Python 3 and refresh the `/` resource, and you'll get a response with this text:

```
Logged in as b'jaraco'
```

The value has been typecast into bytes as a result of the TaggedJSONSerializer. This bytes value then wreaks havoc when text strings are expected.

I imagine three possible ways to deal with this issue:
1. Rewrite the applications such that they ensure that all text values are stored as unicode even on Python 2.
2. Rewrite the TaggedJSONSerializer to only b64 encode bytes values on Python 3, but provide a hook so that if Python 2 consumers still want to encode to bytes, they can wrap the values in a special class that indicates bytes (similar to how MongoDB provides bson.Binary) which will be treated the same as bytes on Python 3.
3. Rewrite the applications such that when consuming session values, any binary values found for text strings are decoded.

Option 3 seems like a hack around the symptom, addressing the output and not the underlying issue, so I'm dismissing that out of hand.

Option 1 seems the cleanest, though a lot of work for potentially a lot of applications.

Option 2 seems the most robust, but has backward-compatibility concerns. On the whole, though, I expect it will save users a great deal of time and trouble as they upgrade from Python 2 to 3. I expect that most users of Flask when storing Python 2 `str` values in the session are actually intending to be storing text and not binary bytes, and this option honors that expectation while providing a solution for consumers that might need to intentionally store binary values.

What's your recommendation? Would Flask consider a PR to implement Option 2? Is there another option I'm not considering?
"
1922,HTTPMethodOverrideMiddleware docs example doesnt work with latest version,2016-06-22T14:48:33Z,2016-06-22T15:07:05Z,,,,"The docs here seem to be out of date
http://flask.pocoo.org/docs/0.10/patterns/methodoverrides/

The example code throws a `TypeError: 'type' object is not iterable` on almost every request since updating to version .11
"
1921,'be' was omitted,2016-06-21T15:25:03Z,2016-06-21T15:27:03Z,,,,"'be' was omitted
"
1920,Update installation documentation for using 'pip' command,2016-06-20T10:11:56Z,2016-07-05T19:00:43Z,,,,"Fix for #1919 
"
1919,Remove easy_install from installation docs,2016-06-20T06:39:12Z,2016-07-05T19:01:27Z,"docs, good first issue",,,"As pointed out in #1915, http://flask.pocoo.org/docs/0.11/installation/ mentions both `pip` and `easy_install`. 

`pip` seems to be the canonical way to manage packages these days, so I vote we drop `easy_install` from the install docs.
"
1918,Update documentation for upgrading Flask using 'pip' command,2016-06-19T20:57:33Z,2016-06-22T20:26:35Z,,,,"Fix for #1915 
"
1917,wtforms: Add missing closing tags,2016-06-19T14:36:17Z,2016-06-19T20:27:23Z,,,,
1916,Document option to use simplejson,2016-06-17T16:11:41Z,2017-05-28T04:07:35Z,"docs, json",,,"Flask (through itsdangerous) prefers simplejson over the built-in json module if it is installed.  The documentation should say that simplejson is an optional dependency and why using it is preferred but not required.
- #1911
- #1602
- https://botbot.me/freenode/pocoo/msg/68108854/
"
1915,Use pip in upgrade documentation instead of easy_install,2016-06-16T20:58:22Z,2016-06-22T20:27:08Z,"docs, good first issue",,,"In the upgrade docs, `easy_install` is listed as the example to use to upgrade: 
http://flask.pocoo.org/docs/0.11/upgrading/

But in the installation docs, both `pip` and `easy_install` are listed, though `pip` is used more and is recommended:
http://flask.pocoo.org/docs/0.11/installation/

I would recommend the upgrading section be switched to use `pip`.
"
1914, Fix problems with examples and CLI #1902,2016-06-15T21:23:00Z,2016-06-16T19:35:33Z,,,,
1913,Fix #1911,2016-06-15T14:08:41Z,2016-06-15T16:27:06Z,,,,
1912,"Revert ""Addressing Issue 1809""",2016-06-14T20:45:35Z,2016-06-14T20:46:27Z,,,,"Reverts pallets/flask#1811
"
1911,Wrong import json library,2016-06-14T09:02:06Z,2017-05-22T19:37:58Z,"bug, good first issue, json",,,"[This code](https://github.com/pallets/flask/blob/c5900a1adf8e868eca745225f3cf32218cdbbb23/flask/json.py#L23) is always import error.
(`simplejson` is not included in the `itsdangerous`.)
See: https://github.com/pallets/itsdangerous/blob/master/itsdangerous.py
"
1910,Enable template auto-reloading in app.run(),2016-06-14T00:17:08Z,2017-06-14T16:47:43Z,,,,"When Flask app debugging is enabled (app.debug==True), and Jinja2
template auto-reloading is not explicitly disbaled, template
auto-reloading should be enabled.

If the app is instantiated, the jinja_env object is accessed (thereby
initialising the Jinja2 environment) and the server is then started with
app.run(debug=True), template auto-reloading is _not_ enabled.

This is because reading the jinja_env object causes the environment
initialisation function to set auto_reload to app.debug (which isn't yet
True). Calling app.run(debug=True) should correct this in order to
remain consistent with Flask code reloading (which is enabled within
app.run() if debug == True).
"
1909,fix pypy3-3.3 alpha usage,2016-06-13T17:02:00Z,2016-06-13T17:52:22Z,,AttributeError,AttributeError: 'module' object has no attribute 'exc_clear',"fix pypy3-3.3 have error

  File ""/opt/pypy3/site-packages/flask/**init**.py"", line 21, in <module>
    from .app import Flask, Request, Response
  File ""/opt/pypy3/site-packages/flask/app.py"", line 24, in <module>
    from .helpers import _PackageBoundObject, url_for, get_flashed_messages, \
  File ""/opt/pypy3/site-packages/flask/helpers.py"", line 42, in <module>
    from ._compat import string_types, text_type
  File ""/opt/pypy3/site-packages/flask/_compat.py"", line 82, in <module>
    raise AssertionError()
  File ""/opt/pypy3/site-packages/flask/_compat.py"", line 78, in __exit__
    sys.exc_clear()
AttributeError: 'module' object has no attribute 'exc_clear'
"
1908,TaggedJSONSerializer does not preserve int keys in dicts,2016-06-13T08:43:00Z,2017-06-02T17:08:01Z,json,,,"The `TaggedJSONSerializer` used for session serialization is rather smart when it comes to preserving types that usually cannot be JSON-encoded. However, it still has the problem that dict keys are converted to strings.

```
>>> from flask.sessions import TaggedJSONSerializer
>>> tj = TaggedJSONSerializer()
>>> tj.loads(tj.dumps({123: u'blah'}))
{u'123': u'blah'}
```

I think it would make sense to also tag the key here:

```
elif isinstance(value, dict):
    return dict((k, _tag(v)) for k, v in iteritems(value))
```

The one drawback I see is that there could be code relying on the implicit conversion right now..
"
1907,Jinja templates do not auto reload if Flask app debug enabled solely via app.run(debug=True),2016-06-11T23:42:39Z,2017-06-14T19:56:43Z,,,,"When enabling debug mode via `app.run(debug=True)`, code changes result in an auto-reload but Jinja templates are cached until the app is manually is restarted.

At https://github.com/pallets/flask/blob/21d595bee73e65a28201709bd1a8b97c42aff5d2/flask/app.py#L695 Flask checks if the `config[""TEMPLATE_AUTO_RELOAD""]` is explicitly set. If not, Jinja's `options[""auto_reload""]` is set to `app.debug`.

However, if you instantiate your Flask object _then_ call `app.run(debug=True)` without loading a config, template auto reloading is not enabled (`app.debug` was `False` when the Flask app was instantiated).

At https://github.com/pallets/flask/blob/21d595bee73e65a28201709bd1a8b97c42aff5d2/flask/app.py#L839 we enable reloading code and enable the debugger. My proposed fix would be to also enable template reloading (`jinja_env.auto_reload = self.debug`) here.

This would result is less confusion (""Debug is enabled but my templates don't auto reload"") and make the template reloading behaviour consistent with the code reloading behaviour (""If no config is set or `debug` is not explicitly set in config, and the site calls `app.run(debug=True)`, then enable the relevant auto reloading features"").
"
1906,SessionInterface shouldn't hard code a fix for localhost when it comes to cookies,2016-06-11T13:58:29Z,2016-09-06T12:36:53Z,,,,"The `get_cookie_domain` function specifically fixes issues with webkit browsers by doing this:

``` python
# https://github.com/pallets/flask/blob/0.11.1/flask/sessions.py#L198-222
if rv == '.localhost':
    rv = None
```

The problem is that nowadays many people are using Docker and other techniques (Vagrant, etc.) to create a better development environment so they are no longer running Flask on `localhost`.

In Docker's case, you'd likely end up with an IP address based host name which means you'd set your `SERVER_NAME` to something like `192.168.99.100`.

At this point Chrome and other webkit based browsers will freak out by reject setting the cookie which in turn will make your Flask app throw CSRF token related issues when submitting forms.

Since Flask is already hard coding a fix for this, I think you should allow users to configure which domain name gets skipped with a proper config option.

This could be named something like `SESSION_COOKIE_IGNORE_DOMAIN` (feel free to improve the name :)). It could default to localhost so that it's backwards compatible and nothing changes for most users.

Right now the work around is to modify your `/etc/hosts` file to map an IP address to a FQDN with a TLD if you're stuck using an IP based `SERVER_NAME`. That seems a little lame and preventable at the Flask level.

What do you think?
"
1905,Documentation with minor incorrection?!?,2016-06-10T23:39:57Z,2016-06-11T00:56:08Z,,,,"Hi,

On the **A Minimal Application** under Quickstart, you have code for a minimal Flask implementation, although it should be added the app.run so it can actually run the app, and load the server.
This is the form for applications that are connected to a WSGI server, which I believe beginners won't be doing that as one of their first steps.

Another minor correction, is on **URL Building** also under Quickstart, it has:
print url_for('profile', username='John Doe')
I believe should be : print url_for('user', username='John Doe')
"
1904,"Can't reload code on Python 3, Win 10, latest version of flask",2016-06-10T15:25:49Z,2016-06-26T23:36:40Z,,,,"My code is simple copy paste from tutorial:

```
from flask import Flask
app = Flask(__name__)
app.debug = True
app.use_reloader=True

@app.route(""/proxy/list/<access_id>"")
def proxy(access_id):
    return ""Hello World  {}"".format(access_id)

if __name__ == ""__main__"":
    app.run(debug=True)
```

then i made a change:
`return ""Hello World  {} something else"".format(access_id)`

nothing reloaded!
"
1903,AttributeError: 'module' object has no attribute 'exc_clear',2016-06-10T13:18:56Z,2016-06-10T13:22:25Z,,,,"We are getting below error when building `flask-mongoengine` with `pypy3` on travis-ci:

```
1) ERROR: Failure: AttributeError ('module' object has no attribute 'exc_clear')

 ----------------------------------------------------------------------

 Traceback (most recent call last):

.eggs/nose-1.3.7-py3.2.egg/nose/failure.py line 39 in runTest

  raise self.exc_val.with_traceback(self.tb)

.eggs/nose-1.3.7-py3.2.egg/nose/loader.py line 418 in loadTestsFromName

  addr.filename, addr.module)

.eggs/nose-1.3.7-py3.2.egg/nose/importer.py line 47 in importFromPath

  return self.importFromDir(dir_path, fqname)

.eggs/nose-1.3.7-py3.2.egg/nose/importer.py line 94 in importFromDir

  mod = load_module(part_fqname, fh, filename, desc)

tests/__init__.py line 1 in <module>

  import flask

.tox/pypy3-medev/site-packages/flask/__init__.py line 21 in <module>

  from .app import Flask, Request, Response

.tox/pypy3-medev/site-packages/flask/app.py line 24 in <module>

  from .helpers import _PackageBoundObject, url_for, get_flashed_messages, \

.tox/pypy3-medev/site-packages/flask/helpers.py line 42 in <module>

  from ._compat import string_types, text_type

.tox/pypy3-medev/site-packages/flask/_compat.py line 82 in <module>

  raise AssertionError()

.tox/pypy3-medev/site-packages/flask/_compat.py line 78 in __exit__

  sys.exc_clear()

   AttributeError: 'module' object has no attribute 'exc_clear'
```

Could this be a bug?
"
1902,Import error with some examples,2016-06-09T20:35:18Z,2016-08-22T18:53:44Z,"bug, cli, docs",ImportError,ImportError: No module named 'flaskr',"I'm trying to run the ""flaskr"" and ""minitwit"" examples, but I'm running into an import error issue. I'm trying to follow the instructions from the README file. When running `flask initdb`, I get the following error:

```
Traceback (most recent call last):
  File ""/home/nelson/apps/miniconda/bin/flask"", line 6, in <module>
    sys.exit(flask.cli.main())
  File ""/home/nelson/apps/miniconda/lib/python3.4/site-packages/flask/cli.py"", line 478, in main
    cli.main(args=args, prog_name=name)
  File ""/home/nelson/apps/miniconda/lib/python3.4/site-packages/flask/cli.py"", line 345, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""/home/nelson/apps/miniconda/lib/python3.4/site-packages/click/core.py"", line 696, in main
    rv = self.invoke(ctx)
  File ""/home/nelson/apps/miniconda/lib/python3.4/site-packages/click/core.py"", line 1055, in invoke
    cmd_name, cmd, args = self.resolve_command(ctx, args)
  File ""/home/nelson/apps/miniconda/lib/python3.4/site-packages/click/core.py"", line 1094, in resolve_command
    cmd = self.get_command(ctx, cmd_name)
  File ""/home/nelson/apps/miniconda/lib/python3.4/site-packages/flask/cli.py"", line 316, in get_command
    rv = info.load_app().cli.get_command(ctx, name)
  File ""/home/nelson/apps/miniconda/lib/python3.4/site-packages/flask/cli.py"", line 209, in load_app
    rv = locate_app(self.app_import_path)
  File ""/home/nelson/apps/miniconda/lib/python3.4/site-packages/flask/cli.py"", line 89, in locate_app
    __import__(module)
ImportError: No module named 'flaskr'
```

I'm using an Anaconda Python install on both Windows 10 (Python 3.5) and Linux (Python 3.4) with either the stock flask 0.11 install or an install from the latest git repo.  I'm running this code from appropriate directory and am able to import flaskr or minitwit from a terminal Python session. I can run the other examples that do not require the flask script. 
"
1901,Google App Engine ImportError: No module named msvcrt,2016-06-09T15:41:53Z,2016-06-09T15:45:39Z,,,,"Because [Click](http://click.pocoo.org/5/) was added to Flask 0.11 for the [New Command Line Interface](http://flask.pocoo.org/docs/0.11/cli/), and Click imports the Windows only module [msvcrt](https://docs.python.org/2/library/msvcrt.html), and the [Google App Engine local development server](https://cloud.google.com/appengine/docs/python/tools/using-local-server) doesn't contain this module, an import error is thrown.

![image](https://cloud.githubusercontent.com/assets/2013388/15935738/36ee00b6-2e1d-11e6-85a7-3b04de953659.png)

I've [created a workaround](https://github.com/gae-init/gae-init/pull/527) for the [gae-init project](https://github.com/gae-init/gae-init) (by modifying the App Engine config file), but it would be best to have a fix come directly from Flask/Click since there are likely many more people who will experience this issue when using Flask 0.11 with Google App Engine.
"
1900,Demonstrate how to add multiple urls to the same function endpoint #981,2016-06-09T02:26:56Z,2016-06-16T20:40:24Z,,,,"Researched this during the Pycon dev sprint. I think that this solution is minimally elegant to include in the docs. 

EDIT by @untitaker: Fixes #981
"
1899,test_client post cannot handle JSON list,2016-06-08T18:26:12Z,2016-06-08T18:43:21Z,,TypeError,TypeError: add_file() got an unexpected keyword argument 'name',"I have the following object: 

```
 dict(username=""test"",
       repository=""http://github.com"",
       foo=[dict(name=""test"", version=""1.1.3"")])
```

it gives the following json when dumping it: 

```
{""username"": ""test"", ""repository"": ""http://github.com"", ""foo"": [{""name"": ""test"", ""version"": ""1.1.3""}]}
```

When sending it in a post like that:

```
self.app = mainweb.webapp.test_client()
response = self.app.post('/foo/', data=request) # where request is the object mentionned before
```

it gives the following error:

```
Traceback (most recent call last):
  File ""C:\cygwin64\home\xyz\devel\foo\test\foo\functional\test_functionnal.py"", line 20, in test_given_valid_request_when_post_then_valid_response
    response = self.app.post('/foo/', data=request)
  File ""C:\Python3.5.1\lib\site-packages\werkzeug\test.py"", line 788, in post
    return self.open(*args, **kw)
  File ""C:\Python3.5.1\lib\site-packages\flask\testing.py"", line 103, in open
    builder = make_test_environ_builder(self.application, *args, **kwargs)
  File ""C:\Python3.5.1\lib\site-packages\flask\testing.py"", line 34, in make_test_environ_builder
    return EnvironBuilder(path, base_url, *args, **kwargs)
  File ""C:\Python3.5.1\lib\site-packages\werkzeug\test.py"", line 338, in __init__
    self._add_file_from_data(key, value)
  File ""C:\Python3.5.1\lib\site-packages\werkzeug\test.py"", line 355, in _add_file_from_data
    self.files.add_file(key, **value)
TypeError: add_file() got an unexpected keyword argument 'name'
```

Is it really a bug or is the issue on my side?

Thanks!
"
1898,Per blueprint jsoncoding #1710,2016-06-08T17:51:06Z,2017-04-24T17:16:21Z,json,,,"#1710

This patch adds support for custom `JSONEncoder`, `JSONDecoder` functionality for blueprints, modeled after `Flask.json_encoder`, `Flask.json_decoder` and has minimal amount of changes. 
Still no docs or corner case tests.
"
1897,Missing import on Flask 0.11.1,2016-06-08T16:03:41Z,2016-06-08T17:40:45Z,,ImportError,ImportError: No module named click,"```
Traceback found (redacted for relevancy to Flask):
  File ""/usr/local/lib/python2.7/dist-packages/flask/__init__.py"", line 21, in <module>
    from .app import Flask, Request, Response
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 27, in <module>
    from . import json, cli
  File ""/usr/local/lib/python2.7/dist-packages/flask/cli.py"", line 17, in <module>
    import click
ImportError: No module named click
```

Just recently upgraded from 0.10 to 0.11. Did not see a requirements.txt for 3rd party dependencies.
"
1896,"Added make target for test coverage, simplified contributing doc",2016-06-08T01:46:51Z,2017-05-25T21:16:23Z,"docs, testing",,,"The commands to run a coverage report are somewhat clunky, and hard to remember.
1. `make cov` will now generate the report, display it, and save an HTML version.
2. `make test` already ensures that test dependencies are installed. This seemed clever and helpful for beginners, so I did the same for `make tox-test` and `make cov`. (Also, added `tox` and `pytest-cov` to test-requirements.txt)
3. Updated contribution guide to replace the `py.test`, `tox`, and coverage instructions with the `make` versions. Consistent/similar commands should be easier to remember? Also ensures everyone runs the same tests every time.

Apologies if I globbed too much into one PR, happy to edit if needed.
"
1895,Blueprint static content only works when response.direct_passthrough is False,2016-06-07T17:21:53Z,2016-06-07T19:39:12Z,,,,"I'm using the latest version of Flask (0.11.1) and the built in dev server, with the following Blueprint:

`blueprint = Blueprint(""admin"", __name__, url_prefix=""/admin"", template_folder=""templates"", static_folder=""static"")
`
The template folder is working as expected, but any resources inside the static folder throw a **RuntimeError: Attempted implicit sequence conversion but the response object is in direct passthrough mode.**

After searching around for this error, I found the following discussion:
https://github.com/closeio/Flask-gzip/issues/7

The solution used in that third party extension was to put in place the following code on app.after_request:
`response.direct_passthrough = False`

My static content loads fine with the above. 

I was wondering if anyone has run into this issue with Blueprints and if there is a better workaround.
"
1894,Test Python 3.5,2016-06-07T16:32:41Z,2016-06-07T17:38:38Z,testing,,,
1893,Travis 3.3-devel job fails with error about urllib2 in Werkzeug,2016-06-07T16:28:49Z,2016-06-07T17:32:48Z,"bug, testing",ImportError,ImportError: No module named 'urllib2',"https://travis-ci.org/pallets/flask/jobs/135626173

``` python-traceback
Traceback (most recent call last):
  File ""/home/travis/build/pallets/flask/.tox/py-devel/lib/python3.3/site-packages/werkzeug/http.py"", line 26, in <module>
    from urllib2 import parse_http_list as _parse_list_header, \
ImportError: No module named 'urllib2'

During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File ""/home/travis/build/pallets/flask/.tox/py-devel/lib/python3.3/site-packages/_pytest/config.py"", line 320, in _importconftest
    mod = conftestpath.pyimport()
  File ""/home/travis/build/pallets/flask/.tox/py-devel/lib/python3.3/site-packages/py/_path/local.py"", line 650, in pyimport
    __import__(modname)
  File ""/home/travis/build/pallets/flask/tests/conftest.py"", line 9, in <module>
    import flask
  File ""/home/travis/build/pallets/flask/.tox/py-devel/lib/python3.3/site-packages/flask/__init__.py"", line 17, in <module>
    from werkzeug.exceptions import abort
  File ""/home/travis/build/pallets/flask/.tox/py-devel/lib/python3.3/site-packages/werkzeug/__init__.py"", line 152, in <module>
    __import__('werkzeug.exceptions')
  File ""/home/travis/build/pallets/flask/.tox/py-devel/lib/python3.3/site-packages/werkzeug/exceptions.py"", line 71, in <module>
    from werkzeug.wrappers import Response
  File ""/home/travis/build/pallets/flask/.tox/py-devel/lib/python3.3/site-packages/werkzeug/wrappers.py"", line 26, in <module>
    from werkzeug.http import HTTP_STATUS_CODES, \
  File ""/home/travis/build/pallets/flask/.tox/py-devel/lib/python3.3/site-packages/werkzeug/http.py"", line 29, in <module>
    from urllib.request import parse_http_list as _parse_list_header, \
ImportError: cannot import name unquote_to_bytes
```

I can't reproduce this locally.  Re-running the job still fails.
"
1892,Updating url in errorhandling.rst to a valid link,2016-06-06T15:29:51Z,2016-06-06T15:37:07Z,,,,"Was originally set to github.com/getsentry/sentry, which was a relative link to a page that doesn't exist. I prepended https:// to fix this problem.
"
1891,Fix spelling,2016-06-06T08:55:25Z,2016-06-06T11:02:44Z,,,,"Minor spelling fix.
"
1890,Clarify wording in App Context documentation.,2016-06-06T03:50:13Z,2016-06-06T11:03:01Z,,,,"Minor modification to make wording more concise in app context documentation as suggested by feedback from pull #1861.
"
1889,Test side effect,2016-06-04T20:02:23Z,2016-06-05T17:32:01Z,,,,"Function `prepare_exec_for_file` has a side effect where a path is added to
`sys.path` list.
This commit enhances an exisiting test case for `prepare_exec_for_file`
by testing the side effect of the function and adding necessary
comments.
"
1888,sessions documentation (client side vs server side) #434,2016-06-04T17:52:05Z,2016-08-28T22:06:53Z,docs,,,"Mention the existence of Flask extentions that handle server-side sessions

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1888)

<!-- Reviewable:end -->
"
1887,enumerates the states in which code is executed...,2016-06-03T23:59:41Z,2017-05-25T21:47:21Z,"docs, waiting",,,"... and fixes an awkward phrasing.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1887)

<!-- Reviewable:end -->
"
1886,Enhance code coverage for Blueprint.endpoint,2016-06-03T23:00:19Z,2017-04-14T16:22:13Z,,,,"Add basic test for the endpoint decorator for the Blueprint object.

Mentioned on the API [docs](http://flask.pocoo.org/docs/0.11/api/#flask.Blueprint.endpoint): 

> ...If the endpoint is prefixed with a . it will be registered to the current blueprint, otherwise it’s an application independent endpoint.

This commit only added test for the _without-prefixed-dot_ endpoint
"
1885,Improve test coverage of flask.json,2016-06-03T22:47:02Z,2016-08-20T15:45:14Z,,,,"- Added tests for `flask.json.dump()` and `flask.json.load()`.
- Added a test to ensure that UUIDs are correctly jsonified.
"
1884,Add test for get_version (CLI),2016-06-03T21:50:58Z,2016-08-20T15:43:58Z,,,,"Added a test for CLI `--version` command.
"
1883,Expanding contribution documentation,2016-06-03T21:13:34Z,2016-06-03T21:32:11Z,,,,"- README updated with link to CONTRIBUTING.rst
- CONTRIBUTING.rst has instructions on running code coverage
"
1882,Enhance tests.test_cli.test_find_best_app,2016-06-03T20:00:41Z,2016-07-05T19:46:01Z,,,,"This commit adds a test case for `test_find_best_app` where
Module object does not contain Flask application.
Also cleans the function little bit to provides more meaningful comment.
"
1881,Add test for find_default_import_path,2016-06-03T19:40:59Z,2016-06-07T18:12:40Z,,,,
1880,Link to contributing.rst from the main Flask docs,2016-06-03T19:34:12Z,2016-06-03T21:40:19Z,,,,"Make it easier for folks to find our contributing docs. 

Not sure where in the main Flask docs to put this, but it would be good to add somewhere. There's been a few Pycon sprinters who tried searching our docs for the contributing info rather than looking in the source repo.
"
1879,test_main_module_paths fails on RHEL and Ubuntu when using Amazon EC2,2016-06-03T18:56:38Z,2016-09-21T18:42:24Z,packaging,,,"Running the unit tests against HEAD (e048aa4e19), I'm able to reproduce a single failing unit tests in:

> tests/test_instance_config.py::test_main_module_paths

I'm able to reproduce the bug on Amazon Linux 2016.03.1 and RHEL 7.2.  I'm running on a fresh EC2 instance in both cases, and the steps to reproduce are the same, here is my bash history:

> sudo yum install python-virtualenv
> sudo yum groupinstall 'Development Tools'
> virtualenv flask
> cd flask/
> git clone https://github.com/pallets/flask.git
> cd flask/
> source ../bin/activate
> pip install -e .
> pip install -r test-requirements.txt 
> py.test tests/test_instance_config.py::test_main_module_paths

failing output:

> modules_tmpdir = local('/tmp/pytest-of-ec2-user/pytest-0/test_main_module_paths0/modules_tmpdir'), purge_module = <function inner at 0x170c1b8>
> 
> ```
> def test_main_module_paths(modules_tmpdir, purge_module):
>     app = modules_tmpdir.join('main_app.py')
>     app.write('import flask\n\napp = flask.Flask(""__main__"")')
>     purge_module('main_app')
> 
>     from main_app import app
>     here = os.path.abspath(os.getcwd())
> ```
> 
> > ```
> >   assert app.instance_path == os.path.join(here, 'instance')
> > ```
> > 
> > E       assert '/home/ec2-us...r/py-instance' == '/home/ec2-use...lask/instance'
> > E         - /home/ec2-user/flask/var/py-instance
> > E         ?                      ^ ^ ---
> > E         + /home/ec2-user/flask/flask/instance
> > E         ?                      ^^ ^^
> 
> tests/test_instance_config.py:33: AssertionError

This test seems to be passing fine on Travis, and on Debian and OSX.  It appears to be a Redhat/Amazon Linux specific issue.  I ran `git bisect` back to commits on May 26th, 2016 and the test still fails all attempts.
"
1878,Use recwarn everywhere,2016-06-03T11:57:28Z,2016-06-03T12:44:13Z,,,,"...instead of custom fixture. Also assert that no warnings are left over
after the test.
"
1877,jsonify no longer causes Content-Length to be set on returned Response object,2016-06-03T08:24:29Z,2017-05-30T20:47:38Z,"bug, ready",,,"I am not sure if this was an intentional change, as it is only triggered by `jsonify` by passing an iterable to `flask.wrappers.Response`/`werkzeug.wrappers.Response`.

In commit https://github.com/pallets/flask/commit/d9402fc0c03353b6d2659297682e578d695476ce a newline was added to the json response, as per a request from the httpbin project.

When `werkzeug.wrappers.Response` is passed a non text_type iterable, the `self.set_data` codepath, responsible for setting the Content-Length header, is not used anymore.

Ironcially this breaks httpbins ""response-headers"" route that uses the response object in a somewhat
creative way and breaks while trying to access `response.headers['Content-Length']`

If this considered a backwards incompatible change that might need to be undone, or is this considered new and intended behaviour?
"
1876,Add negative test for json.jsonify,2016-06-02T23:55:51Z,2016-06-03T17:58:39Z,,,,"Test if jsonify function raises TypeError when both args and kwargs are
passed in.
"
1875,Add a link to Extension Development,2016-06-02T23:40:12Z,2016-06-03T05:15:00Z,,,,"Provides a link to [Flask Extension Development](http://flask.pocoo.org/docs/0.11/extensiondev) page from [Flask Extension page](http://flask.pocoo.org/docs/0.11/extensions).
Flask Extension page talks about `finding`, `using` extensions, it might as well talk about `building` one too. Found #532 as the most relevant issue that is open.
"
1874,Comment out old version added and changed tags. Fix #1704,2016-06-02T23:34:08Z,2017-04-14T13:57:18Z,docs,,,"Comment out the ""versionadded"" and ""versionchanged"" tags by adding # in
the front. The line (or block) would be considered as comments.

This is another attempt at #1856 based on #1704 (comment)
"
1873,Using `setup.cfg` with fabric,2016-06-02T23:00:48Z,2016-06-05T20:00:45Z,,,,"Explaining how to use `setup.cfg` to configure test builds when trying to deploy with fabric, and using `sdist`. Fixes #129 
"
1872,Clitest update,2016-06-02T22:40:39Z,2016-06-03T16:41:10Z,,,,"There was a bad if/elif statement and the elif os.path ... would never get hit. So I swapped the order of those two statements and added testing for the prepare_exec_for_file function.
"
1871,"Update documentation about python 3 support in Flask, resolves #1578",2016-06-02T22:34:56Z,2016-06-05T22:47:12Z,,,,"I have removed outdated paragraphs and just left the link to the page stating the current status of python 3 in Flask. 
#1578
"
1870,improved documentation for config.from_object,2016-06-02T22:28:59Z,2016-06-02T22:40:59Z,,,,
1869,Tests with and without simplejson for every existing testenv,2016-06-02T22:28:55Z,2016-06-03T16:29:12Z,,,,"changes configuration for tox and travis. Assist from @davidism 
"
1868,Rewrite subclassing example with a better use-case.,2016-06-02T22:24:06Z,2016-06-03T12:55:33Z,,,,"As @ThiefMaster pointed out in PR #1862, template globals can be added without subclassing. Here is a different use-case, inspired by [recent IRC conversations](https://botbot.me/freenode/pocoo/2016-05-30/?msg=66949866&page=2).
"
1867,Remove old version added and changed tags #1704,2016-06-02T22:05:54Z,2017-05-05T01:42:37Z,docs,,,"Remove ""versionadded"" and ""versionchanged"" tags < 0.10. Discussed in #1704."
1866,url_for now supports no request context and no SERVER_NAME case,2016-06-02T21:56:07Z,2017-04-23T16:23:32Z,,,,"#801

The simplest way to accomplish this was to bring in a modified version of the wrapper found here:
https://github.com/miguelgrinberg/flack/blob/master/flack/utils.py#L11

This wrapper also needed to cover the case where an application context existed with `SERVER_NAME` defined. 

I added two tests (one to cover when `SERVER_NAME` doesn't exist, and one when it does). The removal of `test_url_generation_requires_server_name` is because the error case it covered no longer exists.
"
1865,"Revert ""Adds simplejson as a testing target.""",2016-06-02T21:54:30Z,2016-06-02T21:54:49Z,,,,"Reverts pallets/flask#1855
"
1864,Add ipython/bpython support to `flask shell`,2016-06-02T21:50:01Z,2016-06-03T09:33:55Z,,,,"@mitsuhiko 
"
1863,Fix Issue 1847 - Adding Current Path when Invoking Flask-Cli Run,2016-06-02T21:36:54Z,2016-06-03T13:01:28Z,,,,"Fix for: #1847 

Adds the current directory to the Python path, when invoking a local development server.  `flask run` was unable to find the app's module in the PYTHONPATH, while `python -m flask run` adds the current working directory to the PYTHONPATH automatically.
"
1862,Add subclassing pattern/example,2016-06-02T21:19:38Z,2016-06-02T21:32:24Z,,,,"Wrote up a basic example of subclassing Flask to set up an altered Jinja2 environment. This should fix issue #221
"
1861,Document Runtime Error when running outside of application context,2016-06-02T21:12:32Z,2016-06-02T21:15:24Z,,,,"Adds a little documentation of the Runtime Error that you get when working outside an applications context.

fix #1521
"
1860,Coverage for test_static_path_deprecated and test_static_url_path,2016-06-02T20:06:06Z,2016-06-03T00:56:08Z,,,,"Made tests in tests_basic.py
"
1859,Add last_modified arg for send_file,2016-06-02T20:01:15Z,2016-06-05T19:44:52Z,,,,"Enhancement: Add last_modified arg of type DateTime to send_file.

Fixes pallets/flask#1321
"
1858,Added link to deploying documentation,2016-06-02T19:53:08Z,2016-06-02T19:59:44Z,,,,"Updated for issue #721 
"
1857,Werkzeug mentions,2016-06-02T19:18:20Z,2016-09-05T18:08:35Z,docs,,,"Debugger docs, response objects and url converters. Aims to fix #1625 and fix #190.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1857)

<!-- Reviewable:end -->
"
1856,Remove old version added and changed tags #1704,2016-06-02T19:15:15Z,2016-06-02T23:10:13Z,,,,"Removed the versionadded and versionchanged tags except for the one linked from external docs. Created issue #1852 to remove those tags from external docs.
"
1855,Adds simplejson as a testing target.,2016-06-02T19:14:41Z,2016-06-02T19:30:25Z,,,,"Adds one test specifically for a simplejson bug.
"
1854,Issue #836: Tweaking tutorial warning about plain text passwords and …,2016-06-02T19:07:42Z,2016-06-03T08:00:55Z,,,,"…pointing users towards extensions registry

Not a huge change, but hopefully makes it clear that plain text is dangerous and puts people on the right path to implement password hashing if they choose

fix #836 
"
1853,"Add issue template, resolves #1773",2016-06-02T19:05:22Z,2016-06-02T19:50:56Z,,,,"On issue #1773, we wanted use issue templates to accomplish two things:
1. guide questions into StackOverflow and IRC channel
2. not duplicate CONTRIBUTING content
To resolve these, ISSUE_TEMPLATE is added to remind users not
to ask questions, and mark prerequisites.
"
1852,Remove version info from Werkzeug in the docs,2016-06-02T18:50:50Z,,docs,,,"The following version information is coming from the Werkzeug docs: ""New in version 0.6: The location can now be a unicode string that is encoded using the iri_to_uri() function."" See http://flask.pocoo.org/docs/0.11/api/#flask.redirect.

There might be more of this kind of issue in the documentation. For this particular one, you can trace the code to docs/api.rst,: 

```
.. autofunction:: redirect
```
"
1851,Document flash message size limit,2016-06-02T18:27:18Z,2016-06-02T18:59:50Z,,,,"Reason: Messages of size 68,493 - 91,326 characters cause flash to fail silently.
Session cookies cannot have such large messages.

Issue: pallets/flask#1789
"
1850,Add clarification for login_required decorator,2016-06-02T18:13:57Z,2016-06-05T21:23:08Z,,,,"ref #313
"
1849,Remove deprecation warnings for add_etags & mimetype guessing for send_file(),2016-06-02T17:07:59Z,2016-06-03T12:53:13Z,,,,
1848,Add version switch to flask cli,2016-06-02T10:59:01Z,2016-06-02T11:53:13Z,,,,"re #1828 
"
1847,Issue using Flask CLI with module layout recommended in Large Applications,2016-06-01T23:38:45Z,2017-07-15T03:53:50Z,"cli, docs",,,"Example project that shows issue is available here: https://github.com/sean-lynch/flask-cli-issue . I'm not sure if this is a flask cli issue or an issue with documentation. Happy to correct the docs if it's the latter.

I'm attempting to use the large app structure seen in the [Flask Larger Applications documentation](http://flask.pocoo.org/docs/0.11/patterns/packages/)

First, set up a virutal environment and install flask 0.11 into that environment (requirements.txt
has all that for you).

Can successfully launch app using old `app.run()` mechanism found in `run.py` and `old_launch.sh`

```
$ python run.py
```

But can't seem to get to work with flask-cli. You can see both of the methods in `new_launch.sh`.

This throws `ImportError - No module named server`:

```
$ FLASK_APP=server FLASK_DEBUG=1 flask run
```

This loads, but doesn't register any of the views even though the `Loading views...` print output makes it to the console.

```
$ FLASK_APP=server/__init__.py FLASK_DEBUG=1 flask run
```

How should I be loading a module with flask-cli? Or alternatively, how should I be changing the module structure to support it properly?
"
1846,Add tests target that uses simplejson,2016-06-01T21:15:32Z,2016-06-03T16:54:21Z,testing,,,"https://github.com/pallets/flask/issues/1602#issuecomment-154127373

Should add tox envs for testing `flask.json` with simplejson installed.  Possibly add this to the travis matrix.
"
1845,IPython Option for Flask Shell,2016-06-01T19:35:21Z,2016-06-01T19:50:38Z,,,,"Would like to be able to use iPython instead of the default Python shell when running 'flask shell'.
"
1844,Middleware doesn't execute inside test_request_context(),2016-06-01T15:46:35Z,2016-06-01T23:46:19Z,,,,"I'm trying to write a unittest for a custom middleware layer in my app and I'm having difficulty getting the middleware to execute inside a test request context. Here's a simple script that illustrates the problem:

``` python
from flask import Flask, url_for

class Middleware(object):
    def __init__(self, app):
        print ' - initialized middleware'
        self.app = app

    def __call__(self, environ, start_response):
        print ' - executed middleware'
        return self.app(environ, start_response)

# create app
app = Flask(__name__)

# add middleware
app.wsgi_app = Middleware(app.wsgi_app)

# add route
@app.route('/')
def index():
    return 'index'

# test GET                                                                      
print '\nTesting GET...'
resp = app.test_client().get('/')
print ' - Response: ' + resp.data

# test context                                                                  
print '\nTesting request context...'
with app.test_request_context('/'):
    app.preprocess_request()
    ret = app.dispatch_request()
    resp = app.make_response(ret)
    resp = app.process_response(resp)
    print ' - Response: ' + resp.data
```

The middleware executes inside the test client GET request but not inside the test request context. Here's the output:

``` bash
$ python test.py
 - initialized middleware

Testing GET...
 - executed middleware
 - Response: index

Testing request context...
 - Response: index
```

Am I doing something wrong or is this the intentional behavior inside a test request context? I'm using Flask 0.11 and Werkzeug 0.11.10.

Thanks for your help!
"
1843,Mention the template name conflict issue in blueprint templates docs,2016-06-01T11:25:18Z,2016-06-04T06:25:16Z,,,,"re #266
"
1842,[CLI] Option to pass the FLASK_APP variable as an argument ,2016-06-01T00:26:19Z,2016-06-01T08:26:10Z,,,,"For the latest CLI feature (Thanks a lot for that BTW), to run a app, we currently do:

```
$ export FLASK_APP=/path/to/hello.py
$ export FLASK_DEBUG=1
$ flask run
```

Wouldn't it be nice, if app and debug variables could also be passed as arguments, That way, we can also do

```
$ flask --app=/path/to/hello.py --debug run
```

I as a user would prefer the first option in a production environment, but for development, the second option (CLI arguments) would be much comfortable.

What do you guys think about this ?
"
1841,Guard sys.exc_clear call for people using pypy3,2016-05-31T20:20:28Z,2016-06-13T18:34:36Z,,,,"I believe this is behind the reason behind recent Travis-CI failures in flask-restplus pull requests; at the very least, this is obscuring the real error. For example, see https://travis-ci.org/noirbizarre/flask-restplus/jobs/134224010
"
1840,a few more python3-compatible print,2016-05-31T19:15:30Z,2016-05-31T19:20:22Z,,,,"some simple changes towards py3

I hope that the future import is allowed here. It is already used elsewhere in the code of flask.
"
1839,Update and rename README to README.md,2016-05-31T16:45:55Z,2016-05-31T16:48:23Z,,,,
1838,Fixed typo in filename.,2016-05-31T14:22:57Z,2016-05-31T14:24:11Z,,,,
1837,Setting error handler for unknown code fails,2016-05-31T07:51:12Z,2017-06-01T01:10:00Z,"bug, docs",,,"The following code:

```
flask_app.errorhandler(402)(http_exception_handler)
```

raises `KeyError: 402` due to missing 402 in default exception. Code works fine with Flask=0.10.1
"
1836,ExtDeprecationWarning show file path with deprecated import,2016-05-30T18:58:29Z,2016-05-30T19:10:49Z,,,,"It should be very useful to warning which files have deprecated imports
"
1835,Failing test: test_egg_installed_paths,2016-05-30T17:51:31Z,2017-05-28T03:54:19Z,packaging,/usr/lib64/python2.7/site-packages/py/_error.py:84,/usr/lib64/python2.7/site-packages/py/_error.py:84: ENOENT,"While trying to package 0.11 on Gentoo Linux, I've run into the following test failure:

```
============================================= FAILURES =============================================
_____________________________________ test_egg_installed_paths _____________________________________

install_egg = <function inner at 0x7f5eebfa9668>
modules_tmpdir = local('/var/tmp/portage/dev-python/flask-0.11/temp/pytest-of-portage/pytest-0/test_egg_installed_paths0/modules_tmpdir')
modules_tmpdir_prefix = local('/var/tmp/portage/dev-python/flask-0.11/temp/pytest-of-portage/pytest-0/test_egg_installed_paths0/modules_tmpdir')

    def test_egg_installed_paths(install_egg, modules_tmpdir,
                                 modules_tmpdir_prefix):
        modules_tmpdir.mkdir('site_egg').join('__init__.py').write(
            'import flask\n\napp = flask.Flask(__name__)'
        )
>       install_egg('site_egg')

tests/test_instance_config.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:116: in inner
    egg_path, = modules_tmpdir.join('dist/').listdir()
/usr/lib64/python2.7/site-packages/py/_path/local.py:379: in listdir
    names = py.error.checked_call(os.listdir, self.strpath)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <py._error.ErrorMaker object at 0x7f5eee4382d0>, func = <built-in function listdir>
args = ('/var/tmp/portage/dev-python/flask-0.11/temp/pytest-of-portage/pytest-0/test_egg_installed_paths0/modules_tmpdir/dist',)
kwargs = {}, __tracebackhide__ = False, cls = <class 'py.error.ENOENT'>
value = OSError(2, 'No such file or directory'), tb = <traceback object at 0x7f5eebfa6c68>
errno = 2

    def checked_call(self, func, *args, **kwargs):
        """""" call a function and raise an errno-exception if applicable. """"""
        __tracebackhide__ = True
        try:
            return func(*args, **kwargs)
        except self.Error:
            raise
        except (OSError, EnvironmentError):
            cls, value, tb = sys.exc_info()
            if not hasattr(value, 'errno'):
                raise
            __tracebackhide__ = False
            errno = value.errno
            try:
                if not isinstance(value, WindowsError):
                    raise NameError
            except NameError:
                # we are not on Windows, or we got a proper OSError
                cls = self._geterrnoclass(errno)
            else:
                try:
                    cls = self._geterrnoclass(_winerrnomap[errno])
                except KeyError:
                    raise value
>           raise cls(""%s%r"" % (func.__name__, args))
E           ENOENT: [No such file or directory]: listdir('/var/tmp/portage/dev-python/flask-0.11/temp/pytest-of-portage/pytest-0/test_egg_installed_paths0/modules_tmpdir/dist',)

/usr/lib64/python2.7/site-packages/py/_error.py:84: ENOENT
```

Also note that it's pretty unclear that you now require py.test for test running, might want to add that as an explicit dependency somehow.
"
1834,Bringing the copyright date up to 2016.,2016-05-30T17:39:40Z,2016-05-30T17:40:18Z,,,,
1833,Fixed link in changelog to documentation.,2016-05-30T08:49:46Z,2016-05-30T21:20:23Z,,,,"Using the officially documented, shortcut package path of the `Config` class instead of the actual one.
"
1832,static url is not correct with subdomain,2016-05-30T04:00:19Z,2016-06-20T07:52:08Z,,,,"The code is like this

```
from flask import Flask, Blueprint, url_for

app = Flask(__name__)
app.config['SERVER_NAME'] = 'localhost:5000'
app.url_map.default_subdomain = 'forums'

forums = Blueprint('forums', __name__)


@forums.route('/')
def forums_index():
    print(url_for('static', filename='index.css'))
    return 'forums,hello'

docs = Blueprint('docs', __name__)


@docs.route('/')
def docs_index():
    return 'docs,hello'


app.register_blueprint(forums)
app.register_blueprint(docs, subdomain='docs')


@app.route('/hello')
def index():
    return 'index,hello'


if __name__ == '__main__':
    app.run(debug=True)
    print(app.url_map) 
```

The all url

```
([<Rule 'forums|/hello' (GET, OPTIONS, HEAD) -> index>,
 <Rule 'forums|/' (GET, OPTIONS, HEAD) -> forums.forums_index>,
 <Rule 'docs|/' (GET, OPTIONS, HEAD) -> docs.docs_index>,
 <Rule '/static/<filename>' (GET, OPTIONS, HEAD) -> static>])
```

The static url

```
url_for('static', filename='index.css')
```

will return `http://localhost:5000/static/index.css` not `http://forums.localhost:5000/static/index.css`

I think I have set 
`app.url_map.default_subdomain = 'forums'`
the all default url is `forums.localhost:5000` not `localhost:5000`

Though I can add

```
    app.url_map._rules.clear()
    app.url_map._rules_by_endpoint.clear()
    app.url_map.default_subdomain = 'forums'
    app.config['SERVER_NAME'] = 'localhost:5000'
    app.add_url_rule(app.static_url_path + '/<path:filename>',
                                      endpoint='static',
                                      view_func=app.send_static_file,
                                      subdomain='forums')

```

to solve it,is it a bug with flask?
(python3 and Werkzeug (0.11.10))
"
1831,Show line which caused the DeprecationWarning,2016-05-29T20:53:56Z,2016-05-29T21:51:05Z,,,,"When raising a DeprecationWarning, show the line in the application code
which caused the warning, rather than the line in Flask

e.g. a file `app.py` with:

``` python
from flask import Flask
from flask.ext.babel import Babel
```

will show:

```
app.py:2: ExtDeprecationWarning: Importing flask.ext.babel is
deprecated, use flask_babel instead.
```

instead of:

```
/home/mapleoin/venv/local/lib/python2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.babel is deprecated, use flask_babel instead.
  .format(x=modname), ExtDeprecationWarning
```
"
1830,Update help to >   set FLASK_APP=hello.py,2016-05-29T19:10:15Z,2016-05-30T21:20:35Z,,,,"When running `flask --help`, the printed string contains this:

>   Example usage:
> 
>   set FLASK_APP=hello
>    set FLASK_DEBUG=1
>    flask run

but it actually only works with `set FLASK_APP=hello.py` so the help should be changed.

This is true on my Windows 7 Python 3.5 flask 0.11 setup.
"
1829,"""[Errno 2] No such file or directory"" on flask run with FLASK_DEBUG=1",2016-05-29T19:03:30Z,2016-12-26T18:59:20Z,"bug, cli",,,"I get the following `[Errno 2] No such file or directory` with **flask 0.11** & werkzeug 0.11.10 on Windows 7 64bit with Python 3.5 but only when `FLASK_DEBUG=1`. 

``` sh
D:\tmp
λ python --version
Python 3.5.1 :: Continuum Analytics, Inc.

D:\tmp
λ python -c ""import hello_flask""

D:\tmp
λ set FLASK_APP=hello_flask.py

D:\tmp
λ flask run
 * Serving Flask app ""hello_flask""
 * Forcing debug mode off
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)

D:\tmp
λ set FLASK_DEBUG=1

D:\tmp
λ flask run
 * Serving Flask app ""hello_flask""
 * Forcing debug mode on
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with windowsapi reloader
d:\anaconda3\envs\flask\python.exe: can't open file 'D:\Anaconda3\envs\flask\Scripts\flask': [Errno 2] No such file or directory
```

`hello_flask.py` is the minimal app from the [docs](http://flask.pocoo.org/docs/0.11/quickstart/#a-minimal-application).
"
1828,`flask --version` fails,2016-05-29T17:54:10Z,2016-06-02T12:24:07Z,"cli, good first issue",Error,Error: no such option: --version,"The `flask` CLI utility that ships with Flask 0.11 does not respond to the `--version` flag. I would expect the following output:

``` bash
$ flask --version
Flask 0.11
Python 3.5.1
```

Instead I get the following output:

``` bash
$ flask --version
Error: no such option: --version
```
"
1827,Convert readthedocs link for their .org -> .io migration for hosted projects,2016-05-29T13:42:51Z,2016-05-29T13:49:38Z,,,,"As per their email ‘Changes to project subdomains’:

> Starting today, Read the Docs will start hosting projects from subdomains on the domain readthedocs.io, instead of on readthedocs.org. This change addresses some security concerns around site cookies while hosting user generated data on the same domain as our dashboard.

Test Plan: Manually visited all the links I’ve modified.
"
1826,Match the hello.py with the one on homepage,2016-05-29T12:51:51Z,2016-05-29T13:47:19Z,,,,"The `hello.py` script in quickstart is different from the one on the homepage. Therefore, it cannot be run with `python hello.py`, which conflicts with the next paragraph in quickstart.
"
1825,Flask 0.11/httpbin: TypeError: <generator object MultiDict.lists at ...> is not JSON serializable,2016-05-29T12:35:18Z,2016-06-01T23:55:32Z,,TypeError,TypeError: <generator object MultiDict.lists at ...> is not JSON serializable,"Since updating from Flask 0.10.1 to 0.11.0, when trying to request `/response-headers` using [httpbin](https://github.com/Runscope/httpbin) I get:

```
[...] ERROR in app: Exception on /response-headers [GET]
Traceback (most recent call last):
  File "".../site-packages/flask/app.py"", line 1988, in wsgi_app
    response = self.full_dispatch_request()
  File "".../site-packages/flask/app.py"", line 1641, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "".../site-packages/flask/app.py"", line 1544, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "".../site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File "".../site-packages/flask/app.py"", line 1639, in full_dispatch_request
    rv = self.dispatch_request()
  File "".../site-packages/flask/app.py"", line 1625, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "".../site-packages/httpbin/core.py"", line 314, in response_headers
    response = jsonify(headers.lists())
  File "".../site-packages/httpbin/core.py"", line 40, in jsonify
    response = flask_jsonify(*args, **kwargs)
  File "".../site-packages/flask/json.py"", line 266, in jsonify
    (dumps(data, indent=indent, separators=separators), '\n'),
  File "".../site-packages/flask/json.py"", line 126, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "".../json/__init__.py"", line 237, in dumps
    **kw).encode(obj)
  File "".../json/encoder.py"", line 201, in encode
    chunks = list(chunks)
  File "".../json/encoder.py"", line 436, in _iterencode
    o = _default(o)
  File "".../site-packages/flask/json.py"", line 83, in default
    return _json.JSONEncoder.default(self, o)
  File "".../json/encoder.py"", line 180, in default
    raise TypeError(repr(o) + "" is not JSON serializable"")
TypeError: <generator object MultiDict.lists at ...> is not JSON serializable
```

This is on Python 3.5 with httpbin 0.4.1
"
1824,Consider making StrictUndefined the default in Flask 1.0,2016-05-28T14:36:13Z,2017-04-19T13:08:50Z,,,,"Of all Undefined variants, it comes closest to ""Explicit is better than implicit"" and ""Errors should never pass silently"".

I'm not sure it's worth changing in Jinja2 because of backward compatibility requirements, but Flask 1.0 seems like a reasonable point where behavior changes are expected anyway.
"
1823,Added sentry to docs,2016-05-26T20:57:20Z,2016-05-27T10:00:16Z,,,,
1822,Improve application context popping,2016-05-26T19:47:38Z,2016-05-26T20:31:16Z,,,,"Exceptions during teardown handling will no longer leave application
contexts lingering around.  This fixes #1767
"
1821,Added plugin support to the cli,2016-05-26T19:30:31Z,2016-05-26T20:17:34Z,,,,"This fixes #1776
"
1820,Switch to CLI Light,2016-05-26T18:55:18Z,2016-05-26T19:05:46Z,,,,"This requires some explanation because it's potentially a controversial change.  We used to have `flask --app foo` support but this pull request essentially removes it.

Why are we doing this? Turns out there is a fundamental problem with how Click currently handles certain aspects and the feature that made `--app` work will have to change in Click. As a direct result of this we have to temporarily pretend we never had an intention to make that flag work.  I understand it's not a nice thing to do but I think in the grand scheme of things this is a good way to get a release out which is really something that needs to happen.

I might want to bring this back later but this will require some major changes in Click which I rather not do at the same time as a Flask release.

In the process of this I also intentionally underdocument some APIs which I'm not super happy about. This should encourage people to not go all in with the cli for now.

The tracking issue for that is https://github.com/pallets/click/issues/590
"
1819,fix bug in example/flaskr/flaskr.py,2016-05-25T14:36:09Z,2016-05-25T16:01:08Z,,,,
1818,fix docstring,2016-05-24T19:06:14Z,2016-05-24T19:06:34Z,,,,"change string to docstring
"
1817,Unify versionadded markers (0.11 vs 1.0),2016-05-23T12:35:53Z,2016-05-23T12:43:42Z,good first issue,,,"There are a few `versionadded::` markers that point to 1.0 - those should be changed to 0.11 for that release.
"
1816,Reference to Flask 1.0 in Flask 0.10 docs,2016-05-23T06:03:00Z,2016-05-26T19:30:17Z,docs,,,"I think there shouldn't be reference to future (not released) versions in current docs, it's very confusing.

http://flask.pocoo.org/docs/0.10/server/

> Starting with Flask 1.0 there are multiple built-in ways to run a development server. 

Also http://flask.pocoo.org/docs/0.10/cli/#cli link is broken.
"
1815,Add special handling of ./ template strings,2016-05-22T12:46:52Z,2016-05-22T18:58:19Z,,,,"As is shown in https://github.com/pallets/flask/issues/1361, there is a desire for easy separation of templates for different blueprints. 

Currently it is not possible to assign a separate sub directory to be used for a specific blueprint. All templates are searched relatively to the root template directory. Although it seems that the `template_folder` Blueprint argument would have this meaning this is not actually the case. 
This argument will only add the `template_folder` as one of the directories to search in. 

With this change a template passed to `render_template` can be prefixed with `./` to indicate that it should not search in the root template directory, but in a subdirectory of it with the name of the blueprint.
"
1814,Fast path for disabled template load explain.,2016-05-22T09:36:57Z,2016-05-26T19:34:56Z,,,,"Refs #1792
"
1813,Resolve state issue for url_for with forced scheme,2016-05-22T08:46:32Z,2016-05-26T19:48:20Z,,,,"This fixes #1596
"
1812,turn 2 prints to py2/py3 compatible syntax,2016-05-20T19:38:08Z,2016-05-20T19:57:10Z,,,,"as my very modest contribution towards python3
"
1811,Addressing Issue 1809,2016-05-17T11:53:08Z,2016-05-22T14:09:21Z,,,,"Added to docstring for Flask.register_blueprint to clarify kwargs.  Was unsure of the conventions for using :ref: but figured this fit, please let me know if there's a better way to do that.
"
1810,Added X-Accel-Redirect support,2016-05-15T09:11:23Z,2016-05-15T10:01:05Z,,,,"`X-Accel-Redirect` is very much alike Apache's `XSendfile` it instead however needs a `URI` pointing to the file than an absolute path. This is a tricky problem to solve and there  have been discussions on implementing a `nginx_sendfile` method, this however is disastrous since in development machines `nginx_sendfile` won't send the file since it is on a default flask server, thus every time the developer wishes to test an app on his own machine, it is required to change all `nginx_sendfile` calls to normal `flask.send_file` calls manually changing url's and such.

How is this patch different? As seen below in the test app simply set the config  `USE_X_ACCEL` to true and then when calling `send_file` set the `x_accel_uri` parameter to the internal `uri` configured in your nginx config. And when testing simply keep `USE_X_ACCEL` at the default value `False`, this will make `send_file` ignore the `x_accel_uri` even if it is set. :smile: 
## A test app:

```
from flask import Flask, send_file

app = Flask(__name__)
app.use_x_accel = True  
# app.config['USE_X_ACCEL'] = True

@app.route('/dl')
def download():
        return send_file('files/1GB.zip', as_attachment=True, x_accel_uri='/protected/')

app.run(debug=True, port=8080)
```
## For the following nginx config:

```
server {
        listen 80;

        location / {
                proxy_pass http://localhost:8080/;
        }

        location /protected {
                internal;
                alias /home/test/files;
        }
}
```
### Headers retrieved using `Curl`:

```
deelaka@deelaka-Lap:~$ curl -I your.server.ip/dl
HTTP/1.1 200 OK
Server: nginx/1.4.6 (Ubuntu)
Date: Sun, 15 May 2016 08:42:49 GMT
Content-Type: application/zip
Content-Length: 1073741824
Last-Modified: Sat, 14 May 2016 16:51:22 GMT
Connection: keep-alive
Content-Disposition: attachment; filename=1GB.zip
Cache-Control: public, max-age=43200
Expires: Sun, 15 May 2016 20:42:49 GMT
ETag: ""5737578a-40000000""
Accept-Ranges: bytes

```
"
1809,flask.Flask.register_blueprint is poorly documented,2016-05-14T02:10:05Z,2017-06-14T14:41:44Z,"blueprints, docs",,,"http://flask.pocoo.org/docs/0.10/api/#flask.Flask.register_blueprint

The documentation doesn't list or explain any of the arguments used by `flask.Flask.register_blueprint`.

It only says:

```
register_blueprint(*args, **kwargs)¶
Registers a blueprint on the application.

New in version 0.7.
```

For one, I know there should be at least `use_prefix` and maybe (or surely) more than that.

**Note:** All Flask version's documentation seems to be affected by this.
"
1808,itsdangerous -> derive_key() occasionally returns invalid key.,2016-05-13T09:44:20Z,2016-05-15T20:19:50Z,,,,"The signing of session-cookies works fine on development computer. But when moving the software to an embedded device, ARM71, 32 bit the derive_key() occasionally fail and returns an invalid key. Making the cookie invalid.

It is actually the hmac that returns invalid hashed string, but this only happens when running the flask application. 

```
def derive_key(self):
    """"""This method is called to derive the key.  If you're unhappy with
    the default key derivation choices you can override them here.
    Keep in mind that the key derivation in itsdangerous is not intended
    to be used as a security method to make a complex key out of a short
    password.  Instead you should use large random secret keys.
    """"""
    salt = want_bytes(self.salt)
    if self.key_derivation == 'concat':
        return self.digest_method(salt + self.secret_key).digest()
    elif self.key_derivation == 'django-concat':
        return self.digest_method(salt + b'signer' +
            self.secret_key).digest()
    elif self.key_derivation == 'hmac':
        mac = hmac.new(self.secret_key, digestmod=self.digest_method) ##### 1
        print(binascii.hexlify(mac.digest()))
        mac.update(salt)               ##### 2
        print(binascii.hexlify(mac.digest()))
        return mac.digest()
    elif self.key_derivation == 'none':
        return self.secret_key
    else:
        raise TypeError('Unknown key derivation method')
```

secret_key = b""testing""
salt = ""cookie-session""

After #####1, binascii.hexlify(mac.digest()) = b'6ab6fc891eefd3b78743ea28b1803811561a7c9b'
After #####2, binascii.hexlify(mac.digest()) = b'd58bd52b4ced54374ea5baca0b6aa52b0e03af74'

But sometimes (1) above return  b'9dac0c533fcca6cb787aa332d8f152ffb7e6b960'
and (2) does not change when adding salt:  b'9dac0c533fcca6cb787aa332d8f152ffb7e6b960'

Been trying to solve this for a couple of days without success. Any ideas?
"
1807,stop/terminate flask outside request context,2016-05-13T09:06:42Z,2016-05-13T10:13:20Z,,,,"is it possible to stop flask outside request context ? as i know there's no way for it .

maybe a function( stop() ) that changes a flag( shutdown_signal=False ==> True ) for werkzeug that stops server for listening on new connections ?
i can contribute on making this feature if you allow me ...
"
1806,Forward ported CLI tests from Flask-CLI and fixed a bug with the CLI's name.,2016-05-12T09:08:35Z,2016-05-16T17:36:55Z,,,,"To clarify, looking at the [signature of the click's Group class](https://github.com/pallets/click/blob/6.6/click/core.py#L1135-L1138) I found that passing the whole Flask app isn't what it expects, but just a command group name.
"
1805,How to bind() when DEBUG = True,2016-05-11T02:15:49Z,2016-05-11T04:06:50Z,,,,"For this example I use ZeroMQ but I suppose any socket library could do. This is the code

```
#!/usr/bin/env python
import zmq
from flask import Flask

app = Flask(__name__)

context = zmq.Context()
socket = context.socket(zmq.REP)
socket.bind('tcp://*:5500')

app.debug = True  # Commenting this line does the trick
app.run()
```

As when using DEBUG process is fork()ed, the code tries to bind twice. Obviously, Flask knows how to open the port only once, so I'm wondering how to do the same for functions that bind()?
"
1804,'config object has no attribute from_json' error ,2016-05-10T08:28:58Z,2016-05-10T08:30:02Z,,,,"I am getting this error while running my web app. I am reading config values from json by doing this : 
`app.config.from_json('config.json')`
"
1803,'config object has not attribute from_json' error ,2016-05-10T08:28:57Z,2016-05-10T08:32:15Z,,,,"I am getting this error while running my web app. I am reading config values from json by doing this : 
`app.config.from_json('config.json')`
"
1802,Why `from . import views` can solve circle import in Flask?,2016-05-09T09:40:14Z,2016-05-09T09:41:04Z,,,,"I learn from [Larger Applications](http://flask.pocoo.org/docs/0.10/patterns/packages/).In this document, It says: ""all the view functions (the ones with a route() decorator on top) have to be imported in the **init**.py file. **Not the object itself, but the module it is in.**""  
I don't know why when I do this: `from . import views`,It succeed.Though `from views import *` can also work well.  
I organize these file like this:

```
myapplication/
  runner.py
  myflask/
    __init__.py
    views.py
    templates/
    static/
    ...
```

runner.py:

```
from testFlask import app
app.run()
```

myflask/__init__.py:

```
from flask import Flask
app = Flask(__name__)
from . import views # why this can work????
```

myflask/views.py:

```
from . import app
@app.route('/')
def index():
    return 'Hello World!'
```

and I run it:

```
$ cd myapplication
$ python runner.py
```

It's OK to run this Flask app. However I want to know why `from . import views` can solve this **circle import** problem in flask? And why the doc says: **Not the object itself, but the module it is in**????
"
1801,"Fix ""with"" formatting in doc",2016-05-09T03:44:50Z,2016-05-09T05:44:17Z,,,,"`with` statement isn't properly formatted in reST in two sections in the `flask.testing.FlaskClient` documentation.
"
1800,ImportError when dropping privileges before running Flask,2016-05-08T02:37:33Z,2016-05-08T15:48:00Z,,,,"When using Flask as privileged user, it may under circumstances not be possible to drop permissions before the app is run, including when using ports that do not require root privileges.

```
drop_privileges() # drop privileges to nobody
app.run()
```

The above code will throw an `ImportError`, given the scenario that Flask's python files are not accessible to the nobody user due to file permissions, because Flask's `run`-method (and other internal methods) make use of additional inline imports.

As this scenario might be more common, it may be desirable to move all inline imports to the top of their respective module.

There are various other reasons that might support the request to move imports to the top of modules: See [Python import coding style](https://stackoverflow.com/questions/477096).
"
1799,Does Response() work for anyone?,2016-05-07T05:23:48Z,2016-05-07T10:26:21Z,,TypeError,TypeError: __init__() takes 1 positional argument but 2 were given,"I've been trying to stream some data out of the database into a downloadable CSV file and having trouble at every turn.  I've been following what guides I can find.  Response() gives errors and setting headers on make_response() fails to produce a response the browser recognizes as savable (even with `response.headers[""Content-Disposition""] = ""attachment;filename=study.csv""` ).  I've never gone this direction with data extractions so I can't say I know what to expect with HTTP.

Anyhow, here are the messages from attempts to use Response:

```
   return Response(generate(), mimetype='text/csv')
TypeError: __init__() takes 1 positional argument but 2 were given

    return Response(generate())
TypeError: __init__() takes 1 positional argument but 2 were given

    return Response(""1,2,3"")
TypeError: __init__() takes 1 positional argument but 2 were given
```
"
1798,Fix a grammar mistake in the docs,2016-05-05T17:24:14Z,2016-05-05T17:27:45Z,,,,
1797,#1782: Add flag to handle file-like objects,2016-05-04T14:35:57Z,2016-05-04T19:00:55Z,,,,"A flag to deal with file-like object while keeping the `.name` and `.filename` properties.
"
1796,Post on refresh,2016-05-03T18:16:21Z,2016-05-03T18:25:36Z,,,,"When you have a form and do the following action

``` python
def doaction:
     on POST 
          # dostuff
          return render_template('myform.html', success=1)

     on GET 
          # dostuff
          return render_template('myform.html', success=2)
```

You render the page, fill in the form and submit it. It returns the same template with a message : 'its ok'. If you are on the past rendered after the post, you do a browser refresh, you paste again.

This does not seem normal to me, or should we just include a hidden input alreadysubmitted or something, or redirect to another page
"
1795,update docs and refer to setuptools,2016-05-03T16:06:13Z,2016-05-08T19:58:38Z,,,,"This PR fixes some documentation issues that were missed in #1588:
- fixes to `distribute.rst`:
  - replace leftover occurences of ""distribute"" with ""setuptools""
  - fix minor grammatical errors
"
1793,Slow json decoding for huge objects,2016-05-01T22:22:06Z,2016-05-02T00:37:18Z,,,,"While doing some tests decoding some huge json objects, I am observing a very slow decoding behavior. Actually, it takes a lot of time to execute request.json the first time.

What's the default json decoder for flask? Does it use some C optimized code?
"
1792,"[RFC] template load performance, Blueprint.render_template",2016-04-27T03:17:52Z,2017-04-26T06:18:38Z,,,,"The loading of template tried too much times(count of blueprints), after setting with EXPLAIN_TEMPLATE_LOADING config. 

Maybe **Blueprint.render_template**  is more effective.
1.  In huge application, there are too much Blueprints, the performance is important.
2.  An independent  module should always use independent template and Blueprint. Just like below in a view.py

``` python
mod = Blueprint('standalone', __name__, url_prefix='/evil', \
  template_folder='standalone/templates', \
  static_folder='standalone/static')

@mod.route('/')
def index():
    # add a function into Blueprint
    return mod.render_template('index.html')
```
"
1791,test_monkeypached_sleep fails on CentOS 6.7.,2016-04-26T01:21:58Z,2016-04-26T15:57:17Z,,ImportError,ImportError: No module named werkzeug._reloader,"This issue is related to PR #912.

```
============================= test session starts ==============================
platform linux2 -- Python 2.6.6, pytest-2.9.1, py-1.4.31, pluggy-0.3.1
rootdir: /src, inifile: setup.cfg
collected 459 items

tests/test_compat.py ..
tests/test_datastructures.py .............................................s..
tests/test_debug.py .................ss
tests/test_exceptions.py ......................
tests/test_formparser.py ...................
tests/test_http.py .................................
tests/test_internal.py ...
tests/test_local.py .........
tests/test_routing.py ..................................................
tests/test_security.py ....
tests/test_serving.py sssssssssFs
tests/test_test.py ...................................
tests/test_urls.py .........................................
tests/test_utils.py ...................
tests/test_wrappers.py ...................................................
tests/test_wsgi.py .......................
tests/contrib/test_atom.py .
tests/contrib/test_cache.py ...............................ssssssssssssss
tests/contrib/test_fixers.py .......
tests/contrib/test_iterio.py ....ss
tests/contrib/test_securecookie.py ..
tests/contrib/test_sessions.py .....
tests/contrib/test_wrappers.py ...
tests/res/test.txt s

=================================== FAILURES ===================================
___________________________ test_monkeypached_sleep ____________________________

tmpdir = local('/tmp/pytest-of-root/pytest-0/test_monkeypached_sleep0')

    def test_monkeypached_sleep(tmpdir):
        # removing the staticmethod wrapper in the definition of
        # ReloaderLoop._sleep works most of the time, since `sleep` is a c
        # function, and unlike python functions which are descriptors, doesn't
        # become a method when attached to a class. however, if the user has called
        # `eventlet.monkey_patch` before importing `_reloader`, `time.sleep` is a
        # python function, and subsequently calling `ReloaderLoop._sleep` fails
        # with a TypeError. This test checks that _sleep is attached correctly.
        script = tmpdir.mkdir('app').join('test.py')
        script.write(textwrap.dedent('''
        import time

        def sleep(secs):
            pass

        # simulate eventlet.monkey_patch by replacing the builtin sleep
        # with a regular function before _reloader is imported
        time.sleep = sleep

        from werkzeug._reloader import ReloaderLoop
        ReloaderLoop()._sleep(0)
        '''))
>       subprocess.check_call(['python', str(script)])

tests/test_serving.py:233: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

popenargs = (['python', '/tmp/pytest-of-root/pytest-0/test_monkeypached_sleep0/app/test.py'],)
kwargs = {}, retcode = 1
cmd = ['python', '/tmp/pytest-of-root/pytest-0/test_monkeypached_sleep0/app/test.py']

    def check_call(*popenargs, **kwargs):
        """"""Run command with arguments.  Wait for command to complete.  If
        the exit code was zero then return, otherwise raise
        CalledProcessError.  The CalledProcessError object will have the
        return code in the returncode attribute.

        The arguments are the same as for the Popen constructor.  Example:

        check_call([""ls"", ""-l""])
        """"""
        retcode = call(*popenargs, **kwargs)
        cmd = kwargs.get(""args"")
        if cmd is None:
            cmd = popenargs[0]
        if retcode:
>           raise CalledProcessError(retcode, cmd)
E           CalledProcessError: Command '['python', '/tmp/pytest-of-root/pytest-0/test_monkeypached_sleep0/app/test.py']' returned non-zero exit status 1

/usr/lib64/python2.6/subprocess.py:505: CalledProcessError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File ""/tmp/pytest-of-root/pytest-0/test_monkeypached_sleep0/app/test.py"", line 11, in <module>
    from werkzeug._reloader import ReloaderLoop
ImportError: No module named werkzeug._reloader
=============== 1 failed, 428 passed, 30 skipped in 3.57 seconds ===============
```
"
1790,flaskr example seems to loose data on every launch,2016-04-25T05:08:09Z,2016-05-13T21:58:50Z,good first issue,,,"Branch: 0.10
Example - flaskr
Description: Every time close and reopen the flaskr.py, the data submitted previously are erased.

I think problem is 

```
if __name__ == '__main__':
    init_db() 
    app.run()
```
"
1789,'Flash' Silent Error: occurrs when trying to flash a string with too many characters.,2016-04-25T00:20:47Z,2016-06-02T19:00:39Z,docs,,,"An error is occurring when I try to flash a message with too many characters. In my case, that number is 91,326.

```
if authority == True:
    rows = validate_rows(import_data, data_context)
    erroneous_rows = rows['erroneous_rows']

    if len(erroneous_rows) > 0:
        erroneous_row_string = ''
        i = 1

        # - DEBUGGING
        flash(2)

        for erroneous_row in erroneous_rows:
            erroneous_row_string += '<span style=""text-decoration: underline"">Row ' + str(i) + ': ' + \
                str(erroneous_row['errors']) + '</span><br/>' + str(erroneous_row['row_data']) + '<br/><br/>'
            i += 1
        erroneous_row_string = erroneous_row_string[:-1]

        # - DEBUGGING
        # flash(erroneous_row_string) <--- If I do this, it appears to 'crash' flash(), and no messages will appear.
        flash(isinstance(erroneous_row_string, str))
        flash(len(erroneous_row_string))
        flash(3)`
```

When the above is executed, I get the screen below.
![error1](https://cloud.githubusercontent.com/assets/13045020/14771460/300ecdb0-0a51-11e6-8307-0ba35a68a7bf.png)

If I were to do `flash(erroneous_row_string)` instead of `flash(len(erroneous_row_string)`, no flashed messages will appear at all. Assuming that this is because there is an upper limit to # of characters a flash message can have.

This makes sense, but it would be nice to return a non-silent error, I think.
"
1788,Install flask gives error,2016-04-23T06:48:25Z,2016-04-23T06:51:02Z,,,,"I was curious and tried to give flask a try. But it goes wrong from the start. 

```
$ python hello.py
python: can't open file 'hello.py': [Errno 2] No such file or directory

pi@raspberrypi ~/relaxbank $ find . -name 'hello.py'
pi@raspberrypi ~/relaxbank $
```
"
1787,database: persistent connetion,2016-04-21T17:17:41Z,2016-04-21T17:21:38Z,,,,"Hi,

I wonder where I should keep the persistent db connection throughout the application, not the request/response context. I read the doc and examples, it looks to me, the persistent connections are made for the request/response life cycle.

People recommend to use a connection pool. Then where should I keep the pool? I use cassandra database. The cluster session does a lot heavy lifting, and automatically manage pool connections. It is nice that user need not worry about the pool management, but it is also expensive, and I should keep it alive on the server throughout the life time of the thread.

For a single thread flask server, it is easy, I just initialize the connection, and put it in the global namespace. But somehow it does not work when I use gunicorn to pre-fork the workers. The session does not respond at all.

So the question comes back to whether flask can manage a ""long live context"" to store the object? My work around is to put the db setups in a function decorated by ""before_first_request"". It works pretty well, but I consider as a work around, instead of official solutions.

Regards,
Chuan 
"
1786,Failed get_json,2016-04-20T06:40:42Z,2016-04-20T14:27:24Z,,,,"hi, we find a strange error, sometime  request.get_json(force=True) will fail.
And,  https://github.com/pallets/flask/blob/c9b29f4072b66be4c751af060d64ea749c6991c1/flask/wrappers.py#L151
data here is http header in string instead of http body!!
"
1785,g object doesn't work between blueprints,2016-04-19T15:38:28Z,2016-04-19T15:39:18Z,,,,"Hi all,

Recently I developed an app with blueprint and the g object. However the g object gets 'reset' between blueprints. Any idea how to solve it?

Yicong
"
1784,Not possible to set a session cookie without a domain attribute when SERVER_NAME is set,2016-04-18T09:21:08Z,2017-05-28T03:58:13Z,,,,"If cookie has no domain attribute, it is valid only for the exact domain to which the request that sets the cookie is addressed, this is often a desirable behavior. A domain attribute makes the cookie also valid for all sub-domains of the specified domain.

Looking at https://github.com/pallets/flask/blob/c9b29f4072b66be4c751af060d64ea749c6991c1/flask/sessions.py#L198 if `SERVER_NAME` is set, a cookie will always have a domain attribute (either explicitly set via `SESSION_COOKIE_DOMAIN` or inferred from the `SERVER_NAME`).

Would it be possible to allow setting cookies without a domain  when `SERVER_NAME` is set?
"
1783,"Automatic redirect with ""/"" breaks routes with different methods",2016-04-16T11:59:16Z,2016-05-22T10:20:31Z,,,,"I have found an issue that is caused by the automatic redirect of routes to the version with a ""/"" at the end. See the code below for a minimal example:

``` python
from flask import Flask
app = Flask(__name__)


@app.route(""/a/"", methods=[""GET""])
def hello():
    return ""Hello GET!\n""


@app.route(""/a"", methods=[""POST""])
def hello_post():
    return ""Hello POST!\n""

if __name__ == ""__main__"":
    app.run()

```

The POST route is unreachable as the ""/"" redirect is done without looking at the method. See the following curl commands (the `-L` flag is to follow redirects):

``` bash
$ curl localhost:5000/a/
Hello GET!

$ curl localhost:5000/a
<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">
<title>Redirecting...</title>
<h1>Redirecting...</h1>
<p>You should be redirected automatically to target URL: <a href=""http://localhost:5000/a/"">http://localhost:5000/a/</a>.  If not click the link.

$ curl localhost:5000/a -L
Hello GET!

$ curl localhost:5000/a -X POST
<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">
<title>Redirecting...</title>
<h1>Redirecting...</h1>
<p>You should be redirected automatically to target URL: <a href=""http://localhost:5000/a/"">http://localhost:5000/a/</a>.  If not click the link.

$ curl localhost:5000/a/ -X POST
<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">
<title>405 Method Not Allowed</title>
<h1>Method Not Allowed</h1>
<p>The method is not allowed for the requested URL.</p>

$ curl localhost:5000/a -X POST -L
<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">
<title>405 Method Not Allowed</title>
<h1>Method Not Allowed</h1>
<p>The method is not allowed for the requested URL.</p>
```

Edit: My python version is Python3.4 and Werkzeug is 0.11.8 but it was also possible with the git version of Werkzeug.
"
1782,send_file() function tries to get the file from filesystem even if file-like object is passed,2016-04-15T17:46:06Z,2017-06-04T20:27:08Z,,,,"I use `send_file()` function for serving file-like objects from GridFS. However, if the file-like object obtained from the GridFS has assigned a file name, the `send_file()` function tries to get the file from the file system and I get a ""File not found""-like error. It should serve the data from the file-like object directly and not to try to find the file on the file system (even when there is a file name assigned to the file-like object). Or am I missing something?
"
1781,minor rewording of get_json documentation for clarity,2016-04-13T06:36:15Z,2016-05-04T13:46:49Z,,,,"I did a minor rewording of the docstring for `request.get_json()`. The current documentation is misleading, by having a mention of `on_json_loading_failed` followed by a sentence that references ""this function"", without clearly stating if the reference is to `get_json` or `on_json_loading_failed`.

The description reads much better in my opinion, after I moved the `on_json_loading_failed` sentence to the end.
"
1780,"Question: can flask create 'access.log', and 'error.log'",2016-04-12T16:41:23Z,2016-04-12T17:03:14Z,,,,"I am hoping to create two types of logs:
- `access.log`: lists all requests made on the flask application
- `error.log`: lists all warnings, and errors made within the flask application

Currently, I have defined [`app.py`](https://github.com/jeff1evesque/machine-learning/blob/9b53741fadae3d8f6cbf72ce76f0086d55779c69/app.py#L16-L27), which contains logic recycled from a gist [comment](https://gist.github.com/ibeex/3257877#gistcomment-946336):

``` python
import logging
from logging.handlers import RotatingFileHandler
from interface import app
app.run(host='0.0.0.0')

LOG_FILENAME = '/vagrant/log/access.log'

formatter = logging.Formatter(
    ""[%(asctime)s] {%(pathname)s:%(lineno)d} %(levelname)s - %(message)s"")
handler = RotatingFileHandler(LOG_FILENAME, maxBytes=10000000, backupCount=5)
handler.setLevel(logging.DEBUG)
handler.setFormatter(formatter)
app.logger.addHandler(handler)

log = logging.getLogger('werkzeug')
log.setLevel(logging.DEBUG)
log.addHandler(handler)
```

When I adjust my application, by making an unnecessary typo in the logic; or conversely, if I complete a successful post request on my application, nothing gets logged into `/vagrant/log/access.log`.  However, the `/vagrant/log/access.log` file is created, and empty.  Is the above logic equivalent to the `error.log` that I had intended?  If so, how can I correct this, while also creating a functional `/vagrant/log/access.log`?
"
1779,"pluralise ""thing""",2016-04-11T12:55:23Z,2016-04-11T12:57:04Z,,,,
1778,app.route does not catch // when having <path:> in the directive,2016-04-10T20:32:57Z,2016-04-10T21:35:38Z,,,,"``` python
@app.route('/test/<path:yey>')

>>> requests.get('http://localhost:5000/test/ye')
<Response [200]>
>>> requests.get('http://localhost:5000/test//')
<Response [404]>
>>> requests.get('http://localhost:5000/test//test')
<Response [404]>
>>> requests.get('http://localhost:5000/test/ye/te')
<Response [200]>
>>> requests.get('http://localhost:5000/test/ye//te')
<Response [200]>
>>> requests.get('http://localhost:5000/test///te')
<Response [404]>
>>> requests.get('http://localhost:5000/test//a/te')
<Response [404]>
>>> requests.get('http://localhost:5000/test/a//te')
<Response [200]>
```

All the 404 stuff should be intercepted but aren't.
"
1777,The comment didn't make any sense,2016-04-08T15:44:49Z,2016-04-08T15:53:25Z,,,,"I'm not sure that I've understand the purpose of this property, but on the off chance that I'm correct, this statement makes more sense than what came before.
"
1776,"Determine API for integrating custom shells with Flask such as IPython, etc?",2016-04-08T07:42:17Z,2016-05-26T20:17:34Z,cli,,,"Continuing discussion from #1729 
1. Should Flask shell natively support iPython?
   If so, what should that API look like?
2. Should Flask have a generic hook for extensions to add support for additional third-party shells? 
   If so, how would this work? @RonnyPfannschmidt suggested using entry points for this.

My vote is to natively support for iPython since it's so popular (I use it myself all the time via Flask-Script). But draw the line there and require other custom shell integrations to happen through third-party extensions.
"
1775,Update the list of Approved Extensions,2016-04-08T07:21:12Z,,,,,"http://flask.pocoo.org/docs/dev/extensiondev/#approved-extensions

Does anyone keep this updated? 
Should the concept of ""approved"" extensions get dropped?

Similarly, with the transition to `pallets`, what's going to happen to the extensions list itself? http://flask.pocoo.org/extensions/ 

Will it get dropped like snippets are?

See also #865 about updating the docs on approved extensions.
"
1774,API versioning with blueprints causes colission,2016-04-07T10:19:27Z,2016-04-07T11:18:34Z,,,,"The time has come where I need to release a new version for my api and still support the previous one.

I have an app structure that looks like this:

```
+-- app/
    +-- api_2_0/
        +-- __init__.py
        (...)
    +-- api_2_1/
        +-- __init__.py
        (...)
   +-- __init__.py
```

Both are blueprints which I initialize this way in my `__init__.py` in the `create_app` method (I'm using the [app factory](http://flask.pocoo.org/docs/0.10/patterns/appfactories/) method):

```
    from .api_2_0 import api as api_2_0_blueprint
    app.register_blueprint(api_2_0_blueprint, url_prefix='/api/v2.0')

    from .api_2_1 import api as api_2_1_blueprint
    app.register_blueprint(api_2_1_blueprint, url_prefix='/api/v2.1')
```

But this causes: `AssertionError: A blueprint's name collision occurred between <flask.blueprints.Blueprint object at 0x7f8e48e82c10> and <flask.blueprints.Blueprint object at 0x7f8e48ef7150>.  Both share the same name ""api"".  Blueprints that are created on the fly need unique names.`

It's true that both are called `api` inside their folders but I'm importing them with different names. Having to rename all the calls to `api` to something else for each version would make versioning painful and overall a code spaghetti.

Is there a better way to do this?
"
1773,Issue Template,2016-04-07T09:37:13Z,2016-06-02T19:50:59Z,docs,,,"It would be nice if you could add an issue template to the repository.
"
1772,Flask docs need rebuilding,2016-04-07T07:57:56Z,2016-06-26T23:46:39Z,,,,"d3d8a4694a9c1601e213d6b5f27fab34615609b7 hasn't shown up yet here: http://flask.pocoo.org/docs/dev/extensions/

I'm not sure how to trigger a rebuild... on RTD, anyone can trigger a rebuild from the web, but since it's hosted on Pocoo I'm not sure if there's a webhook that watches the repo for commits, or if @mitsuhiko has to manually do it. 
"
1771,Remove dotCloud host instructions,2016-04-07T06:31:31Z,2016-04-07T06:32:13Z,,,,"dotCloud is no more; their parent company went bankrupt

Fix #1769 
"
1770,'cli' is not found in my library ,2016-04-07T01:58:07Z,2016-04-07T02:44:17Z,,,,"@app.cli.command('initdb')
def initdb_command():
    """"""Creates the database tables.""""""
    init_db()
    print('Initialized the database.')
"
1769,Remove link to dotCloud on deployment options,2016-04-05T20:51:16Z,2016-04-07T06:32:13Z,,,,"http://flask.pocoo.org/docs/dev/deploying/#deployment

dotCloud [went out of business](http://venturebeat.com/2016/01/22/dotcloud-the-cloud-service-that-gave-birth-to-docker-is-shutting-down-on-february-29/).
"
1768,Add Zappa To Flask Deploy Guides,2016-04-05T14:29:42Z,2016-04-08T06:53:42Z,,,,"Since [Zappa](http://github.com/Miserlou/Zappa) now integrates seamlessly with Flask, I was wondering if you'd be open to the notion of having Zappa as one of the documented deployment options. I'm willing to write the docs myself, but I wanted to confirm the feature before submitting a pull request. I've also already written a [small tutorial](https://gun.io/blog/serverless-microservices-with-zappa-and-flask/) if anybody is interested in learning more.

Thanks! 
"
1767,Call out that teardown functions must never raise,2016-04-04T20:49:12Z,2016-05-26T19:47:52Z,,,,"Also add a more detailed explanation of how the request context and app
context interact.

Re-open of #1451, but against `master`.
"
1766,Remove extmigrate from Flask repo,2016-04-04T18:51:21Z,2016-04-04T21:19:10Z,,,,"Per #1765. This code already exists in it's own [repo](https://github.com/pocoo/flask-ext-migrate), this PR removes the script from the Flask source.

EDIT: Fix #1765
"
1765,"Remove ext migration tool from source, link to separate package",2016-04-04T18:24:14Z,2016-04-04T21:19:10Z,blocker,,,"This moved to its own repo: [pocoo/flask-ext-migrate](https://github.com/pocoo/flask-ext-migrate).  It should probably be removed from the Flask repo and the documentation should be updated to mention the migration tool.
"
1764,Change to Pallets project,2016-04-02T23:51:31Z,2016-04-03T21:11:38Z,,,,"Changed repos references: from @mitsuhiko to pallets
"
1763,Raise BadRequest if static file name is invalid,2016-04-01T02:53:19Z,2016-04-02T19:07:27Z,,,,"Fixes issue #1761 
"
1762,helpers.py - Ensure file is closed if flask opens it,2016-03-30T23:47:22Z,2016-03-30T23:54:37Z,,,,
1761,static_file endpoint doesn't love null byte,2016-03-28T16:43:48Z,2016-04-02T19:15:00Z,,"TypeError, ValueError","TypeError: must be encoded string without NULL bytes, not unicode, ValueError: embedded null byte","Hello,

while fuzzing my API, I think I've discovered a Flask issue. The static_file endpoint generate a 500 if the filename include a null byte (`\x00`).

Here is a minimal flask application:

```
from flask import Flask
app = Flask(__name__)


if __name__ == '__main__':
    app.run(debug=True)
```

I've tried launching it with either python 2 (2.7.11) or python 3 interpreter (3.5.1) with flask 0.10.1, then make this request:

```
import requests
requests.get('http://localhost:5000/static/\x00')
```

I get a 500, here is the traceback for python2:

```
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/site-packages/flask/app.py"", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/usr/local/lib/python2.7/site-packages/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/usr/local/lib/python2.7/site-packages/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python2.7/site-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python2.7/site-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/usr/local/lib/python2.7/site-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python2.7/site-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/usr/local/lib/python2.7/site-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/usr/local/lib/python2.7/site-packages/flask/helpers.py"", line 823, in send_static_file
    cache_timeout=cache_timeout)
  File ""/usr/local/lib/python2.7/site-packages/flask/helpers.py"", line 613, in send_from_directory
    if not os.path.isfile(filename):
  File ""/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/genericpath.py"", line 37, in isfile
    st = os.stat(path)
TypeError: must be encoded string without NULL bytes, not unicode
```

And here is the traceback for python 3:

```
Traceback (most recent call last):
  File ""/usr/local/lib/python3.5/site-packages/flask/app.py"", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/usr/local/lib/python3.5/site-packages/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/usr/local/lib/python3.5/site-packages/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python3.5/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""/usr/local/lib/python3.5/site-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python3.5/site-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/usr/local/lib/python3.5/site-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python3.5/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""/usr/local/lib/python3.5/site-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/usr/local/lib/python3.5/site-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/usr/local/lib/python3.5/site-packages/flask/helpers.py"", line 823, in send_static_file
    cache_timeout=cache_timeout)
  File ""/usr/local/lib/python3.5/site-packages/flask/helpers.py"", line 613, in send_from_directory
    if not os.path.isfile(filename):
  File ""/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/genericpath.py"", line 30, in isfile
    st = os.stat(path)
ValueError: embedded null byte
```

The error is not exactly the same but isfile doesn't seems to love null bytes.

I've tried to fix it locally by adding this piece of code to detect null bytes in `send_static_file` (https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L862):

```
if '\x00' in filename:
     raise RuntimeError(""Null byte"")
```

It seems to works with both python2 and python3, but I'm not sure what is the best response when the request include a null byte.

Here is the output of pip freeze if necessary:

```
Flask==0.10.1
itsdangerous==0.24
Jinja2==2.8
MarkupSafe==0.23
Werkzeug==0.11.5
```

I only tried on Mac OS X 10.11.4, I don't know if null byte are accepted in valid filename on other filesystems.
"
1760,Run bdist_wheel as a part of release process,2016-03-27T17:38:10Z,2016-03-27T17:54:25Z,,,,"The setup.cfg declares the ability to compile a wheel, but release process isn't actually compiling a wheel.
"
1759,update get-pip.py location,2016-03-23T10:28:46Z,2016-03-23T11:07:46Z,,,,
1758,Fixed typo,2016-03-22T20:33:59Z,2016-03-22T21:22:06Z,,,,"I think it's supposed to be an upper-case 'F'. Cheers :)
"
1757,Is there a way to design blueprints to incorporate DELETE?,2016-03-20T00:19:35Z,2016-03-20T00:38:31Z,,,,"Is there a way to design blueprints to incorporate DELETE?

I've been getting a error for a long time because I want to implement a form button action to just do a basic delete functionality for my app.

```
Method Not Allowed

The method is not allowed for the requested URL.
```

This is what my method looks like and nothing seems to be working...

```
@mod.route('/region/<region_id>', methods=['DELETE'])
def delete_region(region_id):
```

It seems as if Flask only does GET and POST not DELETE or PUT... And my only alternative is to do GET based DELETE methods as an alternative workaround... this however when logging proves to be not the best way to display my data and how it is modified or accessed. Any advice here? Thanks a bunch.

Also, I'm not making an API ... I just want to make a link to delete one specific entry.

```
GET based DELETE

@mod.route('/region/<region_id>/delete', methods=['GET'])
def delete_region(region_id):

```

References:
https://www.reddit.com/r/flask/comments/2ax1mf/af_delete_example/
"
1756,Want to change the default server address for flask application ,2016-03-18T07:36:07Z,2016-03-18T13:58:08Z,,,,"I did this-- `if __name__ == '__main__':
    app.run(host='0.0.0.0',port='80')`

but i get Permission denied error... couldn't find anything in the documentation. Is there any other way to accomplish this? It was relatively easier to do this in  django.
Thanks!
"
1755,"Replace ';' to ','",2016-03-14T15:02:39Z,2016-03-14T15:49:16Z,,,,"I think it is awkward. Though semicolon can be used as a kind of supercomma, this sentence is not that kine of thing. Replacing it with comma would be more better. isn't it?
"
1754,Fixed minor typo error,2016-03-14T14:21:18Z,2016-03-14T15:02:51Z,,,,"remove ;
"
1753,Add two missing converters for flask in the docs,2016-03-14T02:28:45Z,2016-04-01T21:05:11Z,,,,"All the converters are from werkzeug's builtin converters.

Documentation: http://werkzeug.pocoo.org/docs/dev/routing/#builtin-converters
"
1752,what mean,2016-03-13T10:59:18Z,2016-03-13T16:03:21Z,,,,"i want to under the commit
"
1751,updated readme to markdown to increase readability,2016-03-12T23:33:28Z,2016-03-12T23:42:09Z,,,,
1750,Fix minor typo in security doc,2016-03-11T17:08:03Z,2016-03-11T17:12:59Z,,,,"Just a subject verb mismatch.
"
1749,JSONEncoder and aware datetimes,2016-03-11T14:39:30Z,2016-03-11T15:20:19Z,,,,"I was surprised to see that though flask.json.JSONEncoder accepts datetime objects, it ignores the timezone. I checked werkzeug.http.http_date and it can handle timezone aware dates just fine if they are passed in, but the JSONEncoder insists on transforming the datetime to a timetuple, like this

 `return http_date(o.timetuple())`

This means i have to convert all my dates to utc before encoding them, otherwise I should overwrite the dafault() method in the encoder. Can you help me understand why the encoder was made to function with naive dates only?
Thx
"
1748,Update deprecated references,2016-03-08T09:05:35Z,2016-03-08T19:30:36Z,,,,"validators.Required() is marked as deprecated in favor of validators.DataRequired() and will be remove in WTForms 3.
"
1747,Fixed stream_with_context not working when decorated function takes parameters,2016-03-08T05:01:29Z,2016-04-01T23:17:45Z,,,,
1746,I want to clear the session when I close the program. What shoud I do?,2016-03-07T07:21:33Z,2016-03-07T07:31:05Z,,,,"the session['username'] isn't cleared when I close the program and then run the program.
I want to clear the session when I close the program. What shoud I do?

E.g:
http://flask.pocoo.org/docs/0.10/quickstart/#sessions
"
1745,pep8 fixes,2016-03-04T21:51:36Z,2016-03-04T21:57:44Z,,,,
1744,auto_find_instance_path() gives inconsistent results,2016-03-04T21:10:07Z,2016-03-04T21:24:09Z,,,,"I have a fairly straightforward project scaffolded out that looks like 

```
my_app/
    my_app/
        __init__.py
        models.py
        mod1/
        mod2/
    instance/
        config.py
    config.py
    setup.py
```

I installed this as a package to a virtualenv with `setup.py develop`.  My `__init__.py` looks like:

```
from flask import Flask
from flask.ext.sqlalchemy import SQLAlchemy

app = Flask(__name__, instance_relative_config=True)
app.config.from_pyfile('config.py')

db = SQLAlchemy(app)
```

If I run this file, I get an error `Unable to load configuration file (No such file or directory): '/home/my_app/my_app/instance/config.py'`. Indeed, this is the wrong path; it should be looking in `/home/my_app/instance/config.py`.

The file `models.py` contains only one line of code so far: `from my_app import db`. I can run this without any errors, which is obviously executing all the code in `__init__.py` as well. If I check the value of `Flask.auto_find_instance_path` in this context it has the correct path, unlike above.

Unless I am doing something wrong here, or this is a consequence of `setup.py develop`ing that I'm not understanding -- I believe this is an issue with the `find_package` helper  called by `auto_find_instance_path` . When I run  `__init__.py` directly, `__name__` is set to `__main__`, which causes `find_package` to return `os.getcwd()`. When I run `models.py`, the `__name__` for `__init__.py` is set to `my_app` which causes it to resolve properly via the module name.

This is my first large/packaged Flask project so maybe I'm missing something, but I believe the docs say that your `instance` folder should be next to your main application module, not inside it. If that's the case, why does `find_package` attempt to look in the current working directory? Shouldn't it look in the parent directory?
"
1743,Use pytest.raises() instead of try/catch with assert 0,2016-03-04T12:03:02Z,2016-03-04T12:51:07Z,,,,"This is somehow more readable, and improve consistency along the tests (currently there are assert 0/False along with pytest.raises)
"
1742,make hostname configurable,2016-03-04T10:20:31Z,2016-03-04T10:38:55Z,,,,"make hostname configurable if it defined in the `SERVER_NAME` config
"
1741,Fix for #1740,2016-03-03T18:15:00Z,2016-04-08T15:41:58Z,,,,"#1740
"
1740,Not able to set encoding in open_resource,2016-03-03T18:01:23Z,2016-04-08T15:42:05Z,,,,"If the resource from the application's resource folder is encoded in different encoding than locale.getpreferredencoding the UnicodeDecodeError: 'charmap' codec can't decode byte 0x8d in position 217 occures. We should be able to set encoding on open_resource

Python 3.5.1, Flask 0.10.1
"
1739,Add encoding type parameter to fix 'UnicodeDecodeError: cp949',2016-03-01T07:34:58Z,2016-03-01T08:36:33Z,,,,"I have a problem with loading a utf-8 encoded config file using config.from_pyfile() function.

However,  It raised an following error message.

> UnicodeDecodeError: 'cp949' codec can't decode byte 0xec in position 99: illegal multibyte sequence.

So I add encoding parameter to solve the problem at from_pyfile() function.

> Test Environments;
- OS : MS Window 7 32bit - Korean Edition
- Python 3.5.1
- Flask 0.10.1
"
1738,Updated year 2015 to 2016,2016-02-25T17:49:47Z,2016-02-25T18:00:56Z,,,,
1737,thwart giving error ,2016-02-23T19:11:45Z,2016-02-23T19:16:52Z,,TypeError,"TypeError: must be impossible<bad format char>, not str","## executing this code on Python 2.7.10 [GCC 5.2.1 20151010] on linux2

```
import flask
from MySQLdb import escape_string as thwart
username=""abc""

conn = MySQLdb.connect(host=""localhost"",user=""root"", passwd=""xxxxxxx"",db=""pythonprogramming"")
c       = conn.cursor()
x       = c.execute(""SELECT * FROM users WHERE username = (%s)"", (thwart(username)))

```

**getting error**
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: must be impossible<bad format char>, not str

**this is MySQL version on my PC**

> +-------------------------+------------------------------+
> | Variable_name                            | Value  
> +-------------------------+------------------------------+
> | innodb_version                          | 5.7.11  
> | protocol_version                        | 10  
> | slave_type_conversions            |  
> | tls_version                                 | TLSv1,TLSv1.1  
> | version                                      | 5.7.11  
> | version_comment                     | MySQL Community Server (GPL) |
> | version_compile_machine        | x86_64  
> | version_compile_os                  | Linux  
> +-------------------------+------------------------------+
"
1736,Documentation download links for PDF and zipped HTML return 404s on http://flask.pocoo.org/,2016-02-22T15:47:29Z,2016-02-22T15:52:54Z,,,,"I was trying to download the documentation from http://flask.pocoo.org/ using the PDF link and got a 404.  At the same time also tried the zipped HTML link and that returned a 404 as well.
"
1735,404 on Docs download url,2016-02-22T12:21:37Z,2016-02-22T15:16:07Z,,,,"The Docs archive/pdf download url on the website give a 404, but the 404 page looks very nice!!!
"
1734,You may want to include this example base Docker image with uWSGI and Nginx in the docs,2016-02-20T15:52:47Z,2016-02-20T19:33:37Z,,,,"I made a public (and open source) Docker image that you can use to build a Python Flask web application.

It has uWSGI for running the application, Nginx to serve HTTP and Supervisord to control them, so you don't have to learn how to install and configure all those to build your Python Flask web app.

It seems like uWSGI with Nginx is one of the more robust (and with great performance) ways to deploy a Python web app. Here are the benchmarks: http://nichol.as/benchmark-of-python-web-servers.

If there was an official Flask Docker image for deployment I would like to use it. But then, if there was an open source performant Docker image that could help deploying an app without having to learn, install and configure uWSGI, Nginx, Supervisord, I would have liked to find it in your docs. 

Now that I built this one, you may want to include it in your docs, maybe as ""a third party example"" or something. If you think this could be useful, I could submit a PR.

I think it could be in **deploying**: http://flask.pocoo.org/docs/0.10/deploying/
Or in snippet category **deployment**: http://flask.pocoo.org/snippets/category/deployment/

There are even some template projects you can use to bootstrap your own. And also, you don't have to clone the full project or something, you can just use it as a base image.

Docker Hub: https://hub.docker.com/r/tiangolo/uwsgi-nginx-flask/
GitHub: https://github.com/tiangolo/uwsgi-nginx-flask-docker
"
1733,Update MANIFEST.in with simpler template commands,2016-02-19T13:24:14Z,2016-03-12T23:42:28Z,,,,"Please see https://docs.python.org/2/distutils/sourcedist.html#commands for reference.
"
1732,Registering blueprint couldn't catch hyphen in url_prefix,2016-02-18T08:03:48Z,2016-04-05T05:55:13Z,,,,"I'm not sure there is a kind of convention in url_prefix for registering blueprint. If not, It behaves weird. 
I'd made cs-log app and register it on app.py like this.

```
app.register_blueprint(
  inventory_views.blueprint,
  url_prefix='/v1/<project_uuid>/<app_name>/inventory-info')
app.register_blueprint(
  custom_query_views.blueprint,
  url_prefix='/v1/<project_uuid>/<app_name>/custom_query')
app.register_blueprint(
  cs_log_views.blueprint,
  url_prefix='/v1/<project_uuid>/<app_name>/cs-log')
```

and try to approach to cs-log, flask give me a 404 error. After a few of try to fixing it, I've changed an order of registering like this.

```
app.register_blueprint(
  inventory_views.blueprint,
  url_prefix='/v1/<project_uuid>/<app_name>/inventory-info')
app.register_blueprint(
  cs_log_views.blueprint,
  url_prefix='/v1/<project_uuid>/<app_name>/cs-log')
app.register_blueprint(
  custom_query_views.blueprint,
  url_prefix='/v1/<project_uuid>/<app_name>/custom_query')
```

then it works I expected. Did I miss something? I think underbar in url_prefix of customer_query_views affect to url_prefix with hyphen. 

If something can't understand in my article, reply me.
"
1731,jsonify does not accept strings,2016-02-17T17:12:14Z,2016-02-17T18:32:07Z,,ValueError,ValueError: dictionary update sequence element #0 has length 1; 2 is required,"If I try to feed a string into jsonify, I get the following error:

ValueError: dictionary update sequence element #0 has length 1; 2 is required

I imagine this is intentional... perhaps it's related to the same problem described in issue #170 ?
"
1730,make safe_join behave like os.path.join with *args,2016-02-17T09:12:48Z,2016-06-04T19:12:55Z,,,,"Make safe_join behave like os.path.join, which accept multiple path components with *args.
Note that only the ``directory'' 's bound is respected and the path components are only joined together.
"
1729,Add IPython support to flask shell,2016-02-16T12:51:07Z,2016-05-26T19:30:54Z,cli,,,"It could be useful to create an IPython shell in an application context, since IPython has several features a normal Python shell lacks, like autocompletion.

This patch adds support for it. In fact, it makes the IPython shell the privileged choice. The Python shell will be used if IPython is not available or the `--no-ipython` flag is passed.

The code is patterned on the similar feature available in `flask-script`: https://github.com/smurfix/flask-script/blob/d03cc660cf5a92e0bff367f982a872f7dd5bae07/flask_script/commands.py#L277-L312. Many thanks to @lnielsen for pointing out this snippet.
"
1728,Add JSONIFY_MIMETYPE configuration variable,2016-02-16T05:05:44Z,2016-04-08T22:30:47Z,,,,"It is often useful to be able to return a vendor media type for JSON responses. For example, [JSON API](http://jsonapi.org/format/#content-negotiation) requires that all responses have the `Content-Type: applications/vnd.api+json` header.
"
1727,Documentation PDF version is not available,2016-02-14T14:39:38Z,2016-02-14T15:17:45Z,,,,"Hi, 

From home page, the link to the pdf version of the documentation should be http://flask.pocoo.org/docs/flask-docs.pdf but it's currently unavailable.

If the link is wrong, could you please provide a correct one?
"
1726,Duplicate key in jsonify,2016-02-13T05:42:58Z,2016-02-13T14:05:21Z,,,,"Hi, I was following the tutorial on Flask at [this](http://flask.pocoo.org/docs/0.10/tutorial/).
And I tried to return json data so I use `jsonify`

I found out that jsonify use `dict()` to convert params into a dict. But this will remove items with duplicate key.

In my case, I querried the data using this query

`cur = g.db.execute('SELECT title, text from entries order by id desc')`

The data was:

`[(u'Nope', u'hi, this is anoooother things'), (u'Nope', u'This is another'), (u'Hi', u'This is a sample entry')]`

So the jsonify just return:

`{
  ""Hi"": ""This is a sample entry"", 
  ""Nope"": ""This is another""
}`

The code work correctly, but I don't know if this is intended or not?
"
1725,"Run Flask in Thread, user the main thread for own logic?",2016-02-12T08:11:19Z,2016-02-12T14:37:12Z,,Exception,"Exception: wrong thread, use the main thread","Hi,

is it possible to let Flask run in a Thread?
I have the problem that in my project, I have to use the VBox XPCOM API, this api work only in the main thread:

`bash
return xpcom._xpcom.WaitForEvents(timeout)  
Exception: wrong thread, use the main thread
`

Now I want run as example a Job thread, this thread have to do sometimes, something with VBox.
And I want to let run the Flask Server with the arg threaded=True.

Now it will be very nice, if I can spawn the app.run into a Thread and in the main Thread run a loop whats call the VBox XPCOM API
"
1724,0.3 maintenance,2016-02-12T07:10:31Z,2016-02-12T14:35:48Z,,,,
1723,DOC: Remove gendered language,2016-02-09T19:25:24Z,2016-02-09T19:26:03Z,,,,"Was reading through this section and figured that there was no needed
for gendered language when referring to the person who owns said server.
Thanks for the great project!
"
1722,Purpose readme contribution,2016-02-09T19:00:16Z,2016-02-09T19:21:12Z,,,,"To make Flask more approachable to a larger number of users—from informed developers to curious passersby and new and interested visitors—I have added a new section to the technologyRepo README and created this file in .md format. The section is entitled What to Use Flask for and When to Use It. As the name suggests, the new section attempts to explain in plain and straightforward language what Flask is used for and when one should use it.

Other repositories may begin to use this new informative section soon, as my colleagues contact open-source technologies in an effort to make them more accessible to the many new users learning to code and GitHub every day.

Thank you for your consideration, I look forward to hearing your response. 
"
1721,Fix a typo,2016-02-08T14:04:06Z,2016-02-08T14:14:29Z,,,,"`interchangable` → `interchangeable`
"
1720,Non developer readme contribution,2016-02-07T19:36:56Z,2016-02-07T19:40:45Z,,,,"I added a novice introduction to expand on some of the concepts that a novice might need to start using flask 
"
1719,Flask will prevents media downloads while playing -- ,2016-02-04T21:24:55Z,2016-02-07T21:08:06Z,,,,"Hello:  

I am using flask 0.10.1
I have attempted the solution to this problem using several server configurations including the built in testing server, the eventlet server along with Miguel Grinberg's flask-socketio module ( as I want to use this module in the final product) and also using nginx setup with uwsgi and also as a proxy server listening on port 5000 for flask activity.   

I am attempting to serve media files, for download not streaming. I have been using flask.send_from_directory() and using the appropriate headers to cause down load in a browser and for the most part that works -- the as_attachment header causes a download box and download begins.  I have also written a wrapper around send_file() and attached headers to the response object and finally I have ignored a route and just allowed flask to deal with the static file alone. 

The issue is this.  A media file such as an .mp3 file should be able to be downloaded while playing as is the standard behavior of nginx standalone ( which I tried ) and apache ( which I setup and tried ) .. But with flash (regardless of the headers provided ) an .mp3 file and for that matter, any media file, is streamed to the player.  In other words it is not spun out as fast as bandwidth permits and does not trigger the player to gobble up the data and fill a buffer and start player when sufficient data arrives. What happens is the player thinks it has a ""live broadcast"" -- like an icecast server or similar. 

 Now this is a problem for the application I am building because the idea is to provide low bandwidth audio files for play back in a mobile or other device (say a itunes player or quicktime) -- In this way the file is quickly downloaded and begins playing as soon as enough data is available to meet the players buffer requirement. 

Next I did an experiment where I used the uwsgi server before the nginx and let nginx start the flask application when requested as specified in the uwsgi ini file and the nginx config file.  When I set up the server configuration this way -- nginx WILL serve the file  with the behavior I was expecting -- in other words, the file will be gobbled up by the player and play will begin when enough data is accumulated. 

I have tried all possible headers to cause the flask/nginx flask/eventlet flask/test-server to not stream the file but rather feed out as fast as bandwidth permits.   I believe this is a problem for people wanting to use Flask for purpose of serving media files in a specialized ways.  Having the flask server baby sit the stream leads to ""broken pipe"" problems in the player and the stream is restarted again.  I have also included the 'accept-ranges' = 'bytes' header with no difference.  I have compared the request headers with other download sites providing mp3 files for listening and they are the same -- except that the other sites do not stream the data is downloaded by the player while playing. 

lastly -- Please note that I can cause a download box to open on the browser using the as_attachment =true header .. but this does not affect the behavior with player apps such as quicktime or VLC etc .. 

Is there one or more things I might be overlooking?  Has anyone observed this phenomenon ?  Is there a work around ?  
"
1718,Broken document links.,2016-02-04T17:56:11Z,2016-02-04T17:59:35Z,,,,"http://flask.pocoo.org/docs/flask-docs.pdf
http://flask.pocoo.org/docs/flask-docs.zip

these are broken links. 
"
1717,"nginx upstream check, but the access log is wrong.",2016-02-04T09:29:58Z,2016-02-04T09:49:14Z,,,,"**Some version information**

```
1. Tengine version: Tengine/2.1.2 (nginx/1.6.2)
2.CentOS6.7  python2.6
3.Flask Version: 0.10.1
```

**Nginx configuration file content:**

```
    upstream weibo {
        ip_hash;
        server 127.0.0.1:7076;
        check interval=3000 rise=2 fall=5 timeout=1000 type=http;
        #check_http_expect_alive http_2xx http_3xx ;
        check_http_send ""GET / HTTP/1.0\r\n\r\n"";
    }
    server {
        listen 80;
        client_max_body_size 50M;
        server_name weibo.saintic.com;
        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://weibo;
        }
        location /nstatus {
           check_status;
           access_log off;
        }
    }
```

**My flask app(https://github.com/saintic/ULR/blob/master/ulr.py)**

**Access log error:**

```
127.0.0.1 - - [04/Feb/2016 17:24:54] ""GET / HTTP/1.0"" 302 -
Traceback (most recent call last):
  File ""/usr/lib64/python2.6/SocketServer.py"", line 293, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/usr/lib64/python2.6/SocketServer.py"", line 319, in process_request
    self.finish_request(request, client_address)
  File ""/usr/lib64/python2.6/SocketServer.py"", line 332, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/usr/lib64/python2.6/SocketServer.py"", line 628, in __init__
    self.finish()
  File ""/usr/lib64/python2.6/SocketServer.py"", line 671, in finish
    self.wfile.flush()
  File ""/usr/lib64/python2.6/socket.py"", line 303, in flush
    self._sock.sendall(buffer(data, write_offset, buffer_size))
error: [Errno 32] Broken pipe
```
"
1716,Fix typo,2016-02-03T13:37:55Z,2016-02-04T06:49:09Z,,,,"- Use the compatible way to handle the exception. You can find the
  source code wsgi_app in app.py, and it use the compatible way, so update it
- Fix typo in config.py
- Fix typo in app.py

---

One more question, in the [flask.Flask.run](http://flask.pocoo.org/docs/dev/api/#flask.Flask.run) documentation, it says:

> It is not recommended to use this function for development with automatic reloading as this is badly supported. Instead you should be using the flask command line script’s runserver support.

I guess it should be:

> ...the flask command line script’s run support.

since flask cli has the `run` command not the `runserver` command.
"
1715,Add missing return to g.setdefault,2016-02-02T15:16:16Z,2016-02-02T15:39:21Z,,,,
1714,Lack of documentation on how to serve Flask under a non-root path,2016-02-02T05:37:04Z,2017-05-14T10:26:03Z,docs,,,"If I am not mistaken the docs lack a good description on how to setup Flask to use a different _application root path_. I summarized my current understanding in [this Gist](https://gist.github.com/Larivact/1ee3bad0e53b2e2c4e40).

Also the name of Flask's APPLICATION_ROOT config variable is pretty misleading. One could wrongly assume that it affects routing (stripping away application_root) and `url_for()` (prepending application_root). I do not even get the point of the current `APPLICATION_ROOT` setting because there already is `SESSION_COOKIE_PATH`.
"
1713,Documentation on Localtunnel link is invalid,2016-02-01T22:38:54Z,2016-02-01T22:41:13Z,,,,"The bottom of the [quickstart](http://flask.pocoo.org/docs/0.10/quickstart/#quickstart) page has a link: [Sharing your Localhost Server with Localtunnel](http://flask.pocoo.org/snippets/89/)  to a page with old/outdated information on Localtunnel.  (it is pointing to Localtunnel [here](http://progrium.com/localtunnel/), which doesn't exist).

Localtunnel now appears to be: [here](https://localtunnel.me/) or on github [here](https://github.com/localtunnel/localtunnel), and is installed via `npm`, not `gem`.
"
1712,Wsgi failure,2016-01-30T17:51:42Z,2016-01-30T17:57:25Z,,,,"52.90.119.128 - - [30/Jan/2016 17:51:03] ""POST / HTTP/1.1"" 500 -
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1836, in **call**
    return self.wsgi_app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/home/ubuntu/jarvis/main.py"", line 55, in sms
    txt.append(line.split(None, 1)[0]) # add only first word
"
1711,terminate running port by application in case of exit process,2016-01-30T15:42:49Z,2016-01-30T16:50:33Z,,,,"I have noticed that it would be better to have such a simple tool as decorator in code base to terminate port running by app.

A simple example:

```
from flask import Flask

app = Flask(__name__)

@app.reboot()
@app.route(""/"")
def hello():
    return ""Hello world""

if __name__ == ""__main__"":
    app.run()
```
"
1710,Allow specifying blueprint-local JSON encoder ,2016-01-30T09:33:20Z,2017-04-26T05:06:15Z,"blueprints, json",,,"A user can specify a JSONEncoder on a Flask application, but it would be useful to be able to specify a JSONEncoder on a blueprint as well, so that requests made to that blueprint would receive responses interpreted by the specified JSON encoder.

This is important, for example, in [Flask-Restless](https://github.com/jfinkels/flask-restless), where we would like to transform SQLAlchemy objects into JSON objects at the blueprint level, without modifying the JSON Encoder assigned to the specific Flask application.
"
1709,Test Custom flask cli commands,2016-01-28T18:32:27Z,2016-01-28T20:13:59Z,,,,"I have a number of custom commands that I have created

``` python
@app.cli.command()
@click.option('-c', '--with-coverage', is_flag=True, help=""Turn on coverage reporting"")
@click.option('-d', '--debug', is_flag=True, help=""Enter pdb on test fail or error"")
@click.option('-f', '--failfast', is_flag=True, help=""Stop the test run after the first error or failure"")
@click.option('-v', '--verbose', is_flag=True, help=""Print test case names and statuses"")
def tests(with_coverage, debug, failfast, verbose):
    """"""Testing operation commands""""""
    options = list()
    options.append(sys.argv[0])

    if with_coverage:
        options.append('-C')
    if debug:
        options.append('-D')
    if failfast:
        options.append('-F')
    if verbose:
        options.append('-v')

    defaults = ['--coverage={}'.format(app.config['PROJECT_DIR']),
                '--coverage-config={}'.format(app.config['COVERAGE_CONFIG']),
                '--coverage-report=term-missing']
    options.extend(defaults)
    discover(argv=options)
```

Click provides a CliRunner class to help testing Click commands. Trying to test I get NoAppException with this message

```
Could not locate Flask application. You did not provide FLASK_APP or the --app parameter
```

Here is the test snippet

``` python
from app.commands import tests
from click.testing import CliRunner

runner = CliRunner()

Class TestCommands(unittest.TestCase):
    def test_tests(self):
        result = runner.invoke(tests)
        self.assertTrue(result.exit_code == 0) # fails
```
"
1708,I want to know is there a way to share data between multiple request in one application at server side?,2016-01-28T12:48:38Z,2016-01-28T12:50:18Z,,,,
1707,TypeError: 'list' object is not callable,2016-01-28T03:30:35Z,2016-01-28T07:00:29Z,,TypeError,TypeError: 'list' object is not callable,"``` python
Exception on / [GET] [/usr/lib/python2.7/site-packages/flask/app.py:1423]
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/lib/python2.7/site-packages/flask/app.py"", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File ""/usr/lib/python2.7/site-packages/flask/app.py"", line 1577, in make_response
    rv = self.response_class.force_type(rv, request.environ)
  File ""/usr/lib/python2.7/site-packages/werkzeug/wrappers.py"", line 847, in force_type
    response = BaseResponse(*_run_wsgi_app(response, environ))
  File ""/usr/lib/python2.7/site-packages/werkzeug/test.py"", line 871, in run_wsgi_app
    app_rv = app(environ, start_response)
TypeError: 'list' object is not callable
```

``` python
@app.route('/')
@cache.cached(timeout=30)
def site_index():
    _cates, cates = app.get_cates_home(), []
    if not _cates:
        return render_template('maintain.htm')
    route = routes['index']
    featured = app.get_news_by_priority(8, route['featured'])
    featured_ids = [fea['id'] for fea in featured]
    hotnews = app.get_news_hot(route['new'], featured_ids)
    popular = app.get_news_by_priority(7, route['popular'])
    result = {'pagetitle': app.appname,
              'featured': featured,
              'hot': hotnews,
              'popular': popular,
              'cates': cates}
    return render_template('index.htm', **result)
```

Why error. 2 my return function too return with function render_template.
Im' runing flask with uwsgi and 8 process. Error 1% request has this error.
"
1706,Separate Config to its own package,2016-01-27T21:51:01Z,2016-04-05T16:57:01Z,,,,"Hello,
I'd like to propose splitting off the config.py module (encompassing the Config application and its various helpers) into it's own standalone Python module, and adding it as a dependency.

Reasoning:
1. It's a great standalone piece of functionality! People would find this useful on its own and be able to contribute / maintain it separately as an open source Python package, with all the benefits that has (e.g test coverage, functionality such as support for more config types etc etc - things that come with more usage and visibility of the project)
2. Specific real-world use case in mind which I ran into - In a scenario of having a SOA architecture comprised of many micro-services, and among  those services having a mix of Flask webapps (e.g APIs) and daemons (e.g services that have no web interface but run some periodic logic), it would be great to be able to use the same configuration mechanism to configure both types. Flask would only used for the API (webapp) services, and it feels excessive to need to add it as a requirement only to be able to extract its flask.config module...
"
1705,Reload is not active for all my running Flask instances in debug mode,2016-01-26T09:10:14Z,2016-05-22T17:11:43Z,,,,"I need to run several flask apps at the same time in my dev environment. 
All apps run in a Vagrant box on Debian 8 with Flaks 0.10.1

When I start in a shell the first flask app with debug and reload enabled and I touch a file on the project, all works fine. The flask app reload and I see the changes.
When I start another flask app in a second shell in debug mode at the same time, the app won’t reload.

In all cases, only the first app reload.

When I quit the app that won’t reload, I get this error.

```
Exception in thread Thread-2 (most likely raised during interpreter shutdown):
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
  File ""/home/politis/frontend.dev/local/lib/python2.7/site-packages/watchdog/observers/api.py"", line 200, in run
<type 'exceptions.AttributeError'>: 'NoneType' object has no attribute 'Empty'
Exception in thread Thread-1 (most likely raised during interpreter shutdown):
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
  File ""/usr/lib/python2.7/threading.py"", line 763, in run
  File ""/home/politis/frontend.dev/local/lib/python2.7/site-packages/werkzeug/serving.py"", line 657, in inner
  File ""/home/politis/frontend.dev/local/lib/python2.7/site-packages/werkzeug/serving.py"", line 497, in serve_forever
  File ""/usr/lib/python2.7/SocketServer.py"", line 241, in serve_forever
  File ""/usr/lib/python2.7/threading.py"", line 586, in set
  File ""/usr/lib/python2.7/threading.py"", line 407, in notifyAll
```
"
1704,Remove old version added and changed tags,2016-01-26T07:10:11Z,2017-05-05T01:42:37Z,docs,,,"Some of these lists are getting a bit long and irrelevant.  We should remove everything that wasn't added or changed in 1.0 for the 1.0 release.  This will reset the baseline that things will be added or changed from in the future.
"
1703,Cleanup jsonify() function,2016-01-25T23:02:46Z,2016-01-26T06:52:09Z,,,,"Cleanup some leftover stuff from #1671. PEP8 spacing, args/kwargs don't need to be converted to list/dict, and Sphinx formatting.
"
1702,Fix PEP8 issues and enforce PEP8 via pytest-pep8 (i.e. also during CI),2016-01-25T19:36:52Z,2017-04-13T22:27:01Z,,,,"E301 (no empty line before function/class) is disabled for files where having compact code (e.g. non-decorator based properties) makes sense.
"
1701,Is it needed to add a decorator like Flask.on_app_start ?,2016-01-25T13:50:17Z,2016-01-25T15:02:30Z,,,,"There is a similar question at http://stackoverflow.com/questions/25504149/why-does-running-the-flask-dev-server-run-itself-twice.
But i do not think it is my case. I just save all 
codes before run the server, but it still goes twice !
I do not want to use Flask.before_first_request, for i want it run
on startup , not wailt util a request comes in.

I write a small app with flask and celery.
I add some periodic tasks and they work well.
And I want a task run when the app starts, 
but I find celery receives it and run it twice,
why?

my `config.py` is

```
BROKER_URL = 'redis://localhost:6379/0'
BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 3600}  \# 1 hour.
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
BROKER_TRANSPORT_OPTIONS = {'fanout_prefix': True}
CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Shanghai'
CELERY_ENABLE_UTC = True

CELERYBEAT_SCHEDULE = {
    'delcookiefiles-every-1-hour': {
        'task': 'TiebaTools.tasks.del_cookiefile',
        'schedule': timedelta(hours=1),
    },
    'daily_sign': {
        'task': 'TiebaTools.tasks.daily_sign',
        'schedule': crontab(minute=30, hour=0),
    },
}
...
```

my `proj/TiebaTools/__init__.py` is

```
...
app = Flask(__name__, instance_relative_config=True)
app.config.from_object('config')
app.config.from_pyfile('config.py')

\# integrae sqlalchemy
db.init_app(app)

\# integrae Celery
cel.conf.update(app.config)
TaskBase = cel.Task


class ContextTask(TaskBase):
    abstract = True

    def __call__(self, *args, **kwargs):
        with app.app_context():
            return TaskBase.__call__(self, *args, **kwargs)

cel.Task = ContextTask
...
```

my `proj/run.py` is

```
from TiebaTools import app, db
from TiebaTools.tasks import daily_sign
with app.app_context():
    db.create_all()

daily_sign.delay()
app.run()
```

I run the app as below

```
redis-server (in one terminal)
venv/bin/celery worker -B -A TiebaTools.cel --loglevel=info (in second terminal)
venv/bin/python run.py (in third terminal)
```

after first two commands execute, all go well, no task received.
   But after the third command executes, message as below comes out in the second terminal.

```
[2016-01-24 21:03:43,989: INFO/MainProcess] Received task: TiebaTools.tasks.daily_sign[7f229395-b403-4d4b-9d6f-a009b603f9f6]
[2016-01-24 21:03:43,991: WARNING/Worker-6] 
DEBUG in tasks [/home/dyh/svn/Tieba-Tools/TiebaTools/tasks.py:99]:
update_all_tblist task starts !

[2016-01-24 21:03:43,991: DEBUG/Worker-6] update_all_tblist task starts !
[2016-01-24 21:03:44,013: INFO/MainProcess] Task TiebaTools.tasks.daily_sign[7f229395-b403-4d4b-9d6f-a009b603f9f6] succeeded in 0.0229967209888855s: '{""result"": ""none TiebaList to sign !""}'
[2016-01-24 21:03:44,346: INFO/MainProcess] Received task: TiebaTools.tasks.daily_sign[fca044d1-29d8-4910-b71b-a7fc44d8a9a1]
[2016-01-24 21:03:44,347: WARNING/Worker-3] 
DEBUG in tasks [/home/dyh/svn/Tieba-Tools/TiebaTools/tasks.py:99]:
update_all_tblist task starts !

[2016-01-24 21:03:44,347: DEBUG/Worker-3] update_all_tblist task starts !
[2016-01-24 21:03:44,368: INFO/MainProcess] Task TiebaTools.tasks.daily_sign[fca044d1-29d8-4910-b71b-a7fc44d8a9a1] succeeded in 0.02192131800984498s: '{""result"": ""none TiebaList to sign !""}'
```

So, what's wrong? Finally I set DEBUG=False to resolve it . But how can I debug
or is it a bug , or is it needed to add a decorator like Flask.on_app_start ?
"
1700,"TypeError: object.__new__(Markup) is not safe, use unicode.__new__() in specific cases",2016-01-24T15:06:29Z,2016-01-25T15:04:16Z,,"`TypeError, AssertionError, TypeError","`TypeError: object.__new__(Markup) is not safe, use unicode.__new__()`, AssertionError: , TypeError: object.__new__(Markup) is not safe, use unicode.__new__()","Hi,

I am currently struggling with a pretty weird bug. It only appears in specific situations. 

The whole code to reproduce it can be found in https://github.com/voidus/markupsafe_sniffer_issue or attached as 
[markupsafe_sniffer_issue.zip](https://github.com/mitsuhiko/markupsafe/files/102377/markupsafe_sniffer_issue.zip)

There has been an issue somewhat like that before but I can't find any encoding related problems.
https://github.com/mitsuhiko/markupsafe/issues/19

When I run a test via [sniffer](https://github.com/jeffh/sniffer), I get the following error every time except the first run. (Re-run can be triggered by touching e.g the application.py file)
`TypeError: object.__new__(Markup) is not safe, use unicode.__new__()`

I tried to debug that using pdb, but I cannot find any differences between runs. I also tried to minimize the problem by using jinja directly (see the second test), but that doesn't trigger the bug. As removing flask removes the bug, I'm posting this here. I have actually no Idea where the real problem is.

I'll also open an issue over at markupsafe linking here, so that the compined powers may find out what's wrong :)

Full Stack trace:

```
======================================================================
FAIL: test_application.test_application
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/<redacted>/env/lib/python2.7/site-packages/nose/case.py"", line 197, in runTest
    self.test(*self.arg)
  File ""/<redacted>/tests/test_application.py"", line 8, in test_application
    assert response.status_code == 200
AssertionError: 
-------------------- >> begin captured logging << --------------------
application: ERROR: Exception on / [GET]
Traceback (most recent call last):
  File ""/<redacted>/env/lib/python2.7/site-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/<redacted>/env/lib/python2.7/site-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/<redacted>/env/lib/python2.7/site-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/<redacted>/env/lib/python2.7/site-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/<redacted>/env/lib/python2.7/site-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/<redacted>/application.py"", line 7, in index
    return render_template('t.html', c=""baz"")
  File ""/<redacted>/env/lib/python2.7/site-packages/flask/templating.py"", line 128, in render_template
    context, ctx.app)
  File ""/<redacted>/env/lib/python2.7/site-packages/flask/templating.py"", line 110, in _render
    rv = template.render(context)
  File ""/<redacted>/env/lib/python2.7/site-packages/jinja2/environment.py"", line 989, in render
    return self.environment.handle_exception(exc_info, True)
  File ""/<redacted>/env/lib/python2.7/site-packages/jinja2/environment.py"", line 754, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/<redacted>/templates/t.html"", line 1, in top-level template code
    <script src=""{{c}}""></script>
  File ""/<redacted>/env/src/markupsafe/markupsafe/__init__.py"", line 75, in __new__
    return text_type.__new__(cls, base)
TypeError: object.__new__(Markup) is not safe, use unicode.__new__()
--------------------- >> end captured logging << ---------------------
```
"
1699,Traceback returns KeyError: WERKZEUG,2016-01-24T04:32:52Z,2016-01-25T19:07:34Z,,,,"When I send an item to my server I get this error:

```
Traceback (most recent call last):
  File ""C:\Python27\lib\site-packages\werkzeug\serving.py"", line 648, in inner
    fd = int(os.environ['WERKZEUG_SERVER_FD'])
   File ""C:\Python27\lib\os.py"", line 425, in __getitem__
    return self.data[key.upper()]
 KeyError: 'WERKZEUG_SERVER_FD'
- - [23/Jan/2016 22:19:33] ""POST / HTTP/1.1"" 500 -
```

Can't seem to figure out why. I am sending the item to the server as a base64. I should note that I am sending an image as a base64
"
1698,Use indexation instead of slicing for getting the first element.,2016-01-20T08:41:43Z,2016-01-20T09:29:33Z,,,,"It's less confusing and it's slightly faster:

``` sh
$ python2.7 -m timeit -s 'foo=""a""*1024' 'foo[:1]'
10000000 loops, best of 3: 0.0352 usec per loop
$ python2.7 -m timeit -s 'foo=""a""*1024' 'foo[0]'
10000000 loops, best of 3: 0.0291 usec per loop
```

``` sh
$ python3.4 -m timeit -s 'foo=""a""*1024' 'foo[:1]'
10000000 loops, best of 3: 0.0473 usec per loop
$ python3.4 -m timeit -s 'foo=""a""*1024' 'foo[0]'
10000000 loops, best of 3: 0.0302 usec per loop
```
"
1697,Unicode with request.path & url_for('auth.index'),2016-01-19T12:18:41Z,2016-01-19T13:37:17Z,,,,"Commonly i do a check similar to

``` python
if request.path != url_for('auth.index'):


```

The issue with this on Python3.5 right now is that request.path is unicode while url_for is a string.

``` python
print(request.path, url_for('auth.index'))
>>> (u'/auth/', '/auth/')
```

Is this intended or is there a reason for it? Could we not have both return unicode?
"
1696,Remove copyright year,2016-01-16T01:50:13Z,2016-01-25T15:48:07Z,,,,"As per the discussion on 33534bb4a9937e6faba5ec
"
1695,Built-in support for reverse proxying on a sub folder,2016-01-14T15:27:11Z,2016-01-26T17:08:35Z,,,,"Hello,

It's annoying to have to reimplement [this snippet](http://flask.pocoo.org/snippets/35/) for every web app in order for `url_for` to work properly behind an nginx reverse proxy mounted on a sub folder of the host's root URL.

Could the not the functionality not be built into Flask by default?

Sorry for opening an issue instead of a PR, I don't think I have the expertise to modify Flask's code base.

Regards,

Eric.
"
1694,Flask.teardown_request always passes an exception on the first request,2016-01-14T14:09:37Z,2016-09-26T17:09:19Z,,KeyError,KeyError: 'WERKZEUG_SERVER_FD',"If a function is set with the `@app.teardown_request` decorator (assuming your Flask instance name is `app`), it _always_ gets passed an exception for the very first request to the server. This exception is a `KeyError` from Werkzeug (even though that particular error is handled in Werkzeug's code).

Try copying and running the following bare-bones flask app:

``` python
#!/usr/bin/env python
# -*- coding: utf-8 -*-

from flask import Flask

import sys
import traceback

app = Flask(__name__)

@app.teardown_request
def teardown_request(exception):
    if exception:
        print ""teardown_request received an exception:""
        traceback.print_exception(*sys.exc_info())
    else:
        print ""Request went through without passing an exception.""

@app.route(""/"")
def works_but_not_really():
    return ""This gets returned, so this function finishes.""

if __name__ == '__main__':
    app.run('localhost', 5000)
```

Running this and performing two GET requests in a row to it results in the following output:

```
 * Running on http://localhost:5000/ (Press CTRL+C to quit)
teardown_request received an exception:
Traceback (most recent call last):
  File ""C:\Python27\lib\site-packages\werkzeug\serving.py"", line 647, in inner
    fd = int(os.environ['WERKZEUG_SERVER_FD'])
  File ""C:\Python27\lib\os.py"", line 425, in __getitem__
    return self.data[key.upper()]
KeyError: 'WERKZEUG_SERVER_FD'
127.0.0.1 - - [14/Jan/2016 14:57:30] ""GET / HTTP/1.1"" 200 -
Request went through without passing an exception.
127.0.0.1 - - [14/Jan/2016 15:03:32] ""GET / HTTP/1.1"" 200 -
```

Not only GET requests cause this - at the very least a POST will do the same, and I assume all other types will too. This is a problem in case the teardown request performs a database rollback on receiving an exception - because it means any changes the first request may make to the database are silently (since the page is still returned just fine) ignored.
"
1693,Flask resumes upload on restart,2016-01-13T11:19:14Z,2016-01-24T17:26:38Z,,,,"This may not be an Issue / Bug. But may be due to my newness to Flask & lack of understanding.

I'm running Flask on a Raspberry Pi (Raspbarian OS). There's PUT path set up to upload files to a certain directory.

During one of my test runs, I killed Flask using Ctrl-C.

Thereafter:
1) Start python program, which starts Flask - no issues
2) Calls the PUT Path to upload 3 files - no issues
3) After the 3 files are uploaded (from (2)), Flask attempts to resume on a file that was perhaps in progress when I first Ctrl-C the program. The file `TEST_0059.MP4` in this case

This is the immediate error message - occurs **everytime** after files are uploaded

```
<path>/lib/python5.4/site-packages/werkzeug/filesystem.py:63: BrokenFilesystemWarning: Detected a misconfigured UNIX filesystem: Will use UTF-8 as filesystem encoding instead of 'ascii'
  BrokenFilesystemWarning)
192.168.1.8 - - [13/Jan/2016 22:03:50] ""PUT /uploadMedia/TEST_0059.MP4 HTTP/1.1"" 500 -
Traceback (most recent call last):
  File ""<path>/lib/python3.4/site-packages/flask/app.py"", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File ""<path>/lib/python3.4/site-packages/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""<path>/lib/python3.4/site-packages/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""<path>/lib/python3.4/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""<path>/lib/python3.4/site-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""<path>/lib/python3.4/site-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""<path>/lib/python3.4/site-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""<path>/lib/python3.4/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""<path>/lib/python3.4/site-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""<path>/lib/python3.4/site-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""<path>/cps_media_services.py"", line 59, in to_hub_via_wifi
    f.write(request.data)
  File ""<path>/lib/python3.4/site-packages/werkzeug/local.py"", line 342, in __getattr__
    return getattr(self._get_current_object(), name)
  File ""<path>/lib/python3.4/site-packages/werkzeug/utils.py"", line 73, in __get__
    value = self.func(obj)
  File ""<path>/lib/python3.4/site-packages/werkzeug/wrappers.py"", line 446, in data
    return self.get_data(parse_form_data=True)
  File ""<path>/lib/python3.4/site-packages/werkzeug/wrappers.py"", line 477, in get_data
    rv = self.stream.read()
  File ""<path>/lib/python3.4/site-packages/werkzeug/wsgi.py"", line 1003, in read
    read = self._read(to_read)
MemoryError
```

**Questions:**
- What's telling Flask to resume the PUT operation that I killed earlier?
- Doesn't restarting Flask clear any previous states it had?
"
1692,feedback.flask.pocoo.org 404 page,2016-01-13T02:04:01Z,2016-01-13T03:00:28Z,,,,"In http://flask.pocoo.org, ""feedback website"" link is 404 page. 

http://feedback.flask.pocoo.org/
"
1691,get_send_file_max_age doesn't work in blueprint,2016-01-13T00:58:32Z,2016-06-03T07:11:10Z,blueprints,,,"I have a small Flask program which serves static file by itself instead of nginx. I want to change cache time for png file by get_send_max_age function. It works in Flask class, but it doesn't work if I implement it in blueprint.

Python 3.5
Flask 0.10.1
Werkzeug 0.11.2

Flask implementation

``` python
class MyFlask(Flask):
    def get_send_file_max_age(self,name):
        print(""my function works"")
        print(name)
        if name.lower().endswith('.png'):
            return 0
        else:
            return Flask.get_send_file_max_age(self,name)
app = MyFlask(__name__)
```

Blueprint implementation

``` python
class MyBlueprint(Blueprint):
    def get_send_file_max_age(self,name):
        print(""my function works"")
        print(name)
        if name.lower().endswith('.png'):
            return 0
        else:
            return Blueprint.get_send_file_max_age(self,name)
test = MyBlueprint('test',__name__)
```
"
1690,Make it easier to get a response body string in python3,2016-01-12T20:45:48Z,2016-01-12T20:47:33Z,,,,"In py3, `response.data` returns a byte value, meaning you can't do `if 'foo' in response.data` in tests, for example.

Currently, the best way to get the response body as a string seems to be `response.get_data(as_string=True)`, which is a bit tedious.

Maybe add a `response.text` property? That's what the requests package seems to have done.
"
1689,Some searches involving “flash” on the Flask website throws a 500 error,2016-01-10T17:56:45Z,2016-01-10T17:59:37Z,,,,"If I try to search for “flash”, I get a 500 error:

http://flask.pocoo.org/search/?q=flash

I’ve found a few other searches related to flash that seem to fail; they may or may not be related:
- Leading/trailing whitespace, e.g. [“___flash”](http://flask.pocoo.org/search/?q=+++flash) or [“flash___”](http://flask.pocoo.org/search/?q=flash+++)
- Leading/trailing words with one or three characters – “a flash”, “big flash”, “flash a” and “flash big” all fail.
- “flashe” and “flashes” both fail – appending other characters seems okay.

And some searches that work:
- Prepending characters to “flash” – so “aflash”, “abflash”, “abcflash”, and so on seem to work.
- Leading/trailing words with other numbers of characters – “hi flash”, “flash ab”, “flash abcd”, “high flash”, “highest flash” all work.

Repro’d in Safari and Chrome on OS X. I’m coming from a UK-based ISP, if that’s significant.

I was trying to search for the [pages on message flashing](http://flask.pocoo.org/docs/0.10/api/#message-flashing). I couldn’t find a pattern to rejected searches, except that they all involve the word “flash”.
"
1688,Remove 'flask' from etags to obscure server technologies,2016-01-10T10:45:16Z,2016-01-26T07:02:48Z,,,,"Remove 'flask' from etags to obscure server technologies.
When using `flask.send_from_directory`
The etag headers contain `flask` prefix. I removed it to obscure the use of flask.
"
1687,WERKZEUG_DEBUG_PIN,2016-01-09T19:52:28Z,2016-01-09T20:07:46Z,,,,"Werkzeug 0.11.0 implements WERKZEUG_DEBUG_PIN.

imho, the problem is this code:

```
class Server(Command):
    """"""
    Runs the Flask development server i.e. app.run()

    :param host: server host
    :param port: server port
    :param use_debugger: if False, will no longer use Werkzeug debugger.
                         This can be overriden in the command line
                         by passing the **-d** flag.
    :param use_reloader: if False, will no longer use auto-reloader.
                         This can be overriden in the command line by
                         passing the **-r** flag.
    :param threaded: should the process handle each request in a separate
                     thread?
    :param processes: number of processes to spawn
    :param passthrough_errors: disable the error catching. This means that the server will die on errors but it can be useful to hook debuggers in (pdb etc.)
    :param options: :func:`werkzeug.run_simple` options.
    """"""

    help = description = 'Runs the Flask development server i.e. app.run()'

    def __init__(self, host='127.0.0.1', port=5000, use_debugger=True,
                 use_reloader=True, threaded=False, processes=1,
                 passthrough_errors=False, **options):

        self.port = port
        self.host = host
        self.use_debugger = use_debugger
        self.use_reloader = use_reloader
        self.server_options = options
        self.threaded = threaded
        self.processes = processes
        self.passthrough_errors = passthrough_errors
```

... where the defaults for use_debugger and use_reloader should be False and passing the -d,-r flags should turn the debugger and auto reloader on..
"
1686,400,2016-01-07T17:40:05Z,2016-01-07T17:43:13Z,,,,"Hello!
When I login, I get the 400(Bad request) error. I don't know how to solve this problem. Can you help me? Thank you.
"
1685,HTML checker complains about template,2016-01-05T15:28:21Z,2016-01-05T15:43:59Z,,,,"When I write the code on the layout.html, there is something wrong: 
<img width=""1280"" alt=""screen shot 2016-01-05 at 10 28 07 am"" src=""https://cloud.githubusercontent.com/assets/5813472/12119022/233ca3f2-b397-11e5-901c-d76373bafa72.png"">
"
1684,Clarified the docstring in method Flask.preprocess_request.,2016-01-04T23:13:13Z,2017-04-25T19:06:04Z,docs,,,"The doc now clearly states that the method invokes two set of hook
functions, and how these are filtered before execution.
"
1683,No output from hello world,2016-01-04T18:56:25Z,2016-01-04T18:57:13Z,,,,
1682,Using SSL with Flask and eventlet,2016-01-04T15:26:45Z,2016-01-04T15:28:39Z,,,,
1681,AttributeError: module 'http.client' has no attribute 'get',2016-01-03T14:39:44Z,2016-01-26T19:58:00Z,,,,"``` python
Exception happened during processing of request from ('127.0.0.1', 52838)
Traceback (most recent call last):
  File ""/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/socketserver.py"", line 318, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/socketserver.py"", line 344, in process_request
    self.finish_request(request, client_address)
  File ""/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/socketserver.py"", line 357, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/socketserver.py"", line 684, in __init__
    self.handle()
  File ""/Users/lxh/IdeaProjects/services/lib/python3.5/site-packages/werkzeug/serving.py"", line 217, in handle
    rv = BaseHTTPRequestHandler.handle(self)
  File ""/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/server.py"", line 414, in handle
    self.handle_one_request()
  File ""/Users/lxh/IdeaProjects/services/lib/python3.5/site-packages/werkzeug/serving.py"", line 251, in handle_one_request
    elif self.parse_request():
  File ""/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/server.py"", line 340, in parse_request
    conntype = self.headers.get('Connection', """")
```
"
1680,Flask isn't doctestable,2016-01-02T21:57:37Z,2016-04-23T12:20:14Z,,RuntimeError,RuntimeError: working outside of request context,"```
lasse@lssteady ~/tmp/pytesttest % cat asd.py 
from flask import request

def addstuff(a,b):
    """"""
    Adds stuff:

    >>> addstuff(4,5)
    9

    See?
    """"""
    return a+b

lasse@lssteady ~/tmp/pytesttest % python3   
Python 3.5.1 (default, Dec  7 2015, 12:58:09) 
[GCC 5.2.0] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import asd
>>> import doctest
>>> doctest.testmod(asd)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/usr/lib/python3.5/doctest.py"", line 1940, in testmod
    for test in finder.find(m, name, globs=globs, extraglobs=extraglobs):
  File ""/usr/lib/python3.5/doctest.py"", line 923, in find
    self._find(tests, obj, name, module, source_lines, globs, {})
  File ""/usr/lib/python3.5/doctest.py"", line 982, in _find
    if ((inspect.isroutine(inspect.unwrap(val))
  File ""/usr/lib/python3.5/inspect.py"", line 471, in unwrap
    while _is_wrapper(func):
  File ""/usr/lib/python3.5/inspect.py"", line 465, in _is_wrapper
    return hasattr(f, '__wrapped__')
  File ""/usr/lib/python3.5/site-packages/werkzeug/local.py"", line 343, in __getattr__
    return getattr(self._get_current_object(), name)
  File ""/usr/lib/python3.5/site-packages/werkzeug/local.py"", line 302, in _get_current_object
    return self.__local()
  File ""/usr/lib/python3.5/site-packages/flask/globals.py"", line 20, in _lookup_req_object
    raise RuntimeError('working outside of request context')
RuntimeError: working outside of request context
>>> 
```

Anyone any idea what happens there? I'd love to doctest my Flask application since it's especially awesome to document endpoints.
"
1679,Werkzeug should not block propagated exceptions from Flask,2016-01-02T19:34:01Z,2016-01-26T06:17:04Z,,,,"Fixes #1674.

By having Werkzeug always configured to let exceptions through we achieve the correct behavior for Flask. If Flask is configured to propagate exceptions (implicitly or explicitly, doesn't matter), then Werkzeug will get these exceptions and pass them through as well. If Flask is configured to not propagate exceptions, then Werkzeug will never see them, so no harm done if it is configured to pass them.

It looks like there is no testing for the new cli, so I have only added a test for the `app.run()` way of starting a server.
"
1678,Refactored method preprocess_request in Flask.,2016-01-02T17:33:11Z,2016-01-04T02:41:54Z,,,,"Code duplication was eliminated. The docstring was also improved.
"
1677,Download documentation as PDF link is broken,2016-01-02T08:43:40Z,2016-01-02T09:53:12Z,,,,"The link http://flask.pocoo.org/docs/flask-docs.pdf throws an error 404 page
"
1676,Refactored method Flask.make_response to improve readability,2016-01-02T02:58:16Z,2017-04-25T15:46:23Z,,,,"The method now looks at the type of the object returned from the view function, and returns a `self.response_class` object based on that type.

The docstring for the method has also been improved and contains a more
detailed explanation for what can be returned from a view function.

Also refactored the test for response creation.
"
1675,Happy New Year 2016,2016-01-01T21:45:46Z,2016-01-01T22:48:58Z,,,,
1674,"When using an external debugger, exceptions are not properly propagated",2016-01-01T01:27:07Z,2016-01-26T06:17:04Z,,,,"In trying to set up a small Flask application to work with an external debugger, I noticed that the way exceptions are handled vs. propagated isn't working as documented in the [Working with Debuggers](http://flask.pocoo.org/docs/0.10/errorhandling/#working-with-debuggers) section of the documentation.

The documentation specifies that to use an external debugger you have to play with the `debug`, `use_debugger` and `use_reloader` settings. In the following table I show all possible combinations of `debug` and `use_debugger` and what the current behavior is (Note that I'm assuming `use_reloader` is always set to `False` for this discussion, as this setting is not part of the problem):

```
| debug | use_debugger | Who catches exceptions | Correct behavior?               |
+-------+--------------+------------------------+---------------------------------+
| True  | True         | Werkzeug's debugger    | Yes                             |
| False | True         | Flask, returns 500     | Yes (I think?)                  |
| True  | False        | Werkzeug's WSGI server | No, exceptions should propagate |
| False | False        | Flask, returns 500     | Yes                             |
```

The appropriate configuration for using an external debugger is the one shown in the 3rd row of the above table, but note that with this configuration, exceptions are not propagated all the way up and never reach an external debugger. With this configuration Flask does the right thing and reraises the exception, but the Werkzeug WSGI server then catches it and handles it by logging the stack trace and moving on, because it was not told otherwise.

For this set up to work as documented, Werkzeug's server should have `passthrough_errors` set to `True`. If I add this setting to `app.run()` then exceptions are allowed to reach an external debugger.

My impression is that the value of the `PROPAGATE_EXCEPTIONS` configuration item should be synchronized with Werkzeug's `passthrough_errors`, so that Flask and Werkzeug consistently handle or reraise exceptions.

I'm happy to submit a pull request with the fix (which is quite simple), if you accept this as a valid issue. Please let me know what you think.
"
1673,Update 2016 in LICENSE,2015-12-31T15:52:01Z,2015-12-31T16:25:41Z,,,,
1672,Happy New Year 2016,2015-12-31T01:12:36Z,2016-01-01T22:49:59Z,,,,"Hi.
It's me(https://github.com/mitsuhiko/flask/pull/1303) again.

Happy New Year~ :)
"
1671,Add support for serializing top-level arrays to JSON,2015-12-30T11:32:53Z,2016-01-25T15:16:52Z,,,,"Major discussion of the issue is in #248. 

I'm tired of working around it, so just like to get it fixed. 

This solution is similar to #1402 & #1209 with a few changes:
- I found it unexpected that in #1402 to convert a python list to a top level array you had to pass `jsonify(*l)`. I changed it so that both `jsonify(1,2,3)` and `jsonify([1,2,3])` serialize to `[1,2,3]` as I think that's the more intuitive behavior.
- Per the discussion in #1209 & #248, I didn't create a separate config variable to modify this behavior. 

I know it'd be nice to incorporate a fix for #1443 in here as well, but I don't fully understand the issue there. So let's get this merged, and then tackle that issue in a followup PR.

Fix #170, #248, #510, #673, #1177 and check one of the boxes on #1182 
"
1670,Delete superfluous branches from the repo?,2015-12-30T09:38:11Z,2016-04-08T19:57:21Z,,,,"There's several branches on this repo that are superfluous and should probably be deleted because they contain no additional commits and haven't been worked on in years. 

For example:
- https://github.com/mitsuhiko/flask/tree/json-sessions
- https://github.com/mitsuhiko/flask/tree/flask_deployment_docs
- https://github.com/mitsuhiko/flask/tree/appdispatch-docs
"
1669,Update `tox` installation instructions to point to PyPI,2015-12-30T09:04:58Z,2016-01-25T19:27:24Z,,,,"No longer need to grab `tox` from master
"
1668,Stream download chunked not working?,2015-12-28T22:30:34Z,2016-01-04T18:53:10Z,,,,"Hello, i use requests to send large file like that:

``` python
def gen():
    with open(localpath, 'rb') as f:
        while True:
            print 'data'
            data = f.read(1024)
            if not data:
                break
            yield data
r = self.session.post(url, data=gen(), allow_redirects=False, params=params)
```

On the Flask side i get that:

``` python
with open(ftmp, 'ab') as handle:
    handle.write(request.stream.read())
```

But no content is writed and i get response 400.

This is my request headers:

> Transfer-Encoding: chunked
> Content-Length:
> User-Agent: python-requests/2.8.1
> Connection: keep-alive
> Host: 127.0.0.1:5000
> Accept: _/_
> Content-Type:
> Accept-Encoding: gzip, deflate
"
1667,Flask framework not support html5 video label on safari and iOS devices,2015-12-28T11:20:19Z,2015-12-29T00:05:04Z,,,,"how to solve Flask framework not support html5 video label on safari and iOS7、8、9 devices? The video can play on chrome &android.
eg:
https://github.com/mitsuhiko/flask/issues/712
the article have not solution.
"
1666,"Fixed mistake in CONTRIBUTING.rst file, regarding pip install.",2015-12-27T02:32:31Z,2015-12-27T18:42:46Z,,,,"Changed  'pip install --editable .' to 'pip install --editable flask', which works. Also added an explanatory comment, since as a beginner to pip I found this confusing.
"
1665,When I run 'pip install Flask' in Ubuntu server I got these info,2015-12-24T08:26:30Z,2015-12-24T08:28:16Z,,,,"error: could not create '/usr/local/lib/python2.7/dist-packages/flask': Permission denied

---

Cleaning up...
Command /usr/bin/python -c ""import setuptools, tokenize;**file**='/tmp/pip_build_habit/Flask/setup.py';exec(compile(getattr(tokenize, 'open', open)(**file**).read().replace('\r\n', '\n'), **file**, 'exec'))"" install --record /tmp/pip-Dy8fke-record/install-record.txt --single-version-externally-managed --compile failed with error code 1 in /tmp/pip_build_habit/Flask
Storing debug log for failure in /home/habit/.pip/pip.log
"
1664,OPTIONS default behavior not compatible with Angularjs,2015-12-23T16:28:00Z,2015-12-23T20:21:10Z,,,,"Hi

When calling a flask webserver from angularjs, you get `method not allowed` and `content-type not allowed` errors. This is because the flask OPTIONS response does not specify `Access-Control-Allow-Headers` and `Access-Control-Allow-Methods` by default.

This is fixed by following code fragment:

```
@app.after_request
def apply_caching(response):
    response.headers['Access-Control-Allow-Headers'] = 'Content-Type'
    response.headers['Access-Control-Allow-Methods'] = 'GET,PUT'
    return response
```

Is the exclusion of these headers intentional or is this a bug? I think a lot of people call Flask from angularjs, so supporting these headers by default might be good for adoption and ease of use?

Kind regards
"
1663,External url scheme is kept accross multiple url_for,2015-12-23T12:04:46Z,2016-08-11T04:33:13Z,,,,"Consider this test case:

``` python
from flask import Flask, url_for
app = Flask(__name__)


@app.route('/some/route')
def some_route():
    return 'Some route'


@app.route('/some/websocket')
def some_websocket():
    return 'Some websocket'


@app.route('/')
def test_case():
    return '<br><br>'.join((
        'some_route url:<br> %s' % url_for('some_route', _external=True),
        'some_websocket url:<br> %s' % url_for('some_websocket', _external=True, _scheme='ws'),
        'this test case url:<br> %s' % url_for('test_case', _external=True),
    ))

if __name__ == '__main__':
    app.config['SERVER_NAME'] = 'myserver.l:5000'
    app.run(debug=True)
```

Accessing http://myserver.l:5000/ gives:

```
some_route url:
http://myserver.l:5000/some/route

some_websocket url:
ws://myserver.l:5000/some/websocket

this test case url:
ws://myserver.l:5000/
```

should give:

```
some_route url:
http://myserver.l:5000/some/route

some_websocket url:
ws://myserver.l:5000/some/websocket

this test case url:
http://myserver.l:5000/
```
"
1662,multiple processes on windows,2015-12-23T03:21:37Z,2016-01-26T18:06:52Z,,,,"It looks like deep down, Flask calls `SocketServer.py` (a source code file for Python) to make its server.  But `SocketServer.py` has a call to `os.fork()`, which isn't supported at all on Windows. It would be great to use something besides `SocketServer`, or maybe a modified version of `SocketServer`.  When you make a HTTP request, it first calls `SocketServer.process_request`, which then calls `os.fork`.

More importantly (to me at least), does anyone have a workaround?
"
1661,Clarify the python versions that flask supports,2015-12-20T12:45:45Z,2015-12-20T16:19:35Z,,,,"I asked the question that whether we should explicitly point out the python versions flask supports in #1651 , and since it makes sense that we'd better clarify the versions, I send this PR.
"
1660,COC?,2015-12-20T10:11:34Z,2015-12-20T10:13:06Z,,,,"Hi,

I'm just wondering what your code of conduct is for this project?

Thanks,
Alison
"
1659,Add encoding param in config.from_pyfile,2015-12-19T04:19:19Z,2015-12-19T04:22:07Z,,,,"Enhance: When in windows, and the config file is hard code by utf8, flask.config.from_pyfile will not encoding correctly.
Now give a param to let the user to choose the encoding of the config file
"
1658,Update config.py,2015-12-19T03:56:59Z,2015-12-19T04:01:46Z,,,,"Enhance: When in windows, and the config file is hard code by utf8, flask.Config.from_pyfile will not encoding correctly. Now add a param to let the user to choose the encoding of the config file
"
1657,Readme,2015-12-18T12:45:52Z,2015-12-18T14:04:52Z,,,,"I have updated README now its looking a bit good :)
"
1656,Injecting Flask vulnerability issue,2015-12-18T09:07:35Z,2015-12-18T14:08:30Z,,,,"On December 7, 2015 Ryan Reid published a blog post  called [""Injecting Flask"" ](https://nvisium.com/blog/2015/12/07/injecting-flask/).

In his post he demonstrated several attacks against a naive Flask / Jinja2 based implementation of a website.

I'm not sure if Flask has documented best practices which would mitigate the problem and I couldn't find any hint of a discussion of his blog post in the Flask community.

Are there plans to fix or document the problem?

For me it's a rather minor thing because I only have one internal service which depends on Flask, but I'm sure other developers may have many more and this is a serious security issue.
"
1655,minor revision of documentation.,2015-12-16T14:14:37Z,2016-04-01T21:12:25Z,,,,"mostly typos and other minor corrections i've come across reading the documentation.
"
1654,why command flask not found,2015-12-16T08:51:22Z,2015-12-16T10:16:49Z,,,,"I git clone and enter the flaskr folder, then run the following command in Bash:
flask --app=flaskr initdb

then I got error: command not found: flask

How do I setup flaskr in this case? Do I miss something?
"
1653,Fix wrong indentation error and get rid of PEP8 warnings in helpers.py,2015-12-15T11:46:39Z,2016-01-25T22:12:12Z,,,,"- There was wrong indentation error raising in line 587 https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L587
- Also fixed some PEP8 warnings
"
1652,Error running minitwit example,2015-12-14T00:43:41Z,2015-12-15T16:40:13Z,,TypeError,TypeError: 'str' does not support the buffer interface,"flask version is latest bleeding (from repo)
python version is 3.4 and OS is OpenBSD.

Traceback below:

```
Traceback (most recent call last):
  File ""/usr/local/bin/flask"", line 9, in <module>
    load_entry_point('Flask==0.11.dev0', 'console_scripts', 'flask')()
  File ""/usr/local/lib/python3.4/site-packages/flask/cli.py"", line 494, in main
    cli.main(args=args, prog_name=name)
  File ""/usr/local/lib/python3.4/site-packages/flask/cli.py"", line 342, in main
    return AppGroup.main(self, *args, **kwargs)
  File ""/usr/local/lib/python3.4/site-packages/click/core.py"", line 675, in main
    _verify_python3_env()
  File ""/usr/local/lib/python3.4/site-packages/click/_unicodefun.py"", line 69, in _verify_python3_env
    if locale.lower().endswith(('.utf-8', '.utf8')):
TypeError: 'str' does not support the buffer interface
```
"
1651,Remove with_statement in flask/ctx.py,2015-12-13T14:16:19Z,2015-12-13T17:21:01Z,,,,"It seems that we don't support 2.5 any more, and the with statement is mandatory since 2.6, I think we could remove it now.
"
1650,"When DEBUG=True, OSError: [Errno 88] Socket operation on non-socket",2015-12-12T07:40:51Z,2015-12-13T11:48:54Z,,OSError,OSError: [Errno 88] Socket operation on non-socket,"I get `OSError: [Errno 88] Socket operation on non-socket` when I try to run the following app with debug enabled.  I am using Ubuntu 14.04.2 and Python 3.4.0.

``` python
app = Flask(__name__)
app.debug = True

@app.route('/')
def index():
    return 'Hello, World!'

if __name__ == '__main__':
    app.run(host='0.0.0.0')
```

```
$ python app.py
 * Restarting with stat
 * Debugger is active!
 * Debugger pin code: 916-262-145
Exception in thread Thread-1:
Traceback (most recent call last):
  File ""/usr/lib/python3.4/threading.py"", line 920, in _bootstrap_inner
    self.run()
  File ""/home/nero/.virtualenvs/FBPocket/lib/python3.4/site-packages/gevent/threading.py"", line 137, in run
    super(Thread, self).run()
  File ""/usr/lib/python3.4/threading.py"", line 868, in run
    self._target(*self._args, **self._kwargs)
  File ""/home/nero/.virtualenvs/FBPocket/lib/python3.4/site-packages/werkzeug/serving.py"", line 653, in inner
    fd=fd).serve_forever()
  File ""/home/nero/.virtualenvs/FBPocket/lib/python3.4/site-packages/werkzeug/serving.py"", line 557, in make_server
    passthrough_errors, ssl_context, fd=fd)
  File ""/home/nero/.virtualenvs/FBPocket/lib/python3.4/site-packages/werkzeug/serving.py"", line 478, in __init__
    self.server_address = self.socket.getsockname()
OSError: [Errno 88] Socket operation on non-socket
```
"
1649,[support] I get None with request.form,2015-12-11T18:46:54Z,2015-12-11T18:51:31Z,,,,"Hi,

I have these:

```
# Imports
from flask import Flask, jsonify, request, make_response, render_template, url_for, flash, redirect
from yaml import load, dump
try:
    from yaml import CLoader as Loader, CDumper as Dumper
except ImportError:
    from yaml import Loader, Dumper


# Global variables
version = ""0.1""
app = Flask(__name__)
app.secret_key = 'el meu secret'


# Main procedure
@app.route(""/new/"", methods=['POST'])
def create_new_activity():
    flash(""Funciona?"")
    flash(request.form.get('body'))
    return redirect(url_for('show_new_activity_form'))

@app.route(""/new/"", methods=['GET'])
def show_new_activity_form():
    return render_template('activity.html')


if __name__ == ""__main__"":
    app.debug = True
    app.run()
```

My templates are very simple:

```
{% extends ""base.html"" %}
{% block title %}New activity{% endblock %}
{% block content %}
  <script>
  $(document).ready(function() {
    $('select').material_select();
  });
  </script>  

  <h1>New activity</h1>


  <div class=""row"">
      <form action=""{{ url_for('create_new_activity') }}"" method=""post"">
          <input placeholder=""identification"" id=""serial"" type=""text"" class=""validate"">
          <textarea id=""body"" class=""materialize-textarea""></textarea>
      <select id=""tags"" required multiple>
            <option value=""1"" selected>Option 1</option>
            <option value=""2"">Option 2</option>
            <option value=""3"">Option 3</option>
          </select>
          <input type=submit>
      </form>
   {% with messages = get_flashed_messages() %}
    {% if messages %}
      <ul class=flashes>
      {% for message in messages %}
        <li>{{ message }}</li>
      {% endfor %}
      </ul>
    {% endif %}
  {% endwith %}
  </div>
{% endblock %}
```

```
<!DOCTYPE html>
<html>
  <head>
    <title>{% block title %}{% endblock %} &in; tam </title>
    <!--Let browser know website is optimized for mobile-->
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0""/>
    {% block css_js %}
    <!-- CSS and Javascript headers -->
    <link href=""http://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.3/css/materialize.min.css"">
    <script type=""text/javascript"" src=""https://code.jquery.com/jquery-2.1.1.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.3/js/materialize.min.js""></script>
    {% endblock %}
  </head>
  <body>
    <div class=""navbar-fixed"">
      <nav class=""z-depth-1"" role=""navigation"">
        <div class=""nav-wrapper container"">
          <a id=""logo-container"" class=""brand-logo left"" href=""/"">tam</a>
          <ul class=""right"">
            <li><a href=""{{ url_for('show_new_activity_form') }}"">New</a></li>
          </ul>
        </div>
      </nav>
    </div>
    <div class=""container"">
      <div class=""section"">
         {% block content %}{% endblock %}
      </div>
    </div>
    <footer class=""page-footer"">
     <div class=""container"">Tam application</div>
     <div class=""footer-copyright"">
       <div class=""container"">
          Tam is distributed under <a href=""https://www.gnu.org/licenses/gpl-3.0.txt"">GPL 3</a> or above
       </div>
     </div>
    </footer>
  </body>
</html>
```

I get always ""None"" in the result of `request.form.get('body')` which I really fill in. What happens there?

Thanks,
"
1648,Mod wsgi docs,2015-12-10T04:02:49Z,2015-12-10T05:09:07Z,,,,"Updated the docs to include a an example of using httpd2.4 syntax for setting directory permissions.
There was a link  to Apache 2.4 but no explanation of changes needing to be made.

This was mentioned in issue #1644 

**Changes:**

update directory permissions from httpd 2.2 syntax 

```
    Order allow,deny
    Allow from all
```

to httpd 2.4 syntax

```
    Require all granted
```
"
1647,About import OpenID,2015-12-09T14:53:02Z,2015-12-09T16:50:16Z,,,,"/flask_website/**init**.py

``` python
# from flask_openid.ext.openid import OpenID
from flask_openid import OpenID
```

Should like this.
"
1646,visual studio code plugin>,2015-12-08T20:41:51Z,2015-12-08T22:45:26Z,,,,"Anyone have a plugin or making a plugin for visual studio code?
"
1645,template loaders configuration don't support zipped applications,2015-12-07T19:57:12Z,2016-01-03T13:33:54Z,,,,"based on #1562

due to using a filesystem-loader instead of a package-loader, egg based installs and zipped python applications as well as compressed wheels in the pythonpath can not load templates

the problem lies in `_PackageBoundObject` not using a package loader,
i don't recall if this was done for performance or due to other downsides
"
1644,Please update mod_wsgi documentation to use httpd 2.4 syntax,2015-12-07T19:11:56Z,2015-12-10T05:09:13Z,good first issue,,,"This is my own fault as I was looking for other more non-obvious issues with my permissions but the documentation here:

http://flask.pocoo.org/docs/0.10/deploying/mod_wsgi/

Uses httpd 2.2 syntax for directory permissions.

At the very least, a note should be added to remind folks to use httpd 2.4 syntax of ""Require All Granted"".
"
1643,Issue Regarding to instance path in testsuite directory,2015-12-07T10:13:31Z,2015-12-07T15:05:17Z,,AssertionError,AssertionError: '../flaskenv/var/run-tests-instance' != '../flaskenv/flask/instance',"## Made changes regarding to instance path of files in flask/testsuite/test_apps

While running test case by run-test.py module it causes Error for instance path.

``` sh
FAIL: test_main_module_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""../flaskenv/flask/flask/testsuite/config.py"", line 157, in test_main_module_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'instance'))

  File ""../flaskenv/flask/flask/testsuite/__init__.py"", line 141, in assert_equal
    return self.assertEqual(x, y)

AssertionError: '../flaskenv/var/run-tests-instance' != '../flaskenv/flask/instance'
- ../flaskenv/var/run-tests-instance
?             ^ ^ ----------
+ ../flaskenv/flask/instance
?             ^^ ^^
```

``` sh
FAIL: test_uninstalled_module_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""../flaskenv/flask/flask/testsuite/config.py"", line 164, in test_uninstalled_module_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'test_apps', 'instance'))

  File ""../flaskenv/flask/flask/testsuite/__init__.py"", line 141, in assert_equal
    return self.assertEqual(x, y)

AssertionError: '/hom[23 chars]ang-py3-test/flaskenv/var/config_module_app-instance' != '/hom[23 chars]ang-py3-test/flaskenv/flask/flask/testsuite/test_apps/instance'
- ../flaskenv/var/config_module_app-instance
?             ^ ^ ---  ^^^^^^^     ^
+ ../flaskenv/flask/flask/testsuite/test_apps/instance
?             ^^ ^^  +++++++++++ ^ +++++    ^^
```

``` sh
FAIL: test_uninstalled_package_paths (flask.testsuite.config.InstanceTestCase)
\----------------------------------------------------------------------
Traceback (most recent call last):
  File ""../flaskenv/flask/flask/testsuite/config.py"", line 169, in test_uninstalled_package_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'test_apps', 'instance'))

  File ""../flaskenv/flask/flask/testsuite/__init__.py"", line 141, in assert_equal
    return self.assertEqual(x, y)

AssertionError: '/hom[23 chars]ang-py3-test/flaskenv/var/config_package_app-instance' != '/hom[23 chars]ang-py3-test/flaskenv/flask/flask/testsuite/test_apps/instance'
- ../flaskenv/var/config_package_app-instance
?             ^ ^ ---  ^^^^^^^^     ^
+ ../flaskenv/flask/flask/testsuite/test_apps/instance
?             ^^ ^^  +++++++++++ ^ +++++    ^^

----------------------------------------------------------------------
Ran 226 tests in 4.574s

FAILED (failures=3)
```

Changes In the following files remove this instance path Error from the Test case:
- flask/testsuite/test_apps/config_module_app.py.

``` sh
app = flask.Flask(__name__, instance_path=os.path.join(
               os.path.abspath(os.path.dirname(__file__)),'instance')
              )
```
- flask/testsuite/test_apps/config_package_app/**init**.py.

``` sh
app = flask.Flask(__name__, instance_path=os.path.join(os.path.abspath(
                os.path.dirname(os.path.dirname(__file__))),'instance')
              )
```
- flask/testsuite/test_apps/main_app.py

``` sh
import os

app = flask.Flask('__main__', instance_path=os.path.join(
                os.path.abspath(os.path.dirname('__main__')),'instance')
              )
```
"
1642,0.10 maintenance,2015-12-07T09:04:57Z,2015-12-07T10:05:27Z,,AssertionError,AssertionError: '../flaskenv/var/run-tests-instance' != '../flaskenv/flask/instance',"Made changes regarding to instance path of files in flask/testsuite/test_apps

While running test case by run-test.py module it causes Error for instance path.

``` sh
FAIL: test_main_module_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""../flaskenv/flask/flask/testsuite/config.py"", line 157, in test_main_module_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'instance'))

  File ""../flaskenv/flask/flask/testsuite/__init__.py"", line 141, in assert_equal
    return self.assertEqual(x, y)

AssertionError: '../flaskenv/var/run-tests-instance' != '../flaskenv/flask/instance'
- ../flaskenv/var/run-tests-instance
?             ^ ^ ----------
+ ../flaskenv/flask/instance
?             ^^ ^^
```

``` sh
FAIL: test_uninstalled_module_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""../flaskenv/flask/flask/testsuite/config.py"", line 164, in test_uninstalled_module_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'test_apps', 'instance'))

  File ""../flaskenv/flask/flask/testsuite/__init__.py"", line 141, in assert_equal
    return self.assertEqual(x, y)

AssertionError: '/hom[23 chars]ang-py3-test/flaskenv/var/config_module_app-instance' != '/hom[23 chars]ang-py3-test/flaskenv/flask/flask/testsuite/test_apps/instance'
- ../flaskenv/var/config_module_app-instance
?             ^ ^ ---  ^^^^^^^     ^
+ ../flaskenv/flask/flask/testsuite/test_apps/instance
?             ^^ ^^  +++++++++++ ^ +++++    ^^
```

``` sh
FAIL: test_uninstalled_package_paths (flask.testsuite.config.InstanceTestCase)
\----------------------------------------------------------------------
Traceback (most recent call last):
  File ""../flaskenv/flask/flask/testsuite/config.py"", line 169, in test_uninstalled_package_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'test_apps', 'instance'))

  File ""../flaskenv/flask/flask/testsuite/__init__.py"", line 141, in assert_equal
    return self.assertEqual(x, y)

AssertionError: '/hom[23 chars]ang-py3-test/flaskenv/var/config_package_app-instance' != '/hom[23 chars]ang-py3-test/flaskenv/flask/flask/testsuite/test_apps/instance'
- ../flaskenv/var/config_package_app-instance
?             ^ ^ ---  ^^^^^^^^     ^
+ ../flaskenv/flask/flask/testsuite/test_apps/instance
?             ^^ ^^  +++++++++++ ^ +++++    ^^

----------------------------------------------------------------------
Ran 226 tests in 4.574s

FAILED (failures=3)
```

Changes In the following files remove this instance path Error from the Test case:
- flask/testsuite/test_apps/config_module_app.py.
- flask/testsuite/test_apps/config_package_app/**init**.py.
- flask/testsuite/test_apps/main_app.py
"
1641,Allow debugger to be controlled from application configuration,2015-12-06T02:02:11Z,,,,,"I submitted a patch for this but learned that it was incomplete with further testing. https://github.com/mitsuhiko/flask/pull/1640

Basically, it would be nice to allow `DEBUG` on the application to control the activation of the debugger and reloader when running the CLI like `app.run` does.
"
1640,Allow application configurations to control the debugger,2015-12-05T23:56:47Z,2015-12-06T01:31:43Z,,,,"I was surprised when running my application from the CLI that it didn't respect the applications debug flag.  This patch expands `DispatchApp`'s api to return the applications debug flag which is used by `run_simple` to activate the debugger and supply an informative message.

I explored enabling the reloader along with enabling the debugger but that caused a double execution. If I understand it correctly, the double load is the result of `eager_loading` not being switched properly because the reload status (if activated by the applications debug flag) wouldn't be known until after loading has occurred.

Since I am not positive what side-effects (none to my limited understanding) double execution would have I left that code out; it is a trivial addition if a double execution is acceptable in this case.
"
1639,Dev server redirects to arbitrary url when path starts with double slash //,2015-12-05T19:39:52Z,2015-12-06T16:22:18Z,,,,"``` python
from flask import Flask
from flask import request

app = Flask(__name__)

@app.route('/')
def index():
    return  'hello'

app.run(debug=True, port=8000, host='0.0.0.0')
```

If I try to navigate to http://127.0.0.1:8000//google.com (2 slashes), I get redirected to google.com.  I correctly get a 404 with http://127.0.0.1:8000/google.com (1 slash) and http://127.0.0.1:8000///google.com (3 slashses).  This is a vulnerability, I shouldn't be redirected to arbitrary urls.  Flask should prevent arbitrary redirects from urls.
"
1638,0.3 maintenance,2015-12-05T07:21:52Z,2015-12-05T07:22:05Z,,,,
1637,Fixed a typo in the appfactories docs,2015-12-03T09:51:35Z,2015-12-03T13:03:47Z,,,,"I think 'app' is the intended word here, but I am not 100% sure.
"
1636,update flaskr example design,2015-12-03T04:26:52Z,2015-12-03T04:47:11Z,,,,"convert flaskr example to responsive design using bootstrap 3
"
1635,Links to download documentation need updating,2015-12-02T15:38:30Z,2015-12-02T16:20:57Z,,,,"First, the link to the docs on the main page:

```
http://flask.pocoo.org/docs/
```

is missing the links on the left for downloading the docs. It should be:

```
http://flask.readthedocs.org/en/latest/
```

Second, the download links on the left are dead ends:

```
http://flask.pocoo.org/docs/flask-docs.[epub,pdf,mobi,zip]
```

should be:

```
http://readthedocs.org/projects/flask/downloads/[pdf,epub,htmlzip]/latest/
```

Same thing for the docs download links on the main page under the heading ""Interested?""
"
1634,add before_init param to View.as_view,2015-12-02T03:37:04Z,2015-12-02T04:30:12Z,,,,"I am writing a flask ext and need to do something before View init, 
but I can't do that via app.before_request because I need to test my View without request.
"
1633,Catch-All URLs,2015-12-01T05:26:49Z,2015-12-01T23:41:52Z,,,,"Hello.

I am trying to create a Catch-All function which serves every URL. I am following the example from http://flask.pocoo.org/snippets/57/ 

Here is the code snippet:

> ``` python
> from flask import Flask
> app = Flask(__name__)
> 
> @app.route('/', defaults={'path': ''})
> @app.route('/<path:path>')
> def catch_all(path):
>     return 'You want path: %s' % path
> 
> if __name__ == '__main__':
>     app.run() 
> ```

This code snippet does not catch all of the URLs. Am I missing something here? 

Thanks.
"
1632,Exception when client closes stream before flask response,2015-11-28T14:18:35Z,2015-11-28T14:44:04Z,,,,"I have been running a simple flask webserver for the purpose of a twilio app. Usually works all groovy, however every few days, twilio will tell me it could not connect, and upon checking the running server python shell, it would show nothing abnormal until I killed it, and the stack trace would spit out an exception that my flask app had crashed related to the generic twilio request.

Googling around, it would appear this is due to an underlying SocketServer not handling the exception properly and causing the problem. This post on stackoverflow speaks about the issue but offers no solution: http://stackoverflow.com/questions/17787023/python-how-to-catch-a-flask-except-like-this

It appears from the leading comment, that it's 'expected' to happen, and flask should simply handle it fine. However, in my case, it causes the server to lock up and crash. No further requests will be acknowledged. I simply have to re-start the app, and it'll proceed merrily along for a few more days.

If this is truly a bug in flask, it makes relatively easy to DDoS any flask server by the client simply hitting the web request and then stopping quickly and not acknowledging.

Why is my flask not set up to properly handle this type of thing? Is this a bug? Have I improperly configured something? Is there a try/catch I'm forgetting?

using regular pip install of flask 0.10.1 btw... The exception is pasted below:

```
Exception happened during processing of request from ('x.x.x.x', 48590)
Traceback (most recent call last):
  File ""/root/.pyenv/versions/2.7.10/lib/python2.7/SocketServer.py"", line 295, in _handle_request_noblock
self.process_request(request, client_address)
  File ""/root/.pyenv/versions/2.7.10/lib/python2.7/SocketServer.py"", line 321, in process_request
self.finish_request(request, client_address)
  File ""/root/.pyenv/versions/2.7.10/lib/python2.7/SocketServer.py"", line 334, in finish_request
self.RequestHandlerClass(request, client_address, self)
  File ""/root/.pyenv/versions/2.7.10/lib/python2.7/SocketServer.py"", line 655, in __init__
self.handle()
  File ""/root/.pyenv/versions/2.7.10/lib/python2.7/site-packages/werkzeug/serving.py"", line 203, in handle
rv = BaseHTTPRequestHandler.handle(self)
  File ""/root/.pyenv/versions/2.7.10/lib/python2.7/BaseHTTPServer.py"", line 340, in handle
self.handle_one_request()
  File ""/root/.pyenv/versions/2.7.10/lib/python2.7/site-packages/werkzeug/serving.py"", line 234, in handle_one_request
self.raw_requestline = self.rfile.readline()
  File ""/root/.pyenv/versions/2.7.10/lib/python2.7/socket.py"", line 451, in readline
data = self._sock.recv(self._rbufsize)
KeyboardInterrupt
```
"
1631,Extend documentation about uwsgi/nginx deployment,2015-11-28T11:48:51Z,2016-04-04T18:20:11Z,,,,"This patch intends to provide more information about uwsgi/nginx deployment when the app callable is in (`yourapp/__init__.py`) and the application is attached to the '/' URL.
I'm not English native so I expect some remarks ;)

Related to previous #1464
"
1630,Skip tests if redbaron is not installed,2015-11-26T21:47:46Z,2015-11-27T16:57:56Z,,,,"This will make sure these tests will be skipped if you don't have redbaron installed.
"
1629,Add .cache dir to gitignore,2015-11-26T21:04:38Z,2015-11-27T03:17:41Z,,,,"I think this could be handy and potentially minimise the risk
anyone commits it to the project.

```
flask - (master) $ tree .cache/
.cache/
└── v
    └── cache
        └── lastfailed

```
"
1628,In case a test fails a .cache directory is created,2015-11-26T20:51:45Z,2015-11-26T21:03:22Z,,,,"I think this could be handy and potentially minimise the risk
anyone commits it to the project.

```
flask - (master) $ tree .cache/
.cache/
└── v
    └── cache
        └── lastfailed

```
"
1627,Looks like pytest is not the only minimal dependency,2015-11-26T20:38:55Z,2015-11-26T21:32:20Z,,,,"With a fresh clone of the project.
By just installing pytest this is what i get when i run `py.test`:

```
____ERROR collecting scripts/test_import_migration.py ___
scripts/test_import_migration.py:5: in <module>
    from redbaron import RedBaron
E   ImportError: No module named 'redbaron'
```
"
1626,Can't deploy flask in nginx using python 3 (in a subroot) ,2015-11-26T14:17:58Z,2015-11-26T15:06:01Z,,,,"I am trying to deploy a flask application into an url subroot like

localhost/flaskapp

I configured my project with this settings:

wsgi.ini

```
[uwsgi]
socket = /tmp/wsgi.sock
chmod-socket    = 666
uid = www-data
gid = www-data
chdir= /var/www/flaskproject
module = wsgi 
callable = application
logto = /var/www/flaskproject/logs/t.log 
```

nginx.conf

```
location / {
     root   /var/www/website;
  }


location = /flaskapp { rewrite ^ /flaskapp/; }
location /flaskapp { try_files $uri @application; }
location @application {
  include uwsgi_params;
  uwsgi_param SCRIPT_NAME /flaskapp;
  uwsgi_modifier1 30;
  uwsgi_pass unix:/tmp/wsgi.sock;
}
```

wsgi.py

```
from myapp import application

if __name__ == ""__main__"":
    application.run()
```

myapp.py

```
from flask import Flask

application = Flask(__name__)

@application.route(""/"")
def index():
    try:
        import http.client
        fr = ""OK Python 3.x""

    except ImportError:         
        fr = ""OK Python 2.x""           
    return fr

@application.route(""/more"")
def sdf():
    return ""OK deeper subroot""

if __name__ == ""__main__"":
    application.run(host='0.0.0.0')
```

I execute this into virtualenvs for python 2.7 and python 3.4, each one with their respective uwsgi modules compiled( I mean compiled for python 2.7 and 3.4).

When I run each one, open my browser and I got this:

**_2.7 venv:**_

localhost: webpage (it's ok)

localhost/flaskapp: ""OK Python 2.x""

localhost/flaskapp/more: ""OK deeper subroot""

**_3.4 venv**_

localhost: webpage (it's ok)

localhost/flaskapp: ""Not found"" message

localhost/flaskapp/more: ""Not found"" message

As you can see, this works with python 2.7 but in python 3.4. I want to know how to run this with python 3.4, 

Thank you
"
1625,Documentation / Quickstart / Debugger - how to activate,2015-11-24T00:15:52Z,2017-05-22T19:28:47Z,docs,,,"When following the quickstart, specifically:

https://github.com/mitsuhiko/flask/search?utf8=%E2%9C%93&q=++Screenshot+of+the+debugger+in+action

I found myself jumping to google to learn how to activate the debugger. Perhaps if the screen grab showed & highlighted the console icon on the far left of my screen, that wouldn't have happened.

I'm happy to submit a pull request with a replacement screenshot if you agree this would be useful, noting I'm not on mac, so screen grab might look out of place, if that detail is considered important
"
1624,Render the code block in mongokit.rst,2015-11-22T06:51:12Z,2015-11-22T08:15:58Z,,,,"The code block in [mongokit pattern](http://flask.pocoo.org/docs/dev/patterns/mongokit/#declarative) seems not rendered properly. Fix it by adding the missing blank line.
"
1623,demo doesn't show the active port,2015-11-22T03:51:24Z,2015-11-22T09:18:30Z,,,,"On python 3.4.3 with `flask-0.10.1`, running the demo in the [quickstart](http://flask.pocoo.org/docs/0.10/quickstart/) doesn't print what port it's on:

```
$ python helloworld.py
 * Restarting with stat
 * Debugger is active!
 * Debugger pin code: 281-051-764
```

it is on port 5000, so you can guess it from the docs, but I think it should tell the user what port it's running on?
"
1622,Werkzeug 0.11 does not allow debug,2015-11-21T17:57:44Z,2015-11-21T22:08:18Z,,,,"Running Flask, on Linux or Windows or OS X, if you run:

```
from flask import Flask
app = Flask(__name__)

@app.route('/')
def index():
    return ""foo""

if __name__ == '__main__':
    app.run(debug=True)
```

...then python kills itself with an error (cant remember from top of my head...as I am not at my PC).

However, when you remove debug=True everything is fine.

Running # pip uninstall werkzeug
"
1621,Allow to specify subdomain and/or url_scheme in app.test_request_cont…,2015-11-20T16:53:58Z,2017-05-25T21:45:35Z,testing,,,"Added two extra parameters to app.test_request_context():

```
subdomain: allows to test requests handled by blueprint with specified subdomain 
                   without passing full URL
url_scheme: allows to set URL scheme
```
"
1620,xss issue,2015-11-20T10:22:13Z,2015-11-20T10:49:03Z,,,,"Hello, i'm using this repository to start learning python + flask.
I red that flask with the help of jinja2 should escape any sql injection or xss attack.
Anyway if i start using the flaskr app in the examples i see that it is possible to inject xss code, i did a simple test with [<script>alert""hello""</script> ohh...github doesn't show the code of the alert] and it's working...it's a permanent xxs because it is written in the db. I would like to start writing secure code from the beginning, someone could explain how to avoid xss in this simple app? many thanks
"
1619,Flask extremely slow on SQL Server view queries versus pure table queries,2015-11-19T21:36:03Z,2015-11-19T21:38:45Z,,,,"Hi,

I’ve noticed that Flask takes 10 or 20 seconds to display a page based on a view query but will display the page in less than a second for a non-view version of the same query.  For example here is a query on view CurveVersionReport:

select CurveEditID,AsOfDate,TaskDefinition,VersionName,acattribute,DataPoints
FROM CurveVersionReport
where market = 'Commodity' and submarket = 'Agriculture' and activeversion='Yes' and curvename='CO_PRICE_VAR_USD_OTC_BO'
order by curvename, curveeditid

and the corresponding non-view version:

select a.[CurveEditID],[AsOfDate],TaskDefinition  
      ,[CurveVersion] as VersionName
      , tree + '.' + attribute as acattribute 
      ,count(*) AS DataPoints
  FROM [CurveEdits] a, curvedefinition b, submarket c, TaskDefinition d, curveversion e, curvepoints f, acattribute g
  where a.curveid = b.curveid 
  and b.marketid = c.marketid
  and a.TaskDefinitionID=d.TaskDefinitionID
  and a.[CurveVersionID]=e.[CurveVersionID]
  and f.curveeditid = a.curveeditid
  and f.acattributeid = g.acattributeid
  and market = 'Commodity' and submarket = 'Agriculture' and activeversion=1 and curvename='CO_PRICE_VAR_USD_OTC_BO'
  group by market, submarket, curvename, a.[CurveEditID],[AsOfDate],TaskDefinition,[CurveVersion],[ActiveVersion], tree, attribute 
  order by acattribute

This is the Flask method that processes the query:

@app.route('/curve/<market>/<submarket>/<curve>')
def Curve(market, submarket, curve):
    global cur
    query = ...one of the above
    cur.execute(query, (market, submarket, curve))
    edits=[x for x in cur.fetchall()]
    return render_template('curve.html', market=market, submarket=submarket, curve=curve, edits=edits)

Here is the template file:

<h5><img src='/static/wf_logo_50px.png'> 
<a href=""/"" target=""_blank_"">PFE Analytics:</a>
<a href=""/Markets"" target=""_blank_"">Market:</a> 
<a href=""/market/{{market}}"" target=""_blank_"">Submarket:</a>
<a href=""/submarket/{{market}}/{{submarket}}"" target=""_blank_"">Curve:</a>
{{market}} {{submarket}} {{curve}}</h5>


<table border=""1"">
<tr>
<th>CurveEditID</th>
<th>AsOfDate</th>
<th>TaskDefinition</th>
<th>VersionName</th>
<th>acattribute</th>
<th>DataPoints</th></tr>

{% for (CurveEditID,AsOfDate,TaskDefinition,VersionName,acattribute,DataPoints) in edits %}
<tr>
<td>{{CurveEditID}}</td>
<td>{{AsOfDate}}</td>
<td>{{TaskDefinition}}</td>
<td>{{VersionName}}</td>
<td>{{acattribute}}</td>
<td>{{DataPoints}}</td></tr>
{% endfor %}

</table>


Do you know why view version would be extremely slow versus non-view?

Thanks, 

Lars Ericson

Quantitative Analytics Consultant
Market & Institutional Risk Management 

Wells Fargo Bank, N.A. | 301 S. College St., 4th Floor | Charlotte, NC 28202-6000
MAC D1053-04X
Tel  704-410-2219 | Cell 917-891-1639

lars.ericson@wellsfargo.com
"
1618,Review Flask-DropIn extension for listing and approval,2015-11-18T15:30:39Z,2015-11-18T17:53:28Z,,,,"I've created an small extension Flask-DropIn, which aims to make it easy to organize
a large flask application. It basically borrows the idea from django app, and could 
be much more flexible.

I've tried to ensure following the extension guide, and believe that I have done everything 
required by the extension guideline

Github: https://github.com/zh012/flask-dropin
Docs: http://pythonhosted.org/Flask-DropIn/
Pypi: https://pypi.python.org/pypi/Flask-DropIn

Thanks!
"
1617,OSError: [Errno 9] Bad file descriptor for python3 + flask,2015-11-12T06:19:51Z,2015-11-12T09:16:23Z,,OSError,OSError: [Errno 9] Bad file descriptor,"I got following error with flask (0.10.1) + python 3.5. But python 2.7 is OK.
If I turn off debug flag, python 3.5 is also OK. 
Werkzeug (0.11) works well with/with out debug flag for python 3.5

C:\tmp\flask>py -3 test1.py
Traceback (most recent call last):
  File ""test1.py"", line 13, in <module>
    app.run()
  File ""C:\Python35\lib\site-packages\flask\app.py"", line 772, in run
    run_simple(host, port, self, **options)
  File ""C:\Python35\lib\site-packages\werkzeug\serving.py"", line 666, in run_simple
    os.set_inheritable(s.fileno(), True)
OSError: [Errno 9] Bad file descriptor

Flask code
from flask import Flask
app = Flask(**name**)
app.debug = True
@app.route(""/"")
def index():
    return ""Hello world!""
if **name** == '**main**':
    app.run()

Werkzeug code
from werkzeug.wrappers import Request, Response
from werkzeug.debug import DebuggedApplication
@Request.application
def application(request):
    return Response('Hello World!')
application =  DebuggedApplication(application, evalex=True)
if **name** == '**main**':
    from werkzeug.serving import run_simple
    run_simple('localhost', 4000, application)
"
1616,Fix typo.,2015-11-11T22:48:39Z,2015-11-11T22:50:09Z,,,,"Was introduced in one of the last commits.
"
1615,Documentation on setting up configuration file might cause friction to new users,2015-11-11T11:25:37Z,2016-04-08T06:59:24Z,,,,"_refers to: http://flask.pocoo.org/docs/0.10/config/#development-production_

I did not have `__init__.py` present. I did not know whether `.py` to be part of `server_config` as filename.

Friction for new user can be reduced by giving a more precise example, like:

```
app.config.from_object('module.server_config')
```

files:

```
module/__init__.py (may be empty)
module/server_config.py
```

Let server_config.py contain the following:

```
DEBUG = False
TESTING = False
DATABASE_URI = 'sqlite://:memory:'
user = 'Aladdin' 
```

However, app.config will carry only UPPERCASE keys (KEY=value) in config file.
Hence, app.config['DATABASE_URI'] will be set, app.config['user'] not.
"
1614,I can't to custome json decode error handler.,2015-11-11T10:22:38Z,2015-11-11T10:23:46Z,,,,"when I call request.get_json(), I found that request.json has been set.

If I post a http request with content-type:application/json with empty body or incomplete json string, this will abort in 400,
I want to custom my json decode error handler, what should I do?
"
1613,Abh ocean,2015-11-09T17:28:04Z,2015-11-09T17:54:27Z,,,,"testing
"
1612,"[Document Bug] get_json(force=False, silent=False, cache=True)",2015-11-09T05:22:46Z,2015-11-09T14:54:37Z,,,,"Parameters: 

```
force – if set to True the mimetype is ignored.
silent – if set to False this method will **NOT** fail silently and return False.
cache – if set to True the parsed JSON data is remembered on the request.
```

http://flask.pocoo.org/docs/0.10/api/#flask.Request.get_json
"
1611,Unicode Error when running in debug mode,2015-11-09T03:33:44Z,2015-11-09T03:39:44Z,,TypeError,TypeError: Unicode-objects must be encoded before hashing,"Hello,

I'm currently using flask while running `Python3.5` and I just noticed this `Unicode` error for the first time. When I run my app in the debug mode, I receive this error:

```
Traceback (most recent call last):
  File ""main.py"", line 28, in <module>
    app.run(debug=True)
  File ""/Users/pranav/WebProjects/FitScout/fit_env/lib/python3.5/site-packages/flask/app.py"", line 772, in run
    run_simple(host, port, self, **options)
  File ""/Users/pranav/WebProjects/FitScout/fit_env/lib/python3.5/site-packages/werkzeug/serving.py"", line 633, in run_simple
    application = DebuggedApplication(application, use_evalex)
  File ""/Users/pranav/WebProjects/FitScout/fit_env/lib/python3.5/site-packages/werkzeug/debug/__init__.py"", line 169, in __init__
    if self.pin is None:
  File ""/Users/pranav/WebProjects/FitScout/fit_env/lib/python3.5/site-packages/werkzeug/debug/__init__.py"", line 179, in _get_pin
    self._pin, self._pin_cookie = get_pin_and_cookie_name(self.app)
  File ""/Users/pranav/WebProjects/FitScout/fit_env/lib/python3.5/site-packages/werkzeug/debug/__init__.py"", line 96, in get_pin_and_cookie_name
    h.update('cookiesalt')
TypeError: Unicode-objects must be encoded before hashing
```

Is there an existing fix or do I need to change something on my end? I don't receive this error when running my app without the debug flag.

Thanks!
"
1610,Fix typo in app_ctx_globals_class doc in app.py,2015-11-07T01:09:21Z,2015-11-07T02:12:56Z,,,,"Maybe a typo? 
"
1609,add BiuBiuBiu~,2015-11-05T12:58:55Z,2015-11-05T13:01:31Z,,,,
1608,Fix a typo,2015-11-04T14:09:44Z,2015-11-04T14:39:43Z,,,,"Maybe this is a typo?
"
1607,Fix typo in templating.rst,2015-11-04T11:00:54Z,2015-11-04T11:03:31Z,,,,
1606,Core signals template_rendered doesn't works,2015-11-04T10:06:44Z,2015-11-04T17:37:18Z,,,,"I try to subscribing a signal like this:

``` python
def log_template_renders(sender, template, context, **extra):
    sender.logger.debug('Rendering template ""%s"" with context %s',
                        template.name or 'string template',
                        context)

from flask import template_rendered
template_rendered.connect(log_template_renders, app)
```

but it doesn't works. It must be like this:

``` python
def log_template_renders(sender, template, context, **extra):
    sender.logger.debug('Rendering template ""%s"" with context %s',
                        template.name or 'string template',
                        context)

from flask import template_rendered

@forum.before_request
def before_request():
    template_rendered.connect(log_template_renders, app)
```

then it works well.
"
1605,New release and updated documentation please?,2015-11-03T12:20:07Z,2015-11-03T12:21:02Z,,,,"New release and updated documentation please?
"
1604,OPTIONS requests sometimes match the wrong url_rule if there are multiple route handlers for different methods,2015-11-02T16:57:17Z,,,,,"I have multiple route handlers with the same path but with different methods that they handles, e.g.

```
@app.route('/users', methods=['GET'])
@app.route('/users', methods=['POST'])
```

The problem occurs when a CORS pre-flight OPTIONS request is made to `/users`. Since the route and method match both endpoints, the wrong endpoint is sometimes returned which is problematic if you are trying to use the matched `url_rule` for any logic. In my case, I was using `request.url_rule.methods` to add the `Access-Control-Allow-Methods` header to the response.
"
1603,Added session regenerate/destroy methods,2015-11-02T00:58:21Z,2017-04-22T18:39:55Z,session,,,"In #1600, we have been discussing adding session regeneration/destroy methods to make preventing session fixation part of Flask. This is a rough draft based on that discussion. In this PR:
- Added `app.session_regenerate` and `app.session_destroy` methods to `app.py`
- Added `session_interface.regenerate_session` and `session_interface.destroy_session` to session interfaces
- Added tests against cookie interface verifying the methods work as expected
- Updated quickstart documentation to include notes on when to use `session_regenerate` and `session_destroy`

**Missing:**
- The documentation probably needs more thought/work (e.g. add to API, maybe other documents).
"
1602,allow using alternative json library,2015-11-01T05:32:18Z,2017-05-31T19:04:39Z,json,,,"It looks like `flask.json` does not allow the user to specify an alternative json library (such as [rapidjson](https://github.com/kenrobbins/python-rapidjson)). Instead it just [does this](https://github.com/mitsuhiko/flask/blob/41622c8d681a170f39df2ab8dff170d3b8d2d139/flask/json.py#L22-L25):

``` python
try:
    from itsdangerous import simplejson as _json
except ImportError:
    from itsdangerous import json as _json
```

This currently un-overridable behavior also means that, due to differences in when `default(..)` is called between `simplejson` and `json`, bugs can mysteriously appear when `simplejson` is installed that didn't appear without it.

Would you consider giving the user some control over which json library is used?
"
1601,Duplicate: Downloadable documentation files links (pdf and zippe files) are dead,2015-10-30T20:50:12Z,2015-10-30T20:55:16Z,,,,"Duplicate: Sorry
I can't download the documentation ether pdf of zip file from flask website.
Djoudi
"
1600,Add session methods to handle destruction and regeneration,2015-10-30T19:57:04Z,2017-04-22T19:54:39Z,,,,"We have been using `flask-session` for our sessions and noticed that there were no easy methods on `flask` or `flask-session` to handle session destruction/regeneration. These are practical as they aid in preventing session fixation attacks (e.g. when someone knows your session id and it doesn't get changed on login so they can reuse your session):

https://www.owasp.org/index.php/Session_fixation

We saw that `flask-kvsession` has some logic for this:

https://github.com/mbr/flask-kvsession/blob/0.6.2/flask_kvsession/__init__.py#L89-L124

but we were already invested into `flask-session` (added `sha256` signing support) that we decided to implement similar logic there as well:

https://github.com/fengsp/flask-session/pull/27

However, I'm not sure that's the ideal interface. I think the final product would look something more like

``` python
flask.session.destroy()
flask.session.regenerate()
```

which in turn call `flask.session_interface.destroy_session(self, app, session)` and `flask.session_interface.regenerate_session(self, app, session)`.

What are your thoughts on this?
"
1599,PendingDeprecationWarning on use of import imp,2015-10-29T19:25:09Z,2016-02-05T01:01:22Z,,,,"Install flask:
`pip install flask`

If `test.py` contains:

```
import flask

```

A `PendingDeprecationWarning` is emitted:

`python  -Werror test.py`

```
Traceback (most recent call last):
  File ""test.py"", line 1, in <module>
    import flask
  File ""C:\Users\John Hagen\AppData\Local\Programs\Python\Python35-32\lib\site-packages\flask\__init__.py"", line 21, in <module>
    from .app import Flask, Request, Response
  File ""C:\Users\John Hagen\AppData\Local\Programs\Python\Python35-32\lib\site-packages\flask\app.py"", line 28, in <module>
    from .config import ConfigAttribute, Config
  File ""C:\Users\John Hagen\AppData\Local\Programs\Python\Python35-32\lib\site-packages\flask\config.py"", line 12, in <module>
    import imp
  File ""C:\Users\John Hagen\AppData\Local\Programs\Python\Python35-32\lib\imp.py"", line 33, in <module>
    PendingDeprecationWarning, stacklevel=2)
PendingDeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
```
"
1598,Add info about working with VE and Python 3,2015-10-29T11:24:55Z,2015-10-30T02:29:37Z,,,,"Python 3 does not have execfile function.
"
1597,KWC_code,2015-10-29T03:37:46Z,2015-10-29T07:51:03Z,,,,
1596,url_for with alternating schemes,2015-10-27T11:17:44Z,2016-05-22T08:46:39Z,,,,"I noticed unexpected behaviour with `url_for` when generating multiple urls with different schemes during a request. After calling `url_for` with a specific `_scheme`, this scheme will become the default scheme in the current context's url_adapter.

Best demonstrated with a small example:

```
import flask

app = flask.Flask(__name__)

@app.route('/')
def hello():
    return 'Hello World'


with app.test_request_context('/'):
    flask.url_for('hello', _external=True)
    # http://localhost/
    flask.url_for('hello', _external=True, _scheme='https')
    # https://localhost/
    flask.url_for('hello', _external=True)
    # https://localhost/
```

I would expect the first and third call to return the exact same result.

PR contains a test demonstrating the issue and a proposed fix.
"
1595,Fixed small typo in comment,2015-10-24T14:17:57Z,2015-10-24T14:30:06Z,,,,
1594,travis: python 3.5 support,2015-10-24T07:15:03Z,2015-10-30T16:35:06Z,,,,"Add python 3.5 build to travis configuration.
"
1593,support timedelta for SEND_FILE_MAX_AGE_DEFAULT config variable,2015-10-24T05:06:41Z,2015-10-30T18:10:08Z,,,,"Support `datetime.timedelta` and seconds as `int` for SEND_FILE_MAX_AGE_DEFAULT config variable.
Refers Issue #1580 

:beers: 
"
1592,Update CHANGES,2015-10-23T08:20:16Z,2015-10-31T02:20:40Z,,,,
1591,Example code leaked when running test,2015-10-22T03:45:14Z,2016-05-22T10:21:32Z,,,,"Running `py.test` leads to 

```
tests/test_regression.py:72:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <test_regression.assert_no_leak object at 0x104105550>, exc_type = None, exc_value = None, tb = None

    def __exit__(self, exc_type, exc_value, tb):
        if not hasattr(sys, 'getrefcount'):
            gc.collect()
        new_objects = len(gc.get_objects())
        if new_objects > self.old_objects:
>           pytest.fail('Example code leaked')
E           Failed: Example code leaked
```

I think this is an old issue (#452). I run the test on both CPython 2.7.8 and 3.5.0, and it failed on both occasions.
"
1590,"in pluggable views, why not passing url variable parameters to view object?",2015-10-22T03:38:57Z,2015-10-22T05:00:26Z,,,,"in flask doc's giving examples, the view would look like this:

``` python
class UserAPI(MethodView):

    def get(self, user_id):
        if user_id is None:
            # return a list of users
            pass
        else:
            # expose a single user
            pass

    def post(self):
        # create a new user
        pass

    def delete(self, user_id):
        # delete a single user
        pass

    def put(self, user_id):
        # update a single user
        pass
```

why not make it like this?

``` python
class UserAPI(MethodView):

    def __init__(self, user_id):
        self.user_id = user_id

    def get(self):
        if self.user_id is None:
            # return a list of users
            pass
        else:
            # expose a single user
            pass

    def post(self):
        # create a new user
        pass

    def delete(self):
        # delete a single user
        pass

    def put(self):
        # update a single user
        pass
```

the first way seems not simple and direct.
"
1589,Make sure we list HEAD as a valid method when GET exists,2015-10-21T19:40:26Z,2015-10-30T16:35:22Z,,,,
1588,Updated documentation for Setuptools,2015-10-20T09:13:16Z,2016-01-27T01:40:26Z,,,,"Fixes #1465 

Signed-off-by: Abhijeet Kasurde akasurde@redhat.com
"
1587,url_for: 500 Internal Server Error,2015-10-19T19:24:56Z,2015-10-19T22:43:17Z,,,,"In Flaskr example, I'm getting the following for url_for('add_entry')

Internal Server Error

The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.

This is running behind uwsgi with emperor mode. Logs are absent and do not show the real problem and I'm unable to diagnose.
"
1586,No wheel published,2015-10-19T11:36:34Z,2015-11-12T12:42:23Z,,,,"Please consider generating wheel for faster installs

http://pythonwheels.com/
"
1585,Added flake8 for checking Python syntax,2015-10-19T11:35:17Z,2016-01-25T22:11:33Z,,,,"Fixes #1561 
Signed-off-by: Abhijeet Kasurde akasurde@redhat.com
"
1584,Updated documentation for Distribute installation,2015-10-19T08:42:59Z,2015-10-20T09:14:09Z,,,,"Fixes #1465 

Signed-off-by: Abhijeet Kasurde akasurde@redhat.com
"
1583,Unknown error,2015-10-17T21:31:54Z,2015-10-17T22:05:35Z,,,,"My code is as follows:

``` python
from boto.mws.connection import MWSConnection
import xml.etree.ElementTree as ET
from flask import Flask

MWSConnection._parse_response = lambda s, x, y, z: z
secretKey =""a""
sellerID=""a""
mwsAuthToken=""a""
marketplaceID=""a""
awsAccessKeyID=""a""

mws = MWSConnection(awsAccessKeyID,secretKey)
app = Flask(__name__)

mws.SellerId = sellerID
mws.Merchant = sellerID
mws.MarketplaceId = marketplaceID

@app.route('/products/matching/')
def getMatchingProduct(query):
    response=mws.list_matching_products(MarketplaceId=marketplaceID,Query=query)
    response=response.decode(encoding=""utf-8"")
    return response

if __name__=='__name__':
    app.run()
```

And Visual Studio just tells me that there is an error and the program does not run. There is no leads for me to try to fix this but if I just do the following from the quickstart it works

``` python
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello World!'

if __name__ == '__main__':
    app.run()
```
"
1582,"Enable distribution as a standalone, compiled executible with nuitka",2015-10-15T02:05:21Z,2015-10-19T22:43:54Z,,,,"http://nuitka.net/pages/overview.html

Thoughts?  
"
1581,Fix name mismatch in apierrors page,2015-10-14T21:02:54Z,2016-01-26T07:25:52Z,,,,
1580,Make SEND_FILE_MAX_AGE_DEFAULT support datetime.timedelta,2015-10-14T07:29:54Z,2015-10-30T20:38:08Z,,,,"`SEND_FILE_MAX_AGE_DEFAULT` should support `int` or `datetime.timedelta`, like `PERMANENT_SESSION_LIFETIME` does.

http://flask.pocoo.org/docs/0.10/config/#builtin-configuration-values
"
1579,route parameters,2015-10-12T07:13:58Z,2015-10-12T07:35:37Z,,,,"How to route url like /usr?username=xxx ?
"
1578,Update docs on the website (at least the python 3 ones),2015-10-05T17:16:20Z,2016-06-05T22:46:13Z,docs,,,"The website gives a very outdated view on the python 3 issue:
http://flask.pocoo.org/docs/0.10/python3/

This seems to be updated to make it a lot more realistic, but is not online:
https://github.com/mitsuhiko/flask/blob/master/docs/python3.rst

This RST file also seems to give a very different view than the dedicated python3 one:
https://github.com/mitsuhiko/flask/blob/master/docs/advanced_foreword.rst
"
1577,Warn when using development server,2015-10-05T01:55:08Z,2016-04-04T18:22:34Z,,,,"Also updates docs to emphasize that run() should not be used
in production.

Refs #1102
"
1576,an context confuse when i using the celery ,2015-09-30T16:14:24Z,2015-10-31T21:15:19Z,,,,"it appear in when i using the celery with flask_sqlalchemy 

i am using the celery with context  by  http://flask.pocoo.org/docs/0.10/patterns/celery/
but i find ""copy_current_request_context"" is not work , because the context is typeof the AppContext not the RequestContext . so when invoke @copy_current_request_context , it raise the 

RuntimeError('This decorator can only be used at local scopes '
            'when a request context is on the stack.  For instance within '
            'view functions.')

so i try to  replace the RequestContext with AppContext in @copy_current_request_context , it work!
the code which i changed ( from flask/ctx.py ): 

```
def copy_current_request_context(f):

    top = _app_ctx_stack.top
    if top is None:
        raise RuntimeError('This decorator can only be used at local scopes '
            'when a request context is on the stack.  For instance within '
            'view functions.')
    reqctx = top.copy()
    def wrapper(*args, **kwargs):
        with reqctx:
            return f(*args, **kwargs)
    return update_wrapper(wrapper, f)





class AppContext(object):

    def __init__(self, app):
        self.app = app
        self.url_adapter = app.create_url_adapter(None)
        self.g = app.app_ctx_globals_class()

        # Like request context, app contexts can be pushed multiple times
        # but there a basic ""refcount"" is enough to track them.
        self._refcnt = 0

    def copy(self):

        mapp = self.__class__(self.app,)
        return mapp

    def push(self):
        """"""Binds the app context to the current context.""""""
        self._refcnt += 1
        _app_ctx_stack.push(self)
        appcontext_pushed.send(self.app)

    def pop(self, exc=None):
        """"""Pops the app context.""""""
        self._refcnt -= 1
        if self._refcnt <= 0:
            if exc is None:
                exc = sys.exc_info()[1]
            self.app.do_teardown_appcontext(exc)
        rv = _app_ctx_stack.pop()
        assert rv is self, 'Popped wrong app context.  (%r instead of %r)' \
            % (rv, self)
        appcontext_popped.send(self.app)

    def __enter__(self):
        self.push()
        return self

    def __exit__(self, exc_type, exc_value, tb):
        self.pop(exc_value)
```
"
1575,What is the release schedule for 1.0?,2015-09-28T17:54:51Z,2016-06-02T19:06:28Z,,,,"What are the plans for the 1.0 release.  This was brought up last year and there hasn't been any announcements since then.  What progress is being made and what still remains?
"
1574,support for rotating secret keys? ,2015-09-28T15:37:28Z,2015-11-01T00:53:57Z,,,,"Is there any support for rotating secret keys in Flask?

I would like to use http://securekey.heroku.com/ as a source.
"
1573,Documentation: Clarify instructions about changing row_factory for SQLite3,2015-09-28T13:00:10Z,2016-06-15T06:55:47Z,docs,,,"When I was working through the tutorial, this was very confusing to me; so, I've added the code and clarification that would have helped me get through it faster.
"
1572," Logging Documentation, Patterns & Extending",2015-09-25T17:20:10Z,2017-07-17T16:47:43Z,"docs, logging",,,"I've spent the last month digging through flask and building a large application. Figuring out and configuring logging has been one of the most difficult things to get under control. I still don't understand it well enough that I'm comfortable or have things configured the way I'd like.

When learning a new python package/framework/utility - the first thing I _typically_ do is setup debug logging, so that I can see exactly what's going on. The more verbose the debugging messages are, the easier things are to figure out. Typically - debugging logs will dump information like:
- a configuration file was loaded
- a configuration value was set
- API providers have been initialized and are ready for use
- when API calls are performed, etc.

As far as I can tell, Flask doesn't do any of that - 'logs' are reserved for the instantiated flask application object itself - out of the box, running in debug mode - the only information I get out of the logs is that a request was received and answered. The debug logs don't seem to provide any information about flask's internal activities, things like: 
- a flask object was instantiated
- a blueprint was registered
- a route was configured
- an extension was loaded
- an extension was configured
- extension specific things

These are all things I've had to ""jump through hoops"" to understand (while designing my application, application structure, application patterns, etc) - things that seem like they would have been _much_ easier to understand, had logs been available. As I dig further into Flask Internals while building out my application further, there's more and more stuff I'd like to be dumping to my logs so I know exactly what's going on, internally.

As an initial attempt to set this up - I started by using [logging_tree](https://pypi.python.org/pypi/logging_tree) to dump out the logger heirarchy to see what's what. Based on that - I basically hooked the Config object (similar to how [flasky](https://github.com/miguelgrinberg/flasky/blob/master/config.py#L45) is doing this). Then I read through all the logger docs I could find, I started putting logging statements all over my application code, for example:

```
    app.logger.debug('ENV:          %s' % app.config['ENV'])
    app.logger.debug('HOST_ADDRESS: %s' % app.config['HOST_ADDRESS'])
    app.logger.debug('HOST_PORT:    %s' % app.config['HOST_PORT'])
    app.logger.debug('SECRET_KEY:   %s' % app.config['SECRET_KEY'])
    app.logger.debug('PROJECT_ROOT: %s' % app.config['PROJECT_ROOT'])
    app.logger.debug('APP_ROOT:     %s' % app.config['APP_ROOT'])
    app.logger.debug('TMP_PATH:     %s' % app.config['TMP_PATH'])
```

This uses the default log format, which is very verbose (and is tailored to provide robust information about requests - not really great for what I'm trying to do here). Instead of getting 7 lines that that are tabularized and easy to read, this generates 28 lines, that not easy to scan for this use-case. I spent awhile trying to use `app.logger` as a `logging.logger` object, until I finally figured out (yes, it's in the docs, but a little counter-intuitive) that it's not actually a `logging.logger` object - it's actually a logging.StreamHandler() object.

Then I spent a bunch of time learning more about logging and structured logging and reading through Flask's source, trying to understand exactly what's going on here. I've got some basic experience with structured logging in python, but what's going on here was well above my head and not easy to adjust. I ended up finding the [Flask.debug_log_format()](http://flask.pocoo.org/docs/0.10/api/#flask.Flask.debug_log_format) API, and used that to set my debug message format to the standard log messaging format - but when dealing with requests - now I miss the old format - and there's logs of other information I'd like to start injecting into _those_ debugging messages as well, that I don't want in my standard messages.

So now - I've been attempting to figure out a pattern that will let me do something like:
- Create a logging object that handles messages just for debugging messages related to my application setup & initialization - so I can dump things like:
  - when a flask object is instantiated (im working on dispatching multiplication wsgi applications, as apart of the same flask application)
  - things specific to flask objects that have been instantiated:
    - the configuration values
    - the blueprints
    - the routes
    - the models
- Create a separate request logger that:
  - uses a log format similar to flask's default log format (very robust, specific to debugging requests)
  - injects additional information about requests into the logging formatter
- I'm still trying to figure out how to make this less explicit in my application code, so that _automatically_ display debugging information about what flask is doing, rather than having to put debugging statements all throughout my application code

I'm working through these things step by step, but they're definitely taking a long time - and unless I'm missing some documentation here or being very dense - these seem like a big challenge for user's new to to the Flask framwork. I've found some examples (by scouring google, github.com, and gist.github.com) that are helping me along, but nothing that _really_ explains or walks through this kind of stuff.

So - am I missing some documentation here? Am I doing something that I shouldn't? Any suggestions or references you can point me to?
"
1571,@app.after_request should be able to process a non-response into a response,2015-09-22T14:50:36Z,2015-11-03T15:18:36Z,,,,"That is, the route should be able to return anything and after_request should be able to take that and convert it into an actual response object.

Use case: all of our routes return dicts, which we serialize to JSON through a decorator. We have no non-JSON routes. I'd like to remove our decorator and make this change application-wide instead.
"
1570,support unicode filename at download attachement by send_file in helper lib,2015-09-17T05:55:39Z,2015-09-18T07:59:26Z,,,,"current send_file implement a traditional method to assign download filename,
according to RFC 5987 there is a method to have utf-8 encoding in it which is support by all modern browser nowadays,

I use this line to make it

```
rv.headers['Content-Disposition'] = ""attachment; filename*=UTF-8''%s""%(urllib.quote_plus(filename.encode('utf-8')))
```

I am not using headers.add,
because you can see there have to use asterisk character which is nasty

ref:
- http://stackoverflow.com/questions/93551/how-to-encode-the-filename-parameter-of-content-disposition-header-in-http
- http://tools.ietf.org/html/rfc5987
"
1569,Flask Streaming Jsonify,2015-09-14T10:12:00Z,2015-10-13T15:23:22Z,,,,"Jsonify doesn't work with streaming in flask.
If I have a generator in a method that calls `yield jsonify({'test':'test'})`

and I call the generator with 
`return Response(stream_with_context(generator()), mimetype='application/json')`

then flask throws an error saying `application must write bytes`. 
For now I have resorted to using plain python `json.dumps(dict)`
"
1568,Url conflict assert,2015-09-14T03:10:59Z,2017-04-25T11:21:23Z,,,,"This PR is an attempt to reconcile the fact that you can't have two routes with the same function name but you can create two routes with the same URL.

```
from flask import Flask
app = Flask(""the_flask_module"")

@app.route(""/hello"")
def hello_page():
    return ""I'm a hello page""

@app.route(""/different_route"")
def hello_page():
    return ""Different route""
```

will throw an `AssertionError`

but 

```
@app.route(""/hello"")
def end_point1():
    return ""I'm a hello page""

@app.route(""/hello"")
def end_point2():
    return ""Different route""
```

wont. In fact the second route is unreachable. 

This PR checks to see if three conditions are true before raising an assertion. The new rule has to have a `subdomain`, `url_path`, and one `method` that overlap with a current rule in the `self.url_map object`.

There's a couple of wonky pieces in this pull request that were required to get all of the unit tests to pass.

```
if prior_rule.rule == ""/static/<path:filename>"":
    continue
```

was required to get blueprints to not throw an assertion since each blueprint registers a `""/static/<path:filename>""` rule for each blueprint. I tried to find a way to not have to use a static string but alas I failed. 

Secondly 

```
 methods_minus_required = ((rule.methods & prior_rule.methods) 
     - required_methods)
```

is used to check for all explicitly registered methods for a route since there were a bunch of cases where the `OPTIONS` method was implicitly added to rules that shared a url_path.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1568)

<!-- Reviewable:end -->
"
1567,"Readme changed to markdown, improved",2015-09-11T21:23:35Z,2015-09-11T21:32:55Z,,,,"Added links to websites and repositories. Changed the file to a markdown and now looks better. No contents changed
"
1566,test,2015-09-07T12:29:02Z,2015-09-07T12:32:08Z,,,,"TEST
"
1565,Missing apostophe.,2015-08-27T04:33:32Z,2015-10-31T02:20:27Z,,,,
1564,Popping application context after every request,2015-08-26T23:01:54Z,2015-08-27T13:58:36Z,,,,"I have tests that make multiple requests.  After each test I'd like to pop the application context so it mimics the production environment as close as possible.  Basically I'm looking to prevent any persistence in `g` between requests.

What is the least painful way of implementing this?

Sample test:

``` python
def test(self):
    user_get = self.client.get('user')
    # pop context
    jobs_get = self.client.get('jobs')
```
"
1563,Flask g persisting across requests in test suite,2015-08-26T22:31:07Z,2015-08-26T22:40:32Z,,,,"`g` seems to be persisting longer than it should.  My understanding is that `g` only exists during a request's context.  It shouldn't be persisted across multiple separate requests.

**My auth handling**
When you visit the resource a token is used to determine who you are.  Once we get the user_id from that token we persist it like the below code.

``` python
if '_auth' not in g:
    g._auth = Auth(user_id=user)
return g._auth
```

**Test Setup**

``` python
def test(self):
    get = self.client.get('users', headers=make_headers())
    raise Exception(g._auth.user_id) # returns the user id outside the request context
```

Any ideas as to why `g` would be available?  Let me know if you need more information.  I wasn't sure how much to include.
"
1562,Flask app installed as egg raises builtins.NotADirectoryError for templates,2015-08-26T20:53:57Z,2015-12-07T16:28:40Z,,NotADirectoryError,NotADirectoryError: [Errno 20] Not a directory: '/home/david/.virtualenvs/test/lib/python3.4/site-packages/hxl_proxy-0.3-py3.4.egg/hxl_proxy/templates/error.html',"I've created a MANIFEST.in file and added the include_package_data flag to setup as recommended in #84 and have confirmed that the template files do appear in the egg file installed into my virtualenv:

```
(test)david@snape:~$ unzip -l .virtualenvs/test/lib/python3.4/site-packages/hxl_proxy-0.3-py3.4.egg | grep error
      154  2015-08-26 16:48   hxl_proxy/templates/error.html
```

When I run from the source directory, all is fine.  When I try to run from the egg installed in the virtualenv, I get the following error:

```
Traceback (most recent call last):
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Flask-0.10.1-py3.4.egg/flask/app.py"", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Flask-0.10.1-py3.4.egg/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Flask-0.10.1-py3.4.egg/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Flask-0.10.1-py3.4.egg/flask/_compat.py"", line 33, in reraise
    raise value
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Flask-0.10.1-py3.4.egg/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Flask-0.10.1-py3.4.egg/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Flask-0.10.1-py3.4.egg/flask/app.py"", line 1379, in handle_user_exception
    return handler(e)
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/hxl_proxy-0.3-py3.4.egg/hxl_proxy/controllers.py"", line 44, in error
    return render_template('error.html', message=str(e)), status
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Flask-0.10.1-py3.4.egg/flask/templating.py"", line 127, in render_template
    return _render(ctx.app.jinja_env.get_or_select_template(template_name_or_list),
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Jinja2-2.8-py3.4.egg/jinja2/environment.py"", line 851, in get_or_select_template
    return self.get_template(template_name_or_list, parent, globals)
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Jinja2-2.8-py3.4.egg/jinja2/environment.py"", line 812, in get_template
    return self._load_template(name, self.make_globals(globals))
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Jinja2-2.8-py3.4.egg/jinja2/environment.py"", line 774, in _load_template
    cache_key = self.loader.get_source(self, name)[1]
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Flask-0.10.1-py3.4.egg/flask/templating.py"", line 60, in get_source
    return loader.get_source(environment, local_name)
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Jinja2-2.8-py3.4.egg/jinja2/loaders.py"", line 171, in get_source
    f = open_if_exists(filename)
  File ""/home/david/.virtualenvs/test/lib/python3.4/site-packages/Jinja2-2.8-py3.4.egg/jinja2/utils.py"", line 151, in open_if_exists
    return open(filename, mode)
NotADirectoryError: [Errno 20] Not a directory: '/home/david/.virtualenvs/test/lib/python3.4/site-packages/hxl_proxy-0.3-py3.4.egg/hxl_proxy/templates/error.html'
```
"
1561,add automatic pep8 test in travis,2015-08-26T05:01:08Z,2016-01-25T20:26:13Z,,,,"It's very useful and easy to modify travis.yml。
"
1560,Fix static route when using host_matching = True,2015-08-23T14:30:27Z,2017-04-07T14:31:54Z,,,,"Change `Flask.__init__` to accept two new keyword arguments, `host_matching` and `static_host`.

This enables host_matching to be set properly by the time the constructor adds
the static route, and enables the static route to be properly associated with
the required host.

Previously, you could only enable host_matching once your app was already
instantiated (e.g. `app.url_map.host_matching = True`), but at that point
the constructor would have already added the static route without host matching
and an associated host, leaving the static route in a broken state.

Fixes #1559.
"
1559,"url_for('static', _external=True) gives bogus url with app.url_map.host_matching = True",2015-08-23T02:10:45Z,2017-04-07T14:31:54Z,,,,"``` python
app = Flask(__name__)
app.url_map.host_matching = True
app.url_map._rules_by_endpoint['static'][0].host = 'mydomain.com'  # XXX better way to do this?
with app.test_request_context():
    print url_for('static', filename='foo', _external=True)
```

=>
`'http:///static/foo'`

Expected `'http://mydomain.com/static/foo'`.

Am I missing something, or is this a bug?

Thanks for looking and for the great work on Flask.
"
1558,Update uwsgi/nginx deployment documentation,2015-08-21T23:10:11Z,2015-11-12T12:08:56Z,,,,"This fixes #1464 and adds some documentation on how to deploy with virtual environments.
"
1557,Attempted to improve readability of code examples.,2015-08-19T21:42:12Z,2016-01-25T15:56:57Z,,,,"See commits' details for justification.
"
1556,PDF and zipped HTML doc links are broken in Flask homepage,2015-08-19T17:00:48Z,2015-10-31T21:39:17Z,,,,"Broken:
http://flask.pocoo.org/docs/flask-docs.pdf
http://flask.pocoo.org/docs/flask-docs.zip

Working:
http://flask.pocoo.org/docs/0.10/
"
1555,request.files blocks indefinitely on iOS Safari file upload,2015-08-16T07:17:59Z,2016-04-05T06:42:47Z,,,,"Flask (0.10.1)
Flask-Cors (2.1.0)

What happens is on file upload from an iPhone 6 Safari, the flask server hangs when trying to access request.files.  The same iPhone with Chrome works fine.  I tried an even bigger file with Chrome, works fine too, so size doesn't seem to be the issue.

```
@app.route(""/upload"", methods=[""POST""])
def upload():
  print request.files
```

For debugging purposes, here's what the environ shows with the Safari client:

```
   'environ': {'CONTENT_LENGTH': '1496190',                                                                                                                                                                     
               'CONTENT_TYPE': 'multipart/form-data; boundary=----WebKitFormBoundaryaQ6AnBdQhCxhm4b1',                                                                                                          
               'HTTP_ACCEPT': 'application/json, text/plain, */*',
               'HTTP_ACCEPT_ENCODING': 'gzip, deflate',
               'HTTP_ACCEPT_LANGUAGE': 'en-us',
               'HTTP_CONNECTION': 'keep-alive',
               'HTTP_HOST': '192.168.1.155:5000',
               'HTTP_ORIGIN': 'http://192.168.1.155:3000',
               'HTTP_REFERER': 'http://192.168.1.155:3000/',
               'HTTP_USER_AGENT': 'Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A365 Safari/600.1.4',                                     
               'PATH_INFO': '/upload',
               'QUERY_STRING': '',
               'REMOTE_ADDR': '192.168.1.137',                                                                                                                                                                  
               'REMOTE_PORT': 52871,                                                                                                                                                                            
               'REQUEST_METHOD': 'POST',
               'SCRIPT_NAME': '',
               'SERVER_NAME': '0.0.0.0',
               'SERVER_PORT': '5000',
               'SERVER_PROTOCOL': 'HTTP/1.1',
               'SERVER_SOFTWARE': 'Werkzeug/0.10.4',
               'werkzeug.request': <Request 'http://192.168.1.155:5000/upload' [POST]>,
               'werkzeug.server.shutdown': <function shutdown_server at 0x10bab2938>,                                                                                                                           
               'wsgi.errors': <open file '<stderr>', mode 'w' at 0x10ac741e0>,                                                                                                                                  
               'wsgi.input': <socket._fileobject object at 0x10baade50>,                                                                                                                                        
               'wsgi.multiprocess': False,
               'wsgi.multithread': False,
               'wsgi.run_once': False,
               'wsgi.url_scheme': 'http',
               'wsgi.version': (1, 0)},
```

And the HTML is classic:

```
<form method=""POST"" enctype=""multipart/form-data"">
  <input type=""file"" name=""thefile"" ...
```
"
1554,Help needed: 404 error on every page dynamic page of the application ,2015-08-11T08:18:15Z,2015-08-11T15:00:02Z,,,,"Hello,

I'm running into the problem described in stackoverflow [here](http://stackoverflow.com/questions/24437248/unexplainable-flask-404-errors).

The code is running on the server normally and on my colleagues computers. Though on my computer for every route is returning a 404 error, though static content is working. The capture below shows that I'm working on the good port and the route exists.

<img width=""1268"" alt=""capture d ecran 2015-08-11 a 10 13 26"" src=""https://cloud.githubusercontent.com/assets/4437159/9193157/abb09062-4011-11e5-98ef-7f8c7c17530a.png"">

I reinstalled the virtuelenv and I still have this issues. Do you guys have ever encountered this problem?
I'm using Python 2.7.6 and flask:
Flask==0.10.1
Werkzeug==0.10.4
Jinja2==2.7.3
Any answer is welcome.

Cheers,
Alexis.
"
1553,Errors if server runs from in virtualenv.,2015-08-07T14:48:00Z,2015-08-07T15:59:04Z,,,,"Start with server not install in virtualenv (works fine).

```
# setup env                                                                 
cd /tmp                                                                     
rm -rf dataserv                                                             
git clone https://github.com/Storj/dataserv                                 
cd dataserv                                                                 
virtualenv -p /usr/bin/python3 env                                          
env/bin/python setup.py develop                                             

# start server (XXX have to kill process manually)                          
./env/bin/python -m dataserv.app &                                          
sleep 5                                                                     

# test calls                                                                
curl http://127.0.0.1:5000/api/register/1EdCc5bxUAsdsvuJN48gK8UteezYNC2ffU  
curl http://127.0.0.1:5000/api/height/1EdCc5bxUAsdsvuJN48gK8UteezYNC2ffU/2  
```

Start with server install in virtualenv (raises 404s for some calls).

```
# setup env                                                                 
cd /tmp                                                                     
rm -rf dataservenv                                                          
virtualenv -p /usr/bin/python3 dataservenv                                  
./dataservenv/bin/pip install dataserv                                      

# start server (XXX have to kill process manually)                          
./dataservenv/bin/python -m dataserv.app &                                  
sleep 5 # wait for server to start                                          

# test calls                                                                
curl http://127.0.0.1:5000/api/register/1EdCc5bxUAsdsvuJN48gK8UteezYNC2ffU  
curl http://127.0.0.1:5000/api/height/1EdCc5bxUAsdsvuJN48gK8UteezYNC2ffU/2  
```
"
1552,Flask Truck Factor,2015-08-07T12:13:07Z,2015-09-10T21:38:24Z,,,,"As part of my PhD research on code authorship, we calculated the Truck Factor (TF) of some popular GitHub repositories.

As you probably know, the [Truck (or Bus) Factor](https://en.wikipedia.org/wiki/Bus_factor) designates the minimal number of developers that have to be hit by a truck (or quit) before a project is incapacitated. In our work, we consider that a system is in trouble if more than 50% of its files become orphan (i.e., without a main author).

More details on our work in this preprint: https://peerj.com/preprints/1233

We calculated the TF for **Flask** and obtained a value of **1**.

The developer responsible for this TF is:

Armin Ronacher - author of 90% of the files 

To validate our results, we would like to ask **Flask** developers the following three brief questions:

(a) Do you agree that the listed developer is the main developer of **Flask**?

(b) Do you agree that **Flask** will be in trouble if the listed developer leave the project (e.g., if he wins in the lottery, to be less morbid)?

(c) Does **Flask** have some characteristics that would attenuate the loss of the listed developer (e.g., detailed documentation)?

Thanks in advance for your collaboration,

Guilherme Avelino
PhD Student
Applied Software Engineering Group (ASERG)
UFMG, Brazil
http://aserg.labsoft.dcc.ufmg.br/
"
1551,Backslash doesn't work with string URL Converter,2015-08-07T01:01:37Z,2015-08-11T01:15:32Z,,,,"I have this route

```
@app.@app.route(/resource/<string:myresource>/details')
def handler(myresource):
  ....
  ...
```

When I have a leading backslash in the name, it doesn't seem to be getting routed correctly.

This works:

```
 /resource/testresource/details/
```

This does not work:

```
 /resource/%5Ctestresource/details
```

Is this expected? What am I doing wrong?
"
1550,Flask function decorator run at defintion time and call time?,2015-08-05T01:31:22Z,2015-08-05T02:42:32Z,,,,"I'm trying to implement a decorator function in Flask that does two things: register a page route and add some things to my DB on definition time, and then on runtime, when a request is made to a page it processes whether a user is authenticated.

I know that I can do these in two separate decorator functions, but this won't work because I eventually need to process the same set of information (app, rule, access groups, etc.) at both definition time and runtime.

The code below is what I have been messing with, but I have not been able to get it to work. It compiles and you are able to see ""Definition time"" in the console and ""index"" in the browser, but ""Runtime"" never gets printed. Can anyone suggest what I may be doing wrong?

``` python
from flask import Flask
from functools import wraps

app = Flask(__name__)


def register(app, rule, **options):
    def wrapper(f):
        print ""Definition time""
        endpoint = options.pop('endpoint', f.__name__)
        access_groups = options.pop('access_groups', None)
        methods = options.get('methods', ['GET'])

        app.add_url_rule(rule, endpoint, f, **options)

        @wraps(f)
        def wrapped(*args, **kwargs):
            print ""Runtime""
            return f(*args, **kwargs)
        return wrapped

    return wrapper


@register(app, '/', methods=['GET', 'POST'], access_groups=['all-access'])
def index():
    return ""index""

if __name__ == '__main__':
    app.run(debug=True)
```
"
1549,Formatted readme,2015-08-04T16:06:34Z,2015-08-05T10:52:10Z,,,,
1548,Support zero-ceremony sub-app mounting (including Blueprints),2015-08-03T13:05:24Z,,blueprints,,,"#1361, #1498, and #1494 seem to indicate that some people don't see Blueprints as templates for application behavior, but want to treat them as little self-contained applications that are composed onto the main application.  Effectively, we would be taking [the app composition pattern](http://flask.pocoo.org/docs/0.10/patterns/appdispatch/#app-dispatch) and building it into the API.

What sort of an API would we need to properly support app composition for such purposes, since that would solve all of these use cases (404 / 405 error handlers at the ""Blueprint"" level, only able to see its own templates, etc.)?

The minimum API is `Flask#mount_app(app_or_blueprint)` - but that still leaves a few questions:
1. Does the parent app need to be able to route to sub-app routes via `url_for`?
2. Does the child app need to be able to route to parent or sibling-app routes via `url_for`?
3. Ditto for `static` and `templates` (although #1361 suggests that such uses would want the static and template folders to be distinct).
4. Other questions which I am certainly missing

What do _you_ need from Blueprints?  What else would you _expect_ `Flask#mout_app` to do?
"
1547,Quickstart > File Uploads > incorrect import: secure_filename,2015-08-02T08:21:41Z,2015-08-02T16:40:07Z,,Not,Not:,"It should be imported as:

> from werkzeug.utils import secure_filename

Not:

> from werkzeug import secure_filename

see http://werkzeug.pocoo.org/docs/0.10/utils/
"
1546,Broken links on website,2015-08-02T03:56:01Z,2015-10-31T21:03:45Z,,,,"Hi, 
looks like you have some issues with website:
Documentation:
- http://flask.pocoo.org/docs/flask-docs.pdf returns 404
- http://flask.pocoo.org/docs/flask-docs.zip returns 404
- feedback.flask.pocoo.org ""Server not found""

An main question (why I try to use ""feedback""):
- Any plans to full Python 3 support?
"
1545,Request.form data dict... Could we modify the structure?,2015-08-02T03:08:59Z,2015-08-02T21:35:47Z,,,,"using the following html form

``` HTML
<h1>Debug Form</h1>
<form action=""/debug"" method=""POST"">
<input name=""item[1][name]"" value="""" />
<input name=""item[2][name]"" value="""" />
<button type=""submit"">test</button>
</form>
```

to the following flask application method / view

``` python
@app.route('/debug', methods=[""GET"",""POST"",""PUT"",""PATCH"",""DELETE""])
def debug_info():
    return jsonify({""data"":request.data,""formdata"":request.form})
```

I get

``` JSON
{
  ""data"": """", 
  ""formdata"": {
    ""item[1][name]"": ""fdhnnhdsfsdslkkl"", 
    ""item[2][name]"": ""djdfhdjfh""
  }
}
```

I expected to see

``` JSON
{
  ""data"": """", 
  ""formdata"": {
    ""item"":[
      {
         ""name"": ""fdhnnhdsfsdslkkl""
       },
       { 
         ""name"": ""djdfhdjfh""
       }
    ]
  }
}
```

The first and actual output requires further, more explicit parsing, from a sub-optimal data structure to achieve a nice dictionary; but I cannot see how the flat structure of the request.form object could be helping anyone...
"
1544,flask blueprint ,2015-08-01T18:48:32Z,2015-08-02T15:21:11Z,,,,"is a good function
"
1543,Start recommending Python 3,2015-08-01T10:04:41Z,2015-08-02T15:23:24Z,,,,"In the docs the section [The Status of Python 3](https://github.com/mitsuhiko/flask/blob/master/docs/advanced_foreword.rst) states that you _strongly recommend using Python 2.6 and 2.7_.

Well, isn't it about time to officially recommend to use Python 3 instead? Has this been discussed before (recently)?

I myself at least never ran in any problems using Python 3 with Flask. Though, admittedly, I don't have any large projects or unusual dependencies - or maybe I just instinctively avoid anything that's not Python 3 compatible and thus never noticed problems.

Still, it seems to me that a recommendation to Python 3 is reasonable, unless you have special dependencies, and it doesn't look to me that there are many (active) Flask-\* packages that require Python 2.
"
1542,error correction json array serialization ,2015-07-30T14:34:08Z,2015-07-30T15:26:54Z,,,,"I made the changes to correct the error when serializing json array
"
1541,Returned 200 for illegal request url,2015-07-28T03:03:24Z,2015-08-06T13:17:09Z,,,,"Flask version is 0.10.1 and the below is code of server side.

``` python
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello World!'

if __name__ == '__main__':
    app.run()
```

The below is input and output of `netcat` tool.

``` http
GET foo://127.999.999.999/ HTTP/1.1

HTTP/1.0 200 OK
Content-Type: text/html; charset=utf-8
Content-Length: 12
Server: Werkzeug/0.10.4 Python/2.7.10
Date: Tue, 28 Jul 2015 02:56:03 GMT

Hello World!
```
"
1540,Jinja2 template not found on Large app how to wiki,2015-07-26T19:32:21Z,2015-07-26T20:01:51Z,,,,"I am using flask-wtf v0.12
Regarding to this guide: https://github.com/mitsuhiko/flask/wiki/Large-app-how-to

![screen shot 2015-07-26 at 2 28 21 pm](https://cloud.githubusercontent.com/assets/2663509/8895502/ded8471c-33a2-11e5-8d94-50aef9a33875.png)

Does anyone know is the guide obsolete or am i missing something on the setup?
"
1539,Improve function with_metaclass(),2015-07-22T23:34:06Z,2015-07-27T17:25:27Z,,,,"The idea of a metaclass _""that replaces itself with the actual metaclass""_ is really clever. Yet I cannot help but suspect that the current implementation of function `with_metaclass` is just a bit too much.

Why does the dummy metaclass extend the one to apply?

It never utilizes any of the base class' resources, except for the base class itself. Since this is done by direct invocation (not via `super()` or something), there should be no need to inherit from the caller-provided type in the first place.

Furthermore, given that the above obvservation is correct, there should be no need to explicitly utilize `type.__call__` and `type.__init__` any more. Not only because one can directly inherit from `type` here, but also because both seem to be required due to the aforementioned inheritance only: If the given `meta` class implements custom magic, the creation of the `temporary_class` could fail. Or even worse; succeed but silently misinterprete arguments.

Speaking of the `temporary_class` creation (and still assuming all of the above assumptions to be correct): There's no need to do that via the `metaclass` constructor at all, which actually saves not only the additional function call but also the condition within `__new__`.

Given I didn't miss something (and there is indeed no actual reason for the metaclass to extend the one to apply), then I believe the patch suggested with this pull request to significantly improve the code without changing any of the expected behavior.
"
1538,Moved open_session call from RequestContext.push to wsgi_app,2015-07-22T12:27:38Z,2017-04-22T21:43:26Z,session,,,"Fixes #1528

New approach has only one drawback: in any custom tests that require sessions, you need to call `ctx_open_session` directly. I fixed existing tests in flask, but any user test may fail.
"
1537,use blueprint specified template folder,2015-07-17T22:42:27Z,2016-06-26T23:06:14Z,,,,"Fixes issue #1361.
"
1536,Support argument-less factory functions in CLI,2015-07-17T11:23:42Z,2016-09-18T12:18:01Z,,TypeError,TypeError: create_app() takes exactly 1 argument (0 given),"Since the cli module does does fairly aggressive autodiscovery of a
flask application object anyway, supporting argument-less factory
functions is not far from the current behavior.

Argument-less factory function do happen if you configuration is based on your environment. There's a whole pattern around it (see http://12factor.net) that Heroku uses. I've written a Flask-Extension to support it (http://github.com/mbr/flask-appconfig) and I want to make sure it integrates well with the 1.0 CLI features.

While it is possible to write a script to get the same functionality, this is a bit of a convention-over-configuration issue and seeing that the CLI already searches pretty thoroughly for an app instance, looking for a callable `create_app()` function seems reasonable (and very useful!) to me.

This may get a bit confusing if `create_app()` does exepct arguments, but the resulting 

```
TypeError: create_app() takes exactly 1 argument (0 given)
```

seems very clear.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1536)

<!-- Reviewable:end -->
"
1535,"Revert ""make external_url_handler example py3 compliant""",2015-07-16T10:17:42Z,2015-07-16T10:20:33Z,,,,"Sorry, i should have tested this first and not rely on my IDE.

Actually in python 2.7 this causes `AttributeError: 'BuildError' object has no attribute 'with_traceback'`

Therefore this has to be reverted.

Reverts mitsuhiko/flask#1534
"
1534,make external_url_handler example py3 compliant,2015-07-16T00:46:29Z,2015-07-16T09:49:09Z,,,,"- a raises statement with multiple values is no longer allowed in python 3
- It's just a documentation change, no functionality changed.
"
1533,fix UnboundLocalError in handle_url_build_error,2015-07-14T23:23:05Z,2015-07-16T10:05:25Z,,,,"- caused by changes in the execution model of python 3 where the alias of an except clause is cleared on exit of the except
- tested with python 2.7.10 and 3.4.3
"
1532,Fixed gevent introduction to use libev instead of libevent,2015-07-14T19:37:28Z,2015-07-14T20:44:51Z,,,,"Fix #1531 
"
1531,"gevent has been updated to use libev instead of livevent, docs needs to be updated",2015-07-14T18:54:54Z,2015-07-14T20:44:51Z,,,,"Since gevent 1.0, it has switched from libevent to libev, please refer: http://www.gevent.org/ and http://blog.gevent.org/2010/02/27/why-gevent/.

I would like to submit a pull request for this doc page: http://flask.pocoo.org/docs/0.10/deploying/wsgi-standalone/, please confirm this update and I will prepare the pull request, thanks!
"
1530,Added missing app.run line in jqueryexample.py,2015-07-12T15:40:22Z,2015-07-12T16:49:55Z,,,,"Fixes issue #1529 
Signed-off-by: Aayush Kasurde aayush.kasurde@gmail.com
"
1529,"Missing ""app.run"" in source code of example ""AJAX with jQuery""",2015-07-12T15:30:42Z,2015-07-12T16:50:18Z,,,,"While debugging issue #1517 , found that `app.run()` line is missing in `jqueryexample.py`
"
1528,Application/request stack corruption if unhandled exception is raised in session interface,2015-07-12T07:06:49Z,2017-04-22T21:43:26Z,,,,"RequestContext push is called in [wsgi_app method](https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L1952), outside try..finally block. In [push() method](https://github.com/mitsuhiko/flask/blob/master/flask/ctx.py#L332) application's open_session call takes place, which can possibly lead to exception. But, since original call is not in try..finally block, removal of stack top never takes place. This leads to following problems:
### 1. Application context stack never updates again

RequestContext.push() only [checks](https://github.com/mitsuhiko/flask/blob/master/flask/ctx.py#L316) that application context exists or belongs to current application, but same rules apply to previous context.
### 2. Request context stack grows

Again, request context stack is pushed, but never removed. Actually just a memory leak :)
### 3. Misleading code comment about open_session usage

Inspired by [this comment](https://github.com/mitsuhiko/flask/blob/master/flask/ctx.py#L328), i started to develop multi-tenant application, and found nothing but disappointment. **You can't actually access request_context before open_session interface call.** This means, you can't configure which database to use before opening a session.
## My proposition.

Move open_session call to full_dispatch_request, and add interfaces and methods, similar to before_request - before_open_session, or call before_request before opening session (may break code that depends on session interface)
"
1527,Update docs at http://flask.pocoo.org/docs/0.10/patterns/fileuploads/,2015-07-11T11:54:23Z,2015-07-12T16:35:39Z,,,,"There is a misprint at http://flask.pocoo.org/docs/0.10/patterns/fileuploads/

`from werkzeug import secure_filename`

which is fixed in this [this repo](https://github.com/mitsuhiko/flask/blob/master/docs/patterns/fileuploads.rst)

`from werkzeug.utils import secure_filename`
"
1526,TypeError: unbound method __init__() must be called with AssertionError instance as first argument (got FormDataRoutingRedirect instance instead),2015-07-10T11:59:12Z,2015-07-15T11:32:24Z,,,,"I'm testing the behavior of a POST endpoint that issues a redirect.

I get the following traceback:

```
env/local/lib/python2.7/site-packages/flask/app.py:1820: in wsgi_app
    response = self.make_response(self.handle_exception(e))
env/local/lib/python2.7/site-packages/flask/app.py:1403: in handle_exception
    reraise(exc_type, exc_value, tb)
env/local/lib/python2.7/site-packages/flask/app.py:1817: in wsgi_app
    response = self.full_dispatch_request()
env/local/lib/python2.7/site-packages/flask/app.py:1477: in full_dispatch_request
    rv = self.handle_user_exception(e)
env/local/lib/python2.7/site-packages/flask/app.py:1381: in handle_user_exception
    reraise(exc_type, exc_value, tb)
env/local/lib/python2.7/site-packages/flask/app.py:1475: in full_dispatch_request
    rv = self.dispatch_request()
env/local/lib/python2.7/site-packages/flask/app.py:1453: in dispatch_request
    self.raise_routing_exception(req)
env/local/lib/python2.7/site-packages/flask/app.py:1439: in raise_routing_exception
    raise FormDataRoutingRedirect(request)
env/local/lib/python2.7/site-packages/flask/debughelpers.py:68: in __init__
    AssertionError.__init__(self, ''.join(buf).encode('utf-8'))
E   TypeError: unbound method __init__() must be called with AssertionError instance as first argument (got FormDataRoutingRedirect instance instead)
```

I understand the context around why we need to raise FormDataRoutingRedirect - and don't mind asserting that it's raised in my test. The problem here is the `TypeError: unbound method __init__() must be called with AssertionError`.

I'll see if I can fix it a bit later but wanted to report it first. I checked the other reported issues.

I'm using Python 2.7.9 and Flask 0.10.1
"
1525,Flask + eventlet slow response time,2015-07-07T11:02:45Z,2016-01-26T17:29:35Z,,,,"I have an issue with Flask + eventlet server, details in [this link](http://serverfault.com/q/703992/172260).

I integrated Flask with Openstack keystone middleware to authenticate for my Flask API server.

```
config_file = None
if config_file:
    prepare_service([None, '--config-file', config_file])
else:
    prepare_service()

application = setup_app()
application.wsgi_app = middleware.install_keystone_middleware(application.wsgi_app, cfg.CONF)
```

I profiled in Flask server and all things is normal, the server running time for each APIs is very low, from 2 to 20 ms.

```
--------------------------------------------------------------------------------                                           [5994/9927$
PATH: '/api/line_usages'
         6913 function calls (6817 primitive calls) in 0.019 seconds

   Ordered by: internal time
   List reduced from 748 to 5 due to restriction <5>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       50    0.001    0.000    0.002    0.000 /usr/lib/python2.7/logging/__init__.py:451(format)
       50    0.001    0.000    0.004    0.000 /opt/dev_myservice/openstack/common/log.py
:626(format)
        2    0.001    0.000    0.001    0.000 {method 'query' of '_mysql.connection' objects}
       50    0.001    0.000    0.001    0.000 {method 'write' of 'file' objects}
       25    0.001    0.000    0.001    0.000 /usr/lib/python2.7/logging/__init__.py:242(__init__)
```

But the response to client is still long. What is the reason for Flask slow response time and how can I solve this?
"
1524,error in user_timeline,2015-07-04T23:25:12Z,2015-07-04T23:35:35Z,,TypeError,"TypeError: string indices must be integers, not unicode","I'm getting the following error:

Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1836, in **call**
    return self.wsgi_app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""flask/examples/minitwit/minitwit.py"", line 122, in user_timeline
    [username], one=True)
TypeError: string indices must be integers, not unicode
"
1523,Relative import doesn't work in debug mode,2015-07-01T11:11:36Z,2015-07-01T12:05:27Z,,SystemError,"SystemError: Parent module '' not loaded, cannot perform relative import","I get an exception when I attempt to use a relative import with Flask in debug mode.
### Steps to reproduce

My package looks like this:

```
mypkg\
  __init__.py
  mymodule.py
```

Here's `__init__.py`:

```
xyz = 123
```

And in `mymodule.py`:

```
from flask import Flask
from . import xyz

app = Flask(__name__)
app.run(debug=True)
```

Run the application using `python -m mypkg.mymodule`. I'm using Python 3.4.3 on a Windows machine, with Flask 0.10.1 (the version from PyPI).
### Actual results

The usual ""you attempted to use a relative import but you're not in a package"" exception:

```
Traceback (most recent call last):
  File ""...\mymodule.py"", line 2, in <module>
    from . import xyz
SystemError: Parent module '' not loaded, cannot perform relative import
```

If you remove `debug=True`, or use an absolute import (`from mypkg import xyz`), there is no error. The error persists if you name your module `__main__.py` (instead of `mymodule.py`) and use `python -m mypkg`. The error persists if you attempt to import a name from a submodule of the package (it's nothing to do with the import being from `__init__.py`).

I'm guessing it's something to do with Flask's magical reloading of edited files in debug mode.
### Expected results

No error; `xyz` is imported as usual.
"
1522,Merge pull request #1 from mitsuhiko/master,2015-06-30T08:16:48Z,2015-06-30T14:52:51Z,,,,"合并原作者代码
"
1521,Better docs for app context and it's solutions,2015-06-26T23:54:21Z,2016-06-02T21:15:24Z,docs,,,"I've been using Flask for about a month now and i can say that it's pretty awesome.

The one thing that annoys me is the ""application context"" and it's lack of proper documentation.

I understand that app context makes you able to instantiate multiple apps in a single python process. But i've been thinking for quite a while about what is a proper use case for this? can the documentation provide an example about why and how to do this?

In addition, if faced with ""working outside application context"" exception, how do you overcome this? for example in a celery task. Do we use something like, [Flask Celery Helper](https://github.com/Robpol86/Flask-Celery-Helper)? Because even using the Celery object alone would still result in such exception being raised inside whatever we do inside the celery task itself. That has been kind of a debugging nightmare.

Many Thanks
"
1520,"fixed some punctuation, fixed a few errors, in service of readability",2015-06-26T12:42:02Z,2015-07-21T11:41:44Z,,,,
1519,added comma for readability in first sentence of WTForms,2015-06-26T12:33:10Z,2015-06-26T12:37:32Z,,,,
1518,Any plans for new versions? Maybe 1.0?,2015-06-25T18:13:42Z,2015-06-30T17:22:55Z,,,,"Hello everybody.

Please, forgive my poor english, and do not get me wrong, my question is not malicious.

Actually, are any plans to reach version 1.0? Or at least reach a new version?

1.0, or a more fluid release versions can be a way to attract more users and developers.

Greetings, and thanks for the work you do in Flask.
"
1517,"sourcecode from ""AJAX with jQuery"" not working?",2015-06-24T12:58:51Z,2015-07-12T20:42:13Z,,,,"Hi,

I just downloaded the sourcecode for the AJAX with jQuery example (http://flask.pocoo.org/docs/0.10/patterns/jquery/). 

When i try and run index.html, it gives me an error: ""Uncaught ReferenceError: $ is not defined"" for index.html:5.
For layout.html, it gives 2 errors:
""GET http://localhost/templates/script.js"" for layout.html:5
""Uncaught SyntaxError: Unexpected token {"" for layout.html:7

Consequently, the example doesn't work as no result is generated if you put 2 numbers in the input boxes.

Cheers
"
1516,cross domain,2015-06-24T12:57:45Z,2015-10-31T21:07:39Z,,,,"i met cross-domain and i use this decorate to solve this problem,
    http://flask.pocoo.org/snippets/56/
but only if
@crossdomain(origin='*') 
can success,and when i try to point a specific domain such as @crossdomain(origin=""test.123.com"") or 
@crossdomain(origin=[""test.123.com""]), it failed. what should i do to point a specific domain?
i need help, thx.
"
1515,turn on autoescape for flask.templating.render_template_string,2015-06-24T05:19:16Z,2015-07-04T21:42:33Z,,,,"Previous pull request was #1176
"
1514,Update docs/quickstart.rst to be consistent with official website,2015-06-24T03:04:20Z,2015-06-24T03:06:09Z,,,,"Update the first example program in documentation to be consistent with the official website.
"
1513,Does the 'docs/quickstart.rst:A Minimal Application' missed something?,2015-06-23T13:18:20Z,2015-06-24T07:59:19Z,,,,"I think the first application should be (and the official site is):

``` python
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello World!'

if __name__ == '__main__':
    app.run()
```

In this doc it's missing:

``` python
if __name__ == '__main__':
    app.run()
```
"
1512,No more than 5XX Requests/Second possible,2015-06-23T10:37:21Z,2015-06-26T13:23:47Z,,,,"Hi. 
I wrote a post about benchmarking some web frameworks and found a strange bug in Flask.
Requests per seconds were very low and not above 600 req/s. @miguelgrinberg contacted me about it and first thought that the issue was on my side but he also experienced the same behaviour.

Here is the Link to the Blogpost:
https://medium.com/@tschundeee/express-vs-flask-vs-go-acc0879c2122

Something might be blocking requests in Flask or Werkzeug.

I am willing to help towards inverstigation. 
Cheers Bijan
"
1511,TaggedJSONSerializer loads(dumps(..)) breaks on certain values,2015-06-20T16:25:38Z,2017-06-02T17:26:40Z,,,,"``` diff
diff --git a/tests/test_basic.py b/tests/test_basic.py
index 695e346..1e064ff 100644
--- a/tests/test_basic.py
+++ b/tests/test_basic.py
@@ -387,6 +387,7 @@ def test_session_special_types():
         flask.session['dt'] = now
         flask.session['b'] = b'\xff'
         flask.session['t'] = (1, 2, 3)
+        flask.session['spacefirst'] = {' t': 'not-a-tuple'}
         return response

     @app.route('/')
@@ -403,6 +404,7 @@ def test_session_special_types():
     assert rv['b'] == b'\xff'
     assert type(rv['b']) == bytes
     assert rv['t'] == (1, 2, 3)
+    assert rv['spacefirst'] == {' t': 'not-a-tuple'}


 def test_session_cookie_setting():
```

While I don't see any cases where this would be likely to result in security problems (it would require custom types that are not safe to recreate with arbitrary arguments AND code that serializes a dict with both the key and value being provided by the user), I don't like that there's any input where `value != loads(dumps(value))` without an exception.

Two ways to fix this:
- raise an exception when trying to encode a dict that has a single item with a key starting with a space.
- tag such dictionaries so they are decoded properly instead of being decoded as if they are a valid tagged it em
"
1510,Remove the deprecated Flask.modules property,2015-06-20T16:10:20Z,2015-06-21T17:37:34Z,,,,
1509,Add pop and setdefault to AppCtxGlobals,2015-06-20T15:53:40Z,2015-06-30T19:33:04Z,,,,"While easy to implement with a custom `app_ctx_globals_class` class, I believe these two methods are useful enough to add them to the default class.

Especially setdefault makes lots of sense if you e.g. cache something on the app context globals and thus want to do something like this:

``` python
cache = g.setdefault('whatever_cache', {})
try:
    return cache['foo']
except KeyError:
    rv = cache['foo'] = get_foo()
    return rv
```
"
1508,where is SESSION_REFRESH_EACH_REQUEST?,2015-06-20T12:28:43Z,2015-06-20T12:39:43Z,,,,"In flask-0.10.1, I can't find `SESSION_REFRESH_EACH_REQUEST` in `default_config`. But `SESSION_REFRESH_EACH_REQUEST` is in the doc. 
That means, in flask-0.10.1, there are 23 elements in `default_config`, but 24 in the doc of the flask.
"
1507,Blueprint url_prefix isn't additive with register_blueprint url_prefix,2015-06-19T00:18:23Z,2016-01-26T18:07:47Z,,,,"So imagine I'm building an API from a set of blueprints like

```
<snip from the signup.py file>
signupbp = Blueprint('signupbp', __name__, url_prefix=""/signup"")

@signupbp.route(""/"")
def signup_start():
    return ""signup_start""

@signupbp.route(""/complete"")
def signup_complete():
    return ""signup_complete""
```

then in my main.py code I do something like:

```
app.register_blueprint(signupbp, url_prefix='/api')
```

I expect to see the following routes:

```
/api/signup/                    signupbp.signup_start   
/api/signup/complete            signupbp.signup_complete
/static/<path:filename>         static                  
```

What I actually see is:

```
/api/                    signupbp.signup_start   
/api/complete            signupbp.signup_complete
/static/<path:filename>  static                  
```

I imagine the url_prefixes should be additive not replacement (in the worse possible way). I've tried all combinations of `/` before and after the url_prefix params.

This is actually a very simplified example - in my API I'm using module names to implement versioning so I can't build the URL into any part of the code before thats suggested as a solution.
"
1506,flash(...) won't work!,2015-06-18T14:44:37Z,2015-06-18T17:14:09Z,,,,"Hello!
The flash(...) function doesn't work at me – it raises an internal server error!

My code:
@app.route('/')
def main():
    flash('This message will be visible!')
    return str(get_flashed_messages())

that's all! And with just return ""xxx"" it works.

What's the problem? I'm using python 2.6.
"
1505,JSON Encoding in Python 3,2015-06-18T12:34:13Z,2015-06-18T13:09:01Z,,,,"I'm trying to port an application to python 3 and ran into this encoding issue with this unit test:

``` python
        with app.test_request_context():
            from flask import jsonify
            test_data = {'test': 1}
            response = jsonify(test_data)
            self.assertEqual(
                response.response,
                [json.dumps({'test': 1}, indent=2)]
            )
```

and getting this:

```
E           AssertionError: Lists differ: [b'{\n  ""test"": 1\n}'] != ['{\n  ""test"": 1\n}']
E
E           First differing element 0:
E           b'{\n  ""test"": 1\n}'
E           {
E             ""test"": 1
E           }
E
E           - [b'{\n  ""test"": 1\n}']
E           ?  -
E
E           + ['{\n  ""test"": 1\n}']
```

so it appears that somewhere along the line the returned json isn't getting decoded to UTF-8 and results in having the `b` designator in the output.  Is this maybe just something I'm doing wrong? The test passes in Python 2.7.

I'm using these versions and Python 3.4.2 and 3.3.6:

```
Flask==0.10.1
Flask-Assets==0.10
Jinja2==2.7.3
MarkupSafe==0.23
Werkzeug==0.10.4
itsdangerous==0.24
```
"
1504,Question:  reload process too slow,2015-06-18T10:25:17Z,2015-10-31T21:03:13Z,,,,"everytime when I changed some file , the flask will autoreload, but the reload process is too slow!
how solve this ?

![reload](https://cloud.githubusercontent.com/assets/3492992/8229198/4d64d922-15e7-11e5-836d-f813e94fdf1a.png)
"
1503,How to detect ssl(schema) protocol correctly with request.url_root?,2015-06-17T15:05:23Z,2015-06-17T15:08:17Z,,,,"I'm using nginx + gunicorn + flask. With request.url_root  i can not detect schema correctly because it's always http! although i'm routing with https configured in nginx!
e.g i browse this url:

```
https://www.example.com/hello
```

and request.url reads:

```
http://www.example.com/hello
```
"
1502,Don't pass version to tox explicitly,2015-06-17T11:01:56Z,2015-06-17T11:17:12Z,,,,
1501,Update advanced_foreword.rst,2015-06-17T09:33:56Z,2015-06-17T09:42:48Z,,,,"Update ReST ref link from non-existent `python3-support` to working `python3` page.

Thanks!
"
1500,Tutorial    Step 5: The View Functions,2015-06-14T04:51:27Z,2015-11-04T20:02:23Z,,,,"The following code is in the tutorial:

``` python
@app.route('/add', methods=['POST'])
def add_entry():
    if not session.get('logged_in'):
        abort(401)
    g.db.execute('insert into entries (title, text) values (?, ?)',
                 [request.form['title'], request.form['text']])
    g.db.commit()
    flash('New entry was successfully posted')
    return redirect(url_for('show_entries'))
```

The second arg to `execute` should be a tuple, not a list.  `g.db.execute('INSERT INTO entries(title,text) VALUES(?,?)',(request.form[""title""],request.form[""text""]))`
"
1499,Fix project name in CONTRIBUTING.rst,2015-06-13T15:19:37Z,2015-06-13T15:55:12Z,,,,
1498,blueprint 404 error handler not honored with url_prefix,2015-06-13T10:24:35Z,2017-06-01T04:41:14Z,blueprints,AssertionError,AssertionError: u'app 404' != 'myblueprint 404',"Reproduce the bug:
- make a blueprint with an errorhandler for 404
- register the blueprint on the main app under `url_prefix=""/blue""`

Now, if you visit some not existent page under blueprint url prefix, like `/blue/notExist` you will recive response from the main app 404 error handler.

The only way to trigger the blueprint 404 error handler is by calling `abort(404)` from within the blueprint.

The correct behaviour would be to choose which error handler to activate also on the basis of the `url_prefix` parameter.

``` Python
import unittest
from flask import Flask, Blueprint, abort, request


app = Flask(__name__)
myblueprint = Blueprint('myblueprint', __name__)

@myblueprint.route('/hello', methods=['GET'])
def hello():
    return 'hello world!'

@myblueprint.route('/forced_404', methods=['GET'])
def forced_404():
    abort(404)

myblueprint.errorhandler(404)(lambda e: ('myblueprint 404', 404))

app.register_blueprint(myblueprint, url_prefix=""/blue"")

app.errorhandler(404)(lambda e: ('app 404', 404))


class BlueprintOrAppTestCase(unittest.TestCase):

    def setUp(self):
        self.client = app.test_client()

    def test_200(self):
        resp = self.client.get('/blue/hello')
        self.assertEqual(resp.status_code, 200)
        self.assertEqual(resp.get_data(True), 'hello world!')

    def test_404_main(self):
        with app.test_client() as client:
            resp = client.get('/notExist')
            self.assertEqual(resp.status_code, 404)
            self.assertEqual(resp.get_data(True), 'app 404')

    def test_404_blueprint(self):
        with app.test_client() as client:
            resp = client.get('/blue/notExist')
            self.assertEqual(resp.status_code, 404)
            self.assertEqual(resp.get_data(True), 'myblueprint 404')
            self.assertEqual(request.blueprint, 'myblueprint')

    def test_404_forced_blueprint(self):
        with app.test_client() as client:
            resp = client.get('/blue/forced_404')
            self.assertEqual(resp.status_code, 404)
            self.assertEqual(resp.get_data(True), 'myblueprint 404')
            self.assertEqual(request.blueprint, 'myblueprint')

if __name__ == '__main__':
    # app.run(host=""0.0.0.0"", use_reloader=True)
    unittest.main()
```

Response:

``` Python
.F..
======================================================================
FAIL: test_404_blueprint (__main__.BlueprintOrAppTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""asd.py"", line 43, in test_404_blueprint
    self.assertEqual(resp.get_data(True), 'myblueprint 404')
AssertionError: u'app 404' != 'myblueprint 404'

----------------------------------------------------------------------
Ran 4 tests in 0.013s

FAILED (failures=1)
```
"
1497,Feedback Links - 404 Error,2015-06-12T06:29:38Z,2015-06-12T14:48:52Z,,,,"The two links on (http://flask.pocoo.org/community/) to give feedback (http://feedback.flask.pocoo.org/) throw a 404 error.
"
1496,Update title of docstring in flask.cli,2015-06-12T04:41:15Z,2015-06-13T11:50:50Z,,,,
1495,Done,2015-06-11T05:28:49Z,2015-06-11T10:22:54Z,,,,"Added a Q & A to a README from information found throughout the web
"
1494,Handling HTTP 405 on the blueprint level,2015-06-11T01:35:47Z,2017-06-01T04:41:18Z,blueprints,AssertionError,AssertionError: 'app 405' != 'myblueprint 405',"I really like being able to override the error templates for each blueprint using their errorhandler methods. All error codes work great for me. Except one. 405's are _AFAIK_ not catchable by the blueprint. This is a bit unfortunate when you have a JSON REST API where you want your consumers to be able to parse the data that they get back.

[This line in `werkzeug.routing`](https://github.com/mitsuhiko/werkzeug/blob/2b2d921eea7d1f896ce436ec5238890abe8b81bf/werkzeug/routing.py#L1558) is where the exception is raised. I feel a bit lost about the whole flow of a request in werkzeug/flask and don't really have any idea what I could do to be able to catch it in the Blueprint. Is this a bug? A known ""feature""? Or am I doing something wrong?

Here's a test case which shows this behavior:

``` python
import unittest
from flask import Flask, Blueprint, request

app = Flask(__name__)
myblueprint = Blueprint('myblueprint', __name__)


@myblueprint.route('/', methods=['GET'])
def hello():
    return 'hello world!'

myblueprint.errorhandler(405)(lambda e: ('myblueprint 405', 405))
app.register_blueprint(myblueprint)
app.errorhandler(405)(lambda e: ('app 405', 405))


class BlueprintOrAppTestCase(unittest.TestCase):

    def setUp(self):
        self.client = app.test_client()

    def test_200(self):
        resp = self.client.get('/')
        self.assertEqual(resp.status_code, 200)

    def test_405(self):
        with app.test_client() as client:
            resp = client.post('/?http405')
            self.assertEqual(resp.status_code, 405)
            self.assertEqual(resp.get_data(True), 'myblueprint 405')
            self.assertEqual(request.blueprint, 'myblueprint')


if __name__ == '__main__':
    # app.run(use_reloader=True)
    unittest.main()
```

Running this gives:

``` python-traceback
.F
======================================================================
FAIL: test_405 (__main__.BlueprintOrAppTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test.py"", line 30, in test_405
    self.assertEqual(resp.get_data(True), 'myblueprint 405')
AssertionError: 'app 405' != 'myblueprint 405'
- app 405
+ myblueprint 405


----------------------------------------------------------------------
Ran 2 tests in 0.013s

FAILED (failures=1)
```

A version which tests more error codes can be found [in this gist](https://gist.github.com/jmagnusson/477d209ca3cee464674d).
"
1493,Remove mention of abandoned project Flask-Uploads from docs,2015-06-10T11:50:17Z,2016-01-25T16:56:14Z,docs,,,"I would love to see this project updated, but it seems to have been abandoned by its creator. Still doesn't support Python 3 and hasn't given any love to PyPI for almost 4 years. It seems impossible to get in contact with the creator. This PR removes the reference of `Flask-Uploads` from the docs. Another option would be to have a NOTE about it being abandoned. I think it also makes sense to remove it from the [Flask extensions list](http://flask.pocoo.org/extensions/) (where's the repo for that?)

[Here's a 2 year old ticket on Bitbucket that fixes Python 3 support](https://bitbucket.org/leafstorm/flask-uploads/pull-request/5/modernizing/diff). No reply what-so-ever from @leafstorm. His last public activity on Bitbucket was three years ago.

I'll e-mail him with a reference to this ticket to see if we can get a reply. Perhaps with this ticket we can get the project owner's attention.

The best alternative would of course be to get development going on the project again, perhaps by adding more contributors to the project. Let me know how you feel about all of this. :blush:
"
1492,Any new release ?,2015-06-10T09:18:25Z,2015-06-10T09:45:08Z,,,,"Is a new version planned?
Last version 0.10.1 is very old : on Jun 14, 2013 
"
1491,Remove the word `trivially` here,2015-06-10T08:58:57Z,2015-06-10T09:45:37Z,,,,"A lot of things are trivial, or debatably trivial, but this is not one of them :)
"
1490,"Get “insert_id” for one to one relationship in Flask, SqlAlchemy",2015-06-08T23:39:36Z,2015-06-10T07:54:42Z,,,,"Hey guys,

I tried seeking help on SO, but couldn't get any feedback.  Thought I'd reach out to the Flask community.

I'm trying to insert a new row through sqlalchemy. The parent table (Milestone) has a child table called Funding. Both tables share a relationship through a column called milestone_id. It is a one to one relationship.

I have looked it up, but I can't figure out how to reference the milestone_id when INSERTING a new row in the Funding table. The parent ID is an autoincrement. I am using Flask and SqlAlchemy.

models:

``` python
class Milestone(db.Model):
    __tablename__ = ""**************""

   milestone_id = db.Column(db.Integer, primary_key=True)
   company_id = db.Column(db.Integer, db.ForeignKey('stlines_startups.company_id'))
   milestone_date = db.Column(db.Integer)
   snapshots = db.relationship('Snapshot', uselist=False, primaryjoin='Milestone.milestone_id==Snapshot.milestone_id', backref='milestone')
   fundraising = db.relationship('Funding', uselist=False, primaryjoin='Milestone.milestone_id==Funding.milestone_id', backref='milestone')

   def __init__(self, milestone_id, company_id, milestone_date, snapshots = [], fundraising = []):
    self.milestone_id = milestone_id
    self.company_id = company_id
    self.milestone_date = milestone_date
    self.snapshots = snapshots
    self.fundraising = fundraising

class Funding(db.Model):
    __tablename__ = ""**************************""

   funding_id = db.Column(db.Integer, primary_key=True)
   funding_type = db.Column(db.Text)
   funding_message = db.Column(db.Text)
   funding_amount = db.Column(db.Integer)
   milestone_source = db.Column(db.Text)
   company_id = db.Column(db.Integer, db.ForeignKey('stlines_milestones.company_id'))
   milestone_id = db.Column(db.Integer, db.ForeignKey('stlines_milestones.milestone_id'))
   user_id = db.Column(db.Integer)
   funding_timestamp = db.Column(db.Integer)

def __init__(self, funding_id, funding_type, funding_message, funding_amount, milestone_source, milestone_id, company_id, user_id, funding_timestamp):
    self.funding_id = funding_id
    self.funding_type = funding_type
    self.funding_message = funding_message
    self.funding_amount = funding_amount
    self.milestone_source = milestone_source
    self.milestone_id = milestone_id
    self.company_id = company_id
    self.user_id = user_id
    self.funding_timestamp = funding_timestamp
```

Alchemy Query:

``` python
@app.route('/_add_funding')
def add_funding():
    funding_type = request.args.get('funding_stage', '', type=str)
    funding_message = request.args.get('funding_message', '', type=str)
    funding_amount = request.args.get('funding_amount', 0, type=int)
    milestone_source = request.args.get('milestone_source', '', type=str)
    milestone_date = request.args.get('milestone_date', '', type=str)
    company_id = request.args.get('company_id', '', type=int)

    milestone_date_final = datetime.datetime.strptime(milestone_date, '%B %d, %Y')

    ''' In this line, I try to reference milestone_id with new_milestone.milestone_id, but nothing shows up in the database '''
    new_funding = Funding('', funding_type=funding_type, funding_message=funding_message, funding_amount=funding_amount, milestone_source=milestone_source, company_id=company_id, milestone_id=new_milestone.milestone_id, user_id='1', funding_timestamp=milestone_date_final)
    new_milestone = Milestone('', company_id=company_id, milestone_date=milestone_date_final, snapshots=None, fundraising=new_funding)
    db.session.add(new_milestone)
    output = new_milestone.milestone_id
    db.session.commit()

    return jsonify(result=output)
```

How can I tell SqlAlchemy to use the auto generated milestone_id from the milestone table when insert the funding information in the funding table? Should these be two separate queries?  When I do them as two separate queries I get the error: sqlalchemy.orm.exc.ObjectDeletedError: Instance '<Milestone at 0x39ebeb0>' has been deleted, or its row is otherwise not present.

Any help would be greatly appreciated, thanks guys :)
"
1489,Add kwarg to disable auto OPTIONS on add_url_rule,2015-06-08T21:35:27Z,2017-04-21T14:20:07Z,,,,"Fixes #1488 : Adds support for a kwarg `provide_automatic_options` on `add_url_rule`, which
lets you turn off the automatic OPTIONS response on a per-URL basis even if
your view functions are functions, not classes (so you can't provide attrs
on them).
"
1488,"If you aren't using classes for `view_func`s, you can't tell Flask not to serve OPTIONS",2015-06-08T20:56:53Z,2017-04-21T15:31:29Z,,,,"We're using flask to serve mostly REST endpoints, and doing some setup at startup to create all the URL rules. Effectively, we're calling `app.add_url_rule()` for each method for each endpoint. This means that flask autogenerates an OPTIONS method and function for each ( https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L1019 ), with no way to override.

Can `provide_automatic_options` be added as a kwarg to `add_url_rule`, in case nothing is specified on the `view_func`?
"
1487,Update celery.rst,2015-06-08T13:05:02Z,2015-06-08T13:18:46Z,,,,"update celery url
"
1486,DRY globals definition,2015-06-07T16:14:19Z,2015-06-07T22:03:05Z,,,,"Hi there,

Changed a little the globals.py file to avoid some code repetition, and also changed the order. The main change in my opinion is that now the `current_app` proxy would use `return getattr(top, 'app')` instead of `return top.app`. Maybe this has some side effects which I am missing.
"
1485,Consider adding documentation about script-name-stripping middleware to CGI deployment documentation,2015-06-07T10:57:47Z,,docs,,,"The FastCGI deployment documentation mentions that it may be necessary to configure some middleware to strip the `SCRIPT_NAME` environment variable of the actual script file name in order to prevent it appearing in the URL (e.g. `example.com/yourapplication.fcgi/news/`).

The default `mod_rewrite` configuration given in the CGI deployment documentation has the same issues yet no mention of this workaround is given. Please consider mentioning this on this page also.
"
1484,Deprecate flask.ext,2015-06-06T04:00:26Z,2016-04-02T19:06:30Z,,,,"See #1135
"
1483,Show original autodoc signatures,2015-06-06T02:05:59Z,2015-06-06T02:17:57Z,,,,"Alternative to #1403
"
1482,Code fix for issue #1481,2015-06-06T00:49:48Z,2016-04-08T08:02:14Z,discussion,,,"This is a unit test and code fix for issue #1481 that keeps the previous behavior of get_root_path and intercepts the new `AttributeError` thrown by `pkgutil.get_loader`.
"
1481,pkgutil.get_loader now throws errors on Python3.4,2015-06-06T00:47:39Z,2015-06-06T01:13:42Z,,AttributeError,AttributeError: 'NoneType' object has no attribute 'loader',"In Python2.7 get_loader returns an empty string if a loader isn't found.

```
$ python
Python 2.7.6 (default, Mar 22 2014, 22:59:56) 
[GCC 4.8.2] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import pkgutil
>>> pkgutil.get_loader(""testing"")
>>> pkgutil.get_loader(__name__)
<pkgutil.ImpLoader instance at 0x7f03a435f8c0>
>>> 
```

Python3.4 an AttributeError is thrown.

```
$ python
Python 3.4.0 (default, Apr 11 2014, 13:05:11) 
[GCC 4.8.2] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import pkgutil
>>> pkgutil.get_loader(__name__)
<class '_frozen_importlib.BuiltinImporter'>
>>> pkgutil.get_loader(""testing"")
Traceback (most recent call last):
File ""<stdin>"", line 1, in <module>
File ""/usr/lib/python3.4/pkgutil.py"", line 467, in get_loader
    return find_loader(fullname)
File ""/usr/lib/python3.4/pkgutil.py"", line 488, in find_loader
    return spec.loader
AttributeError: 'NoneType' object has no attribute 'loader'
>>> 
```

This means that if someone does something like

```
from flask import Flask
app = Flask(""testing"")
```

Then 

```
AttributeError: 'NoneType' object has no attribute 'loader'
```

is thrown on Python3.4

Suggested changes in flask/flask/helpers.py 

in get_root_path

```
637    # Next attempt: check the loader.
638    loader = pkgutil.get_loader(import_name)
```

to 

```
load =  None
try:
    loader = pkgutil.get_loader(import_name)
except AttributeError:
    pass
```
"
1480,Handle empty deque on errorhandler lookup.,2015-06-02T20:17:12Z,2015-06-03T15:46:11Z,,,,"After registering a custom errorhandler by exception class, raising any
unhandled exception in a view function swallows the error and instead
throws an `IndexError` on trying to look up the appropriate handler.
This patch avoids the uninformative `IndexError` and preserves the
original exception by looping until the deque of classes is empty, not
forever.
"
1479,Implement config.from_envjson (with testing),2015-06-02T18:59:25Z,2016-01-25T16:08:54Z,,,,"I added a new method `from_envjson` into `Config` class. It allows people to configure their applications with environment variables in JSON syntax, without any config file.

Storing config in environment variables is a recommended practice of [12-Factor App](http://12factor.net/config). It is supported by many development and deployment utilities, including systemd(`EnvironmentFile` field in service file), [honcho](https://github.com/nickstenning/honcho), [autoenv](https://github.com/kennethreitz/autoenv) and more.

Please review it. Thanks.
"
1478,Flask keep-alive,2015-06-02T02:20:46Z,2015-06-02T03:04:33Z,,,,"Is there a way to send intermittent responses to client to avoid timeout for long-running tasks (~2minutes)?

If not, I guess I will have to do the following flow:
1. User requests a webpage
2. Check if that webpage is available in cache
3. If not, redirect them to a holding page that checks ~15 seconds if that request is ready
4. Load the response

Seems less than ideal, but gets the added benefit of showing some sort of progress indicator to the user
"
1477,Remove Blueprint.view_functions,2015-05-31T21:46:03Z,2015-06-13T15:08:00Z,,,,"https://github.com/mitsuhiko/flask/blob/master/flask/blueprints.py#L104

Blueprint.view_functions should be removed as it does nothing besides potentially confuse people.
"
1476,Change documentation entries,2015-05-30T15:15:46Z,2015-05-31T16:59:23Z,,,,"Specially misleading the entry about the `static` directory, as it can have another name and still be valid.
"
1475,Minor flask/json.py documentation change,2015-05-30T13:16:16Z,2015-05-30T14:50:15Z,,,,"Minor docummentation change
"
1474,Add flask laptop decals sale link to the website,2015-05-29T22:54:27Z,2016-01-26T19:10:26Z,,,,"This is neither a bug or issue but a request.
Where can I find laptop decals for flask? I'm loving this framework and would like to promote it with a laptop decal or sticker but I cannot find any.   

Can we make this happen? Stickermule was suggested on reddit but I think this should be held in flask 'store' should this come about. 
"
1473,Flask server stops responding to new HTTP connections,2015-05-29T10:43:52Z,2015-05-29T11:50:10Z,,,,"After a day or two, my Flask app stops noticing new connections; strace says:

mk@pling /proc/31539/fd> strace -p 31539 -e '!stat'
Process 31539 attached - interrupt to quit
select(0, NULL, NULL, NULL, {0, 805175}) = 0 (Timeout)
select(0, NULL, NULL, NULL, {1, 0})     = 0 (Timeout)
select(0, NULL, NULL, NULL, {1, 0})     = 0 (Timeout)
select(0, NULL, NULL, NULL, {1, 0}^C <unfinished ...>
Process 31539 detached

(note that the stat() calls between each select() have been omitted).

So select() is being called without any fds, basically as a blocking primitive, but I seem to have the following fds:

lsof -p etc:
python  31539   mk    3u  IPv4 141934535      0t0      TCP *:5000 (LISTEN)
python  31539   mk    4u  IPv4 142787301      0t0      TCP 93.93.128.61:5000->61.240.144.65:60000 (ESTABLISHED)

So it should by rights be select()ing on fd 3 at the very least.
"
1472,Add a method to register multiple blueprints at once.,2015-05-25T10:48:17Z,2015-05-25T15:09:49Z,,,,"Hi, I added a method to register multiple blueprints.
#### Example

``` python
app.register_blueprints([a_blueprint, b_blueprint, c_blueprint])
```

Thanks.
"
1471,Adding after_server_run,2015-05-25T05:13:12Z,2015-05-25T15:26:42Z,,,,"It would be nice to have a feature that would let a function be called after the server is started. As far as I've seen there is no such feature.
"
1470,route function quit unexpectedly,2015-05-25T02:47:18Z,2015-05-25T15:10:30Z,,,,"When I call a python wrapper of C++ code in a flask route function, the flask route function quit unexpectedly. But if I call the wrapper from a normal python script ,everything goes well. Is there any condition that flask route function quit automatically?
"
1469,mod_wsgi (Apache) Troubleshooting tips needs one more,2015-05-22T20:34:40Z,2015-10-31T21:38:53Z,,,,"In http://flask.pocoo.org/docs/0.10/deploying/mod_wsgi/
I ran into an issue when following the guide to configure a current working Flask app for Apache.  It would have been much easier to discover the cause if the following tip was given:

Problem: application runs but can not access other files:

For WSGI applications, all paths used should always be absolute path names.  Even though the app will work fine using relative paths with the simpler python serving method, they will not work with WSGI.
"
1468,Add before_first_request_context signal.,2015-05-22T18:39:18Z,2015-05-27T13:35:06Z,,,,"I essentially cloned what `before_first_request` does.

Intention is to get the registration of the static route out of `__init__`, and register it instead right before the first request. (for a feature I mentioned in issue #1466)

~~Another possibility would be to pass `environ` along, to make it possible to modify it (for whatever reasons) before it get's passed to `RequestContext` - if desired.~~ well, not actually reasonable for before__first__request_context.
"
1467,Add support for default environ in test_client,2015-05-21T19:15:45Z,2016-10-27T14:44:47Z,,,,"It would be nice if `test_client()` would accept default environ dictionary. That would stop us doing hacks like [this](http://stackoverflow.com/questions/15278285/setting-mocking-request-headers-for-flask-app-unit-test) over and over.

For example:

```
test_client = app.test_client(defailt_environ = {
    ""REMOTE_ADDR"": ""127.0.0.1""
})
```

`default_environ` should be then passed down all the way to `environment_base` args of `EnvironBuilder` in test.py.

Thank you!
"
1466,try_trigger_before_first_request_functions in test cases,2015-05-21T18:42:29Z,2017-05-28T04:05:04Z,,,,"Hi,

I'm currently testing a feature (knitori@f2ae742d163300a22b7b03ca2ac60810ed1de59b) that required to move the registration of the static url from `__init__` to a method, and register that method using `before_first_request` (knitori@6bc77363ed9ee1a9ba00d3536f0479ab0967a8bd).

It works pretty well with a normal application, but it fails one test (`tests/test_basic.py::test_static_files FAILED`). And I realized, that the registered `before_first_request` functions are never actually called with the test client `testing.FlaskClient`. I fixed that locally by adding `self.application.try_trigger_before_first_request_functions()` right before the return statement of `testing.FlaskClient.open` (or should it even go to `Client.open`?).

I'm wondering if there is a rationale behind not calling the registered functions? Or has there just never been a case where it's actually required?

**Edit**

I realized this doesn't work. If the first request is to a static URL, it will return 404, because the RequestContext was created before the static route was registered. If anything, I probably need another even like `before_first_request_context` or something like that. Maybe called inside of `Flask.request_context`.

I'm sorry, it seems this turned into a completely different issue. 
"
1465,packaging docs outdated,2015-05-21T06:56:12Z,2015-10-31T21:40:34Z,"docs, good first issue",,,"from here ->  http://flask.pocoo.org/docs/0.10/patterns/distribute/

distribute has gone the way of the norwegian blue, hence dead link at  http://python-distribute.org/distribute_setup.py  should be cleaned up
"
1464,uWSGI / nginx documentation is incorrect,2015-05-20T13:09:01Z,2015-11-12T12:08:56Z,docs,,,"The Flask documentation for how to use it with uWSGI and nginx is incorrect. As the uWSGI docs say at http://uwsgi-docs.readthedocs.org/en/latest/Nginx.html#hosting-multiple-apps-in-the-same-process-aka-managing-script-name-and-path-info, ""ancient uWSGI versions used to support the so called “uwsgi_modifier1 30” approach. Do not do it. it is a really ugly hack"". The documentation should be updated to talk about the `manage-script-name` and `mount` options instead.
"
1463,fix docstring for _find_errorhandler,2015-05-20T12:33:13Z,2015-05-20T12:52:08Z,,,,"Drop  #1462 for this one. Maybe it  is much more clear now.
"
1462,fix doc string,2015-05-19T19:26:36Z,2015-05-20T12:27:49Z,,,,"the doc string for  `_find_error_handler` is incomplete.
"
1461,fixed import of werkzeug secure_filename,2015-05-15T06:45:15Z,2015-05-15T08:24:24Z,,,,"minor inconsistency in docs
"
1460,Flask Documentation PDF is missing,2015-05-14T05:35:32Z,2015-09-10T21:53:55Z,,,,"Flask Documentation PDF is missing

Read the documentation or download as PDF and zipped HTML
Links to http://flask.pocoo.org/docs/flask-docs.pdf and http://flask.pocoo.org/docs/flask-docs.zip

Both of which are missing.
"
1459,after_request excuted twice,2015-05-14T03:13:21Z,2015-06-14T09:48:22Z,,,,"Use plugin：flask-restful
in app.py:(please see my annotation)  
def process_response(self, response):
        ctx = _request_ctx_stack.top
        bp = ctx.request.blueprint
        funcs = ctx._after_request_functions         # here is None
        if bp is not None and bp in self.after_request_funcs:
            funcs = chain(funcs, reversed(self.after_request_funcs[bp]))
        if None in self.after_request_funcs: 
            funcs = chain(funcs, reversed(self.after_request_funcs[None]))     # here is <itertools.chain object at 0x000000000449FFD0>
        for handler in funcs:               #  then this loop be excuted twice
            response = handler(response)
        if not self.session_interface.is_null_session(ctx.session):
            self.save_session(ctx.session, response)
        return response

please help..
"
1458,config.from_pyfile() avoid UnicodeDecodeError,2015-05-13T17:34:03Z,2015-05-15T11:16:16Z,,,,"If the local variables (LC_*) are not properly configured, Python
use ASCII as the default encoding. This is fine and Flask works properly.

If the configuration file come with non ASCII caractere, an
UnicodeDecodeError exception will be raised as soon as read() will
try to decode the byte stream.

io.open() as been introduced in Py26 and the ability to specify
the encoding of the file. We use it to force the use of binary mode.
"
1457,Clarify what app.config.from_object accepts,2015-05-11T19:15:17Z,2016-06-02T22:55:17Z,docs,,,"```
$ python
Python 2.7.9 (default, Apr 29 2015, 18:34:06) 
[GCC 4.9.2] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import flask
>>> conf = {""DEBUG"": True}
>>> app = flask.Flask(__name__)                                                
>>> app.config.from_object(conf)
>>> app.debug
False
```

Expected behavior would be to accept to setting in the flask application object.

```
>>> flask.__version__
'0.10.1'
```

```
>>> conf = {""SECRET_KEY"": ""honey""}                                                                                                                                      
>>> app = flask.Flask(__name__)                                                                                                                                         
>>> app.config.from_object(conf)                                                                                                                                        
>>> app.secret_key
```
"
1456,Add X-Forwarded-Proto header to proxy setup example docs,2015-05-10T00:03:04Z,2016-02-17T21:02:22Z,,,,"The `ProxyFix` middleware provided by Werkzeug uses this header for
returning accurate values from request.is_secure and request.scheme.
Without adding this header, Flask won't properly detect when it is being
served over HTTPS and will fail to generate proper external links and
cause certain extensions (e.g. Flask-OAuthlib) to function improperly.
Adding this header to the example setup should reduce issues encountered
by developers when following this guide.

Credit where due: I tend to find this information when I need it in a [blog post](http://cramer.io/2013/06/27/serving-python-web-applications/) by David Cramer.
"
1455,Add pip install --editable . to contributing docs,2015-05-06T23:08:34Z,2015-05-07T11:24:13Z,,,,
1454,"test_client fails for url with ""%2F""",2015-05-06T15:05:14Z,2015-05-11T13:59:29Z,,,,"I'm working with a parameterized url such as:

``` python
""/api/<string:apiToken>""
```

When I send this token containing ""%2F"" the url encoded form of ""/"" I get a 404 from the test client. However, the running app works fine.

I'm using Flask 0.10.1 and a minimal test example looks like the following:

``` python
import unittest
import flask
class TestTestClient(unittest.TestCase):
    def test_url(self):
        app = flask.Flask(__name__)
        @app.route('/<string:parameter>')
        def hello_world(parameter):
            return parameter

        test_client = app.test_client()

        response = test_client.get(""/FOO"")
        self.assertEqual(response.status_code, 200)  # Passes
        self.assertEqual(response.data, ""FOO"")  # Passes

        response = test_client.get(""/%%2F"")
        self.assertEqual(response.status_code, 200) # Fails with 404
```
"
1453,Replace 'I' with 'We',2015-05-06T13:14:47Z,2015-05-06T13:55:28Z,,,,"To be consistent with the usage elsewhere in the README
"
1452,Move object_hook outside loads method so class can be extend and reused,2015-05-05T16:09:34Z,2017-06-02T06:13:18Z,"json, session",,,"Wanted to be able to extend the session serializer class without duplicating all the code for object hook - as with the _tag function above.
"
1451,Call out that teardown functions must never raise,2015-05-05T14:42:46Z,2016-04-04T20:26:39Z,,,,"Also add a more detailed explanation of how the request context and app
context interact.
"
1450,importlib deprecated in 3.4,2015-05-02T00:34:28Z,2015-05-02T19:58:44Z,,,,"Replace the use of importlib by types.ModuleType in 3.4+

closes gh-1449

Not sure how to make a test for it, either I need to monkeypatch stdlib, or have the tests run with `-W error` which I'm not sure how.
"
1449,imp module deprecated. ,2015-05-02T00:25:29Z,2015-05-02T19:58:44Z,,,,"The `imp` module has been deprected in 3.4 and seem to be used in 2 places : `flask/config.py`  and `scripts/flaskext_compat.py` to create modules. 

It should be easy to replace with `types.ModuleType(name)` I guess. 

discovered because I'm running with `-W error`  on another project, which change the warning in errors, and I fail here even before reaching the other lib where I'm trying to find where the warning are coming from. 

I'll try to see if i can send  PR to fix that, 

Thanks
"
1448,Mention that custom converters can be defined for url routes,2015-05-01T16:17:26Z,2015-05-01T18:11:34Z,,,,"I had no idea about this for far too long. Adding this short sentence right after listing the built-in converters should go a long way to making this more clear for others, I think. I never stumbled across the (excellent) explanation under [`flask.Flask.url_map`](http://flask.pocoo.org/docs/0.10/api/#flask.Flask.url_map) before because the name `url_map` doesn't really indicate to me that you can learn about custom converters there.
"
1447,typo in Quickstart documentation,2015-04-29T17:37:07Z,2015-04-29T20:55:42Z,docs,,,"""ommited"" should be ""omitted""
"
1446,Built in routes command,2015-04-26T07:49:54Z,2017-04-26T17:33:59Z,cli,,,"I don't want to spam the builtin command namespace (anyway, why not? Django have a lot of builtin commands and works pretty well) but this is the first command I always implement when I start using flask, and my collegues were doing this also.
It shows all the endpoints registered for the app. Routes can be ordered by rules, endpoints and methods.
This is a WIP, because I did not wrote tests for it yet and did not tried with 2.6 and 2.7.
I would like to have some feedback on this and I can work out the details.
"
1445,get_json raise on empty request body,2015-04-25T07:20:06Z,2015-04-25T08:22:21Z,,,,"Dont know if this is a desired behavior, but if I send a request like this:

> Content-Type: application/json
> Content-Length: 0

and access `get_json` it raises a 'Cant not decode' error.
Imho it would be better to just return `None` as if `is_json == False`.

Working with: Flask 0.11.dev0
"
1444,url_for with multiple query parameters escape '&',2015-04-22T19:53:59Z,2015-04-22T21:10:37Z,,,,"```
# cat templates/t.html 
{{ url_for('url', key1='val1', key2='val2') }}
```

```
from flask import Flask, render_template
app = Flask(__name__)

@app.route('/url')
def url(): pass

with app.test_request_context():
    print render_template('t.html')
```

This script produce such output:

```
/url?key2=val2&amp;key1=val1
```

I see that query string params separator '&' escaped -> '&amp;'
is it bug ?
"
1443,json_encoder not invoked from flask.jsonify,2015-04-21T14:47:11Z,2016-06-02T21:35:26Z,,,,"I created a custom JSON encoder class extended from flask.json.JSONEncoder but it is not called when calling flask.jsonify. Additionally, I removed my custom JSON encoder and confirmed that  flask.json.JSONEncoder isn't called either via a break statement in Pycharm.

```
from flask import Flask
from flask import jsonify
from flask.json import JSONEncoder

class MyEncoder(JSONEncoder):
    def default(self, obj):
        if hasattr(obj, '__json__'):
            return obj.__json__()
        else:
            try:
                iterable = iter(obj)
            except TypeError:
                pass
            else:
                return list(iterable)

        return JSONEncoder.default(self, obj)


class MyClass(object):
    key = 'a'
    value = 'b'

    def __json__(self):
        return {'key': self.key, 'value': self.value}

app = Flask(__name__)
app.json_encoder = MyEncoder

@app.route('/')
def hello_world():
    return jsonify(MyClass())


if __name__ == '__main__':
    app.run(debug=True)
```
"
1442,small inaccuracy in get_json documentation,2015-04-20T22:02:54Z,2015-04-28T07:38:48Z,"docs, good first issue",,,"In the documentation for [`get_json`](http://flask.pocoo.org/docs/0.10/api/#flask.Request.get_json), the _silent_ parameter is described as ""if set to _False_ this method will fail silently and return _False_"". It should probably say ""if set to _True_ [...]"" instead.
"
1441,Fix pep8 with logging,2015-04-19T04:42:59Z,2015-04-19T09:37:55Z,,,,"This should make the logging module more pep8 compatible. This PR fix problem issued in #1440 .

I made this PR to update first argument of class method in logging module from `x` to `self` in **master** branch. However, i can not make sure if i should at the same time make a PR to also clean the `logging` module in **0.10-maintenance**.

BTW, is the maintenance branch read-only(i checked out that last commit in **0.10-maintenance** is about years ago)? If so, what is the difference between a tag and this maintenance branch.
"
1440,Change first argument in a Class methoc to 'self',2015-04-18T13:45:19Z,2015-04-19T09:38:10Z,,,,"I recently run into the **app.logger** usage. However, when i read the source code in flask **v0.10.1** , i find that it uses `x` instead of `self` as the first method argument in class [**DebugLogger**](https://github.com/mitsuhiko/flask/blob/0.10.1/flask/logging.py#L26) and [**DebugHandler**](https://github.com/mitsuhiko/flask/blob/0.10.1/flask/logging.py#L32).

Can we just update this calling convention.
"
1439,"Show custom flask cli commands for ""no arg"" help",2015-04-18T07:34:47Z,2015-06-06T02:29:40Z,,,,"Running `flask` CLI without args should be equivalent to running `flask --help`, displaying help for any custom commands in addition to standard command help.

Fixes #1124 
"
1438,Make TaggedJSONSerializer extensible,2015-04-16T09:09:14Z,2017-06-02T17:07:57Z,json,,,"My suggestion would be to add a method to the class that lets you register custom types, e.g. like this:

```
session_json_serializer.register_type('md', MultiDict)
```

This would use the `' md'` prefix when encountering a `MultiDict` object (`type(x) is MultiDict` as subclasses probably shouldn't be handled). To serialize/deserialize I'd simply use `__getstate__` and `__setstate__`.
"
1437,Flask won't start in the Python 3.4 debugger,2015-04-16T02:35:17Z,2017-05-22T23:46:42Z,,"AttributeError, ValueError, ImportError","AttributeError: 'module' object has no attribute '__spec__', ValueError: __main__.__spec__ is not set, ImportError: Error while finding loader for '__main__' (<class 'ValueError'>: __main__.__spec__ is not set)","Test code:

```
import flask
app = flask.Flask()
app.run
```

Run like this:

```
$ pdb3 test.py
> /home/tkcook/scratch/python/test.py(1)<module>()
-> import flask
(Pdb) cont
Traceback (most recent call last):
  File ""/usr/lib/python3.4/importlib/util.py"", line 95, in find_spec
    spec = module.__spec__
AttributeError: 'module' object has no attribute '__spec__'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/lib/python3.4/pkgutil.py"", line 481, in find_loader
    spec = importlib.util.find_spec(fullname)
  File ""/usr/lib/python3.4/importlib/util.py"", line 97, in find_spec
    raise ValueError('{}.__spec__ is not set'.format(name))
ValueError: __main__.__spec__ is not set

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/usr/lib/python3.4/pdb.py"", line 1661, in main
    pdb._runscript(mainpyfile)
  File ""/usr/lib/python3.4/pdb.py"", line 1542, in _runscript
    self.run(statement)
  File ""/usr/lib/python3.4/bdb.py"", line 431, in run
    exec(cmd, globals, locals)
  File ""<string>"", line 1, in <module>
  File ""/home/tkcook/scratch/python/test.py"", line 1, in <module>
    import flask
  File ""/usr/lib/python3/dist-packages/flask/app.py"", line 331, in __init__
    instance_path = self.auto_find_instance_path()
  File ""/usr/lib/python3/dist-packages/flask/app.py"", line 622, in auto_find_instance_path
    prefix, package_path = find_package(self.import_name)
  File ""/usr/lib/python3/dist-packages/flask/helpers.py"", line 661, in find_package
    loader = pkgutil.get_loader(root_mod_name)
  File ""/usr/lib/python3.4/pkgutil.py"", line 467, in get_loader
    return find_loader(fullname)
  File ""/usr/lib/python3.4/pkgutil.py"", line 487, in find_loader
    raise ImportError(msg.format(fullname, type(ex), ex)) from ex
ImportError: Error while finding loader for '__main__' (<class 'ValueError'>: __main__.__spec__ is not set)
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> /usr/lib/python3.4/pkgutil.py(487)find_loader()
-> raise ImportError(msg.format(fullname, type(ex), ex)) from ex
```

Is there a workaround for this?
"
1436,Readme cleanup,2015-04-13T18:35:06Z,2015-04-13T18:37:33Z,,,,
1435,htmlsafe_dumps doesn't handle lazy strings,2015-04-13T08:51:04Z,2017-05-23T19:02:37Z,,TypeError,TypeError: key lu'Nome categoria' is not a string,"I need to be able to handle lazy strings in the Jinja2 `|tojson` filter and was thinking about some way to do it: as of now, the `_iterencode_dict` raises a TypeError exception, as expected:

```
Traceback (most recent call last):
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/app.py"", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask_admin/base.py"", line 68, in inner
    return self._run_view(f, *args, **kwargs)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask_admin/base.py"", line 354, in _run_view
    return fn(self, *args, **kwargs)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask_admin/model/base.py"", line 1466, in index_view
    return_url=self._get_list_url(view_args),
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask_admin/base.py"", line 294, in render
    return render_template(template, **kwargs)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/templating.py"", line 128, in render_template
    context, ctx.app)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/templating.py"", line 110, in _render
    rv = template.render(context)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/jinja2/environment.py"", line 969, in render
    return self.environment.handle_exception(exc_info, True)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/jinja2/environment.py"", line 742, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask_admin/templates/bootstrap3/admin/model/list.html"", line 5, in top-level template code
    {% import 'admin/actions.html' as actionlib with context %}
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask_admin/templates/bootstrap3/admin/master.html"", line 1, in top-level template code
    {% extends admin_base_template %}
  File ""/home/manuel/dev/www/python/watest/webfu-app/webfu/modules/backend/templates/admin/custom-layout.html"", line 3, in top-level template code
    {% import 'admin/static.html' as admin_static with context %}
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask_admin/templates/bootstrap3/admin/base.html"", line 80, in top-level template code
    {% block tail %}
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask_admin/templates/bootstrap3/admin/model/list.html"", line 171, in block ""tail""
    {{ filter_groups|tojson|safe }},
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/json.py"", line 243, in tojson_filter
    return Markup(htmlsafe_dumps(obj, **kwargs))
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/json.py"", line 186, in htmlsafe_dumps
    rv = dumps(obj, **kwargs) \
  File ""/home/manuel/.virtualenvs/webapp/lib/python2.7/site-packages/flask/json.py"", line 126, in dumps
    rv = _json.dumps(obj, **kwargs)
  File ""/usr/lib/python2.7/json/__init__.py"", line 250, in dumps
    sort_keys=sort_keys, **kw).encode(obj)
  File ""/usr/lib/python2.7/json/encoder.py"", line 209, in encode
    chunks = list(chunks)
  File ""/usr/lib/python2.7/json/encoder.py"", line 434, in _iterencode
    for chunk in _iterencode_dict(o, _current_indent_level):
  File ""/usr/lib/python2.7/json/encoder.py"", line 382, in _iterencode_dict
    raise TypeError(""key "" + repr(key) + "" is not a string"")
TypeError: key lu'Nome categoria' is not a string
```

I can't really use the `gettext` since i need the `lazy_gettext` version, and was asking for advice and ideas on how to tackle this problem: i tried subclassing the `flask.json.JSONEncoder` class [as per this example](https://gist.github.com/pvanliefland/6009424) and i'm handling lazy strings in the `default` method there, but it looks like it doesn't get called at all.

There is the `iterencode` method i could try to subclass, but it probably won't be a clean way to do it?
Thanks for any input you can give.
"
1434,Explicit show the content-type of response,2015-04-12T16:10:15Z,2015-04-12T16:14:38Z,,,,"Hey guys, I was thinking that could be a good ideia create a decorator to put in the head of method, to show what kind of content-type that rest service will return. 

Something like that:

``` python

@return_json
@app.route('/user/email')
def get_user_email():
   return {'email': 'example@email.com'}
```

So, in the return_json decorator we could change the content-type of response. If someone think that is a good ideia, I can implement and send a pull request.
"
1433,Should we cache errorhandlers or not?,2015-04-12T12:02:06Z,2017-06-04T20:29:33Z,discussion,,,"Cont. https://github.com/mitsuhiko/flask/pull/1291#discussion_r27856289
"
1432,stylechecking,2015-04-11T19:04:28Z,2015-11-23T14:16:31Z,,,,
1431,Some cleanup for errorhandling refactor,2015-04-11T18:55:03Z,2015-04-11T22:06:57Z,,,,"See #1291

@flying-sheep: Please set your editor to use 4 spaces instead of tabs, and
don't have whitespace in blank lines (use the pep8-tool to check).
"
1430,request.json and a lot of other attributes don't use autodoc,2015-04-11T16:22:28Z,,docs,,,"Some attributes and methods have custom documentation in api.rst, while there doesn't seem to be a reason why that couldn't be generated through autodoc.
"
1429,Added docs for the error handler rework,2015-04-11T15:26:08Z,2015-04-11T16:12:46Z,,,,"Documenting the changes in #1291
"
1428,errorhandler priority and chaining,2015-04-11T11:38:03Z,2015-04-11T11:51:40Z,,,,"This allows two things with the error handlers:
- The best handler gets picked when multiple handlers are possible. Example: you can register a default handler for all exceptions and a then override it for specific errors.
- In a handler, you can raise the error again to pass it to the next best handler.
"
1427,Bug in send_file with temp files,2015-04-10T16:52:33Z,2016-06-03T16:17:04Z,bug,,,"Hey there,

I don't know if anyone ran into this problem before because it works ""by chance"" in py2, but in py3 you can't send temporary file with `send_file` by passing a fp.

The main problems are here https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L477 and there https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L496.

Under py2 a `tempfile.TemporaryFile` is given the name `'<fdopen>'` whereas under py3 it's an integer.

```
Python 2.7.9 (default, Dec 15 2014, 10:01:34)
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from tempfile import TemporaryFile
>>> fp = TemporaryFile()
>>> fp.name
'<fdopen>'
```

```
Python 3.4.3 (default, Mar 23 2015, 04:19:36)
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from tempfile import TemporaryFile
>>> fp = TemporaryFile()
>>> fp.name
4
```

Then when Flask tries to build `filename` it crashes (trying to concatenate a string and an integer in `os.path.join(current_app.root_path, filename)`).

Would you consider merging a workaround for this problem? (like setting `filename` to `None` if we don't have a `string_types` for instance)
"
1426,Blueprint is ignored,2015-04-10T16:16:00Z,2015-04-10T18:13:17Z,,,,"Hi,

I was trying to create a small sample for another issue and run into a problem. I have a very simple demo app. This is the main file:

``` python
from flask import Flask

app = Flask(__name__)

if __name__ == '__main__':
    from sign import sign as sign_blueprint
    app.register_blueprint(sign_blueprint, url_prefix='/sign')
    app.run()
```

Blueprint `sign` lives inside the `sign` directory and the `__init__.py` file there declares it.

``` python
from flask import Blueprint
sign = Blueprint('sign', __name__)
from . import views
```

`views` just contains a simple handler that returns the string ok when requested. The problem is that my request was completely ignored. I started debugging and the routes collection has only the `static` route. The details for my blueprint disappeared.

![Structure](https://cloud.githubusercontent.com/assets/627517/7091648/a4491eb6-df81-11e4-9f54-03cf586848c4.png)

Writing 
- http://127.0.0.1:5000/sign/order/2345
- http://127.0.0.1:5000/sign/order/
- http://127.0.0.1:5000/sign/
- http://127.0.0.1:5000/sign

gets the same 404 error. It seems that somehow my blueprint is ignored and no route is created.

Any ideas?

Thank you,

Federico
"
1425,"the master version of flask has not module.py, but 0.10.1 has it ",2015-04-10T04:21:33Z,2015-04-10T04:42:36Z,,,,"I use the flask extension flask-theme,  it has a import ：
from flask import (Module, send_from_directory, render_template, json,
                     _request_ctx_stack, abort, url_for) 
the master version has no Module
so I reinstall flask to 0.10.1, but it hasn't cli.py 

so , I want to know, the module.py is not necessary in the fulture?
"
1424,Are there any interest in displaying current_user when logging exceptions?,2015-04-10T03:50:17Z,2015-04-10T11:07:01Z,,,,"I am sure I am not the only one who would like to see who was the current_user when an exception happens especially in production environments.

Currently, the ""standard"" way to accomplish this is to use logging.LoggingAdapter. But since every flask exception is hardwired to go to the app.logger, how can I use the adapter method?
"
1423,"5 years, still not 1.0! what are you thinking about, pocoo?",2015-04-08T06:41:52Z,2015-04-25T08:41:58Z,discussion,,,"5 years, still not 1.0! what are you thinking about, pocoo?
"
1422,Allow custom jinja environments,2015-04-06T12:58:57Z,2015-06-06T01:30:56Z,,,,"This is useful e.g. when using the new Jinja Environment
attributes added in mitsuhiko/jinja2#404
"
1421,`request.json` deprecation discussion,2015-04-06T11:51:02Z,2017-06-26T16:47:53Z,"discussion, json",,,"cont https://github.com/mitsuhiko/flask/pull/1416#issuecomment-90027039
"
1420,Flask reloader adds stdout buffering when used with supervisord,2015-04-04T23:11:13Z,2015-04-05T18:31:28Z,,,,"Sorry for long report, this took a while to debug. I'm not an expert on how reloading works, so hopefully someone can explain what is happening. This only happens when I use Flask's reload while launching flask using supervisord, so if it ends up being a supervisord bug I will refile it on their bug tracker, but the problem only appears when using flask's reloading feature. 

Here's my simple flask app: 

```
from flask import Flask

app = Flask(__name__, static_url_path='')

@app.route('/start')
def start_build():
  print ""Running command""
  return ""Starting""

if __name__ == ""__main__"":
  app.run(debug=True)
```

As you'd expect, this generates the following output

```
hamiltont$ python example.py
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
Running command
127.0.0.1 - - [04/Apr/2015 18:58:13] ""GET /start HTTP/1.1"" 200 -
Running command
127.0.0.1 - - [04/Apr/2015 18:58:42] ""GET /start HTTP/1.1"" 200 -
Running command
127.0.0.1 - - [04/Apr/2015 18:58:44] ""GET /start HTTP/1.1"" 200 -
```

This output is generated correctly for all combinations of `python` vs `python -u` and `use_reloader=True` vs `use_reloader=False`. 

Now I try to run the application (with reloading enabled) using supervisord and this `supervisord.conf` file

```
[supervisord]
nodaemon=true

[program:flask]
command=python -u example.py

; Send stdout to console
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0

; Send stderr to console
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; Flask does not propagate signals to child processes when using debug
; mode, so this tells supervisor to send the signal to the entire 
; process group instead of just the parent
stopasgroup=true
; Send interrupt so the server is shutdown gracefully
stopsignal=INT
```

Note that I'm intentionally specifying `python -u` in my command, just to avoid issues. Here's the output: 

```
hamiltont$ supervisord -c super.conf
2015-04-04 19:02:59,762 INFO supervisord started with pid 22439
2015-04-04 19:03:00,769 INFO spawned: 'flask' with pid 22442
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
2015-04-04 19:03:01,939 INFO success: flask entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
127.0.0.1 - - [04/Apr/2015 19:04:07] ""GET /start HTTP/1.1"" 200 -
127.0.0.1 - - [04/Apr/2015 19:04:11] ""GET /start HTTP/1.1"" 200 -
127.0.0.1 - - [04/Apr/2015 19:04:11] ""GET /start HTTP/1.1"" 200 -
^C
2015-04-04 19:04:14,198 WARN received SIGINT indicating exit request
2015-04-04 19:04:14,198 INFO waiting for flask to die
Running command
Running command
Running command
2015-04-04 19:04:14,209 INFO stopped: flask (exit status 0)
```

So until I hit `Ctrl-C` to terminate, the stdout was being buffered. If I disable reloading, then everything works as expected: 

```
hamiltont$ supervisord -c super.conf
2015-04-04 19:06:49,711 INFO supervisord started with pid 22462
2015-04-04 19:06:50,715 INFO spawned: 'flask' with pid 22465
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
2015-04-04 19:06:52,268 INFO success: flask entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
Running command
127.0.0.1 - - [04/Apr/2015 19:06:54] ""GET /start HTTP/1.1"" 200 -
Running command
127.0.0.1 - - [04/Apr/2015 19:06:57] ""GET /start HTTP/1.1"" 200 -
Running command
127.0.0.1 - - [04/Apr/2015 19:06:58] ""GET /start HTTP/1.1"" 200 -
^C
2015-04-04 19:07:03,959 WARN received SIGINT indicating exit request
2015-04-04 19:07:03,960 INFO waiting for flask to die
2015-04-04 19:07:03,968 INFO stopped: flask (exit status 0)
```

I can also generate the expected output by manually wrapping stdout at the top of my `example.py` file

```
import sys
import os
sys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)
```
"
1419,"Revert ""Fix a few spelling mistakes in the docs""",2015-04-03T19:48:21Z,2015-04-03T19:50:09Z,,,,"Reverts mitsuhiko/flask#1418, not sure why that broke the build
"
1418,Fix a few spelling mistakes in the docs,2015-04-03T19:44:27Z,2015-04-03T19:46:33Z,,,,
1417,OperationalError: no such table: entries,2015-04-02T10:51:42Z,2015-04-08T10:33:47Z,,,,"I am learning flask framework and want to set up flaskr by following the flask tutorial. In the end I am getting the error:OperationalError: no such table: entries.

the code of flaskr.py is here below

```
import os
from sqlite3 import dbapi2 as sqlite3
from flask import Flask, request, session, g, redirect, url_for, abort, render_template, flash

app = Flask(__name__);

app.config.update(dict(
    DATABASE=os.path.join(app.root_path,'flaskr.db'),
    DEBUG=True,
    SECRET_KEY='development key',
    USERNAME='admin',
    PASSWORD='default'
    ))

app.config.from_envvar('FLASK_SETTINGS',silent=True);

def connect_db():
    """"""Connects to the specific database.""""""
    rv = sqlite3.connect(app.config['DATABASE']);
    rv.row_factory = sqlite3.Row;
    return rv;

def init_db():
    db = get_db();
    with app.open_resource('schema.sql',mode='r') as f:
        db.cursor().executescript(f.read());
    db.commit();

@app.cli.command('initdb')
def initdb_command():
    init_db();
    print('Initialized the database.');

def get_db():
    if not hasattr(g,'sqlite_db'):
        g.sqlite_db = connect_db();
    return g.sqlite_db;

@app.teardown_appcontext
def close_db(error):
    if hasattr(g,'sqlite_db'):
        g.sqlite_db.close();

@app.route('/')
def show_entries():
    db = get_db();
    cur = db.execute('select title, text from entries order by id desc');
    entries = cur.fetchall();
    return render_template('show_entries.html', entries=entries);

@app.route('/add',methods=['POST'])
def add_entry():
    if not session.get('logged_in'):
        abort(401);
    db = get_db();
    db.execute('insert into entries (title, text) value (?, ?)',[request.form['title'],request.form['text']]);
    db.commit();
    flash('New entry was succeedfully posted');
    return redirect(url_for('show_entries'));

@app.route('/login',methods=['GET','POST'])
def login():
    error = None;
    if request.methods == 'POST':
        if request.form['username'] != app.config['USERNAME']:
            error = 'Invalid username';
        elif request.form['password'] != app.config['PASSWORD']:
            error = 'Invalid password';
        else:
            session['logged_in'] = True;
            flash('You were logged in');
            return redirect(url_for('show_entries'));
    return render_template('login.html',error=error);

@app.route('/logout')
def logout():
    session.pop('logged_in',None);
    flash('You were logged out');
    return redirect(url_for('show_entries'));

if __name__ == '__main__':
    app.run(host='0.0.0.0',debug=True);
```
"
1416,JSON support for test client and response object,2015-04-01T23:53:38Z,2016-08-19T19:27:38Z,,,,"Common code has been refactored into a mixin shared between request and response classes. This is a continuation of #1408.
"
1415,The server stops serving webpages after being deployed for more than a day,2015-04-01T16:08:38Z,2015-04-03T20:28:29Z,,,,"I deployed a simple Flask web server to serve http://www.holmusk.com/ and it mysteriously stops serving pages after a few hours. There are no errors on the console. Can you help guide me towards what the possible issue might be?
"
1414,Added OpenShift as a free hosting provider alternative,2015-03-31T23:13:37Z,2015-04-01T14:13:31Z,,,,
1413,Added note that @errorhandler(500) isn't triggered in debug mode,2015-03-31T15:39:00Z,2015-03-31T17:52:27Z,,,,"Hi,

I was scratching my head on this one and thought it would be good to mention this in the documentation.

Thanks for an excellent lightweight web framework,

-Torstein
"
1412,url_for to another application during request?,2015-03-31T10:03:36Z,2015-03-31T12:00:26Z,,,,"Assuming I have more than one Flask application (I'm using blueprints too, so there is not need to advice me them) and I want to build url from one to another. With no request context I was just using forced context of target application and it worked. But what should I do with existing request context? If i receive request to one application and want to do redirect to another one?

Or, in another words, why url_for first of all searches for request context? Maybe it should be optional, through _external parameter for example?

Please, do not send me to stackoverflow, my question about similar problem is hanging for more than a week with no responses at all.
"
1411,Knowing if the App started,2015-03-31T09:40:04Z,2015-03-31T09:56:50Z,,,,"The suggested way to start the app from http://flask.pocoo.org/docs/0.10/quickstart/#a-minimal-application is app.run(...).  Examining the source code of run, which chains run_simple it appears there is now way to detect success or failure.

Perhaps the run method should return a status (True/False) or (self/None)
"
1410,Error: entries table doesn't exist,2015-03-31T04:42:00Z,2015-03-31T10:43:17Z,,,,"When attempting to run complete flaskr tutorial code (stable site version).
"
1409,"Creating a ""collective""",2015-03-30T14:06:02Z,2015-03-30T14:10:21Z,,,,"It would be nice to have a ""collective"" like Plones https://github.com/collective for Flask it would make contributing so much easier.
"
1408,JSON support for the Flask test client,2015-03-29T21:42:52Z,2015-04-04T13:15:01Z,,,,"This change adds support for JSON requests to the Flask test client, which makes testing JSON APIs much more convenient, and makes the arguments consistent with `request.data` and `request.json`.

Before:
`response = client.post('/url', data=json.dumps(json_data), content_type='application/json')`

After:
`response = client.post('/url', json=json_data})`

If this gets merged then I have another change to support `response.json`, which would make it easier to make assertions on JSON responses.
"
1407,"Revert ""Revert ""Don't use threads in this test""""",2015-03-29T21:04:10Z,2016-02-17T21:04:26Z,,,,"This reverts commit 1577e1386e737eca69dbb6cfe6b8bf979f7b2944.
"
1406,Generic error handler for any exception,2015-03-29T15:54:55Z,2015-03-29T17:16:25Z,bug,,,"Is there a way to add a global catch-all error handler in which I can change the response to a generic JSON response?

I can't use the `got_request_exception` signal, as it is not allowed to modify the response (http://flask.pocoo.org/docs/0.10/signals/).

> In contrast all signal handlers are executed in undefined order and do not modify any data.

I would prefer to not wrap the `app.handle_exception` function as that feels like internal API. I guess I'm after something like:

``` python
@app.errorhandler()
def handle_global_error(e):
  return ""Global error""
```

Note the `errorhandler` does not take any parameters, meaning it would catch all exceptions/status codes which does not have a specific error handler attached to them. I know I can use `errorhandler(500)` to catch exceptions, but if I do `abort(409)` for example, it will still return a HTML response.
"
1405,Test_import_migration.py updated,2015-03-28T09:33:04Z,2015-03-28T12:37:22Z,,,,"From Issue #1135 ""Test_import_migration.py"" file updated.
"
1404,Replaced flask.ext with flask and flask.ext. with flask_,2015-03-28T09:27:47Z,2015-03-28T12:34:52Z,,,,"Fixes #1135 
"
1403,fix bad autodoc signature when functions are decorated,2015-03-27T18:17:41Z,2015-06-06T02:12:13Z,,,,"It's very annoying when you read the API documentation, all decorated functions haven't the correct signature.

Example : 

`errorhandler(*args, **kwargs)`

should be 

`errorhandler(code_or_exception)`

this PR fixes this issue with an elegant solution found here : https://github.com/praw-dev/praw/blob/master/praw/decorators.py
"
1402,Add support for toplevel arrays,2015-03-27T17:29:00Z,2016-01-25T15:54:37Z,,,,"Multiple issues including #248 call for `jsonify` to handle lists. As discussed there, allowing toplevel arrays should pose no security problem nowadays. A config parameter is added to enable this functionality, and an array is returned only when a conversion to an object is not possible to maintain backwards compatibility.

In short, when `JSONIFY_ALLOW_TOPLEVEL_ARRAY` is set, `jsonify(1, 2, 3)`, `jsonify(question='Ultimate', answer=42)`, and `jsonify({'question': 'Ultimate', 'answer': 42})` all work as expected.  Note that unlike dicts, `jsonify([1, 2, 3])` will result in nested lists, so always use `jsonify(*l)` for a list variable `l`.
"
1401,Fix Possible Typo,2015-03-27T16:31:07Z,2015-03-29T11:41:28Z,,,,"Looks like that was meant to be `config_key`. It works by accident because the function is defined in the same scope as the loop that passes `config_key` to `apprunner`.
"
1400,Add support for toplevel arrays,2015-03-27T16:17:41Z,2015-03-27T16:35:27Z,,,,"Multiple issues including #248 call for jsonify to handle lists.  As discussed there, allowing toplevel arrays should pose no security problem nowadays.  A config parameter is added to enable this functionality, and a list is jsonified only when no `kwargs` is given to maintain backwards compatibility.  In short, when `JSONIFY_ALLOW_TOPLEVEL_ARRAY` is set, `jsonify(1, 2, 3)`, `jsonify([1, 2, 3])`, `jsonify(question='Ultimate', answer=42)`, and `jsonify({'question': 'Ultimate', 'answer': 42})` all work as expected.  Note that `jsonify(1)` produces `""[1]""`, which may or may not be wanted.
"
1399,Propose this file,2015-03-27T09:26:40Z,2015-03-27T11:37:51Z,,,,"Test
"
1398,"Oops, didn't mean to post this.",2015-03-27T02:06:19Z,2015-03-27T02:06:24Z,,,,"I know man
"
1397,flask.Request should have an is_static field for content served from the static folder,2015-03-26T14:17:43Z,2015-03-30T22:14:53Z,good first issue,,,"It would be nice to be able to easily tell static content served from flask is static in a before_request for example.
"
1396,Flask mailing list not accepting my messages,2015-03-24T03:36:23Z,2015-03-31T14:00:05Z,discussion,,,"Over the past 2 months I've sent 3 questions to the mailing     flask@librelist.com mailing list. It had worked for me before, The questions have been completely ignored, and they don't even appear in the archive.

I've sent another question earlier, in mid December 2014, and it was archived and responded to. The 3 questions since then have not.
"
1395,Support for mixins on MethodViews,2015-03-23T22:15:34Z,2015-08-18T23:59:03Z,,,,"It looks like @menudoproblema already has PR open for this: #1276 

I'm filing this issue to register my interest in having support for implementing HTTP methods via mixins on `MethodView` classes as well.
"
1394,url_for within different Flask instances,2015-03-23T20:53:33Z,2015-03-23T20:58:36Z,,,,"Hi everyone, question here.
I have complex flask application with several Flask instances dispatched by werkzeug middleware. And in such situation I have two questions related not actually with url_for, but with flask context management actually.
1) How do I create url from one application to another?
2) Main one - how do I create url for specific application with no app_context at all. For example i need to create some url on import time or from celery task. I tried to do wrapper over all application instances and redefine url_for like

```
def url_for(self, *args, **kwargs):
    with self.app.app_context():
        return url_for(*args, **kwargs) 
```

but just received following error
""Application was not able to create a URL adapter for request independent URL generation. You might be able to fix this by setting the SERVER_NAME config variable.""
Any suggestions?
"
1393,Ignore handled exception when popping the context,2015-03-23T15:19:32Z,2015-03-23T15:44:37Z,,,,"This is a fix for #1392; the app and request contexts should not report an exception when tearing down after an exception has already been handled in a `with` statement.
"
1392,AppContext.pop() should use a different sentinel for the exception value.,2015-03-23T14:49:26Z,2015-03-23T15:47:24Z,,,,"Consider the following:

``` python
from flask import Flask
app = Flask(__name__)

@app.teardown_appcontext
def teardown(exception):
    print exception

with app.app_context():
    try:
        raise ValueError()
    except ValueError:
        pass
```

Within the `app.app_context()` context (managed by `with`) an exception is raised and handled. However, the `teardown_appcontext()` handler is still passed the exception value.

That's because the exception was raised and handled within the same frame, and thus `sys.exc_info()` is still available. The `AppContext.__exit__()` method did pass in `None` for the exception value:

``` python
def __exit__(self, exc_type, exc_value, tb):
    self.pop(exc_value)
```

but the `AppContext.pop()` method cannot distinguish this from not passing in a value at all:

``` python
def pop(self, exc=None):
    """"""Pops the app context.""""""
    self._refcnt -= 1
    if self._refcnt <= 0:
        if exc is None:
            exc = sys.exc_info()[1]
        self.app.do_teardown_appcontext(exc)
```

This can easily be remedied by using a different sentinel default value:

``` python

_sentinel = object()

def pop(self, exc=_sentinel):
    """"""Pops the app context.""""""
    self._refcnt -= 1
    if self._refcnt <= 0:
        if exc is _sentinel:
            exc = sys.exc_info()[1]
        self.app.do_teardown_appcontext(exc)
```
"
1391,How to include pages dynamically in flask,2015-03-23T13:43:19Z,2015-03-23T13:49:52Z,,,,"Hi I am developing one page that has header, footer, menu and main body page.

The header and footer are never get change. Whennever the user clicks the menu, then it should redirect to corresponding main body page.

Is there any framework there in flask? Dynamically include pages. 

I don't want to refresh header, footer, menu.
"
1390,before_render_template signal,2015-03-23T08:12:03Z,2015-06-17T13:46:14Z,,,,"fix #1370
"
1389,Always run memory tests,2015-03-22T11:49:30Z,2015-03-23T15:41:29Z,,,,
1388,Flask doesn't support resume download to client (no HTTP byte-range support) in 'static' folder,2015-03-22T00:56:19Z,2015-03-29T12:11:30Z,,,,"app = Flask(**name**, static_folder='static', static_url_path='')

I've tested this, currently Flask seems doesn't support resuming download when serving static files in ""static"" directory. 
This feature is very useful if the client (browser/download manager) requested very large files.
"
1387,Cannot install Flask on Ubuntu Server 14.10,2015-03-21T04:48:38Z,2015-03-29T12:01:00Z,,RuntimeError,RuntimeError: maximum recursion depth exceeded,"No matter what I try (setup.py Pip), I always get a maximum recursion depth exceeded. I know nothing about Python, and I need it as a requirement for another program. How could I go about fixing this?

'python setup.py' dump: (Beware, really long!)

```
Traceback (most recent call last):
  File ""setup.py"", line 110, in <module>
    test_suite='flask.testsuite.suite'
  File ""/usr/lib/python2.7/distutils/core.py"", line 111, in setup
    _setup_distribution = dist = klass(attrs)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 580, in resolve
    dist = best[req.key] = env.best_match(req, self, installer)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 825, in best_match
    return self.obtain(req, installer) # try and download/install
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 837, in obtain
    return installer(requirement)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 272, in fetch_build_egg
    dist = self.__class__({'script_args':['easy_install']})
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 225, in __init__
    _Distribution.__init__(self,attrs)
  File ""/usr/lib/python2.7/distutils/dist.py"", line 287, in __init__
    self.finalize_options()
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/setuptools/dist.py"", line 257, in finalize_options
    ep.require(installer=self.fetch_build_egg)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2029, in require
    working_set.resolve(self.dist.requires(self.extras),env,installer))
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 579, in resolve
    env = Environment(self.entries)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 748, in __init__
    self.scan(search_path)
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 777, in scan
    for dist in find_distributions(item):
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 1757, in find_on_path
    path_item,entry,metadata,precedence=DEVELOP_DIST
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2151, in from_location
    py_version=py_version, platform=platform, **kw
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 2128, in __init__
    self.project_name = safe_name(project_name or 'Unknown')
  File ""/usr/local/lib/python2.7/dist-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py"", line 1139, in safe_name
    return re.sub('[^A-Za-z0-9.]+', '-', name)
  File ""/usr/lib/python2.7/re.py"", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
RuntimeError: maximum recursion depth exceeded
```
"
1386,form.hidden_tag() not XHTML 1.1-compliant,2015-03-19T09:41:43Z,2015-03-19T13:04:35Z,,,,"Using form.hidden_tag() results in an element like the following:

<div style=""display:none;""><input id=""csrf_token"" name=""csrf_token"" type=""hidden"" value=""...""></div>


which is not compliant with the XHTML 1.1 standard as the ""input"" element is not closed.
"
1385,log,2015-03-19T04:06:31Z,2015-03-19T12:16:54Z,,,,
1384,request.files is empty after POSTing a file,2015-03-18T14:54:48Z,2015-03-23T20:58:55Z,,,,"Hey guys, I don't know if this is the right place to make this bug report, but I could sure use some help, I have been banging my head against a wall for a bit. See this repo where I'm reproducing my error: https://github.com/bepetersn/special-repo. 

I'm seeing weird behavior around the Flask `request` object. After uploading a file with the requests library, e.g. `requests.post(uri, files=<my_files>)`, by the time the `request` propagated to my view function, `request.files` was empty. Oddly, I observed that the contents of the file itself was available under `request.form[None]`. 

My only lead was that when I debugged this at length, I saw that the request data was being treated as a mimetype of ""application/x-www-form-urlencoded"" rather than the correct ""multipart/form"" for uploading binary files... But, I just threw this example together really quickly, and I'm not seeing that right now, so I'm no longer sure.

I've also seen some other errors on this repo involving calling `request.data` vs `request.form`. I don't really know anything about that. I'd greatly appreciate a pointer in the right direction.
"
1383,Fix errorhandler HTTPException normalization,2015-03-16T11:07:58Z,2017-04-17T19:10:35Z,,,,"This is barely noticeable in the development code since #839, but in the latest released version. The current code to normalize the error condition misses its apparent purpose: code_or_exception will never be an instance of HTTPException, as one might only supply an exception class and not an object.
The bug still appears when you declare an errorhandler for a numeric code after setting one for the respective exception: Then, the exception's handler will always take precedence.

The HTTPException base class has no code and therefore must be dealt with like any other exception.
"
1382,Flask Request Signal - Workflow,2015-03-15T17:07:07Z,2015-03-15T18:47:31Z,,,,"Please comment if the attached workflow is a correct description of how Flak handles an request and when and how signals are triggered

I'm particularly interested in the request_tearing_down signal. I want to log requests (user page views) to a database, but I don't want to compromise the client experience regarding speed. So I would like to only log the request data to a DB after the data was successfully sent to the client

![flask signals](https://cloud.githubusercontent.com/assets/2236950/6657010/363efcde-cb1c-11e4-8d12-2b70d72fa59b.png)
"
1381,Add note to not use plain text passwords to views.rst,2015-03-13T19:55:35Z,2016-04-05T16:53:08Z,docs,,,"In reference to issue #836, a general note about hashing passwords for security is added. This clarifies the tutorial's choice to not use secure passwords to demonstrate the basic usage of Flask.
"
1380,Add line of code required to run examples for Other Testing Tricks section,2015-03-13T03:35:58Z,2015-04-01T23:57:06Z,,,,"As it stated, documentation states full example that demonstrates this approach, with the way it is implemented. It requires this line of code to perform the test functions on the three examples under Other Testing Tricks.
"
1379,Flask-Mega Tutorial error,2015-03-13T00:24:35Z,2015-03-13T20:50:26Z,,,,"Hi i am currently working through the Flask Mega-Tutorial and when i try to create a new user in part 4 (Databases) at the Play Time section i am getting the following errors and would appreciate any help in solving this issue --- I am extremely new to Linux, Python and Flask so apologise if ive overlooked something very simple here.

> > > u = models.User(nickname='john', email='john@email.com')
> > > Traceback (most recent call last):
> > >   File ""<stdin>"", line 1, in <module>
> > >   File ""<string>"", line 2, in **init**
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/orm/instrumentation.py"", line 324, in _new_state_if_none
> > >     state = self._state_constructor(instance, self)
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py"", line 725, in __get__
> > >     obj.**dict**[self.**name**] = result = self.fget(obj)
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/orm/instrumentation.py"", line 158, in _state_constructor
> > >     self.dispatch.first_init(self, self.class_)
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/event/attr.py"", line 260, in **call**
> > >     fn(_args, *_kw)
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py"", line 2693, in _event_on_first_init
> > >     configure_mappers()
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py"", line 2589, in configure_mappers
> > >     mapper._post_configure_properties()
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py"", line 1694, in _post_configure_properties
> > >     prop.init()
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/orm/interfaces.py"", line 144, in init
> > >     self.do_init()
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py"", line 1549, in do_init
> > >     self._process_dependent_arguments()
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py"", line 1605, in _process_dependent_arguments
> > >     self.target = self.mapper.mapped_table
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py"", line 725, in __get__
> > >     obj.**dict**[self.**name**] = result = self.fget(obj)
> > >   File ""/home/gilly/microblog/flask/local/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py"", line 1535, in mapper
> > >     % (self.key, type(argument)))
> > > sqlalchemy.exc.ArgumentError: relationship 'posts' expects a class or a mapper argument (received: <class 'sqlalchemy.sql.schema.Table'>)
> > > 
> > > Thanks in advance for any help given.
> > > Wayne.
"
1378,link to sqlalchemy declarative has changed,2015-03-12T17:27:41Z,2015-03-29T20:40:45Z,,,,"Docs contain dead link
"
1377,CPU usage increase when debug=True running by virtualenv,2015-03-12T08:05:40Z,2015-03-18T23:27:05Z,,,,"When I running a flask app with debug=True in virtualenv, the cpu usage increase to 20%. But if I set debug=False, the cpu usage is only 1%.
If I running without virtualenv, all is ok.
"
1376,Update quickstart.rst doc for awareness of Flask extensions,2015-03-12T04:14:56Z,2015-03-12T08:36:07Z,,,,"Addresses concerns in issue #532 regarding not knowing about flask extensions as it is not mentioned the quick start guide. Maybe this can help increase the awareness of flask extensions to new users?
"
1375,documentation PDF link is dead,2015-03-11T22:18:33Z,2015-06-14T09:48:34Z,docs,,,"got 404 for ""download document as PDF""
"
1374,flaskr tutorial doesn't match flaskr repo,2015-03-11T19:18:33Z,2017-11-08T20:36:11Z,docs,,,"This is making it difficult as I am getting an error, I check the repo and the code is completely different. This makes it difficult for a beginner. 
"
1373,"When debug mode is enabled, control-c takes forever to quit, and reloads are slow.",2015-03-11T12:53:32Z,2015-03-18T23:27:33Z,,,,"When I do control-c in the Python Console, it either takes a minute, or doesn't do anything.
Also, when I make a change to the file and save it, it takes a while to reload the file as well.
Running Python 3.4, Windows 8.1. Running in the [Spyder IDE](https://github.com/spyder-ide/spyder) Python Console.

Edit: This also happens in the regular python console.
Edit 2: It seems that Control-C takes effect when the file reloads...
"
1372,Logging Application approaches ,2015-03-10T08:52:18Z,2015-03-18T23:30:22Z,,,,"Hi guys, I'm using for the first time your framework and I happy find out all capabilities with  this ""micro-framework'. Btw, I just came up with this decorator, something more friendly for logging task
I created my project in you want to look for a moment: http://github.com/d555/visionapp

In something like `manage.py` ,inside the Flask app in app root directory:

```
...
import logging
from logging.handlers import RotatingFileHandler
...
handler = RotatingFileHandler('app-log.txt', maxBytes=10000, backupCount=1)
handler.setLevel(logging.INFO) # puede ser loggin.ERROR
app.logger.addHandler(handler)
```

So, in a somewhere possibly `main/decorators.py`:

```
from flask import current_app
...
def logging(hora=None):
    logger = None
    def decorador(f):
        @wraps(f)
        def vista(*args, **kwargs):
            logger = current_app.logger
            kwargs['log'] = logger
            return f(*args, **kwargs)
        return vista
    return decorador
```

After that, I could nicely use the above decorator in the following way in whatever view:

```
@logging()
def view_function(log):
    log.info('friendly logging call')
   return ...
```

May be, you could just say that in each view wrote something like:

```
from flask import current_app
def view_function():
     log = current_app.logger
     log.info('another message')
```

For now, above approach works fine for me, but maybe you know a better approach to do that:
``using the logger defined in configuration of app, to access from every view functions in any folder to logger`
`
How is better do a logging tracking? (something like 'using`getLogger`? and the normal use?)
Is there something relate with`from flask import logging`. I couldn't find in documentation something relate (maybe https://github.com/mitsuhiko/flask-extended-logging, http://flask.pocoo.org/docs/0.10/errorhandling/) if It's abroad here  excuse me.

Thanks in advance.
"
1371,Update send_file() docs to clarify encoding requirement #1286,2015-03-09T15:31:56Z,2015-06-06T05:29:28Z,,,,"Hopefully makes it more clear that filenames must use `latin-1` encoding. Resolves issue #1286.
"
1370,before_render_template signal,2015-03-09T09:10:30Z,2015-06-17T13:46:19Z,,,,"This signal would receive the name of the template and the context and would be able to modify the context before the template is actually rendered. It could even go one step further and use the return value from the signal instead of rendering the template if it's not None.
"
1369,Add support for blueprint-level cli commands,2015-03-08T13:16:48Z,2016-01-25T16:09:51Z,,,,"Still WIP, but that way it can already be reviewed and commented on.

Tests are still missing and so is a `Blueprint.app_cli` which registers app-level commands from a blueprint (which I think makes sense depending on how one uses blueprints).

When finished, this will close #1357 
"
1368,Configure pytest's norecursedirs,2015-03-08T12:47:43Z,2015-03-08T12:55:39Z,,,,"Skip directories which don't contain unittests and especially virtualenvs (in folders named `env*`).
Otherwise you get ugly failures when running tests because pytest descends into the virtualenv.
"
1367,Add command line support for ext_migrate tool,2015-03-08T09:51:29Z,2015-03-23T20:39:50Z,,,,"Make /scripts into package and change setup.py to allow for command line execution of the import migration tool (#1342).

While updating the docs for #1366 I realized I needed to make the import migration tool easily executed through the command line. I will wait on submitting changes to #1366 until we can decide on how to implement use of the tool.
"
1366,Update docs to reflect deprecated ext format,2015-03-07T02:51:35Z,2015-06-06T04:13:26Z,,,,"Update docs so extension developers are urged to use the new import format in preparation for removing the magic `.ext` redirection tool. See #1135.
"
1365,Changed implementation of flash messages to use a dict instead of list,2015-03-06T23:02:04Z,2015-03-13T13:54:46Z,,,,"The underlying implementation of flash'ed messages currently uses a list of category, message tuples. This commit changes that to the more natural dictionary from category -> list of messages implementation. This still allows duplicate messages per category, but makes adding flash messages use fewer object allocations, and filtering flash messages by category faster by completely ignoring messages not in the desired set of categories.
"
1364,Update README for clarity and to remove redundancy,2015-03-05T21:05:08Z,2015-03-05T21:25:45Z,,,,"Addresses some concerns presented in issue #1157, although I don't think it is necessary to add click to the README.
"
1363,Added closing paragraph tags,2015-03-04T12:54:05Z,2015-03-04T13:47:31Z,,,,"There was no trailing paragraph tags on lines 77 & 78 for some reason.
"
1362,Flask Roadmap,2015-03-04T05:00:55Z,2015-03-04T06:02:08Z,,,,"What about Flask 1.0 roadmap?
"
1361,Method `render_template` does not use blueprint specified `template_folder`,2015-03-03T03:06:26Z,2016-05-22T10:17:20Z,blueprints,,,"1. File structure:

```
project -
      - templates \
                - a \
                      search.html
                - b \
                      search.html
      - start.py
      - myapplication \
                - test.py 
```
1. Start file:

```
# start.py
from flask import Flask
from myapplication.test import test_blueprint

app = Flask(__name__)
app.register_blueprint(test_blueprint)
```
1. my application

```
# test.py
from flask import Blueprint, render_template, abort
from jinja2 import TemplateNotFound

test_blueprint = Blueprint('test_blueprint', __name__,
                        template_folder='absolute_path_to_project/templates/a')  
                        # YES, I specified the absolute path to the template a

@test_blueprint.route('/test')
def show():
    try:
        return render_template(''search.html"") # HERE is the problem
    except TemplateNotFound:
        abort(404)
```

Is this a problem? 
        # Actually, I want to render **a/search.html**
        # But, `render_template()` does not use **test_blueprint's template_folder**
        # `render_template()` search the **template list**, find the first **search.html**, then render
        # So, maybe render **a/search.html** or **b/search.html**
        # This depend on the sequence of the **template list**
"
1360,Add exception details to response,2015-02-28T06:30:53Z,2015-03-05T19:59:12Z,,,,"This pull request is in regards to issue #1317. I reproduced the 400 error that kenjones-cisco was talking about using this code: gist.github.com/keyanp/bc4d1a3a1e6c5cb5170a

So I took a look at making a subclass of BadRequest, but indeed this is part of Werkzeug. So instead I was thinking of adding the ValueError content to the shell console or to the response body. By just adding the exception to the response body it at least improves the 400 message and probably will make it easier to debug. The response body (which is also in the gist above) would now look like:

```
<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">
<title>400 Bad Request</title>
<h1>Bad Request</h1>
<p>No JSON object could be decoded</p>
```

If this isn't really that helpful perhaps I can just output the exception details to the console? Could someone point me in the direction of where in the codebase Flask handles console logging?
"
1359,Ability to disable Flasks internal logger,2015-02-27T07:39:46Z,2015-03-01T14:26:37Z,,,,"Hi, I need to be able to disable flasks internal logger as I have implemented my own within my application that utilises Flask.

I would like this ability whether I am in debug mode or not.

TAI
"
1358,Add skip to fix unnoticed bug with import migration tool,2015-02-26T01:03:15Z,2015-02-26T09:43:34Z,,,,"See pull request #1342. Fixes logic so that imports that should not be changed are skipped, which was not happening correctly before. This was huge oversight on my part. I added a test for normal imports that shouldn't be touched.
"
1357,Support for @blueprint.cli.command,2015-02-20T12:57:19Z,,"blueprints, cli",,,"It would be great to have access to the functionality of `app.cli.command` via blueprints - i.e. something like:

``` python
blueprint = Blueprint('myblueprint', __name__,)

@blueprint.cli.command()
def doblueprintstuff():
    """"""Initialize the database.""""""
    #....
```

It would help a lot when building modular applications.
"
1356,Documentation PDF 404's on flask site,2015-02-19T20:57:27Z,2015-06-14T09:48:34Z,docs,,,"This link:

http://flask.pocoo.org/docs/flask-docs.pdf

on this page:

http://flask.pocoo.org/

Generates a 404.
"
1355,New Watchdog Reloader Is Not Detecting Changes,2015-02-19T17:05:49Z,2015-04-01T23:37:44Z,,,,"Hello all,

I just upgraded to Werkzeug 0.10, after which I install watchdog to get the new inotify reloader working to help reduce CPU usage on my laptop. However, the reloader no longer works (or at am minimum is random in what it detects). 

To start debugging, I tried to run the sample watchdog code on their homepage (https://pypi.python.org/pypi/watchdog) in an iPython shell and initially got an error. It related to not being able to allocate inotify watches due to a system constraint. After upping the limit (echo ""131072"" >> /proc/sys/fs/inotify/max_user_watches), I was able to run the code in the shell.

However, after that, the reloader still does not work. I am not sure what else I can do to help debug this, as watchdog seems to import correctly and my app does not throw any errors. Some diagnostic details:

 % lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 14.04.1 LTS
Release:    14.04
Codename:   trusty

Versions:
Werkzeug==0.10.1
watchdog==0.8.3
Flask==0.10.1

Please let me know if you need further information, I would be glad to debug.
"
1354,"improve grammar, make format consistent, and improve readability",2015-02-19T16:00:14Z,2015-03-05T20:55:08Z,,,,"Simple changes to documentation of patterns/flashing.html
"
1353,Reload takes > 60 seconds,2015-02-19T07:59:55Z,2015-03-18T23:28:23Z,,,,"Hi everyone!

Since I updated werkzeug to 0.10.1 this morning reloader stopped working. Is any specific configuration required besides installing watchdog?

I run with:

``` python
run_simple(
        hostname='0.0.0.0',
        port=5000,
        application=app,
        use_reloader=True,
        use_debugger=True,
        reloader_type='watchdog'
    )

# * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
# * Restarting with inotify reloader
```

I'm under vagrant and tried both with and without NFS to no success.
"
1352,Problem running Flask with an ssl_context under Werkzeug 0.10.1,2015-02-16T15:55:50Z,2015-02-16T17:47:10Z,,AttributeError,AttributeError: 'Context' object has no attribute 'wrap_socket',"With the last Werkzeug (0.10.1) I get the following error message:

```
Exception in thread Thread-1:
Traceback (most recent call last):
  File ""C:\PGM\Python27\lib\threading.py"", line 810, in __bootstrap_inner
    self.run()
  File ""C:\PGM\Python27\lib\threading.py"", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File ""C:\PGM\Python27\lib\site-packages\werkzeug\serving.py"", line 602, in inner
    passthrough_errors, ssl_context).serve_forever()
  File ""C:\PGM\Python27\lib\site-packages\werkzeug\serving.py"", line 506, in make_server
    passthrough_errors, ssl_context)
  File ""C:\PGM\Python27\lib\site-packages\werkzeug\serving.py"", line 450, in __init__
    self.socket = ssl_context.wrap_socket(self.socket,
AttributeError: 'Context' object has no attribute 'wrap_socket'
```

Reverting to Werkzeug 0.9.6 make it work again like a charm.
"
1351,Overloading of JSON Decoder causing cookies decoding problems,2015-02-16T15:29:17Z,2015-02-16T15:41:15Z,,,,"When trying to change the flask.json_decoder to my own decoder, the unserialisation of cookies doesn't work anymore.

```
# -- coding: utf-8

from flask import Flask, flash, url_for, redirect, render_template_string
from flask.json import JSONEncoder, JSONDecoder


template = """"""
<!DOCTYPE html>
<html><head><title>Test JSON encoder/decoder</title></head><body>
{% with messages = get_flashed_messages(with_categories=true) %}{% if messages %}{% for message in messages %}
<p>Flash: {{ message }}</p>
{% endfor %}{% endif %}{% endwith %}
<p>Flash should be: ['Flash message', 'success']</p>
<p><a href=""{{ url_for('index') }}"">Try again</a></p>
</body></html>
""""""


class CustomJSONEncoder(JSONEncoder):
    """""" Do nothing custom json encoder """"""
    def default(self, obj):
        return super(CustomJSONEncoder, self).defaults(obj)


class CustomJSONDecoder(JSONDecoder):
    """""" Do nothing custom json decoder """"""
    def __init__(self, *args, **kargs):
        super(CustomJSONDecoder, self).__init__(object_hook=self.decode)

    def decode(self, d):
        return d


app = Flask(__name__, static_url_path='')
app.config['SECRET_KEY'] = 'secret-key'
app.json_encoder = CustomJSONEncoder
app.json_decoder = CustomJSONDecoder        # WorkingCustomJSONDecoder


@app.route('/')
def index():
    flash('Flash message', 'success')
    return redirect(url_for('display'))


@app.route('/b')
def display():
    return render_template_string(template)


if __name__ == '__main__':
    app.run()
```

For the cookies to work again I should copy part of TaggedJSONSerializer in my decoder...

```
import uuid
from base64 import b64decode
from werkzeug.http import parse_date
from markupsafe import Markup
from flask._compat import iteritems


class CustomJSONDecoder(JSONDecoder):
    """""" Do nothing custom json decoder """"""
    def __init__(self, *args, **kargs):
        super(CustomJSONDecoder, self).__init__(object_hook=self.decode)

    def decode(self, d):
        # Copy of the code from Flask.sessions.TaggedJSONSerializer(object).loads(self, value).object_hook(obj)
        if len(d) == 1:
            the_key, the_value = next(iteritems(d))
            if the_key == ' t':
                return tuple(the_value)
            elif the_key == ' u':
                return uuid.UUID(the_value)
            elif the_key == ' b':
                return b64decode(the_value)
            elif the_key == ' m':
                return Markup(the_value)
            elif the_key == ' d':
                return parse_date(the_value)
        return d
```

Could it be a but or most probably an error from my part?
"
1350,Include wheels on the PyPI release,2015-02-16T01:29:22Z,2016-04-04T21:34:11Z,,,,"It would be a nice speed increase for `pip install flask` if the PyPI release had wheel distributions.
"
1349,Signals.rst: Grammar and readability fixes,2015-02-09T09:03:46Z,2015-02-09T12:42:06Z,,,,
1348,sessions not saved when streaming,2015-02-08T19:03:16Z,2017-06-03T19:26:15Z,"bug, session",,,"When streaming, changes to the session object at the start of the request 
processing are never saved at all, the moment template rendering starts, a new 
session object is created which is then saved.

The statement on IRC was first that this is due to the fact that sessions (by default) are stored client side, and can not change anymore after the headers are send.
This is only true for sessions that are stored client side, if the sessions are server side it should be possible to change (and save) them during the whole request/response.
The real problem here seems to be that a new session is created when the stream starts.

We used the following example to stream contents: http://flask.pocoo.org/docs/0.10/patterns/streaming/

For now a workaround is to explicitly save the session after modifying, before rendering the template / starting the stream.

Expected output is always the same, one time session open and one time session save.
In the stream example the output is different; 2 sessions are opend, the first one is the one that changes, but the second one (this is opened when the stream starts) is the only one that is saved.
"
1347,Import redirection makes it difficult to catch exceptions,2015-02-07T23:13:58Z,2015-03-09T08:43:20Z,,,,"See https://github.com/graup/flask-restless/blob/post-excluding-id/tests/test_manager.py#L568. Here we are trying to catch an exception using the `nose.tools.raises` decorator. On Python 3, we seem to be running into an issue with Flask's extension import redirect.

The issue is that when the exception gets raised (in https://github.com/graup/flask-restless/blob/post-excluding-id/flask_restless/manager.py#L484), it gets raised as an instance of `flask_restless.manager.IllegalArgumentError`, not as an instance of `flask.ext.restless.manager.IllegalArgumentError`. This can be verified by the code below (if you have the source code for Flask-Restless available in your current working directory):

```
>>> from flask.ext.restless.manager import IllegalArgumentError as E1
>>> from flask_restless.manager import IllegalArgumentError as E2
>>> E1
<class 'flask.ext.restless.manager.IllegalArgumentError'>
>>> E2
<class 'flask_restless.manager.IllegalArgumentError'>
>>> E1 is E2
False
```

Now when nose tries to check for a raised instance of `flask.ext.restless.manager.IllegalArgumentError`, it doesn't find one, because the raised exception is really an instance of `flask_restless.manager.IllegalArgumentError`. What I would expect to happen is that `E1 is E2`.
"
1346,"Remove bad security advice about send_file, fixes #1345",2015-02-07T23:07:23Z,2015-02-08T12:42:37Z,,,,"Signed-off-by: Edward Z. Yang ezyang@cs.stanford.edu
"
1345,flask.send_file gives bad security advice,2015-02-07T22:54:27Z,2015-02-08T12:42:38Z,docs,,,"On http://flask.pocoo.org/docs/latest/api/#flask.send_file the following is suggested:

> Please never pass filenames to this function from user sources without checking them first. Something like this is usually sufficient to avoid security problems:
> 
> ```
> if '..' in filename or filename.startswith('/'):
>        abort(404)
> ```

This is _terrible_ advice. It would be much better to tell people that if they want to pass in filenames, they should use http://flask.pocoo.org/docs/latest/api/#flask.send_from_directory instead.
"
1344,It's been almost 2 years since the last major update.. is there any realistic date for any new release?,2015-02-07T12:22:31Z,2015-02-07T12:23:36Z,,,,
1343,make test_request_preprocessing_early_return more thorough,2015-02-06T21:12:00Z,2015-02-06T22:34:52Z,,,,
1342,flask.ext Import Migration Tool #1135,2015-02-06T19:44:15Z,2015-02-18T17:16:28Z,,,,"This is an early commit to get some feedback. This script supports single imports in two formats. I am concerned that the naive approach is not what you guys are looking for. I would obvious add support for multiple imports and the third case `import flask.ext.foo` => `import flask_foo`. But the solution is definitely super hacky.
"
1341,Use PEP440-compatible dev version,2015-02-06T17:01:14Z,2015-02-06T17:03:41Z,,,,"This fixes the problem of python packaging considering an installed dev version older than 0.0.
"
1340,Snippets - Decorators: Verify a Google authentication token,2015-02-06T09:57:09Z,2015-02-06T12:58:27Z,,,,"In snippets -> decorators -> Verify a Google authentication token
I would change:

```
                       headers={'Host': 'www.googleapis.com',
                                'Authorization': access_token})
```

to:

```
                       headers={'Host': 'www.googleapis.com',
                               'Authorization': 'Bearer '+access_token
                       })
```

You can try in https://developers.google.com/oauthplayground/
"
1339,"It resolves problems with blueprints and url_prefix ""/""",2015-02-05T22:51:34Z,2015-06-06T04:23:10Z,,,,"Issue #348 

I want to separate an app with various blueprints, frontend, backend, etc.. But when I try to register my frontend blueprint with follow code, my static css, images, js don't load.

``` python
front = Blueprint('front', __name__, static_folder='static', template_folder='./templates', url_prefix='/')
```

After debugging I found the problem. It's when try to register route, it tries to register route like //static (https://github.com/mitsuhiko/flask/blob/master/flask/blueprints.py#L68)

And then when use url_for the werkzeug routing.py (https://github.com/mitsuhiko/werkzeug/blob/master/werkzeug/routing.py#L1655) resolve url_for //static/filename it found a problem beacause there are two rules like this: 

``` python
[<Rule '/static/<filename>' (HEAD, OPTIONS, GET) -> static>, <Rule '//static/<filename>' (HEAD, OPTIONS, GET) -> front.static>]
```

So, a simple solution like concatenate a `blueprint.name` before url_prefix when is ""/"" resolve this conflict and now we can  use `url_for('front.static', filename='2.jpg')` routing resolves without problem.
"
1338,Improve docs of signatures of before/after/teardown callback funcs,2015-02-05T20:48:11Z,2015-02-05T21:11:07Z,,,,"I got bitten by the not-optimally-documented fact that the return values of `before_request` callbacks aren't ignored.
"
1337,Fixed `stream_with_context` decorator not working with generator functions that take in arguments,2015-02-05T03:12:01Z,2016-04-08T08:38:54Z,,,,"The `stream_with_context` decorator currently just throws away `*args` and `**kwargs`; it would be helpful to pass them along to the generator.
"
1336,request.url returns decoded version. How to get encoded one?,2015-02-02T06:52:58Z,2015-02-02T20:10:37Z,,,,"If I have an URL 'http://localhost/test?p=%23iphone&q=http%3A%2F%2Fwww.google.com', when I use request.url it returns a decoded version:

```
In [9]: 'http://localhost/test?p=#iphone&q=http://www.google.com'
```

The problem is I cannot use urllib.parse on the decoded version, as it will return wrong result:

```
In [9]: urlparse('http://localhost/test?p=#iphone&q=http://www.google.com')
Out[9]: ParseResult(scheme='http', netloc='localhost', path='/test', params='', query='p=', fragment='iphone&q=http://www.google.com')
```

I cannot encode it back to correct version too:

```
In [11]: quote_plus('http://localhost/test?p=#iphone&q=http://www.google.com')
Out[11]: 'http%3A%2F%2Flocalhost%2Ftest%3Fp%3D%23iphone%26q%3Dhttp%3A%2F%2Fwww.google.com'
In [13]: quote('http://localhost/test?p=#iphone&q=http://www.google.com')
Out[13]: 'http%3A//localhost/test%3Fp%3D%23iphone%26q%3Dhttp%3A//www.google.com'
```

How can I get the correct encoded URL? I think I can use request.args, but it there a better way? I also want to include possible params and fragment, are there any information from request?
"
1335,"Update api.rst, fixed spelling",2015-02-01T21:53:47Z,2015-02-01T22:16:19Z,,,,
1334,Typo on flask.g documentation section,2015-02-01T21:14:17Z,2015-02-01T21:55:03Z,,,,"Where: http://flask.pocoo.org/docs/0.10/api/#flask.g

""On top of that it will delegate access to the current application’s JSOn encoders and decoders for easier customization.""

Should be JSON not JSOn, right?
"
1333,Error 404 for linked flask-docs.zip,2015-01-29T16:42:00Z,2015-06-14T09:48:34Z,docs,,,"At
http://flask.pocoo.org/
there is a link ""zipped HTML"" to
http://flask.pocoo.org/docs/flask-docs.zip
giving 404.

Please fix :)
"
1332,Fixed minor docstring typo for teardown_request(),2015-01-29T02:06:18Z,2015-01-29T06:09:58Z,,,,
1331,Fix #1330 Support capital letters in mimetype in is_json,2015-01-28T15:38:47Z,2015-01-28T15:48:42Z,,,,
1330,Method is_json does not support capital letters in mimetype,2015-01-28T15:34:45Z,2015-01-29T09:24:38Z,bug,,,"Method is_json (flask/wrappers.py:112) tests whether mimetype is in format 'application/...+json'. According to http://tools.ietf.org/html/rfc2045, mime types are case insensitive.

'The type, subtype, and parameter names are not case sensitive.  For example, TEXT, Text, and TeXt are all equivalent top-level media types.'

So mimetype 'ApLiCaTiOn/jSoN' is technically fine (and yes, extremely rare) and as the method tests the mimetype just for lowercase mimetype 'application/json' the previous example will fail, yet it should be ok.
"
1329,Programatically enforce styleguide,2015-01-28T13:56:09Z,2016-01-25T20:26:39Z,discussion,,,"Officially the pocoo projects follow its own styleguide, however, there are no tools built around this style, so I'd recommend sticking to PEP8. Flake8 has very sensible defaults, and apart from the ever-controversial line length limit, it should be possible to integrate it into Flask quickly.
"
1328,Strange behaviour in app.route decorator 'methods' parameter when using string,2015-01-28T07:48:33Z,2015-01-31T18:11:06Z,,,,"``` python
app = Flask(__name__)

@app.route('/')
def form():
    return render_template('form_submit.html')
@app.route('/hello/', methods=('POST'))
def hello():
    name=request.form['yourname']
    email=request.form['youremail']
    return render_template('form_action.html', name=name, email=email)

# Run the app :)
if __name__ == '__main__':
  app.run( 
        host=""0.0.0.0"",
        port=int(""7777"")
  )
```

While tupple is iterable for flask accept this without any error warning or problem: even more: (""GET"", ""POST"") works as well as [""GET"", ""POST""].
However with single element string there is problem:

``` python
import requests
r = requests.post(""http://127.0.0.1:7777/hello"")
print(""Status code: {}"".format(str(r.status_code)))
print(""Headers: {}"".format(r.headers))
```

Output:

``` python
Status code: 405
Headers:  {'Allow': 'O, OPTIONS, T, P, S', 'Date': 'Wed, 28 Jan 2015 07:38:05 GMT', 'Content-Type': 'text/html', 'Server': 'Werkzeug/0.9.6 Python/3.4.2', 'Content-Length': '178'}
```

Seems that flask happily parses ((""POST"")) letter by letter. Posting with curl using method ""P""  is valid thing in flask.
While it is stupid use case, I doubt that Flask should happily churn  String letter by letter. Also I think that after possible fix it would be easy to unit test :smirk: I think even for custom method definition this is not a valid or good behaviour.
"
1327,AttributeError: 'function' object has no attribute 'name',2015-01-25T13:26:40Z,2015-01-25T13:33:58Z,,,,"when i register a blueprint in my flask app,an error occurred,the error msg is :
`

```
             /usr/bin/python3.4.2 /data/AppCode/05CodeNet/MicroStone_flask/runServer.py
             Traceback (most recent call last):
             File ""/data/AppCode/05CodeNet/MicroStone_flask/runServer.py"", line 11, in <module>
             app.register_blueprint(login)
             File ""/home/zhgk/.local/lib/python3.4/site-packages/flask/app.py"", line 62, in wrapper_func
             return f(self, *args, **kwargs)
             File ""/home/zhgk/.local/lib/python3.4/site-packages/flask/app.py"", line 880,
             in register_blueprint
            if blueprint.name in self.blueprints:
            AttributeError: 'function' object has no attribute 'name'
```

`

and  my py code is :

runserver.py:
`

```
       # -*- coding: utf-8 -*-
        """"""
             Flask应用启动入口
       """"""

        from flask import Flask

        from apps.login.ctrl.login import login

        app = Flask(__name__)
        app.register_blueprint(login)
        if __name__ == ""__main__"":
               app.run()
        __author__ = 'zhgk'
```

`

login.py : 

`

```
          # -*- coding: utf-8 -*-
               """"""

            """"""

            from flask.blueprints import Blueprint

             login = Blueprint('login', __name__)


             @login.route(""/"")
            def login():
                 return ""Login""


              __author__ = 'zhgk'
```

`

anyone can tell me why?
"
1326,Add datetime.date support to JSONEncoder,2015-01-22T18:37:56Z,2015-01-23T13:55:32Z,,,,"Add support for the datetime.date type to jsonify, which currently only supports the datetime.datetime type.
##### Changelog
1. datetime.date type support in flask.json.jsonify
"
1325,Clarify contents of request properties.,2015-01-21T05:13:53Z,2015-03-05T21:03:54Z,,,,"Change URL to IRI and update examples to include extended characters. See also this question on stackoverflow.com: http://stackoverflow.com/questions/28056959/in-python-flask-how-to-access-complete-raw-url-prior-to-un-escaping/28058628#28058628
"
1324,test_client removes query_string,2015-01-20T22:29:46Z,2015-01-25T19:43:19Z,,,,"I've been trying to use test_client with some simple services I've made but noticed that when calling a service sending something through the query string, nothing is received on the endpoint. So:

test_client.get(""http://localhost/api1_0/some-service?param1=value1"")

(Actually I use url_to())

gets to some-service as expected, but the request.args collection is empty. This call works perfectly if I use an external tool like curl.

Debugging, I've got to the method make_test_environ_builder (testing.py) where url.path is used but url.querystring is just disregarded. 

In the end, I've found a workaround (while writing this issue):

test_client.get(""http://localhost/api1_0/some-service"", query_string = ""param1=value1"")

The added parameter travels to the EnvironBuilder.

It seems to me that this is a bug since there is no reason why the query string should be disregarded in the first place. But I am new to Flask so I may be missing something

Thank you.
"
1323,Extra slashes causes route error,2015-01-19T23:22:11Z,2017-06-05T12:51:53Z,,,,"Extra slashes in the URL change the routing. For example, `/x` and `//x` do not route the same way. 
Here's a unit test which demonstrates this:

https://gist.github.com/robnagler/1a5d0361cc71a6806fc6

If you put a proxy in front of flask, it will normalize the URLs so this isn't an issue. It would seem, however, that Flask should normalize the URLs as well.
"
1322,distribute_setup.py link for windows setup has gone bad ,2015-01-17T22:27:51Z,2015-01-22T12:00:58Z,,,,"In http://flask.pocoo.org/docs/0.10/installation/#windows-easy-install the distribute_setup.py link looks like the domain owner didn't renew or lost the site so the script is not there. 

I looked elsewhere for a good script, not sure which one would be the best to think to. A lot of the sites that also host the script just look fishy but could be options. 
"
1321,Make it easier to serve 304 (Not Modified) using a database file.,2015-01-17T19:27:17Z,2016-06-05T19:43:26Z,,,,"Currently, i have to do this if i want to simply reply 304.

given an object `f` with the fields `mime`, `modified` and `data`:

``` python
rv = send_file(BytesIO(f.data), mimetype=f.mime)
rv.last_modified = f.modified.timestamp()
return rv.make_conditional(request)
```

using python 2, this would be worse, as it is most times:

``` python
rv.last_modified = (f.modified - datetime(1970, 1, 1)).total_seconds()
```

i’d like to have a way to make use of a `datetime` object or POSIX timestamp in combination with the existing `conditional` argument to `send_file`. a way that one can use without having to discover `last_modified` and `make_conditional` both, e.g. (`last_modified` can be a `datetime` or timestamp):

``` python
return send_file(BytesIO(f.data), mimetype=f.mime,
                 conditional=True, last_modified=f.modified)
```
## Docs

the documentation to the `conditional` parameter would be extended to mention that `last_timestamp` has to be supplied if the first argument is a file handle instead of a name.
## Implementation

we could create a helper function:

``` python
def to_timestamp(da_ti):
    if PY2:
        epoch = datetime(1970, 1, 1, tzinfo=da_ti.tzinfo)  # use tzinfo to ensure subtractability
        return (da_ti - epoch).total_seconds()
    else:  # we do require python 3 >= 3.3, right?
        return da_ti.timestamp()
```
"
1320,Melvinflask,2015-01-17T12:31:07Z,2015-01-17T12:36:25Z,,,,"Added www.minurl.in example to flask/examples
"
1319,Error With Quickstart Tutorial - Print url_for('profile'...) ,2015-01-17T05:13:11Z,2015-01-17T05:41:58Z,,werkzeug.routing.BuildError,"werkzeug.routing.BuildError: ('profile', {'username': 'John Doe'}, None)","## From the Quickstart Tutorial, Running, print url_for('profile', username='John Doe') generates the following error.

Traceback (most recent call last):
  File ""<stdin>"", line 2, in <module>
  File ""/Users/diek/.virtualenvs/flask_quickstart/lib/python2.7/site-packages/flask/helpers.py"", line 312, in url_for
    return appctx.app.handle_url_build_error(error, endpoint, values)
  File ""/Users/diek/.virtualenvs/flask_quickstart/lib/python2.7/site-packages/flask/app.py"", line 1641, in handle_url_build_error
    reraise(exc_type, exc_value, tb)
  File ""/Users/diek/.virtualenvs/flask_quickstart/lib/python2.7/site-packages/flask/helpers.py"", line 305, in url_for
    force_external=external)
  File ""/Users/diek/.virtualenvs/flask_quickstart/lib/python2.7/site-packages/werkzeug/routing.py"", line 1616, in build
    raise BuildError(endpoint, values, method)
werkzeug.routing.BuildError: ('profile', {'username': 'John Doe'}, None)
"
1318,grammar fixes,2015-01-16T09:39:17Z,2015-01-16T14:06:08Z,,,,"salutations should be followed by a comma: http://www.grammar-monster.com/lessons/comma_with_dear_hello_and_hi.htm

Example of other frameworks doing it correctly: http://guides.rubyonrails.org/getting_started.html#hello-rails-bang

https://docs.djangoproject.com/en/1.7/intro/tutorial03/
"
1317,flask.wrappers.Request.get_json fails to check for data,2015-01-14T23:09:05Z,2015-03-05T19:59:47Z,,,,"If it is possible to provide optional data input as part of request, and content type is set to application/json, but no data was provided as it was optional, a call flask.request.json or flask.request.get_json will result in a BadRequest exception.

Instead of attempting to perform a json.loads on None or empty string, add at line 153:
`if not data:
    return None
`

I do realize there is a silent option, but that would seem to apply to situations when data was supplied but incorrectly formatted such that json was unable to load the data. Versus the situation where there is no data at all to even load.

I have also opened an issue with flask-restful (https://github.com/flask-restful/flask-restful/issues/387) as well to change how or when the call to get_json happens, always pass silent=True, or provide consumers an option to pass through the option silent=True. 

But it seems cleaner to check for the existence of data prior to trying to process the data.
"
1316,ehh .. how to say,2015-01-14T02:54:20Z,2015-01-14T08:42:28Z,,,,"I have two models , A and B
## file A:                                           

import  ...  
app = Flask(**name**)  
@app.route('/'); 
def  something():pass

if main:
     app.run();
\\\\\\\\\\\\\\\\\\\\\\\
## file B:

import  ...  
app = Flask(**name**)  
@app.route('/abc/'); 
def  anything():pass

\\\\\\\\\\\\\\\\\\\\\\
The question is , how can i import B in to A , so  when I run A , and type localhost/abc/som in my browser , can call the function anything() in B  ?

I see the document , but I have a little confused , please help , Thanks .
"
1315,Replace TextField with StringField in registration page example,2015-01-13T22:52:48Z,2015-01-13T22:55:53Z,,,,"Replaces TextField with StringField for the username and email. Per http://wtforms.readthedocs.org/en/latest/whats_new.html#deprecated-api-s TextField has been deprecated in WTForms.
"
1314,Flaskr tutorial Step 3 is missing content,2015-01-13T17:06:27Z,2015-01-13T19:45:27Z,,,,"http://flask.pocoo.org/docs/0.10/tutorial/dbinit/
shows only the header and a portion of the first paragraph.
"
1313,Added missing import.,2015-01-13T02:03:36Z,2015-01-13T16:58:14Z,,,,"As this specific code block lists imports in general and an import from the `flask` package specifically, it should also include `g` for the sake of completeness.
"
1312,pylint errors on all example & template project,2015-01-12T18:20:50Z,2015-01-28T13:56:18Z,,,,"Like to see flask examples follow good Python standards and pass pylint validation, especially with their examples people use for setup and reference.

Is there a reason why these don't follow the standard python package and and setups found in Pypi?
Here is an example:
https://pypi.python.org/pypi/python_boilerplate_template

Having looked at several other micro frameworks (ie. Pyramid, CherryPy, Pecan, etc)... they all seem to adopt these template patterns and work with pylint.

Here is a sample ...

---

(sandbox)Davids-MacBook-Pro-2:sandbox dhwu$ pylint --version
No config file found, using default configuration
pylint 1.4.0, 
astroid 1.3.2, common 0.63.2
Python 3.4.2 (default, Dec 18 2014, 08:45:34) 
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)](sandbox)Davids-MacBook-Pro-2:sandbox dhwu$ 

(sandbox)Davids-MacBook-Pro-2:sandbox dhwu$ pylint /Users/dhwu/eng/Flask-0.10.1/examples/blueprintexample 
No config file found, using default configuration

---

F:  1, 0: error while code parsing: Unable to load file '/Users/dhwu/eng/Flask-0.10.1/examples/blueprintexample/**init**.py' ([Errno 2] No such file or directory: '/Users/dhwu/eng/Flask-0.10.1/examples/blueprintexample/**init**.py') (parse-error)
(sandbox)Davids-MacBook-Pro-2:sandbox dhwu$ 

F:  1, 0: error while code parsing: Unable to load file '/Users/dhwu/eng/Flask-0.10.1/examples/flaskr/**init**.py' ([Errno 2] No such file or directory: '/Users/dhwu/eng/Flask-0.10.1/examples/flaskr/**init**.py') (parse-error)
"
1311,Conditionally install default logging handlers,2015-01-10T21:59:19Z,2017-05-25T21:17:40Z,,,,"This is an attempt to address https://github.com/mitsuhiko/flask/issues/641, in particular the problem that `del logger.handlers[:]` is always invoked in app logger creation, destroying any previously created handlers.

Since the `LOGGER_HANDLER_POLICY` was introduced, I am using it to only conditionally install each of the two default handlers (`'debug'` and `'production'`). If the policy is `'never'`, the handlers do not need to be added and such cleanup `del logger.handlers[:]` is not necessary.

The test I added describes my use case (and I believe everyone's in https://github.com/mitsuhiko/flask/issues/641) quite accurately, and I think it is a reasonable one. 

My solution to not install handlers is different than the previous situation, which would always install them and then would do a check on each invocation of `handler.emit`. That means that if someone relied on this check and was for some reason dynamically modifying the app's configuration to change the logging policy while the app was running, it won't work any more. But, to me this seems more like an implementation artifact than a valid use-case.
"
1310,persona example error ,2015-01-05T17:09:48Z,2015-01-17T12:18:30Z,,ImportError,ImportError: No module named requests,"Out of the box, running the persona example, you get:

ImportError: No module named requests

Removing the import and replacing ""requests"" with ""request"" appears to resolve the issue.
"
1309,Uploadpattern fix,2015-01-04T22:26:36Z,2015-03-05T21:01:51Z,,,,"Fix spaces as mentioned by @ThiefMaster 
"
1308,Replace hard coded path,2015-01-04T15:42:04Z,2015-01-04T20:32:29Z,,,,"Use `os.path.dirname` and `os.path.abspath` to dynamically build upload path
"
1307,URL generation rule explained for file uploads,2015-01-03T15:10:38Z,2015-03-04T17:45:01Z,,,,
1306,Update copyright year,2015-01-03T11:29:04Z,2015-01-03T13:01:32Z,,,,
1305,request.form issue,2015-01-02T15:13:17Z,2015-01-02T17:00:42Z,,,,"Just encountered this issue. Don't know if it had already been reported.
Using `request.form['field']` to access checkbox doesnot work; whereas `request.form.get('field')` works. It is possible to use both `request.form.get('field')` or `request.form['field']` to access text fields.
"
1304,"Dev server fails to terminate, becomes orphan",2015-01-02T07:10:42Z,2017-06-14T15:29:10Z,,socket.error,socket.error: [Errno 48] Address already in use,"Running OS X Yosemite.
I had the dev server running and was toggling the debug option. i.e. app.debug={True, False} in my entry-point file. I started running without debug and was surprised that the server was loading changes I made to my templates without having to restart the server. This is the reason I was toggling the option. Though, this is not the issue, since I later learned that that was the correct behavior.

In any case, I proceeded to then set debug to True and save the entry-point file. I may have restarted the server at this point, but either way things were still running regularly. However, trouble ensued when I then commented the line setting debug to True (thus leaving it set to the default False value) and saved. After this, I restarted the server, but was met with a traceback ending in:

```
...
File ""/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/socket.py"", line 224, in meth
    return getattr(self._sock,name)(*args)
socket.error: [Errno 48] Address already in use
```

I restarted the server multiple times, before and after relaunching the Terminal app, and was met with this traceback each time. From this I suspected the server process was still running and had been orphaned. Using Activity Monitor, I found a python process running and terminated it. After that, when I tried running the dev server, I received a smaller (though similarly-ending) traceback. (not sure what to conclude from receiving a different traceback)

I didn't get to do much more testing after that. I came to GitHub to begin documenting the bug when my MacBook suddenly restarted. I can't say the restart is related to this issue. However, the restart was due to an OS X panic relating to OSXFuse. I've never had an OS X panic since updating to Yosemite, so I find a correlation to the dev server issue possible.
"
1303,Happy New Year 2015,2015-01-02T02:35:43Z,2015-01-03T13:00:39Z,,,,
1302,"testing documentation missing ""TESTING"" config",2014-12-31T21:28:12Z,2017-04-13T23:45:25Z,docs,,,"http://flask.pocoo.org/docs/dev/testing/

In the first code box there's flaskr.app.config['TESTING'] = True

But then it goes missing here:

http://flask.pocoo.org/docs/dev/testing/#the-first-test
"
1301,Allow to know about Blueprints registeration state,2014-12-31T19:15:00Z,2015-01-01T14:32:34Z,,,,"This pull-request permit to know if a blueprint has already been registered or not (very usefull for extensions).

It also remove the never used (and misleading) `Blueprint._got_registered_once` attribute.

Now, you can write:

``` python
blueprint = Blueprint('blueprint', __name__)

assert not blueprint.is_registered

app = Flask(__name__)
app.register_blueprint(blueprint)
assert blueprint.is_registered
```

It also allows to specify than a blueprint can't be registered twice with the `register_once` constructor kwarg:

``` python
blueprint = Blueprint('blueprint', __name__, register_once=True)
app = Flask(__name__)
app.register_blueprint(blueprint)
app.register_blueprint(blueprint) # Raise a warning
```
"
1300,Links to PDF and HTML Zipped Docs return 404 error,2014-12-30T23:47:12Z,2016-01-26T22:25:48Z,,,,"Trying to download the PDF version of the flask docs from URL http://flask.pocoo.org returns error code 404. Same thing with the HTML Zipped link.

Looking forward to getting into Flask!
"
1299,Update quickstart.rst,2014-12-30T17:12:32Z,2014-12-30T17:14:59Z,,,,"Minor grammar correction.
"
1298,Flask doc unittest error,2014-12-30T08:48:51Z,2014-12-30T11:08:29Z,,TypeError,TypeError: Type str doesn't support the buffer API</pre>,"Hi everyone. 
I'm new to Flask, and following the tutorial.
Untill <a href='http://flask.pocoo.org/docs/0.10/testing/#the-first-test'>The First Test</a> of <a href='http://flask.pocoo.org/docs/0.10/testing/#testing'>Testing Flask Applications</a>
the code bellow

<pre>
def test_empty_db(self):
    rv = self.app.get('/')
    assert 'No entries here so far' in rv.data
</pre>

went wrong.

<pre>Traceback (most recent call last):
  File ""D:\Programming\Python3_mine\Flask\flaskr\flaskr_tests.py"", line 21, in test_empty_db
    assert 'No entries here so far' in rv.data
TypeError: Type str doesn't support the buffer API</pre>

Then I checked the rv.data's type.(rv is a response_class object)
And it's <strong>bytes</strong> type. So I use <em>b'No entries here so far' and it worked</em>.

Did this happen to everyone else?
I think someone should correct the document to save beginners' time.

And I'm still working on my English so forgive me if there're any grammar or spelling mistake.
Thank you for reading!! :)
"
1297,Fix grammar in testing doc.,2014-12-30T05:13:12Z,2014-12-30T09:10:13Z,,,,"Fix slight grammar mistake in the testing docs.
"
1296,麻烦问下， 你的数据库怎么升级啊,2014-12-29T06:50:29Z,2014-12-29T09:52:22Z,,,,"我在models里面加了表结构， 我去执行migrate 和upgrade， 不能升级， 
数据库怎么升级啊？
"
1295,register user errorhandler in the right order,2014-12-27T14:55:51Z,2015-06-06T04:32:01Z,,,,"solved the problem proposed by  #1291 in a lighter way,
thus determining the `exception  hierarchy` at app setup time instead of running time.
"
1294,Documentation,2014-12-25T09:27:16Z,2014-12-25T15:48:49Z,,,,"Is there a documentation download for Flask (and/or Jinja and Werkzeug)?
"
1293,Project Feedback Site,2014-12-25T09:26:27Z,2014-12-25T15:49:22Z,,,,"The project feedback site referenced on the Flask website appears to be unavailable.
"
1292,fix typo,2014-12-25T03:52:39Z,2014-12-25T15:49:59Z,,,,
1291,Fixed and intuitivized exception handling,2014-12-23T18:18:53Z,2015-04-11T16:13:22Z,,,,"abandoning pull request #1281 for this.

the rationale for this is to
1. fix some logic flaws
2. make errorhandlers more intuitive by making them rely on exception hierarchy instead of registration order
3. Enable 500 handlers on blueprint level

and all this while without breaking compatibility in not-already-broken usecases (which rely on the logic flaws i fixed)

TODO:
1. bake this into some tests as well
2. one error says
   
   > It is currently not possible to register a 500 internal server error on a per-blueprint level.
   
   why is this?
"
1290,Fixed #1288: app.add_url_rule() should look for OPTIONS methods in a case-insensitive manner,2014-12-20T03:30:34Z,2014-12-26T19:14:01Z,,,,
1289,bad content-length default,2014-12-19T20:43:10Z,2016-12-12T22:03:52Z,"discussion, good first issue",,,"In werkzeug's WSGIRequestHandler, CONTENT-LENGTH defaults to an empty string ('') if the client did not provide a Content-Length header.

This is causing me problems in my flask web service, which is trying to proxy requests.  The user creates a request without Content-Length, flask gives it to me and then I pass it along to another server, which then returns HTTP 400 due to the bad Content-Length that werkzeug has inserted.  According to RFC 2616, Content-Length must be a number.

Initially I thought this should be considered a werkzeug bug but maybe the empty string was intended to be werkzeug's signifier for a non-existent Content-Length, rather than an actual Content-Length value that could be used directly.  If that's the case, then I would modify flask so that Content-Length isn't included in the incoming request's headers if it is the empty string.

Bottom line, I believe that a client request that is missing a Content-Length header should not result in an incoming flask request with the Content-Length equal to the empty string.  
"
1288,app.add_url_rule() should look for OPTIONS methods in a case-insensitive manner,2014-12-19T20:39:27Z,2014-12-26T19:14:04Z,,,,"add_url_rule() has logic that says that if the user has not included OPTIONS in their methods, flask will automatically provide an implementation.

Unfortunately, this logic is only triggered if the method string is OPTIONS in all upper case.  So if you've included lower case ""options"" in your methods you will still end up with the flask-provided options functionality.

I think it should be a case-insensitive comparison since all the rest of the routing is all case-insensitive.
"
1287,Update copyright to 2015,2014-12-19T16:42:52Z,2015-01-05T17:01:16Z,,,,
1286,send_file fails when filename contains unicode symbols,2014-12-18T13:32:21Z,2017-04-08T17:54:21Z,,,,"Hi.

I've detected an issue with supporting unicode filenames in send_file.
If send_file attempts to respond with utf-8 in http headers, the answer is empty, the log contains something like ""http-headers should containbe latin-1"".
I know that [browser support IS A MESS](http://stackoverflow.com/questions/93551/how-to-encode-the-filename-parameter-of-content-disposition-header-in-http), but it seems, that sending two filenames (`filename=` and `filename*=`) separated by semicolon should work.

I'd like this to be handled by flask or werkzeug. Will you accept such pull request?
"
1285,Use new container based Travis-CI,2014-12-18T04:25:20Z,2014-12-20T14:05:51Z,,,,"See http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/
"
1284,`itsdangerous` dependency not marked,2014-12-17T21:59:04Z,2015-01-19T17:38:02Z,docs,,,"It appears (at least in version 10.1) that there is a dependency on the `its dangerous` module. This is not in the standard library (at least on MacOS), so at least should be added to the dependencies listed in the first paragraph of http://flask.pocoo.org/docs/0.10/installation/
"
1283,response time problem,2014-12-17T14:38:19Z,2014-12-17T15:38:12Z,,,,"[sorry for my english]

sometime, my flask app return page with very slow latency time.(10s~20s)
![10497831_10204443688384494_2231919219499158793_o](https://cloud.githubusercontent.com/assets/6133895/5472442/f4cf4348-8643-11e4-94e6-f58d6c64790e.jpg)
my code is very simple and it takes times under 0.01s
so i try to strace command and i found this

command: strace -tt python main.py
![default](https://cloud.githubusercontent.com/assets/6133895/5472447/1185da42-8644-11e4-9865-1e8a53abb14f.JPG)

23:01:29.815894 recvfrom(4, """", 8192, 0, NULL, NULL) = 0 <- take 20s
23:01:49.059271 close(4)                = 0
"
1282,raise FormDataRoutingRedirect,2014-12-17T02:01:37Z,2014-12-18T06:10:37Z,,,,"I found a exception when i use NestableBlueprint. It raise FormDataRoutingRedirect Exception.
And I found this exception again where I run a simple test demo.

test demo:
@user.route('/v1/', methods=['GET', 'POST'])
def user_test():
    print 'test'
    return 'test'

get http://192.168.2.103:7700/v1  -> successed
get http://192.168.2.103:7700/v1/  -> successed
post http://192.168.2.103:7700/v1/ -> successed
post http://192.168.2.103:7700/v1  -> raise FormDataRoutingRedirect:
  File ""/home/ghostbod/python/hmt_api/venv/lib/python2.7/site-packages/flask/app.py"", line 1439, in raise_routing_exception
    raise FormDataRoutingRedirect(request)
FormDataRoutingRedirect: A request was sent to this URL (http://192.168.2.103:7700/v1) but a redirect was issued automatically by the routing system to ""http://192.168.2.103:7700/v1/"".  The URL was defined with a trailing slash so Flask will automatically redirect to the URL with the trailing slash if it was accessed without one.  Make sure to directly send your POST-request to this URL since we can't make browsers or HTTP clients redirect with form data reliably or without user interaction.

NestableBlueprint test demo
**init**.py:
from modules.warehouse.bp import warehouse
app.register_blueprint(warehouse, url_prefix='/v1/warehouse')

bp.py:
from wh.views import bp_wh
warehouse = NestableBlueprint('warehouse', **name**)
warehouse.register_blueprint(bp_wh, url_prefix='/wh')

view.ppy:
@bp_wh.route('/', methods=['POST'])
@oauth.common_require_oauth()
def test(cid, uid):
    return ""test""

http://192.168.2.103:7700/v1/warehouse/wh/?access_token=NX5fUsTrKR8Gi6AsrWgT0tFQAR5C7w -> successed
http://192.168.2.103:7700/v1/warehouse/wh?access_token=NX5fUsTrKR8Gi6AsrWgT0tFQAR5C7w -> raise FormDataRoutingRedirect(request)
"
1281,errorhandler should expect exception classes instead of exception instances ,2014-12-15T21:43:50Z,2014-12-23T18:19:17Z,,,,"the [current master](https://github.com/mitsuhiko/flask/blob/6fcc2ae3f4536e4d2651c1a00abe2306212a5bfd/flask/app.py#L1136) says:

``` python
def _register_error_handler(self, key, code_or_exception, f):
    if isinstance(code_or_exception, HTTPException):
        ...
```

this will only work if you register a exception _instance_, not an exception class, which is definitely not what users expect. instead of:

---

``` python
from werkzeug.exceptions import Forbidden
@errorhandler(Forbidden)
def forbidden(e):
    ...
```

---

``` python
from werkzeug.exceptions import Forbidden
raise Forbidden()
```

---

you’d have to do

---

``` python
from werkzeug.exceptions import Forbidden
forbidden_instance = Forbidden()
@errorhandler(forbidden_instance)
def forbidden(e):
    ...
```

---

``` python
from ..exceptions import forbidden_instance
raise forbidden_instance
```

---

i think you meant `issubclass(code_or_exception, HTTPException)`, but to preserve backwards compatibility, we should change it to accept both
"
1280,Update mongokit pattern,2014-12-15T21:28:02Z,2014-12-17T12:28:24Z,,,,"There were some code issues with the current version of the mongokit docs. Specifically, with format strings when you want to format a part of the string and then have the value placed in, you need to use format immediately to avoid a TypeError when mongokit evaluates the string. Also, uses the mongokit ValidationError instead of a plain old Exception
"
1279,Doc inconsistency,2014-12-15T10:18:35Z,2014-12-15T10:35:15Z,,,,"On http://flask.pocoo.org/docs/0.10/patterns/jquery/ there's a line saying that:

```
$('selector') selects an element and lets you operate on it.
```

But there's no `selector` anywhere except that line.

It's the same on http://flask.pocoo.org/docs/dev/patterns/jquery/.
"
1278,Command 'flask' not installed and can't run from module,2014-12-15T04:03:56Z,2014-12-17T16:05:11Z,,,,"When attempting to follow the docs, I can't run any example applications because the 'flask' command-line tool doesn't get installed.

Here's the full sequence of events using a virtualenv:

```
discovery:~/dev/flasktest% virtualenv .venv
New python executable in .venv/bin/python
Installing setuptools, pip...done.

discovery:~/dev/flasktest% . .venv/bin/activate

discovery:~/dev/flasktest% pip install Flask

discovery:~/dev/flasktest% flask
zsh: command not found: flask

discovery:~/dev/flasktest% ls .venv/bin
activate         activate.fish    easy_install     pip              pip2.7           python2
activate.csh     activate_this.py easy_install-2.7 pip2             python           python2.7
```

Additionally, when I try using the alternative method in the documentation via `python -m flask`, I get the following:

```
discovery:~/dev/flasktest% python -m flask -a hello run --debug
/Users/bc/dev/flasktest/.venv/bin/python: No module named flask.__main__; 'flask' is a package and cannot be directly executed
```

According to the docs, though, this was only a problem with Python <2.7, and I'm running with 2.7.8:

```
discovery:~/dev/flasktest% python --version
Python 2.7.8

discovery:~/dev/flasktest% pip --version
pip 1.5.6 from /Users/bc/dev/flasktest/.venv/lib/python2.7/site-packages (python 2.7)

discovery:~/dev/flasktest% pip freeze
Flask==0.10.1
Jinja2==2.7.3
MarkupSafe==0.23
Werkzeug==0.9.6
itsdangerous==0.24
wsgiref==0.1.2
```

How should I run my Flask app?
"
1277,Documentation fixes (mostly in Tutorial),2014-12-13T06:59:35Z,2014-12-16T19:30:51Z,,,,"I'm hoping to work my way through the rest of the documentation eventually, but I decided to start with the Tutorial since it's a section that I imagine quite a few people read through.
"
1276,Update MethodViewType for supporting Mixin,2014-12-12T00:30:15Z,2017-04-21T15:55:29Z,,,,"Example of use:

class ListResourceMixin(object):
    def get(self):
        ...

class MyResource(Resource, ListResourceMixin):
    ...
"
1275,Include backend argument when instantiating Celery,2014-12-11T21:28:41Z,2015-06-06T01:35:34Z,,,,"Not including the backend argument can lead to AttributeError: DisabledBackend object has no attribute for '_get_task_meta_for'. See e.g., http://stackoverflow.com/questions/23215311/celery-with-rabbitmq-attributeerror-disabledbackend-object-has-no-attribute.

At the same time, including the backend argument doesn't seem to harm anything else.
"
1274,reloader crashing,2014-12-10T15:50:10Z,2015-04-06T08:18:55Z,,ImportError,ImportError: No module named 'pantry',"Hi, I seem to be running into a Flask specific issue, here are the details:

operating system:

```
$ lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 14.04.1 LTS
Release:    14.04
Codename:   trusty
```

structure of package:

```
$ tree pantry
pantry
├── db.py
├── __init__.py
├── models
│   ├── food.py
│   └── __init__.py
└── run.py
```

The `__init__.py` files are empty.

error received:

```
$ pwd
/home/sam

$ python3.4 -m pantry.run
 * Running on http://127.0.0.1:5000/
 * Restarting with reloader
Traceback (most recent call last):
  File ""/home/sam/pantry/run.py"", line 2, in <module>
    from pantry.models.food import Food
ImportError: No module named 'pantry'
```

db.py:

``` python
from flask.ext.sqlalchemy import SQLAlchemy

db = SQLAlchemy()
```

food.py

``` python
from pantry.db import db

class Food(db.Model):

    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80), unique=True)
    amount = db.Column(db.Integer, unique=False)

    def __repr__(self):
        return '<Food %r>' % self.name
```

run.py

``` python
from flask import Flask, jsonify
from pantry.models.food import Food
from pantry.db import db
import json

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'
db.init_app(app)

@app.route('/food', methods=['GET'])
def list_food():
    items = []
    for food in Food.query.all():
        item = {
            ""name"": food.name,
            ""amount"": food.amount,
        }
        items.append(item)
    return jsonify(items)

if __name__ == '__main__':
    app.run(debug=True)
```
"
1273,Fixed wording,2014-12-09T17:17:10Z,2014-12-09T17:22:38Z,,,,
1272,Time for a new release ?,2014-12-08T14:26:34Z,2014-12-08T15:44:16Z,,,,"The latest Flask release is 0.10.1, which is close to 18 months old now (https://pypi.python.org/pypi/Flask/0.10.1). 

A lot of work has been done since, including a new CLI this summer, which I find personally very useful, and many many small fixes.

I believe that the plan was to make a 1.0 release from the current code base. I don't know if there are still blocking issues in this respect.

If there are blocking issues, maybe it's time to mark them as such on the GitHub issue tracker. It would also help some people, I think, if another 0.x release was made in the interim.

I see on https://github.com/mitsuhiko/flask/blob/master/CHANGES that a 0.10.2 release was also planned with only fixes. In that case, maybe it would be time to to it (if this is still convenient) and do a 0.11 if it's not possible to do a 1.0 in the short term.
"
1271,Route parameter types,2014-12-08T03:26:53Z,2014-12-08T13:20:02Z,,,,"`@auth.route('/users/<int:user_id>')`
If user_id > sys.maxint then user_id is long.

Is this actually wanted behavior? Because now you cant actually pass those forward without double checking them. Found this when I was expecting integer to be integer and passed it to straigh to peewee and got ""OverflowError: long too big to convert"".
"
1270,Snippet “Sign in with Steam ID” has issues,2014-12-07T01:54:26Z,2014-12-07T11:44:36Z,,,,"1. `flash` is not imported
2. `user.nickname` is defined as `db.String(80)` instead of `db.Column(db.String(80))`
"
1269,Update api.rst,2014-12-04T18:53:36Z,2014-12-04T19:20:00Z,,,,"is an -> if a
"
1268,Update api.rst,2014-12-04T18:52:15Z,2014-12-04T19:20:19Z,,,,"is -> if
"
1267,Add Bottle-like route sugar,2014-12-04T07:23:17Z,2014-12-04T10:40:11Z,,,,"As well as the usual 

```
@app.route('/login', methods=['POST'])
```

Could we have the sugary treats of shortcut decorators:

```
@app.post('/login')            // equivalent to the above

@app.put('/article/new')    // the brave new world of REST

@app.get('/login')              // synonymous with @app.route('/login')

@app.getPost('/login')       // synonymous with @app.route('login', methods=['GET','POST']
```

Okay, the last one might be going a bit far (although practically it would be very useful). But in general, they're very pleasant ways to add RESTful route descriptions.
"
1266,Slowloris DoS Vulnerability,2014-12-04T04:25:02Z,2014-12-04T15:10:38Z,,,,"The Flask development is vulnerable to RSnake's SlowLoris single-machine denial of service attack. I tested Flask on Ubuntu 14.04 with a Raspberry Pi Model B running Raspbian as the attacker. The DoS succeeded in under a second. This is generally caused by restrictive threading limits, see http://ha.ckers.org/slowloris/

Unfortunately, unlike many webservers, Flask does not seem to recover gracefully when the attack ends, instead throwing broken pipe errors and no longer serving pages until restarted. This affects both debug and normal modes.

Edit: Looks like this was discovered previously and is mentioned here: http://librelist.com/browser//flask/2014/9/2/fwd-dos-via-socketserver/
"
1265,Slash in route affects sorting/matching order,2014-12-03T15:52:20Z,2017-06-05T12:55:46Z,,,,"Hi !

I'm in trouble since a moment using Flask with that point.
I'm registring 2 url rules in a blueprint :

``` python
class MyClass(Blueprint):
    def setup(self):
        self.add_url_rule('<service>.<ext>', view_func=service_call)
        self.add_url_rule('networks.<ext>', view_func=networks)
```

I've read somewhere that the rule with the less number of parameters is taken in routing.
But, when I'm typing /networks.json, I'm in the `service_call()` function, not in `networks()`
When I print the `url_map` :

``` python
Map([ <Rule '/v1/<service>.<ext>' (HEAD, OPTIONS, GET) -> v1.service_call>,
 <Rule '/v1/networks.<ext>' (HEAD, OPTIONS, GET) -> v1.networks>,
 <Rule '/static/<filename>' (HEAD, OPTIONS, GET) -> static>])
```

After some tests, it seems that following code is working as expected :

``` python
class MyClass(Blueprint):
    def setup(self):
        self.add_url_rule('<service>/<ext>', view_func=service_call)
        self.add_url_rule('networks/<ext>', view_func=networks)
```

So, the dot isn't considered as a ""separator"" ?
Is there a way to fix that ?

Thanks in advance for your help !
"
1264,Update information about Python 3,2014-12-02T17:13:07Z,2014-12-04T21:36:31Z,,,,"Python 3 and Flask is a good combination nowadays that works rather well. In fact, [most PyPI libs](https://regebro.wordpress.com/2014/10/23/59-of-maintained-packages-support-python-3/) are now ported and it's generally ok to encourage people to use Python 3 for new projects.
"
1263,Small Typo fix,2014-12-01T03:28:41Z,2014-12-01T05:51:04Z,,,,
1262,Add JSONIFY_END_WITH_NEWLINE config variable,2014-11-29T17:12:47Z,2014-12-07T22:53:07Z,,,,"When `JSONIFY_END_WITH_NEWLINE` is set to `True`, `jsonify` responses will be terminated with a newline character.

Defaults to `False` for backward compatibility.

This came up in the context of https://github.com/kennethreitz/httpbin/issues/168
"
1261,Python 3.4 and PyCharm breakpoints when use_reloader=True,2014-11-29T08:26:48Z,2015-11-07T06:53:49Z,,,,"Running a flask application with debug=True (and thus, use_reloader=True) in Pycharm, breakpoints inside view functions don't work. Setting use_reloader=False works, but I miss the reloader. This works as expected when running on Python 2.7. I'm not sure if this is an issue on Flask, Werkzeug or Pycharm. Is there somebody with better insights on Werkzeug internals and  how the Pycharm debugger works that could help me with this?.
"
1260,Add absolute_import to Celery docs,2014-11-28T05:08:36Z,2014-12-31T17:47:54Z,,,,"Without 'from **future** import absolute_import', Celery causes import issues with many apps.
"
1259,Unicode in Flask - Uploading Files,2014-11-27T14:39:24Z,2014-11-27T15:46:52Z,,,,"As you mentioned in [Unicode in Flas](http://flask.pocoo.org/docs/0.10/unicode/) Flask is totally Unicode based. And more ""Flask just assumes that if you are sending Unicode out you want it to be UTF-8 encoded. Flask will do the encoding and setting of the appropriate headers for you."" 

This assumption is on my opinion be broken in uploading files, because the read method of the FileStorage io.BytesIO stream in the following code is returning an ascii string (type 'str') and not an unicode string (type 'unicode') - so you have to decode this string to the Flask Unicode Behaviour:

``` python
@app.route('/upload', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        f = request.files['the_file']
        content = f.stream.read()
        if isinstance(content, str): print('content is str')
        content = content.decode('utf-8')
        if isinstance(content, unicode): print('content is unicode')
        ...
```

I know, that Flask don't knows if an uploaded file will be `utf-8` or any other, but analogue as in the assumption above, Flask should assume `utf-8` and not `ascii` as default encoding.
"
1258,Use RuntimeError instead of asserts,2014-11-27T11:13:41Z,2014-11-27T13:52:38Z,,,,"I am not quite sure why `assert` is used, raising an exception that means what it means (an error happening at runtime) is IMHO much clearer than just a plain `AssertionError`.
"
1257,Calling redirect() from Blueprint#before_app_request() ,2014-11-26T04:54:18Z,2017-06-01T05:08:18Z,blueprints,,,"Calling `flask.redirect()` or returning data from a callback passed to `Blueprint#before_app_request()` are ignored, despite the callback executing.

`Flask#before_request()` and `Blueprint#before_request()` both appear to work as intended, redirecting and/or handling the request as appropriate.

It's not immediately clear from reading the inline documentation that this particular behavior is intended.  The only documentation I can find on the matter is on `Flask#preprocess_request()`, which doesn't really touch on Blueprint behavior:

```
    """"""Called before the actual request dispatching and will
    call every as :meth:`before_request` decorated function.
    If any of these function returns a value it's handled as
    if it was the return value from the view and further
    request handling is stopped.

    This also triggers the :meth:`url_value_processor` functions before
    the actual :meth:`before_request` functions are called.
    """"""
```

Is this a bug or just an undocumented / intended behavior?
"
1256,Confusing line in Uploading Files pattern documentation,2014-11-25T15:01:03Z,2015-03-05T20:27:38Z,docs,,,"flask/blob/master/docs/patterns/fileuploads.rst, after the first bit of sample code, says:

""Then we add a URL rule by hand to the application.""

But I see no place in that code where a URL rule is added.

Expected: Either a URL rule is added in that piece of code, or the text doesn't state that that happens.
"
1255,Sqlite3 doc page for 0.10.1 missing a function,2014-11-24T15:04:14Z,2014-11-24T15:31:00Z,,,,"This page http://flask.pocoo.org/docs/0.10/patterns/sqlite3/ references a function `connect_to_database` that isn't mentioned anywhere.

Looking at 0.9 http://flask.readthedocs.org/en/0.9/patterns/sqlite3/, it looks like this snippet should be somewhere:

```
def connect_to_database():
    return sqlite3.connect(DATABASE)
```
"
1254,Make the _external keyword available in the test clients url_for function,2014-11-24T14:12:05Z,2014-12-02T15:21:08Z,,,,"So basically I would like to test redirects in my codebase which I currently do the following way:

``` python
import ... import app
from flask import url_for
...

def test_stuff(client):  # client is a flask.testing.FlaskClient instance
  response = client.get(....)
  assert response.status_code == 302
  with app.test_request_context('/'):
    expected_url = url_for(..., _external=True)
  assert response.headers['Location'] == expected_url
```

While if we had the `_external` keyword on the client's url_for function I could replace the last 3 lines with this(plus I wouldn't have to do the 2 imports):

``` python
assert response.headers['Location'] == client.url_for(..., _external=True)
```
"
1253,solution for running context dependent attributes,2014-11-21T16:39:21Z,2015-10-31T03:50:08Z,,,,"It's not the best solution. It's just a concept of running out from situation when I need to get context dependant data for almost every view.

```
class MyView(BaseView):
    methods = ['GET']
    def dispatch_request(self):
        super(MyView, self).dispatch_request()
```

to get some attributes, like items in navigation menu

```
class BaseView(View):
    """"""
    BaseView provides parent class for most of the other views
    giving the content for navigation bar etc.
    """"""

    content = {}
    content['current_user'] = current_user

    def dispatch_request(self):
        """"""
        function dispatch_request is needed here, because db require
        app context is provided only in the dispatch_request scope
        """"""
        self.content['navigation_projects'] = sorted(get_project_mapping(db).keys())
```

`get_project_mapping is` is a reusable function

```
def get_project_mapping(db):
    projects_dict = {}
    projects = db.session.query(Project).filter(Project.name != None)
    for p in projects:
        projects_dict[p.name] = {
            'some_value: p.some_value,
        }
    return projects_dict
```
"
1252,hidden attribute,2014-11-19T15:39:02Z,2014-11-19T15:40:39Z,,,,"- [tests/test_helpers.py
  [135]](https://www.github.com/mitsuhiko/flask/blob/b24438b2c9df81db294d3c15681f7faf9a135970/tests/test_helpers.py#L135)
- [tests/test_helpers.py
  [127]](https://www.github.com/mitsuhiko/flask/blob/b24438b2c9df81db294d3c15681f7faf9a135970/tests/test_helpers.py#L127)
"
1251,Flask Doc Download Link Broken,2014-11-19T08:49:27Z,2015-06-14T09:48:34Z,docs,,,"The Flask Doc Download link mentioned below are broken

http://flask.pocoo.org/docs/flask-docs.pdf

http://flask.pocoo.org/docs/flask-docs.zip
"
1250,Some question about attribute cls.__unicode__ in flask/_compat.py,2014-11-18T13:35:42Z,2014-11-18T14:39:25Z,,,,"In function: implement_to_string, it build a **unicode** attribute and pass it to lambda expression.

``` python
def implements_to_string(cls):
        cls.__unicode__ = cls.__str__
        cls.__str__ = lambda x: x.__unicode__().encode('utf-8')
        return cls
```

I think it should be

``` python
def implements_to_string(cls):
        cls.__str__ = lambda x: x.__str__().encode('utf-8')
        cls.__unicode__ = cls.__str__
        return cls
```
"
1249,Need more documentation for usage of instance_path,2014-11-14T13:56:52Z,2016-06-02T19:08:14Z,docs,,,"There is one short section on instance paths in the configuration handling doc, but nothing else. I have questions like the following:

> Suppose I want to separate the application package, the instance directory and the configuration file. In other words, I want all three to be in different locations within the filesystem and I don't want those locations to be hard-coded in the package. The WSGI script should load the application factory from the package and pass the instance path and the configuration file to the factory, after which the factory returns an application object. The application and some of the blueprints registered on it should use the instance directory for uploads but not for configuration. How should I write my code in order to realize that?

Please help me find the answer to the question above, and please consider providing more documentation on the instance path!
"
1248,404 on PDF version of documentation,2014-11-12T18:01:48Z,2014-11-12T20:54:53Z,,,,"[404](https://archive.today/VkEJb) on the PDF documentation.
"
1247,Minor typos ,2014-11-12T12:34:44Z,2014-11-12T13:17:31Z,,,,
1246,Flask fails to start with use_reloader=True when using absolute import,2014-11-12T09:22:17Z,2017-05-28T04:14:06Z,,ImportError,ImportError: No module named config,"I'm using Flask v0.10.1 and I have the following project structure:

```
test
├── api
│   ├── hello.py
│   └── __init__.py
├── config
│   ├── config.py
│   └── __init__.py
└── __init__.py
```

The hello.py file is:

``` python
import sys
import flask
from test.config import config

app = flask.Flask(__name__)

@app.route('/hello')
def hello():
    return config.MESSAGE

def main(argv):
    reloader = '--reloader' in argv
    print('Starting with reloader={}'.format(reloader))
    app.run(host='0.0.0.0', port=8080, debug=True, use_reloader=reloader)

if __name__ == '__main__':
    main(sys.argv)
```

and the config.py is simply

``` python
MESSAGE = 'Hello!'
```

When I run `api.py` with `use_reloader=False` (`python -m test.api.hello`) the server starts correctly. If I run it with `use_reloader=True` (`python -m test.api.hello --reloader`) it fails with:

```
Starting with reloader=True
 * Running on http://0.0.0.0:8080/
 * Restarting with reloader
Traceback (most recent call last):
  File ""/home/kostas/Tmp/testproj/test/api/hello.py"", line 3, in <module>
    from test.config import config
ImportError: No module named config
```
"
1245,Minor typos,2014-11-08T21:22:36Z,2014-11-08T23:05:00Z,,,,
1244,Minor typos fixed,2014-11-06T22:43:37Z,2014-11-07T09:24:52Z,,,,"According to the Cambridge English Dictionary: ""web server"" == correct, ""webserver"" == incorrect.
"
1243,Minor typos fixed,2014-11-06T22:11:19Z,2014-11-07T18:22:54Z,,,,
1242,Minor typos fixed,2014-11-06T07:58:33Z,2014-11-06T13:11:47Z,,,,
1241,Flask.redirect() bug?,2014-11-05T06:40:01Z,2014-11-05T07:55:56Z,,TypeError,TypeError: redirect() takes 0 positional arguments but 1 was given,"I've been experimenting with Flask lately and when I came to this part of the tutorial [Redirects](http://flask.pocoo.org/docs/0.10/quickstart/#id4), I encountered a type error saying:

```
TypeError: redirect() takes 0 positional arguments but 1 was given
```

But when I checked the API documentation for `Flask.redirect` it states that it accepts 2 arguments `location` and `code`. Could this be a bug? I am using Flask 0.10.1, Python 3.4 on Windows 7.
"
1240,Docs style fixes: ``FOO`` vs `FOO` (reloaded),2014-11-05T05:12:26Z,2014-11-05T08:47:28Z,,,,"Using single backticks and inline markup:

```
    :file:`app.py`, :file:`yourapp/templates`, :file:`/var/www/foo`
    :mimetype:`application/json`
    :command:`pip`, :option:`--debug`
    :exc:`TypeError`
```

Using double backticks and inline markup:

```
    ``True``, ``False`` and ``None``
    ``GET`` and ``POST``
    ``DEBUG``, ``SERVER_NAME``, ``PATH_INFO``
    ``/static``, ``/``
    ``Flask-Uploads``, ``X-Forwarded-Host``
    ``<body>``, ``|safe``
    ``with``, ``for``, ``self``
    ``.html``, ``.py``
```

Without backticks:

```
    `HTTP` -> HTTP
```

Fixed typo:

```
    requirements.rst -> requirements.txt
```
"
1239,Multiple Ports in URL when using redirect behind BrowserSync,2014-11-05T00:37:30Z,2014-11-07T20:01:45Z,,Except,"Except: When I'm using `redirect(url_for('some_view'))`, it redirects me to `localhost:3000:5000/some_view`. This is absurd. I looked into the response I was getting from the redirect, but the port isn't even in there. It seems to me that it should just redirect to `/some_view`, but it somehow puts the port the app is running on in there. If I remove the second port from the url, it works again, of course.","Hey,

this may be a bit specific, but I hope there is a way to solve this, and I'm just unable to work it out.

So, my setup is like this:
- My Flask-App is running on `127.0.0.1:5000`, `SERVER_NAME` is set to `blickpunkt.dev:5000`, `blickpunkt.dev` is an entry in my hosts-File, it just translates to `127.0.0.1`
- I'm running [BrowserSync](http://www.browsersync.io) with the proxy setting set to `blickpunkt.dev:5000`, and I can open the browser to `localhost:3000 to` see everything.

This mostly works. I can see the site, I can click on most links.

Except: When I'm using `redirect(url_for('some_view'))`, it redirects me to `localhost:3000:5000/some_view`. This is absurd. I looked into the response I was getting from the redirect, but the port isn't even in there. It seems to me that it should just redirect to `/some_view`, but it somehow puts the port the app is running on in there. If I remove the second port from the url, it works again, of course.

Can I fix this behaviour? How can I fix it?
"
1238,url_for extension for REST Apis,2014-11-04T21:20:00Z,2014-11-08T23:11:48Z,,,,"Hi,

it would be extremely nice to have an extended or second url_for which only provides an url to the view function without the need of parameters. At the moment I have to workaround the standard url_for by making all parameters optional, which i think is not the right way around this, in order to make it usable in dynamical delivered javascript rest clients.

best regards

blackknight
"
1237,explain_template_loading_attempts: docstring,2014-11-04T07:51:26Z,2014-11-04T12:10:16Z,,,,"A verb apparently missing.
"
1236,Close <p> tag in flaskr login.html,2014-11-04T03:07:14Z,2014-11-04T03:14:44Z,,,,"Closes that `<p>` tag respecting the 80-chars-per-line standard.
"
1235,Tweaked sqlite3 documentation,2014-11-03T17:13:22Z,2014-11-03T17:48:31Z,,,,"I thought this sentence was a little confusing when I was reading the docs, so I tweaked it a bit.

I also considered wording it as: ""Now, to use the database, all an application must do is either have an active application context (which is always true if there is a request in flight) or create an application context itself."" -> if emphasizing the ""all an application must do"" part seems quite important.

Totally understand if this PR seems trivial/unnecessary/etc; just wanted to try throwing it out there since it was helpful to me.

Thank you!
"
1234,Minor typos and spelling fixed,2014-11-03T09:30:12Z,2014-11-03T10:00:38Z,,,,"According to http://dictionary.cambridge.org/ ""webserver"" is incorrect, ""web server"" = correct
"
1233,New label 'good first bug',2014-11-02T17:50:05Z,2015-03-19T13:26:43Z,,,,"Sorry in advance if it is not the right place to open this kind of issue.
I think it would be nice to have issues labelled 'good first bug' for people wanting to contribute but not knowing how to start.
"
1232,The 'download as PDF and zipped HTML' links on flask.pocoo.org are broken. ,2014-11-01T17:24:30Z,2014-11-01T17:29:35Z,,,,"http://flask.pocoo.org/docs/flask-docs.pdf  and http://flask.pocoo.org/docs/flask-docs.zip return 404 errors.
"
1231,flask-docs.pdf lost,2014-10-31T23:15:30Z,2014-11-01T09:51:01Z,,,,"http://flask.pocoo.org/docs/flask-docs.pdf
Chapter 404: The Lost Page
"
1230,Docs style fixes: ``FOO`` vs `FOO`,2014-10-30T16:41:55Z,2014-10-30T18:49:47Z,,,,"I chose the option that is used more often in documentation:

```
     `True`, `False`, `None` for constants
     `GET`, `POST`, `HEAD` for HTTP methods
     `app.py`, `requirements.txt` for file names
     `pip`, `easy_install` for executables
     `static`, `templates` for folder names
```

But:

```
    ``DEBUG``, ``TESTING`` for config options
    ``/``, ``/backend`` for URL paths
    ``/var/www/yourapplication`` for filesystem paths
    ``X-Forwarded-Host``, ``X-Forwarded-For`` for HTTP headers
    ``Flask-Uploads``, ``Flask-SqlAlchemy`` for extension names (at least at the first mention)
    ``template.html``, ``layout.html`` for Jinja templates
    ``<body>``, ``<script>`` for HTML tags
    ``|safe``, ``{% extends %}`` for Jinja filters and codeblocks
```

And:

```
    HTTP, not `HTTP`
```

And yet it seems that `requirements.rst` should be a `requirements.txt`.

During edits sense was not injured.
"
1229,Fix broken links on python3.rst in docs (#1228),2014-10-30T15:32:06Z,2014-10-30T19:07:56Z,,,,
1228,Doc link broken,2014-10-30T14:16:43Z,2016-01-26T22:25:55Z,docs,,,"http://flask.pocoo.org/docs/0.10/advanced_foreword/#the-status-of-python-3

> If you do want to dive into Python 3 already have a look at the python3_support page.

""python3_support"" should link to http://flask.pocoo.org/docs/0.10/python3/
"
1227,"teardown_{request,appcontext} not called on first request if it throws an exception when DEBUG is True",2014-10-29T09:25:14Z,2014-10-29T17:44:20Z,,,,"``` python
from flask import Flask

app = Flask(__name__)
app.config['DEBUG'] = True

@app.teardown_appcontext
def td_ac(exc):
    # This will not get called on the first request if the first request fails,
    # that is if /err is requested. It will be called on subsequent requests,
    # no matter if they're throwing exceptions or not.
    print('td_ac exception: %r' % exc)

@app.teardown_request
def td_req(exc):
    # This will not get called on the first request if the first request fails,
    # that is if /err is requested. It will be called on subsequent requests,
    # no matter if they're throwing exceptions or not.
    print('td_req exception: %r' % exc)

@app.route('/ok')
def ok():
    return 'ok'

@app.route('/err')
def err():
    raise Exception('error')

if __name__ == '__main__':
    app.run()
```
"
1226,Remove unused 'template' arg to _iter_loaders(),2014-10-27T23:26:04Z,2014-10-28T06:14:42Z,,,,"After last changes _iter_loaders makes no use of the 'template' argument.
"
1225,Typo and cosmetic fixes,2014-10-27T10:57:13Z,2014-10-27T17:31:33Z,,,,"Various typo fixes, wording unifications, and cosmetic changes.
"
1224,Starting up a public server.,2014-10-26T21:52:58Z,2014-10-27T19:06:11Z,,,,"I ran into this problem today with one of my applications trying to make it public to my local network.  

C:\Users\Savion\Documents\GitHub\Example-Flask-Website>flask\Scripts\python run.
py
- Running on http://127.0.0.1:5000/
- Restarting with reloader
  10.101.37.124 - - [26/Oct/2014 15:51:23] ""GET / HTTP/1.1"" 404 -
- Running on http://0.0.0.0:5000/
  10.101.37.124 - - [26/Oct/2014 15:51:38] ""GET / HTTP/1.1"" 404 -

The problem that i run into is the fact that this app continuously attempts to default to localhost. It is not until 2 Ctrl + C, that it goes to 0.0.0.0, then I still receive a 404 error in my browser.  I do have routes that are valid when running locally. I have tried to create a new virtualenv and i still recieve the same error, I reset the firewall rule on this application.  All effort that did not return rewarded.

Any Ideas onto why my app makes an attempt to startup on the localhost first then moves over, but then returns a 404?
"
1223,Improved secret key generation example,2014-10-26T20:17:02Z,2014-10-27T16:44:05Z,,,,"Improved secret key generation by randomising seed and adding SHA-2 (SHA256) hash digest of it.  Added b64 and hexdigest variants.

Should probably use random.SystemRandom(Random) instead of os.random(), but this is supposed to be a quickstart and code should have a fallback to os.random f random.SystemRandom is not available.

Uses random, hashlib, os and (optionally) base64 standard modules instead of just os.
"
1222,Set TEMPLATE_AUTO_RELOAD default value to None,2014-10-26T15:44:02Z,2014-11-02T19:46:48Z,,,,"In accordance with the proposal #1214 the default value of `TEMPLATES_AUTO_RELOAD` is set to `None` and by default templates will be reloaded only if the application is running in debug mode. A complete table of the various options:

| `TEMPLATES_AUTO_RELOAD` | `DEBUG` | Templates auto reloaded? |
| --- | --- | --- |
| `None` | `False` | no |
| `None` | `True` | yes |
| `False` | `False` | no |
| `False` | `True` | no |
| `True` | `False` | yes |
| `True` | `True` | yes |
"
1221,Some grammar and typo fixes,2014-10-26T01:56:33Z,2014-10-26T09:01:36Z,,,,
1220,Updating extension guidelines v2,2014-10-25T23:38:43Z,2017-05-25T21:22:03Z,docs,,,"Continuing #1035 and #1218, #1135 related.
"
1219,Correct the order of suggested syntax for extension imports,2014-10-25T23:00:53Z,2014-10-25T23:08:23Z,,,,"According to https://github.com/mitsuhiko/flask/issues/1092#issuecomment-47118613 and https://github.com/mitsuhiko/flask/pull/1085#issuecomment-45466907 , the correct order to attempt to import extensions should be:
1) flask_foo
2) flask.ext.foo
3) flaskext_foo.
"
1218,Correct the order of suggested syntax for extension imports,2014-10-25T22:54:08Z,2014-10-25T23:09:17Z,,,,"According to https://github.com/mitsuhiko/flask/issues/1092#issuecomment-47118613 and https://github.com/mitsuhiko/flask/pull/1085#issuecomment-45466907 , the correct order to attempt to import extensions should be:
1) flask_foo
2) flask.ext.foo
3) flaskext_foo.
"
1217,"Fix typo: ""lated later"" >> ""added later""",2014-10-25T10:14:09Z,2014-10-25T10:46:08Z,,,,
1216,Display Flask Server IP address,2014-10-25T00:58:33Z,2014-10-25T08:41:42Z,,,,"Where cat I get info of the Server IP that flask is running on?

app.config['SERVER_NAME'] returns None, any other options?
"
1215,Is there a Login Manager?,2014-10-24T19:58:12Z,2014-10-24T20:59:21Z,,,,"I made an attempt to run a flask based site using the git repo, but recieved the error that LoginManager is not defined.  I ran it again with the flask downloaded via ""pip install flask"" and it works fine.
"
1214,Switch TEMPLATES_AUTO_RELOAD to False by default,2014-10-24T11:31:19Z,2014-11-02T22:21:06Z,,,,"I see that version 1.0 includes a lot of significant changes. It may be reasonable to change the default value of option `TEMPLATES_AUTO_RELOAD` to `False`. It will reduce mostly useless interaction with the hard drive and positive impact on performance.

I think most apps that use Flask will never change the template files on the fly in production, so this change is not reflected in their stability. For other cases, it remains possible to explicitly set the value to `True`. And of course, it will not affect the debugging capabilities.

More explanation in related PR: #876. It's merged, but default value is set to `True` for backward compatibility.

@untitaker, @kennethreitz what do you think about this?
"
1213,Add trim_namespace argument for app.config.get_namespace (with tests),2014-10-24T09:25:19Z,2014-10-25T10:54:59Z,,,,"This pull request is identical with #1184. I only added tests for it. 

@untitaker, you also are asked to add entry to changelog, but the method `get_namespace` was first introduced in version 1.0:

```
- Added :meth:`flask.config.Config.get_namespace`.
```

I think that adding another entry in the same list does not make sense.
"
1212,"itsdangerous.py - ""ImportError: cannot import name _compare_digest""",2014-10-23T19:16:22Z,2014-10-24T15:52:03Z,,,,"I am trying to follow the [basic Flask tutorial online](http://flask.pocoo.org/docs/0.10/quickstart/#a-minimal-application) and getting a weird error; I've searched for a fix online but haven't seen anyone with this issue with Flask:

```
C:\Users\Gregory Gundersen\Documents\Research\flask-test>python run.py
Traceback (most recent call last):
  File ""run.py"", line 2, in <module>
    from app import app
  File ""C:\Users\Gregory Gundersen\Documents\Research\flask-test\app\__init__.py"", line 1, in <module>
    from flask import Flask
  File ""C:\Python27\lib\site-packages\flask\__init__.py"", line 21, in <module>
    from .app import Flask, Request, Response
  File ""C:\Python27\lib\site-packages\flask\app.py"", line 26, in <module>
    from . import json
  File ""C:\Python27\lib\site-packages\flask\json.py"", line 25, in <module>
    from itsdangerous import json as _json
  File ""C:\Python27\lib\site-packages\itsdangerous.py"", line 14, in <module>
    import hmac
  File ""C:\Python27\lib\hmac.py"", line 8, in <module>
    from operator import _compare_digest as compare_digest
  ImportError: cannot import name _compare_digest
```

Thoughts?
"
1211,The way Flask handles `www` and subdomains is ambiguous,2014-10-23T16:40:26Z,2017-05-22T17:16:07Z,,,,"Hi,
First, read this: ""[why use www](http://www.yes-www.org/why-use-www/)"" if you didn't already...
### The problem

having many blueprints, with only _some_ blueprints having `subdomain` value set to a given subdomain, the rest of the blueprints should serve the root domain name (with the consideration of `www`)

**examples:**
- static blueprint set to serve `static.example.com`
- dashboard blueprint set to serve `dashboard.example.com`
- other blueprints, like users, frontend, messages, ..etc do not have `subdomain` set, and should serve `www.example.com` (assuming `example.com` auto redirect to `www.example.com`)

Setting `SERVER_NAME` to `example.com` wouldn't automatically handle the `www` part, and requires setting `www` as the subdomain of the rest of the blueprints, which I find it redundant and error prone.
Setting `SERVER_NAME` to `www.example.com` will cause other subdomain blueprints to generate `static.www.example.com` and `dashboard.www.example.com` which is not what you would expect.

I tried using `app.url_map.default_subdomain = 'www'` but it had no effect at all (did I miss anything else?)

As a workaround, I was forced to use this:

``` python
def configure_blueprints(app, blueprints):
    for blueprint in blueprints:
        if not blueprint.subdomain:
            blueprint.subdomain = 'www'
        app.register_blueprint(blueprint)
```
### Suggested solution

`www` is a special subdomain and should be treated a bit differently and in a more _explicit_ manner.
- add `DEFAULT_SUBDOMAIN` or `WWW` or something similar to Flask's set of config variables/flags beside `SERVER_NAME` (which should be noted in documentation that `SERVER_NAME` should in most of the cases hold the _naked_ domain name.)
- when `DEFAULT_SUBDOMAIN = 'www' # for instance` or `WWW = True`, blueprints subdomain defaults to the given value.
#### extras

We would also add `FORCE_WWW = Boolean`, and when set to `True` would redirect the naked domain to its `www` one. Or make the subdomain param accept an array of value in case one would serve the same content via the naked and the non naked version of their domain name (e.g. `example.com` and `www.example.com` would serve the same set of their related blueprints.)

These are just some suggestions, I might be wrong or missing something, and if it's the case, please inform me.

**Related issues** to take into consideration: https://github.com/mitsuhiko/flask/issues/998, https://github.com/mitsuhiko/flask/issues/905, https://github.com/mitsuhiko/flask/issues/821 .
"
1210,One namespace for route handlers,2014-10-21T07:22:50Z,2014-10-21T15:10:28Z,,,,"In Flask 10.1 there is one namespace for route handlers, so there could be one function with the same name in each module. See example

``` python
# core.py
from flask import Flask

app = Flask('test')

@app.route('/hello_world')
def hello_world():
    return 'Hello World core!'
```

``` python
#tcore.py
import core

@core.app.route('/ahoj_svete')
def hello_world_():
    return ""Ahoj svete""
```

This example crash with ""AssertionError: View function mapping is overwriting an existing endpoint function: hello_world"". Second problem is when i use some function name which is used by flask, for example **static**.
"
1209,Handle a single unusual argument in jsonify,2014-10-20T08:25:33Z,2016-01-25T15:56:01Z,,,,"I ran into this issue today, googled it, and found [someone else having the same issue](http://stackoverflow.com/questions/20668883/flask-jsonify-object-is-not-iterable).

If you're using the JSON Encoder in Overholt, you may notice that passing one of your models to jsonify does not work.  It says ""object is not iterable"", even though your custom json encoder will turn it into an iterable in a moment.  This is because Flask is trying to make it into a dict before that can happen.

This patch fixes this case.  Also it allows you to return other legitimate singular json values such as integers and strings.  Hopefully this doesn't raise any security issues.  If it does, someone else may wish to handle this more carefully.
"
1208,Corrected api docs,2014-10-18T07:44:16Z,2014-10-18T14:20:51Z,,,,"http://flask.pocoo.org/docs/0.10/api/#flask.Request.get_json
"
1207,broken documentation links on Flask site (http://flask.pocoo.org/),2014-10-15T23:52:18Z,2014-10-16T04:55:56Z,,,,"_My colleague said 'get Flask'._

_I said 'Okay! ... wow, looks cool, and it installs so easily! ... and this site is even built on it—how delightful! ... and I can download the docs as a zipped HTML—how convenient! ... and... the link's broken—how sloppy!' ;-)_

Since the site's supposed to be built on Flask, I thought this would be the place to report this. Please excuse me if this assumption is incorrect.

At **http://flask.pocoo.org/**, which Google took me to, **clicking either of the latter links in 'Read the documentation or download as [PDF](http://flask.pocoo.org/docs/flask-docs.pdf) and [zipped HTML](http://flask.pocoo.org/docs/flask-docs.zip)'** took me to http://flask.pocoo.org/docs/flask-docs.pdf and http://flask.pocoo.org/docs/flask-docs.zip, respectively. **Both 404ed.**
"
1206,Deprecate request.json property,2014-10-14T17:22:40Z,2014-10-19T17:53:26Z,,,,
1205,Read documentation in pdf does not work,2014-10-14T12:20:16Z,2014-10-14T14:35:29Z,,,,"Read documentation in pdf button on the home page does not work. The same is the case with ""zipped html""

homepage: http://flask.pocoo.org/
PDF: http://flask.pocoo.org/docs/flask-docs.pdf (doesn't work)
Zipped HTML: http://flask.pocoo.org/docs/flask-docs.zip (doesn't work)
"
1204,"Remove deprecated old module, and start deprecating `request.json`.",2014-10-14T07:48:33Z,2014-10-14T17:23:19Z,,,,"`request.json` has not deprecated explicitly with warning.
So instead of removing it, start explicit deprecating.
"
1203,Improve jsonify() 'non pretty' compression,2014-10-13T20:34:46Z,2014-10-21T17:12:15Z,,,,"Add ""pretty"" and ""compressed"" `separators` definitions in jsonify() method. Controlled by `JSONIFY_PRETTYPRINT_REGULAR` just as `indent` level is. Reduces response size by removing unnecessary white space included by default after separators.
"
1202,Large Dictionaries Not Released From Memory,2014-10-13T16:31:53Z,2014-10-13T17:29:37Z,,,,"Example: https://gist.github.com/pawl/8067c988b1cbfd48b855

I'm using Flask==0.10.1 and python 2.7.4.

Is there a way to release the large dictionary from memory after the return?
"
1201,How do I only enable cookies if the user logs in?,2014-10-11T06:17:26Z,2014-10-12T20:04:18Z,,,,"I have a Flask app that runs on https behind nginx. The app also uses flask-login to log users in.

I have set my app.secret_key and have 3 views:

```
@app.route('/')
def index():
    return render_template('index.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    form = Login()
    if form.validate_on_submit():
        # log the user in...
        ......
        return redirect(request.args.get('next') or '/')
    return render_template('login.html', form=form)

@login_required
@app.route('/logged_in')
def logged_in():
    return render_template('logged_in.html')
```

The vast, vast majority of my users do not log in (and don't have a user account) and some are complaining that we are setting cookies on them. I can confirm this behavior in my browser (Firefox) when I delete the cookie, visit ""https://www.example.com"" and see that the cookie gets reset.

How do I change the behavior so that the cookie only gets set if the user logs in?
"
1200,MAX_CONTENT_LENGHT not being respected with JSON payload,2014-10-09T13:26:06Z,2014-10-13T18:11:23Z,,,,"Setting the MAX_CONTENT_LENGHT variable does nothing to limit a json payload larger than the set limit. We are using Flask Classy to write the post method and Flask to handle the requests.

```
<Config {'JSON_AS_ASCII': True, 'BASIC_AUTH_REALM': '', 'MONGO_UNIX_SOCKET': '/tmp/mongodb-27017.sock', 'REC_SYS_API_PORT': 5000, 'SQLALCHEMY_POOL_RECYCLE': None, 'MONGO_PORT': 27017, 'PROJECT_ROOT': '/home/project', 'SQLALCHEMY_POOL_TIMEOUT': None, 'SQLALCHEMY_RECORD_QUERIES': None, 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_NAME': 'session', 'DB_NAME': 'test_tracks', 'TRACK_ACTIONS': ['apply'], 'SQLALCHEMY_NATIVE_UNICODE': None, 'MAX_CONTENT_LENGTH': 65536, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(31), 'SQLALCHEMY_POOL_SIZE': None, 'SQLALCHEMY_MAX_OVERFLOW': None, 'TRAP_HTTP_EXCEPTIONS': False, 'BASIC_AUTH_FORCE': False, 'PRESERVE_CONTEXT_ON_EXCEPTION': None, 'SQLALCHEMY_ECHO': False, 'SESSION_COOKIE_PATH': None, 'LOGGER_NAME': 'rtr', 'MONGO_USE_SOCKET': True, 'SECRET_KEY': None, 'APP_NAME': 'trkc', 'SERVER_NAME': None, 'PREFERRED_URL_SCHEME': 'http', 'TESTING': False, 'MONGODB_SETTINGS': {'DB': 'test_tracks'}, 'USE_X_SENDFILE': False, 'SQLALCHEMY_DATABASE_URI': 'sqlite:////tmp/test.db', 'SESSION_COOKIE_SECURE': False, 'SEND_FILE_MAX_AGE_DEFAULT': 43200, 'SQLALCHEMY_BINDS': {'logsite': 'sqlite:////tmp/test_logsite.db'}, 'DEBUG': False, 'SQLALCHEMY_COMMIT_ON_TEARDOWN': False, 'APPLICATION_ROOT': None, 'JSONIFY_PRETTYPRINT_REGULAR': True, 'PROPAGATE_EXCEPTIONS': None, 'TRAP_BAD_REQUEST_ERRORS': False, 'JSON_SORT_KEYS': True, 'SESSION_COOKIE_HTTPONLY': True, 'MONGO_HOST': 'localhost'}>
```

Cheers
"
1199,make runs superfluous tests when using a virtualenv,2014-10-08T20:56:02Z,2014-10-08T21:12:54Z,,,,"Tests unrelated to flask run when I follow the ""living on the edge"" setup instructions (http://flask.pocoo.org/docs/0.10/installation/#living-on-the-edge) and run make. This was especially confusing for someone like me who is new to the project because some of these tests fail.

They're located in path/to/flask/venv/lib/python2.7/site-packages/setuptools/tests/
### My setup

os: osx 10.9.5
python: 2.7.5
virtualenv: 1.11.6
pytest: 2.6.3
### Potential fix

```
diff --git a/Makefile b/Makefile
index e1835e8..3e1473d 100644
--- a/Makefile
+++ b/Makefile
@@ -3,7 +3,8 @@
 all: clean-pyc test

 test:
-       py.test
+       py.test examples
+       py.test tests

 tox-test:
        tox
```
"
1198,Flask accessing and editing config data,2014-10-06T17:09:40Z,2014-10-06T17:25:52Z,,,,"i am using wtforms with flask framework. when i use DateTimeField i add format parameter. 
But datetime format is coming from user which is logged in

forms.py

``` python
    from flask import g
    from wtforms import *
    import wtforms.validators as v
    from flask.ext.babel import lazy_gettext as _
    from flask.ext.babel import npgettext as _n

    from app.app import app
    from app.base_forms import *
    from app.modules.post.models import *

    class PostForm(BaseForm):
        post_date = DateTimeField(""Post Date"", format = app.config.get(""DATETIME_FORMAT""), validators =[v.Required(message=_(""Post date is required""))]  )
```

i set value of app.config.get(""DATETIME_FORMAT"") on before request

``` python
    @app.before_request
    def before_request():
        if g.user.language == ""tr""
            app.config[""DATETIME_FORMAT""] = ""%d.%m.%Y %H:%M""
        else:
            app.config[""DATETIME_FORMAT""] = ""%m-%d-%Y %H:%M""
```

my application structure

```
    /app
        /modules
            /post
                /controllers.py
                /forms.py
                /models.py
        /app.py
    /run.py
```

content of /app/app.py

``` python
    from flask import Flask, url_for, g, request, redirect, render_template
    app = Flask(__name__)
    app.config.from_object('app.config.config.ConfigDevelopment')

    # Import Modules
    from modules.post.controllers.admin import module as modulePostAdmin
    app.register_blueprint(modulePostAdmin)

    # other codes here

    @app.before_request
    def before_request():
        if g.user.language == ""tr""
            app.config[""DATETIME_FORMAT""] = ""%d.%m.%Y %H:%M""
        else:
            app.config[""DATETIME_FORMAT""] = ""%m-%d-%Y %H:%M""
```

content of /run.py

``` python
    from app.app import app
    app.run(host='localhost', port=8080, debug=True)
```

when i start app it throws that error ""KeyError: 'DATETIME_FORMAT'"". i think forms.py load before request so it throws keyError.
This problem is not only about wtforms, i will get this problem in every codes which out of context. What is the correct way for solving this problem. 
"
1197,pdf documentation,2014-10-06T06:22:13Z,2014-10-06T16:41:10Z,,,,"I get ""Chapter 404: The Lost Page"" message while I click to download the pdf documentation
"
1196,Add unittest for appcontext_tearing_down signal,2014-10-03T20:06:03Z,2014-10-07T11:09:13Z,,,,"There was no unittest for the appcontext_tearing_down signal, therefore I added one.
"
1195,Link from Debug Mode to Application Errors,2014-10-03T08:46:20Z,2015-06-06T04:25:47Z,,,,"As a new user, I found that errors / stack traces were being swallowed. I searched for 'debug' in the documentation and found the Debug Mode section.

What I really wanted to know was how logging worked; it took me ages to find out because other frameworks (e.g. Rails) just calls this debugging.

This pull request adds a reference to the documentation that I think will help other people in this situation.
"
1194,wtforms get all errors as list,2014-09-30T11:39:00Z,2014-09-30T15:39:37Z,,,," i am trying to get all errors as list.
i have BaseForm

``` python
from flask.ext.wtf import Form

class BaseForm(Form):
    @property
    def error_list(self):
        _errors = []
        for fieldName, errorMessages in self.errors.iteritems():
            _errors.extend(errorMessages)
        return _errors
```

my form class

``` python
from app.base_forms import *
from wtforms import StringField, TextField, PasswordField
import wtforms.validators as validators

class LoginForm(BaseForm):
    email    = StringField('Email Address', [ validators.Email(), validators.Required(message='Forgot your email address?')])
    password = PasswordField('Password', [ validators.Required(message='Must provide a password. ')])
```

``` python
def login(self):
    form = LoginForm()
    print  form.error_list
    print form.errors
    ...
```

this output form.errors

```
    ""email"": [
      ""Forgot your email address?""
    ], 
    ""password"": [
      ""Must provide a password. ""
    ]
```

this output form.error_list

```
[
    ""Must provide a password. "", 
]
```

Normally form has two errors but form.error_list return only one error that ""Must provide a password.""
what is the wrong.
How can i solve this problem?
"
1193,PDF and HTML docs not available on homepage,2014-09-29T09:41:30Z,2014-09-29T11:40:17Z,,,,"The [PDF](http://flask.pocoo.org/docs/flask-docs.pdf) and  [HTML](http://flask.pocoo.org/docs/flask-docs.zip) linked on Flask's homepage cannot be found (404) .
"
1192,Minor typos in sqlite3.rst,2014-09-28T01:40:02Z,2014-09-28T05:10:27Z,,,,"Self-explanatory.
"
1191,Minor typo in errorpages.rst,2014-09-27T22:34:48Z,2014-09-28T05:11:39Z,,,,"Self-explanatory.
"
1190,Blueprint template not found,2014-09-27T11:46:50Z,2014-09-27T18:29:57Z,,,,"I am trying to do that example http://flask.pocoo.org/docs/0.10/blueprints/#templates .

My application structure

``` code
/app
    /modules
        /module_test
            controllers.py
            /templates
                 /test
                      index.html
    /templates
```

/app/modules/module_test/controllers.py

``` python
module = Blueprint('test', ""test"",  url_prefix='/test', template_folder='templates' )

class TestController(PublicController, View):
    methods = [""GET"", ""POST""]
    viewData = {}

    def __init__(self):
        super(TestController, self).__init__()

    def dispatch_request(self):
        self.viewData[""title""] = ""Test""
        return render_template( ""test/index.html"", **self.viewData )


module.add_url_rule('/', view_func=TestController.as_view('test'))
```

the error is **""jinja2.exceptions.TemplateNotFound TemplateNotFound: test/index.html""**.
i put index.html in /app/templates/test/index.html and i tried with flask classy it worked.

i want to put template files in blueprint that ""/app/modules/module_test/templates"". How can i solve this problem?
"
1189,Test failures with pypy2.4,2014-09-26T15:44:12Z,2014-09-26T15:44:40Z,,TypeError,TypeError: unsupported operand types(s) or combination of types: 'str' and 'unicode',"```

======================================================================
ERROR: test_timelines (minitwit_tests.MiniTwitTestCase)
Make sure that timelines work
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/testsuite/../../examples/minitwit/minitwit_tests.py"", line 109, in test_timelines
    self.register_and_login('foo', 'default')
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/testsuite/../../examples/minitwit/minitwit_tests.py"", line 55, in register_and_login
    return self.login(username, password)
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/testsuite/../../examples/minitwit/minitwit_tests.py"", line 50, in login
    }, follow_redirects=True)
  File ""/nix/store/hdq8nfhsjv4rlkzp76c6zwq9vb37his2-pypy2.4-werkzeug-0.9.4/lib/pypy2.4/site-packages/werkzeug/test.py"", line 771, in post
    return self.open(*args, **kw)
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/testing.py"", line 108, in open
    follow_redirects=follow_redirects)
  File ""/nix/store/hdq8nfhsjv4rlkzp76c6zwq9vb37his2-pypy2.4-werkzeug-0.9.4/lib/pypy2.4/site-packages/werkzeug/test.py"", line 735, in open
    response = self.run_wsgi_app(environ, buffered=buffered)
  File ""/nix/store/hdq8nfhsjv4rlkzp76c6zwq9vb37his2-pypy2.4-werkzeug-0.9.4/lib/pypy2.4/site-packages/werkzeug/test.py"", line 658, in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
  File ""/nix/store/hdq8nfhsjv4rlkzp76c6zwq9vb37his2-pypy2.4-werkzeug-0.9.4/lib/pypy2.4/site-packages/werkzeug/test.py"", line 854, in run_wsgi_app
    app_iter = app(environ, start_response)
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/app.py"", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/tmp/nix-build-pypy2.4-flask-0.10.1.drv-0/Flask-0.10.1/flask/testsuite/../../examples/minitwit/minitwit.py"", line 201, in login
    request.form['password']):
  File ""/nix/store/hdq8nfhsjv4rlkzp76c6zwq9vb37his2-pypy2.4-werkzeug-0.9.4/lib/pypy2.4/site-packages/werkzeug/security.py"", line 224, in check_password_hash
    return safe_str_cmp(_hash_internal(method, salt, password)[0], hashval)
  File ""/nix/store/hdq8nfhsjv4rlkzp76c6zwq9vb37his2-pypy2.4-werkzeug-0.9.4/lib/pypy2.4/site-packages/werkzeug/security.py"", line 117, in safe_str_cmp
    return _builtin_safe_str_cmp(a, b)
TypeError: unsupported operand types(s) or combination of types: 'str' and 'unicode'

----------------------------------------------------------------------
```
"
1188,[Website] Documentation PDF and zipped HTML download links return 404,2014-09-25T21:39:34Z,2014-09-26T05:32:16Z,,,,"http://flask.pocoo.org/docs/flask-docs.pdf

http://flask.pocoo.org/docs/flask-docs.zip
"
1187,Stop recommending Tornado as a WSGI server,2014-09-25T13:35:57Z,2014-09-25T15:21:44Z,,,,"Tornado's WSGI server is less scalable than the alternatives and only really makes sense when you have a specific need to run both WSGI apps and Tornado-native apps in the same process. This recommendation has been an ongoing source of confusion, e.g. http://stackoverflow.com/questions/26015116/making-tornado-to-serve-a-request-on-a-separate-thread.

Fixes #986.
"
1186,some grammar fixes in docs/appcontext,2014-09-22T03:06:38Z,2014-09-26T17:22:41Z,,,,"I was reading the docs, and it seemed there were a few easy fixes to make. I tried never to change the meaning of a sentence.

I hope this is useful, I certainly don't mean to be insulting.

The changes are as follows:
- ""in lack of"" -> ""for lack of""
- pillar's -> pillars
- ~~however~~
- a touch of cleanup to the ""two ways"" paragraph
- ~~on there~~
- ""database connects"" -> ""database connections""
"
1185,Fix typo in changelog,2014-09-20T06:42:23Z,2014-09-20T06:57:47Z,,,,
1184,Update config.py,2014-09-20T03:10:28Z,2014-11-05T19:23:03Z,,,,"I want to load all of my `CELERY_` options from the config and leave `CELERY_` on there.
"
1183,Update quickstart.rst,2014-09-19T22:23:08Z,2014-09-20T11:38:47Z,,,,"url converters: match the [API docs for url-route-registrations](http://flask.pocoo.org/docs/0.10/api/#url-route-registrations)
"
1182,Deprecate and remove APIs,2014-09-19T13:35:12Z,2017-05-29T20:37:41Z,,,,"When making Flask 1.0, could you remove some old APIs?

- [x] deprecate `flask.ext`, see #1484 and #1135 
- [x] remove modules, see #1204 and #861
- [x] deprecate `*_session()`
- [x] Allow all objects in JSON, see #673, #1177, #248, #170, #510
- [x] deprecate `request.json,` see #1206 and #1204 
- [x] remove support for name guessing from `send_file` #1427
"
1181,"fix typo in in README of examples (i.e., filename of test files)",2014-09-18T09:23:14Z,2014-09-18T13:37:43Z,,,,"small change here, but I suppose there was typo errors in the README of flaskr & minitwit?
"
1180,Modify docs for new testsuite,2014-09-18T01:04:13Z,2017-05-28T04:23:14Z,"blocker, docs",,,"I tried viewing some of the bundled docs with https://www.tele3.cz/jbar/rest/render.py and restview. Both returned errors.

Are there docs somewhere that would apply to latest version of test_flaskr which uses pytest?

[This one](http://flask.pocoo.org/docs/0.10/) uses unittest.
"
1179,Print line after server is started,2014-09-17T19:38:17Z,2015-11-07T07:26:22Z,,,,"I know this might sound silly, but it's actually quite a problem for me.

I have integration tests that test our infrastructure, which contains multiple web services and daemons. I wrote a small wrapper that, inside a test, when you try to access a web service, would launch it. How it works for our non-python web apps is that it launches server process and waits for a regexp that it would produce, containing ""listening on ..."" phrase. That would mean it's ready to serve requests.

Currently, our flask app prints this output when you launch app.py:

```
(tldr-env)➜  tldr-mediabuyer git:(staging) ✗ python app.py
 * Running on http://127.0.0.1:5000/
 * Restarting with reloader
```

Unfortunately, neither of these means app actually listens on those ports (it takes more than a second to actually serve requests).

So, my proposal is to only print ""Running on ..."" when you actually accept requests. Same for ""Restarting with reloader"".

I hope idea is clear and not too weird :) Thanks!

p.s.: when I said ""quite a problem"" I didn't mean it's hard to solve. It can be ""solved"" in multiple ways, but I would prefer this one as one that doesn't require you to either ""sleep"" or ""curl some url in a loop"" solutions.
"
1178,Ability to override json encoder and decoder arguments,2014-09-16T22:30:30Z,2014-11-06T21:50:31Z,,,,"I wanted to serialize objects using `for_json` methods, but I found it cumbersome to pass the `for_json=True` argument to simplejson when using Flask's `jsonify` method. Since there are other useful overrides during (de)serialization, I propose that Flask's config-object should be able to override all json options. The already supported ascii, sort_keys, prettyprint and indent-options are still supported, and take precedence over any new values.
"
1177,Should jsonify() throw an exception when provided a list?,2014-09-16T15:18:51Z,2014-10-19T22:35:40Z,,,,"Consider `jsonify()`cation of a dictionary contained in a list:

``` python
print flask.__version__
print repr(flask.jsonify([{""a"": 1, ""b"": 2}]).data)
```

With the following output:

``` python
0.10.1
'{\n  ""a"": ""b""\n}'
```

`jsonify()` has -- without complaining -- mangled the data into something really not useful: The original dictionary values are gone, and the `""b""` key suddenly is a value.

I appreciate that top-level array elements are not allowed to be created in Flask's `jsonify()` implementation (http://flask.pocoo.org/docs/0.10/security/#json-security). Also, there are for sure straight-forward strategies for solving this in application code, for example by wrapping the list in a dictionary: `jsonify({""items"": collection})`.

However, in the Python world we do not find it very often that an entity accepts invalid input and produces garbled output without complaining. Also, it looks like `jsonify()` once raised an exception when provided a list (at least in 2011 it did raise a `TypeError`: https://github.com/mitsuhiko/flask/issues/170).

Should we raise an exception again or is the current behavior carefully designed with a focus on performance? I mean, it is unlikely that this data mangling ends up in a production environment (a developer really should realize that `jsonify()` produces garbage in this case , like I did).
"
1176,turn on autoescape for `flask.templating.render_template_string`,2014-09-14T19:10:31Z,2015-06-23T07:33:52Z,,,,"This seems like a sane default, since Flask turns on autoescape by default for html files when using the more common `render_template` so users will be expecting `render_template_string` to autoescape their template variables.
"
1175,Update tests section in README file,2014-09-13T08:33:45Z,2014-09-13T09:47:42Z,,,,"Removing the old `run-tests.py` documentation. Maybe there's something more you want to add.
"
1174,docs/_themes/.git is in the tarball at PyPi,2014-09-12T20:22:21Z,2014-09-29T19:46:04Z,,,,"I was experimenting with making a clean build of a project of mine that includes `flask 0.10.1`. I was going to run `git clean -fdx` to get a pristine clean environment to build from, but it crashes:

```
thiderman@dragonisle ~/git/piper venv:piper(master:+6) 
> git clean -fdx -n 
Would remove .coverage
Would remove .tox/
Would remove argparse-1.2.1-py2.6.egg
Would remove bin/
fatal: Not a git repository: /Users/mitsuhiko/Development/flask/.git/modules/docs/_themes
```

If I remove `docs/_themes/.git` it works. git autodetects it and thinks that it's a submodule, and since my computer is not @mitsuhiko's Mac machine it kinda fails. :P

Could this file be excluded from the tarball? I can't really see that it serves a purpose, and it breaks my project in an unexpected way.
"
1173,python3 -mpdb myflaskapp.py fon ubuntu 14.04,2014-09-10T17:17:49Z,2014-10-19T18:20:57Z,bug,AttributeError,AttributeError: 'module' object has no attribute '**spec**',"On ubuntu 14.04, python3 -mpdb ... raises exception after hitting 
'c' to run on the 'import flask' statement:

Traceback (most recent call last):
  File ""/usr/lib/python3.4/importlib/util.py"", line 95, in find_spec
    spec = module.**spec**
AttributeError: 'module' object has no attribute '**spec**'

Works fine for python 2.7 though.

Here is the myflaskapp.py:

import flask
app = flask.Flask(**name**)
@app.route('/')
def root():
    return ('root')
if **name** == '**main**':
    app.run(debug=True)
"
1172,very minor spelling fixes,2014-09-10T00:13:41Z,2014-09-10T05:37:25Z,,,,
1171,Documentation on flask.pocoo.org is missing,2014-09-08T16:22:14Z,2014-09-08T16:26:39Z,,,,"This link from main page gives 404 error: http://flask.pocoo.org/docs/flask-docs.pdf
"
1170,Rewrite deployment docs,2014-09-06T20:24:10Z,2014-12-04T21:39:32Z,docs,,,"- [x] Many users falsely assume Flask's builtin server is suitable for
  deployment. Unfortunately the quickstart didn't explicitly mention this at
  all.
- [x] The change from `app.run` to the `flask` command has left some traces.
- [x] Not even the deployment docs themselves mention how bad the builtin
  server is, instead they plainly say ""don't use it"".
"
1169,"BUG in ""send_file"" and ""send_from_directory""",2014-09-04T10:38:47Z,2015-11-07T09:15:11Z,bug,,,"L496 in helpers.py
If i use flask as a package instead of a module,  I want to expose a file which is not in package.
checks in send_from_directory will be passed because of rel path.  However, in send_file,  added abs folder, it occur an error.
"
1168,function flash() not working with redirect(),2014-09-04T06:29:38Z,2014-09-04T09:13:45Z,,,,"Here's the example:

``` python
from flask import Flask, flash, get_flashed_messages, redirect, url_for

app = Flask(__name__)
app.secret_key = 'some_secret'

@app.route('/')
def index():
    app.logger.debug(get_flashed_messages())
    return 'Hello world'

@app.route('/generate/success')
def page_success():
    flash('This message will be visible!')
    return str(get_flashed_messages())

@app.route('/generate/fail',)
def page_fail():
    flash('This message will be lost!')
    return redirect(url_for('index'))

if __name__ == ""__main__"":
    app.run()
```

As you can see flash() fails when using redirect. Tried with `SERVER_NAME` both set and unset. Using `Flask==0.10.1`.

Please resolve the issue ASAP since it's a top blocker in my project.
"
1167,Randomly Unresponsive After Strange Character Requests,2014-09-03T20:37:59Z,2014-10-19T18:23:11Z,bug,,,"I use a flask server to serve static files from a server but once in a while the server becomes completely unresponsive, downloading a file keeps loading but never downloads. When I opened up the terminal, I found some weird requests, I hit CTRL + C and the server immediately becomes responsive again and downloads continue. This happens every so often and I have no idea what's causing this and how to prevent it from freezing my flask server, is this someone trying to hack?

```
user@server:~/worker# python server.py
 * Running on http://0.0.0.0:80/
93.134.13.318 - - [03/Sep/2014 02:07:18] code 400, message Bad request syntax ('\x00')
93.134.13.318 - - [03/Sep/2014 02:07:18] """" 400 -
93.134.13.318 - - [03/Sep/2014 02:07:19] ""GET http://httpheader.net HTTP/1.1"" 404 -
93.134.13.318 - - [03/Sep/2014 02:07:40] code 400, message Bad request syntax ('\x04\x01\x00P\xc6\xce\x0eu0\x00')
93.174.93.218 - - [03/Sep/2014 02:07:40] ""P��u0"" 400 -
^C----------------------------------------
Exception happened during processing of request from ('93.174.93.218 ', 45082)
Traceback (most recent call last):
  File ""/usr/lib/python2.7/SocketServer.py"", line 284, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 310, in process_request
    self.finish_request(request, client_address)
  File ""/usr/lib/python2.7/SocketServer.py"", line 323, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/usr/lib/python2.7/SocketServer.py"", line 638, in __init__
    self.handle()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 200, in handle
    rv = BaseHTTPRequestHandler.handle(self)
  File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 340, in handle
    self.handle_one_request()
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 231, in handle_one_request
    self.raw_requestline = self.rfile.readline()
  File ""/usr/lib/python2.7/socket.py"", line 447, in readline
    data = self._sock.recv(self._rbufsize)
KeyboardInterrupt
----------------------------------------
42.36.63.90 - - [03/Sep/2014 03:21:20] ""GET / HTTP/1.1"" 404 -
63.63.193.195 - - [03/Sep/2014 03:21:20] ""GET / HTTP/1.1"" 404 -
```
"
1166,run linux command in flask app,2014-09-03T05:39:13Z,2014-09-03T13:41:37Z,,,,"i need to run '/etc/init.d/httpd start' in my flask app(port is 443),i used subprocess.Popen and apache can normal start,but i found strange phenomenon,i use lsof -i:443, below is output：
python  10549   root    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10559   root    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10559   root    6u  IPv4  25518      0t0  TCP kxddz_matchserver1:443->192.168.239.1:54365 (CLOSE_WAIT)
httpd   10561 apache    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10561 apache    6u  IPv4  25518      0t0  TCP kxddz_matchserver1:443->192.168.239.1:54365 (CLOSE_WAIT)
httpd   10562 apache    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10562 apache    6u  IPv4  25518      0t0  TCP kxddz_matchserver1:443->192.168.239.1:54365 (CLOSE_WAIT)
httpd   10563 apache    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10563 apache    6u  IPv4  25518      0t0  TCP kxddz_matchserver1:443->192.168.239.1:54365 (CLOSE_WAIT)
httpd   10564 apache    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10564 apache    6u  IPv4  25518      0t0  TCP kxddz_matchserver1:443->192.168.239.1:54365 (CLOSE_WAIT)
httpd   10565 apache    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10565 apache    6u  IPv4  25518      0t0  TCP kxddz_matchserver1:443->192.168.239.1:54365 (CLOSE_WAIT)
httpd   10566 apache    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10566 apache    6u  IPv4  25518      0t0  TCP kxddz_matchserver1:443->192.168.239.1:54365 (CLOSE_WAIT)
httpd   10567 apache    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10567 apache    6u  IPv4  25518      0t0  TCP kxddz_matchserver1:443->192.168.239.1:54365 (CLOSE_WAIT)
httpd   10568 apache    5u  IPv4  25638      0t0  TCP *:443 (LISTEN)
httpd   10568 apache    6u  IPv4  25518      0t0  TCP kxddz_matchserver1:443->192.168.239.1:54365 (CLOSE_WAIT)

this why？
"
1165,Port testsuite to py.test,2014-08-31T21:56:45Z,2014-09-12T19:54:59Z,,,,"See https://github.com/pocoo/metaflask/issues/8
- [x] Remove assertion methods
- [x] Remove useless classes
- [x] Remaining testcase classes shouldn't inherit from ""TestFlask""
- [x] Remaining testcase classes shouldn't use setup and teardown but autouse-fixtures
- [x] Remove `suite` functions
"
1164,Adds 2 tests for Flask.run method,2014-08-31T19:28:24Z,2014-09-20T07:00:03Z,,,,"I saw `Flask.run` method was untested and I think a couple of tests wouldn't hurt (and increases code coverage). I would love to hear some feedback about it even if it is not merged at all. I feel pretty enthusiastic about contributing to Flask since I'm a heavy user of the framework.
"
1163,Added full_path to the Request object documentation.,2014-08-31T16:12:15Z,2014-08-31T17:06:30Z,,,,"This property is useful for generating cache keys and it is missing from the docs.
"
1162,"typo: ""weather"" -> ""whether""",2014-08-28T17:35:57Z,2014-08-28T17:39:38Z,,,,
1161,Fix warnings and code styling in the doc,2014-08-28T14:59:30Z,2014-08-28T15:02:27Z,,,,"There was a blank line missing that was generating a warning when
building the doc. Also, a removed function from cli.py was left in api.rst
(without_appcontext specifically) so this was also generating warnings.

Also corrects the format for a code block and adds a link to Werkzeug's Headers
class.
"
1160,Don't mention Flask dev releases anymore,2014-08-28T14:12:23Z,2014-08-28T14:12:27Z,,,,"Fix #1155
"
1159,Homepage: Wrong PDF and zipped HTML Link,2014-08-28T12:54:01Z,2014-08-28T14:10:30Z,,,,"The links on the homepage for the documentation PDF http://flask.pocoo.org/docs/flask-docs.pdf or zipped HTML file http://flask.pocoo.org/docs/flask-docs.zip are not valid (-> chapter 404).
"
1158,Document building protocol-relative URLs,2014-08-27T11:34:41Z,2014-08-28T14:09:55Z,,,,"https://github.com/mitsuhiko/werkzeug/pull/528
"
1157,Add Click to Readme,2014-08-26T18:05:31Z,2015-03-05T21:26:31Z,"blocker, docs",,,"Under **What do I need?** click should also be listed.
"
1156,Add missing `of` to documentation.,2014-08-26T05:21:20Z,2014-08-26T10:29:58Z,,,,"The documentation for the `Flask` class was missing a word. I felt that it is my duty to Python, Flask, and planet Earth to remedy this unfortunate snafu.

Happy Monday!
"
1155,`pip install flask==dev` does not work.,2014-08-25T17:23:47Z,2014-08-28T14:12:27Z,docs,,,"I followed the documentation found [on flask's site](http://flask.pocoo.org/docs/0.10/installation/#living-on-the-edge). What I was looking to do was `pip install Flask==dev`. Received the following traceback:

```
(burddy)crow@ burddy (master)$ pip install Flask==dev
Downloading/unpacking Flask==dev
  Could not find a version that satisfies the requirement Flask==dev (from versions: 0.1, 0.10.1, 0.10, 0.2, 0.3.1, 0.3, 0.4, 0.5.1, 0.5.2, 0.5, 0.6.1, 0.6, 0.7.1, 0.7.2, 0.7, 0.8.1, 0.8, 0.9)
Cleaning up...
No distributions matching the version for Flask==dev
```
"
1154,consider adding CC-BY license for documentation only,2014-08-19T22:54:35Z,2015-04-19T08:32:04Z,discussion,,,"Many channels for distribution of documentation (Internet Archive, most libraries) find it easier to distribute the documentation if it is Creative Commons (CC) licensed -  they aren't able to spend the time to read a custom license, even if it's just a modified Apache License. But for documentation only, there's really no difference between the Flask license and CC-BY http://creativecommons.org/licenses/by/4.0/
"
1153,"Rewrite docs for context locals, request contexts, and app contexts",2014-08-19T06:36:11Z,2017-05-25T21:18:53Z,docs,,,"Closes #1151.

The following is an incomplete draft. However, I wanted to request comments immediately, in case anything was severely wrong.

The doc should be updated to include:
- [x] How context-local objects in Flask are implemented

Will squash commits later.

---

> The document still needs to cover:
- [ ] When to use the application context
- [ ] What happens during an exception (see http://flask.pocoo.org/docs/reqcontext/ and http://flask.pocoo.org/docs/api/#flask.ctx.RequestContext)

EDIT (08-21)
- [ ] It would useful to ensure anything relevant in ""Testing Flask Applications"" is included. http://flask.pocoo.org/docs/testing/#faking-resources-and-context
- [ ] It would probably be useful to separate the notion of context objects from proxies; context objects could exist without proxies.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/pallets/flask/1153)

<!-- Reviewable:end -->
"
1152,"""after_response""?",2014-08-18T09:52:39Z,2014-08-18T17:27:43Z,,,,"I am curious why there isn't an after_response function, in the spirit of after_request. There are often tasks that can take a while and don't need to be 100% reliable, such as writing statistics to a data store, or hitting a third party API, and don't affect the response object. It'd therefore be nice to be able to do this work after the response object has been sent to the user, with an after_response function. This could be done with a task queue, but for a lot of projects this vastly increases complexity.
"
1151,"Documention for ""The Application Context"" is confusing",2014-08-15T16:48:13Z,,docs,,,"See: http://flask.pocoo.org/docs/appcontext/

There seems to be two main issues with this page.
1. I'm not sure how to say it, but the prose is vague and lacks focus. The effect in any case is that the concepts are difficult to grasp. [1] [2] [3]
2. Syntax errors and wordiness [4] [5] [6]

[1] ""The application setup state in which the application implicitly is on the module level.""
[2] ""In contrast, during request handling, a couple of other rules exist""
[3] ""There is a third state which is sitting in between a little bit.""
[4] ""The main reason for the application’s context existence is that in the past a bunch of functionality was attached to the request context in lack of a better solution. Since one of the pillar’s of Flask’s design is that you can have more than one application in the same Python process.""
[5] ""To make an application context there are two ways.""
[6] ""The context is typically used to cache resources on there that need to be created on a per-request or usage case.""
"
1150,typos,2014-08-14T20:17:40Z,2014-08-22T22:18:15Z,,,,
1149,pdf&epub of docs has wrong version,2014-08-14T14:11:54Z,2014-08-28T14:13:33Z,,,,"In http://flask.pocoo.org/docs/ , the download link http://flask.pocoo.org/docs/flask-docs.pdf (_sha1:6ddf4ea31f4c5146afb7b68060bc9bd87eacc4c8_) is for v0.11-dev, like that:

![v0.11-dev](https://cloud.githubusercontent.com/assets/1926185/3921018/bc74cf98-23bc-11e4-91eb-f216a0bdfda8.png)

But, the latest release version of Flask is v0.10.1. Please fix it, thank you.
"
1148,Flaskr example app hooked up with some Selenium tests running on Sauce Labs and Travis CI,2014-08-14T00:04:02Z,2014-08-28T14:14:58Z,,,,"Hi,

I've created an Flaskr example application for a talk that can help people to run Selenium tests on their Flask apps. It uses Travis CI as continuous integration server and Sauce Labs to execute the tests in the cloud. If you're interested I would send you an PR. Here is the link:

https://github.com/christian-bromann/flask-webdriver-demo

Cheers
"
1147,dev version; click subcommands not working as intended,2014-08-12T16:14:29Z,2014-08-28T14:17:46Z,,Error,Error: Got unexpected extra arguments (user seed),"what I was doing on console: fairly self-explanatory

```
(burddy)crow@crow-VPCS111FM:~/code/burddy$ burddy --help
Usage: burddy [OPTIONS] COMMAND [ARGS]...

Options:
  --debug / --no-debug  Enable or disable debug mode.
  --help                Show this message and exit.

Commands:
  article  manage the articles
  db       Perform database migrations.
  initdb   create the database
  run      Runs a development server.
  seed     make a fake populated website
  shell    Runs a shell in the app context.
  user     manage the users
(burddy)crow@crow-VPCS111FM:~/code/burddy$ burddy db upgrade
(burddy)crow@crow-VPCS111FM:~/code/burddy$ burddy user --help
Usage: burddy user [OPTIONS] COMMAND [ARGS]...

  manage the users

Options:
  --help  Show this message and exit.

Commands:
  seed  adds fake users to database
(burddy)crow@crow-VPCS111FM:~/code/burddy$ burddy user seed
Usage: burddy [OPTIONS]

Error: Got unexpected extra arguments (user seed)
(burddy)crow@crow-VPCS111FM:~/code/burddy$ 
```

Some of the commands do work. If I did `burddy shell`, it works, or `burddy run`, or even `burddy db upgrade`, however, `article` and `user`, in particular, do not have access to their ""subcommands"".

My repo is [here](https://github.com/DarkCrowz/burddy) if you wish to view it
"
1146,Add app config setting for defaulting _external to True in url_for,2014-08-12T02:47:05Z,2014-08-12T14:18:19Z,,,,"It would be nice to have an app level config setting for defaulting _external to True in [url_for](https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L186) on sites where absolute URLs are required or preferred, removing the need to add the parameter on each url_for call.

Possibly near here:  https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L292:

``` python
if current_app.config['NEW_SETTING_NAME_HERE']:
    external = True
```
"
1145,Flask needs more opinions on config and deployment,2014-08-11T15:57:48Z,2014-08-11T18:20:13Z,,,,"I love Flask. It's really great.

But one of the things that bothers me about it is how un-opinionated it tries to be, which I think in the end makes it a lot more difficult to use.

There are at least half a dozen or so way of setting configurations:
- You can set values manually.
- You can read from an object.
- You can read from a JSON file.
- You can read from an environment variable.
- You can read from a string to a module.
- Not to mention all of the other extensions that add support for yaml, and other methods.

And then, where do you place them?
- You can use instance folders.
- You can not use instance folders.
- You can use some path defined in an environment variable.
- You can dump them with the app.

This makes it very difficult to figure out what the _best_ way of setting up a project, because if you look through all of the different example starter projects on GitHub, they're all laid out completely differently.

Then it comes to, how to structure your app?
- Do you use an app factory?
- Do you not use an app factory?

If you do use an app factory, and you want to use gunicorn:
- Do I create a simple gunicorn.py that creates an app from the factory and makes an app?
- Do I write a custom script with Click or Flask-Script that launches gunicorn?

Certainly, if you've deployed dozens of Flask apps already, and you have your own template project setup and figured out the way you want to do everything it's okay. But, for those new to Flask, or coming from other Frameworks it can be a bit daunting to have so many options, and not having anyone agree on what should be used.
"
1144,Add documentation about url_for's default scheme,2014-08-11T09:57:57Z,2014-08-12T18:46:56Z,,,,"Fix #1129
"
1143,Thread in flask but 2 threads are created instead of one,2014-08-07T10:23:36Z,2014-08-07T13:27:40Z,,,,
1142,Fix copy paste mistake in docs/testing.rst,2014-08-07T09:56:16Z,2014-08-22T22:18:26Z,,,,"I think the import should not be flaskr since in tutorial the first test run gives no errors.
"
1141,Use PREFERRED_URL_SCHEME in external url_for if scheme is not defined.,2014-08-06T12:15:38Z,2014-08-11T13:36:50Z,,,,"If the behaviour expected is to use `PREFERRED_URL_SCHEME` even in request context, it fixes #1129.
"
1140,Can we make use of the Milestones features of GitHub to have at least an indication of how far we are from the next release?,2014-08-05T10:48:57Z,2014-10-20T05:58:45Z,discussion,,,"The latest [Milestones](https://github.com/mitsuhiko/flask/milestones) section is not that bad and it would really nice indication on what is left until the next version, or why is not there yet..

It's been more than a year since the last [release](https://github.com/mitsuhiko/flask/releases), but the project is far from inactive as we can see from the commits and issues.. 
"
1139,Wrong Flask.instance_path inside virtualenv,2014-08-03T07:14:59Z,2014-08-08T16:22:40Z,,,,"There is a bug in detection of Flask.instance_path when run inside a virtualenv. I have experienced this issue on both python2.7 and python3.4. My machines are debian wheezy and debian jessie.
This issue is not present when run from system Python. I have described below the simplest code to reproduce the error. 
I am willing to submit a patch provided this issue is real, and not something wrong on my end.

Some sample code to reproduce the error:
Directory tree:

```
|-- app.py
|-- run.py
|-- views.py
```

**Contents of files**

```
#app.py
from flask import Flask
app = Flask(__name__)
import views

#run.py
from app import app
app.run()

#views.py
from app import app
@app.route('/')
def index():
    return app.instance_path
```

**Virtualenv python**

```
python run.py
--
curl http://127.0.0.1:5000
/home/saimadhav/development/demo/var/app-instance
```

**System python**

```
python3.4 run.py
--
curl http://127.0.0.1:5000
/home/saimadhav/development/demo/instance
```

EDIT1: The above 3 files in my instance are placed in a folder demo
"
1138,Quoted all HTML attributes.,2014-07-30T01:44:03Z,2014-07-31T08:33:45Z,,,,"Addressed issue #1134
"
1137,Quoted all HTML attributes,2014-07-29T22:24:40Z,2014-07-30T01:37:54Z,,,,"Addressed issue #1134.
"
1136,test,2014-07-29T06:15:34Z,2014-07-29T11:26:27Z,,,,"sad
"
1135,Deprecate flask.ext and create migration tool to flask_*,2014-07-27T11:33:29Z,2016-04-04T18:39:21Z,docs,,,
1134,Quote all HTML attributes,2014-07-26T09:08:25Z,2014-07-31T08:33:54Z,,,,"Just what the title says. See #1116 for a longer discussion on the issue.
"
1133,custom rendering view not possible anymore,2014-07-25T04:10:06Z,2014-07-29T14:08:59Z,,,,"This decorator seems not supported anymore in 0.10
http://flask.pocoo.org/snippets/18/

How can we double decorate a function using a custom view?
In the case we don't want to define different endpoints, like this:

```
@view(app, '/<name>', render_html('page.html'))
@view(app, '/api/page/<name>', render_json)
def show_page(name):
    ...
```
"
1132,Update doclinks,2014-07-24T15:05:49Z,2014-07-26T08:42:47Z,,,,"Fix redirects and broken links
"
1131,How to share endpoints between different apps in Flask,2014-07-23T04:34:46Z,2014-07-26T09:11:19Z,,,,"```
app.wsgi_app = DispatcherMiddleware(app.wsgi_app, {'/api': api}) # before this, I have a blueprint named web in app.
```

now, I have a endpoint named `validate_user` in api app, and how can i invoke this endpoint in blueprint web ?

Thanks
"
1130,Automatic route redirect changes domain to 127.0.0.1:port,2014-07-22T19:51:30Z,2014-07-23T06:54:56Z,,,,"Okay, so I got an application running on `127.0.0.1:62781`.

I'm redirecting all traffic to this port, via htaccess.

Everything works quite well. Except for the automatic route redirect that kicks in if you have specified routes like these:

```
@app.route('/users/', defaults={'page': 1})
@app.route('/users/page/<int:page>')
def show_users(page):
    pass
```

Of course, I'm mostly using url_for, so it's not a huge problem, but if a user visits <domain>/users/page/1, he should get redirected to <domain>/users, but instead flask wants to send him to 127.0.0.1:62781/users.

How can I prevent that from happening?

I tried it with gunicorn and the ""standard"" run.py that looks like this:

```
import lesetagebuch.main as main
main.app.run(
    host='0.0.0.0',
    port=62781
)
```
"
1129,url_for _external does not use PREFERRED_URL_SCHEME,2014-07-22T17:10:49Z,2014-08-12T18:46:56Z,,Notes,Notes: I'm using blueprints and Flask version 0.10.1,"To reproduce:

1) set a PREFERRED_URL_SCHEME in the app config != http
2) Use a url_for with _external=True
3) Note that the URL does not use the PREFERRED_URL_SCHEME

Notes: I'm using blueprints and Flask version 0.10.1
"
1128,Jinja template docs link is outdated,2014-07-22T02:47:55Z,2014-08-28T14:18:10Z,,,,"on http://flask.pocoo.org/docs/templating/
the ""Jinja2 Template Documentation"" link at the top of the page gives a 404 error. 
update link to http://jinja.pocoo.org/docs/templates/#
"
1127,Keep development out of master,2014-07-21T20:14:49Z,2015-11-07T07:35:29Z,discussion,,,"Convention is (and rightly so) that the master branch is stable. There have been several issues lately that are related to the accidental use of the development version.

Also the docs [here](http://flask.readthedocs.org/) track the development version so you can hardly blame someone for getting stuck trying to follow them when they have loads of stuff that doesn't apply to the current stable version.

Can we make an effort to sort this out?
"
1126,Flask ignore FLASK_STATIC_FOLDER setted outside of constructor.,2014-07-21T14:27:58Z,2014-07-21T19:05:00Z,,,,"If I do following:

``` python
app = Flaks(__name__, static_folder='/var/www/static')
```

all works just fine, but if I do

``` python
class Config(object):
    FLASK_STATIC_FOLDER = '/var/www/static'

app = Flask(__name__)
app.config.from_object(Config)
```

`current_app.send_static_file` can't find static file.  Is it any difference between those two settings?
"
1125,Add testing best practices and others to wiki,2014-07-16T18:15:55Z,2014-07-27T11:30:34Z,,,,"Can someone from the team write in https://github.com/mitsuhiko/flask/wiki/Large-app-how-to#other-good-practices?
"
1124,"CLI: ""flask"" command help doesn't list custom commands",2014-07-16T08:39:22Z,2016-05-26T19:29:49Z,"bug, cli",,,"I am playing with the latest release of flask with <code>cli</code> module. I have created a command called <code>initdb</code> and when I call <code>flask initdb</code> it works as expected, but when I just call <code>flask</code> command it supposed to show the list of all available commands including <code>initdb</code>, which is not the case. Any idea why?
"
1123,Provide examples extending the custom script in cli docs,2014-07-16T06:22:25Z,2016-05-26T19:29:35Z,docs,,,"CLI docs could use some improvements by providing some example commands, using the `flask.cli.pass_script_info` decorator.
"
1122,"fixed typo -- missing ""are"" in docs/signals.rst",2014-07-15T07:19:40Z,2014-07-26T08:43:00Z,,,,"Three letter change, but gotta keep that grammar sharp. :)
"
1121,Bad link,2014-07-15T06:18:06Z,2014-07-15T17:14:43Z,,,,"On home page, ""uses Jinja2 templating"" points to a 404. I believe it should be ""http://jinja.pocoo.org/docs/templates/""
"
1120,Fix Doc,2014-07-15T06:17:47Z,2014-07-15T07:37:35Z,,,,
1119,from_json document fix,2014-07-15T03:12:39Z,2014-07-27T11:22:09Z,,,,"`Config.from_object` don't accept python dictionary, I think it would be better if
explained as something like `config.update(json.load(open('filename')))`
"
1118,Context processor decorator design,2014-07-14T13:31:14Z,2014-07-14T14:02:16Z,,,,"In current design, methods decorated with `app.context_processor` is expected to return a dictionary. What was the reason behind this design? Can't we have decorator like `app.context_processor('name')` on method itself so that we can decorate method directly.
"
1117,Fix some typos,2014-07-14T09:56:00Z,2014-07-26T15:26:31Z,,,,
1116,Update index.html,2014-07-14T02:29:54Z,2014-07-26T09:10:15Z,,,,"Corrected two errors on HTML syntax errors
"
1115,"""Error handling request"" with Gunicorn and gevent worker",2014-07-12T22:15:00Z,2014-07-27T11:25:04Z,,,,"I'm using Flask with Gunicorn using the ""gevent"" worker. The request completes, the client receives the response, and Gunicorn spits out ""Error handling request"", and then waits for a new request.

This is the stacktrace:

```
    2014-07-12 18:01:53 [38427] [INFO] Booting worker with pid: 38427
    2014-07-12 18:01:55 [38427] [DEBUG] POST /job/dev/job1
    2014-07-12 18:01:55 [38427] [ERROR] Error handling request
    Traceback (most recent call last):
      File ""/Users/dustin/development/python/mapreduce/lib/python2.7/site-packages/gunicorn/workers/async.py"", line 116, in handle_request
        raise StopIteration()
    StopIteration
```

(I should note that this is coming out of the ""async"" worker module, and not the intended ""gevent"" one).

This is the relevant portion of that module:

```
        except Exception:
            if resp and resp.headers_sent:
                # If the requests have already been sent, we should close the
                # connection to indicate the error.
                self.log.exception(""Error handling request"")
                try:
                    sock.shutdown(socket.SHUT_RDWR)
                    sock.close()
                except socket.error:
                    pass
                raise StopIteration()
            raise
        finally:
```

I'm a long-time user of Gunicorn, but haven't used Flask very often. I'm guessing that Flask is doing something to have the headers sent back early.
"
1114,Race condition in get_flashed_messages(),2014-07-12T13:53:34Z,2014-07-12T17:44:30Z,,,,"In https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L401:

``` python
_request_ctx_stack.top.flashes = flashes = session.pop('_flashes') \
      if '_flashes' in session else []
```

This check for the key existence, and then a pop causes a race condition in my system because it is possible for the `_flashes` key to disappear between the check and the pop, leading to a `KeyError`. (I saw it happen under load.)

The fix is easy: use the ""default"" argument to the `pop`. That path is implemented in an atomic manner in my session code already.
"
1113,How to have flask.jsonify take Decimals?,2014-07-11T21:46:41Z,2014-07-11T22:06:13Z,,,,"I'm writing a website using Flask (I love it) in which I use a lot of decimals. This however, presents me with a problem when wanting to jsonify dicts or lists containing Decimals (which happens a lot in my website).

In [this stackoverflow answer](http://stackoverflow.com/a/16957370/1650012) there is a suggestion to overcome this with the basic json.dumps() method:

```
def decimal_default(obj):
    if isinstance(obj, decimal.Decimal):
        return float(obj)
    raise TypeError

json.dumps({'x': decimal.Decimal('5.5')}, default=decimal_default)
```

I wouldn't  know how to use this way of doing it with the flask builtin jsonify though. Does anybody know how I can make jsonify also convert Decimals correctly? All tips are welcome!
"
1112,Update python3.rst,2014-07-10T14:01:48Z,2014-07-27T11:22:36Z,,,,"Fixes #1101
"
1111,Update index.rst with link to source of stable release,2014-07-10T11:12:57Z,2014-08-24T14:44:30Z,,,,"The current live version of these docs on http://flask.pocoo.org/ refers to the master branch, which is actively being used for development of both flask and flaskr, and so the latest stable release (0.10.1) doesn't work with the master branch of flaskr, even though that's what's linked here. So it's probably a good idea to include this alternative link for the majority of users.
"
1110,Stop recommending Python 2.6,2014-07-07T12:18:54Z,2014-07-07T14:38:57Z,,,,"Python 2.6 maintenance has been finished.
"
1109,adding application context setup funcs.,2014-07-06T13:49:05Z,2014-07-26T09:01:59Z,,,,
1108,Feedback website not working.,2014-07-06T13:26:39Z,2014-07-11T00:10:39Z,,,,
1107,adding application context setup funcs.,2014-07-06T13:22:06Z,2014-07-06T13:31:21Z,,,,
1106,"Weird error with ""Flask"" in setup_requires.",2014-07-06T06:41:08Z,2014-07-26T12:12:46Z,,,,"I have noticed a rather weird error when installing a package that has Flask in `install_requires`. Here is the partial output of `python setup.py install`

```
Searching for Flask
Best match: Flask RESTful-0.2.12
Downloading https://pypi.python.org/packages/source/F/Flask-RESTful/Flask-RESTful-0.2.12.tar.gz#md5=53049771f4ccb3f40194696bb683db77
Processing Flask-RESTful-0.2.12.tar.gz
Writing /tmp/easy_install-ljhjqn/Flask-RESTful-0.2.12/setup.cfg
Running Flask-RESTful-0.2.12/setup.py -q bdist_egg --dist-dir /tmp/easy_install-ljhjqn/Flask-RESTful-0.2.12/egg-dist-tmp-4d1snj
Flask-RESTful 0.2.12 is already the active version in easy-install.pth

Installed /home/ayrx/.virtualenvs/test/lib/python3.3/site-packages/Flask_RESTful-0.2.12-py3.3.egg
error: Could not find required distribution Flask
```

Here is the relevant bit of `setup.py`

```
    install_requires=[
        ""Flask"",
        ""Flask-RESTful"",
        ""cryptography""
    ]
```

Changing ""Flask"" to ""flask"" seems to fix things. Not a breaking bug but seems weird nonetheless especially since the packaging [docs](http://flask.pocoo.org/docs/patterns/distribute/) seem to indicate that ""Flask"" works fine.
"
1105,Fix typo in cli docs,2014-07-05T15:33:01Z,2014-07-08T18:21:53Z,,,,
1104,Links to Werkzeug  and Jinja in Document are wrong ,2014-07-05T05:54:16Z,2014-08-26T15:10:35Z,,,,"Links to Werkzeug and Jinja  on http://flask.pocoo.org/docs/ are wrong.
Linked to http://jinja.pocoo.org/2/documentation/ and http://werkzeug.pocoo.org/documentation/ instead of http://werkzeug.pocoo.org/docs/ and http://jinja.pocoo.org/docs/ 
"
1103,appcontext_setting_up_funcs and signal,2014-07-04T18:43:53Z,2014-07-06T12:52:04Z,,,,
1102,Let's kill run,2014-07-04T14:04:01Z,2016-06-09T21:09:26Z,cli,,,"In order to run a Flask application during development we have the `.run()` method or with 1.0 `flask run`. While both are convenient they are a bad idea.

First of all their naming implies that, they are used for running a Flask application, they aren't. They are for running a Flask application during development, a subtle but important difference that causes significant confusion. Apart from that though, running a Flask application is never what you want.

Instead you want to _develop_, _test_ or _deploy_ an application. While development and testing can imply running a web server, running a web server during development means something different than running a web server during testing. In deployment you don't actually want to run your application at all, you should let a web server do that.

So far we kind of allow people to signal their intent with DEBUG and TESTING, but this needs to be explicitly configured by every user and issues such as #1049, show that this is not without issues.

Therefore what I would like to propose is to create three commands `develop`, `test` and `deploy`. These commands should be extendable through extensions and users. It should be easily possible to use different configurations for these scenarios.  Extensions that are only helpful during development like Flask-Debugtoolbar could activate/deactivate themselves based on intent, Flask-Migrate could perform migrations during development and extensions dealing with assets could start background threads monitoring the file system for changes during development. It would further simply clear up a lot of confusion for newcomers.

Running flask with either of these commands should by default set `DEVELOPMENT` (for backwards compatibilty also DEBUG but let's remove that, the name is awful), `TESTING` or `DEPLOYMENT` respectively and issue a signal. Furthermore `develop` should run the development server as `run` does now. `test` and `deployment` shouldn't actually test or deploy the application as we don't want to enforce a specific test runner or deployment solution. Instead the user should be implement these, if so desired. Nevertheless they would be useful as they establish convention extensions can rely on.

I realize that such a change is probably somewhat controversial (which is why this is not a pull request), it would also distinguish us significantly from Django, which works like Flask does now. Nevertheless I think it would be a great idea and I'm curious what others think of this idea. So, thoughts?
"
1101,Python 3 docs are quite outdated,2014-07-03T22:49:13Z,2014-07-27T11:22:36Z,,,,"I've been using Flask with Python 3 from since it was supported. Back then there were definitely some issues with certain libraries that were only compatible on the git repo and not on pypi. But I'm currently running quite a complex website using Python 3 and Flask and haven't had any real problems in like half a year. 

I think Python 3 has become mature, especially with Python 3.4, and the general opinion is that new projects should be using Python 3. The current docs quite strongly suggest otherwise. 
I would be happy to rewrite them, but before I do I would like to know if you guys agree.
"
1100,The example does not execute,2014-07-03T12:52:16Z,2014-07-27T11:23:32Z,,,,"With the inclusion of the app.run we now are able to execute the program, it would be great if we'd have even more detailed docs available for the examples
"
1099,Update schema.rst,2014-07-01T14:58:23Z,2014-07-27T11:31:59Z,,,,"The error is that sqlite3 needs escaping on the database column 'text' in the line:
text text not null
so that it becomes:
'text' text not null

The example on mitsuhiko/flask is correct and helped me detecting the mistake.
"
1098,Flask Badges ,2014-06-30T16:56:12Z,2014-10-19T18:16:08Z,,,,"http://flask.pocoo.org/community/badges/

Flask Badge Images are not working.Needs to be fixed

![issue](https://cloud.githubusercontent.com/assets/6115991/3432688/6d7aed72-0077-11e4-9841-cfa5ce894baa.PNG)
"
1097,Update dbinit.rst,2014-06-29T22:51:08Z,2014-06-30T23:42:14Z,,,,"""require"" -> ""requires""
"
1096,Update dbcon.rst,2014-06-29T22:49:17Z,2014-06-30T23:42:32Z,,,,"""Teared"" should be ""torn"", I think?
"
1095,jsonify big numbers,2014-06-26T13:31:10Z,2014-06-26T13:48:43Z,,,,"It seems that .jsonify round up big numbers like 2114380775380674674 to 2114380775380674600 etc. Is it bug or some undocumented feature?
"
1094,Issue with deferred callbacks pattern when an exception occurs in a @teardown_request decorated function,2014-06-19T17:55:38Z,2017-05-29T21:41:44Z,,,,"We recently stumbled across an issue with the @after_this_request decorator deferred callback pattern (described at http://flask.pocoo.org/docs/patterns/deferredcallbacks/).

This issue does not occur in v0.9, but does occur in v0.10 and v0.10.1. The issue also does not occur when using the @after_this_request decorator defined in 'flask/ctx.py'.

If an exception occurs in a function decorated with @teardown_request, any callback added with the @after_this_request decorator copied from the pattern will continue to be executed on subsequent requests. This occurs when running standalone:

  $ python flask_teardown_exception.py

and when running under uwsgi:

  $ uwsgi --yaml uwsgi.yaml (Be sure to correct paths if you want to use this)

We realize that @teardown_request documentation indicates that one should be careful never to throw an exception, but the end result was still very surprising.

A minimal testcase can be found in the github repo referenced at the bottom. It defines two functions to be executed after the current request. One using the built-in decorator, and one using the pattern and code sample. Both functions add a header to the response indicating the handling processID and an incrementing request ID. An exception can be triggered in the @teardown_request function by passing any value to the ""e"" GET parameter. After an exception is triggered, the built-in @after_this_request continues to work as expected an all subsequent requests that do not throw an exception. However, the functions added with the custom @after_this_request decorator following the pattern code sample continue to execute for all subsequent requests. For example, if I trigger an exception on request 6, and make 4 more requests, then the second to last request (request 9) will have the headers for request 6 ,7, 8 and 9; and the last request (request 10) will have the headers for request 6, 7, 8, 9 and 10.

The github repo also includes console output running under both uwsgi and standalone, and HTTP request/response pairs for 10 requests showing the outcome.

https://github.com/aegarbutt/teardown_request_exception
"
1093,Add runtime parameter functionality to url_for,2014-06-18T19:55:50Z,2014-06-26T19:08:44Z,,,,"I recently had some trouble with trying to add dynamic parameters (at runtime) using url_for, because it requires specific method parameters. This is especially useful if you want to set additional HTTP GET parameters easily.

I decided to go for a dict-based approach, where the _runtime parameter for the url_for method would inject a few extra url_for parameters at runtime.
### Included
- Changes to url_for to add this functionality
- Testcase for this functionality
### Usecase

I needed a way to generate URLs to endpoints with additional GET parameters based on the current page's GET parameters. More specifically, for paginated search results (where the search query is a GET parameter).

With this change, you can use the following:

``` python
url_for('search', page=page, _runtime=request.args.to_dict())
```

instead of having to resort to ugly hacks or extra libraries to append the runtime parameters to the generated URL.
"
1092,Issue with module path/name in imported classes when using from...import on flask.ext.* (Python 3),2014-06-17T09:45:05Z,2017-01-14T05:49:28Z,,,,"There is an issue when importing something inside an extension using Python 3 where Flask imports the classes in such a way that they are no longer equal to the same classes imported inside the extension. The issue occurs when importing from a submodule of an extension using `from flask.ext.xxx.yyy import zzz`. 

The classes imported using from-import get masked as `<class 'flask.ext.xxx.yyy.zzz'>`, where `<class 'flask_xxx.yyy.zzz'>` would be expected.

The issue is specific to Python 3.

Example:

```
Python 3.4.0 (default, Apr  9 2014, 11:51:10) 
[GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.38)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from flask.ext.restful.fields import String
>>> from flask_restful.fields import String as String_internal
>>> String == String_internal
False
>>> String
<class 'flask.ext.restful.fields.String'>
>>> String_internal
<class 'flask_restful.fields.String'>
>>> import flask.ext.restful
>>> import flask_restful
>>> flask.ext.restful.fields.String == flask_restful.fields.String
True
>>> flask.ext.restful.fields.String
<class 'flask_restful.fields.String'>
>>> flask_restful.fields.String
<class 'flask_restful.fields.String'>
```
"
1091,relative url_for with a blueprint mounted two times,2014-06-16T20:21:08Z,,blueprints,,,"Based on blueprint concept, I expected it to handle relative `url_for` nicely:

```
from flask import Blueprint, Flask, url_for

bp = Blueprint('foo', __name__)

@bp.route('/')
def func():
    return url_for('.func')

app = Flask(__name__)
app.register_blueprint(bp, url_prefix='/foo')
app.register_blueprint(bp, url_prefix='/bar')

client = app.test_client()
print client.get('/foo/').data
print client.get('/bar/').data
```

Both prints write the URL to the first blueprint registered (`/foo/`). Is it possible to mount two times the same blueprint and make relative `url_for` work? Is this behaviour expected?
"
1090,Update mod_wsgi.rst,2014-06-16T20:09:19Z,2014-06-17T19:01:56Z,,,,"Changes deprecated pkg_add to pkg install, adds documentation for yum
"
1089,Update mod_wsgi.rst,2014-06-16T19:58:45Z,2014-06-16T20:01:06Z,,,,"Updates the outdated ""pkg_add"" on FreeBSD, adds yum install command
"
1088,Update installation.rst,2014-06-16T11:02:22Z,2014-06-17T19:03:42Z,,,,"Add descriptions about how leave from the virtual environment.
"
1087,Wrong link to Jinja2 website in docs webpage,2014-06-15T13:34:50Z,2014-09-27T13:57:59Z,docs,,,"There are two links to the Jinja2 project website. Both should link to http://jinja.pocoo.org/docs/ instead of http://jinja.pocoo.org/2/ 

(All the links to the Jinja2 website that I see in the docs on github are correct.)
"
1086,Fixed typo in _compat.py,2014-06-15T04:43:43Z,2014-06-17T19:03:58Z,,,,"Dropped one extra whitespace.
"
1085,use flask.ext instead of flask_,2014-06-09T06:03:58Z,2014-06-09T07:17:04Z,,,,
1084,Testing render_template(),2014-06-08T04:08:19Z,2014-06-08T16:46:24Z,,,,"How do I test this line? 
return render_template(u'http_error.html', error_detail=detail)

I am a beginner as far as flask testing is concerned. 

Could you document the answer to this on your testing page? http://flask.pocoo.org/docs/testing/

There is an unanswered question similar to this on stackoverflow.
http://stackoverflow.com/questions/23987564/test-flask-render-template-context
"
1083,Publish 0.10 documentation,2014-06-06T18:53:17Z,2014-09-27T13:58:48Z,docs,,,"With [click](http://click.pocoo.org/) integrated in to Flask 1.0, the published documentation at [readthedocs](https://flask.readthedocs.org/en/latest/) is getting rather out of sync with 0.10 reality.

Specifically, today I could not link someone to the documentation on how to enable `debug=True` in their dev server, as the quickstart section on [Debug Mode](http://flask.readthedocs.org/en/latest/quickstart/#debug-mode) changed, and the 0.8 documentation is... outdated for 0.10 in places.

Can a 0.10 version of the docs be published too?
"
1082,Flask eliminates error and stack trace when production mode.,2014-06-06T16:09:44Z,2014-06-06T17:07:39Z,,,,"http://flask.pocoo.org/docs/errorhandling/

> By default if your application runs in production mode, Flask will display a very simple page for you and log the exception to the logger.

But https://github.com/mitsuhiko/flask/blob/master/flask/logging.py#L34

``` python
    class DebugHandler(StreamHandler):
        def emit(x, record):
            StreamHandler.emit(x, record) if app.debug else None
```

This means Flask just ignore all errors and not produce any logs.
We can't get exception message and traceback in production envirionment.
"
1081,Support X-Sendfile-Temporary,2014-06-05T15:54:58Z,2017-05-16T00:28:59Z,,,,"There is [mod_xsendfile](https://tn123.org/mod_xsendfile/beta/) which in it's current beta version supports `X-Sendfile-Temporary` which is like `X-Sendfile` but removes the file afterwards.

Is there some chance of supporting this? If not (because it's beta and not supported by other servers yet), what would be the recommended way to implement this myself? Of course I can just send the header, but I'm not sure if that's enough, judging by the length of `send_file()`.
"
1080,flask redirect not support itms-services,2014-06-05T03:35:50Z,2014-06-06T15:07:37Z,,,,"`itms-services://?action=download-manifest&url=http://tietie-static.qiniudn.com/downloads/TieTie_iOS.plist` becomes
`itms-services:?action=download-manifest&url=http://tietie-static.qiniudn.com/downloads/TieTie_iOS.plist` when using redirect(url_here)

`get_wsgi_headers` will be called in `after_request` callback, so nothing works even I make redirect response by hand...
set autocorrect_location_header to False also not work
"
1079,Get rid of _tag->closure->_tag reference cycle,2014-06-04T13:49:33Z,2014-06-06T15:02:38Z,,,,"This makes Flask discard less object graphs with reference cycles.
"
1078,app.cli.command,2014-06-04T03:22:43Z,2014-06-04T03:53:52Z,,AttributeError,AttributeError: 'Flask' object has no attribute 'cli',"the flaskr.py has a issue when i run ，the error is follow:
AttributeError: 'Flask' object has no attribute 'cli'
"
1077,Update mod_wsgi.rst,2014-06-02T12:28:32Z,2014-06-06T15:11:26Z,,,,"note configuration changes in apache 2.4
"
1076,terminal no longer echos input after pdb is aborted by reloader,2014-05-30T18:04:47Z,2014-06-06T15:07:17Z,,,,"Steps to reproduce:
Write a trivial flask app, include a call to pdb.set_trace() in the request path, then request this url (browser, curl, ...). You're now in a pdb session. But at the same time flask's reloader is watching imported modules of your app for changes. Make a change in one of these modules (mod.py) and save the file. The reloader will restart your application, and abort your pdb session. Now you can stop the application with Ctrl+C. Result: your terminal no longer echos input.

Isolated test case:
https://gist.github.com/numerodix/c13ce7c1c0917b3b7dd9
"
1075,add `Table` to import in `sqlalchemy.rst` example,2014-05-30T16:52:40Z,2014-05-30T17:39:21Z,,,,"This small change addresses #1074.
"
1074,docs: add import to SQLAlchemy example,2014-05-30T16:46:16Z,2014-05-30T17:39:26Z,,,,"Under [SQL Abstraction Layer](flask.pocoo.org/docs/patterns/sqlalchemy/#sql-abstraction-layer) in the docs it says 

> If you just want to use the database system (and SQL) abstraction layer you basically only need the engine:

```
from sqlalchemy import create_engine, MetaData
```

But a few lines down is given the example

```
users = Table('users', metadata, autoload=True)
```

For this, `Table` also needs to be imported.
"
1073,Python Flask Gevent stack - Simple “Hello World” app shows as inefficient when benchmarked,2014-05-30T11:30:28Z,2014-07-26T13:57:05Z,,,,"I have the following simple ""Hello World"" app:

```
from gevent import monkey
monkey.patch_all()
from flask import Flask
from gevent import wsgi

app = Flask(__name__)

@app.route('/')
def index():
  return 'Hello World'

server = wsgi.WSGIServer(('127.0.0.1', 5000), app)
server.serve_forever()
```

As you can see it's pretty straightforward.

The problem is that despite such simpliness it's pretty slow/inefficient as the following benchmark (made with Apache Benchmark) shows:

```
ab -k -n 1000 -c 100 http://127.0.0.1:5000/

Benchmarking 127.0.0.1 (be patient)
Completed 100 requests
Completed 200 requests
Completed 300 requests
Completed 400 requests
Completed 500 requests
Completed 600 requests
Completed 700 requests
Completed 800 requests
Completed 900 requests
Completed 1000 requests
Finished 1000 requests


Server Software:        
Server Hostname:        127.0.0.1
Server Port:            5000

Document Path:          /
Document Length:        11 bytes

Concurrency Level:      100
Time taken for tests:   1.515 seconds
Complete requests:      1000
Failed requests:        0
Write errors:           0
Keep-Alive requests:    0
Total transferred:      146000 bytes
HTML transferred:       11000 bytes
Requests per second:    660.22 [#/sec] (mean)
Time per request:       151.465 [ms] (mean)
Time per request:       1.515 [ms] (mean, across all concurrent requests)
Transfer rate:          94.13 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   0.6      0       3
Processing:     1  145  33.5    149     191
Waiting:        1  144  33.5    148     191
Total:          4  145  33.0    149     191

Percentage of the requests served within a certain time (ms)
  50%    149
  66%    157
  75%    165
  80%    173
  90%    183
  95%    185
  98%    187
  99%    188
 100%    191 (longest request)
```

Eventually increasing the number of connections and/or concurrency doesn't bring better results, in fact it becomes worse.

What I'm most concerned about is the fact that I can't go over 700 **Requests per second** and a **Transfer rate** of 98 Kbytes/sec.

Also, the individual **Time per request** seems to be too much.

I got curious about what Python and Gevent are doing in the background, or better, what the OS is doing, so I used a **strace** to determine eventual system-side issues and here's the result:

```
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 56.46    0.000284           0      1386           close
 24.25    0.000122           0      1016           write
 10.74    0.000054           0      1000           send
  4.17    0.000021           0      3652      3271 open
  2.19    0.000011           0       641           read
  2.19    0.000011           0      6006           fcntl64
  0.00    0.000000           0         1           waitpid
  0.00    0.000000           0         1           execve
  0.00    0.000000           0         3           time
  0.00    0.000000           0        12        12 access
  0.00    0.000000           0        32           brk
  0.00    0.000000           0         5         1 ioctl
  0.00    0.000000           0      5006           gettimeofday
  0.00    0.000000           0         4         2 readlink
  0.00    0.000000           0       191           munmap
  0.00    0.000000           0         1         1 statfs
  0.00    0.000000           0         1         1 sigreturn
  0.00    0.000000           0         2           clone
  0.00    0.000000           0         2           uname
  0.00    0.000000           0        21           mprotect
  0.00    0.000000           0        69        65 _llseek
  0.00    0.000000           0        71           rt_sigaction
  0.00    0.000000           0         1           rt_sigprocmask
  0.00    0.000000           0         3           getcwd
  0.00    0.000000           0         1           getrlimit
  0.00    0.000000           0       243           mmap2
  0.00    0.000000           0      1838       748 stat64
  0.00    0.000000           0        74           lstat64
  0.00    0.000000           0       630           fstat64
  0.00    0.000000           0         1           getuid32
  0.00    0.000000           0         1           getgid32
  0.00    0.000000           0         1           geteuid32
  0.00    0.000000           0         1           getegid32
  0.00    0.000000           0         4           getdents64
  0.00    0.000000           0         3         1 futex
  0.00    0.000000           0         1           set_thread_area
  0.00    0.000000           0         2           epoll_ctl
  0.00    0.000000           0        12         1 epoll_wait
  0.00    0.000000           0         1           set_tid_address
  0.00    0.000000           0        26           clock_gettime
  0.00    0.000000           0         2           openat
  0.00    0.000000           0         1           set_robust_list
  0.00    0.000000           0         1           eventfd2
  0.00    0.000000           0         1           epoll_create1
  0.00    0.000000           0         1           pipe2
  0.00    0.000000           0         1           socket
  0.00    0.000000           0         1           bind
  0.00    0.000000           0         1           listen
  0.00    0.000000           0      1000           accept
  0.00    0.000000           0         1           getsockname
  0.00    0.000000           0      2000      1000 recv
  0.00    0.000000           0         1           setsockopt
------ ----------- ----------- --------- --------- ----------------
100.00    0.000503                 24977      5103 total
```

As you can see there are 5103 errors, the worst offender being the **open** **syscall** which I suspect has to do with files not being found (**ENOENT**). To my surprise **epoll** didn't look like a _troubler_, as I heard of many horror stories about it.

I wish to post the full **strace** which goes into the detail of every single call, but it is way too large.

A final note; I also set the following system parameters (which are the maximum allowed amount) hoping it would change the situation but it didn't:

```
echo “32768   61000″ > /proc/sys/net/ipv4/ip_local_port_range
sysctl -w fs.file-max=128000
sysctl -w net.ipv4.tcp_keepalive_time=300
sysctl -w net.core.somaxconn=61000
sysctl -w net.ipv4.tcp_max_syn_backlog=2500
sysctl -w net.core.netdev_max_backlog=2500
ulimit -n 1024
```

My question is, given that the sample I'm using can't be changed so much to fix these issues, where should I look to correct them?

For a comparison I made the following ""Hello World"" script with Wheezy.web & Gevent and I got ~2000 Requests per second:

```
from gevent import monkey
monkey.patch_all()
from gevent import pywsgi
from wheezy.http import HTTPResponse
from wheezy.http import WSGIApplication
from wheezy.routing import url
from wheezy.web.handlers import BaseHandler
from wheezy.web.middleware import bootstrap_defaults
from wheezy.web.middleware import path_routing_middleware_factory

def helloworld(request):
    response = HTTPResponse()
    response.write('hello world')
    return response


routes = [
    url('hello', helloworld, name='helloworld')
]


options = {}
main = WSGIApplication(
    middleware=[
        bootstrap_defaults(url_mapping=routes),
        path_routing_middleware_factory
    ],
    options=options
)


server = pywsgi.WSGIServer(('127.0.0.1', 5000), main, backlog=128000)
server.serve_forever()
```

And the benchmark results:

```
ab -k -n 1000 -c 1000 http://127.0.0.1:5000/hello

Benchmarking 127.0.0.1 (be patient)
Completed 100 requests
Completed 200 requests
Completed 300 requests
Completed 400 requests
Completed 500 requests
Completed 600 requests
Completed 700 requests
Completed 800 requests
Completed 900 requests
Completed 1000 requests
Finished 1000 requests


Server Software:        
Server Hostname:        127.0.0.1
Server Port:            5000

Document Path:          /front
Document Length:        11 bytes

Concurrency Level:      1000
Time taken for tests:   0.484 seconds
Complete requests:      1000
Failed requests:        0
Write errors:           0
Keep-Alive requests:    0
Total transferred:      170000 bytes
HTML transferred:       11000 bytes
Requests per second:    2067.15 [#/sec] (mean)
Time per request:       483.758 [ms] (mean)
Time per request:       0.484 [ms] (mean, across all concurrent requests)
Transfer rate:          343.18 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    8  10.9      0      28
Processing:     2   78  39.7     56     263
Waiting:        2   78  39.7     56     263
Total:         18   86  42.6     66     263

Percentage of the requests served within a certain time (ms)
  50%     66
  66%     83
  75%    129
  80%    131
  90%    152
  95%    160
  98%    178
  99%    182
 100%    263 (longest request)
```

I find Wheezy.web's speed great, but I'd still like to use Flask as it's far simpler and less time consuming to work with.
"
1072,incomplete formatted string expression,2014-05-28T17:15:11Z,2016-06-02T17:40:13Z,,,,"in the example code of doc page
http://flask.pocoo.org/docs/patterns/mongokit/

the formatted string expression in the exception has two %s placeholders but only one variable.
see excerpt following:
'''
Here is an example document (put this also into app.py, e.g.):

def max_length(length):
    def validate(value):
        if len(value) <= length:
            return True
        raise Exception('%s must be at most %s characters long' % length)
    return validate
'''
"
1071,cannot read static file whose path include Chinese chars under Windows OS,2014-05-27T14:12:54Z,2014-06-06T15:17:35Z,,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xd6 in position 17: ordinal not in range(128),"---

UnicodeDecodeError: 'ascii' codec can't decode byte 0xd6 in position 17: ordinal not in range(128)
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\waitress\task.py"", line 74, in handler_thread
  task.service()
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\waitress\channel.py"", line 337, in service
  task.service()
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\waitress\task.py"", line 173, in service
  self.execute()
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\waitress\task.py"", line 392, in execute
  app_iter = self.channel.server.application(env, start_response)
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\app.py"", line 1917, in **call**
  return self.wsgi_app(environ, start_response)
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\app.py"", line 1901, in wsgi_app
  response = self.make_response(self.handle_exception(e))
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\app.py"", line 1483, in handle_exception
  self.log_exception((exc_type, exc_value, tb))
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\app.py"", line 1499, in log_exception
  ), exc_info=exc_info)
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\app.py"", line 1898, in wsgi_app
  response = self.full_dispatch_request()
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\app.py"", line 1553, in full_dispatch_request
  rv = self.handle_user_exception(e)
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\app.py"", line 1457, in handle_user_exception
  reraise(exc_type, exc_value, tb)
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\app.py"", line 1551, in full_dispatch_request
  rv = self.dispatch_request()
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\app.py"", line 1537, in dispatch_request
  return self.view_functions[rule.endpoint](**req.view_args)
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\helpers.py"", line 872, in send_static_file
  cache_timeout=cache_timeout)
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\helpers.py"", line 617, in send_from_directory
  filename = safe_join(directory, filename)
File ""c:\Users\honglei\AppData\Local\Enthought\Canopy\User\Lib\site-packages\flask\helpers.py"", line 587, in safe_join
  return os.path.join(directory, filename)
File ""C:\Users\honglei\AppData\Local\Enthought\Canopy\App\appdata\canopy-1.3.0.1715.win-x86_64\Lib\ntpath.py"", line 108, in join
##   path += ""\"" + b

> > > directory
> > > 'F:\Flask\EmberJS\\xd6\xd0\xce\xc4\Prj\static'
> > > filename
> > > u'todomvc/index.html'
> > > safe_join(directory.decode(sys.getfilesystemencoding()),filename)
> > > u'F:\Flask\EmberJS\\u4e2d\u6587\Prj\static\todomvc/index.html'
"
1070,How to catch the whole request lifetime in Flask,2014-05-25T04:46:04Z,2014-05-25T09:34:29Z,,,,"I am writing a little extension [Flask-Profile](https://github.com/fengsp/flask-profile), nothing serious but one tiny tool to do profiling for Flask.

Firstly I use one `middleware`(which is quite obvious for my purpose), middleware is working great on catching the whole thing but with one issue. I can not append the
profiling result to the response which is already sent, and I really do not want to see
the result using another way.

Then I use the `before_request` and `after_request` hook, more issues appear, now I can modify the response to append my profiling result, though, all other extensions have
to be used after `Flask-Profile` so they can be profiled. Also I am not catching the whole 
lifetime, I do not catch the `request_context` pushing and `session` related stuff, session
is opened during the request_context pushing and is saved after `after_request` hooks
were executed.

Try to use the `request-started` and `request-finished` signal. Issues exist, signalling support is available only when blinker library is installed, and I still can not catch the
session opening. The good news is that all extensions can be caught no matter which
one calls `init_app` first.

After all this, What I want is one hook that is called just after request get in and request_context is pushed(however session are not opened) and another hook that is called after `process_response`, both of which Flask does not have.

I can only think of monkeying patching the `Flask.wsgi_app` which is the last thing I want to do. Any better ideas?
"
1069,Flask re-raise exception that already been processed.,2014-05-24T19:21:21Z,2014-05-27T16:48:11Z,,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xb0 in position 1: ordinal not in range(128),"## I get an an error during request to a static html file.

serving on http://0.0.0.0:8080
ERROR:**main**:Exception on /static/bloggr-client/index.html [GET]
Traceback (most recent call last):
  File ""c:\users\honglei\appdata\local\enthought\canopy\user\lib\site-packages\flask\app.py"", line 1898, in wsgi_app
    response = self.full_dispatch_request()
  File ""c:\users\honglei\appdata\local\enthought\canopy\user\lib\site-packages\flask\app.py"", line 1553, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""c:\users\honglei\appdata\local\enthought\canopy\user\lib\site-packages\flask\app.py"", line 1457, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""c:\users\honglei\appdata\local\enthought\canopy\user\lib\site-packages\flask\app.py"", line 1551, in full_dispatch_request
    rv = self.dispatch_request()
  File ""c:\users\honglei\appdata\local\enthought\canopy\user\lib\site-packages\flask\app.py"", line 1537, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""c:\users\honglei\appdata\local\enthought\canopy\user\lib\site-packages\flask\helpers.py"", line 872, in send_static_file
    cache_timeout=cache_timeout)
  File ""c:\users\honglei\appdata\local\enthought\canopy\user\lib\site-packages\flask\helpers.py"", line 623, in send_from_directory
    return send_file(filename, **options)
  File ""c:\users\honglei\appdata\local\enthought\canopy\user\lib\site-packages\flask\helpers.py"", line 498, in send_file
    mimetype = mimetypes.guess_type(filename or attachment_filename)[0]
  File ""C:\Users\honglei\AppData\Local\Enthought\Canopy\App\appdata\canopy-1.3.0.1715.win-x86_64\lib\mimetypes.py"", line 297, in guess_type
    init()
  File ""C:\Users\honglei\AppData\Local\Enthought\Canopy\App\appdata\canopy-1.3.0.1715.win-x86_64\lib\mimetypes.py"", line 358, in init
    db.read_windows_registry()
  File ""C:\Users\honglei\AppData\Local\Enthought\Canopy\App\appdata\canopy-1.3.0.1715.win-x86_64\lib\mimetypes.py"", line 258, in read_windows_registry
    for subkeyname in enum_types(hkcr):
  File ""C:\Users\honglei\AppData\Local\Enthought\Canopy\App\appdata\canopy-1.3.0.1715.win-x86_64\lib\mimetypes.py"", line 249, in enum_types
    ctype = ctype.encode(default_encoding) # omit in 3.x!
UnicodeDecodeError: 'ascii' codec can't decode byte 0xb0 in position 1: ordinal not in range(128)

ctype's value
'.\xb0\xa2\xc0\xef\xcd\xfa\xcd\xfa\xbd\xd3\xca\xd5\xb5\xc4\xbf\xc9\xd2\xc9\xce\xc4\xbc\xfe'

I don't think a unkown ctype in Windows's registry should cause Flask give up user's request.
"
1068,JSONEncoder support for datetime.date and datetime.time serialization,2014-05-24T09:54:48Z,2014-05-24T10:18:09Z,,TypeError,"TypeError: datetime.time(0, 0) is not JSON serializable","Databases support not just DateTime objects but also Date and Time objects, but Flask's jsonify doesn't:

```
TypeError: datetime.time(0, 0) is not JSON serializable
```

This would be an easy pull request, but I want to check if it's been discussed before. Is there any reason why I should not add support for `datetime.time` and `datetime.date` objects to [JSONEncoder](https://github.com/mitsuhiko/flask/blob/fbda3f94baa6d7dba8f773309121284c6e6c5a6d/flask/json.py#L77)?
"
1067,Documentation .mobi file not found,2014-05-21T19:18:45Z,2014-09-14T15:44:57Z,,,,"The .mobi file of the documentation has gone missing, does anyone know the whereabouts of it?

EDIT: #841 
"
1066,Fixed a typo.,2014-05-21T04:58:59Z,2014-05-27T16:09:17Z,,,,
1065,PREFERRED_URL_SCHEME behavior question,2014-05-19T19:36:05Z,2014-06-06T15:09:08Z,,,,"I have a flask application deployed behind a reversed proxy.
The proxy is configured to use https, the application server running the flask application is using http.

When setting `PREFERRED_URL_SCHEME='https'` in the configuration I expected flask to return a `location` in the headers using `https`. Using curl we could check the location returned and they are using `http`.

I added debugging statement to the application just before the `return flask.redirect(flask.url_for())` is called.
- `print APP.config['PREFERRED_URL_SCHEME']` returns 'https'
- `print flask.current_app.config['PREFERRED_URL_SCHEME']`  returns 'https'
- `print flask.redirect(url)` returns `<BaseResponse 249 bytes [302 FOUND]>`

Using the logic presented at http://flask.pocoo.org/snippets/35/ we could make the location returned use `https` however it was my understanding that setting correctly `PREFERRED_URL_SCHEME` would spare us from having to add more code in our application to support https.

Could you please let me know whether this is indeed the expected behavior or our original expectations were the correct one?

Full disclaimer: the application is still running flask 0.9
"
1064,Ambiguity in Advanced Foreword,2014-05-19T06:00:35Z,2014-05-27T16:09:38Z,,,,"I think the doc is supposed to read, ""Because of that, Flask has **a** few design choices that some people might find surprising or unorthodox.""

Otherwise, it could possibly mean, ""Because of that, Flask has few design choices that people would find surprising or unorthodox.""

Or perhaps even less ambiguous, ""Because of that, Flask has few surprising or unorthodox design choices.""
"
1063,Small grammar fixes and re-wording.,2014-05-19T03:55:47Z,2014-05-19T04:50:28Z,,,,"The grammar fixes make it a little easier to read.  The re-wording, especially in the Before/After Requests section, makes the docs much clearer.
"
1062,Doc for add check upload file,2014-05-17T06:45:08Z,2014-05-27T16:10:37Z,,,,
1061,fix for Blueprint view with same name will be override,2014-05-16T20:12:02Z,2014-06-06T15:11:14Z,,,,"see issue #1060, but we need wait jinja2 merge https://github.com/mitsuhiko/jinja2/pull/332
"
1060,Blueprint view with same name will be override,2014-05-16T12:09:09Z,2014-06-06T15:10:57Z,,,,"Reproduce:
- clone https://github.com/SteelyWing/flask-blueprint-test.git
- run index.py
- open http://localhost:5000/bp-0/ , display `blueprint 0` (Correct)
- open http://localhost:5000/bp-1/ , display `blueprint 0` (Incorrect)
- close index.py

---
- run index.py
- open http://localhost:5000/bp-1/ , display `blueprint 1` (Correct)
- open http://localhost:5000/bp-0/ , display `blueprint 1` (Incorrect)
- close index.py

---

Is it the cache issue ? I tried if rename `blueprint_0/index.html` to `blueprint_0/bp_0.html`, and  `blueprint_1/index.html` to `blueprint_1/bp_1.html`, all work.
I also add a test of this, please have a see of [THIS](https://github.com/SteelyWing/flask)
"
1059,flask-uploads,2014-05-15T15:09:42Z,2014-06-06T15:17:54Z,,,,"Hi,
 I was searching for examples for flask-uploads to see if it is useful at all and discovered there needs to be:
1. disambiguation between examples per version as the flask-uploads API has changed significantly between versions.
2. disambiguation in examples between what is flask and what is the database
3. a database free or at least a database isolated example:
    - I downloaded sqlacademy only to discover the flask-uploads part of the example was out of date, I am now trying how to modify the couchDB example w/o having to install couchDB.
I know you all aren't responsible for other's examples, but if you could provide your own working example, that would help greatly. Basically you are hurting your cause by making flask extensions difficult to use.

Thanks!
"
1058,Fixed a small typo with flask.g docstring,2014-05-14T03:50:02Z,2014-05-16T14:15:06Z,,,,"Read https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L170

Here it says `flask.g object is not application context scoped.`

Should it not be `flask.g object is now application context scoped.`?

If yes, then the difference between not and now changes the understanding of context scoping of Flask.g object to a good extent.
"
1057,Fixes #1051,2014-05-13T21:14:44Z,2014-05-16T14:16:13Z,,,,"`python -mflask` is fine as is, but I think `python -m flask` is clearer to the reader.

I'd suggest that the script info paragraph be re-written too - it feels stilted and redundant as is. I'm not comfortable enough with the material to attempt to clear it up without fear of losing meaning/specifics though.

apologies to armin or kenneth if doc fixing PRs are an annoyance, trying to procrastinate exam study! :)
"
1056,Allow the jinja2 environment class to be overridden.,2014-05-12T18:45:56Z,2015-06-06T04:30:46Z,,,,"I need this change because I have to override a couple of Jinja2's templating functions.

Better than monkeypatching flask.app.Environment. ;-)
"
1055,Fix a tiny spelling error: untilization -> utilization,2014-05-11T12:49:26Z,2014-05-12T16:21:46Z,,,,
1054,fix a small mistake in setup.rst,2014-05-11T06:10:18Z,2014-05-12T16:23:23Z,,,,
1053,fix syntax of wtf html example.,2014-05-09T19:43:42Z,2014-05-09T20:30:21Z,,,,
1052,fixed import for python 3,2014-05-09T14:49:20Z,2014-05-12T16:22:57Z,,,,"Just fixed a relative import to work on Python 3
"
1051,Docs: cli.rst typos,2014-05-09T01:08:04Z,2014-05-15T10:30:39Z,,,,"There are a couple of typos in cli.rst file.
The command 'python -m flask' appears with no space between the m and the f of flask (I presume this is an error).
In Script Info section, the first reasons is spelt 'rasons' (OK, not so important I know, but ...)
"
1050,Docs: fixes,2014-05-07T20:37:39Z,2014-05-09T13:50:11Z,,,,
1049,"Set DEBUG and TESTING config value to default to None, not False.",2014-05-07T16:53:15Z,2017-04-22T19:58:42Z,discussion,,,"Rationale: Some code might want to distinguish between ""DEBUG has not been
set, determine correct value from the environment / other means"" and ""DEBUG
has been turned off explicitly"".

One user of this is the Flask-Script extension, which would like to use a
default of True for the DEBUG setting when its built-in script runner is
used. Rationale: Many people use a special gunicorn-or-whatever runner in
production, but start a quick local ""manage.py runscript"" when they want to
test something / reproduce a bug. In this case it's helpful to not require
a different set of options that the user has to remember, or to have to use
a second config file which could go out of date.
"
1048,cannot run example flaskr,2014-05-07T13:54:33Z,2014-05-07T14:36:38Z,,AttributeError,AttributeError: 'Flask' object has no attribute 'cli',"clone repository flask 
cd PycharmProjects/flask/examples/flaskr/
python flaskr.py

error output:
Traceback (most recent call last):
  File ""flaskr.py"", line 48, in <module>
    @app.cli.command('initdb')
AttributeError: 'Flask' object has no attribute 'cli'

I checked, did not found attribut 'cli'
"
1047,"testsuite status, 0.10.; FAILED (failures=3, errors=2)",2014-05-06T03:49:47Z,2014-05-07T19:43:33Z,,"TypeError, AssertionError","TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType, AssertionError: '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/test_apps/config_package_app/instance' != '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/test_apps/instance'","with pypy; $ pypy -V
Python 2.7.3 (87aa9de10f9ca71da9ab4a3d53e0ba176b67d086, Apr 09 2014, 00:32:56) [PyPy 2.2.1]

``` python
 * pypy: running distutils-r1_run_phase python_test
............E...............................................................................................................F..........................F.............................F......................................E............
======================================================================
ERROR: test_build_error_handler (flask.testsuite.basic.BasicFunctionalityTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/basic.py"", line 758, in test_build_error_handler
    flask.url_for('spam')
TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType

======================================================================
ERROR: test_session_transactions_no_null_sessions (flask.testsuite.testing.TestToolsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/testing.py"", line 106, in test_session_transactions_no_null_sessions
    with c.session_transaction() as sess:
TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType

======================================================================
FAIL: test_uninstalled_package_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/config.py"", line 167, in test_uninstalled_package_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'test_apps', 'instance'))
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/test_apps/config_package_app/instance' != '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/test_apps/instance'

======================================================================
FAIL: test_json_key_sorting (flask.testsuite.helpers.JSONTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/helpers.py"", line 200, in test_json_key_sorting
    '}'
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: Lists differ: [u'{', u'""values"": {', u'""0"": ... != ['{', '""values"": {', '""0"": ""fo...

First differing element 4:
""10"": ""foo"",
""2"": ""foo"",

Diff is 955 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_appcontext_signals (flask.testsuite.signals.SignalsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/signals.py"", line 118, in test_appcontext_signals
    self.assert_equal(recorded, ['push', 'pop'])
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: Lists differ: ['push', 'push'] != ['push', 'pop']

First differing element 1:
push
pop

- ['push', 'push']
?            ^^^

+ ['push', 'pop']
?            ^^


----------------------------------------------------------------------
Ran 233 tests in 5.798s

FAILED (failures=3, errors=2)
```

ditto py2.7 3.3. Not got deps installed under py3.4 at this stage.
To me it appears the tests are simply written for py2 py3 and pypy misses out because of how pypy selects and or uses exception classes in case of the errors triggered by these tests. As for the failures=3, well, 1 is a unicode issue, the others just don't work.

Oh. see 837
"
1046,"unittest loader discover throwing ""AssertionError: View function mapping is overwriting an existing endpoint function""",2014-05-04T16:16:51Z,2014-05-04T16:33:17Z,,AssertionError,AssertionError: View function mapping is overwriting an existing endpoint function: <endpint name>,"I have have an issue with unittest.TestLoader().discover() throwing the error ""AssertionError: View function mapping is overwriting an existing endpoint function"".

I have an application as a package.
I brake the package up logically into sub-packages (no blueprints).
Each sub-package has a 'tests.py' file, which holds the units tests for that sub-package.
Outside of the application package I have a script called 'run_tests.py', it uses the following code to discover the tests:

``` python
import unittest

suite = unittest.TestLoader().discover('<application package>', pattern='*tests.py')
unittest.TextTestRunner().run(suite)
```

All views are stored in the sub-packages as 'views.py' these are loaded by the applications package '**init**.py' when the application is run. This is also the same file the Flask() application is created.

When I run the script 'run_tests.py' I get the following issue:

```
AssertionError: View function mapping is overwriting an existing endpoint function: <endpint name>
```

If however I point discover at '<application package>.<sub-package' I do not get the issue.

It would appear that 'unittest' loads the modules each time in tries to discover.

I know this is not a good idea for people Googling in future but I have a GH repo branch which replicates the issue: https://github.com/pjuu/pjuu/tree/0.3dev

I am guessing I can fix this issue with an application factory instead of an 'app' variable inside the applications '**init**.py'.

I have fixed the issue by moving all tests to a separate sub package called 'tests' in which no views/endpoints are loaded.

I have asked on IRC and been informed this may be as issue. I will happy to find out it isn't and a pointer to my own mistake/misunderstanding.

Is this a Flask issue, a unittest issue or something else?
"
1045,static content mime-type always text/plain,2014-05-04T14:33:37Z,2014-05-05T16:15:42Z,,,,"I have this weird problem. I am trying to include css files from the static directory, the browser downloads the content of the CSS file but it says the server is sending the css with `mime-type:text/plain`

It's best explained here - http://stackoverflow.com/questions/23452967/jinja2-static-files-mime-type-always-text-plain. I am unable to include any CSS file.
"
1044,Cannot run `flask` from command line,2014-05-04T09:25:04Z,2014-05-07T19:44:14Z,,AttributeError,AttributeError: 'Context' object has no attribute 'ensure_object',"I'm getting the same error whether installing into a blank venv with 2.7 or 3.4, straight from the git repository. It's my first day using flask (trying to initialize my db for the `flaskr` example).

``` python
Traceback (most recent call last):
  File ""/Users/roderic/Developer/testflask/bin/flask"", line 9, in <module>
    load_entry_point('Flask==0.11-dev-20140504', 'console_scripts', 'flask')()
  File ""/Users/roderic/Developer/testflask/lib/python2.7/site-packages/flask/cli.py"", line 352, in main
    auto_envvar_prefix='FLASK')
  File ""/Users/roderic/Developer/testflask/lib/python2.7/site-packages/click/core.py"", line 303, in main
    with self.make_context(prog_name, args, **extra) as ctx:
  File ""/Users/roderic/Developer/testflask/lib/python2.7/site-packages/click/core.py"", line 261, in make_context
    value, args = param.handle_parse_result(ctx, opts, args)
  File ""/Users/roderic/Developer/testflask/lib/python2.7/site-packages/click/core.py"", line 575, in handle_parse_result
    value = self.callback(ctx, value)
  File ""/Users/roderic/Developer/testflask/lib/python2.7/site-packages/flask/cli.py"", line 202, in set_app_id
    ctx.ensure_object(ScriptInfo).app_import_path = value
AttributeError: 'Context' object has no attribute 'ensure_object'
```
"
1043,Why isn't there `Blueprint.after_last_app_request`?,2014-05-02T23:46:19Z,2014-05-03T00:51:59Z,,,,"I was expecting to be able to run a function right before the application object is destroyed (right after the last request). Just like there's a [`Blueprint.before_app_first_request`](http://flask.pocoo.org/docs/api/#flask.Blueprint.before_app_first_request), why isn't there the equivalent for the last request, along the lines of `after_app_last_request`?
"
1042,404 .mobi format of the Documentation,2014-04-29T17:34:29Z,2014-05-02T00:50:06Z,,,,"The ""as .mobi"" link on http://flask.pocoo.org/docs/ cannot be found (404).

http://flask.pocoo.org/docs/flask-docs.mobi

PDF, epub, and zipped HTML are fine, fyi.
"
1041,Feature: override defaults from a config file,2014-04-29T13:44:06Z,2014-04-29T13:47:05Z,,,,"A lot of command line tools has the support to override defaults from one (or more) config files (e.g. [coverage](https://bitbucket.org/ned/coveragepy/src/d0812ed8a1cfcb0f9f6a42cfdf1064b76e894956/coverage/control.py?at=default#cl-96)). It would be really great if click supports this out of the box.

Proof of concept (with configobj): https://gist.github.com/schlamar/11400688
"
1040,Fixed typo.,2014-04-29T12:34:24Z,2014-05-07T19:44:30Z,,,,
1039,Fix a docstring type in cli.py.,2014-04-28T15:26:31Z,2014-04-28T17:59:51Z,,,,
1038,security hazard in app.route decorator ordering,2014-04-28T12:12:47Z,2014-04-28T13:33:39Z,,,,"It's quite common to use the `app.route` decorator together with other decorators to restrict access like this for example:

``` python
@app.route('/foo')
@auth.admin_required
def foo():
  pass
```

This can easily become a security issue (also described in gae-init/gae-init#149) if you sloppily swap the order of the decorators:

``` python
@auth.admin_required
@app.route('/foo')
def foo():
  pass
```

This will silently register `foo` without any guards and can easily hit developers ""off-guard"" ;). IMO this is a bit too easy and silent. I'd even bet that quite some people make this mistake.

I can think of a solution based on inspection at decoration time (inside `app.route` above `app.route.decorator`) check that `@app.route` decorators are not decorated with anything else. This doesn't feel nice but might prevent security flaws... thoughts?
"
1037,Documentation - link to Jinja website,2014-04-28T03:47:06Z,2014-05-04T23:55:31Z,,,,"Links to jinja website point to this 404 page: http://jinja.pocoo.org/2/documentation/templates

Example:
=Templates
This section only gives a very quick introduction into how Jinja2 is integrated into Flask. If you want information on the template engine’s syntax itself, head over to the official _Jinja2 Template Documentation_...
"
1036,Website Badges,2014-04-28T03:43:49Z,2014-07-31T08:33:05Z,,,,"Website badges are not showing. Images are pointing to: localhost

<div class=""badge"">
    <p><a href=""http://localhost/""><img src=""http://localhost/static/badges/flask-powered.png"" border=""0"" alt=""Flask powered"" title=""Flask powered""></a>
    </p><pre>&lt;a href=""http://localhost/""&gt;&lt;img
   src=""http://localhost/static/badges/flask-powered.png""
   border=""0""
   alt=""Flask powered""
   title=""Flask powered""&gt;&lt;/a&gt;</pre>
  </div>
"
1035,Updating extension guidelines,2014-04-26T00:12:02Z,2014-10-25T23:40:06Z,docs,,,"Extension approval has basically stalled for quite some time and the extension guidelines are in need of an update. I would like both of these things to change, starting with an update of the guidelines.

This pull request presents some changes to the guidelines to provide a basis for discussion.
"
1034,Add etag and last-modified helpers to improve cachability,2014-04-25T21:16:13Z,2014-05-07T19:56:00Z,,,,"I noticed that there are no helpers for Etag or Last-Modified based caching.

That way we could use 

``` python
def json():
    etag(some_etag)
    last_modified(some_timestamp)

    some_response = do_expensive_stuff
    return some_response
```

which is _very_ useful when you implement an API with expensive operations which often get requests for the exactly same response. Add a caching proxy and and they are only expensive once. 

[Sinatra (Ruby)](https://github.com/sinatra/sinatra) has those helpers: https://github.com/sinatra/sinatra/blob/v1.4.5/lib/sinatra/base.rb#L439-L554
"
1033,admin notification when rate limit is reached,2014-04-24T09:28:11Z,2014-04-24T09:28:34Z,,,,"Hi guys,

Is there some way of sending an email to the admins when the rate limit is reached for certain tasks?

Thanks.

David.
"
1032,few mispelling errors,2014-04-23T14:47:31Z,2014-04-26T00:12:51Z,,,,
1031,Serving static files from root static folder rather than blueprint's static folder,2014-04-21T23:12:52Z,2014-04-22T16:14:11Z,,,,"Hi,

I have a blueprint defined as :

auth_login = Blueprint('auth_login', __name__, template_folder='templates', static_folder='static', static_url_path='/static')

I am registering it as :

app.register_blueprint(auth_login, url_prefix='/user')

I have a route:

@auth_login.route('/<username>/')
def profile(username):
    return render_template('profile/user.html',
        username = username)

With this setup, the /user/<username> endpoint never manages to load the static files as I get,

""GET /user/<username>/static/css/lib/bootstrap.min.css HTTP/1.1"" 404 -
 ""GET /user/<username>/static/css/lib/font-awesome/css/font-awesome.min.css HTTP/1.1"" 404 -

What I really want is to look into the static folder of the root application and not the blueprint, so I want it to request

""GET /static/css/lib/bootstrap.min.css HTTP/1.1"" 200 -

Is it possible to configure this via static_folder or static_url_path so that the route will look for the static files at root and not relative to where the blueprint is mounted?
"
1030,Fix typos in docstrings and comments in run.py,2014-04-21T22:41:28Z,2014-04-26T00:14:37Z,,,,
1029,Updating Jinja2 and Werkzeug URLs.,2014-04-19T02:18:30Z,2014-04-25T23:42:34Z,,,,"Just updated the links that point to Jinja2 and Werkzeug websites. 
"
1028,Log template errors to stdout when debugging.,2014-04-17T17:02:05Z,2014-05-07T19:45:26Z,,,,"Create a `LoggingUndefined` type that logs to stdout on template errors and passes it to the jinja2 environment if the debug flag is set. Fixes #1006
"
1027,Flask authentication,2014-04-17T15:18:16Z,2014-04-17T15:21:41Z,,,,"i think flask needs awesome way to implement sessions and authentication
"
1026,Append `Vary: Cookies` header to response when session is accessed,2014-04-16T21:45:42Z,2017-05-20T19:16:26Z,session,,,"To prevent caching proxies like Varnish from providing multiple users with the same cache, you can set a `Vary: Cookie` header. 

This pull request appends the header to each response when the session is accessed.

I came across this issue while working on Warehouse, PyPi 2.0. @dstufft wanted something that added the header to the response anytime the session was being used.

&mdash; @citruspi + @abadger
"
1025,Calling post method in loop yields unexpected results,2014-04-15T05:06:18Z,2014-05-01T22:39:50Z,,,,"server (very basic!):

``` python
from flask import (Flask, request, jsonify)
from werkzeug import secure_filename

app = Flask(__name__)
app.config.from_object(__name__)
app.config['MAX_CONTENT_LENGTH'] = 1024 * 1024 * 1024

@app.route('/files', methods=['POST'])
def post_files():
    r = dict()
    r['directory'] = request.form['directory']
    # yes, there is more code here, but this is the simplest repro!
    return jsonify(r)


if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0')
```

client (with debugging output)

``` python
from itertools import izip_longest
from requests_toolbelt import MultipartEncoder
import requests
import os
import sys
import argparse

URL = ""http://localhost:5000/files""


def grouper(n, iterable, fillvalue=None):
    args = [iter(iterable)] * n
    return izip_longest(fillvalue=fillvalue, *args)


def import(source_folder, url):
    for (path, dirs, files) in os.walk(source_folder):
        if '.DS_Store' in files:
            files.remove('.DS_Store')

        if '.git' in dirs:
            dirs.remove('.git')

        # in order to limit the number of files being uploaded at once, keep it to 3 at a time
        for f1, f2, f3 in grouper(3, files):
            fields = dict()
            fields['directory'] = os.path.basename(path)
            if f1 is not None:
                fields['f1'] = (f1, open(os.path.join(path, f1), 'rb'))
            if f2 is not None:
                fields['f2'] = (f2, open(os.path.join(path, f2), 'rb'))
            if f3 is not None:
                fields['f3'] = (f3, open(os.path.join(path, f3), 'rb'))
            print fields
            print
            m = MultipartEncoder(fields=fields)
            r = requests.post(url,
                              data=m,
                              headers={'Content-Type': m.content_type})
            print r.json()
            print r
            print
            print


def main():
    parser = argparse.ArgumentParser(description='importer')
    parser.add_argument('source',
                        help='source folder to import from')
    parser.add_argument('--server',
                        help='server to upload folder to',
                        dest='url',
                        required=False,
                        default=URL)

    args = parser.parse_args()
    import(args.source, args.url)


if __name__ == '__main__':
    status = main()
    sys.exit(status)
```

When I run it with an input directory that has 9 files, the first time through, I get a RESPONSE 200, second time through, I get a RESPONSE 400:
127.0.0.1 - - [14/Apr/2014 22:02:30] ""POST /files HTTP/1.1"" 200 -
127.0.0.1 - - [14/Apr/2014 22:02:30] ""POST /files HTTP/1.1"" 400 -

Any idea why this is happening?
"
1024,Flask performance issue,2014-04-15T04:05:43Z,2014-05-25T09:32:33Z,,,,"I know benchmark is a lie, still, can we do any improvement? I love Flask and really feel bad when flask loses always in these benchmarks. 

So what do you guys think about this issue? Is it really a issue or what? Is any improvement necessary? If no, why?

http://blog.startifact.com/posts/webob-and-werkzeug-compared.html
http://faruk.akgul.org/blog/python-web-frameworks-benchmark/
http://mindref.blogspot.com/2012/09/python-fastest-web-framework.html
......
"
1023,About flask docs translations,2014-04-14T01:31:17Z,,docs,,,"#756

Hello @kennethreitz , We've created 'flask-docs-kr' project in readthedocs.org. 
(http://flask-docs-kr.readthedocs.org/ko/latest/)
We hope to enable 'flask.readthedocs.org/ko/latest' URL.

Please add our flask-docs-kr project to official flask readthedocs.org project. 
('Admin -> Translations -> Existing Translations')

Thanks.
"
1022,Fix minor typo,2014-04-13T20:25:29Z,2014-04-14T23:02:44Z,,,,
1021,Change testsuite to be compatible with py.test and nose,2014-04-13T07:26:46Z,2014-09-27T13:52:12Z,,,,"Currently py.test fails to discover any tests. It'd be nice if Flask's, Werkzeug's and Jinja's testsuites could be modified so that third-party testrunners like py.test and nose are able to run them correctly.
"
1020,Odd error while running run-tests.py under coverage.py,2014-04-13T06:04:00Z,2014-08-28T15:46:50Z,,"ValueError, ImportError","ValueError: __main__.__spec__ is None, ImportError: Error while finding loader for '__main__' (<class 'ValueError'>: __main__.__spec__ is None)","Cloned the latest Flask source from github with the intention of increase flasks test coverage and the first thing I did was run-tests.

Output was, 

```
Ran 240 tests in 1.415s

OK
```

When I ran-tests under coverage however I received this error.

```
coverage run run-tests.py .................................................................................................................................E..............................................................................................................
======================================================================
ERROR: test_main_module_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/happy/opt/lib/python3.4/pkgutil.py"", line 481, in find_loader
    spec = importlib.util.find_spec(fullname)
  File ""/Users/happy/opt/lib/python3.4/importlib/util.py"", line 100, in find_spec
    raise ValueError('{}.__spec__ is None'.format(name))
ValueError: __main__.__spec__ is None

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/Users/happy/flask/flask_source/flask/flask/testsuite/config.py"", line 198, in test_main_module_paths
    from main_app import app
  File ""/Users/happy/flask/flask_source/flask/flask/testsuite/test_apps/main_app.py"", line 4, in <module>
    app = flask.Flask('__main__')
  File ""/Users/happy/flask/flask_source/flask/flask/app.py"", line 354, in __init__
    instance_path = self.auto_find_instance_path()
  File ""/Users/happy/flask/flask_source/flask/flask/app.py"", line 645, in auto_find_instance_path
    prefix, package_path = find_package(self.import_name)
  File ""/Users/happy/flask/flask_source/flask/flask/helpers.py"", line 704, in find_package
    loader = pkgutil.get_loader(root_mod_name)
  File ""/Users/happy/opt/lib/python3.4/pkgutil.py"", line 467, in get_loader
    return find_loader(fullname)
  File ""/Users/happy/opt/lib/python3.4/pkgutil.py"", line 487, in find_loader
    raise ImportError(msg.format(fullname, type(ex), ex)) from ex
ImportError: Error while finding loader for '__main__' (<class 'ValueError'>: __main__.__spec__ is None)

----------------------------------------------------------------------
Ran 240 tests in 1.703s

FAILED (errors=1)
```

Environment:
    OS X 10.8.5 (12F45)
    Python3.4

```
    pip freeze produces
        Flask==0.10.1
        Jinja2==2.7.2
        MarkupSafe==0.19
        Werkzeug==0.9.4
        coverage==3.7.1
        itsdangerous==0.24
```

Unsure at this point if this is a coverage.py issue or a flask issue.
"
1019,fix typo,2014-04-11T20:44:22Z,2014-04-14T23:02:52Z,,,,
1018,Clarified that the code is meant to be saved as a file called hello.py.,2014-04-10T20:37:30Z,2014-05-07T19:51:22Z,,,,"Clarified that the code is meant to be saved as a file called hello.py.
"
1017,Protect against python 3.4 pkgutil change,2014-04-10T14:25:54Z,2014-05-07T19:51:45Z,,,,"Python 3.4 changed the functionality of pkgutil.get_loader.  This should protect against that.

refs #1011 
"
1016,Flash category constants,2014-04-09T14:17:29Z,2014-07-27T08:46:08Z,,,,"It would be useful to be able to refer to [flash categories](http://flask.pocoo.org/docs/patterns/flashing/) using constants, for example:

```
FLASH_CATEGORY_MESSAGE = 'message'
FLASH_CATEGORY_DEFAULT = FLASH_CATEGORY_MESSAGE
```

This gives an overview of the **already defined** categories, and an obvious way to avoid duplicating these in every Flask application.
"
1015,Add flask-bouncer to extension registry,2014-04-05T19:41:33Z,2014-10-19T18:16:56Z,,,,"Hi guys:
 I wrote flask-bouncer, a authorization library based on RyanBates' CanCan ruby gem

docs: http://pythonhosted.org/flask-bouncer/ 
github: https://github.com/jtushman/flask-bouncer
pypi: https://pypi.python.org/pypi/flask-bouncer/0.1.11

Would love to have it listed in flask-registry.  I hope it will be useful for the community.

Any feedback will be well received

Thanks!
"
1014,Fix when release date is not today,2014-04-05T09:40:15Z,2014-04-06T17:11:17Z,,,,"Also, some fixes for PyFlakes

Original commit by @dongweiming at a05c4038706f3a95776adea376bc664c0714b426

See #842

I think the reason why nobody can reopen this PR is because his fork is gone.
"
1013,Adding jinja2 environment variables as a keyword arg in the flask constr...,2014-04-05T02:23:11Z,2014-05-07T19:52:54Z,,,,"Hello! Subclassing to pass in a few basic args to the jinja environment is something I've done frequently. Making this an explicit part of the API seems to be a better idea.
"
1012,missed word.,2014-04-02T01:17:05Z,2014-04-14T23:03:04Z,,,,"request tstack -> request context stack
"
1011,Python 3.4 changed `pkgutil.get_loader` behavior,2014-04-01T18:54:03Z,2016-04-08T08:00:44Z,blocker,AttributeError,AttributeError: 'NoneType' object has no attribute 'loader',"In doing a test upgrade to python 3.4 I encountered the following traceback (snippet)

``` bash
  File ""/my/virtualenv/wonderboom34/lib/python3.4/site-packages/flask/app.py"", line 319, in __init__
    template_folder=template_folder)
  File ""/my/virtualenv/wonderboom34/lib/python3.4/site-packages/flask/helpers.py"", line 742, in __init__
    self.root_path = get_root_path(self.import_name)
  File ""/my/virtualenv/wonderboom34/lib/python3.4/site-packages/flask/helpers.py"", line 631, in get_root_path
    loader = pkgutil.get_loader(import_name)
  File ""/usr/local/Cellar/python3/3.4.0/Frameworks/Python.framework/Versions/3.4/lib/python3.4/pkgutil.py"", line 467, in get_loader
    return find_loader(fullname)
  File ""/usr/local/Cellar/python3/3.4.0/Frameworks/Python.framework/Versions/3.4/lib/python3.4/pkgutil.py"", line 488, in find_loader
    return spec.loader
AttributeError: 'NoneType' object has no attribute 'loader'
```

I was able to resolve it with the following:

``` diff

diff --git a/helpers.py b/helpers.py
index 62a64bb..f671c27 100644
--- a/helpers.py
+++ b/helpers.py
@@ -628,7 +628,10 @@ def get_root_path(import_name):
         return os.path.dirname(os.path.abspath(mod.__file__))

     # Next attempt: check the loader.
-    loader = pkgutil.get_loader(import_name)
+    try:
+        loader = pkgutil.get_loader(import_name)
+    except AttributeError:
+        loader = None

     # Loader does not exist or we're referring to an unloaded main module
     # or a main module without path (interactive sessions), go with the
@@ -658,7 +661,10 @@ def find_package(import_name):
     folder structure exists (lib, share etc.).
     """"""
     root_mod_name = import_name.split('.')[0]
-    loader = pkgutil.get_loader(root_mod_name)
+    try:
+        loader = pkgutil.get_loader(root_mod_name)
+    except AttributeError:
+        loader = None

     if loader is None or import_name == '__main__':
         # import name is not found, or interactive/main module
```

If you want a formal pull request, I'd be happy to provide one, and do it ""right"", this feels pretty brute-force, I'm sure there's a better way.
"
1010,Tweaks to docs/patterns/viewdecorators.rst,2014-03-26T17:03:10Z,2014-05-09T13:48:36Z,,,,"Just one change to the example code in the @templated example - render_template was missing. Plus a few commas, missing words and such in the text, hopefully nothing controversial.

Also, my first pull request, so let me know if I've done anything wrong or any conventions I'm not adhering to.
"
1009,Ajax render selected complete EmbeddedDocument,2014-03-26T10:22:39Z,2014-07-27T11:55:15Z,,,,"Hi!
flask-admin, mongoengine
I have EmbeddedDocument objects and I want render to page selected EmbeddedDocument. Selected from <select></select>.

How I can render EmbeddedDocument by ID?
Have any standart decision?
"
1008,The Flask Mailinglist page is out of date,2014-03-24T03:07:57Z,2014-09-27T13:59:24Z,,,,"The Flask Mailinglist page:
http://flask.pocoo.org/mailinglist/

mentions this page:
http://flask.pocoo.org/mailinglist/archive/
Which shows the latest email from 2012-10-29, giving the impression that the Flask community is no longer active

This page seems to be up to date:
http://librelist.com/browser/flask/

Please update http://flask.pocoo.org/mailinglist/ to reflect this change.
Thank you.
"
1007,Flask can't read multipart form boundaries from custom HTTP clients,2014-03-23T05:44:31Z,2014-03-23T13:20:50Z,,,,"I consistently get the error ""TypeError: cannot concatenate 'str' and 'NoneType' objects"" whenever I send a multipart form from anywhere that's not an HTML <form>.

For example AndroidQuery's, Apache HttpClient, and the Chrome Postman plugin all give this error.

Trace:
File ""C:\Python27\lib\site-packages\werkzeug\formparser.py"", line 382, in parse_lines
    next_part = b'--' + boundary
"
1006,Set app.jinja_env.undefined to something better when debug = True,2014-03-20T14:55:40Z,2014-06-06T15:18:55Z,,,,"Currently missing attributes of template variables are swallowed by Flask, even
in debug mode:

```
@app.route('/')
def index():
    # template contains:
    # {{ lol.asdf }}
    return flask.render_template('lol.htm', lol=3)
```

I propose we set `app.jinja_env.undefined` to some type that logs warnings to
console when Flask's debug mode is enabled.
"
1005,Using encodings other than UTF-8 in Response,2014-03-19T21:17:07Z,2017-04-08T17:58:09Z,,,,"The Flask documentation states that Flask assumes the encoding of the response to be UTF-8.

```
the encoding for text on your website is UTF-8

From http://flask.pocoo.org/docs/unicode/
```

Does that mean we are discouraged to use the encodings other than UTF-8 in the Flask response? I was unable to find a way to change the intended encoding of neither `flask.wrappers.Response` nor `werkzeug.wrappers.Response` correctly.
1. I cannot directly pass the text to the constructor, as it calls set_data() with the UTF-8 encoding. That's because the constructor has no `charset` parameter. There is no way to change its behavior. So I should create the response object with no constructor arguments, and then assign 'utf-8' to `response.charset`, and call `response.set_data()`.
2. But still, as `content_type` is determined in the constructor, it will still be ""text/html; charset=UTF-8"" because the `charset` attribute is always `'utf-8'` during the object creation process. So I'm forced to pass `content_type` to the constructor, which is kinda confusing because my original intention was just changing the encoding, rather than explicitly setting the Content-Type.

Do I understand the process accurately?

If I'm right, I suggest:
1. Allow passing `charset` to the `Response` class.
2. Or, the `content_type` attribute should be updated again when the user manually sets the `charset` attribute.
"
1004,Small punctuation change in unicode doc,2014-03-19T17:23:21Z,2014-03-21T20:21:01Z,,,,"Just makes it easier on the eyes/brain.
"
1003,Add env RUN_FLASK_MEMORY_TESTS to travis.yml,2014-03-18T21:52:36Z,2014-03-21T21:06:33Z,,,,
1002,Allow using |tojson in double-quoted HTML attributes again,2014-03-16T22:36:46Z,2016-06-23T19:20:21Z,,,,"I'm in a project where double-quoted HTML attributes is part of the style guide. We're also using data- attributes to pass data to code and consider it a bad practice to render anything directly within scripts.

Being able to remove `|safe` within `<script>` seems convenient at first glance. But after discovering that it changes the behavior of `|tojson` everywhere else when using double-quoted attributes, it doesn't seem as nice. It's just less intuitive overall. Forcing you to use a particular HTML style or requiring `|forceescape` (as opposed to just `|e`) isn't really a great tradeoff for implying `|safe` within `<script>`.

So the underlying question. Can we allow `|tojson` to work within double-quotes attributes again? Or is there some technical reason why we can't. And if not, why not add another filter to use within `<script>` blocks instead so the principal of least surprise isn't violated?
"
1001,Please document PyCharm support,2014-03-16T02:39:35Z,2014-04-25T23:49:59Z,,,,"Flask is great, but it would be nice if you document a quick start with PyCharm
"
1000,harmless comment fixes/typos,2014-03-15T13:46:34Z,2014-03-21T20:21:18Z,,,,
999,send_file in combination with chrome on android,2014-03-13T14:12:13Z,2014-07-27T12:03:43Z,,,,"A cStringIO file containing pdf data is uploaded using send_file:

```
# pdf is the cStringIO instance.
return send_file(pdf, mimetype=""application/pdf"",
                         as_attachment=True,
                         attachment_filename=""basicreport.pdf"")
```

this works on android when using firefox. On chrome the download fails with an ""Untitled"" filename.

When manually creating the response manually all works fine..

```
response = make_response(pdf.read())
response.headers['Content-Type'] = 'application/pdf'
response.headers['Content-Disposition'] = 'attachment; filename=basicreport.pdf'
```
"
998,SERVER_NAME configuration should not implicitly change routing behavior.,2014-03-13T06:28:07Z,,,,,"When `Flask.config['SERVER_NAME']` is set to a domain (_thedomain.com:8080_) it alters the route matching behavior. Requests on ""subdomained"" urls (_sub1.thedomain.com:8080/some/route_) then only resolve to subdomained Blueprints (Blueprints with their 'subdomain' attribute set). With `app.config['SERVER_NAME']` set to `None`, subdomained url would also properly resolve to non-subdomained Blueprints.

In other words, the presence of `app.config['SERVER_NAME']` effectively serves as an _implicit_ switch to subdomain matching behaviour for Blueprints.

(1) if this is intentional the documentation is not clear about it.
(2) the naming of that config is not very indicative of this behavior altering property either.
(3) this is not always the desirable behavior. Sometimes one still wants to use subdomains and set `app.config['SERVER_NAME']`, but does not want to map blueprints to subdomains. Such is the case for example, when using the value contained by `app.config['SERVER_NAME']` to extract the subdomain info from the requested url in one's own user-defined function (a `before_request` handler for example). As it stands, the behavior altering property of `app.config['SERVER_NAME']` forces developers in the latter use-case to set another more innocuous config property with the same value (e.g. `app.config['SERVER_DOMAIN']`).

I propose that a new config flag that will explicitly enable subdomain matching behavior be added. The presence of which would make `app.config['SERVER_NAME']` mandatory (can't have subdomain support without it). But the presence of `app.config['SERVER_NAME']` should not impose subdomain matching behavior.
"
997,Clarify the after_request argument,2014-03-05T23:23:57Z,2014-03-13T18:24:53Z,,,,"Make it a bit clearer that it's an instance of response_class that is 
expected, not the actual response_class class.
"
996,Tutorial Typo: tutorial/views/#tutorial-views  -- add_entry() ,2014-03-05T23:21:03Z,2014-03-06T22:57:53Z,,,,"http://flask.pocoo.org/docs/tutorial/views/#tutorial-views

Should be ""sessions"" not ""session""

@app.route('/add', methods=['POST'])
def add_entry():
    if not session.get('logged_in'):
"
995,Update send_file() docstring - file name required,2014-03-05T09:08:31Z,2014-07-27T13:08:34Z,,,,"send_file() is assuming a file has a visible filename on the file system thus leading to errors when trying to use a file object returned by tempfile.TemporaryFile() .
This should be mentioned in the docstring along with the suggestion to use NamedTemporaryFile() instead of TemporaryFile() .
"
994,Added 'import os' statement,2014-03-04T23:01:35Z,2014-03-13T18:25:34Z,,,,"Added 'import os' statement so you can use os.path.join() when defining DATABASE location
"
993,Attempted implicit sequence conversion but the response object is in direct passthrough mode,2014-03-04T15:50:08Z,2014-03-13T18:32:37Z,,,,"Can someone please take a look at this issue in Flask-gzip? Just using flask and flask-gzip, but getting this error after upgrading from 0.9 to 0.10.1

https://github.com/elasticsales/Flask-gzip/issues/7

this did, however, make the error go away:

```
@app.after_request
def after_request(response):
    response.direct_passthrough = False
    return response
```
"
992,Pass keyword args from `test_client` method to client class constructor,2014-03-03T19:18:28Z,2014-10-20T19:22:16Z,,,,"I believe this would be useful for customizing test clients. For example:

``` python
class TestClient(FlaskClient):
    def __init__(self, authenticated=False, *args, **kwargs):
        self._authenticated = authenticated
        FlaskClient.__init__(*args, **kwargs)
```

And then I could say...

``` python
client = app.test_client(authenticated=True)
```

`test_client()` can then act more as a factory.
"
991,Fix broken tutorial code,2014-03-01T15:20:00Z,2014-03-13T18:34:21Z,,,,"Python gave an error when copy/pasting this code, and adding os fixed it for me.
"
990,"Review Flask-User extension for listing, and approval",2014-03-01T03:35:32Z,2014-10-19T18:30:46Z,,,,"Dear Flask Team,

THANK YOU SO MUCH for developing such a delightful platform.
I truly love my work in large part because of Flask!

I have an opportunity to 'give back' to the Flask community. I would like to submit an extension for listing in the Flask Extension Registry, and have it accepted as an Approved Extension.

Warmly,
Ling.

Extension: https://pypi.python.org/pypi/Flask-User
Version: v0.3.6

I have followed your guidelines below:

o. An approved Flask extension requires a maintainer.

   Maintainer: Ling Thio <ling.thio [at] gmail.com>
   Repository: https://github.com/lingthio/flask-user
1. An approved Flask extension must provide exactly one package or module named flask_extensionname.
   
   Module: flask_user
2. It must ship a testing suite that can either be invoked with make test or python setup.py test.
   
   python setup.py test
   Runs automated tests and coverage currently runs at 98%.
3. APIs of approved extensions will be checked
   
   UserManager.**init**(app) sets self.app = app
   UserManager.init_app(app) does NOT set self.app
4. The license must be BSD/MIT/WTFPL licensed.
   
   BSD License
5. The naming scheme for official extensions
   
   Flask-User
6. Approved extensions must define all their dependencies in the setup.py file
   
   mkvirtualenv test  # brand new env
   pip install flask-user
   can run the flask_user/example_apps/basic_app.py
7. The extension must have documentation that uses one of the two Flask themes for Sphinx documentation.
   
   See http://pythonhosted.org//Flask-User/
8. The setup.py description (and thus the PyPI description) has to link to...
   
   The documentation: http://pythonhosted.org//Flask-User/
   Home page: https://github.com/lingthio/flask-user
   Bug track: https://github.com/lingthio/flask-user/issues
   Development version: n/a
9. The zip_safe flag in the setup script must be set to False
   
   setup.py:
       zip_safe=False,
10. An extension currently has to support Python 2.6 as well as Python 2.7
    
    Travis-CI runs Flask-Utils on Python 2.6, 2.7 and 3.3
"
989,Typo in fastcgi docs,2014-02-26T16:03:05Z,2014-03-13T18:41:00Z,,,,"Second paragraph in 
http://flask.pocoo.org/docs/deploying/fastcgi/
reads

> Please make sure in advance that any app.run() calls you might have in your application file are inside an if __ name __ == '__ main __': block or moved to a separate file. Just make sure it’s not called because this will always start a local **WSGI server** which we do not want if we deploy that application to FastCGI.

Shouldn't this be ""start a local **HTTP server**""
"
988,Parent task (with debug=True) doesn't properly kill children,2014-02-24T14:39:34Z,2014-03-13T18:51:14Z,,,,"If I run a server in debug mode and the kill the parent process the child process is left running. It should be killed along with the parent (as usually happens with parent-child processes).

```
import flask
app = flask.Flask(__name__)
if __name__ == ""__main__"":
    app.run(debug=True)
```

```
> ps -ef | grep python
edA-qa   18280 16524  4 15:38 pts/7    00:00:00 python min.py
edA-qa   18285 18280  4 15:38 pts/7    00:00:00 /usr/bin/python min.py
> kill 18280
> ps -ef | grep python
edA-qa   18285     1  1 15:38 pts/7    00:00:00 /usr/bin/python min.py
```

This is interfering with my ability to use Flask as a test server in a test suite. I spawn a process with Popen and kill it when I'm done. Unfortunately the server is left and only a wrapper process is killed.
"
987,Add edit_entry and delete_entry to flaskr,2014-02-23T18:39:24Z,2014-02-28T01:45:48Z,,,,
986,Remove or downplay Tornado recommendation,2014-02-23T04:33:22Z,2014-09-25T15:21:44Z,,,,"http://flask.pocoo.org/docs/deploying/wsgi-standalone/ talks about Tornado's scaling properties, but does not mention that most of this scalability is lost when the single-threaded asynchronous server is combined with a synchronous WSGI framework like flask.  I see a lot of questions on stackoverflow from people who use Flask on Tornado and are surprised that they are not getting any concurrency.  

I think it would be best to remove Tornado from this page entirely since Tornado is not really focused on being a WSGI container and WSGI apps are nearly always better served by a multi-threaded server like gunicorn or uwsgi.  If you do want to keep a mention of Tornado as a WSGI server, please acknowledge its limitations (single-threaded) and that it really only makes sense when you want to combine a WSGI app with a Tornado-native app in the same process.
"
985,Add not_modified shortcut,2014-02-20T13:58:53Z,2014-03-13T19:00:16Z,,,,"`304 Not Modified` is used very often, it's handy to use a short-circuit response like this.
"
984,Teardown functions sometimes receive spurious exceptions from Gunicorn,2014-02-19T22:10:17Z,2016-06-03T09:03:11Z,,,,"While using Flask-SQLAlchemy's `SQLALCHEMY_COMMIT_ON_TEARDOWN` feature, I noticed certain successful-looking requests didn't have their results committed to the database. After further investigation I discovered some exceptions from Gunicorn end up being passed into the teardown function Flask-SQLAlchemy uses to implement the post-request commit functionality.

I was able to reproduce the issue on a minimal case with the code below (as test.py):

``` python
from flask import Flask, redirect, request, url_for

app = Flask(__name__)
app.debug = True

@app.route(""/"")
def index():
    return ""Hello World!""

@app.teardown_request
def teardown_request(exception=None):
    if exception:
        app.logger.error(""Unexpected exception {}"".format(exception))

if __name__ == ""__main__"":
    app.run()
```

With the app run with the following line:

`gunicorn test:app -w 1`

I fairly consistently get the following output:

```
2014-02-19 14:00:34 [4459] [INFO] Starting gunicorn 18.0
2014-02-19 14:00:34 [4459] [INFO] Listening at: http://127.0.0.1:8000 (4459)
2014-02-19 14:00:34 [4459] [INFO] Using worker: sync
2014-02-19 14:00:34 [4462] [INFO] Booting worker with pid: 4462
--------------------------------------------------------------------------------
ERROR in test [/Users/aston/.envs/flask-gunicorn-bug/test.py:12]:
Unexpected exception [Errno 35] Resource temporarily unavailable
--------------------------------------------------------------------------------
```

Errno 35 is EAGAIN.

I'm running on a Mac, but I first noticed this behavior on Heroku (it's Errno 11 there). Also, the behavior isn't consistent, and though I found it more consistently locally with app.debug = True, I noticed the behavior with debugging off (again, on Heroku).

There's been some discussion about this issue in Gunicorn's issues section [here](https://github.com/benoitc/gunicorn/issues/416), but they consider EAGAIN a non-fatal exception (and as you can see from running the example, the requests always successfully return data), so the fact that Flask sees it and thinks it's real is a problem.

I believe Gunicorn could help fix this bug by clearing sys.exc_info() after ignoring the exception (i.e. around here: https://github.com/tilgovi/gunicorn/blob/master/gunicorn/workers/sync.py#L43:L45), but it'd still be racy.

The real fix, I believe is for Flask not to throw arbitrary ""if not exc: exc = sys.exc_info()[1]"" in areas where no exception is being explicitly caught by the code (e.g. [here](https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L1711:L1712)). Another alternative, if that behavior is generally desirable, would be to ignore any exceptions with a stack trace that doesn't go deep enough to include any Flask or user-provided code.
"
983,Can't customize url_for external links without causing 404 errors,2014-02-19T16:47:00Z,2014-11-02T18:48:27Z,,,,"I have a server set up where there is a front-end web server (i.e. proxy) sitting in front of my Flask application.  Because of this, I need to be able to generate external links that have a different url than the actual requests coming to my Flask application.
e.g. my app is running on http://foo.example.com:1234/, but url_for(..., _external=True) needs to generate things like ""https://some.other.com/""

The suggested way of doing this, by changing SERVER_NAME, doesn't work because that is for both url_for() and by the underlying werkzeug routing code so changing it causes 404 errors.

Would it be feasible to add an EXTERNAL_SERVER_NAME setting that is used instead?
"
982,Add required import os for tutorial,2014-02-16T01:12:48Z,2014-02-16T01:18:40Z,,,,"Tutorial was missing import os, required for sqlite db configuration.
"
981,Cannot lazily load views in 0.10.1,2014-02-13T20:09:50Z,2016-06-16T20:40:24Z,,AssertionError,AssertionError: View function mapping is overwriting an existing endpoint function,"I was lazily loading views in 0.9, and some views needed to use the same function, e.g.

```
url('/<lang:lang>/blog/', 'blog.views.blog_index', defaults={'page': 1})
url('/<lang:lang>/blog/page/<int:page>', 'blog.views.blog_index')
```

Upon updating Flask to 0.10.1, I now get the following error:

```
AssertionError: View function mapping is overwriting an existing endpoint function
```

The cause is the same as #796, but [your current documentation still says this is a valid way of having a central URL map](http://flask.pocoo.org/docs/patterns/lazyloading/).

Is there a way around this, beyond just storing every single `LazyView` in a dict and looking it up each time `url()` is called? The above documentation needs to be updated to reflect the answer.
"
980,Update docs copyright date,2014-02-13T15:28:31Z,2014-03-03T18:17:30Z,,,,"Happy belated New Year!
"
979,"Add an ""import os"" to tutorial",2014-02-11T14:34:00Z,2014-03-13T19:12:28Z,,,,"Tutorial requires os module for the path.join function
"
978,autoescape false doesn't work as expected,2014-02-10T23:11:34Z,2014-02-10T23:24:57Z,,,,"This works:
{% autoescape false %}
{{ something_without_spaces }}
{% endautoescape %}

This pops with python exception:
{% autoescape false %}
{{ something with spaces }}
{% endautoescape %}

This breaks client side jquery templating with script tags

Python version 2.7
Flask latest-stable
"
977,Update windows installation and other notes,2014-02-10T20:24:44Z,2014-03-21T20:36:12Z,,,,"Making allowance for new convenience of `get-pip.py` that automatically installs setuptools and pip together.

Stop recommending distribute, which has now been merged into setuptools.
"
976,"""import os"" statement missing from tutorial",2014-02-09T19:14:36Z,2014-03-13T19:24:57Z,,,,"Very minor issue - on http://flask.pocoo.org/docs/tutorial/setup/#tutorial-setup, ""import os"" should be added to the first code block.
"
975,Update copyright year in license,2014-02-07T09:28:25Z,2014-02-08T16:24:27Z,,,,"Update copyright year in license. Looks like it was forgotten in 52098e1e4fc4d9c962e9ecb09dfbbcc6ac80a4d7.
"
974,jsonify() ignores the sort order of an OrderedDict,2014-02-06T12:30:44Z,2014-02-08T16:54:19Z,,,,"Hi, I would like to know whether this is a bug or a feature.

Example:

```
from flask import Flask, jsonify
from collections import OrderedDict
app = Flask('__name__')

@app.route('/')
def jsonify_test():
    unsorted_dict = {'foo': 1, 'bar': 4, 'baz': 0}
    sorted_dict = OrderedDict(sorted(unsorted_dict.items(), key=lambda x: x[1]))
    return jsonify(sorted_dict)

if __name__ == '__main__':
    app.run(debug = True)
```

Result:

```
{
    ""bar"": 4, 
    ""baz"": 0, 
    ""foo"": 1
}
```
"
973,Test client unicode bug,2014-02-06T08:21:37Z,2014-02-08T16:53:51Z,,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 4: ordinal not in range(128),"See next example with python 2.7.5, flask=0.10.1, werkzeug==0.9.4:

```
import unittest
from cStringIO import StringIO
from flask import Flask, request


app = Flask(__name__)

@app.route('/', methods=[""POST""])
def test_view():
    print(request.values, request.files)
    return ""OK""


class UnicodeTestCase(unittest.TestCase):
    def setUp(self):
        self.client = app.test_client(use_cookies=False)

    def test_unicode_file(self):
        file = (StringIO(""0"" * 1000), ""filename.txt"")
        self.assertEquals(200, self.client.post('/', data={'file': file}).status_code)

    def test_unicode_string(self):
        string = u""∆_∆""
        self.assertEquals(200, self.client.post('/', data={'string': string}).status_code)

    def test_unicode_file_and_string(self):
        file = (StringIO(""0"" * 1000), ""filename.txt"")
        string = u""∆_∆""
        self.assertEquals(200, self.client.post('/', data={'file': file, 'string': string}).status_code)


if __name__ == '__main__':
    app.run('0.0.0.0', 8080, True)
```

When I make request directly all work fine. But with test client have error:

```
Error
Traceback (most recent call last):
  File ""/Users/user1/tests/test_uni.py"", line 108, in test_unicode
    self.assertEquals(200, client.post('/', data={'file': file, 'string': string}).status_code)
  File ""/Users/user1/.virtualenvs/test/lib/python2.7/site-packages/werkzeug/test.py"", line 771, in post
    return self.open(*args, **kw)
  File ""/Users/user1/.virtualenvs/test/lib/python2.7/site-packages/flask/testing.py"", line 108, in open
    follow_redirects=follow_redirects)
  File ""/Users/user1/.virtualenvs/test/lib/python2.7/site-packages/werkzeug/test.py"", line 725, in open
    environ = args[0].get_environ()
  File ""/Users/user1/.virtualenvs/test/lib/python2.7/site-packages/werkzeug/test.py"", line 535, in get_environ
    stream_encode_multipart(values, charset=self.charset)
  File ""/Users/user1/.virtualenvs/test/lib/python2.7/site-packages/werkzeug/test.py"", line 104, in stream_encode_multipart
    write('\r\n\r\n' + value)
  File ""/Users/user1/.virtualenvs/test/lib/python2.7/site-packages/werkzeug/test.py"", line 71, in write
    write_binary(string.encode(charset))
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 4: ordinal not in range(128)
```

See details http://stackoverflow.com/q/21584413/880326.
"
972,Explicitly pass the Celery instance name.,2014-02-05T20:11:27Z,2014-02-08T16:24:50Z,,,,"When starting a Celery worker module, it is assumed that the Celery instance within the module is called `app`. This is not the case in the Celery pattern, where it is called `celery`, and so must be explicitly referenced.
"
971,Debug output only show error line in own scripts possible?,2014-02-04T14:15:34Z,2014-02-08T17:06:26Z,,,,"I'm building a website using Flask, and so far I love it. The only thing that constantly bothers me however, is that when I get debug output, it's always so much. And most of it is just internal error messages from Flask, which don't tell me anything. 99.9% of the time, I'm just interested in the line which led to this error which is located in my own scripts. If I know that, I normally can quickly find the solution, but all the other output just confuses me.

So; is there a way that I can just output the lines in my own written scripts that led to the error?
"
970,Add self.options so options can be retrived from within the blueprint,2014-02-04T12:11:04Z,2014-02-09T13:20:19Z,,,,"With this method I can pass options to the blueprint when registering.
They are then available in the blueprint.
"
969,"New Converters: bool, long etc.?",2014-02-01T15:01:52Z,2014-02-08T17:22:21Z,,,,"From the 'quickstart' dcoumentation:

```
The following converters exist:

int accepts integers
float   like int but for floating point values
path    like the default but also accepts slashes
```

Can other types be added please? I may need them for an OpenMeetings API wrapper.
"
968,"GET params discarded by flask test client, when using full url",2014-01-29T19:37:00Z,2014-02-08T17:19:21Z,,,,"Using full URL in flask test client. GET params are silently discarded:

```
import unittest
from flask import Flask, request

app = Flask(__name__)
app.testing = True

@app.route('/action')
def action():
    return """"


class MyTestCase(unittest.TestCase):

    def test_get_with_path(self):
        with app.test_client() as c:
            rv = c.get('/action?vodka=42')
            assert 'vodka' in request.args # assertion OK

    def test_get_with_complete_url(self):
        with app.test_client() as c:
            rv = c.get('http://domain.com/action?vodka=42')
            assert 'vodka' in request.args # assertion error

    def test_post_with_complete_url(self):
        with app.test_client() as c:
            rv = c.post('http://domain.com/action?vodka=42', data={'gin': 43})
            assert 'gin' in request.form # assertion OK
            assert 'vodka' in request.args # assertion error


if __name__ == '__main__':
    unittest.main()
```

This may also be considered inconsistent with the behaviour on POST params.

If this is not the way one should use test client, maybe put a warning in the docs ?
"
967,Optional Jinja2,2014-01-28T23:39:33Z,2014-02-20T18:05:40Z,,,,"What about making Jinja2 optional, so one can install it with

```
pip install flask[jinja2]
```

?

That's easy with this directive in setup.py:

```
extras_require={
    'jinja2': [
        'jinja2 >= 2.4',
    ]
},
```

For users that develop APIs with Flask, this will allow to exclude extra dependencies.
"
966,Support other JSON media types in `Request.get_json`,2014-01-28T18:47:21Z,2014-02-08T17:01:47Z,,,,"Currently, `Request.get_json` is hardcoded to only accept JSON requests with a media type of `application/json`. There are a plethora of emerging JSON media types and it would be handy to be able to configure the application with a set of acceptable JSON media types.

A probably half brained idea is to change the conditional statement inside `Request.get_json` to something like:

``` python
json_mimetypes = _request_ctx_stack.top.app.config.get('JSON_MIMETYPES', ('application/json',))

if self.mimetype not in json_mimetypes and not force:
    return None
```
"
965,0.10 Documentation - Unit Testing - Error,2014-01-27T02:32:01Z,2014-02-08T17:20:57Z,,ImportError,ImportError: No module named flaskr,"Hello, I'm new to Python and Flask so bare with me.  I'm using Windows 8, PyCharm, Python 2.7.4, and Flask 0.10.

I followed the documentation to create the Flaskr application which is working great!  So then I moved on to the unit testing application and began following the instructions.

I created a new module as instructed, copied and pasted the example code, and then ran python flaskr_tests.py and got the following:

Traceback (most recent call last):
    File ""flaskr_tests.py"", line 2, in <module>
        import flaskr
ImportError: No module named flaskr

I did everything as described but yet get this error?  I went back and checked everything and still can't figure out what I'm missing?
"
964,jsonify response mime type,2014-01-26T09:01:22Z,2014-02-08T17:03:15Z,,,,"According to the [jQuery-File-Upload docs](https://github.com/blueimp/jQuery-File-Upload/wiki/Setup#wiki-content-type-negotiation) _Iframe based uploads require a Content-type of text/plain or text/html for the JSON response_

So I can't use `jsonify` as it sets the response mime type to `application/json` and must use code like this

```
resp = make_response(json.dumps({'error': 'File too big'}))
if request.headers.get('Accept', '').find('application/json') > -1:
    resp.mimetype = 'application/json'
else:
    resp.mimetype = 'text/plain'
return resp
```

In instead of

```
return jsonify({'error': 'File too big'})
```

Am I missing something? How clueless would I be if I were to suggest adding some option to `jsonify` to customize the response mime type depending on the requested mime type?
"
963,pocoo docs out of sync,2014-01-25T01:31:49Z,2014-09-27T13:59:41Z,,,,"#950 showed that the pocoo docs are out of sync with the repository.

Does that set of documentation only get updated on releases?  Is it possible to make the Read The Docs the primary documentation reference?
"
962,added a note to the api documentation about JSON_SORT_KEYS. Fixes #922,2014-01-25T01:23:30Z,2014-02-08T16:26:27Z,,,,"See #922 for the conversation and rationale.
"
961,"Remove the extra ""1""",2014-01-24T17:43:31Z,2014-01-27T17:39:04Z,,,,
960,Add `get_namespace` method on `Config` object for convenient access of namespaced config options,2014-01-23T20:07:24Z,2014-03-13T19:24:19Z,,,,"Here's a little proposal for a new function on the `Config` object. I often find it very useful to grab namespaced config options. I've used my own helper function for ages now and thought it might be useful to everyone. It's particularly useful for me when configuration options map to a set of keyword arguments for a function or a class constructor. A  test has been added as well to verify the feature.
"
959,Add support for using jinja2's PackageLoader,2014-01-23T19:49:59Z,2014-02-08T17:04:32Z,,,,"Follows the same approach for switching between file-system and package loaders as used by werkzeug's wsgi.SharedDataMiddleware. That is, a string is assumed to be in the file system, and a tuple with length 2 is assumed to provide the (1) package name and (2) the template folder name in the package.
"
958,Added helper method redirect_url_for,2014-01-22T13:29:57Z,2014-02-08T17:30:32Z,,,,"redirect_url_for(endpoint, *_values) == redirect(url_for(endpoint,
*_values)
"
957,allow auto excaping of .jinja files,2014-01-22T11:24:05Z,2014-02-08T17:25:18Z,,,,"allow files enf=ding with .jinja to also be auto escaped
"
956,"Empty response when serving files with WSGI, if app.debug is True",2014-01-20T04:39:00Z,2014-02-08T17:24:18Z,,,,"It is kind of understandable if Flask is deliberately not sending the Debug Page when it is serving through WSGI, even if `app.debug = True`, because Flask doesn't want the user to show that page in production by mistake. It is probably a security feature for the greater good. However, this means, Flask _assumes_ that when the user is deploying it using WSGI, it is in _production mode_. Which may or may not be true. However, we can accept it for the sake of security.

That being said, the part that does not make sense is that it is not sending any data to WSGI in this situation. The least it could do is to send the 500 error page that it would have sent by default, if app.debug was False. Seeing an **empty reply** doesn't instinctively make sense.

I have setup a simple test to demonstrate the problem over here: https://github.com/recognosco/flask-uwsgi-error
"
955,Update appcontext.rst,2014-01-20T04:29:35Z,2014-02-08T17:24:33Z,,,,"Small typo correction. 
"
954,Validated HTML,2014-01-16T12:57:28Z,2014-02-08T17:26:14Z,,,,"Small documentation fixes
"
953,flaskr Stored XSS [FIX],2014-01-15T18:16:20Z,2014-02-08T22:01:19Z,,,,"HI, I was testing flaskr because I want to use it (for my website).
When you write javascript code into the text form a XSS appear:

![2014-01-15-190432_2732x768_scrot](https://f.cloud.github.com/assets/3002802/1923112/2799e6e4-7e10-11e3-8daa-be6684a86c89.png)

So, we have to fix it editing show_entries.html:
"" { entry.title }} {{ entry.text| safe }} ""

replacing it for : 
"" {{ entry.title }} {{ entry.text }} ""

Now, if I wirte the js code again, the xss will disappear:

![2014-01-15-190923_2732x768_scrot](https://f.cloud.github.com/assets/3002802/1923162/d5009e40-7e10-11e3-8288-f76a0be4b0ad.png)

<svg/onload=confirm(document.cookie);>

EDIT : I guess that it's an intentional vulnerability but is not the correct way to do it, we(my team and I) will continue writing it to improve the ""example code""
Regards
"
952,Fix #941 -- allow errorhandlers for HTTPException,2014-01-14T20:23:21Z,2014-03-26T15:45:25Z,,,,"Originally i intended to rewrite the error handling system to register an
error handler for each subclass of HTTPException on initialization of the
Flask object, removing the distinction between HTTP exceptions and other
exception types. However, with the current behavior of preferring the
first-registered handler when an error occurs, doing this without compromises
would require changing this to preferring the last-registered handler, a
backwards-incompatible change.

The following is a very minimal fix to only make Flask prioritize the user's
error handlers over others. I am not sure which performance implications this
has. Maybe a major rewrite of the error handling system is still desirable
(with more complex prioritization of errorhandlers -- something based on
""distance"" in inheritance tree?), but at the moment i don't see a reason to do
so, given that the current system is primitive enough to be understandable,
while still usable.
"
951,Allow developer to override X-Sendfile header when USE_X_SENDFILE is in use,2014-01-14T14:33:42Z,2014-02-08T17:29:37Z,,,,"This allows the developer to set which header to send to the webserver. The default is X-Sendfile.
"
950,"flaskr.py in Flaskr Tutorial, LINE 23",2014-01-13T01:22:15Z,2014-02-08T22:07:36Z,,,,"DATABASE='/tmp/flaskr.db' does not work on my machine.

I changed it to (by removing the slash before 'tmp')

DATABASE='tmp/flaskr.db' 

and it then worked.
"
949,Flaskr should mention Heroku does not support sqlite3,2014-01-12T06:15:02Z,2014-01-12T12:33:58Z,,,,"Since heroku is one of the recommended quickstart deployment options, after following the (great) flaskr tutorial I tried to deploy on heroku only to realize some hours later that heroku does not support sqlite3 and thus the flaskr tutorial will never deploy on heroku with 500 Internal Service Errors. Perhaps this should be mentioned in the Flaskr tutorial, as other beginners may also follow both official documentation suggestions to failure.
"
948,Update fileuploads.rst,2014-01-12T01:54:50Z,2014-02-08T17:34:30Z,,,,"I'm not sure since when, but secure_filename is under werkzeug.utils now (http://werkzeug.pocoo.org/docs/utils/).
"
947,Release as universal python wheel (2/3 compat),2014-01-11T00:32:17Z,2014-01-23T19:07:41Z,,,,"You may wish to port this to 0.10 branch if you'd like to release a wheel for 0.10 as well.
"
946,Use json method of requests.Response,2014-01-11T00:14:08Z,2014-02-08T17:30:55Z,,,,
945,Use json method,2014-01-11T00:09:53Z,2014-01-11T00:12:28Z,,,,"Use json method of response.Response
"
944,Default JSON encoder handles datetime.date objects.,2014-01-08T06:30:39Z,2014-02-08T17:27:34Z,,,,"Flask's default JSON encoder handles only `datetime.datetime` objects (via Werkzeug's `http_date` function). It should also handle `datetime.date` objects, a common data type that occurs in JSON used to represent dates in backend models.
"
943,Added a favicon for the docs ,2014-01-06T16:22:44Z,2014-01-06T16:28:03Z,,,,"Added a favicon for the docs as requested in issue https://github.com/mitsuhiko/flask/issues/934
"
942,"Updated greenlet links, which were dead.",2014-01-04T11:52:32Z,2014-02-08T17:34:42Z,,,,"Small doc change, just updated the links for greenlet, which were leading to 404 errors on codespeak.net
"
941,Registering a handler for HTTPException has no effect,2014-01-03T18:58:20Z,2017-05-23T19:55:33Z,"blocker, bug, ready",,,"When registering a handler for `werkzeug.exceptions.HTTPException`, it has no effect when an HTTP error is raised.

Assume the following handler:

``` python
@app.errorhandler(HTTPException)
def http_err_handler(error):
    response = jsonify({
        ""success"": False, 
        ""message"": error.name
    })
    response.status_code = error.code
    return response
```

When requesting a page for which no route exists, a JSON response should be returned by the error handler, but instead, the usual `Flask`-generated HTTP error page is returned.

On the other hand, if the error handler is defined to handle a specific error code (by passing the error code to the `app.errorhandler` decorator), the exception is trapped and the JSON message returned.

As `wekzeug.exceptions.HTTPException` is the class raised internally by the `abort()` function, why isn't it possible to create a ""catch-all"" handler like this? Am I missing something?
"
940,fix @before_first_request rasing exception,2014-01-02T17:16:41Z,2014-02-08T17:38:42Z,,,,"I tried using @before_first_request but ran into an AssertionError in @setupmethod because before actually executing the functions app._got_first_request was set to True indicating it's already too late. So I just moved it after the execution of the functions. Also I made the decorator leave the functions intact so they could be used directly.
"
939,Default HTML errors don't tell their encoding and aren't HTML5,2014-01-01T11:01:23Z,2014-02-08T22:14:50Z,,,,"Hello,

Just noticed that the default HTML errors (like 404 Not Found) are:

1) Not using HTML5 yet.

`<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">`

2) Don't indicate their encoding, which raises a message in the Firefox console:

"" The character encoding of the HTML document was not declared. The document will render with garbled text in some browser configurations if the document contains characters from outside the US-ASCII range. The character encoding of the page must be declared in the document or in the transfer protocol. ""

Cordially.
"
938,Enable tuple responses with headers without status,2013-12-31T22:33:16Z,2014-02-08T17:32:01Z,,,,"Hi,

In my flask apps I've overridden the behavior of Flask.make_response to enable tuple responses with headers but skipping the status in the case of the default status (200). I know that this in practice only means a less coma and status, but thinks this enable a more beautiful way to return tuple responses with the default status code (or status directly passed into the Response constructor) but contains other headers.

So instead of today

``` python
@app.route(""/"")
def index():
    return ""hi"", 200, {""X-Foo"": ""Bar""} 
```

This PR enable us to write

``` python
@app.route(""/"")
def index():
    return ""hi"", {""X-Foo"": ""Bar""} 
```
"
937,Can not register a 500 error handler for blueprint,2013-12-27T07:57:50Z,2014-02-08T22:08:38Z,,AssertionError,AssertionError: It is currently not possible to register a 500 internal server error on a per-blueprint level.,"code as follows:

api = Blueprint('api', 'api')

@api.errorhandler(500)
def error_500(error):
    msg = {
        'message': 'Server Error'
    }
    return jsonify(msg), 500

but flask throw this error:

AssertionError: It is currently not possible to register a 500 internal server error on a per-blueprint level.
"
936,Fix typo in helpers.py,2013-12-25T04:13:42Z,2014-02-08T17:46:32Z,,,,"Fixes a typo in a comment. Thanks! 
"
935,Fixed incorrect grammar in Config.rst,2013-12-24T19:37:06Z,2014-02-08T17:40:30Z,,,,"Fixed incorrect grammar in ""SESSION_REFRESH_EACH_REQUEST"" configuration description.
"
934,Include favicon in the documentation,2013-12-20T10:52:14Z,2014-01-06T17:15:55Z,,,,"I like to have the local documentation of Flask in a Firefox pinned tab along some others. To distinguish it from the others I include a &lt;link rel&gt; to the index.html:

&lt;link rel=""icon"" href=""_static/flask.png"" type=""image/png"" /&gt;

I tried to find where in the sources to make the change but I have no time now to learn sphinx.

Would it be possible to include it in the next release?
"
933,Overriding blueprint template does not take effect until restart,2013-12-20T07:23:13Z,2014-02-09T12:58:06Z,,,,"Overriding a blueprint's template does not take effect without restarting the development server. 

Follow these steps to reproduce:
- First, add and register the following blueprint without creating any templates. It should produce a ""Template Not Found"" error:

```
from flask import Blueprint, render_template

blueprint = Blueprint(
    'blueprint', 
    __name__, 
    template_folder='blueprint/templates')

@blueprint.route('/testoverride')
def TestOverride():
    return render_template('test.html')
```
- Next, add a new template called ""test.html"" under the blueprint's template directory and refresh the page. It should find the template without restarting the server. 
- Now add a second template having the same filename but different content under the application's template directory and refresh the page. The page's content will not change without restarting the server. 
- Restart the server and refresh the page. Confirm the content has now changed.
"
932,Anyway to reload only one app in DispatcherMiddleware,2013-12-20T03:18:46Z,2013-12-23T13:35:45Z,,,,"from `http://flask.pocoo.org/docs/patterns/appdispatch`

``` python
from werkzeug.wsgi import DispatcherMiddleware
from frontend_app import application as frontend
from backend_app import application as backend

application = DispatcherMiddleware(frontend, {
    '/backend':     backend
})
```

In deployment environment, I can only reload both `frontend` and `backend` app.
"
931,Update celery.rst,2013-12-17T06:06:15Z,2014-02-08T17:47:22Z,,AttributeError,AttributeError: 'Flask' object has no attribute 'user_options',"With the latest version of Celery (3.1.6), following this tutorial produces the following error when attempting to start the celery worker: 

```
    user_preload = tuple(self.app.user_options['preload'] or ())
AttributeError: 'Flask' object has no attribute 'user_options'
```

Using `app` as the variable name here confuses celery. Renaming `app` to `flask_app` in the tutorial solves the issue and allows the celery worker to start successfully.
"
930,fix a etags bug when sending a file stream with a name,2013-12-14T08:08:55Z,2014-02-08T17:46:15Z,,,,"When sending a file stream with a name, but the file doesn't exist,
when adding etags, an exception will raise. `OSError: [Errno 2] No such file or directory:`
"
929,Added SESSION_COOKIE_PERMANENT configuration to control permanent session,2013-12-14T02:08:07Z,2014-02-08T22:13:23Z,,,,"## Pull request summary

Added `SESSION_COOKIE_PERMANENT` configuration to control whether the signed cookie based flask session will be initialized to permanent or not.
Corresponding documentation and tests
## Testing done

New unit test for positive and negative cases, as well as making sure the old tests didn't break

```
$ python run-tests.py 
........................................................................................................................................................................................................................................
----------------------------------------------------------------------
Ran 232 tests in 1.738s

OK
```
## Use case

As a flask application developer (user of the framework), I wanted to be able to set the browser session timeout.
## Steps to reproduce

```
from flask import Flask
from datetime import timedelta
app = Flask(__name__)
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(days=1)
```
## Expectation

The signed cookie based session times out after a day
## Reality

Session is transient unless `session.permanent` was set to `True`.
The documentation on the configuration option `PERMANENT_SESSION_LIFETIME` doesn't mention it only works after `session.permanent` was set.
Once figured out this, the natural thing I did was

```
from flask import Flask, session
from datetime import timedelta
app = Flask(__name__)
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(days=1)
session.permanent = True
```

It is a little bit frustrating to find out that we need a request context to access session, so that we either need to put it into a view_func, or a @before_request
## Alternatives
1. We can assume _having `PERMANENT_SESSION_LIFETIME` configured_ indicates that a permanent session is expected
2. Add another configuration key to control how the session object should be initialized.
## Evaluation and Fix

For alternative 1: In python, explicit is always better than implicit. Plus, since we already have `PERMANENT_SESSION_LIFETIME` default to 30 days, that means if we go this route, the default session behavior will change from transient to permanent. This breaks backward compatibility
Alternative 2 is the way to go
"
928,Load config from JSON file,2013-12-12T23:31:05Z,2013-12-22T11:50:29Z,,,,"This implements issue #927 and allows us to load Flask config from JSON files that can be shared for example with frontend dev tools like grunt.
"
927,Read config from JSON file,2013-12-12T23:04:37Z,2013-12-12T23:37:58Z,,,,"It might make sense to implement something like `app.config.from_jsonfile('config.json')` to be able to share the configuration with JS based frontend tools like grunt.
"
926,Number of opened sockets grow unlimited ,2013-12-12T13:53:24Z,2013-12-13T14:32:23Z,,,,"Hi

I have a very small number of requests incoming on my server and yet the flask server always ends up getting stuck/hanging indefinitely.

I tracked down the problem to : the allowed number of files that the server opens reaches ulimit.

The flask server creates sockets one after the other and I don't know why it doesn't close them. I am not doing anything crazy, just rendering a page or putting a number in a mongo database

Any thoughts ?

See full issue here : http://stackoverflow.com/questions/20540129/ever-increasing-number-of-opened-sockets-on-python-web-server

(I don't know how issues work on github, first timer here ; I don't mind copying the full issue here if you prefer)
Thanks
"
925,Message Flashing's implementation is broken and should be removed anyway,2013-12-10T14:40:10Z,2014-02-08T22:17:49Z,,,,"Message flashing as implemented in Flask is currently broken, under certain conditions it's possible for messages to be flashed to the wrong tab or in extreme cases the wrong device/browser.

A correct implementation would require functionality beyond Flask's scope, message flashing itself is arguably beyond Flask's scope already.

Why not make a piss-poor user account system that exists solely in session cookies? It seems like the same logic behind Flask's message flashing functionality.
"
924,Update sqlite3.rst,2013-12-06T06:48:57Z,2014-02-08T22:14:28Z,,,,"The method connect_to_database doesn't exist, sqlite3 and DATABASE aren't used. Is this what was meant?
"
923,Documentation stylesheet unclear link differentiation,2013-12-06T00:11:45Z,2014-03-13T19:26:54Z,,,,"![407981438376](https://f.cloud.github.com/assets/63004/1688578/d861ee34-5e0a-11e3-8327-60963dc5c301.png)

One of these two things is a link, the other is not. Clear differentiation between the two would be really good.
"
922,Template filter: tojson and sort_keys,2013-12-05T08:57:41Z,2014-02-08T16:26:27Z,,,,"I spent couple of hours yesterday trying to understand why `tojson` output had a different order from `json.dumps` order.

The thing is that Flask sets `sort_keys` to `True` by default (see https://github.com/mitsuhiko/flask/blob/master/flask/json.py#L102). Is it possible to add something regarding this, and the `JSON_SORT_KEYS` in the doc ?
"
921,Fix relative send_from_directory for package apps,2013-12-03T21:18:14Z,2014-02-09T13:07:15Z,,,,"The bug is basically: if a relative directory path is provided to [`send_from_directory`](https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L585), in a [package application](http://flask.pocoo.org/docs/patterns/packages/) things get messed up, and it doesn't work at all:

I threw a longer explanation of the current issue [in a gist](https://gist.github.com/uniphil/7777590), and made a simple repo showing the problem [here](https://github.com/uniphil/flask-package-sendfile-test).

My proposal is to expand the `directory` argument of `send_from_directory(directory, filename, **options)` to an absolute path using `current_app.root_path` if it is not absolute.

This change will affect the arguments passed to `send_file` for module apps, but it's just breaking out the absolute path earlier, so I don't _think_ this should break anything that currently works? All the tests pass.

I also couldn't figure out where a test should go for this, or if a test should even be added. I couldn't find any tests for `send_from_directory` (there are some for `send_file`), and I also didn't know the best way for using a package app in a test. If you'd like tests added for this behavior I'd be happy to write them with a few pointers on how to approach it.
"
920,Python3 compatibility: test_client response not UTF-8,2013-12-03T10:24:16Z,2014-02-08T22:20:08Z,,,,"When using the test_client for unittesting, the return of the the tester is cast to bytestring instead of utf-8. As the default charset for webpages is now utf-8 and Flask also returning utf-8, the test_client should honor that.

_app.py_:

``` python
from flask import Flask
app = Flask(__name__)

@app.route(""/"")
def hello():
    return ""Héllo, Wôrld!""

if __name__ == ""__main__"":
    app.run()
```

_test.py_

``` python
from app import app

import unittest

class BasicTestCase(unittest.TestCase):
    def test_DefaultReturnShouldBeUtf8(self):
        tester = app.test_client(self)
        response = tester.get(""/"", content_type=""html/text"")
        self.assertRegex(response.content_type, ""charset=utf-8"")
        self.assertEqual(response.data, ""Héllo, Wôrld!"")

    def test_DefaultReturnShouldBeUtf8_Workaround(self):
        tester = app.test_client(self)
        response = tester.get(""/"", content_type=""html/text"")
        self.assertRegex(response.content_type, ""charset=utf-8"")
        self.assertEqual(response.data.decode(""utf-8"", ""strict""), ""Héllo, Wôrld!"")

if __name__ == ""__main__"":
    unittest.main()
```
"
919,List Flask-WebTest in the extensions registry,2013-11-30T20:30:25Z,2014-03-21T20:39:23Z,,,,
918,Sessions on heroku,2013-11-27T23:32:31Z,2014-02-08T22:20:42Z,,,,"Sessions don't seem to be working on heroku

```
2013-11-27T17:47:24.382234+00:00 app[web.1]: Traceback (most recent call last):
2013-11-27T17:47:24.382234+00:00 app[web.1]:     super(GeventWorker, self).handle_request(*args)
2013-11-27T17:47:24.382234+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/flask/app.py"", line 1701, in __call__
2013-11-27T17:47:24.382234+00:00 app[web.1]:     return self.wsgi_app(environ, start_response)
2013-11-27T17:47:24.382469+00:00 app[web.1]:     response = self.make_response(self.handle_exception(e))
2013-11-27T17:47:24.382656+00:00 app[web.1]:     client.resource_owner_key = tup[0]
2013-11-27T17:47:24.382469+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/flask/app.py"", line 1689, in wsgi_app
2013-11-27T17:47:24.382469+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/flask/app.py"", line 1358, in full_dispatch_request
2013-11-27T17:47:24.382469+00:00 app[web.1]:     rv = self.dispatch_request()
2013-11-27T17:47:24.382656+00:00 app[web.1]:     data = self.handle_oauth1_response()
2013-11-27T17:47:24.382656+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/flask_oauthlib/client.py"", line 528, in handle_oauth1_response
2013-11-27T17:47:24.382234+00:00 app[web.1]: 2013-11-27 17:47:24 [10] [ERROR] Error handling request
2013-11-27T17:47:24.382234+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/async.py"", line 45, in handle
2013-11-27T17:47:24.382234+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/async.py"", line 93, in handle_request
2013-11-27T17:47:24.382469+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/flask/app.py"", line 1360, in full_dispatch_request
2013-11-27T17:47:24.382469+00:00 app[web.1]:     rv = self.handle_user_exception(e)
2013-11-27T17:47:24.382234+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/ggevent.py"", line 119, in handle_request
2013-11-27T17:47:24.382234+00:00 app[web.1]:     respiter = self.wsgi(environ, resp.start_response)
2013-11-27T17:47:24.382656+00:00 app[web.1]: TypeError: 'NoneType' object has no attribute '__getitem__'
2013-11-27T17:47:24.382469+00:00 app[web.1]:     response = self.full_dispatch_request()
2013-11-27T17:47:24.382469+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/flask/app.py"", line 1344, in dispatch_request
2013-11-27T17:47:24.382469+00:00 app[web.1]:     return self.view_functions[rule.endpoint](**req.view_args)
2013-11-27T17:47:24.382469+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/flask/app.py"", line 1687, in wsgi_app
2013-11-27T17:47:24.382656+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python2.7/site-packages/flask_oauthlib/client.py"", line 594, in decorated
```

localhost cookies (this works):

```
session=""xxxx?_fresh=yyyy==&twitter_oauthtok=zzzz""
```

heroku cookies (doesn't work):  

```
None=""xxxx=?_id=yyyy==&twitter_oauthtok=zzzz""
```
"
917,TypeError in CSRF Token Checking Under Python 3,2013-11-26T22:30:57Z,2013-11-27T00:30:20Z,,TypeError,"TypeError: ord() expected string of length 1, but int found","I was trying to check out some DropBox API code, and came up with the following Flask server (mostly lifted from the Dropbpx docs)::

```
from dropbox.client import DropboxOAuth2Flow
from flask import (Flask, request, session, g, redirect, url_for,
                   abort, render_template, flash)

# configuration
#DATABASE = '/tmp/flaskr.db'
#PASSWORD = 'default'
DEBUG = True
SECRET_KEY = 'development key'
USERNAME = 'admin'

app = Flask(""test_connect"")
app.config.from_object(""test_connect"")

DROPBOX_APP_KEY = 'APP_KEY' # use your own value
DROPBOX_APP_SECRET = 'APP_SECRET' # use your own value

@app.route('/')
def home():
    if not 'access_token' in session:
        return redirect(url_for('dropbox_auth_start'))
    return 'Authenticated.'

@app.route('/dropbox-auth-start')
def dropbox_auth_start():
    return redirect(get_auth_flow().start())

@app.route('/dropbox-auth-finish')
def dropbox_auth_finish():
    try:
        access_token, user_id, url_state = get_auth_flow().finish(request.args)
    except ValueError:
        abort(400)
    else:
        session['access_token'] = access_token
    return redirect(url_for('home'))

def get_auth_flow():
    redirect_uri = url_for('dropbox_auth_finish', _external=True)
    return DropboxOAuth2Flow(DROPBOX_APP_KEY, DROPBOX_APP_SECRET, redirect_uri,
                         session, 'dropbox-auth-csrf-token')

if __name__ == ""__main__"":
    app.run()
```

When I submit the root URI I see the following console output:

<pre>
(py3)localhost:ipynb3 sholden$ 127.0.0.1 - - [26/Nov/2013 14:13:42] ""GET / HTTP/1.1"" 302 -
127.0.0.1 - - [26/Nov/2013 14:13:42] ""GET /dropbox-auth-start HTTP/1.1"" 302 -
127.0.0.1 - - [26/Nov/2013 14:13:48] ""GET /dropbox-auth-finish?code=EtdzRFdUsSsAAAAAAAAAAYsGGTJcWs8YtbQB_gvT99c&state=nBOWOVAN6XTqH-wdOaSmpw%3D%3D HTTP/1.1"" 500 -
Traceback (most recent call last):
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/app.py"", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/Users/sholden/Projects/Python/ipynb3/test_connect.py"", line 33, in dropbox_auth_finish
    access_token, user_id, url_state = get_auth_flow().finish(request.args)
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/dropbox/client.py"", line 1234, in finish
    if not _safe_equals(csrf_token_from_session, given_csrf_token):
  File ""/Users/sholden/.virtualenvs/py3/lib/python3.3/site-packages/dropbox/client.py"", line 1306, in _safe_equals
    res |= ord(ca) ^ ord(cb)
TypeError: ord() expected string of length 1, but int found
</pre>

Using the excellent Werkzeug debugging features I discovered the trouble appears to be due to the finish() function calling _safe_equals() with one bytes argument and one string.

Of course there could easily be something wrong with my code, in which case sorry for the spurious issue report.
"
916,0.3 maintenance,2013-11-18T06:47:39Z,2014-02-09T13:17:16Z,,,,
915,Update celery.rst,2013-11-16T01:12:40Z,2014-03-21T20:26:06Z,,,,"As of celery 3.1.4. `-A` does not work but `--app` does and the syntax changed to `celery <command> <options>` switching the order does not work for me.
"
914,Convincing manager with large high traffic sites using Flask. Any tips?,2013-11-14T11:35:05Z,2013-11-14T18:59:35Z,,,,"Seeing that I have (some) experience in Flask I really really want to use it for a new project we're about to start here in our company. I'm now looking for a couple websites that are either or all of the below:
- high traffic
- slick looking
- big/known names

I checked out the ""powered by"" part of the Flask website (http://flask.pocoo.org/community/poweredby/) but I can't find any big names on there. I think I once saw a little list of good sites using Flask, but I can't find them anymore.

Anybody any tips?
"
913,Print of several 'Running on' ...,2013-11-13T16:13:38Z,2013-11-14T19:02:30Z,,,,"If I use `try` and `except`, Flask still prints the ""Running on http..."" from the `try` clause.

I have:

```
try:
    app.run(host='public_ip.com')
except Exception:
    app.run(host='local_ip')
```

I get:

```
* Running on http://public_ip.com/
* Running on http://local_ip/
```

Even though the second one is the only one that is running.
"
912,Address already in use at Threads,2013-11-12T18:14:38Z,2014-02-08T22:24:43Z,,,,"Hi,

I get **Address already in use** if I use threads...
Why is that happening ?

I have:

```
thread_empty_trash()
...
app.run(....  use_reloader=False .... )
```
"
911,JSONEncoder cast Decimal to string,2013-11-09T15:23:08Z,2014-02-08T22:24:00Z,,,,
910,exception logging: issue #678,2013-11-09T13:49:35Z,2014-03-21T20:31:33Z,,,,"added exception logging in debug mode
"
909,Changed the wording of some sentences there were difficult to understand...,2013-11-09T13:39:13Z,2013-11-09T13:42:21Z,,,,"....
"
908,Flask needs a way to announce new versions,2013-11-08T09:13:24Z,2016-06-03T05:07:21Z,,,,"I think that flask needs some sort of dedicated channel to announce critical updates (or in general, new versions). 

The reason is that flask grew to a point where there is a lot of activity on the repository and the general mailing list. Listening on the mailing list or ""watching"" the repository for maintenance-only projects in order to catch new critical updates means siphoning through a lot of messages.

Would setting up something like a separate announce list be possible?
"
907,Unicode error when serving static file with unicode characters,2013-11-07T16:45:09Z,2013-12-04T18:29:30Z,,UnicodeEncodeError,UnicodeEncodeError: 'ascii' codec can't encode characters in position 41-44: ordinal not in range(128),"I'm getting the following error once in a while, notice the request path

 Thu Nov 07 16:14:42 UTC 2013 : ERROR, Exception on /刺客版本.rar [HEAD]
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/usr/local/lib/python2.7/dist-packages/flask/helpers.py"", line 822, in send_static_file
    cache_timeout=cache_timeout)
  File ""/usr/local/lib/python2.7/dist-packages/flask/helpers.py"", line 613, in send_from_directory
    if not os.path.isfile(filename):
  File ""/usr/lib/python2.7/genericpath.py"", line 29, in isfile
    st = os.stat(path)
UnicodeEncodeError: 'ascii' codec can't encode characters in position 41-44: ordinal not in range(128)
"
906,Update github location for Flask-Heroku,2013-11-06T18:51:02Z,2013-11-07T15:30:43Z,,,,"Kenneth Reitz is still the author, but David Baumgold is now the maintainer; there doesn't seem to be a good way to indicate this. :(
"
905,Allow subdomains to work with no SERVER_NAME,2013-11-04T22:07:09Z,,,,,"Would you be open to a patch allowing the use of subdomain routing with no SERVER_NAME pre-configured?

The motivation is to allow multiple domains to match a request, just like it does when SERVER_NAME is None, while still benefiting from the nice subdomain matcher. This is particularly useful in DEV to be able to develop on machine.local but also tunnel the instance to a vpn, and use things like xip.io (which all change the host).

The change would probably be mostly focused on create_url_adapter(). I imagine a configuration variable switching a different logic on for this function: it would look for subdomains and deduce the server_name which is the reverse of what's going on today.
The list of subdomains could come from the configuration I suppose, or better be deduced from the compilation of the routes.

1) What do you think of this idea?
2) If you are opposed to it, what alternative approach do you suggest instead?
3) If you are not opposed to it, how do you think the implementation should look like?
"
904,POST request from Dropzone.js failing in Flask,2013-11-04T19:42:04Z,2013-11-14T19:13:35Z,,,,"I'm trying to post files to a MongoDB collection with Flask. I decided to use the Dropzone.js library to make a file drop zone. After some troubleshooting, I realized my database code was fine, but Flask isn't returning anything when request.method == ""POST"". Does anyone know why Flask isn't hitting the return statement when the request method is post for the index view?

```

from flask import Flask, request, render_template, redirect
from flask.ext.mongoengine import MongoEngine 
import datetime

app = Flask(__name__)

#set up database
app.config[""MONGODB_SETTINGS""] = {'DB': 'pdfs'}
app.config['SECRET_KEY'] = ""reallysecret""

db = MongoEngine(app)

class PDF(db.Document):
    pdf = db.FileField()
    uploaded_at = db.DateTimeField(default=datetime.datetime.now)
    file_size = None

    def __unicode__(self):
        return self.uploaded_at

    meta = {
        'indexes':['-uploaded_at'],
        'ordering':['-uploaded_at']
    }

@app.route('/', methods=[""GET"", ""POST""])
def index():
    if request.method == ""GET"":
        return render_template('index.html')
    if request.method == ""POST"":
        return ""Didn't do anything with POST, but here's a message.""

```

My index.html template looks like this:

```

<!doctype html>
<head>
    <title>File Upload</title>
    <link rel=stylesheet type=text/css href=""{{ url_for('static', filename='dropzone.css') }}"">
    <script src=""{{url_for('static', filename='dropzone.js')}}""></script>
</head>
<body>
    <form action=""{{url_for('index')}}"" class=""dropzone dz-clickable"">
        <div class=""dz-default dz-message""></div>
    </form>
</body>

```

In Terminal, it looks like the POST request succeeded (code 200), but the return message does not display in the browser and Dropzone says the server responded with code 0.

Terminal output: 127.0.0.1 - - [03/Nov/2013 18:37:06] ""GET / HTTP/1.1"" 200 - 127.0.0.1 - - [03/Nov/2013 18:37:06] ""GET /static/dropzone.css HTTP/1.1"" 304 - 127.0.0.1 - - [03/Nov/2013 18:37:06] ""GET /static/dropzone.js HTTP/1.1"" 304 - 127.0.0.1 - - [03/Nov/2013 18:37:06] ""GET /static/spritemap.png HTTP/1.1"" 304 - 127.0.0.1 - - [03/Nov/2013 18:37:07] ""GET /favicon.ico HTTP/1.1"" 500 - 127.0.0.1 - - **[03/Nov/2013 18:37:13] ""POST / HTTP/1.1"" 200 -**

**Browser window**, Dropzone says server responded with code 0: http://imgur.com/JsfISMp
"
903,How to generate a SecureCookie in latest version?,2013-11-04T17:41:55Z,2013-11-14T19:11:16Z,,,,"With Flask 0.9 and Werkzeug 0.8.3 I was able to test many of our functions by creating a SecureCookie with

```
from werkzeug.contrib.securecookie import SecureCookie
session = SecureCookie(dict(uid=uid), app.secret_key).serialize()
```

But that now gives me an empty session when we get to the request function, even though

```
    SecureCookie.unserialize(request.cookies['session'], app.config['SECRET_KEY'])
```

gives the correct dict that was passed through.

I tried to figure it out from the source, but couldn't quite get the gist of it.
"
902,The flask application always hang.,2013-11-03T11:43:25Z,2014-01-08T15:44:06Z,,,,"I have a simple site which used flask. but the question is that the site always hang. 
I start it but after several hours or sometimes longer, the site is hanged.
Any  one has suggestion about this question?

My site is :  

```
http://116.255.163.99:5000/recommend
```
"
901,accessing config settings from other files,2013-11-01T20:49:33Z,2014-03-13T19:29:18Z,,,,"Hi,

The documentation could be improved a bit. Chapter 10 ""Configuration Handling"" explains well ho to set the config. However, it doesn't explain how to retrieve values from the config in other files. I found the following solution:

```
from flask import current_app as app
...
app.config['MY_SETTINGS']
```

It should be added to the docs.

Best,

Laszlo
"
900,"If an URL path element contains %2F (an escaped ""/"")  Flask.route considers it as an unescaped slash.",2013-10-30T09:17:50Z,2014-02-08T22:27:01Z,,,,"Here's an example:

```
from flask import Flask
app = Flask(__name__)

@app.route('/<urlvar>')
def hello_world(urlvar):
    return 'Hello World! ' + repr(urlvar)

if __name__ == '__main__':
    app.run(debug=True)
```

When running:

```
curl http://localhost:5000/aaa%2Fbbb
```

I would expect to see:

```
Hello World! u'aaa/bbb'
```

Instead I get:

```
<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again.</p>
```

I tested this against Flask 0.9 and Flask 0.10.1. Both had the same error.

While searching for existing bug reports, I came across this: https://github.com/mitsuhiko/werkzeug/issues/21

Is this related? If yes, what's the status?

In any case, being a WSGI spec problem or not, this is behaviour is incorrect!
"
899,fix typo(there-> their),2013-10-30T08:55:50Z,2013-11-01T09:18:14Z,,,,
898,g request context is not per request?,2013-10-30T05:13:15Z,2014-02-08T22:22:52Z,,,,"Today in our system, one user managed to update the profile of another user.(
The only explanation I can come up with to this is that the Flask g context contained
the user_id of user_a when user_b updated his profile.

Am I using g incorrectly or is this maybe a bug?
We have about 15k users and this is the first time I saw this happen.

Flask==0.10.1

```
@app.before_request
def before_request():
    g.user_token = UserToken.from_request_token(
        request.headers.get('Authorization')
        .replace('Token token=""', '').replace('""', ''))

@app.route('/api/profile',  methods=['GET', 'PUT'])
def profile():
    if request.method == 'PUT':
        try:
            user_service.update_userprofile(
                UserProfile(
                    g.user_token.user_id,
                    request.json.get('name'),
                    request.json.get('gender'),
                    request.json.get('location')
                    None))
            return PostResultModel(PostResult.Success,
                                   'Userprofile updated',
                                   PostResultErrorCode.NoError).json()
        except:
            return PostResultModel(PostResult.Error,
                                   'Could not update profile',
                                   PostResultErrorCode.ServerError).json()
```
"
897,URL Reversing in Quickstart Doc #779,2013-10-30T00:45:43Z,2014-02-09T13:20:46Z,,,,"Updated quickstart to make clear that URL reversing refers to the use of
url_for() to build the URL. Issue #779
"
896,Routes for class-based views can't be overloaded when using View.as_view(),2013-10-28T17:59:23Z,2013-10-29T12:13:26Z,,,,"This is related to #766 - still broken when View.as_view() is used to register views, as in all the documentation.

This is probably best illustrated with an example:

```
#!/usr/bin/env python 

from flask import Flask
from flask.views import View

app = Flask(__name__)

class IndexView(View):
    methods = ['GET']

    def dispatch_request(self, name=None):
        if not name:
            name = 'user'

        return 'Hello %s!' % name

app.add_url_rule('/', view_func=IndexView.as_view('hello'))
app.add_url_rule('/<name>', view_func=IndexView.as_view('hello'))

if __name__ == '__main__':
    app.run() 
```

app.add_url_rule() complains here, because of the equality check referenced in #766:

```
>>> IndexView.as_view('hello') == IndexView.as_view('hello')
False
```
"
895,Fix typo in docs for error_handler_spec,2013-10-25T15:51:53Z,2013-10-29T09:35:48Z,,,,
894,fix typo.,2013-10-20T06:10:56Z,2013-10-22T12:02:47Z,,,,"fix typo of double ""at"".
"
893,Added configuration from a dictionary,2013-10-19T20:44:53Z,2014-03-21T20:23:41Z,,,,
892,Too many files open when instantiating the app thousands times,2013-10-16T13:46:44Z,2013-10-16T17:21:33Z,,,,"Could it be the case that instantiating the flask application opens some file and doesn't close it?
I have tests with py.test and I didn't specify the scope of the flask application fixture to be 'sesson' so the flask application was instantiated basically for every test that needs it (we are using url map actively).

At some point I get the traceback related to the limit of the files open etc.
I understand that probably you don't have to instantiate more than one app per process,  but it might be also interesting to clean up the resources. At least if you test the app creation with different configurations. Maybe I could call something in the fixture finalizer to release the resources?

self = <Application 'httpapi.server'>

```
def auto_find_instance_path(self):
    """"""Tries to locate the instance path if it was not provided to the
        constructor of the application class.  It will basically calculate
        the path to a folder named ``instance`` next to your main file or
        the package.

        .. versionadded:: 0.8
        """"""
```

> ```
>   prefix, package_path = find_package(self.import_name)
> ```

../.virtualenvs/my/lib/python2.6/site-packages/Flask-0.10.1-py2.6.egg/flask/app.py:622: 

---

import_name = 'httpapi.server'

```
def find_package(import_name):
    """"""Finds a package and returns the prefix (or None if the package is
    not installed) as well as the folder that contains the package or
    module as a tuple.  The package path returned is the module that would
    have to be added to the pythonpath in order to make it possible to
    import the module.  The prefix is the path below which a UNIX like
    folder structure exists (lib, share etc.).
    """"""
    root_mod_name = import_name.split('.')[0]
    loader = pkgutil.get_loader(root_mod_name)
    if loader is None or import_name == '__main__':
        # import name is not found, or interactive/main module
        package_path = os.getcwd()
    else:
        # For .egg, zipimporter does not have get_filename until Python 2.7.
        if hasattr(loader, 'get_filename'):
```

> ```
>           filename = loader.get_filename(root_mod_name)
> ```

../.virtualenvs/my/lib/python2.6/site-packages/Flask-0.10.1-py2.6.egg/flask/helpers.py:668: 

---

self = <pkgutil.ImpLoader instance at 0x10db70290>, fullname = 'httpapi'

```
def get_filename(self, fullname=None):
    fullname = self._fix_name(fullname)
    mod_type = self.etc[2]
    if self.etc[2]==imp.PKG_DIRECTORY:
```

> ```
>       return self._get_delegate().get_filename()
> ```
> 
> E           AttributeError: 'NoneType' object has no attribute 'get_filename'

/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/pkgutil.py:313: AttributeError
"
891,Don't refer to flaskext in app.extensions docs,2013-10-15T19:48:42Z,2013-10-16T17:09:41Z,,,,
890,Documentation fix: Makes the error names consistent,2013-10-15T16:39:49Z,2013-10-16T17:08:49Z,,,,"Noticed that the error names weren't consistent while browsing the documentation.
"
889,Escaped 'text' keyword in column name.,2013-10-15T16:30:28Z,2014-03-21T20:38:00Z,,,,"Of course, the SQL script worked as previously written, but I recommend escaping the 'text' column name to distinguish it from the keyword.  This might avoid potential confusion for newbies - the target audience for the flask example projects - especially if they're new to SQL.
"
888,Added link to Flask Examples on Runnable.com,2013-10-14T21:39:28Z,2014-03-21T20:23:02Z,,,,
887,cannot call methods decorated with setupmethod from before_first_request handlers,2013-10-14T16:58:45Z,2014-02-09T13:18:57Z,,,,"Example use case: trying to register a blueprint as lately as possible.

```
bp = Blueprint(...)

@app.before_first_request
def register_bp():
    app.register_blueprint(bp)
```

In debug mode we will get an AssertionError from `setupmethod` decorator, saying ""A setup function was called after the first request was handled."".
https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L54

This is because `_got_first_request` flag is set to True before `before_first_request_funcs` are called.
https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L1493

Is there a reason for not setting the flag after handlers have been called? or is it safe (and thus it should be allowed) to call such ""setupmethods""?
"
886,Updated some typos,2013-10-12T22:14:45Z,2013-10-16T17:06:01Z,,,,"Fixed some incorrect variable references.
"
885,Update url_for documentation for Flask.url_build_error_handlers,2013-10-11T22:11:09Z,2014-03-21T21:01:56Z,,,,"Previous documentation referenced a non-existent property on the Flask object called ""build_error_handler"".

This should actually reference Flask.url_build_error_handlers.

I created an example gist with the broken documentation version and the working version here, https://gist.github.com/jmhobbs/6942394 for Flask 0.10.1
"
884,"Update appfactories.rst, make extension related section clearer",2013-10-11T12:40:41Z,2014-02-09T13:27:35Z,,,,
883,"Update appfactories.rst, remove SQLAlchemy related information",2013-10-08T17:41:40Z,2013-10-09T13:04:18Z,,,,"I believe the information deleted in this commit was not relevant to app factories.  It if is relevant, further docs are needed to tie it into the surrounding context.
"
882,app.test_request_context() is affected by except blocks that happen before it,2013-10-08T15:15:26Z,2013-10-16T18:13:32Z,,except,except:,"To illustrate the issue, see this code snippet:

``` python
from flask import Flask

app = Flask(__name__)

@app.teardown_request
def teardown(exc = None):
    if exc is not None:
        print ""An exception has occured!""

try:
    raise Exception('dummy')
except:
    pass

# uncomment this to remove the issue
# import sys; sys.exc_clear()

with app.test_request_context():
    print ""Nothing happening here""

# Output:
# Nothing happening here
# An exception has occured! <== this is unexpected!
```

This happens because flask relies on sys.exc_info() to figure out if some exception happened in the request. However, sys.exc_info() gets populated whenever an except block has been executed. This could lead to weird behavior in unit tests, perhaps the **enter** method on RequestContext should contain a sys.exc_clear()?
"
881,Config - Custom variables must be all uppercase,2013-10-05T19:15:50Z,2014-03-13T19:30:22Z,,,,"Config will not load variables unless they are all uppercase. Perhaps loading custom variables into config is discouraged but if it isn't you should note this in the tutorial. It took me too long to figure this out.
"
880,fix issue #879 and add a test for it,2013-10-04T09:09:56Z,2014-02-09T13:26:46Z,,,,
879,before_app_first_request strange behaviour,2013-10-03T14:57:11Z,2014-02-09T13:27:12Z,,,,"Hello,

When you set an initialization function with the before_app_first_request decorator you expect this function to be launched once **before** the first request.

But, if this function takes some time to execute, flask may respond to requests before it has finished.

Here is the code of Flask.try_trigger_before_first_request_functions(self)

``` python
if self._got_first_request:
    return
with self._before_request_lock:
    if self._got_first_request:
        return
    self._got_first_request = True
    for func in self.before_first_request_funcs:
        func()
```

Now, imagine 2 concurrent requests when the server starts:
- the first one takes the lock and sets _got_first_request to True BEFORE calling functions in self.before_first_request_funcs
- the second sees that _got_first_request is True and returns

The fix is simple: just put self._got_first_request = True after the calls to functions in self.before_first_request_funcs.
"
878,quickstart: import `request` in HTTP methods example,2013-10-03T01:16:51Z,2014-03-13T19:33:46Z,,,,"quickstart HTTP methods example doesn't work without `request` import:

```
from flask import request
```
"
877,Fix a typo on blueprints module name.,2013-10-02T06:10:36Z,2014-03-13T19:35:29Z,,,,"Fixed a typo.
"
876,Add TEMPLATES_AUTO_RELOAD config key,2013-09-30T18:09:10Z,2014-03-21T20:43:20Z,,,,"Currently jinja environment checks for changes in the template file every time you need to render it. But disk I/O is costly and it may be viable to disable this feature in production.

I added `TEMPLATES_AUTO_RELOAD` config option which allows to set `auto_reload` attribute of `jinja2.Environment` to `False` when the application is running in non-debug mode. This allows to make the template rendering a little more efficient because it disables a checking of changing templates file each time before template is rendered.

In some situations, this could give a significant increase of performance (from 60 to 200 rps in my case). Unfortunately, if you want to do the same by overriding of `Flask.jinja_options` attribute, it would be uncomfortable because a reloading of templates is needed for debugging.

This change should not affect existing applications. Also, it might make sense to disable reloading by default.
"
875,Minor improvements to documentation.,2013-09-26T19:26:06Z,2014-03-21T20:33:20Z,,,,"Check the file path by canonicalizing it rather than checking for
presence of "".."" or it being starting with ""/"".
"
874,fix typo (jsonfiy -> jsonify),2013-09-26T15:46:49Z,2014-03-13T19:38:19Z,,,,
873,tests fails in sample apps on python 3.3,2013-09-26T00:49:41Z,2014-02-08T22:30:42Z,,,,"In the various tutorials test functions, the returned data is always accessed as if it was a str.  In python 3.3, the results are binary, so they must be decoded:

Instead of:
    assert ""Some string"" in rv.data
use:
    assert ""Some string"" in rv.data.decode('utf-8')

(there are other ways too - encode the string constant, etc.).
"
872,Fix typo,2013-09-25T15:51:22Z,2014-03-13T19:38:41Z,,,,
871,Set up automatic cronjob for updating flask.pocoo.org from repositories,2013-09-21T17:50:24Z,2017-01-14T05:50:55Z,,,,"Currently only @mitsuhiko can update the site, which is rather suboptimal. Not sure if this could/should be made with the help of travis.
"
870,Unexpected Hello word,2013-09-20T16:47:51Z,2014-09-11T19:53:53Z,,,,"Hey, this is the simplest flask ever

@app.route(""/"")
def landing():
    return render_template('index.html')

@app.route(""/path:all_other_urls"")
def missing_url(all_other_urls):
    '''
        Redirect and be done with it
    '''
    return redirect('/')

Yes its just set up to redirect everything to index.html.
Some random times flask doesnt render index.html but Hello World, out of the blue, and if i append a slash(or remove it) to the url it serves index.html again.
Any ideas?
"
869,Add missing import on SQLAlchemy documentation page,2013-09-20T06:31:39Z,2014-03-21T20:46:05Z,,,,
868,Deploying Flask on AWS linked in QuickStart?,2013-09-19T02:56:09Z,2014-04-25T23:57:48Z,,,,"Hello, 

I was wondering if there was a specific reason that the ability for Flask to deployed to AWS using Elastic Beanstalk was not something that was captured here in the QuickStart guide. 
http://flask.pocoo.org/docs/quickstart/#deploying-to-a-web-server

...specifically the ability to deploy Flask in Beanstalk is documented in this location in AWS' documentation. 
http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_Python_flask.html

It seems like a nice, more direct help for folks if the Quick Start just had a link to the AWS documentation. I'd be willing to make the change to the QuickStart myself if that would help. 
"
867,Fixed import (would lead into an import error),2013-09-16T12:57:11Z,2013-09-16T16:05:39Z,,,,"Small typo fix in the docs (import ""secure_filename"" from wrong location)
"
866,InstanceTestCase tests fail when run by a non-standard user,2013-09-15T01:28:43Z,2014-11-04T02:30:19Z,,AssertionError,AssertionError: '/sw/var/run-tests-instance' != '/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/instance',"The InstanceTestCase tests fail on OS X when being packaged by an unprivileged user:

```
/sw/bin/python2.7 run-tests.py || exit 2
........................................................................................................................F..FF.....................................................................................................
======================================================================
FAIL: test_main_module_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/flask/testsuite/config.py"", line 155, in test_main_module_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'instance'))
  File ""/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: '/sw/var/run-tests-instance' != '/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/instance'

======================================================================
FAIL: test_uninstalled_module_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/flask/testsuite/config.py"", line 162, in test_uninstalled_module_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'test_apps', 'instance'))
  File ""/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: '/sw/var/config_module_app-instance' != '/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/flask/testsuite/test_apps/instance'

======================================================================
FAIL: test_uninstalled_package_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/flask/testsuite/config.py"", line 167, in test_uninstalled_package_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'test_apps', 'instance'))
  File ""/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: '/sw/var/config_package_app-instance' != '/sw/build.build/flask-py27-0.10.1-1/Flask-0.10.1/flask/testsuite/test_apps/instance'

----------------------------------------------------------------------
Ran 226 tests in 1.038s

FAILED (failures=3)
```

I'm packaging flask for use in the Fink project (an OS X package manager).  We use an unprivileged user to build and assemble a package before installation.  The above three tests fail during our build process.  If I build and test flask as a normal user, the tests pass, so it seems that there is some incorrect assumption being made somewhere about what the environment should be.  '/sw' is our prefix. '/sw/build.build' is the sandboxed build root.
"
865,Update docs on Approved Extensions,2013-09-11T19:19:54Z,2017-05-28T04:16:01Z,docs,,,"Extension approval docs are out of date:
http://flask.pocoo.org/docs/extensiondev/#approved-extensions

Specifically, now that Flask supports Python3 as of its 0.10 release, extensions in the community should follow. Maintained extensions should support the same Python versions as Flask itself. On that note, I personally do not want to write any library that keeps support for Python 2.6. I prefer Python 2.7 and Python 3.2+.
"
864,Make the decorators attribute on View a tuple by default,2013-09-09T14:20:10Z,2014-03-21T21:05:24Z,,,,"This should not be mutable by default, since it too easily allows users to modify the default `decorators` on any `View` class, for instance by doing something like

```
MyView.decorators.append(my_decorator)
```

Since `list`s are mutable, unless they have explicitly declared `decorators` in the `MyView` class definition as well, this will actually append to `View`s `decorators` list, thus forcing it on all `View`s in their project that don't explicitly define `decorators`. This happened to me when writing some unit-tests for a decorator, and took a while to pin down exactly what was going on.

I haven't updated the documentation to show users supplying their lists of decorators in tuple syntax, since it looks a bit weird given `methods` right above it is a list. Let me know if you do want me to update this as well, though, or add a warning note about this.
"
863,Fix typo.,2013-09-08T00:42:47Z,2013-09-08T18:27:27Z,,,,
862,Minor test fixes,2013-09-07T16:06:45Z,2014-03-21T20:39:13Z,,,,"1. In `test_no_error_swallowing` the path is hardcoded as `'flask_broken/__init__.py'`, however on Windows `co_filename` will return `'flask_broken\\__init__.py'`, and so the assertion will fail. The fix uses `os.path.join` to generate a path suitable for the current system.
2. In `test_send_file_object` the file is first opened in text mode, which converts newlines to `\n`. However, later on the same file is opened in binary mode using `app.open_resource`, and so newlines are not converted. On Windows this leads to a failing test because Git converts all newlines to `\r\n` on checkout. Basically, when opening in text mode we get `\n` newlines, and when opening in binary mode we get `\r\n` newlines. The fix solves this by opening the file in binary mode the first time, as well.
"
861,Disable modules by default,2013-09-06T13:55:01Z,2015-03-05T20:51:35Z,,,,"This is not accurate: https://github.com/mitsuhiko/flask/blob/0.10/flask/app.py#L239-L242

What is the current plan with regards to module support?
"
860,debug=True triggers SyntaxError: can't assign to operator,2013-09-04T19:13:36Z,2014-03-13T19:41:27Z,,,,"app = Flask(**name**)
app.debug = True
app.run()

as well as app.run(debug=True)

cause a SyntaxError: can't assign to operator execption to be raised

Trace:
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 772, in run
    run_simple(host, port, self, **options)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 708, in run_simple
    run_with_reloader(inner, extra_files, reloader_interval)
  File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 617, in run_with_reloader
    sys.exit(restart_with_reloader())
"
859,Add a non-decorator version of the error handler register function,2013-09-04T09:47:31Z,2014-03-21T21:08:34Z,,,,"The main application object has a register_error_handler function
which mirrors the decorator's functionality. According to the principle
of least surprise, make sure blueprints also have this convenience function.
"
858,Patch for tutorial (minor code error),2013-09-04T03:36:50Z,2013-09-04T14:54:42Z,,,,
857,Exception when trying to run Flask app via CGIHandler,2013-09-04T01:37:38Z,2014-06-06T19:23:04Z,,AttributeError,AttributeError: 'NoneType' object has no attribute 'lstrip',"I have a very simple app. It runs fine when the module (itself calling `app.run()`) is run.

However, when I try to run the app via CGI on Apache 2 using this `.cgi` script:

``` python
#!/usr/bin/env python

from wsgiref.handlers import CGIHandler
from someapp import app

CGIHandler().run(app)
```

it results in an exception:

``` pytb
Traceback (most recent call last):
  File ""/usr/lib/python2.7/wsgiref/handlers.py"", line 85, in run
    self.result = application(self.environ, self.start_response)
  File ""/home/user/projects/SomeProject/venv/lib/python2.7/site-packages/flask/app.py"", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/home/user/projects/SomeProject/venv/lib/python2.7/site-packages/flask/app.py"", line 1812, in wsgi_app
    ctx = self.request_context(environ)
  File ""/home/user/projects/SomeProject/venv/lib/python2.7/site-packages/flask/app.py"", line 1773, in request_context
    return RequestContext(self, environ)
  File ""/home/user/projects/SomeProject/venv/lib/python2.7/site-packages/flask/ctx.py"", line 247, in __init__
    self.match_request()
  File ""/home/user/projects/SomeProject/venv/lib/python2.7/site-packages/flask/ctx.py"", line 286, in match_request
    self.url_adapter.match(return_rule=True)
  File ""/home/user/projects/SomeProject/venv/lib/python2.7/site-packages/werkzeug/routing.py"", line 1386, in match
    self.subdomain, path_info.lstrip('/'))
AttributeError: 'NoneType' object has no attribute 'lstrip'
```

The setup is Flask 0.10.1 with Werkzeug 0.9.4.

On first sight, the WSGI environment variables seem to be incomplete, or something like that.
"
856,typo in quickstart.rst ,2013-09-03T08:02:21Z,2013-09-03T17:47:46Z,,,,"in following line:

This behavior allows relative URLs to continue working even if the trailing slash is ommited, consistent with how Apache and other servers work. Also, the URLs will stay unique, which helps search engines avoid indexing the same page twice.

""ommited"" should be ""omitted""
"
855,Typo in documentation for FastCGI,2013-09-02T22:33:58Z,2014-10-19T18:32:07Z,,,,"There is a parenthesis missing at the end of the lighttpd configuration file snippet on this page: http://flask.pocoo.org/docs/deploying/fastcgi/

Also, it may be helpful to show the required module include statements:

```
server.modules += (""mod_fastcgi"", ""mod_rewrite"", ""mod_alias"")
```
"
854,SSL Issue,2013-09-02T19:53:49Z,2013-09-03T10:58:22Z,,,,"Hello! I have self signed certificate. But there is an error when i try to use it (Python 3.3.2)

```
context_SSL = SSL.Context(SSL.SSLv23_METHOD)
context_SSL.use_privatekey_file(conf.SSLKeyPath)
context_SSL.use_certificate_file(conf.SSLCertPath)
app.run(host=conf.host, port=conf.port, ssl_context=context_SSL)
```

Here the error

> Unhandled exception in thread started by <function run_simple.<locals>.inner at 0x7f8a306d1cb0>
> Traceback (most recent call last):
>   File ""/usr/lib/python3.3/site-packages/werkzeug/serving.py"", line 692, in inner
>     passthrough_errors, ssl_context).serve_forever()
>   File ""/usr/lib/python3.3/site-packages/werkzeug/serving.py"", line 486, in make_server
>     passthrough_errors, ssl_context)
>   File ""/usr/lib/python3.3/site-packages/werkzeug/serving.py"", line 425, in **init**
>     self.socket = tsafe.Connection(ssl_context, self.socket)
>   File ""/usr/lib/python3.3/site-packages/OpenSSL/tsafe.py"", line 11, in **init**
>     self._ssl_conn = apply(_ssl.Connection, args)
> NameError: global name 'apply' is not defined
"
853,"""no such table"" with sqlite3",2013-09-02T19:13:38Z,2013-09-03T17:56:35Z,,"OperationalError, KeyError","OperationalError: no such table: card, KeyError: 'card.db'","Hi,
I've write a simple code for open a sqlite db with flask. 

```
from flask import Flask, render_template, g
import sqlite3 as lite

# configuration
DATABASE = 'card.db'
DEBUG = True

app = Flask(__name__)
app.config.from_object(__name__)

@app.route('/')
def index():
   g.db = lite.connect(app.config['DATABASE'])
   cur = g.db.execute('select * from card')
   cards = [dict(card_name=row[1], low=row[2], medium=row[3], high=row[4]) for  row in cur.fetchall()]
   g.db.close()
   render_template('index.html', cards=cards)

if __name__ == '__main__':
    app.run()
```

but when i launch the app:

```
OperationalError: no such table: card
```

'card.db' is in the main folder with the script and when i open the db with the python console work perfectly

```
>>> import sqlite3 as lite
>>> conn = lite.connect('card.db')
>>> cur = conn.execute('select * from card')
>>> rows = cur.fetchall()
>>> for row in rows:
...     print row
```

I've try to change path but:

```
OperationalError: unable to open database file
```

or remove the quotes from app.config['DATABASE'] but:

```
KeyError: 'card.db'
```

I've tried with another project from 0, another db, other information but flask give me the same error 

```
OperationalError: no such table: film
```

How i can resolve? 
"
852,installation.rst typo,2013-09-01T13:48:22Z,2013-09-03T07:58:01Z,,,," Installation

Flask depends on two external libraries, Werkzeug and Jinja2. Werkzeug is a toolkit for WSGI, the standard Python interface between web applications and a variety of servers for both development and deployment. Jinja2 renders templates.

So how do you get all that on your computer quickly? There are many ways you could do that, but the most kick-ass method is virtualenv, so let's have a look at that first.

You will need Python 2.6 or higher to get started, so be sure to have an up-to-date Python 2.x installation. For using Flask with Python 3 have a look at :ref:`python3-support`.

:ref:`python3-support` should be :ref:`python3_support`.
"
851,Adding Flask-Misaka to the extensions page,2013-08-29T04:13:40Z,2014-03-21T20:53:01Z,,,,"I'd like to submit the Flask extension I wrote, [Flask-Misaka](https://github.com/singingwolfboy/flask-misaka), for review for inclusion on the extensions registry page.
"
850,Multiple request headers with same name,2013-08-27T15:33:30Z,2016-06-03T09:00:59Z,,,,"I'm deploying my flask website to heroku and they pass 4 headers to flask: `X-Forwarded-For`, `X-Forwarded-Proto`, `X-Forwarded-Port` & `X-Request-Start`.

I want to use all of these headers in flask, however if there are multiple of these headers (except `X-Forwarded-For`) flask will only use the last ones, even when using `request.headers.get_all` or `request.headers.getlist`.

This is problematic as the client can easily fake these headers, which will override those values passed from heroku.

As the `request.headers` object is already the type `werkzeug.datastructures.EnvironHeaders`, which subclasses `werkzeug.datastructures.Headers`, which have support for a key with multiple values, I don't think it will be that hard to implement.

Example code:
`test.py`

```
import requests
from flask import Flask, request
app = Flask(__name__)

@app.route('/')
def test():
    k = 'X-Request-Start'
    h = request.headers
    print h.get(k)
    print h.get_all(k)
    print h.getlist(k)
    return 'Check the logs\n'

if __name__ == '__main__':
    app.run()
```

Testing:

```
python test.py &
curl -H 'X-Request-Start: test1' -H 'X-Request-Start: test2' http://127.0.0.1:5000/
```

Logs:

```
 * Running on http://127.0.0.1:5000/
test2
['test2']
['test2']
127.0.0.1 - - [27/Aug/2013 17:30:45] ""GET / HTTP/1.1"" 200 -
```

Expected result in logs:

```
 * Running on http://127.0.0.1:5000/
test2
['test1', 'test2']
['test1', 'test2']
127.0.0.1 - - [27/Aug/2013 17:30:45] ""GET / HTTP/1.1"" 200 -
```
"
849,make app.config callable,2013-08-26T08:43:24Z,2013-08-26T12:03:35Z,,,,"I'm not quite sure whether this is acceptable. 

```
app.config('DEBUG')  == app.config.get('DEBUG')
```

But instead of raise an useless `not callable` exception, this could save some key strokes.
"
848,Merge pull request #1 from mitsuhiko/master,2013-08-25T20:21:25Z,2013-08-25T20:21:46Z,,,,"Update
"
847,Merge pull request #1 from mitsuhiko/master,2013-08-25T20:17:12Z,2013-08-25T20:17:35Z,,,,"Update
"
846,"Splitting flask.Flask logic into multiple ""mixins""",2013-08-25T14:30:00Z,2014-03-21T20:25:58Z,,,,"This pull request split `flask.Flask` object into many, specialized, so-called ""mixins"", getting inspired from `werkzeug.wrappers.Response`.
This has three main goals:
1. make reading a bit easier: you should be able to find faster what you're looking for, instead of digging through the megalithic `flask.Flask`;
2. identify mixins common to application and blueprint objects (see #593);
3. inspire discussion about spitting `flask.Flask` into specialized object, accessible through `Flask.routing`, `Flask.templating`, etc. that could be overridden more easily.
I did my best to find the right mixin for each function/attribute, but I'm really unsure. Please, don't bash me too hard if I'm wrong ;-)
"
845,change the url_prefix attribute of the blueprint to the real used url_prefix,2013-08-25T08:55:29Z,2013-08-25T09:34:51Z,,,,"If you create a blueprint with an url_prefix, but then register it with a different url_prefix the url_prefix attribute of the blueprint was wrong, now this attribute is updated to the correct url_prefix.
"
844,Fix typo,2013-08-25T01:21:24Z,2013-08-25T11:25:50Z,,,,
843,corrected documentation for Request get_json(),2013-08-23T05:25:27Z,2013-09-03T17:58:04Z,,,,"Minor documentation update to the get_json method.
"
842,"Fixed when release date is not today, The fails have no args.",2013-08-23T03:09:06Z,2014-03-21T20:47:25Z,,,,"And The 63 line expected 1 blank line.
"
841,Documentation MOBI for Download is outdated,2013-08-19T20:25:24Z,2014-09-14T15:45:09Z,,,,"When download documentation as mobi format all references are to Flask 0.9. The actually version of Flask is 0.10.1.

I find this issue in Flask documentation download mobi link.
"
840,Fix typo in docstring,2013-08-19T08:59:44Z,2013-08-20T21:35:01Z,,,,"It's already mentioned correctly in the quickstart docs, but this typo was a little bit confusing for a second.
"
839,Check error handlers for classes before HTTP status codes,2013-08-17T23:20:04Z,2014-05-07T19:54:06Z,,,,"This allows adding error handlers like this:

``` python
@app.errorhandler(werkzeug.exceptions.Forbidden)
```

And subclassing HTTPExceptions:

``` python
class ForbiddenBecauseReason(Forbidden): pass

@app.errorhandler(ForbiddenBecauseReason)
def error1():
    return ""Forbidden because reason"", 403

@app.errorhandler(403)
def error2():
    return ""Forbidden"", 403
```

... the idea being, that a flask extension might want to raise an exception, with the default behaviour of creating a HTTP error page, but still allowing the user to add a view/handler specific to that exception (e.g., ""Forbidden because you are not in the right group"").
"
838,get_cookie_path: fix docstring,2013-08-17T19:33:29Z,2014-03-21T20:46:43Z,,,,"get_cookie_path: fix docstring
"
837,Flask-0.10.1 test failures,2013-08-16T08:50:21Z,2014-10-09T17:10:45Z,,AssertionError,AssertionError: '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/tes [truncated]... != '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/tes [truncated]...,"Pythons 2.7.5, 2.6.8, 3.3.2.

...work/Flask-0.10.1 $ PYTHONPATH=. python2.7 run-tests.py
OR
...work/Flask-0.10.1 $ PYTHONPATH=../Flask-0.10.1-python3_3/lib/ python3.3 run-tests.py 

yield

``` python
======================================================================
FAIL: test_uninstalled_package_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/config.py"", line 167, in test_uninstalled_package_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'test_apps', 'instance'))
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/tes [truncated]... != '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/tes [truncated]...
- /mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/test_apps/config_package_app/instance
?                                                                                                 -------------------
+ /mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/test_apps/instance


======================================================================
FAIL: test_json_key_sorting (flask.testsuite.helpers.JSONTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/helpers.py"", line 200, in test_json_key_sorting
    '}'
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: Lists differ: ['{', '""values"": {', '""0"": ""fo... != ['{', '""values"": {', '""0"": ""fo...

First differing element 4:
""10"": ""foo"",
""2"": ""foo"",

  ['{',
   '""values"": {',
   '""0"": ""foo"",',
   '""1"": ""foo"",',
+  '""2"": ""foo"",',
+  '""3"": ""foo"",',
+  '""4"": ""foo"",',
+  '""5"": ""foo"",',
+  '""6"": ""foo"",',
+  '""7"": ""foo"",',
+  '""8"": ""foo"",',
+  '""9"": ""foo"",',
   '""10"": ""foo"",',
   '""11"": ""foo"",',
   '""12"": ""foo"",',
   '""13"": ""foo"",',
   '""14"": ""foo"",',
   '""15"": ""foo"",',
   '""16"": ""foo"",',
   '""17"": ""foo"",',
   '""18"": ""foo"",',
-  '""19"": ""foo"",',
?              -

+  '""19"": ""foo""',
-  '""2"": ""foo"",',
-  '""3"": ""foo"",',
-  '""4"": ""foo"",',
-  '""5"": ""foo"",',
-  '""6"": ""foo"",',
-  '""7"": ""foo"",',
-  '""8"": ""foo"",',
-  '""9"": ""foo""',
   '}',
   '}']

======================================================================
FAIL: test_appcontext_signals (flask.testsuite.signals.SignalsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/signals.py"", line 118, in test_appcontext_signals
    self.assert_equal(recorded, ['push', 'pop'])
  File ""/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: Lists differ: ['push', 'push'] != ['push', 'pop']

First differing element 1:
push
pop

- ['push', 'push']
?            ^^^

+ ['push', 'pop']
?            ^^


----------------------------------------------------------------------
Ran 233 tests in 4.839s

FAILED (failures=3)
```
"
836,Tutorial stores passwords in plaintext,2013-08-14T21:29:45Z,2016-06-03T08:00:55Z,docs,,,"http://flask.pocoo.org/docs/tutorial/views/#login-and-logout

Flask should not lead new users astray, and should instead make it as easy and obvious as possible to do the right thing.
"
835,jsonify a Decimal,2013-08-14T15:32:51Z,2013-08-15T13:42:26Z,,,,"Currently getting a TypeError: Decimal('0.10') is not JSON serializable error when, you guessed it, I try to encode a Decimal.

I found an accepted fix here: http://stackoverflow.com/questions/4019856/decimal-to-json, but not sure where I should be implementing that within Flask. I tried it within my main app file, but it doesn't appear to be working. 
"
834,How to get the serialized version of the session cookie in 0.10?,2013-08-13T19:13:32Z,2017-05-22T18:45:36Z,,,,"In version 0.9 I could simply get the value of the `session` like this: 

```
flask.session.serialize()
```

But after upgrading to 0.10 this is not working anymore.. what's the alternative? How can I get the session value?

(`flask.request.cookies.get('session')` is not good for me, because I would like to get the session right after login, so it's not part of the request yet)
"
833,mod_wsgi docuementation,2013-08-12T17:03:43Z,2014-08-15T10:58:47Z,,,,"Unfortunately, I have spent almost two hours altogether with tracking down a simple Attribute issue alongside others' time who were trying to kindly help me.

The problem is simply that I could not get the error message to fix a trivial issue. This is because I was trying to use the following these two lines to get debug messages based on the quick start:

if **name** == '**main**':
    application.run(debug=True)

... however this will not work with mod_wsgi, now I know.

Hereby, I suggest to improve the documentation by including this fact, and advise the use of the following instead:

application.debug = True

This will potentially save a lot of time for those users, and it is not an intrusive documentation addition either.
"
832,URLSafeTimedSerializer may be vulnerable to a CRIME or BREACH style attack in some implemtations?,2013-08-12T09:53:34Z,2013-08-12T10:37:10Z,,,,"URLSafeTimedSerializer is the default session backend and it seems to match the requirements (mostly it's use of zlib) for this class of attack to work even if protocol level mitigations have already been used. You'd need a user controllable value in the cookie but I suspect this is not entirely uncommon.
"
831,Fixed tiny but distracting typo.,2013-08-11T14:01:26Z,2013-08-11T19:40:57Z,,,,
830,Update blueprints.rst - Add Error Handlers,2013-08-10T15:38:39Z,2014-03-21T20:54:35Z,,,,"""Added information about custom error handlers in Blueprints with example based simple_page.  Includes link to errorpages.""

I was looking for a simple explanation of the use Blueprint-specific error handlers.  Couldn't find one in the documentation, but I did figure out how to do it by looking at the actual Blueprint code.  I figured I'd add this to the doc to save others a little time in the future.
"
829,Making redirecting safe / Deprecating redirects to 3rd party hosts,2013-08-09T18:03:28Z,2016-04-01T21:15:44Z,,,,"This PR adds a `safe_hosts` parameter to `redirect`, which allows defining a safe set of hosts to redirect to and issues a `DeprecationWarning`, if `redirect` is used to redirect to a different host than the one of the application or defined in `safe_hosts`. In the future instead of a `DeprecationWarning` being issued, an exception should be raised.

The purpose of this change is to prevent [unvalidated redirects](https://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards), which is currently listed among the Top 10 of the most common web application vulnerabilities by OWASP and was recently mentioned by [Jacob Kaplan-Moss at a talk at PyCon Australia](https://www.youtube.com/watch?v=sra9x44lXgU). It's also an easy way to improve our results in comparisions like these ;)
"
828,itsdangerous dependency missing LICENSE file,2013-08-08T11:45:01Z,2013-08-08T17:11:14Z,,,,"The source tarball for itsdangerous 0.22 is missing a LICENSE file.   https://github.com/mitsuhiko/itsdangerous/pull/22   This means that flask 0.10.1 cannot be packaged.
"
827,Add ability to configure app with a JSON file,2013-08-07T22:10:59Z,2014-02-12T22:54:44Z,,,,"Thought this would be useful for some people. 

My use case stems from the fact that its not trivial to generate a Python file with a deployment tool like Chef. But it is trivial to render a JSON file.
"
826,Reloader changes sys.path,2013-08-07T21:54:48Z,2014-09-27T13:54:18Z,,,,"When loading my flask module `python -m project.modules.flaskhandler.py` everything works nicely.  Unfortunately, if I enable debug mode and **use_reloader**, the module is loaded, but when reloader restarts the application, it changes my sys.path.

sys.path's first value changes from **''** to **'project/modules/'** which prevents absolute imports from other modules in my project.

I was able to work around this problem with the following code at the top of my flaskhandler.py file:

```
import sys
import os

# Flask reloader hack
sys.path.append(os.getcwd())
```
"
825,Incomplete mod_wsgi documentation,2013-08-07T14:07:27Z,2015-03-03T19:54:36Z,,,,"I have been having issues for 3-4 days now to get a hello world up and running on the remote server. I figured out that it would be nice if there was a documentation from A-Z how to get that done and working.

http://flask.pocoo.org/docs/deploying/mod_wsgi/

The current documentation does not provide an example what to put into an exact python file, and what url to open up in the web browser to get the desired python module running on the remote server. It is okay to have references to other places if that is more logical, but the idea is to have a self-contained page which I can start reading, and by I reach the end, I will have a working remote hello world.

This would be well appreciated.
"
824,"url_for(*args, _external=True) doesn't add the port to the full url",2013-08-06T14:41:11Z,2014-11-01T15:49:07Z,,,,"When using url_for with _external argument set to ""True"", the returned url does not contain the port which defaults the url to port 80.

I have read a few posts regarding this and it was because people were not specifying the full ""SERVER_NAME"" but I didn't set it.

At first, I was creating an app context to use url_for but it told me I had to set my server name but I can't set it as it might be dynamic upon a user configuration.

Anyhow, what I did was to create an app context and create a test_request context to use url_for which gave me the whole URL without the port.
"
823,fixed quote problem in init_db code snippet,2013-08-06T00:08:37Z,2013-08-06T00:13:47Z,,,,"In the Flask Tutorial, the variable DATABASE is defined as a system path for a SQLite3 file, and then is called here by app.config(). However this parameter was written as app.config('DATABASE'), treating the parameter as a string. The quotes needed to be removed to properly reference the variable.
"
822,Feature request. Regex in url rules,2013-08-05T21:53:45Z,2014-11-02T22:24:51Z,,,,"I wish to be able to use regex in url rules. For example 

```
@app.route('/<regex:*regular expression*:var>/')
def page(var):
     return var.Upper()
```

Is it possible to make it real?
P.S. I wish to take part in it, but I need a kind of mentoring.
"
821,Support mapping multiple subdomains to a single blueprint,2013-08-05T08:15:49Z,2017-05-22T17:15:38Z,blueprints,,,"I have a website with acces by more subdomain like : 
- 'www.mysite.com', 'category1.mysite.com', 'category2.mysite.com', ...
  whose point to one blueprint.

It's interesting to manage more one subdomain by blueprint, for example by a list : 
- landing_bp = Blueprint('landing', **name**, subdomain=['www','category1','category2'], url_prefix='/landing')

Or disable subdomain.

Thank's you.
"
820,app.py: Link to correct EnvironBuilder docs,2013-08-05T05:35:40Z,2013-08-05T08:08:58Z,,,,"Verify this works by building the docs and clicking the link in the `test_request_context` function definition.

In addition I noticed sphinx is not mentioned as an optional install in the `setup.py` file, it may be nice to add it there or check for its presence in the docs Makefile
"
819,Changed sort_json test to test str sorting,2013-08-04T08:47:14Z,2013-08-04T20:59:22Z,,,,"Tests when simplejson was installed were failing because of a change in
how it sorted in v3.0.0. This change first tests it via normal int
sorting for stdlib json then if that fails, it tests against str sorting
for simplejson.
"
818,In the Flaskr Exemple - Change '/ tmp / flaskr.db' to 'flaskr.db',2013-08-02T17:17:08Z,2013-08-02T22:48:34Z,,,,"I am new to programming, I tried to run flaskr but could not because the application does not find the directory '/ tmp / flaskr.db' if the path is 'flaskr.db' not to run the application.

Can I do this?
"
817,"Fix doc bug in patterns/sqlite3, clarify use of make_dicts",2013-08-01T02:08:32Z,2013-08-01T08:15:18Z,,,,"- It was unclear from reading the documentation where the author intened make_dicts to go, so I added that information
- The docs had a bug in the code, referring to `cursor` in the argument list but `cur` in the generator expression
"
816,Fix #815,2013-07-30T20:38:16Z,2013-07-31T14:44:45Z,,,,
815,methods argument of Flask.route should be validated at import time,2013-07-30T19:39:03Z,2013-07-31T14:44:46Z,,,,"I've seen that people often write `@app.route(..., methods=[""POST""])`  as `@app.route(..., methods=""POST"")`, which won't error immediately, but return a `405` status code later.

Which is very unfortunate, as people might think the methods parameter is a space or comma separated string with methods. Sometimes i write that myself because i still don't memorize that this part of Flask's API is actually that ""heavy"" on the syntax.

So what i propose is to add the following normalization code in `Flask.add_url_rule`:

``` python
if isinstance(methods, str):
    if ',' in methods:
        methods = methods.split(',')
    elif ' ' in methods:
        methods = methods.split(' ')
    else:
        methods = (methods,)
```
"
814,Fix a typo,2013-07-30T19:32:25Z,2013-07-30T20:13:20Z,,,,"Fix missing `dt` closing tag.
"
813,"Correct typo: FastCgiServer should be FastCgiExternalServer when using a standalone FCGI server (Gunicorn, etc.)",2013-07-30T15:46:28Z,2013-07-30T20:12:58Z,,,,
812,flash(my_message) raised 'is not JSON serializable' when Flask 0.9 migrate to 0.10 ,2013-07-30T06:48:56Z,2013-07-30T09:02:42Z,,TypeError,"TypeError: lu'Transaction <a href=""/transaction_view/2"" >20</a> of <a href=""/user/view/1"" >F3535324</a> has been added ' is not JSON serializable","Fedora 14 64bit, using virtualenv

code in views.py
...
def index()
    ...
    flash(message)
    return ...

in Flask 0.9 it works fine.

But when i use 0.10 then it throws me:

Traceback (most recent call last):
  File ""/opt/flask/lib/python2.7/site-packages/gevent/pywsgi.py"", line 438, in handle_one_response
    self.run_application()
  File ""/opt/flask/lib/python2.7/site-packages/gevent/pywsgi.py"", line 424, in run_application
    self.result = self.application(self.environ, self.start_response)
  File ""/opt/flask/flask-websocket/app/**init**.py"", line 52, in my_app
    return app(environ, start_response)
  File ""/opt/flask/lib/python2.7/site-packages/flask/app.py"", line 1836, in **call**
    return self.wsgi_app(environ, start_response)
  File ""/opt/flask/lib/python2.7/site-packages/flask/app.py"", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/opt/flask/lib/python2.7/site-packages/flask/app.py"", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/opt/flask/lib/python2.7/site-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/opt/flask/lib/python2.7/site-packages/flask/app.py"", line 1479, in full_dispatch_request
    response = self.process_response(response)
  File ""/opt/flask/lib/python2.7/site-packages/flask/app.py"", line 1693, in process_response
    self.save_session(ctx.session, response)
  File ""/opt/flask/lib/python2.7/site-packages/flask/app.py"", line 837, in save_session
    return self.session_interface.save_session(self, session, response)
  File ""/opt/flask/lib/python2.7/site-packages/flask/sessions.py"", line 326, in save_session
    val = self.get_signing_serializer(app).dumps(dict(session))
  File ""/opt/flask/lib/python2.7/site-packages/itsdangerous.py"", line 537, in dumps
    payload = want_bytes(self.dump_payload(obj))
  File ""/opt/flask/lib/python2.7/site-packages/itsdangerous.py"", line 809, in dump_payload
    json = super(URLSafeSerializerMixin, self).dump_payload(obj)
  File ""/opt/flask/lib/python2.7/site-packages/itsdangerous.py"", line 522, in dump_payload
    return want_bytes(self.serializer.dumps(obj))
  File ""/opt/flask/lib/python2.7/site-packages/flask/sessions.py"", line 85, in dumps
    return json.dumps(_tag(value), separators=(',', ':'))
  File ""/opt/flask/lib/python2.7/site-packages/flask/json.py"", line 126, in dumps
    rv = _json.dumps(obj, **kwargs)
  File ""/usr/lib64/python2.7/site-packages/simplejson/__init__.py"", line 268, in dumps
    use_decimal=use_decimal, **kw).encode(obj)
  File ""/usr/lib64/python2.7/site-packages/simplejson/encoder.py"", line 216, in encode
    chunks = list(chunks)
  File ""/usr/lib64/python2.7/site-packages/simplejson/encoder.py"", line 485, in _iterencode
    for chunk in _iterencode_dict(o, _current_indent_level):
  File ""/usr/lib64/python2.7/site-packages/simplejson/encoder.py"", line 459, in _iterencode_dict
    for chunk in chunks:
  File ""/usr/lib64/python2.7/site-packages/simplejson/encoder.py"", line 380, in _iterencode_list
    for chunk in chunks:
  File ""/usr/lib64/python2.7/site-packages/simplejson/encoder.py"", line 459, in _iterencode_dict
    for chunk in chunks:
  File ""/usr/lib64/python2.7/site-packages/simplejson/encoder.py"", line 380, in _iterencode_list
    for chunk in chunks:
  File ""/usr/lib64/python2.7/site-packages/simplejson/encoder.py"", line 495, in _iterencode
    o = _default(o)
  File ""/opt/flask/lib/python2.7/site-packages/flask/json.py"", line 83, in default
    return _json.JSONEncoder.default(self, o)
  File ""/usr/lib64/python2.7/site-packages/simplejson/encoder.py"", line 190, in default
    raise TypeError(repr(o) + "" is not JSON serializable"")
TypeError: lu'Transaction <a href=""/transaction_view/2"" >20</a> of <a href=""/user/view/1"" >F3535324</a> has been added ' is not JSON serializable
"
811,Remove Werkzeug bug workaround from flask/app.py,2013-07-29T17:44:49Z,2013-07-29T20:24:49Z,,,,"According to the note in the comment, you had to check to make sure that the 
defaults were not an empty dictionary because of a bug in Werkzeug pre-0.7.

Since Flask officially requires 0.7 or greater, we can remove this little 
workaround.
"
810,Running flask with unbuffered stdout exits upon reload,2013-07-29T04:58:37Z,2013-07-29T09:28:26Z,,,,"When you run a Flask application with Python's -u parameter and Flask's auto-reloader, the application exits upon reload. Expected action is to reload and continue to run.
"
809,add test case to reproduce the bug for #798,2013-07-27T00:28:39Z,2013-08-01T02:43:54Z,,,,"Here is the test case for #798.

It should broke in current Flask, and after #798 it won't.
"
808,Fix #782 -- /tmp/ in tutorial,2013-07-26T23:21:29Z,2013-07-26T23:28:08Z,,,,
807,Fix #783 -- config in tutorial,2013-07-26T21:37:42Z,2013-07-26T21:40:19Z,,,,
806,Update example for Apache FCGI config to use worker processes,2013-07-26T19:24:45Z,2013-07-26T21:44:55Z,,,,"As stated in Issues/804, a simple use of ScriptAlias behaves like plain CGI--a new process is created for each request. Starting up worker processes with Apache or by using an external FCGI server cuts the response time down from 1000ms to ~30ms per request.
"
805,Run an applicaton with another server,2013-07-26T09:44:24Z,2013-07-26T16:29:06Z,,,,"Currently, the `run()` method of the Flask object takes as parameters `the host, the port, the debug mode, and some options (like the reloader mode)`.

It would be cool to add a `server` parameter that will be set default to Werkzeug's `run_simple()` function but could be another one like Gunicorn.

To run an application with our choice server, we could do:
`application.run(host=0.0.0.0, port=5000, server='gunicorn')`

This is mostly a «shortcut» than a real feature. If you have any cons (or pros, why not), please tell me :)
"
804,Instructions for configuring FastCGI under Apache are incorrect,2013-07-25T18:50:38Z,2013-07-26T19:28:23Z,,,,"The use of ScriptAlias at http://flask.pocoo.org/docs/deploying/fastcgi/
 is not correct because it will spawn one process per request. This is a more useful example derived from http://requesttracker.wikia.com/wiki/FastCGIConfiguration

```
LoadModule fastcgi_module /usr/lib64/httpd/modules/mod_fastcgi.so

FastCgiServer /var/www/html/eventlog/app.fcgi -idle-timeout 300 -processes 5
<VirtualHost *>
    ServerName webapp1.mydomain.com
    DocumentRoot /var/www/html/eventlog

    AddHandler fastcgi-script fcgi
    ScriptAlias / /var/www/html/eventlog/app.fcgi/

    <Location />
        SetHandler fastcgi-script
    </Location>
</VirtualHost>
```
"
803,"can not correctly handle the POST param with ""_"" underscore",2013-07-25T12:56:21Z,2013-07-26T16:29:24Z,,,,"will return 

<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">
<title>400 Bad Request</title>

<h1>Bad Request</h1>

<p>The browser (or proxy) sent a request that this server could not understand.</p>
"
802,Acquire SSL client certificate from development server,2013-07-23T11:21:35Z,2013-07-23T19:19:17Z,,,,"Dear Flask-Team,

thanks for the good work. I have been using Flask for quite a while now.
In my project I use flask to receive requests from a command line client.
The server is running with an adhoc SSL context. The client sends a SSL client certificate which I need to parse in the request handler.

If I use a web server (e.g. nginx) to dispatch the request to Flask, I can configure the request environment to include the client certificate like so:
  `fastcgi_param CLIENT_CERT $ssl_client_cert;`
  `fastcgi_param CLIENT_RAW_CERT $ssl_client_raw_cert;`

Now, I want the same behavior when I run the development server (or any other mean to get the client cert).
Currently I am starting the app server like so:
  `self._app.run(host=host, port=app_port, ssl_context='adhoc', debug=True)`

Can you help?
"
801,"Given absolute URL, testclient discards query params",2013-07-23T06:04:41Z,2017-04-23T16:18:39Z,,,,"The following fails at the assert inside the index subroutine.

``` python
import unittest
from flask import Flask, url_for, request, jsonify

class TestFlask(unittest.TestCase):

    def test_get_with_arguments(self):
        app = Flask(__name__)
        app.debug = True

        @app.route('/echo')
        def index():
            assert 'key' in request.args
            return jsonify( dict(key=request.args['key']) )

        url = None
        with app.test_request_context():
            url = url_for('index', key='test', _external=True)

        assert url == 'http://localhost/echo?key=test'

        rv = app.test_client().get(url)
        assert 'key' in rv.data
```
"
800,cleared up confusion for from_envvar in docs,2013-07-22T14:13:21Z,2013-07-26T21:47:11Z,,,,"This attempts to clear up confusion caused in the tutorial using `.from_envvar()`.  I don't think it is perfect but it might be a start.  

The issue presented in  issue #783 was that someone might try to replace the `.from_object()` line instead of just appending the `from_envvar()`.  While, when I first read the tutorial, I didn't interpret it that way, I can see where the confusion could come from.    

How this PR attempts to fix this issue if by taking out the language about removing the `.from_object` method and just mentioning that you could use them alongside one another to create a robust setup. 

Thoughts welcome!
"
799,api.rst: fix some spelling/typos,2013-07-22T09:12:38Z,2013-07-22T13:43:21Z,,,,
798,Fix set cookie every request,2013-07-21T05:57:37Z,2013-07-30T14:45:35Z,,,,"Without this patch, the response will always set cookie, even the session is not changed.

For example:

``` py
@app.route('/')
def home():
    return 'home'


@app.route('/session')
def set_session():
    session['foo'] = 'bar'
    return 'session'
```

If you have visited `/session`, the next time when you visit `/` it will always send the `Set-Cookie` header.
"
797,Can't find requet.form or requesrt.values items with post request for flask 0.10.1,2013-07-11T11:25:43Z,2013-07-24T15:57:01Z,,,,"I have next example which work fine with `flask==0.9`, `werkzeug==0.8.3` and fail with `flask==0.10.1`, `werkzeug==0.9.1`:

```
from flask import Flask, request


def create_app():
    class Config(object):
        SECRET_KEY = 'test'

    app = Flask(__name__)
    app.config.from_object(Config)

    @app.route('/', methods=['POST'])
    def home():
        assert request.values['PHONE'] == '+7(910)123-45-67'
        return request.values['PHONE']

    return app


if __name__ == '__main__':
    app = create_app()
    #app.run('0.0.0.0', 8080, True)
    client = app.test_client()
    response = client.post('/', data={'PHONE': '+7(910)123-45-67'})
    assert response.data == '+7(910)123-45-67', response.data
```

When I try `wget --post-data='PHONE=%2B7%28910%29123-45-67' localhost:8080` it also will work with `flask==0.9` and don't with `flask==0.10.1`.

For `flask==0.10.1` I have `request.data=='PHONE=%2B7%28910%29123-45-67'`, but empty `request.values` and `request.form`.
"
796,Compatibility problems between 0.9 - 0.10?,2013-07-09T17:51:58Z,2013-07-24T20:28:52Z,,AssertionError,AssertionError: View function mapping is overwriting an existing endpoint function: etc,"I'm getting the following error in flask 0.10:

AssertionError: View function mapping is overwriting an existing endpoint function: etc

The other members of the project, who have configured their environment earlier, are not getting this error. The requirements.txt file is requesting flask 0.9, but whenever I try to install that version, I end up having 0.10.

So I'm assuming that the difference between their environment and mine is that version number (since that error is related to flask). So are there new features in 0.10 that break apps developed for 0.9? And how can I install 0.9? It looks like the 0.9 branch is missing in the repo.
"
795,route to view_func with same decorators,2013-07-09T05:23:53Z,2013-07-09T17:10:05Z,,AssertionError,AssertionError: View function mapping is overwriting an existing endpoint function: wrapperAssertionError: View function mapping is overwriting an existing endpoint function: wrapper,"lets suppose i have this routes:

``` python
app.add_url_rule('/',
                  view_func=index,
                  methods=['GET'])

app.add_url_rule('login',
                  view_func=login,
                  methods=['GET', 'POST'])

@validate_access()
def index():
    #......

@validate_access()
def login():
    #......
```

I have 2 endpoints with same decorator ""@validate_access"".
When i run this code i got

```
AssertionError: View function mapping is overwriting an existing endpoint function: wrapperAssertionError: View function mapping is overwriting an existing endpoint function: wrapper
```

I don't know if its a bug or not. But please inform me if there is a solution for this.

Thanks :) 
"
794,Pluggable Method Views broken by fix for #570,2013-07-07T22:33:20Z,2013-07-24T20:26:53Z,,,,"So I'm not sure if this is meant to happen, but when you attempt to use MethodViews as described in the docs http://flask.pocoo.org/docs/views/#method-views-for-apis, I get an Assertion Error generated by the [app.add_url_rule](https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L983) added in 661ee54bc2bc1ea0763. This commit was created to fix #570. 

The MethodView example in the docs calls for registering multiple routes to the same class, which causes an AssertionError to be raised. 

Is there another way to create a method based set of views without causing this error to be raised? Would it be better to switch from an AssertionError to a Warning that could be ignored? 
"
793,How to use the multi url_prefix with same Blueprint?,2013-07-07T16:55:38Z,2013-07-24T20:40:32Z,,,,"``` python
bp = Blueprint(__name__, __name__, url_prefix=(""/profile"", ""/personal/profile""), static_folder=""static"")

@bp.route(""/main"", methods=[""GET""])
def page():
    pass
```
"
792,Static files url_for bug with Windows-like file path.,2013-07-06T14:20:57Z,2013-07-24T20:31:53Z,,,,"The `url_for` for static files works based on added `static` URL rule, This rule is based on Werkzeug's `path` converter that is designed for URL path, here we need some converter for file path. In URL path, path is '/' delimited, but in file path it can be '\' delimited.

My solution is to define a custom converter class `FilePathConverter` that uses `urllib`'s `pathname2url` function in its `to_url` method.

The test suite is also updated to support the change by adding a `os.path.normpath` conversion in requested static path.
"
791,os.system in a own thread blocks the REST request if Response is a generator,2013-07-05T07:36:22Z,2013-07-24T20:29:34Z,,,,"Hello,

I'm new to python and I'm just playing around Flask. 
Please consider following application (I have simplified my application to just show the issue):

``` Python
@app.route('/thread', methods=['GET'])
def thre():

    def run():
        # Execute some external command. 
        # Note: I tried popen, call, etc...
        os.system(""sleep 10"")
        print ""Done""

    # Execute the external command in a own process in order to return quickly
    # Note: I tried Thread, start_thread, etc...
    backProc = Process(target=run, args=())
    backProc.start()        

    # Create a generator/iterator. (Simplified)
    def gen():
        yield ""My Result""
        return

    # Return the generator. 
    return Response(gen(),  status = 200, mimetype='text/plain')
```

If I will now call the REST service with curl 

`curl localhost:5000/thread`

then I noticed that curl waits 10 seconds before it returns. It seem like that the ""os.system"" call blocks Flask of sending the data to the client. 

If I use the same example without generator/iterator everything works as expected. The client receives the ""My Result"" before the ""os.system"" call finished.
"
790,Fixed json.jsonify,2013-07-04T21:06:26Z,2014-03-21T20:47:45Z,,,,"Modified jsonify to allow passing the same parameters of json.dumps (expecially to support custom encoders). Test suite updated to support the update.
"
789,Adjust documentation on testing to reflect changes to ``flask.g``,2013-07-03T12:04:57Z,2013-07-26T21:48:44Z,,,,"On docs/_sources/testing.txt it states in the section _Faking resources and context_:

> A very common pattern is to store user authorization information and
> database connections on the application context or the :attr:`flask.g`
> object.  The general pattern for this is to put the object on there on
> first usage and then to remove it on a teardown.  Imagine for instance
> this code to get the current user::

This should be adjusted as `fask.g` is now registered on the application context.
"
788,json.py use bson.json_util,2013-07-02T20:46:10Z,2013-07-02T21:36:40Z,,,,"Hi,

I was testing out flask today and noticed that the default object type returned from PyMongo specifically (flask.ext.pymongo) could not parse objects with ObjectID and some date types.

There is a library in bson called json_util that can serialize eveything dumps can and everything from a mongodb document.  

So I was wondering if you would consider using that, i am testing it in my code locally now.  I may even try return an array or object depending on the size of the mongo result.

```
from __future__ import absolute_import
from flask import make_response, current_app
<<<from bson import json_util>>>
from json import dumps

# This dictionary contains any kwargs that are to be passed to the json.dumps
# function, used below.
settings = {}


def output_json(data, code, headers=None):
    """"""Makes a Flask response with a JSON encoded body""""""

    # If we're in debug mode, and the indent is not set, we set it to a
    # reasonable value here.  Note that this won't override any existing value
    # that was set.  We also set the ""sort_keys"" value.
    local_settings = settings.copy()
    if current_app.debug:
        local_settings.setdefault('indent', 4)
        local_settings.setdefault('sort_keys', True)

    # We also add a trailing newline to the dumped JSON if the indent value is
    # set - this makes using `curl` on the command line much nicer.
    dumped = dumps(data, <<<default=json_util.default,>>> **local_settings)
    if 'indent' in local_settings:
        dumped += '\n'

    resp = make_response(dumped, code)
    resp.headers.extend(headers or {})
    return resp
```
"
787,changed werkzeug.serving.run_simple to werkzeug.run_simple in app.run do...,2013-07-02T06:01:38Z,2013-07-02T20:22:29Z,,,,"changed `werkzeug.serving.run_simple` to `werkzeug.run_simple` in app.run docstring.
"
786,Missing `s` in a plural word,2013-06-30T16:21:09Z,2013-07-01T13:44:03Z,,,,"""many"" refers to more than one revision control system
"
785,No way create url with `url_for` to another host,2013-06-29T16:46:48Z,2013-07-24T20:34:31Z,,,,"If I have multilanguage site, for example english version hosted on `example.com` and russian on `example.ru` I can't create url to site with another language with `url_for`.

If I have static files and want put it to CDN for production. I can't set url to it with `url_for`.

So it will be greate add additional variable to `_external`, `_method`, `_achor` like `_server_name` (or make `_external` as string to another host) for `url_for`.
1. If `_server_name` is None (or `_external` is False or not basestring) , then return url like now.
2. If `_server_name` is not None and `_external` is True, then raise exception or ignore `_external`.
3. If `_servet_name` is not None and `_external` is False (or `_external`  is basestring), then return url like application config have `SERVER_NAME` == `_sever_name` and `_external` is True.

Also will be greate make default `_server_name` (or `_external`) for specific endpoints. For example for `static` endpoint add default server name to application config because it allow move current static to CDN with changing just config.
"
784,quickstart guide - wording changes for clarity,2013-06-27T20:37:57Z,2013-07-01T13:43:38Z,,,,"changed ""an 200 OK error code"" to ""a 200 OK status code""
"
783,"flaskr tutorial suggestion: Omit or isolate the text about ""from_envvar""",2013-06-27T18:48:00Z,2013-07-26T23:17:10Z,,,,"It's my curse to discover documentation ambiguities ( even when they don't exist ) and then trip over them.

When I read, (step 2 of flaskr tutorial)

""Usually, it is a good idea to load a configuration from a configurable file. This is     what from_envvar() can do, replacing the from_object() line above:

```
app.config.from_envvar('FLASKR_SETTINGS', silent=True)
```

That way someone can set an environment variable called FLASKR_SETTINGS to specify a config file to be loaded which will then override the default values. The silent switch just tells Flask to not complain if no such environment key is set."" 

I took that to mean, ""Replace that 'from_object"" instance. Well no. The text does not say that but I did anyway and debugged for a while until I removed the silent option, saw the noise and realized that that line would not work as described in this context.

It is a good point. Configuration files are good. I would box this into a ""Note:"" That concludes with a, ""Do not replace this line now.""

Simpler of course would be to omit entirely. Another alternative is to leave as a problem for the reader at the end of the section.

(Documentation is hard - there are too many personally costumized mental OS's out there to ever possibly fully debug docs)
"
782,Flaskr tutorial suggestion - Use DATABASE='flaskr' instead of DATABASE='/tmp/flaskr',2013-06-27T18:24:19Z,2013-07-26T23:28:09Z,,,,"Title says it all.
1..DATABASE='flaskr'            works for windows and linux
2..DATABASE='/tmp/flaskr'    only works for linux and probably OS10 
"
781,test_appcontext_signals() fails with blinker installed,2013-06-27T02:46:09Z,2013-06-27T14:52:49Z,,AssertionError,"AssertionError: Lists differ: ['push', 'push'] != ['push', 'pop']","test_appcontext_signals() fails with blinker installed. I use blinker 1.2. This failure occurs with Python 2.6, 2.7 and 3.3.

```
======================================================================
FAIL: test_appcontext_signals (flask.testsuite.signals.SignalsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/tmp/flask/flask/testsuite/signals.py"", line 118, in test_appcontext_signals
    self.assert_equal(recorded, ['push', 'pop'])
  File ""/tmp/flask/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: Lists differ: ['push', 'push'] != ['push', 'pop']

First differing element 1:
push
pop

- ['push', 'push']
?            ^^^

+ ['push', 'pop']
?            ^^


```
"
780,test_json_key_sorting() fails with simplejson installed,2013-06-27T02:44:54Z,2013-08-04T21:00:09Z,,AssertionError,"AssertionError: Lists differ: ['{', '""values"": {', '""0"": ""fo... != ['{', '""values"": {', '""0"": ""fo...","test_json_key_sorting() fails with simplejson installed. I use simplejson 3.3.0.  This failure occurs with Python 2.6, 2.7 and 3.3.

```
======================================================================
FAIL: test_json_key_sorting (flask.testsuite.helpers.JSONTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/tmp/flask/flask/testsuite/helpers.py"", line 200, in test_json_key_sorting
    '}'
  File ""/tmp/flask/flask/testsuite/__init__.py"", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: Lists differ: ['{', '""values"": {', '""0"": ""fo... != ['{', '""values"": {', '""0"": ""fo...

First differing element 4:
""10"": ""foo"",
""2"": ""foo"",

  ['{',
   '""values"": {',
   '""0"": ""foo"",',
   '""1"": ""foo"",',
+  '""2"": ""foo"",',
+  '""3"": ""foo"",',
+  '""4"": ""foo"",',
+  '""5"": ""foo"",',
+  '""6"": ""foo"",',
+  '""7"": ""foo"",',
+  '""8"": ""foo"",',
+  '""9"": ""foo"",',
   '""10"": ""foo"",',
   '""11"": ""foo"",',
   '""12"": ""foo"",',
   '""13"": ""foo"",',
   '""14"": ""foo"",',
   '""15"": ""foo"",',
   '""16"": ""foo"",',
   '""17"": ""foo"",',
   '""18"": ""foo"",',
-  '""19"": ""foo"",',
?              -

+  '""19"": ""foo""',
-  '""2"": ""foo"",',
-  '""3"": ""foo"",',
-  '""4"": ""foo"",',
-  '""5"": ""foo"",',
-  '""6"": ""foo"",',
-  '""7"": ""foo"",',
-  '""8"": ""foo"",',
-  '""9"": ""foo""',
   '}',
   '}']

```
"
779,"Doc suggestion: In QuickStart 10.1 define ""Reversing"" before using it",2013-06-26T22:25:15Z,2014-08-09T16:20:53Z,,,,"Under the URL Building section. I read,
   ""Reversing is often more descriptive than hard-coding the URLs.""

And I thought, ""I have been asleep while reading again"". So I did a search on the Quickstart, and this is the first instance of the term ""reversing"" in the text. I couldn't make any sense of ""reversing'"". Worse how could it be more descriptive when I have no idea what it is. After searching a bit, I suggest the following minor change to text at the beginning of the section.

Replace:
""If it can match URLs, can Flask also generate them? Of course it can. To build a URL to a specific function you can use the url_for() function."" 

With:
""If Flask can match URLs, can it also generate them? Of course it can.  To build a URL for a specific function you can use the url_for() function. This is called reversing the view.""

Do I have this right?  Django at least talks about functionality that is similar to what you are talking about here. Terminology is never an exact match across similar tools. So if my suggestion is not correct, then it is demonstration of how I came to the wrong conclusion.

Regards, Flask is definitely cool.
-m
"
778,repr(request) is broken if the query string or url contains non-ascii characters,2013-06-26T14:51:54Z,2016-04-05T07:49:23Z,,UnicodeEncodeError,UnicodeEncodeError: 'ascii' codec can't encode character u'\xf6' in position 44: ordinal not in range(128),"`repr(request)` raises

```
UnicodeEncodeError: 'ascii' codec can't encode character u'\xf6' in position 44: ordinal not in range(128)
```

oddly enough, `request._get_current_object().__repr__()` works 

Apparently `__repr__` **must** return `str` in Python 2: http://stackoverflow.com/questions/3627793/best-output-type-and-encoding-practices-for-repr-functions
"
777,infinite processes with multiprocessing and app.run(debug=True),2013-06-25T00:35:49Z,2014-09-08T22:16:03Z,,,,"I'm building a flask app that would benefit from being able to spawn some subprocesses via python's standard multiprocessing module.

However, spawning just one leads to an endless loop where an infinite number of processes are spawned. Yikes! It only happens when debug=True is passed to app.run. So it's not a problem in production, but it makes debugging hard.

This problem doesn't happen with the threading module, interestingly enough.

Code to reproduce (Python version 2.7.3 on Windows 7 x64) follows:

``` python
import time
from multiprocessing import Process
from flask import Flask

app = Flask(__name__)

def testFun():
    print 'Starting'
    time.sleep(3)
    print '3 Seconds Later'
backProc = Process(target=testFun, args=())
backProc.start()

@app.route('/')
def root():
    return 'Root'

if __name__ == '__main__':
    app.run(debug=True)
```
"
776,Fix typo,2013-06-23T00:42:52Z,2013-06-23T00:54:31Z,,,,"Fixed a small typo.
"
775,Add Flask.config_class attribute,2013-06-22T20:17:07Z,2014-02-20T18:30:19Z,,,,"Similar to `request_class`, `response_class` and `app_ctx_globals_class`, the `config_class` attribute of `Flask` allows to specify custom class that stores the configuration for the app:

``` python
import flask

class Config(flask.Config):
    def __getitem__(self, key):
        try:
            return super(Config, self).__getitem__(key)
        except KeyError:
            return None

class Flask(flask.Flask):
    config_class = Config
```

The current alternative is to override `make_config` and repeat its logic (such as handling of `instance_relative` argument). This should be more convenient and robust.
"
774,Add a way to give feedback from the command line.,2013-06-22T19:18:56Z,2014-08-21T20:05:21Z,,,,"http://feedback.flask.pocoo.org/faq

> While we cannot integrate that into Flask in the same way because we do not have any kind of user interface that could accomodate such a button, we however encourage users to send us little messages about their experience with Flask.

There is a way to give users a way to send feedback through Flask -- by making the feedback form part of Flask's API.

My original idea was to create a new module `flask.feedback` that would expose two functions called something like `is_good`/`is_bad` which would be imported from `flask.__init__`.

So the enduser can do the following:

``` python

>>> import flask
>>> flask.is_good(""I love me some Python 3 support."")
Thanks!
>>> flask.is_bad(""lol it duznt werk"")
Noted.
```

During an initial discussion in IRC, @rpicard also brought up the idea of exposing this through a CLI tool `flask-feedback`.

I already looked into a possible implementation of this, by determining whether this could be cleanly implemented via the API that already exists for the form on the website. The form seems to contain some Javascript-based spam-protection though.

While there are the options of 1.) creating a new API just for the integrated tool 2.) removing the protection, i am hesitant to do any more work, as such a feature built into Flask itself could be easily used to send massive amounts of spam, and there is little protection available against this.

I'd just hope nobody brings up the dedication to modify the tool. While i didn't check it, i guess the javascript protection could be easily bypassed as well. Probably the goal of it is just to protect against bots that crawl arbitrary websites and send off forms, not the ones that target Flask's feedback website specifically.

However, before any implementation i'd like some feedback on it.
"
773,url_for + redirect does not respect http vs https,2013-06-18T06:37:52Z,2013-06-18T07:11:43Z,,,,"I am using Flask with SSL.
Testing in dev environment with stunnel and a self-signed certificate.

http://localhost:5000 is Flask
https://localhost:8000 is SSL Flask through stunnel

When using redirect(url_for(...)) in the program below, the browser is redirected to http://localhost:8000/ssl (HTTP protocol instead of HTTPS)

Correct URL should be https://localhost:8000/ssl

Here is a sample program to demonstrate:

```
from flask import Flask, request, url_for, redirect

# Flask Initialization
app = Flask(__name__)

@app.route(""/"")
def index():
    return ""Hello World""

@app.route(""/ssl"")
def ssl():
    return ""Hello SSL World""

@app.route('/redirect/')
def redirectToSSL():
    return redirect(url_for('ssl'))

if __name__ == ""__main__"":
    app.run(debug=True)
```

My stunnel config is 

```
pid =
foreground = yes

cert = ./stunnel.crt
key = ./stunnel.pem

[https]
accept=8000
connect=5000
```

To test this,
- start your stunnel
- start the application
- connect to https://localhost:8000 - you should see 'Hello World'
- connect to https://localhost:8000/redirect - you should receive an error page as the browser is redirected to http://localhost:8000/ssl (instead of https:// ...)
"
772,Flask 0.10.x and Werkzeug 0.9.x encoding issue,2013-06-17T15:49:01Z,2013-06-18T10:29:28Z,,UnicodeEncodeError,UnicodeEncodeError: 'latin-1' codec can't encode characters in position 0-1: ordinal not in range(256),"This appears to be an issue with how Werkzeug is encoding headers, new to the version series 0.9.x:

``` python
>>> from flask import Flask
>>> app = Flask(__name__)
>>> app.test_client().get('/', headers=[('User-Agent', u'中文')])
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/Library/Python/2.7/site-packages/werkzeug/test.py"", line 760, in get
    return self.open(*args, **kw)
  File ""/Library/Python/2.7/site-packages/flask/testing.py"", line 108, in open
    follow_redirects=follow_redirects)
  File ""/Library/Python/2.7/site-packages/werkzeug/test.py"", line 724, in open
    environ = args[0].get_environ()
  File ""/Library/Python/2.7/site-packages/werkzeug/test.py"", line 573, in get_environ
    for key, value in self.headers.to_wsgi_list():
  File ""/Library/Python/2.7/site-packages/werkzeug/datastructures.py"", line 1185, in to_wsgi_list
    return [(k, v.encode('latin1')) for k, v in self]
UnicodeEncodeError: 'latin-1' codec can't encode characters in position 0-1: ordinal not in range(256)
```

This affects https://github.com/maxcountryman/flask-login/issues/78.
"
771,url_to does not correctly url encode params,2013-06-16T06:02:03Z,2013-06-16T13:50:58Z,,,,"When passing params with special characters, url_to does not url encode '+' signs.
Other special characters are correctly encoded.

Tested against 0.10.1

Test Case:

```
from flask import Flask, request, url_for, redirect

# Flask Initialization
app = Flask(__name__)

@app.route(""/"")
def index():
    param = {'id' : 'aaa:bbb/ccc+ddd:eee'}
    return redirect(url_for(""session"", **param))

@app.route('/session/')
def session():
    return request.args['id']

if __name__ == ""__main__"":
    app.run(debug=True) 
```

URL generated is http://127.0.0.1:5000/session/?id=aaa%3Abbb%2Fccc+ddd%3Aeee
Output printed is aaa:bbb/ccc ddd:eee

Notice the '+' not encoded in the URL, resulting is a space in the string output
"
770,Fixed a typo,2013-06-14T18:32:28Z,2013-06-14T21:17:19Z,,,,"Fixed a small typo.
"
769,Difference in flask.g behaviour between Python 2.7 and Python 3.3,2013-06-14T14:44:32Z,2013-06-14T14:56:11Z,,RuntimeError,RuntimeError: working outside of application context,"Python 2.7.3 returns `False` and Python 3.3.2 throws an exception for the same code:

```
$ python2 -c 'import flask; print(flask.__version__); print(hasattr(flask.g, ""xyz""))'
0.10.1
False
```

and Python 3:

```
$ python3 -c 'import flask; print(flask.__version__); print(hasattr(flask.g, ""xyz""))'
0.10.1
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/usr/local/lib/python3.3/site-packages/werkzeug/local.py"", line 338, in __getattr__
    return getattr(self._get_current_object(), name)
  File ""/usr/local/lib/python3.3/site-packages/werkzeug/local.py"", line 297, in _get_current_object
    return self.__local()
  File ""/usr/local/lib/python3.3/site-packages/flask/globals.py"", line 27, in _lookup_app_object
    raise RuntimeError('working outside of application context')
RuntimeError: working outside of application context
```
"
768,Correct small typo in internal link,2013-06-14T13:35:56Z,2013-06-16T10:40:57Z,,,,
767,Fix error message spelling (plural apostrophe),2013-06-14T09:31:28Z,2013-06-14T12:59:08Z,,,,"Seeing those apostrophes hurt my eyes... ;)
"
766,Fixed class-based views support,2013-06-14T07:31:37Z,2013-06-14T08:41:38Z,,,,"#570 broke compatibility with bound view methods.

Simplified flask-admin case:

``` python
from flask import Flask, Blueprint

app = Flask(__name__)

class Dummy(object):
    def __init__(self, app, name):
        self.name = name

        bp = Blueprint(name, __name__)
        bp.add_url_rule('/', 'view', self.view)
        bp.add_url_rule('/<test>/', 'view', self.view)

        app.register_blueprint(bp)

    def view(self, test=None):
        return 'hi'

obj1 = Dummy(app, 'test')
app.run(port=8002)
```

In Flask 0.9 it works as expected, but in Flask 0.10 it does not.

Cased by `is` check:

``` python
> obj.view is obj.view
False
```
"
765,Flask-MakeStatic listing and approval,2013-06-13T20:09:43Z,2014-10-19T18:17:22Z,,,,"I would appreciate listing and review for approval of Flask-MakeStatic, [code](https://github.com/DasIch/Flask-MakeStatic) and [documentation](https://flask-makestatic.readthedocs.org/en/latest/) are available. The extension supports 2.6, 2.7 and 3.3 and due to the latter requires Flask 0.10. Tests are included and can be run with `setup.py test` (which installs dependencies) and `make test` (which does not.)
"
764,Fix typo,2013-06-12T14:12:28Z,2013-06-12T17:57:02Z,,,,
763,Documentation for Flask.route() incorrect,2013-06-07T12:38:46Z,2013-06-09T10:47:09Z,,,,"https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L999

The documentation for Flask.route() seems to show options that don't apply to the decorator.
"
762,Debug mode crashes with python 3.3.1 on Windows 8,2013-06-05T21:00:53Z,2013-06-05T22:01:54Z,,TypeError,TypeError: environment can only contain strings,"On a clean virtualenv with python 3.3.1 and latest versions of werkzeug/flask from git, then running this:

``` python
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
   return 'Hello World!'

if __name__ == '__main__':
    app.run(debug=True)
```

produces this:

```
(newenv) C:\Users\nyctef\testenv>python test.py
 * Running on http://127.0.0.1:5000/
 * Restarting with reloader
Traceback (most recent call last):
  File ""test.py"", line 9, in <module>
    app.run(debug=True)
  File ""C:\Users\nyctef\testenv\newenv\lib\site-packages\flask-0.10_dev_20130605-py3.3.egg\flask\app.py"", line 761, in run
    run_simple(host, port, self, **options)
  File ""C:\Users\nyctef\testenv\newenv\lib\site-packages\werkzeug-0.9_devdev_20130605-py3.3.egg\werkzeug\serving.py"", line 704, in run_simple
    run_with_reloader(inner, extra_files, reloader_interval)
  File ""C:\Users\nyctef\testenv\newenv\lib\site-packages\werkzeug-0.9_devdev_20130605-py3.3.egg\werkzeug\serving.py"", line 613, in run_with_reloader
    sys.exit(restart_with_reloader())
  File ""C:\Users\nyctef\testenv\newenv\lib\site-packages\werkzeug-0.9_devdev_20130605-py3.3.egg\werkzeug\serving.py"", line 597, in restart_with_reloader
    exit_code = subprocess.call(args, env=new_environ)
  File ""C:\Python33\Lib\subprocess.py"", line 520, in call
    with Popen(*popenargs, **kwargs) as p:
  File ""C:\Python33\Lib\subprocess.py"", line 820, in __init__
    restore_signals, start_new_session)
  File ""C:\Python33\Lib\subprocess.py"", line 1106, in _execute_child
    startupinfo)
TypeError: environment can only contain strings
```

Removing debug=True makes it work, but having debug mode would be nice :)
"
761,Flask.run() uses SERVER_NAME config if available.,2013-06-05T02:19:04Z,2013-06-06T23:57:53Z,,,,"I noticed that SERVER_NAME is used but `Flask.run()` doesn't use it. This PR enables run() to use SERVER_NAME if set and will still allow host and port to override whatever is set in SERVER_NAME.
"
760,blueprint.route methods argument typo throws unclear exception ,2013-06-04T10:45:24Z,2015-10-31T21:00:03Z,discussion,TypeError,TypeError: __init__() got an unexpected keyword argument 'method',"_route_ method takes *_options which catches all keyword arguments and passes it further to *url_rule_class_ which -- in case of typo like 'method' instead of 'methods' -- leads to misleading exception:

``` traceback
[..]
File ""/[..]/python2.7/site-packages/flask/app.py"", line 943, in add_url_rule
  rule = self.url_rule_class(rule, methods=methods, **options)
TypeError: __init__() got an unexpected keyword argument 'method'
```
"
759,Broken `g.var is defined` behaviour,2013-06-04T07:58:37Z,2013-06-09T11:07:49Z,,,,"Jinja template test `g.nonexistent_var is defined` returns `True` in Flask latest git version and `False` in Flask 0.9. I think commit 09735369 broke this (`__getitem__` returns `None` instead of raising `AttributeError`).
"
758,"Location header key is unicode in case of relative redirects, breaks uwsgi",2013-06-03T12:47:06Z,2013-06-04T00:31:34Z,,TypeError,TypeError: http header key must be a string,"```
from flask import Flask, redirect
app = Flask(__name__)

@app.route('/blah')
def blah():
    return 'blah'

app.add_url_rule('/', view_func=lambda: redirect('/blah'))
```

Run it like this:

```
uwsgi --plugin python27 --http 0.0.0.0:31337 --module app --callable app --virtualenv .
```

Then access it, e.g. using httpie:

```
http get http://myhost:31337
```

uwsgi shows this error:

```
Traceback (most recent call last):
  File ""/tmp/werkzeug-uwsgi-unicode-headers/lib/python2.7/site-packages/flask/app.py"", line 1829, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/tmp/werkzeug-uwsgi-unicode-headers/lib/python2.7/site-packages/flask/app.py"", line 1814, in wsgi_app
    return response(environ, start_response)
  File ""/tmp/werkzeug-uwsgi-unicode-headers/lib/python2.7/site-packages/werkzeug/wrappers.py"", line 1103, in __call__
    start_response(status, headers)
TypeError: http header key must be a string
```

a `print headers` in `__call__` shows this:

```
[('Content-Type', 'text/html; charset=utf-8'), ('Content-Length', '217'), (u'Location', 'http://myhost:31337/blah')]
```
"
757,Is there best solution for http client connection pool?,2013-06-03T11:09:59Z,2013-06-04T00:26:37Z,,,,"I need client http connection by incoming http request in Flask and looking for best solution with connection pool.
"
756,Flask-doc Korean translation.,2013-06-02T21:47:22Z,2014-03-21T20:48:59Z,,,,"# Flask-doc Korean translation

We translated Flask-Docs User's Guide in to Korean.
## Changes
- move all contents of **flask/docs/** to **flask/docs/en/**
  - however, it is cause some problems in directory structure depth... i know..
- and create a directory **flask/docs/ko/** 
- then we translated all part of User's Guide (English to Korean)
- You can see the HTML build result of document below:
  - http://kswa.codingstar.net:14705/html/

We want to finish this translations, please give me a your comment.

Thank you for flask & flask community!
"
755,teardown_appcontext missing exception when PRESERVE_CONTEXT_ON_EXCEPTION is set,2013-06-02T20:15:25Z,2013-06-04T00:32:02Z,,,,"if the context is preserved for later inspection, it doesn't get popped off the stack immediately, but later, when the next context gets pushed. And when it does eventually get popped, the `teardown_appcontext` handler is called with no exception, instead of the one that was handled by the debugger. this is causing the Flask-SQLAlchemy extension to `commit()` the session even though the `rollback()` method should have been called instead.

(see https://github.com/mitsuhiko/flask-sqlalchemy/issues/131 and https://github.com/mitsuhiko/flask-sqlalchemy/issues/115)

thanks to @mgax for the further investigation of the issue
"
754,non-latin urls python 3,2013-06-02T19:56:51Z,2013-06-02T20:31:43Z,,,,"I believe the issue was fixed on the Werkzeug side, but I think there still may be a bug in Flask.

When I have a url of the form /someurl/<name>, where name is non-ascii (specifically, cyrillic), my app does not fetch the right template/file. It works fine under Python 2.

If I have a top-level URL of the form /тест, and attempt to access it, I get a 404. I believe Werkzeug handles the request correctly, but I don't know at which point it gets mangled into something which doesn't get me to the endpoint (for example, <Request 'http://localhost:1111/ÑÐµÑÑ' [GET]>). That last bit is UTF-8 which is for some reason rendered as ISO-8859-1.

Any suggestions as to where in the framework (either Flask or Werkzeug) this could be happening?
"
753,It does not instantiate MethodView by per request,2013-05-31T03:52:52Z,2013-05-31T23:13:35Z,,,,"in flask/views.py I find the following code will cause request handle to be less efficient. I think that class_args and class kwargs will not be changed after app started, so bind a instance with view function to handle requests will be safe. However,  programmers should not modify the instance status.

``` python
    @classmethod
    def as_view(cls, name, *class_args, **class_kwargs):
        """"""Converts the class into an actual view function that can be used
        with the routing system.  Internally this generates a function on the
        fly which will instantiate the :class:`View` on each request and call
        the :meth:`dispatch_request` method on it.

        The arguments passed to :meth:`as_view` are forwarded to the
        constructor of the class.
        """"""
        def view(*args, **kwargs):
            self = view.view_class(*class_args, **class_kwargs)
            return self.dispatch_request(*args, **kwargs)

        if cls.decorators:
            view.__name__ = name
            view.__module__ = cls.__module__
            for decorator in cls.decorators:
                view = decorator(view)

        # we attach the view class to the view function for two reasons:
        # first of all it allows us to easily figure out what class-based
        # view this thing came from, secondly it's also used for instantiating
        # the view class so you can actually replace it with something else
        # for testing purposes and debugging.
        view.view_class = cls
        view.__name__ = name
        view.__doc__ = cls.__doc__
        view.__module__ = cls.__module__
        view.methods = cls.methods
        return view
```
"
752,FireLogger / FirePython integration?,2013-05-30T23:55:58Z,2013-06-20T08:01:04Z,,,,"The sweet web app console built into [Firebug](https://www.getfirebug.com) is easily accessible to JavaScript programmers via `console.log()`. The [FireLogger](http://firelogger.binaryage.com) extension lets server-side languages like PHP and Python write directly to the same console. In Python's case, via the [FirePython](https://pypi.python.org/pypi/FirePython) module. 

<a href=""http://static.binaryage.com/c079fa5c_shared_img_firelogger4php-mainshot-full.png"" target=""_blank""><img src=""http://static.binaryage.com/ddfd1510_shared_img_firelogger4php-mainshot.png""></a>

Unfortunately, Python integration is web-framework specific. Django is directly supported; Flask is not. FirePython already supports WSGI, so using it with Flask / Werkzeug should be straightforward. But it's not--at least not for me. The documentation basically says ""read the source and figure it out."" Given that I'm a complete novice with Flask's WSGI underpinnings, my efforts have flopped around without success.

So this is a request to those in the Flask community who are conversant with WSGI, Werkzeug, and `logging` to have a look and provide a recipe for how to link these individually great, but as yet not-talking-to-one-another, components. Looking at the code, I'd bet there's a <15 lines of code incantation that would do the trick; I just can't see the right permutation. 

FWIW, this is the opposite of a one-off support request; easy Firebug logging would make an awesome app debugging facility for many Flask / webapp developers.
"
751,"fixing issues found while debugging, fix error in 1 test",2013-05-30T14:04:14Z,2013-05-30T14:08:17Z,,,,
750,Blueprints: Added register_blueprint() method,2013-05-29T15:41:29Z,2014-03-21T20:58:18Z,,,,"Allow blueprints to have nested blueprints registered on them. This allows scenarios like this:

`/users` -> `users_blueprint with url_prefix = '/users'` registered on the app
`/users/<id>` -> `user_blueprint with url_prefix = '/<id>'` registered on the users_blueprint

see commit 5974ed2 for further documentation.

This implements issue #593 by adding @dontcare4free's solution into the `Blueprint` class.
"
749,Flask not working in Virtualenv setup (from S.O.),2013-05-29T13:32:58Z,2013-05-31T23:14:10Z,,,,"SetUp  

> VirtualBox | Ubuntu Server 12.04.2  
> (flaskve)vks@UbSrVb:~/flaskve$ python --version  
> Python 2.7.3  
> ifconfig  
> 192.168.1.100  (the bridge interface on which i interact with VirtualBox) 

code I am trying to run.

```
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello World!'

if __name__ == '__main__':
    app.run(host='192.168.1.100', port=8080, debug=True)
```

When I do 

```
(flaskve)vks@UbSrVb:~/flaskve$ python start.py 
(flaskve)vks@UbSrVb:~/flaskve$
```

It does not run or do anything, it just returns back to command prompt. Although I am running in debug=True mode.  
I then made a new VirtualEnv and install bottle in that. When I tried to run helloworld it shows the same behaviour.  
However I then started the python shell on the same virtualenv, imported bottle modules and ran   

> ```
> >>> from bottle import route, run
> >>> run(host='192.168.1.100', port=8081, debug=True)
> Bottle v0.11.6 server starting up (using WSGIRefServer())...
> Listening on http://192.168.1.100:8081/
> Hit Ctrl-C to quit.  
> ```

What could be problem here ? 
Even debug does not show anything.  
Following link is the output of `python -v start.py`  
http://paste.ubuntu.com/5713138/
"
748,update urls on extensions registry page,2013-05-27T20:17:50Z,2013-06-19T14:14:46Z,,,,"http://flask.pocoo.org/extensions/

every http://packages.python.org url needs to be changed to http://pythonhosted.org, because the former will be shut down eventually (and today it faced dns problems, so I noticed it).
"
747,replace 1/0 by 1 // 0 to get rid of DeprecationWarning (and PEP8 issue),2013-05-26T18:38:57Z,2013-05-26T18:41:28Z,,,,
746,fix typos,2013-05-25T20:02:04Z,2013-05-25T20:06:43Z,,,,
745,fix data types in after_request test,2013-05-25T19:00:52Z,2013-05-25T19:01:49Z,,,,"TODO: why was that bug not causing / displaying an exception somehow?
      should give a TypeError in py 3.3.
"
744,2 small fixes for metaclass and import usage,2013-05-25T18:25:26Z,2013-05-25T18:28:17Z,,,,
743,fix iterator in testsuite helpers,2013-05-25T17:47:23Z,2013-05-25T17:49:26Z,,,,
742,"fix minitwit/flaskr test errors, improve docs about file open mode",2013-05-25T17:14:58Z,2013-05-25T17:35:08Z,,,,"app.open_resource needs to get called with the correct mode param (python3
will read bytes [not str] if the wrong mode is used), add mode param docs.

rv.data is bytes, fix the data type we compare it with to be also bytes
"
741,Fixed typo in app.blueprints docstring,2013-05-25T06:10:51Z,2013-05-25T17:36:10Z,,,,
740,Adds Flask-Classy to extensions registry,2013-05-23T11:54:45Z,2013-05-23T12:20:57Z,,,,
739,Fix leak in leak detection code,2013-05-22T19:12:05Z,2013-05-22T19:16:25Z,,,,"If ensure_clean_request_context found a leak, it would raise an AssertionError
and not clean up the leak, and therefore affect other testcases.
"
738,URLConf like Django -> urls.py,2013-05-22T15:33:54Z,2013-05-31T23:14:46Z,,,,"hi, I have thought that if flask use a URLConfig moudule instead of the derecrator of functions as its router, which like Django urls.py,  and built-in regular-expression will help it make big projects. 
yes or no?
"
737,Fix some literals,2013-05-22T15:10:45Z,2013-05-22T15:11:47Z,,,,
736,some more work on py 3.3 port,2013-05-21T23:38:52Z,2013-05-22T14:20:42Z,,,,"still lots of bytes vs unicode stuff to do

also some strange test fails on 2.7, please have a look
"
735,"introduce six lib, used python-modernize + manual fix",2013-05-18T16:43:06Z,2013-05-18T16:56:31Z,,,,
734,automated change using python-modernize: fix methodattrs,2013-05-18T15:18:53Z,2013-05-18T15:24:46Z,,,,
733,automated change using python-modernize: replace execfile,2013-05-18T15:17:47Z,2013-05-18T15:33:23Z,,,,
732,automated change using python-modernize: use 'as' in except,2013-05-18T15:16:58Z,2013-05-18T15:24:01Z,,,,
731,"document python 2.6 minimum requirement, remove stuff that refers to 2.5",2013-05-18T15:16:02Z,2013-05-18T15:18:05Z,,,,
730,Random website fixes,2013-05-17T16:23:25Z,2013-06-19T14:10:37Z,,,,
729,Move core Flask repositories to an organization,2013-05-17T15:00:44Z,2016-04-05T07:37:37Z,discussion,,,"Now that Github [supports redirects](https://github.com/blog/1508-repository-redirects-are-here), maybe it's time to consider moving Flask, and core extensions (Flask-SQLAlchemy, Flask-OAuth, etc) into an organization.

Thoughts from the team?
"
728,CRUD,2013-05-17T00:44:11Z,2013-05-17T12:19:07Z,,,,
727,Patch external_url_handler example.,2013-05-14T14:38:55Z,2014-03-21T21:03:56Z,,,,"Change Flask.build_error_handler to the correct Flask.url_build_error_handlers.
"
726,added flask-canvas extension,2013-05-09T22:34:35Z,2014-04-09T22:28:18Z,,,,
725,Explicitly state that the jsonify method changes on request,2013-05-06T13:53:54Z,2013-05-31T23:20:06Z,,,,"Hi,

This drove me crazy, until I took a look at the source code of the jsonify method.

In the documentation for jsonify, it should state that it uses the request.is_xhr method to render either compact JSON or pretty print JSON depending on the X-Requested-With header.

Thanks for Flask.
"
724,Added a missing comma,2013-05-04T05:54:22Z,2013-05-14T10:34:07Z,,,,
723,Fixed documentation in 'Design Decisions in Flask',2013-05-03T13:10:32Z,2013-05-03T17:11:18Z,,,,
722,Flask on IIS,2013-05-01T23:08:07Z,2013-05-24T06:43:46Z,,,,"Hi All,

I'm just wondering if anyone has deployed flask restful service on IIS? Is there any guide around this area ?

Thanks,
Ahad
"
721,Second mini-example on flask.pocoo.org might suggest the dev server is production ready,2013-04-24T20:40:59Z,2016-06-02T20:01:47Z,docs,,,"I just realized that the headline ""And easy to setup"" might trick the user into thinking that's all it takes to setup a Flask app _on the production server_.

Of course the exact opposite is stated in the quickstart, but then we never can expect people to actually read documentation.

Independent of whether this is really an issue anybody else but me sees, i think a large ""Get Started"" button on the front page might animate people to read the docs from the beginning.
"
720,Add Sentry to error logging documentation,2013-04-24T20:01:30Z,2016-06-02T21:59:46Z,docs,,,"Thoughts on this?

Django includes it. I might be bias, but pretty much everyone needs it :)
"
719,Syntax highlighting for PyPI long description,2013-04-24T06:47:10Z,2013-05-03T17:11:40Z,,,,
718,Update flask online documentation,2013-04-24T06:32:57Z,2013-06-19T14:20:20Z,,,,"The documentation on Celery integration is found in the source code at:
https://github.com/mitsuhiko/flask/blob/master/docs/patterns/celery.rst

However, it does not appear in the online documentation:
http://flask.pocoo.org/docs/
"
717,Add restful route helpers.,2013-04-19T07:52:13Z,2013-05-14T10:24:28Z,,,,"What do you think about adding these helpers to make it a little more pleasant to deal with the situation where you are defining a restful system where each verb is handled explicitly for many endpoints?  Thanks.
"
716,Request.data should be unicode,2013-04-18T05:37:32Z,2013-06-19T14:19:39Z,,,,"Why isn't `request.data` of type `unicode`? The following test application reveals that the type is `str`.

```
from flask import Flask, request
app = Flask(__name__)

@app.route('/', methods=['POST'])
def index():
    return str(type(request.data))

if __name__ == '__main__':
    app.run(debug=True)
```

This is an issue if, for example, I have a Flask application that receives a JSON string as request data, then attempts to insert that data into a database that requires a unicode value.
"
715,Fixed url_for() incorrect external_url_handler example doc.,2013-04-14T12:32:47Z,2013-04-26T11:04:52Z,,,,
714,Fixed documentation typo,2013-04-14T07:18:50Z,2013-05-03T17:12:01Z,,,,"I've fixed ""assigment"" to ""assignment"".
"
713,Add ability to app.route pluggable views,2013-04-11T16:48:42Z,2017-04-21T17:48:31Z,,,,"### Rationale

Some `Views` could be created and used only once, for example `MethodViews` instead of ""standard"" functions with `if request.method == 'POST'`. This kind of use could be made easier.
### Proposal

Instead of writing:

```
class MyFantasticView(View):
    ...
app.add_url_rule('/fantastic/', view_func=MyFantasticView.as_view('fantastic'))
```

we could make it easier and consistent with other parts of the API:

```
@app.route('/fantastic/', endpoint='fantastic')
class MyFantasticView(View):
    ...
```
"
712,HTML5 Video problem on iOS devices when using Flask development server,2013-04-10T18:03:47Z,2014-10-07T17:28:57Z,,,,"When I render this template and serve it using the development server, it works correctly in Chrome, Safari and IE:

```
<video id=""video"" controls>
  <source src=""{{ url_for('static', filename='videos/trailer.mp4') }}"" type=""video/mp4"">
  <source src=""{{ url_for('static', filename='videos/trailer.webm') }}"" type=""video/webm"">
</video>
```

When I try to load the same page with an iOS device I see the following exception:

```
192.168.0.116 - - [10/Apr/2013 10:42:57] ""GET /static/videos/trailer.mp4 HTTP/1.1"" 200 -
----------------------------------------
Exception happened during processing of request from ('192.168.0.116', 52979)
Traceback (most recent call last):
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py"", line 284, in _handle_request_noblock
    self.process_request(request, client_address)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py"", line 310, in process_request
    self.finish_request(request, client_address)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py"", line 323, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py"", line 641, in __init__
    self.finish()
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py"", line 694, in finish
    self.wfile.flush()
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/socket.py"", line 303, in flush
    self._sock.sendall(view[write_offset:write_offset+buffer_size])
error: [Errno 32] Broken pipe
```

If I replace the template with:

```
<video id='video'
    controls preload='none' 
    poster=""http://media.w3.org/2010/05/sintel/poster.png"">
    <source id='mp4'
    src=""http://media.w3.org/2010/05/sintel/trailer.mp4""
    type='video/mp4'>
    <source id='webm'
    src=""http://media.w3.org/2010/05/sintel/trailer.webm""
    type='video/webm'>
    <source id='ogv'
    src=""http://media.w3.org/2010/05/sintel/trailer.ogv""
    type='video/ogg'>
    <p>Your user agent does not support the HTML5 Video element.</p>
</video>
```

Taken from, http://www.w3.org/2010/05/video/mediaevents.html

The video plays as expected on all devices I have tried it on (iPad and iPhone)
"
711,Note about limitations of static files in blueprints,2013-04-09T11:56:58Z,2014-03-21T20:51:19Z,,,,"Warn about issue 348's issue, at least until it is resolved.
"
710,Documentation page missing from Table of Contents,2013-04-08T17:24:48Z,2014-09-27T14:01:38Z,,,,"The page http://flask.pocoo.org/docs/deploying/others/ is missing from the ToC - this can be seen by clicking ""Prev"" and noticing it doesn't appear on the previous page's ""Next"" link.
"
709,Update README of example Flaskr,2013-04-05T10:50:50Z,2013-05-14T10:25:34Z,,,,"No need to manually initialize the database with a call to `init_db()` as this call is done before `app.run()` in flaskr.py, when you run the file.
"
708,Blueprint.after_request causes Flask to ignore @after_this_request,2013-04-04T15:33:39Z,2013-05-14T10:36:29Z,,,,"`Flask.process_response` will throw away functions is receives from `ctx._after_request_functions` if there is a Blueprint that has used `@after_request`.
"
707,Mention register_error_handler in errorhandler doc,2013-04-04T09:57:34Z,2014-03-21T21:03:02Z,,,,"The documentation for errorhandler gives ""app.error_handler_spec[None][404] = page_not_found"" as an example for adding an error handler without the decorator.  However, register_error_handler appears to be the correct way to do this (added 0.7), and it eliminates the problems with modifying error_handler_spec directly.
"
706,Review flask-mongo-sessions for approval,2013-04-01T14:36:29Z,2014-10-19T18:17:40Z,,,,"Hello.

I want to propose my small extension _flask-mongo-sessions_ to review for approval.
The aim of the extension is to provide your sites with server-side sessions stored in MongoDB.
The project lives [here](https://github.com/ivanyu/flask-mongo-sessions). [Documentation](https://flask-mongo-sessions.readthedocs.org/en/latest/) and [PyPI package](https://pypi.python.org/pypi/flask-mongo-sessions/) are available.

If something is wrong, I'll be glad to receive a feedback.

Regards,
Ivan.
"
705,Ajax example wrapped html attribute values in quotes,2013-04-01T14:02:20Z,2013-04-02T15:37:39Z,,,,"The example didn't work since the html attributes weren't enclosed in quotation marks. It works now!
**update**
This was rather silly of me but well, thanks to @untitaker today I got to know that attributes not enclosed in quotes are allowed as of HTML5.
"
704,Memory leakage: leaking threads,2013-03-29T12:54:00Z,2017-01-31T01:28:31Z,,,,"First, sorry if not Flask-related, but It's the most magical thing we use in our setup, so most suspicious one.

Our setup:

```
Flask==0.9
Jinja2==2.6
Werkzeug==0.8.3
gevent==0.13.8
greenlet==0.4.0
gunicorn==0.17.2
msgpack-python==0.3.0
psycopg2==2.4.6
redis==2.7.2
setproctitle==1.1.7
wsgiref==0.1.2
```

As I can see in gc info, we are leaking threads and Semaphores in it.

The application logic is pretty simple:
- parse data from the user
- store it in postgres and redis
- say user that everything is fine (or not)

And we are running it behind gunicorn. 

I have no idea what could cause such leakage and gc information drives me crazy, because It's too much of it (and most of It are pretty useless).

Guys, if someone faced similar problem or have and idea what's going on, please help or It will drive me crazy.

Thanks in advance,
Vladimir.
"
703,Using dot will be cleaner.,2013-03-28T08:01:37Z,2013-03-28T15:30:24Z,,,,
702,AJAX with jQuery documentation update,2013-03-27T00:04:21Z,2013-05-14T10:25:50Z,,,,"Corrected the link to the Google Developer hosted libraries site in the documentation (docs/patterns/jquery.rst). 

Updated the example to point to the current jQuery 1.9.1.
"
701,Fixed a few typos in the quickstart doc,2013-03-26T21:34:32Z,2013-04-01T03:05:58Z,,,,"Minor typo fixes and slight rewording.
"
700,Add import to jsonify example,2013-03-25T11:35:40Z,2013-04-01T03:05:02Z,,,,"I am new to flask and it took me half an hour to figure out why jsonify doesn't work for me. So answer has pointed out solution for me: http://stackoverflow.com/questions/10727366/jsonify-is-not-defined-internal-server-error . I thought that this import line in example can help out newcomers, like me, in a future.
"
699,Allow UUID encoding in JSONEncoder,2013-03-22T18:12:48Z,2013-05-14T10:36:03Z,,,,"This will allow UUID encoding in `jsonify`. UUID is straightforward to convert.

Hope that helps,

Charles
"
698,MANIFEST.in updates,2013-03-21T02:41:52Z,2013-04-01T03:06:19Z,,,,"- There's no 'tests/' directory, so that rule is invalid
- *.py[co] is in '.gitignore', so those recursive-exclude rules
    are only throwing warnings.
- The prune rules match against directories that no longer exist.

These changes eliminate the warnings that you see when you
`pip install flask`.
"
697,JavaScript setRequestHeader of custom X-value not retrievable via Flask request.headers.get(),2013-03-20T07:02:28Z,2013-03-21T20:56:52Z,,,,"I add a specific header in JavaScript as follows:

``` javascript
var xhr = new XMLHttpRequest();
if (xhr.upload && file.type == ""image/jpeg"" && file.size <= $id(""MAX_FILE_SIZE"").value) {
// start upload
xhr.open(""POST"", $id(""upload"").action, true);
xhr.setRequestHeader(""X-FILENAME"", file.name);
xhr.send(file);
```

...and then I get the request as a POST in my Flask application and dump the headers. Therein is the `X-Filename` header.

``` bash
in POST
Header:  ('Cookie', 'csrftoken=gWf8wkaqKjq1szyCbxSzaxxxxxxxxxx; splashShown1.6=1')
Header:  ('Origin', 'http://localhost:5000')
Header:  ('Content-Length', '8355')
Header:  ('User-Agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/536.28.10 (KHTML, like Gecko) Version/6.0.3 Safari/536.28.10')
Header:  ('Connection', 'keep-alive')
Header:  ('Referer', 'http://localhost:5000/')
Header:  ('X-Filename', 'hamster_jedi.jpg')
Header:  ('Host', 'localhost:5000')
Header:  ('Accept', '*/*')
Header:  ('Accept-Language', 'en-us')
Header:  ('Content-Type', 'application/x-www-form-urlencoded')
Header:  ('Accept-Encoding', 'gzip, deflate')
Header:  ('Referer', 'http://localhost:5000/')
Header:  ('Origin', 'http://localhost:5000')
Header:  ('Content-Length', '294')
Header:  ('User-Agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/536.28.10 (KHTML, like Gecko) Version/6.0.3 Safari/536.28.10')
Header:  ('Connection', 'keep-alive')
Header:  ('Cookie', 'csrftoken=gWf8wkaqKjq1szyCbxSzaxxxxxxxxxx; splashShown1.6=1')
Header:  ('Host', 'localhost:5000')
Header:  ('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8')
Header:  ('Accept-Language', 'en-us')
Header:  ('Content-Type', 'multipart/form-data; boundary=----WebKitFormBoundaryrBnRQT9BcQBT8DPb')
Header:  ('Accept-Encoding', 'gzip, deflate')
```

The X-Filename header is not retrievable using the following code in my simple Flask app.

``` python
        if request.method == 'POST':
        print 'in POST'
        for h in request.headers:
            print ""Header: "", h   # dump shown above
        filename = request.headers.get('X-Filename')
        print 'X-Filename:', filename, ':'
```

The output I receive is:

``` bash
X-Filename: None :
```

I don't know if this is a bug, but I've tried sending and retrieving `X_Filename`, `X_FILENAME`, `X-FILENAME`, and `X-Filename` ... all without luck.
"
696,Raise 400 JSONBadRequest instead of KeyError - Fixes #686,2013-03-19T18:33:21Z,2014-03-21T20:52:34Z,,,,"Please see issue #686.
"
695,Added signal for registration of blueprints,2013-03-19T15:28:11Z,2013-07-25T19:48:46Z,,,,"Fix #691
"
694,Fixing werkzeug secure_filename example ,2013-03-17T22:00:52Z,2013-03-18T21:26:33Z,,,,
693,Added more information about app factories.,2013-03-16T10:14:09Z,2013-03-21T20:57:29Z,,,,
692,fix typo in quickstart guide,2013-03-15T14:31:22Z,2013-03-21T20:57:47Z,,,,
691,Request to add a callback hook while registering blueprint.,2013-03-15T07:43:31Z,2017-05-22T17:15:41Z,blueprints,,,"Should it send a signal while `register_blueprint` been calling? Sometime we may expect to initialize something while a new blueprint been loading.
"
690,Semicolon in filename truncates following characters,2013-03-11T22:41:18Z,2013-03-12T14:18:07Z,,,,"filname:
русс_-{}[](),.ss.»’”›⸃!""#%&',:;?.jpg

request.files misses everything after "":"":

```
  <FileStorage: u'""\u0440\u0443\u0441\u0441_-{}[](),.ss.\xbb\u2019\u201d\u203a\u2e03!\\""#%&\',:' ('image/jpeg')>
```
"
689,Update css.rst,2013-02-28T10:12:33Z,2013-03-06T17:49:23Z,,,,"Improved consistency: lower cased all hexadecimal descriptions of colors.
"
688,Review Flask-Funnel,2013-02-28T06:54:26Z,2014-10-19T18:18:07Z,,,,"This is an extension to help with asset compression/minification.

GitHub Repo:
https://github.com/rehandalal/flask-funnel
"
687,Flash messages signals,2013-02-28T03:58:54Z,2013-03-21T20:58:53Z,,,,"If we send a signal when a template is rendered why not when a message
is flashed? One real world use case is in tests, this signal should make
flash messages expectation easier to implement.
"
686,Raise 400 JSONBadRequest instead of KeyError when accessing JSON request data,2013-02-27T18:24:18Z,2014-02-17T13:51:27Z,,,,"I might implement it if you find the idea interesting: what do you think of raising  `JSONBadRequest` when trying to access an item that does not exist in the JSON data?

Just like `request.form[""absent""]` will raise `BadRequest`, it seems logical that `request.json[""absent""]` raises `JSONBadRequest`.

It is yet unclear to me whether `flask` or `werkzeug` is responsible for it. The `BadRequest` behavior is defined in `werkzeug` but `JSONBadRequest` is defined in `flask`. Also, `flask` already raise `JSONBadRequest` when accessing `request.json` and the JSON parsing failed.

Thanks a lot,

Charles
"
685,Review Flask-Mobility,2013-02-25T08:03:30Z,2014-10-19T18:18:15Z,,,,"This is an extension to help with the development of mobile-friendly sites.

GitHub Repo:
https://github.com/rehandalal/flask-mobility
"
684,Allow most iterables as return values.,2013-02-23T16:24:27Z,2013-02-27T17:19:08Z,,,,"Allows you to directly yield data from the view instead of having to make an inner function whose return value you pass to `flask.Response`.
"
683,Tiny changes to docs,2013-02-22T15:13:25Z,2013-03-06T17:52:47Z,,,,"I've been re-acquainting myself with flask after a number of months and found a couple of things in the docs that I felt could do with a fix.

I won't be offended if you think these are pointless changes and discard - but thought I'd submit a PR anyway...
"
682,"Several issues with the mailing list (librelist), time to look for an alternative?",2013-02-20T10:27:59Z,2015-07-08T22:16:03Z,,,,"There are several issues currently with the mailing list on librelist:
1. The website (http://librelist.com/) is currently down. This might be transient, or this might be because the service has been slowly decaying over the last months.
2. The synchro to http://flask.pocoo.org/mailinglist/archive/ is broken since 2012/10/29.
3. I've been unsubscribed a few months ago due to transient a problem with my DNS. I have since tried many times to subscribe again with the same address, with no success. This may be a very specific problem, or this may be a manifestation of more general issues with the mailing list management system.
4. I have also tried registering with gmail adresses created just for the purpose of reading the Flask mailing list. I've had mixed successes, and I've also noticed that some of the emails I could see on the librelist.com archives were not delivered to my account(s).
5. AFAICT, traffic to the mailing list has been going down over approximately the last 2-3 months. This might be because interest in Flask is slowly fading away (if true, bad news for us Flask users), or this might be because of some of the technical issues I've mentioned above (or others), in which case proactive actions should be taken to keep users engaged.

For these reasons, I'm wondering if moving to another mailing list management platform would not be appropriate.

  S.
"
681,fixes #677 - mistype in docs/quickstart,2013-02-17T22:03:19Z,2013-03-06T17:53:36Z,,,,"Couldn't find anything about pull request policies for this project, but I figured I'd pitch in quick documentation fix while I had some free time. Thanks for your work. ;)
"
680,url_for() problem with CGI and .htaccess,2013-02-17T17:14:18Z,2013-06-19T17:54:38Z,,,,"I've just upgraded to the newest Flask version - 0.9.
I have to use Flask with CGI and I use .htaccess rule to rewrite the urls:
RewriteRule ^([a-zA-Z0-9-\/\?]*)$ main.py/$1 [L]

In version 0.8 I didn't have any problems but now url_for() doesn't rewrite the rule and urls come with 'main.py' - http://localhost/zaemide/main.py/funding
"
679,"Problem with sending form with enctype=""multipart/form-data"".",2013-02-17T14:13:24Z,2015-03-31T13:57:57Z,,,,"I am using Flask 0.8 on developing server WAMP.
On production server I have no problem uploading images. But when I send the form to the localhost I get ClientDisconnected: 400: Bad Request.

It is enough just to have the enctype=""multipart/form-data"" atribute to get the error, doesn't matter if there is a file uploaded or not. Wnen I try to get request.form or request.files I get error.

I tested to upload with PHP on the same server and it works. There must be something between Flask and WAMP.

---

The imports:

from flask import Flask, request, session, g, redirect, url_for, abort, render_template, flash, _request_ctx_stack, current_app, get_flashed_messages
from werkzeug import secure_filename

---

The handler:

@app.route('/upload', methods=['GET', 'POST'])
@requires_admin
def upload():
 if request.method == 'POST':
  id = request.form['id']
  img = request.files['img']
  ...

---

The traceback:

Traceback (most recent call last):
File ""C:/wamp/www/zaemide/main.py"", line 203, in edit
form = request.form.copy()
File ""C:\wamp\www\vedacon\werkzeug\local.py"", line 336, in **getattr**
return getattr(self._get_current_object(), name)
File ""C:\wamp\www\vedacon\werkzeug\utils.py"", line 77, in __get__
value = self.func(obj)
File ""C:\wamp\www\vedacon\werkzeug\wrappers.py"", line 383, in form
self._load_form_data()
File ""C:\wamp\www\vedacon\flask\wrappers.py"", line 119, in _load_form_data
RequestBase._load_form_data(self)
File ""C:\wamp\www\vedacon\werkzeug\wrappers.py"", line 318, in _load_form_data
data = parser.parse_from_environ(self.environ)
File ""C:\wamp\www\vedacon\werkzeug\formparser.py"", line 164, in parse_from_environ
return self.parse(stream, mimetype, content_length, options)
File ""C:\wamp\www\vedacon\werkzeug\formparser.py"", line 188, in parse
content_length, options)
File ""C:\wamp\www\vedacon\werkzeug\formparser.py"", line 100, in wrapper
stream.exhaust()
File ""C:\wamp\www\vedacon\werkzeug\wsgi.py"", line 782, in exhaust
self.read(chunk)
File ""C:\wamp\www\vedacon\werkzeug\wsgi.py"", line 800, in read
return self.on_disconnect()
File ""C:\wamp\www\vedacon\werkzeug\wsgi.py"", line 768, in on_disconnect
raise ClientDisconnected()
ClientDisconnected: 400: Bad Request

Thanks!
"
678,Flask exception logging has a catch-22,2013-02-15T23:10:15Z,2015-10-14T02:16:19Z,,,,"Flask only logs in debug mode.

`handle_exception` raises an exception in debug, else returns an `InternalServerError` and logs the exception.

Except that by default, it can't log the exception because it's in debug.

This is mostly just an annoyance as long as you are running with `run_simple`, as the Werkzueg debugger will log the exception that got re-raised in `handle_exception` and provide you with a great debugging interface. However, if you switch to a different WSGI engine, you end up with no way to see a traceback.

In app.py handle_exception:

```
    if self.propagate_exceptions:
        # if we want to repropagate the exception, we can attempt to
        # raise it with the whole traceback in case we can do that
        # (the function was actually called from the except part)
        # otherwise, we just raise the error again
        if exc_value is e:
            raise exc_type, exc_value, tb
        else:
            raise e

    self.log_exception((exc_type, exc_value, tb))
    if handler is None:
        return InternalServerError()
    return handler(e)
```
"
677,Minor typo in quickstart,2013-02-14T17:17:26Z,2013-03-06T17:53:37Z,,,,"Go to the quickstart guide:

http://flask.pocoo.org/docs/quickstart

Search for ""get the result object"". I suspect it should be ""get the response object"" because the subsequent code fragment is dealing with the response object.
"
676,Database improperly closed in the test case within this tutorial,2013-02-11T13:33:43Z,2013-05-14T10:49:50Z,,,,"os.unlink(flaskr.DATABASE) causes the actual application database to be
purged; whereas, I reckon, one wants the _test_ database to be removed.
So every time I ran it, the test passed, but ended up crashing the live
app for want of a valid database.

I avoided using the sample code in examples/flaskr thus far, as I chose
to type out code from the turorial docs. The actual example code looks
good - at least to my beginner's eye.
"
675,Create www.frockdesigns.com,2013-02-08T07:29:37Z,2013-02-08T18:58:53Z,,,,"Logo design from the #1 online design marketplace. frockdesigns gives you access to dozens of unique logo design concepts created by professional designers

Online Creative Signal
"
674,Need instructions about pylint/pychecker setup,2013-02-08T06:46:03Z,2013-08-02T10:31:20Z,,,,"Any attempt to run pylint or pychecker on anything that uses any Flask extension, e.g.:

```
from flask.ext.login import user_logged_in, user_logged_out
```

 produces errors like the following:

```
F:  5,0: Unable to import 'flask.ext.login'
E:  5,0: No name 'login' in module 'flask.ext'
```

Some documentation is needed how to coerce pylint and pychecker into understanding how flask.ext.login is imported.
"
673,Can't jsonify list object,2013-02-01T13:03:29Z,2013-02-04T11:51:34Z,,ValueError,ValueError: dictionary update sequence element #0 has length 8; 2 is required,"JSON standard (http://json.org/) say, that any entity can be object or array.
When I try:

```
jsonify(['a','b','c', 'd', 'e', 'f'])
```

I got an error:

```
ValueError: dictionary update sequence element #0 has length 8; 2 is required
```

I think it is not a correct answer from flask. It should returns a JSON-object with array.
"
672,Curious about logo images in your web sites,2013-01-28T09:52:25Z,2014-02-20T18:31:22Z,,,,"I am very curious about logo images in the pages of Flask site, such as:

![](http://flask.pocoo.org/static/snippets.png)
![](http://flask.pocoo.org/static/community.png)

...

This black and white style is very attractive to me, and I wonder how to generate this style image.

Would you give me some tips? Thanks.
"
671,`redirect` calls are not caught by `handle_http_exception` while RequestRedirect is.,2013-01-25T19:33:11Z,2017-06-01T05:45:41Z,,,,"I'm using Flask to implement an app that returns JSON for most requests including error responses for bad requests, page not found, etc.

To do this I wrapped the default `handle_http_exception` method of the app similar to how it was handled in the Flask_exceptional module https://github.com/jzempel/flask-exceptional/blob/master/flask_exceptional.py so that I could return the Response as JSON rather than the default generated HTML.

What I found was that any views that used the Flask `redirect` function rendered the redirect as HTML. However, if you add a route which ends with a slash, Werkzeug's routing code will automatically fire off a `RequestRedirect` which would get caught by the `handle_http_exception` and rendered as JSON.
"
670,Prefer attachment_filename for mime type guessing in send_file,2013-01-25T16:32:46Z,2013-01-27T00:39:23Z,,,,"In send_file you can explicitly set the filename using attachment_filename, but when attempting to guess the mimetype previously the code would prefer the real filename, this reverses that preference.

Our use case is that the real filename on disk is just a hash, and so the mime type cant be guessed anyway. You can of course explicitly set the mime type as well, but imo if a filename is explicitly passed in that should take precedence
"
669,update README to markdown,2013-01-24T23:53:19Z,2013-01-25T02:55:21Z,,,,"Most of the README was already in markdown, replaced the `~` with`##` headers and the opening section with `#` header. Here is a screenshot or you can checkout the live formatted doc at https://github.com/schneems/flask.

![](http://cl.ly/image/1L241I0E3f0R/content.png)
"
668,"babel can't extract text from template with ""with"" statement",2013-01-18T06:30:39Z,2013-01-27T00:53:50Z,,,,"my template has the following code:

```
{% with messages = get_flashed_messages() %}
  {% if messages %}
  <div class=""alert alert-info"">
    <a class=""close"" data-dismiss=""alert"">&times;</a>
    <ul>
    {% for message in messages %}
      <li>{{ message }}</li>
    {% endfor %}
    </ul>
  </div>
  {% endif %}
{% endwith %}
```

but pybabel can't extract text from this file unless I remove the {% with %} statement. 

is there any mistake I made in this case?
"
667,adding `_scheme` parameter to `url_for`,2013-01-17T23:13:13Z,2013-01-25T02:57:45Z,,,,"In order to better facilitate generation of URLs that make use of an HTTPS URL
scheme this patch adds a parameter with this specific purpose in mind. To
achieve this we explicitly pass in a param, `_scheme='https'`, and then set the
`url_scheme` attribute of our `MapAdapter` instance appropriately.

Importantly, `_external=True` must be set in order for this to work properly.
As such, failure to do so results in a `ValueError` being raised.
"
666,The mailing list for Flask hosted on librelist is not accepting any questions.,2013-01-17T15:49:43Z,2015-03-31T13:53:30Z,,,,
665,Update docs/patterns/deferredcallbacks.rst,2013-01-15T17:57:22Z,2013-01-25T03:02:30Z,,,,"Fix example code in Deferred Callback docs: don't set response upon executing callback

To fix this issue: https://github.com/mitsuhiko/flask/issues/664
"
664,problem with example in deferred callbacks documentation,2013-01-14T23:02:55Z,2013-01-27T00:54:06Z,,,,"I found this issue when trying out the example code the Deferred Callbacks pattern:
http://flask.pocoo.org/docs/patterns/deferredcallbacks/

In the for loop of the call_after_request_callbacks() function, it is setting the response to the return value of callback function.  Then later, under Practical Example, the remember_language() function implicitly returns None.  This will likely cause a problem on the second iteration of the for loop.

This can be fixed by either 1) not setting the response to the callback returned value, or by b) returning the response in the remember_language() function.
"
663,Double '/' in URLs causes static content not to load?,2013-01-10T04:25:52Z,2013-01-27T00:50:48Z,,,,"This static content includes: JavaScript, CSS &etc.

E.g.: http://flask.pocoo.org/docs/patterns// vs. http://flask.pocoo.org/docs/patterns/
"
662,AppEngine environments: Flask ExtensionImporter class (flask.ext) is getting in the way when flask extensions import external modules ,2013-01-06T00:14:45Z,2013-01-27T00:51:57Z,,,,"Several people have noted issues when installing/updating Flask extensions that use the new style flask.ext path, specifically in Google AppEngine environments.

Relevant discussion and troubleshooting here:  https://github.com/thadeusb/flask-cache/issues/38

What is happening (my understanding):
1. flask extension (ex: Flask-Cache) imports a module (ex: ""from jinja2 import nodes"")
2. in the extension's context, ExtensionImporter class has added its own path (flask.ext) to sys.meta_path
3. When ExtensionImporter load_module() is run, it fails to load the external module (with an ImportError?) and thus bombs

Troubleshooting notes:
- this may be caused by AppEngine's dev_appserver_import_hook.py, line 1577, in LoadModuleRestricted
- The application will run normally if you comment out line 86 in flask/exthook.py ""raise ImportError('No module named %s' % fullname)"" or by reverting to the the old flaskext path

Any assistance is highly appreciated.
"
661,@app.teardown_request function doesn't called in debug mode [NOT-A-BUG],2013-01-05T21:57:19Z,2013-01-27T00:56:07Z,,,,"UPD: not a bug, see https://github.com/mitsuhiko/flask/issues/661#issuecomment-11975645

```
from flask import Flask

app = Flask('teardown')

@app.teardown_request
def shutdown_session(err):
    print repr(err)

@app.route('/')
def index():
    raise ValueError('test exc')

if __name__ == '__main__':
    app.run()
```

So, when I open index page and see 500 error page, console output is `ValueError('test exc')`. But when I start app in debug mode, eg

```
if __name__ == '__main__':
    app.run(debug=True)
```

Output is `None`, when expected `ValueError('test exc')`.

This is important for me, because I use `teardown_request` for sqlalchemy transaction management like

```
@app.teardown_request
def shutdown_session(exception):
    if exception:
        db.session.rollback()
    else:
        db.session.commit()
```
"
660,WSGI specification has finalized for Python 3,2013-01-04T09:13:05Z,2013-01-25T03:01:43Z,,,,"Mention Python 3.x is not supported
"
659,"""flaskext.mail"" documentation",2013-01-03T17:08:23Z,2013-06-19T14:53:57Z,,,,"I found two pages on the documentation with a problem on a import explanation

``` python
from flaskext.mail import Mail
```

And the correct should be (with a dot between flask and ext):

``` python
from flask.ext.mail import Mail
```

The pages with this wrong import are: http://packages.python.org/flask-mail/ and http://flask.pocoo.org/snippets/85/
"
658,The problem with _micro_ frameworks is a lack of structure,2013-01-03T07:54:41Z,2013-01-27T00:52:53Z,,,,"So here is my pain — there are no structure restrictions. Single file is fine until there are more than X lines. And apps do grow. Very fast. No restrictions are good, but structure skeletons are awesome. Let me explain it...

I had big problems w/ re-structuring my app so that everything is not in a single file. I'm just a newbie programmer, not an architect. At least for now. Micro frameworks should improve my productivity, not forcing me to structure things.

I suggest to create skeletons / boilerplate for possible ways to structure app. They could be sorted for estimated size of the product (tiny, small, medium, big & huge) plus used components (ORM, template engine, test framework, form abstraction etc.). What do you think?
"
657,Add template_global decorator,2013-01-02T17:14:34Z,2013-01-27T00:46:24Z,,,,"Adds a decorator to allow developer to register global functions.
"
656,Dont show tweets with the same text tweeted by different users,2012-12-27T19:12:19Z,2013-01-25T04:14:13Z,,,,"repetitively but show the text once and the tweeters and the retweeters
"
655,"SQLite doesn't recognize data type ""string""",2012-12-26T05:10:19Z,2012-12-27T15:23:30Z,,,,"If you submit a field with an integer and commit to DB as a string, SQLite will cast it to an integer, which can cause problems.

I was making something based on the Flask tutorial and I couldn't figure out why my data was coming back as type ""int"" when I had inserted to the DB as ""string"".

The field needs to be something that has text-affinity in SQLite, so I changed it to type ""text"".

Hope this helps?
"
654,Fixing my own pull request #647,2012-12-17T20:34:09Z,2012-12-27T15:20:39Z,,,,"Wrote ""stdin"" instead of ""stdout"".

Fixes #647
"
653,docs/extensiondev: Use `current_app` instead of `self.app`,2012-12-13T10:05:10Z,2012-12-27T15:22:05Z,,,,
652,Add troubleshooting sphinx tip,2012-12-12T23:47:39Z,2012-12-13T00:05:55Z,,,,"I had sphinx installed system-wide, and I could not build the docs despite running `python setup.py develop` in my virtualenv. 

I eventually figured out that sphinx installed system wide wouldn't place nicely with the Flask package installed in the virtualenv. This wasn't obvious from the provided error message, so I'd like to improve the error message. 
"
651,Cannot start Flask application in a thread other than main,2012-12-12T17:30:57Z,2013-01-27T01:11:17Z,,,,"Starting a Flask application in a thread other than the main thread does not work and produces the following:
- Running on http://0.0.0.0:5000/
  Exception in thread flask_application_thread:
  Traceback (most recent call last):
  File ""/opt/python2.7/lib/python2.7/threading.py"", line 551, in __bootstrap_inner
    self.run()
  File ""harness.py"", line 23, in run
    self.__application.run(host = '0.0.0.0', debug = True)
  File ""/opt/python2.7/lib/python2.7/site-packages/Flask-0.9-py2.7.egg/flask/app.py"", line 739, in run
    run_simple(host, port, self, **options)
  File ""/opt/python2.7/lib/python2.7/site-packages/Werkzeug-0.8.3-py2.7.egg/werkzeug/serving.py"", line 615, in run_simple
    run_with_reloader(inner, extra_files, reloader_interval)
  File ""/opt/python2.7/lib/python2.7/site-packages/Werkzeug-0.8.3-py2.7.egg/werkzeug/serving.py"", line 529, in run_with_reloader
    signal.signal(signal.SIGTERM, lambda *args: sys.exit(0))
  ValueError: signal only works in main thread

Is there a workaround. I've tried using multiprocessing.Process which is no an option in my application.

Thanks.
"
650,"wiki: Large app how to, incompete and not runnable",2012-12-12T12:34:04Z,2013-01-27T01:10:39Z,,,,"I thought this would be a nice skeleton for a beginner, but it's incomplete.
What should go the following?

  /app/users/**init**.py

Perhaps I'm just ignorant about python module system...
"
649,Fix a typo in the deferred-callbacks docs.,2012-12-11T22:12:57Z,2012-12-27T15:22:25Z,,,,
648,Problem with non-escaped chars in URL.,2012-12-11T15:46:39Z,2013-01-27T00:59:49Z,,,,"Is it a project's decision or a bug?  Please, check it out:

Gist:
https://gist.github.com/4259170
"
647,Added hint about print statements in CGI.,2012-12-10T17:38:48Z,2012-12-13T00:06:18Z,,,,"Fix #646
"
646,Please improve CGI documentation slightly.,2012-12-10T10:47:46Z,2012-12-13T00:06:19Z,,,,"Please mention on web page that when deploying Flask on CGI, you can not have any random ""print"" in the source code, it will mess up the output.

http://stackoverflow.com/a/13799083/193892
"
645,Missing linebreaks on homepage,2012-12-02T19:48:45Z,2013-01-27T01:11:38Z,,,,"The frontpage example on flask.pocoo.org seems to miss linebreaks?
http://screencast.com/t/akBXxkqJ
"
644,user could customs non-OK entry body,2012-12-02T10:11:17Z,2013-01-27T01:10:30Z,,,,"for example,

```
flask.abort(400, 'missing parameter username')
```
"
643,Change readme file to use the reStructuredText format,2012-12-01T20:42:44Z,2012-12-27T15:22:56Z,,,,
642,Flaskr tests - 3 errors,2012-11-29T06:09:39Z,2012-11-29T07:44:40Z,,ImportError,ImportError: cannot import name _app_ctx_stack,"Hello,

I'm using python (default version 2.7.3) on Ubuntu, I installed flask

and then I'm running the tests of Flaskr and I got 3 errors.

``` bash
Traceback (most recent call last):
  File ""flaskr_tests.py"", line 12, in <module>
    import flaskr
  File ""/home/user/flaskr/flaskr.py"", line 14, in <module>
    from flask import Flask, request, session, g, redirect, url_for, abort, \
ImportError: cannot import name _app_ctx_stack
```

I don't really understand how Flask doesn't have an object that Flaskr request, how could I fix it ?

Thanks in advance.
"
641,Design issue with flask.logger.create_logger().,2012-11-29T03:10:40Z,2017-07-28T22:27:45Z,logging,,,"[`flask.logger.create_logger()`](https://github.com/mitsuhiko/flask/blob/master/flask/logging.py#L17) destroys any log handlers that have been added previously. Because the creation of the logger (and the calling of `create_logger()` that this entails) is [deferred until the first time `flask.app.logger` is accessed](https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L548), this can lead to the destruction of log handlers that were purposefully added by the application.

I just tracked down a bug due to this that took me a very long time to debug because I had no idea this went on. To my eyes, it looked like the standard logging module was breaking at a seemingly random moment (it wasn't even my code that was accessing `app.logger`, it was [Flask's internal error handling code](https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L1347)). Therefore, I think one of two courses of action should be taken:
- Because this behavior of `create_logger()` seems very strange, perhaps it should be removed. As in don't delete log handlers that are already in place when `create_logger()` gets called.
- If there is a good reason for this behavior to remain, it should be documented clearly in `app.logger`'s docstring.

I am happy to carry out either (or some other) change and send a pull request.
"
640,Use stevedore to load extensions,2012-11-26T16:02:52Z,2013-01-25T04:12:23Z,,,,"I noticed stevedore when I updated to latest virtualenvwrapper recently.
I think it's nice to be able to do something like this:

``` python
from setuptools import setup

setup(
    name='Flask-SuperExtension',
    version='0.0.0',
    description='Super Extension',
    py_modules=['super_extension'],
    install_requires=['Flask'],
    entry_points={
        'flask.ext': [
            'super_extension = super_extension',
            ],
        }
)
```

I'm just throwing this out as an idea since it would add an extra dependancy.
"
639,Get HTTP_REFERER in flask,2012-11-25T16:12:39Z,2013-01-27T00:53:33Z,,,,"Hello

First, sorry for my english.

I have problem. I need HTTP_REFERER, like php to hotlinks protection.

in request.headers i have
Content-Length:
User-Agent: Mozilla/5.0 (Windows NT 5.1; rv:16.0) Gecko/20100101 Firefox/16.0
Connection: keep-alive
Host: dbooks.local:8080
Cache-Control: max-age=0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,_/_;q=0.8
Accept-Language: pl,en-us;q=0.7,en;q=0.3
Content-Type:
Accept-Encoding: gzip, deflate

But i don't have HTTP_REFERER.
What i can do with this?
"
638,Added Facebook group link.,2012-11-25T15:37:16Z,2012-11-27T15:50:26Z,,,,
637,Flask not sending 304 Not Modified even if last_modified<=if_modified_since.,2012-11-25T06:48:49Z,2012-12-10T05:23:23Z,,,,"Here's my view.

``` python
@app.route('/image/<file_id>')
@login_required
def images(file_id):
    file = file_like_object_here
    rv = send_file(file,
            mimetype=file.content_type,
            # as_attachment=True,
            attachment_filename=file.filename,
            add_etags=False,
            conditional=True
        )
    rv.last_modified = file.upload_date
    app.logger.debug(rv.last_modified)    # 2012-11-24 08:51:27
    app.logger.debug(request.if_modified_since)    # 2012-11-24 08:51:27
    app.logger.debug(rv.last_modified<=request.if_modified_since)    # True
    return rv
```

Here is the HTTP:
Request

```
Request URL:http://127.0.0.1:5000/image/50b0855f2c2d291cbe896e56
Request Method:GET
Status Code:200 OK

GET /image/50b0855f2c2d291cbe896e56 HTTP/1.1
Host: 127.0.0.1:5000
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: session=""lde2mnK7NSOGS8DqcU5YVgTkVEc=?_expires=STEzNTY1MDE0OTgKLg==&_permanent=STAxCi4=&username=VmFhYWFhCnAxCi4=""
If-Modified-Since: Sat, 24 Nov 2012 08:51:27 GMT
```

Response:

```
HTTP/1.0 200 OK
Content-Type: image/png
Cache-Control: public, max-age=43200
Expires: Sun, 25 Nov 2012 18:43:12 GMT
Last-Modified: Sat, 24 Nov 2012 08:51:27 GMT
Connection: close
Server: Werkzeug/0.8.3 Python/2.7.3
Date: Sun, 25 Nov 2012 06:43:12 GMT
```

Ideally it should return `304 Not Modified` but you can see that's not happening.
"
636,Ended your paragraph tag.,2012-11-17T18:13:43Z,2012-12-13T00:18:25Z,,,,
635,Replace obsolete website reference with successor,2012-11-13T15:42:21Z,2012-11-16T01:55:32Z,,,,
634,correcting typo,2012-11-13T00:59:50Z,2012-11-16T01:56:45Z,,,,
633,send_file breaks when flask app run as nobody,2012-11-12T20:04:09Z,2013-01-27T01:16:43Z,,,,"on my system I am trying to run a flask app with minimum permissions. In this case, it is run as:

```
sudo -u nobody python flask_webapp.py
```

all the files in its directory are readable by everyone, but some parent directories are not. The app fails whenever I try to serve up a file, either indirectly by trying to access http://myapp.com/static/test.html, or directly by the following code:

```
@app.route('/test')
def web_app():
    return send_file(""./static/test.html"")
```

The problem is, flask converts all relative paths to absolute paths in the send_file function. This breaks if it doesn't have directory read access all the way to the system root.

The problem seems to arise from the following lines, 543 to 545 of helpers.py

```
if filename is not None:
    if not os.path.isabs(filename):
        filename = os.path.join(current_app.root_path, filename)
```
"
632,session_transaction does not setup request,2012-11-10T10:17:20Z,2012-12-27T15:27:19Z,,,,"session_transaction() is failing to initialize the request by calling before_request, but is successfully calling the teardown functions, resulting in objects that have never been created to be accessed. This additional test also makes 11 other tests fail because of some stack corruption after the new test fails.

Patch pending.
"
631,Add config parser to blueprints,2012-11-08T23:11:08Z,2016-04-14T07:18:33Z,blueprints,,,"I think that it would be useful to be able to add configuration items to a blueprint and then have those merged into the app configuration on load. My thinking is simply that there might be configurations specific to your blueprint that should have default values stored as part of the blueprint. I suppose this feature could also lead to use cases where people make blueprint simply to hold different configuration for the application.
"
630,Fix #623,2012-11-08T19:57:47Z,2013-01-25T04:13:31Z,,,,
629,Use current_app in Flask_SQLite3 example,2012-11-07T09:42:57Z,2013-01-27T00:39:59Z,,,,"The Flask_SQLite3 example used in the Flask Extension Development
documentation cannot use self.app if attached to the application with
init_app. This is fixed by using flask.current_app.

Probably needs some additional note in the text too.
"
628,Benchmarking fails with 3 requests,2012-11-07T05:47:29Z,2013-01-27T01:17:35Z,,,,"Hi,
I am running a local flask instance on my mac. I thought I would see how flask stood up to apache benchmark (ab). I threw 10 requests with one concurrent user and it fails! 

Is this something thats expected?

ab -n10 -c1 -q http://127.0.0.1:5000/
This is ApacheBench, Version 2.3 <$Revision: 655654 $>
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking 127.0.0.1 (be patient)...apr_socket_recv: Connection reset by peer (54)
Total of 2 requests completed

In my debug console I see three requests:

127.0.0.1 - - [06/Nov/2012 21:41:20] ""GET / HTTP/1.0"" 200 -
127.0.0.1 - - [06/Nov/2012 21:41:20] ""GET / HTTP/1.0"" 200 -
127.0.0.1 - - [06/Nov/2012 21:41:20] ""GET / HTTP/1.0"" 200 -

and my code:

``` python
from flask import Flask
from flask import render_template, send_from_directory
import os

app = Flask(__name__)
app.debug = True

@app.route('/favicon.ico')
def favicon():
    return send_from_directory('.', 'favicon.ico')

@app.route(""/"")
def index():
  return render_template(""index"")

if __name__ == ""__main__"":
  app.run()
```

index:

``` html
<!DOCTYPE HTML>
<html>
  <head>
    <meta http-equiv=""content-type"" content=""text/html; charset=utf-8"">
    <title></title>

  </head>
  <body>

  </body>
</html>
```
"
627,"Support Python 3 using 2to3 - passes tests with py25-27,py32,pypy",2012-11-06T02:54:46Z,2013-06-19T14:30:00Z,,,,"This branch supports Python 2.5 through 3.2, passes all the tests when used with [2to3 port of Werkzeug](https://github.com/mitsuhiko/werkzeug/pull/231) and [itsdangerous](https://github.com/mitsuhiko/itsdangerous/pull/14) (In Python 3.1, it leaks memory for some reason)
"
626,correcting typo,2012-11-05T23:31:12Z,2012-11-05T23:51:04Z,,,,
625, Use sqlite3.Row factory in Flaskr (#588),2012-11-05T00:11:47Z,2013-01-25T04:22:02Z,,,,"As pointed out in issue #588 sqlite3.Row should be used instead of using casting to dict(). Also altered the ""Easy Querying"" Patterns example to include the more correct way to return rows as dicts. Did not touch Tutorial examples (""Views""), as these are not up to date with the current Flaskr code, and the ""Show Entries"" section points out the ""Easy Querying"" section on how to convert to a dict().
"
624,missing ' in templating example,2012-11-03T12:06:43Z,2012-11-16T01:58:36Z,,,,"Results in SyntaxError: EOL while scanning string literal
"
623,missing text in url_for() app context RuntimeError message,2012-11-02T18:56:35Z,2013-01-25T04:13:31Z,,,,"In `flask/helpers.py`, near the top of `url_for()` there is this code:

``` python
    appctx = _app_ctx_stack.top
    reqctx = _request_ctx_stack.top
    if appctx is None:
        raise RuntimeError('Attempted to generate a URL with the application '
                           'context being pushed.  This has to be executed ')
```

It looks like that `RuntimeError` message is cut off.  This has to be executed when? :)
"
622,Review Flask-S3,2012-10-31T23:23:07Z,2014-10-19T18:18:59Z,,,,"Hi, I recently wrote an extension for making it easy to serve all your app's static assets from Amazon S3. It's called [flask-s3](https://github.com/e-dard/flask-s3); the docs are located [here](http://flask-s3.readthedocs.org/en/latest/)

Would be great to have this extension included in the extension registry. I think that it meets all the requirements, but let me know if it's missing anything.
"
621,Local extensions fail to import,2012-10-25T10:54:57Z,2012-10-25T20:41:52Z,,,,"I have a Flask 0.9 project that has all dependencies stored locally beside my app.py file. The intention is to keep everything self-contained within a version control repository so anyone using or contributing to it won't need to make any additional installations.

This being the case, I want to use some Flask extensions and decided try manually installing the Flask-Login extension. I copied the `flask_login.py` file to the `flask/ext` directory and tried to `import flask.ext.login` from my app.py file the same way the example does. I got an `ImportError: No module named login`. I then tried `import flask.ext.flask_login` and that too failed.

The solution I wound up with from Stack Overflow was to comment out the `setup()` function in the `flask/ext/__init__.py` file and `import flask.ext.flask_login` directly in my app.py file.

http://stackoverflow.com/questions/13065682/how-to-manually-install-flask-extensions

I would _really_ like to be able to use an unmodified version of Flask locally and without a virtual environment that can still import extensions the expected way.
"
620,Documentation on IIS deployment.,2012-10-20T18:30:33Z,2015-10-31T21:51:13Z,docs,,,"Just for the record.
- http://feedback.flask.pocoo.org/message/305
- http://feedback.flask.pocoo.org/message/289
"
619,Fix missing argument in find_module of flaskext_compat.py,2012-10-20T16:20:18Z,2014-10-07T17:01:17Z,,,,"Add back path=None argument into find_module. This fixes #618 and revert #524.
"
618,Issue #524 was not one and flaskext_compat does not work anymore,2012-10-20T16:03:16Z,2014-10-07T17:01:17Z,,,,"find_module is a method automatically called. Removing the path argument, even if not used, may cause (and causes) error such as: 

> from flask.ext.babel import Babel
> TypeError: find_module() takes exactly 2 arguments (3 given)
"
617,"jQuery example: submit on enter, focus field on load, ajax to callback function, "" to '.",2012-10-19T16:18:47Z,2013-01-25T04:21:32Z,,,,"- Highlight first input on page load
- Enter sends submit request
- After submit first input refocused, selected
- Fix double quote -> single quote
- Submit is a callback function

![screenie](http://i.imgur.com/GVvPb.png)
"
616,FR: Make stream_template from the docs available in Flask,2012-10-19T15:05:18Z,2013-02-02T12:52:49Z,,,,"http://flask.pocoo.org/docs/patterns/streaming/#streaming-from-templates

It would be nice to have the stream_template method included in Flask, maybe unified with render_template
"
615,UnicodeDecodeError when passing session to simplejson dumps,2012-10-19T11:09:26Z,2012-10-19T23:39:34Z,,UnicodeDecodeError,UnicodeDecodeError: 'utf8' codec can't decode byte 0xa0 in position 7: invalid start byte,"Looks like Flask is sending simplejson bad arguments? Added a debug statement right before the call to dumps crashes:

```
DEBUG in json [/usr/local/lib/python2.7/dist-packages/flask/json.py:96]:
{'csrftoken': 'd3e5fb185f52567dce2c41ef4ca59959cd2a6a12', '_id': '\x12A\x07^D2>\xa0ct\xaa\r\xf6\xf7\xa5""'}
--------------------------------------------------------------------------------
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1758, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1746, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1744, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1419, in full_dispatch_request
    response = self.process_response(response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 1623, in process_response
    self.save_session(ctx.session, response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/app.py"", line 818, in save_session
    return self.session_interface.save_session(self, session, response)
  File ""/usr/local/lib/python2.7/dist-packages/flask/sessions.py"", line 291, in save_session
    val = self.get_signing_serializer(app).dumps(dict(session))
  File ""/usr/local/lib/python2.7/dist-packages/itsdangerous.py"", line 424, in dumps
    return self.make_signer(salt).sign(self.dump_payload(obj))
  File ""/usr/local/lib/python2.7/dist-packages/itsdangerous.py"", line 519, in dump_payload
    json = super(URLSafeSerializerMixin, self).dump_payload(obj)
  File ""/usr/local/lib/python2.7/dist-packages/itsdangerous.py"", line 407, in dump_payload
    return self.serializer.dumps(obj)
  File ""/usr/local/lib/python2.7/dist-packages/flask/sessions.py"", line 70, in dumps
    return json.dumps(_tag(value), separators=(',', ':'))
  File ""/usr/local/lib/python2.7/dist-packages/flask/json.py"", line 97, in dumps
    return _json.dumps(obj, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/simplejson/__init__.py"", line 334, in dumps
    **kw).encode(obj)
  File ""/usr/local/lib/python2.7/dist-packages/simplejson/encoder.py"", line 237, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File ""/usr/local/lib/python2.7/dist-packages/simplejson/encoder.py"", line 311, in iterencode
    return _iterencode(o, 0)
UnicodeDecodeError: 'utf8' codec can't decode byte 0xa0 in position 7: invalid start byte
```
"
614,Minor fix to views.py testsuite.,2012-10-16T21:02:34Z,2012-10-17T23:36:48Z,,,,"The builder/ci server for github is using python 2.5, the views.py testsuite uses the with

statement, and thus flask/testsuite/views.py requires

from **future** import with_statement

at the beginning.
"
613,Fix #611,2012-10-16T19:58:23Z,2012-10-17T23:37:16Z,,,,"Minor but confusing typo in tutorial.
"
612,blueprint options from register_blueprint,2012-10-16T18:40:46Z,2013-03-26T15:13:06Z,,,,"I've written a flask app that uses a blueprint to implement an API. When I create the server, I use register_blueprint to make the api available. I added a url_prefix parameter as a parameter to the call to register_blueprint. Thus, in theory, I could add multiple versions of this api for different instances.

As part of the blueprint, there is a particular method that needs to send a redirect to the requesting browser. This redirect is to another part of the blueprint. The problem is that url_prefix does not seem to be available within the request or current_app objects. At least, not in anyway that I've been able to see. 

Here's some code that illustrates the problem:

```
# server.py
blueprint = flask.Blueprint(""mybp"", __name__)

@blueprint.before_request
def before_request():
    if not flask.request.url.endswith(""/auth/login/""):
        return flask.redirect( ""/auth/login/"")
```

And here's the part where the app server is created:

```
app = flask.Flask(""myapp"")
app.register_blueprint(server.blueprint, url_prefix=""/instance1"")
app.register_blueprint(server.blueprint, url_prefix=""/instance2"")
```

The correct behaviors would be to go to ""/instance1/auth/login"" or ""/instance2/auth/login."" The problem is that the redirect code doesn't have a way (that I can see) of getting the url_prefix that was used to register the blueprint. 

My initial thought was to see if I could get a hold of the Blueprint object that was registered on the app and maybe it would have the url_prefix that I could prepend on the redirect line.  This would look something like:

```
@blueprint.before_request
def before_request():
    if not flask.request.url.endswith(""/auth/login/""):
        url_prefix = flask.current_app.blueprints[flask.request.blueprint].url_prefix
        return flask.redirect(url_prefix + ""/auth/login/"")
```

The problem is that the way blueprint is stored in Flask.register_blueprint (https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L867):

```
self.blueprints[blueprint.name] = blueprint
```

means that each separate registration of blueprint shares the same blueprint object and url_prefix may not be valid between registrations. E.g. it's not enough to simply set url_prefix on the blueprint.

My solution to this was to create a factory method:

```
def make_blueprint(name, url_prefix):
    blueprint = flask.Blueprint(name, __name__, url_prefix=url_prefix)

    #
    # Blueprint @route definitions follow
    #

    return blueprint
```

and in the server creation code:

```
app = flask.Flask(""myapp"")
app.register_blueprint(server.make_blueprint(""instance1"", ""/instance1""))
app.register_blueprint(server.make_blueprint(""instance2"", ""/instance2""))
```

This works, and I have access to url_prefix in the instances. It wasn't critical for my project, but it was a surprising property of Flask.

It seems awkward, and a violation of the principle-of-least surprise. Why wouldn't the blueprint methods have access to the url_prefix (or any other options passed in during blueprint registration)? Are there any more elegant solutions than the one above?
"
611,"Minor typo in Tutorial, but possibly confusing",2012-10-16T16:46:45Z,2012-10-17T23:37:17Z,,,,"There is a minor typo in the Tutorial at this page: [dbinit](http://flask.pocoo.org/docs/tutorial/dbinit/#tutorial-dbinit).
The line in question:  

> Just add that function below the connect_db function in flask.py:

Of course the filename should be _flaskr.py_ and not _flask.py_.
"
610,[BUG]TypeError: 'JsonObject' object is not callable,2012-10-16T05:32:21Z,2012-10-16T07:33:31Z,,,,"app.py
line num:1447
if isinstance(rv, basestring):
                rv = self.response_class(rv, headers=headers, status=status)
                headers = status = None
            else:
                rv = self.response_class.force_type(rv, request.environ)

if rv was JsonObject,application rise a exception
 'JsonObject' object is not callable
flask version:0.9
"
609,docs/deploying/wsgi-standalone: Add Twisted Web.,2012-10-11T21:06:34Z,2012-11-16T02:37:36Z,,,,"I've been meaning to do this for quite some time, but I never got around to
it. Hopefully this is neutral and useful enough to be included in the main
docs.
"
608,Putting extension in flask.ext: the import loader in ext/__init__.py raises unnecessary error,2012-10-09T12:00:22Z,2012-10-09T15:06:18Z,,note,note: the example in PEP 302 doesn't raise an error.,"I'm running my app on Google App Engine.
I put an extension (flask-lazyviews) in flask.ext and then import it, then an import error appears ""No module named flask.ext.lazy.werkzeug"".
Of course it's not the extension's fault, because it just ""from werkzeug.xx import xx"", nothing's wrong with it.
And if I disable the import hook in flask.ext.**init**.py, everything works, the import works, no problem whatsoever.
I read the code of the import hook (in exthook.py), apparently it's raising an exception because it cannot import the module from some paths.
I think it's not a valid behavior, how could it account for every possible path that the environment provides? It CANNOT! On Google App Engine there's a mysterious import path automatically added by some way (the application folder).
It should not raise an error.
note: the example in PEP 302 doesn't raise an error.
"
607,Update docs/quickstart.rst,2012-10-05T05:53:32Z,2012-10-07T10:49:37Z,,,,"Removed incorrect syntax and simplified remaining sentence.
"
606,"LazyView, why not include it in Flask?",2012-10-04T10:58:47Z,2012-10-06T09:51:05Z,,,,"I'm just curious why the LazyView class - as described in the [Lazily loading views](http://flask.pocoo.org/docs/patterns/lazyloading/) article on Flask docs - isn't get included in the Flask source code for convenience?
I see no application-specific thing in it.
"
605,Regarding JSON inside <script> tag and HTML5 parser,2012-10-03T22:01:00Z,2012-10-07T13:33:30Z,,,,"A JSON string in an HTML `<script>` tag may cause the parser to enter the [script data double escaped state](http://www.w3.org/TR/html5/tokenization.html#script-data-double-escaped-state), in which `</script>` would not return the parser to the data state as expected.

sample.html:

``` html
<!doctype html>
<script>alert({{ v|tojson|safe }});</script>
```

sample.py:

``` python
return render_template('sample.html', v='<!--<script>')
```
"
604,make_test_environ_builder was not working correctly with subdomains,2012-10-03T09:18:39Z,2012-10-07T10:49:09Z,,,,"url_for creates full URL when used for route with subdomain. This is not processed in in make_test_environ_builder, which expects absolute URL without domain.

I've update the code to parse domain with url_parse and change path and base_url correctly.

Here is a test which should pass afterward:

```
from unittest import TestCase
import flask


class SubdomainTestCase(TestCase):
    def setUp(self):
        self.app = flask.Flask(__name__)
        self.app.config['SERVER_NAME'] = 'example.com'
        self.client = self.app.test_client()

        self._ctx = self.app.test_request_context()
        self._ctx.push()

    def tearDown(self):
        if self._ctx is not None:
            self._ctx.pop()


    def test_subdomain(self):
        @self.app.route('/', subdomain='<company_id>')
        def view(company_id):
            return company_id


        url = flask.url_for('view', company_id='xxx')
        response = self.client.get(url)

        self.assertEquals(200, response.status_code)
        self.assertEquals('xxx', response.data)


    def test_nosubdomain(self):
        @self.app.route('/<company_id>')
        def view(company_id):
            return company_id


        url = flask.url_for('view', company_id='xxx')
        response = self.client.get(url)

        self.assertEquals(200, response.status_code)
        self.assertEquals('xxx', response.data)
```
"
603,Fixed typo occours to occurs,2012-10-01T19:45:27Z,2012-10-01T19:46:42Z,,,,"Fixed a typo in the docstring of handle_exception. Was occours, now occurs.
"
602,Misspelling in docs @ flask.Flask.handle_exception,2012-10-01T18:22:32Z,2012-10-01T19:48:44Z,,,,"`Default exception handling that kicks in when an exception occours that is not caught. In debug mode the exception will be re-raised immediately, otherwise it is logged and the handler for a 500 internal server error is used. If no such handler exists, a default 500 internal server error message is displayed.`

Occours should be occurs.

I looked around in the project code to see if i could update this, but it looks like the docs subdir is no longer used? I could be wrong, if you let me know where this is at I'll update it and send a PR :)
"
601,Getting raw POST data for whatever mimetype,2012-09-28T11:12:01Z,2012-10-07T13:46:25Z,,,,"Ok, this issue have been raised twice, but i got an use-case that i don't know how to handle without the raw POST data.

If you use PubSubHubbub api, you can can give a secret, and any data that you will receive will be signed:
- When you subscribe to a new hub, you can give a ""secret""
- When you get a POST request, you get a `X-Hub-Signature` in the format ""sha1:xxxx""
- The signature is based on the secret you give at the subscription + the raw request data
- The request data are POSTed, and accessible with request.form

To verify the signature, i think it should be something like:

``` python
from hashlib import sha1
import hmac
signature = 'sha1:' + hmac.new(my_secret, request.data, sha1).hex_digest()
```

I've tried to use `json.dumps(request.form)` to get the initial raw data, but it doesn't work, maybe cause of a space or a line break.

(The real use case here is using the PubSubHubbub hook from Github, to get a CIA.vc like service)
"
600,cannot run testsuite on Windows,2012-09-26T15:16:16Z,2012-10-07T14:04:33Z,,Error,Error: 'module' object has no attribute 'samefile',"Attempting to run tests of Flask itself fails immediately.

```
(python2.7) C:\Users\peter\repos\mitsuhiko\flask.git>python run-tests.py
Error: 'module' object has no attribute 'samefile'
```

This is due to a call to os.path.samefile (in flask/testsuite/__init__.py) which is only available on Unix.
"
599,Use `env` for virtualenv in docs,2012-09-26T14:55:16Z,2012-10-07T10:54:40Z,,,,"Matches the entries in `.gitignore`
"
598,Fixes typo,2012-09-26T12:44:01Z,2012-10-07T10:53:43Z,,,,
597,Add @template_test() decorator for creating custom jinja2 tests.  Fixes #332,2012-09-26T04:14:45Z,2012-10-07T10:52:42Z,,,,
596,"sdist from master creates ""devdev"" version.",2012-09-18T12:17:22Z,2012-10-07T13:58:24Z,,,,"```
$ ls ./dist
Flask-0.10-devdev-20120918.tar.gz
```

Expected:

```
$ ls ./dist
Flask-0.10-dev-20120918.tar.gz
```
"
595,"sdist from master creates ""devdev"" version.",2012-09-18T12:17:21Z,2012-09-19T12:32:30Z,,,,
594,Update flask/templating.py,2012-09-13T18:16:56Z,2012-09-23T01:50:12Z,,,,"Fixed a typo in the docstring.
"
593,Nestable blueprints,2012-09-13T13:35:35Z,,blueprints,,,"I'd like to be able to register ""sub-blueprints"" using `Blueprint.register_blueprint(*args, **kwargs)`. This would register the nested blueprints with an app when the ""parent"" is registered with it. All parameters are preserved, other than `url_prefix`, which is handled similarly to in `add_url_rule`. A naíve implementation could look like this:

``` python
class Blueprint(object):
    ...

    def register_blueprint(self, blueprint, **options):
        def deferred(state):
            url_prefix = options.get('url_prefix')
            if url_prefix is None:
                url_prefix = blueprint.url_prefix
            if 'url_prefix' in options:
                del options['url_prefix']

            state.app.register_blueprint(blueprint, url_prefix, **options)
        self.record(deferred)
```
"
592,Incorrect Pluggable Views documentation?,2012-09-08T19:47:09Z,2012-10-07T15:29:02Z,,,,"The 'Pluggable Views' documentation includes the line

``` javascript
app.add_url_rule('/users/', ShowUsers.as_view('show_users'))
```

but isn't the second parameter to add_url_rule the 'name', and the third parameter the view_func?
"
591,fixed some typos,2012-09-06T17:11:37Z,2012-10-07T10:54:58Z,,,,
590,Fixed small error in SQLAlchemy patterns documentation,2012-09-04T04:02:54Z,2012-10-07T10:56:35Z,,,,"It would also work with:

`con.execute(users.insert().values(name='admin', email='admin@localhost'))`
"
589,pyinstaller + flask,2012-09-04T01:59:00Z,2012-10-07T13:57:13Z,,,,"Seems like this issue:

http://flask.pocoo.org/mailinglist/archive/2011/8/14/pyinstaller/#429b2ac09950c2717cf7506487166a3a

was never fixed.  I still get : Unhandled ImportError: No module named werkzeug.exceptions when I use pyinstaller. Any ideas on how to fix this, or perhaps actually fix this in 0.91 :-)  
"
588,sqlite dict cursors,2012-09-03T19:30:47Z,2013-06-19T14:57:56Z,,,,"There are whole sections based on assumption that sqlite has no built-in DictCursor behavior
http://flask.pocoo.org/docs/tutorial/views/#tutorial-views
http://flask.pocoo.org/docs/patterns/sqlite3/#easy-querying

Besides verbosity, by wrapping result in dict() we block transparent data passing to INSERT which waits for ""tupled"" format

Here is solution:
db = sqlite3.connect(app.config['DATABASE_NAME'])
db.row_factory = sqlite3.Row # trick!

While ""print cur.fetchall()"" still looks like tuples are here... don't worry, it supports key access: 

for item in cur.fetchall():
    print item['title'] # works!

So you can easily remove those custom wrappers which i saw copied here and there...
"
587,Python 3 port is available,2012-09-02T00:49:12Z,2013-06-19T14:30:42Z,,,,"I'm porting Flask (and [Werkzeug](https://github.com/mitsuhiko/werkzeug/issues/212)) to run in Python 3.2:
- master branch: https://github.com/puzzlet/flask/tree/py3-dev
- forked-from-stable(0.9) branch: https://github.com/puzzlet/flask/tree/py3

At this time of writing it passes all the tests, and capable of running simple web applications.
"
586,Session workaround in case cookie is disabled,2012-08-31T12:09:24Z,2012-09-02T17:46:39Z,,,,"I'm trying to make an HTML5 app which is intended to work everywhere(!!). In iOS when a web app is added to the home screen, the resulting _standalone_ app doesn't allow cookies, nor is there an option for the user to enable them. 

I'm using server-side sessions (on redis), and in this scenario I'm contemplating appending some sort of auth token to every url request (maybe as a header, say, X-MYTOKEN), which will be stored on the client using localStorage after it is generated after a successful login. Later on a logout or a _timeout_ would invalidate this token on the server side, and the localStorage value would get rewritten on the subsequent login. 

Can you weigh in on this approach, or suggest something better? 
"
585,Multiple URL rules pointing to lambdas in the same scope do not work,2012-08-31T12:07:24Z,2012-08-31T14:46:52Z,,,,"I'm dynamically generating a bunch of views in a piece of code that essentially boils down to

``` python
for manager in managers:
    app.add_url_rule('/managers/%s/<parameter>' % manager['identifier'], manager['lambda']
```

where the lambda key in the manager objects is a lambda object using a small set of common functions with varying input parameters based on values in the manager object.

The issue is that when adding multiple url rules pointing to lambdas in the same module, all the routes will point to the lambda that was defined last. Upon further investigation, it seems Flask URL rules only refer to endpoint functions by name in a string, so all the endpoints that point to lambdas in the same scope will end up pointing at the same lambda, referred to as ""package.<lambda>"".

I realize that keeping names is necessary for reverse lookup of URL rules, but I think that ideally Flask should keep track of the endpoint function object itself by a pointer as well and use that to call.
"
584,Handling of vendor trees and parameters in MIME Media Types,2012-08-30T12:14:23Z,2014-07-27T12:43:26Z,,,,"I am currently developing a new RESTful application in our company, and I want to do my job as properly as possible. And as many more RESTful applications/services will follow, I am currently reading up on the topic as-I-go. Also, out of experience, I know that APIs will evolve over time, and the need to version them is not something new.

At the very beginning of my quest, I came to [an answer on StackOverflow discussing just that](http://stackoverflow.com/a/398564/160665). The answer itself, pointed me to both the [RFC for Media Types](http://tools.ietf.org/html/rfc4288#section-3.2). I am still in the process of reading it in all it's glory, but so far, the ""personal"" or even ""special"" sub-type trees seem to fit my needs perfectly. This let's me _explicitly_ define the media type I am communicating with my client.

In parallel, the SO answer pointed me also indirect;ly to [a section about versioning](http://blog.steveklabnik.com/posts/2011-07-03-nobody-understands-rest-or-http#i_want_my_api_to_be_versioned) in the ""Nobody Understands REST or HTTP"" document.

All in all, I find the solution with the custom sub-type tree and the version parameter _very_ appealing.

Unfortunately, Flask is not yet able to parse this properly. As far as I can see, this could be handled transparently inside [MIMEAccept](http://werkzeug.pocoo.org/docs/datastructures/#werkzeug.datastructures.MIMEAccept) by only relaxing the ""accept_json"" logic to represent a general ""does the client understand JSON"" question, and adding a few extra accessors which are more precise.

I am not yet 100% certain how this could look like, but if you want I would be willing to look into it, and make a proposal via pull-request?
"
583,fixed issue #524,2012-08-29T18:29:22Z,2012-10-07T10:55:55Z,,,,"remove unused argument
"
582,Implement support for X-HTTP-Method-Override in flask.views.MethodView.,2012-08-27T21:29:05Z,2012-10-07T10:57:29Z,,,,"When an incoming request contains the X-HTTP-Method-Override header, the
value of that header is used as the view method to be executed instead
of the original incoming HTTP verb.

This helps support dumb(er) webservers and proxies that don't understand newer HTTP verbs (e.g. PATCH), of which Amazon's Elastic Load Balancer service is a member.

I only added the functionality to `flask.views.MethodView`, because I was unsure about what would be a good way to do it with the standard `dispatch_request`; developers often introspect the HTTP method inside of decorator-based routes when supporting more than one verb in a route, so should the `request.method` value be overridden completely, or should devs be required to check for the X-HTTP-Method-Override header themselves? Neither option seems very appealing to me.
"
581,Corrected some minor errors in comments,2012-08-24T11:44:18Z,2012-10-07T13:06:05Z,,,,
580,POST with accidental tuple is very difficult to debug,2012-08-23T10:33:21Z,2012-08-26T11:07:50Z,,IndexError,IndexError: list index out of range,"https://gist.github.com/3434633 shows a small application which I send a POST request to - unfortunately this causes the following traceback:

127.0.0.1 - - [23/Aug/2012 19:55:27] ""POST /uptime/osiris/ HTTP/1.1"" 500 -
Traceback (most recent call last):
File ""/usr/share/pyshared/flask/app.py"", line 1518, in call
return self.wsgiapp(environ, start_response)
File ""/usr/share/pyshared/flask/app.py"", line 1506, in wsgi_app
response = self.make_response(self.handle_exception(e))
File ""/usr/share/pyshared/flask/app.py"", line 1504, in wsgi_app
response = self.full_dispatch_request()
File ""/usr/share/pyshared/flask/app.py"", line 1265, in full_dispatch_request
response = self.make_response(rv)
File ""/usr/share/pyshared/flask/app.py"", line 1338, in make_response
return self.response_class(*rv)
File ""/usr/share/pyshared/werkzeug/wrappers.py"", line 642, in __init_
self.status = status
File ""/usr/share/pyshared/werkzeug/wrappers.py"", line 748, in _set_status
self._status_code = int(self._status.split(None, 1)[0])
IndexError: list index out of range

This is with the following request - curl -d """" http://localhost:5000/uptime/test/ but supplying any post data will cause the same

The issue is with accidentally returning a tuple in my code - however the error doesn't seem like that at all and it was only due to an eagle-eyed person in the IRC channel that I found this one. Could this be made more explicit? (i.e something in the trace to say that this was supposed to be a (content, status) tuple or a single string.
"
579,Fix code example in pluggable views documentation,2012-08-20T13:59:59Z,2012-08-26T16:49:52Z,,,,
578,fixed Issue #507,2012-08-19T09:53:32Z,2012-08-26T17:22:13Z,,,,"Updated link to a project
"
577,Added _ to fix link to extensions in Hook. Extend.,2012-08-17T19:45:41Z,2012-08-26T17:25:56Z,,,,"I missed the trailing _ to make a link in my first patch to add the link to extensions. 
Sorry about that.
"
576,Fix the appcontext_tearing_down example in docs,2012-08-14T06:50:02Z,2012-10-07T12:50:25Z,,,,"http://flask.pocoo.org/mailinglist/archive/2012/8/13/import-problem-with-appcontext-tearing-down/
"
575,Import flask.appcontext_tearing_down at top-level,2012-08-14T06:46:49Z,2012-10-07T12:51:32Z,,,,"Reported on the mailing-list:
http://flask.pocoo.org/mailinglist/archive/2012/8/13/import-problem-with-appcontext-tearing-down/
"
574,Updated information about flask-admin,2012-08-12T19:45:54Z,2012-08-26T17:20:13Z,,,,"I'm new maintainer of the flask-admin extension. Info is here: http://librelist.com/browser//flask/2012/5/3/ann-flask-admin-1-x/
"
573,Debugging mode is not propagate to mounted apps (DispatcherMiddleware),2012-08-05T14:08:14Z,2012-08-05T15:10:56Z,,,,"root.py

```
from flask import Flask
from backend import app as backend

frontend = Flask('root')

@frontend ....
...

frontend.wsgi_app = DispatcherMiddleware(frontend.wsgi_app, {
    '/mountpoint': backend
})
```

daemon.py

```
from root import frontend as app

server_debug():
    frontend.debug = True
    frontend.run()
```

debugger is only available in the frontend domain, not within the mountpoint
"
572,INFO don't get logged for custom logger handle,2012-08-04T13:57:20Z,2015-04-03T20:01:30Z,,,,"OS X  19.7.4, python 2.7.1, flask 0.9

as in this example https://gist.github.com/3257877 , in log file there is nothing for level INFO
"
571,Doc improvements for url_for(),2012-08-01T08:33:33Z,2012-08-01T16:34:50Z,,,,"Recently I had to ask from IRC how to generate proper full url using `url_for()`, so I think that its docs should at least mention `SERVER_NAME`.

Also fixes a formatting error in another docstring.
"
570,Warn or raise when overriding an endpoint,2012-07-29T08:41:40Z,2012-10-07T15:12:19Z,,,,"It is apparently a common mistake to make multiple/distinct view functions sharing the same endpoint, the last overriding the earlier ones in the `app.view_functions` dict.

With a decorator: http://stackoverflow.com/questions/11064263/flask-custom-decorator-breaks-the-routing
With class-based views: http://stackoverflow.com/questions/11700698/flask-route-query-parameter

Is there an use case to using `app.route()` or `app.add_url_rule()` with an existing endpoint and overriding it? I think it is more often a mistake than not. I suggest that such cases issue a warning or even raise an exception, in order to catch the mistake early. In uncommon scenarios where overriding is actually desired, the user can always use `del app.view_functions[endpoint]` before registering the new function.

(I can provide a patch, but I’d like to discuss the idea first.)
"
569,Initialization error under Attest,2012-07-27T08:24:59Z,2014-07-26T13:55:10Z,,AttributeError,AttributeError: 'AssertImportHook' object has no attribute 'is_package',"I used [Attest](http://packages.python.org/Attest/) for testing my web application using Flask 0.8 and tried to upgrade it to 0.9.
Running the test after upgrade it, the testing raised an error when initializing a Flask app object.

Testing with Flask 0.8 has no problem.

Here is my traceback:

``` pytb
Traceback (most recent call last):
  File "".../testsuite/__init__.py"", line 5, in <module>
    import project.api
  File ""/Users/ecdysis/.virtualenvs/sheepfarm/lib/python2.7/site-packages/attest/hook.py"", line 260, in load_module
    return imp.load_module(name, fd, fn, info)
  File "".../project/api/__init__.py"", line 3, in <module>
    from .http import app, init
  File ""/Users/ecdysis/.virtualenvs/sheepfarm/lib/python2.7/site-packages/attest/hook.py"", line 260, in load_module
    return imp.load_module(name, fd, fn, info)
  File "".../project/api/http.py"", line 40, in <module>
    app = Flask(__name__)
  File ""/Users/ecdysis/.virtualenvs/sheepfarm/lib/python2.7/site-packages/Flask-0.9-py2.7.egg/flask/app.py"", line 303, in __init__
    instance_path = self.auto_find_instance_path()
  File ""/Users/ecdysis/.virtualenvs/sheepfarm/lib/python2.7/site-packages/Flask-0.9-py2.7.egg/flask/app.py"", line 608, in auto_find_instance_path
    prefix, package_path = find_package(self.import_name)
  File ""/Users/ecdysis/.virtualenvs/sheepfarm/lib/python2.7/site-packages/Flask-0.9-py2.7.egg/flask/helpers.py"", line 727, in find_package
    if loader.is_package(root_mod_name):
AttributeError: 'AssertImportHook' object has no attribute 'is_package'
```

I think that Attest's [AssertImportHook](http://packages.python.org/Attest/api/hook/#attest.hook.AssertImportHook) broke the internal behavior of Flask. So I temporarily disabled it, and the above error disappeared.
"
568,helpers.py docstring error,2012-07-27T01:54:32Z,2012-10-07T14:54:11Z,,,,"in docstring of flask.stream_with_context()
line 116:should be a ""::"" not a "":"" in line end.
"
567,docstring typo,2012-07-26T16:57:04Z,2012-07-26T19:32:04Z,,,,
566,flask.views.MethodView returns the response body for HEAD,2012-07-26T09:49:18Z,2013-01-27T01:18:57Z,,,,"See https://github.com/mitsuhiko/flask/blob/master/flask/views.py#L148.

When there's no HEAD handler, it uses the GET one but doesn't actually discard the response body, which it should. Most HTTP clients ignore it anyway so this should be safe to fix.
"
565,List Flask-WeasyPrint in the extension registry.,2012-07-24T14:05:45Z,2012-08-26T17:20:29Z,,,,
564,Updated docs URL for Flask-Admin,2012-07-23T07:53:26Z,2012-07-23T08:31:07Z,,,,"I just noticed that http://packages.python.org/Flask-Admin/ now redirects to Read the Docs, so I updated the link.
"
563,Fix for lighttpd regex,2012-07-21T19:03:06Z,2012-08-26T17:20:54Z,,,,"Hi,

the old regular expression in the lighttpd deployment documentation would also apply to any paths that start with '/static', but _are_ not actually the static/ directory - for example, /staticfoo would also be matched and passed through. As this can produce some nasty and hard-to-find bugs (when a route starts with 'static'), I've fixed the regex. It now matches /static, /static/, and everything below it. /staticfoo is no longer matched.
- Sven
"
562,Small improvement to docs,2012-07-21T11:56:59Z,2012-07-21T11:57:40Z,,,,
561,A problem when use `app.config.from_object()`,2012-07-21T03:49:09Z,2012-11-20T03:15:09Z,,,,"Here is my code:

**init.py**:

```
app = Flask(__name__)
app.config.from_object(_config.DevConfig)#Without this line, It works well.
import model_name.view
```

view.py:

```
@app.route('/')                                                                 
def index():                                                                                                                                    
    return render_template('index.html')
```

Problem:When I use method `from_object`. The index page can't be found. But when I deleted it, It works very well.
"
560,404 error,2012-07-21T01:17:47Z,2012-10-07T14:54:31Z,,,,"I have a route:
@app.route(""/links/"", methods = (""GET"", ""POST""))
@app.route(""/links/string:url/"", methods = (""GET"", ""POST""))
def links(url = """"):
    dosomething()

When I get 127.0.0.1:5000/links/www.4399.com/special/26.htm,it return 404 bad.
Why?
"
559,Fixing some wording in the design documentation.,2012-07-20T21:29:46Z,2012-07-20T21:31:55Z,,,,"Fixing some awkward wording.
"
558,Showing how to use Flask in a virtualenv in CGI,2012-07-20T21:14:33Z,2012-10-07T13:02:08Z,,,,"What's the right way to write virtualenv?  Is it camel cased?  Do you capitalize it in the title?
"
557,Unable to render a template without request context,2012-07-20T09:33:10Z,2013-01-27T01:21:19Z,,,,"With the recent introduction of flask.app_context() it is now possible to have code running in the context of an app, but without having a web request active.

I would like to be able to use render_template while in an app context but there are some code paths that assume there is an active request context while doing so.

The following code snippets should be adapted:
- https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L675 This function should not try to include blueprint related context processors when no active request is present
- https://github.com/mitsuhiko/flask/blob/master/flask/templating.py#L20 The default context processor should only include the config from the app context, then check if a request is present, and include the additional keys (session, request, g)

It seems odd to not be able to render a template without a request, obviously the user has to make sure that templates rendered in an app context don't use request-related references but that seems quite reasonable.

Do you think this makes sense ? If yes, then i can provide a patch to do that, and if you think of any other issues related to this i'll be glad to fix them.

Thanks !
"
556,Get raw data from POST request,2012-07-20T03:34:50Z,2012-07-20T13:46:14Z,,,,"How can I get the raw data from a POST request in Flask?

I am moving from web.py to Flask and have some clients in production that unfortunately are using the content-type header application/x-www-form-urlencoded, so changing the header value of the request is not an option (unless it is overwritten on the server)

I cannot use: data = request.form.keys()[0] Because occasionally the '&' character shows up in my data and trying to loop through the form.keys adding the '&' seems to corrupt the data for some reason.

I'm currently using the solution proposed in this post: Python (Flask): How to get whole raw post body? But I'm not too sure if this has any performance issues.

I'm looking for one of three things: 
1. Confirmation that the WGSICopyBody method won't have any adverse performance issues 
2. Ability to make this (data = request.form.keys()[0]) method work by looping through the keys and properly restoring the & in the data 
3. Another solution to the problem, possibly by subclassing the Request class?
"
555,Subdomains in blueprints don't work,2012-07-19T20:14:37Z,2012-07-19T20:38:36Z,,,,"Look at the code below:

``` python
# -*- coding: utf-8 -*-

from flask import Flask, Blueprint

app = Flask(__name__)
app.config.DEBUG = True
#app.url_map.default_subdomain = 'www'

www = Blueprint('www', 'www', subdomain='www')
sub = Blueprint('sub', 'sub', subdomain='sub')


@www.route('/')
def www_hello():
    return 'www.www_hello'


@sub.route('/')
def sub_hello():
    return 'sub.sub_hello'


app.register_blueprint(www)
app.register_blueprint(sub)

if __name__ == '__main__':
    app.run(host='127.0.0.1', port=8888, debug=True)
```

Assuming the app's being served at mysite.com.
Navigating to www.mysite.com or sub.mysite.com will produce 404. When you uncomment `app.url_map.default_subdomain` both URLs will point to `www_hello`.

Is it me or there's something seriously not right with Flask's Blueprints?
"
554,Endpoints can clash for views defined in modules,2012-07-19T16:21:41Z,2012-07-20T08:18:22Z,,,,"When no endpoint name is given to app.route() Flask will currently
use view_func.**name**.

However, if you have view functions defined in several modules, you
can get name clashes. For example, if you have

```
@app.route('/users/list')
def list():
    ...
```

in users.py and

```
@app.route('/projects/list')
def list():
    ...
```

in projects.py then you end up with only one endpoint called 'list'
that will point to which ever view function was defined second.
Both routes will use the same endpoint.

By adding view_func.**module** to the endpoint name this problem
can be avoided.
"
553,Cannot route non-ascii URLs,2012-07-18T02:03:19Z,2012-07-18T12:52:19Z,,,,"Try this simple routing function:

@app.route(u'/♥/')
def heart():
    return ""It works""

Or
@app.route('/%E2%99%A5/')
def heart():
    return ""It works""

Trying to GET /%E2%99%A5/ HTTP/1.1
(which is what a browser does when trying to reach http://example.com/♥/)

You get a 404 not found in return.

I could not found anything in the doc talking about that, so I assume it’s a bug.
"
552,Reraising an HTTP exception from an error handler isn't the same as not trapping.,2012-07-17T05:55:04Z,2012-10-07T14:55:59Z,,,,"I am not sure if this is a bug, because I don't know what the expected behaviour is.  I am reporting it just in case (there should also be a mailing list message from 2012-07-15 about this topic).
##### behaviour (that might be) expected:

If any exception is trapped and passed to a Flask error handler, but that handler decides to re-raise the exception, the effect should be the same as if no handler had been registered.  For example,  if an HTTP error handler is registered by their numerical code but then re-raises the exception, it should result in Flask's default HTTP error page for that code, even if `TESTING=True`.
##### behaviour observed:

If an HTTP error handler is registered via its numerical code re-raises an exception, the exception is then handled is if it were a non-HTTP exception.  If `TESTING=True`, this results in a stack trace.  If `TESTING=False`, the client gets a ""500 Internal Server Error"" regardless of what the original exception was.
"
551,USE_RELOADER does not seem to work nor is documented,2012-07-16T21:44:44Z,2012-10-07T13:58:39Z,,,,"Shouldn't USE_RELOADER work with class based configuration? Doesn't seem to work. 
"
550,Added Windows documentation for mod_wsgi usage,2012-07-16T19:18:11Z,2012-10-07T13:06:24Z,,,,"The explanation for how to use mod_wsgi doesn't explain that WSGIDaemonProcess only runs on Linux.
I added a windows-correct explanation.

Sources:
https://groups.google.com/forum/?fromgroups#!topic/django-users/pEDfNWyYv54
http://stackoverflow.com/questions/2802681/mod-wsgi-for-multiple-trac-projects-windows
"
549,DEBUG reloader is too agressive,2012-07-16T12:00:20Z,2012-12-07T20:29:25Z,,,,"My webapp is a single file app. It's also 37K now. I'm editing the file using BBedit via the built-in SFTP feature in BBedit. In the last 24hours I've been experiencing latency between my desktop and the remote system. When I ""save"" my PY file and flask detects the change it immediately tried to reload it.  When I was using vim locally it worked great. Now that I'm going remote... (1) flask tried to reload the py file but it's only partially there.

(yes, it would be better if BBedit save the file to a tmp file and then renamed it, however, I do not claim to know the motivation for the current methodology)

Anyway, give than I have no idea what the flask issues are... I'd recommend a token at the end of the file that could be detected to make sure that the entire file is ready before loading it.

Also, (2) the reloader seems to crash quietly each time.
"
548,Remove the unused `ScriptNameStripper.to_strip` in the FastCGI doc example,2012-07-12T13:32:33Z,2012-10-07T13:06:46Z,,,,"Alernatively, `environ['SCRIPT_NAME'] = ''` should be replaced with something like:

```
if environ['SCRIPT_NAME'].startswith(self.to_strip):
    environ['SCRIPT_NAME'] = environ['SCRIPT_NAME'][len(self.to_strip):]
```
"
547,How to get value of the nested dictionary using ImmutableMultiDict?,2012-07-12T03:14:26Z,2017-04-26T05:55:01Z,,,,"HTTP POST:

~~~
_ajax_nonce 7bf4f51ffb
action meta-box-order
order[column3] dashboard_incoming_links
order[normal] dashboard_recent_comments,dashboard_recent_drafts
order[side] dashboard_event_summary,dashboard_quick_press,dashboard_primary,dashboard_secondary,dashboard_plugins
page dashboard
page_columns 3
~~~

ImmutableMultiDict Got:

~~~
ImmutableMultiDict([
    ('page_columns', u'2'),
    ('order[column3]', u'dashboard_incoming_links'),
    ('order[side]', u'dashboard_event_summary,dashboard_quick_press,dashboard_primary,dashboard_secondary,dashboard_plugins'),
    ('order[normal]', u'dashboard_recent_comments,dashboard_recent_drafts'),
    ('action', u'meta-box-order'),
    ('_ajax_nonce', u'7bf4f51ffb'), ('page', u'dashboard')
])
~~~

How to get a MultiDict like:

~~~
{'order', {'column3': u'dashboard_incomming_links', 'side': '.......'}}
~~~"
546,Flask automatic stop working sometimes,2012-07-12T03:13:16Z,2013-01-27T01:21:04Z,,,,"# !/usr/bin/env python
# coding=utf-8

from my_flask import create_app
from flask.ext.script import Manager
# from flask.ext.celery import install_commands as install_celery_commands

app = create_app('config.cfg')
manager = Manager(app)
# install_celery_commands(manager)

if **name** == ""**main**"":
    manager.run()
The app sometime automatic stop working and it's not any  tips which error , warning,notice .etc.Why?
"
545,a doubtful bug fix,2012-07-11T06:45:43Z,2012-10-07T13:07:57Z,,,,"this is a doubtful bug,

i found when i am trying to got the blueprint's url_prefix , it return none, 
but i have give it a url_prefix in app initialization stage via register_blueprint

so i check the source code, and found the reason

the calling chain is that

app.register_blueprint(blueprint_instance, _kargs) -> blueprint_instance.register(_*kargs)

and it will make a BlueprintSetupState object (called BSS)from these parameters , 

_IF_ the blueprints object has some deferred_functions, it will handle the  BSS for deferred processing

but in common user case, the dererred_functions is a empty list, so it would do nothing with the BSS

i know how it has been caused and how to fix it, but i dont know the design goal of flask, so i think 
it is just a doubtful bug, maybe you guys has some reason for avoiding this update action if user dont provide a special deferred func
"
544,I just write a extension for use url_for in javascript,2012-07-09T11:54:49Z,2012-10-07T13:58:54Z,,,,"the project is here:
https://github.com/dantezhu/flask_util_js

then you can use url_for in javascript like this:

var url = flask_util.url_for('sub.bpt_index', {y:2, x:'/sdf'});

may be it can be put on the http://flask.pocoo.org/extensions/ ? hoho, anyway, some one may need this~ enjoy it~
"
543,Website,2012-07-08T15:20:49Z,2012-09-13T01:26:30Z,,,,"Request to add Flask-MakoTemplates to the extensions listing.
"
542,Patch 1,2012-07-07T23:50:50Z,2012-07-08T01:13:41Z,,,,"Request to add Flask-MakoTemplates to extension registry
"
541,Clarify Cache Documentation,2012-07-05T06:56:33Z,2014-09-27T14:04:27Z,,,,"In the cache documentation it states:

> If you want to use memcached, make sure to have one of the memcache modules supported (you get them from PyPI) and a memcached server running somewhere. 

However it doesn't state which modules are supported and the [werkzeug documentation](http://werkzeug.pocoo.org/docs/contrib/cache/#werkzeug.contrib.cache.MemcachedCache) is equally vague.
"
540,Fix typo in tutorial,2012-07-04T19:19:41Z,2012-07-04T19:20:15Z,,,,
539,Changed tutorial to be more explicit,2012-07-04T19:18:04Z,2012-07-04T19:18:28Z,,,,"I had a newbie wonder in confusion about where the stuff would go. This should fix that.
"
538,Update entry in extension list about flask-testing,2012-07-03T08:05:03Z,2012-07-03T12:58:11Z,,,,"The github url changed by transfer of the repository to my github user.
If you have questions than we can talk at europython 2012. ;)
"
537,Fixed codename,2012-07-01T21:39:50Z,2012-07-01T22:07:39Z,,,,
536,CHANGES: July 1th should be July 1st,2012-07-01T16:32:04Z,2012-07-01T16:32:36Z,,,,"Just some grammar.
"
535,Add `JSON_ASCII` option to remove unneeded decoding on client side,2012-07-01T11:55:08Z,2012-10-17T23:48:21Z,,,,"This patch will remove weird behaviour and add `JSON_ASCII` configuration options.
I also had an audacity to correct mimetype encoding for JSON to 'utf-8' by default.

I don't sure what that patch must be applied in master but I just want to place it here for other guys :)
"
534,"one typo, one wrong word (please review)",2012-06-29T22:20:53Z,2012-08-26T17:25:23Z,,,,
533,Website,2012-06-28T17:19:39Z,2012-06-28T17:20:48Z,,,,"Update Flask-Principal repository
"
532,Mention Extensions in the Docs more,2012-06-25T17:46:38Z,2017-05-22T22:58:49Z,"docs, good first issue",,,"I had a friend that was going through the quickstart, and he had absolutely no idea that there were any extensions available for flask.

He was using SQLAlchemy directly and was becoming quite frustrated quickly.

Since an ecosystem is clearly part of a framework, I think we should add some hints about extensions throughout the documentation. Not necessarily usage examples, just ""hey, this extension might be useful to you"".
"
531,Fixes #519 by adding return statement,2012-06-25T17:33:47Z,2012-06-25T17:35:46Z,,,,
530,Fix documention for `after_this_request`,2012-06-18T21:33:57Z,2012-06-25T17:36:14Z,,,,"There was a missing parameter in the example method
"
529,Indentation error in ScriptNameStripper in Configuring Apache section,2012-06-16T23:23:32Z,2012-06-17T13:07:30Z,,,,"Fixed indentation in return statement of **call** method in ScriptNameStripper class in the fastcgi documentation.
"
528,is_resource_modified return False if etag match while last-modified < mtime,2012-06-15T12:03:39Z,2014-07-27T12:15:21Z,,,,"which sounds not conform to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26 :

if any of the entity tags match the entity tag of the entity that would have been returned in the response to a similar GET request (without the If-None-Match header) on that resource, or if ""*"" is given and any current entity exists for that resource, then the server MUST NOT perform the requested method, unless required to do so because the resource's modification date fails to match that supplied in an If-Modified-Since header field in the request. 
"
527,cache_timeout should be always checked not Null,2012-06-13T13:44:31Z,2012-06-17T12:56:02Z,,,,"I think send_file should always check that cache_timeout is not None to allow for a (I hope legal) value of 0 for such parameter.
"
526,"flask in virtualenv: ""No module named inspect""",2012-06-13T00:58:45Z,2012-06-14T01:36:27Z,,ImportError,ImportError: No module named inspect,"Apologies if this was fixed, but I can't find a solution online.

I'm following the tutorial in a virtualenv and when I try to run the flaskr.py file, I get:

ImportError: No module named inspect

I've seen references to this being a corrupted sys.path in virtualenv but not everyone seems to have this problem. I'm using Python 2.7.2 on OSX with the virtualenv setup described on the flask website.
"
525,"Added link to extensions in ""Hook. Extend."" section.",2012-06-12T17:26:30Z,2012-06-17T13:00:28Z,,,,
524,unused argument in scripts/flaskext_compat.py,2012-06-11T20:38:29Z,2014-10-07T17:02:05Z,,,,"The find_module method has an unused ""path"" argument.
"
523,Add flask/ext directory to sys.path when it isn't there already.,2012-06-11T10:32:45Z,2012-06-17T13:00:03Z,,,,"It helps to find module when translated from

```
from flask.ext.random_module import RandomModule
```

to 

```
__import__('flask_random_module')
```
"
522,Docs: Improvements in docs/deploying/CGI.rst,2012-06-06T16:19:15Z,2012-06-17T13:22:30Z,,,,
521,flask-login does not work when using static_url_path,2012-06-06T11:59:22Z,2016-04-05T07:55:06Z,,,,"For some reason
`app = flask.Flask(__name__, static_folder='public', static_url_path='')`
will cause flask-login to return `AttributeError: 'RequestContext' object has no attribute 'user'`, and 
`app = flask.Flask(__name__, static_folder='public')`
works
"
520,"Remove dead link to ""Try Flask""",2012-06-01T21:19:22Z,2012-06-17T13:08:44Z,,,,"I think we could remove the Link as long as it is dead.
"
519,Quickstart  login example has unclear comment.,2012-05-31T04:42:58Z,2012-06-25T17:35:47Z,,,,"The login example in the quickstart guide has an incorrect or unclear comment at the end.  If the comment is referring to the <code>error = 'Invalid username/password'</code> line, then this code will NOT be executed if the request method was GET.  If the comment is meant to mean that code placed after the comment would execute, then it should be re-worded as such.

```
@app.route('/login', methods=['POST', 'GET'])
def login():
    error = None
    if request.method == 'POST':
        if valid_login(request.form['username'],
                       request.form['password']):
            return log_the_user_in(request.form['username'])
        else:
            error = 'Invalid username/password'
    # this is executed if the request method was GET or the
    # credentials were invalid
```
"
518,Minor refactoring,2012-05-31T03:46:16Z,2012-06-17T13:18:16Z,,,,"Implemented change in comment at https://github.com/mitsuhiko/flask/pull/514#commitcomment-1395733

```
[TOX] py25: commands succeeded
[TOX] py26: commands succeeded
[TOX] py27: commands succeeded
[TOX] pypy: commands succeeded
[TOX] congratulations :)
```
"
517,Emended extensiondev.rst,2012-05-31T03:24:55Z,2012-06-17T13:22:54Z,,,,"Rephrased a region of the report of the Registry.
"
516,Login example broke the flow,2012-05-31T01:31:16Z,2014-07-26T13:53:28Z,,,,"I am very new to python, flask, heroku, git etc. but I was able to easily and successfully flow through the quickstart guide and get the minimal app deployed on heroku.  I was very impressed with documentation flow and accuracy.  However, I ran into a significant stumbling block with the ""HTTP Methods"" section.  There were two issues that caused me stumble and I think others may stumble here as well.

The most significant issue was that the login example code calls descriptive stubs that don't exist.  This may be fine for those that already understand what the example is showing, but for people like me that learn by trying to run the code examples, it took quite a while to figure that my app was crashing due to the non-existent function calls.

The second issue involves the difference between the flask routing and what I was familiar with for form processing in PHP.   I initially expected something along the lines of a login.py script that would get invoked by <code>action=""http://mysite.com/login.py""</code> attribute of the form.

Eventually I figured out how it worked by creating what I believe would be a more easily understood example for the method and form functionality.  This is the code that I eventually created to learn and confirm the functionality.

Please consider revising the Flask example(s) to show code that can actually be executed like the previous examples I have tried, and to show what the HTML would look like if needed. 

```
@app.route('/form', methods=['POST', 'GET'])
def form():
    if request.method == 'POST':
        return 'form POST dictionary: %s' % request.form
    if request.method == 'GET':
        return 'form GET args: %s' % request.args
```

```
<form method=""POST"" action=""http://your_sites_url_here.com/form"">
  Username: <input type=""text"" name=""username"" size=""15"" /><br />
  Password: <input type=""password"" name=""password"" size=""15"" /><br />
            <p><input type=""submit"" value=""Login"" /></p>
 </form>
```
"
515,Travis,2012-05-28T01:42:07Z,2012-05-30T00:04:23Z,,,,
514,"Fix failing test: ""AssertionError: 'application/javascript' != 'application/json'"" in flask/testsuite/helpers.py"", line 88",2012-05-28T01:06:51Z,2012-05-30T00:04:26Z,,,,"Fix failing test: `AssertionError: 'application/javascript' != 'application/json'` in `flask/testsuite/helpers.py`, line 88
"
513,FAIL: test_jsonify,2012-05-27T20:39:40Z,2013-06-19T14:36:03Z,,TypeError,TypeError: assert_equal() takes exactly 3 arguments (4 given),"``` bash
ddrouin@Dave:~> git clone https://github.com/mitsuhiko/flask.git 
Cloning into 'flask'...
```

**version** = '0.9-dev' appears in flask/flask/**init**.py 

Tests run with Python 2.7.3 on Ubuntu 12.04 LTS

``` bash
ddrouin@Dave:~/flask> python run-tests.py 
........................................................................................................................................E..................................................
======================================================================
ERROR: test_jsonify (flask.testsuite.helpers.JSONTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/ddrouin/flask/flask/testsuite/helpers.py"", line 88, in test_jsonify
    self.assert_equal(rv.mimetype, 'application/json', url)
TypeError: assert_equal() takes exactly 3 arguments (4 given)

----------------------------------------------------------------------
Ran 187 tests in 0.706s

FAILED (errors=1)
```

/kw and /dict work fine, occurs on /unpadded.
simplejson is present, version 2.3.2

line 136 in flask/flask.helpers has:

``` python
if 'padded' in kwargs:
     ....
     return current_app.response_class(content, mimetype='application/javascript')
```

So the defect is triggered by kwargs containing {'padded': False}.  To fix this - I ended up changing my copy to this and now the tests all pass:

``` python
    if 'padded' in kwargs:
        padded = kwargs['padded']
        del kwargs['padded']
    else:
        padded = False

    if padded:
        if isinstance(padded, str):
            callback = request.args.get(padded) or 'jsonp'
        else:
            callback = request.args.get('callback') or \
                       request.args.get('jsonp') or 'jsonp'
        json_str = json.dumps(dict(*args, **kwargs), indent=None)
        content = str(callback) + ""("" + json_str + "")""
        return current_app.response_class(content, mimetype='application/javascript')
    return current_app.response_class(json.dumps(dict(*args, **kwargs),
        indent=None if request.is_xhr else 2), mimetype='application/json')
```
"
512,Review Flask-WhooshAlchemy,2012-05-19T02:41:15Z,2012-05-19T02:42:45Z,,,,"https://github.com/gyllstromk/Flask-WhooshAlchemy
"
511,Review Flask-WhooshAlchemy extension,2012-05-18T19:20:56Z,2014-10-19T18:19:04Z,,,,"I'm happy to resolve any issues.

https://github.com/gyllstromk/Flask-WhooshAlchemy
"
510,Can jsonify return array?,2012-05-17T02:40:45Z,2012-06-03T03:13:20Z,,,,"as the title says, can i use jsonify as this:

jsonify( [ { 'a': 1, 'b': 2 }, { 'c': 3, 'd': 4 } ] )
"
509,Changed docstring according to docs.,2012-05-14T20:40:32Z,2012-06-25T17:37:41Z,,,,"Link to docs:
http://flask.pocoo.org/docs/extensions/#flask-before-0-8
"
508,Context not available when combining decorators and generators,2012-05-14T18:40:00Z,2012-06-27T14:28:06Z,,RuntimeError,RuntimeError: working outside of request context,"In some application I was writing I created a decorator to allow for streaming responses:

``` python
def stream(*args, **kwargs):
    def wrapper(f):
        @functools.wraps(f)
        def wrapped(*a, **kw):
            return flask.Response(f(*a, **kw), *args, **kwargs)

        return wrapped

    return wrapper
```

and another one to JSON'ify the response:

``` python

def jsonify(f):
    @stream(
        content_type='application/json',
        headers={
            'Cache-Control': 'no-cache',
        })
    @functools.wraps(f)
    def wrapped(*args, **kwargs):
        res = f(*args, **kwargs)

        for chunk in json.JSONEncoder().iterencode(res):
            yield chunk

    return wrapped
```

Using these on handlers which require access to a context fails though:

RuntimeError: working outside of request context

Full example with some ok and not-ok handers is available at https://gist.github.com/4a443e8214c2c6eea1a5
"
507,Flask-Login source link incorrect,2012-05-10T19:18:07Z,2012-08-26T17:22:00Z,,,,"The ""on bitbucket"" link for the flask-login extension listed at http://flask.pocoo.org/extensions/ is incorrect. 

It should read:

""on github"": https://github.com/maxcountryman/flask-login/
"
506,"Removed link to non existing page in ""powered by"" section",2012-05-07T23:30:16Z,2012-05-12T01:02:46Z,,,,
505,"Cleaned ""powered by"" section a little.",2012-05-07T11:34:58Z,2012-05-07T15:08:19Z,,,,
504,Fixes issue 376.,2012-05-06T13:29:20Z,2012-06-17T13:23:40Z,,,,
503,Allow blueprint-local routing for errorhandlers,2012-05-04T02:50:32Z,2015-04-12T17:55:53Z,,,,"The comment in `flask.Blueprint.errorhandler` notes, ""Please be aware that routing does not happen local to a blueprint so an error handler for 404 usually is not handled by a blueprint unless it is caused inside a view function.""

Please add Blueprint-local routing for errors triggered by any request to an endpoint defined by a blueprint.
"
502,Fixes issue #495.,2012-04-26T03:12:17Z,2012-05-08T13:01:08Z,,,,"Bam! Also collapses multiple `json.dumps()` and `response_class()` statements into a single one, respectively. This is done because it will come in handy in the future when making changes to the arguments to those function calls.
"
501,safe_join with '..',2012-04-24T09:44:08Z,2012-10-08T07:11:34Z,,,,"Is this a problem?

```
>>> from flask import safe_join
>>> safe_join('/foo', '..')
'/foo/..'
```

I think it could be if we’re exposing not just files but also directories (maybe making indexes, ...). Should safe_join check for `'..'` and not just `'../'` ?
"
500,"flaskr, minitwit css style not rendering in firefox 11 ",2012-04-24T05:27:17Z,2013-01-27T01:23:18Z,,,,"If flaskr loads into firefox 11 the css style sheet: flask/examples/flaskr/static/style.css doesn't render. 
I was able to correct it by renaming style.css to anythingelse.css. I believe that firefox is overriding style.css with its own style.css
"
499,Fixes issue #491,2012-04-23T20:48:07Z,2013-01-27T00:49:07Z,,,,"This fixes issue #491

I would add a unit test for this, but, I'm not sure how I would test two separate domains since that's linked to server config. 
"
498,Fixed typo in docs/quickstart,2012-04-22T21:33:28Z,2012-04-22T21:33:57Z,,,,
497,fix for https://github.com/mitsuhiko/flask/issues/494,2012-04-22T02:44:07Z,2012-06-17T13:24:35Z,,,,"Flask.inject_url_defaults() incorrectly splits endpoint's to get blueprint's name. 

replaced call to endpoint.split() by endpoint.rsplit() on line 1471 of flask/app.py
"
496,Removed link to ep.io,2012-04-21T19:28:06Z,2012-04-21T20:11:31Z,,,,
495,padded attribute on jsonify not functioning as expected,2012-04-20T11:28:55Z,2012-05-08T13:07:35Z,,,,"When calling jsonify with the padded argument as True the expected behavior is padded JSON response that uses the callback argument. Example

``` javascript
handleResponse({""foo"": ""bar""})
```

However when setting padded to False the result is still a padded JSON response with the name of the callback function set to jsonp. Example

``` javascript
jsonp({""foo"": ""bar""})
```

Should be

``` javascript
{""foo"": ""bar""}
```
"
494,Flask.inject_url_defaults() incorrectly splits Blueprint's name,2012-04-19T20:17:45Z,2016-06-04T19:14:15Z,,,,"The Flask.inject_url_defaults() function splits the endpoint at the wrong location to retrieve the name of the blueprint. This causes url_for() not to work properly for blueprints when combined with Blueprint.url_defaults()

e.g.
endpoint = ""catalogue.admin.products.index""
bp = endpoint.split('.', 1)[0]

bp is now 'catalogue' rather than 'catalogue.admin.products'

I presume rsplit() would be more appropriate than split() for this one. 
"
493,Rectified rampant 'roule'.,2012-04-18T03:55:57Z,2012-04-18T04:00:23Z,,,,"Because bountiful blunders damage delightful documentation. 
"
492,Website,2012-04-14T03:36:55Z,2012-04-14T13:21:31Z,,,,"Marked Flask-Restless as approved extension. For more details see #485.
"
491,host_matching is in Werkzeug since 0.7 but not in Flask,2012-04-13T20:19:57Z,2013-07-26T23:15:38Z,,,,"having 'example.com' and 'example.org' running on the same server with the same data backend I thought it would be simple to serve both from a single Flask app, especially since Werkzeug has host_matching but it isn't.

I currently workaround this by 'injecting' hostname into urls with nginx's url rewrites but this is a bit too hackish, you know.

I would like to have syntax like this:

```
@app.route(""/"", host=""example.org"")
def hello():
    return ""Hello World!""
```
"
490,Minor Doc Fix: highlight local weserver only HTTP/1.0,2012-04-13T10:47:22Z,2012-04-13T14:28:15Z,,,,"I tripped over this recently, and felt it was worth noting more clearly in the docs that the local internal webserver is HTTP/1.0 only, which is likely to cause AJAX libraries to fail in hard to notice ways (JQuery is an example).  

HIH

Thank you 
"
489,few typos,2012-04-12T16:15:01Z,2012-04-12T19:45:23Z,,,,
488,Add a note about coverage in README,2012-04-11T11:43:53Z,2012-04-11T11:44:09Z,,,,
487,loader.is_package is a optional method,2012-04-10T21:57:46Z,2014-07-26T13:58:57Z,,,,"flask relies on loader.is_package in find_package(import_name) of flask.helpers

however that method is optional as per PEP 302, this it breaks with loaders that don't implement it
"
486,Minor docs fix.,2012-04-10T20:15:33Z,2012-04-10T20:16:17Z,,,,
485,Review Flask-Restless for approval.,2012-04-10T17:44:09Z,2012-04-15T15:39:20Z,,,,"Source at https://github.com/jfinkels/flask-restless, documentation at http://readthedocs.org/docs/flask-restless. All requirements are met once I release version 0.5 tonight (which includes dual license—GNU AGPLv3 or BSD).
"
484,Revise updated foreword (rduplain).,2012-04-09T21:35:11Z,2012-04-24T03:45:52Z,,,,"At the Flask sprint, @garbados split the foreword into two sections in #438, which I approve.  Now it's waiting on me to pass through the new foreword and revise as needed.  Excellent contribution; just needs a committer to make a pass.
"
483,Fix spelling.,2012-04-09T20:18:08Z,2012-04-09T21:24:26Z,,,,
482,Evaluate readthedocs.org for Flask.,2012-04-09T17:01:36Z,2014-09-27T14:04:56Z,,,,"- Custom theme? Should work.
- Autodoc? Yes.
- Other extensions? I don't know.
"
481,Add a FORCE_URL_SCHEME option,2012-04-09T14:00:49Z,2016-06-03T15:53:10Z,,,,"It should be possible to force the URL scheme to https for all things. That includes URL generation as well as automatic redirect checks on all requests.
"
480,:inherited-members: does not work for attributes,2012-04-09T12:37:02Z,2017-06-06T14:52:56Z,docs,,,"I am not sure if this is a bug in Sphinx, but stuff like the `root_path` and `static_url_path` attributes/properties from `_PackageBoundObject` end up not documented in the API page of the docs. `api.rst` just contains this:

```
.. autoclass:: Flask
   :members:
   :inherited-members:
```
"
479,Removed unneeded print statements form mongokit pattern doc,2012-04-08T23:09:33Z,2012-06-17T13:25:10Z,,,,"Fixes #477
"
478,"return jsonify(d), 201 breaks the 'application/json' mimetype",2012-04-08T09:10:23Z,2012-04-08T18:53:42Z,,,,"Using 

```
return jsonify(d), 201
```

results in returning the client a response with the intended status code and body, but with a text/html mimetype.

I realize this may not be the intended way of using jsonify and the status code shortcut, nevertheless if would be a neat feature.

For the records, if you need to use jsonify and need to return a custom status code you could do

```
response = jsonify(d)
response.status_code = 201
return response
```

Or extend jsonify (I created a gist here: https://gist.github.com/2336085).
"
477,something missing in patterns/mongokit.rst,2012-04-07T10:17:14Z,2015-04-03T20:02:06Z,,,,"```
>>> collection = connection['test'].users
>>> user = {'name': u'admin', 'email': u'admin@localhost'}
>>> collection.insert(user)

print list(collection.find())
print collection.find_one({'name': u'admin'})
```

line 125 and 126 maybe missing "">>>"" ,am I right?
"
476,Website,2012-04-04T06:24:17Z,2012-04-04T06:28:42Z,,,,"Add favicon.
"
475,adds test to check flashed messages based on external session,2012-04-03T16:34:38Z,2012-04-05T12:21:28Z,,,,"solves issue #472.
tests changes made in #417
"
474,add test to testsuite/helpers.py,2012-04-03T16:30:11Z,2012-04-03T16:30:47Z,,,,"test to check changes made to resolve issue #417
"
473,Add Flask-Restless to extensions,2012-04-02T22:33:11Z,2012-04-03T03:15:14Z,,,,"Flask-Restless is about to release version 0.5 with support for Flask-SQLAlchemy.
"
472,Add test for flashed messages using sessions on external storage.,2012-04-01T22:43:49Z,2016-06-04T06:39:18Z,,,,"Add a test for #417.
"
471,Fix #220: Adds a default JSONEncoder implementation to Flask.json_encoder_class,2012-04-01T20:41:22Z,2012-11-14T16:46:13Z,,,,"Fix for issue #220 which adds a default `JSONEncoder` implementation to `Flask.json_encoder_class`, which users can override with their own implementation. Also makes jsonify use `current_app.json_encoder_class` as its encoder class. This is solution 1 as proposed by @jparise.

This solution asks users to subclass `flask.JSONEncoder`, which is now exposed as part of the public API for Flask. `flask.JSONEncoder` simply serializes `datetime` objects to ISO 8601 format strings. It can be changed in the future if some other data type becomes common, but I believe this is a reasonable default.
"
470,Website,2012-04-01T16:38:56Z,2012-04-01T22:40:59Z,,,,"Marked Flask-SeaSurf as approved extension.
Unlisted flask-csrf, bacause it's nearly the same as Flask-SeaSurf, but with cheaper api, and it was marked to be unlisted.
"
469,Removed extra blank line to fix ReST formatted documentation string in w...,2012-04-01T16:03:40Z,2012-04-01T22:39:49Z,,,,"...rappers.py. Should have gone with pull request #439.
"
468,No single entry point for logging documentation.,2012-04-01T15:54:27Z,2016-04-05T07:28:07Z,,,,"At least, I don't have a single link to send users new to Flask and Python's std lib logging.  Flask doesn't log by default in production; okay, but what's a good example of logging requests?  Logging is currently scattered.
"
467,Update docs/quickstart.rst,2012-03-31T07:11:43Z,2012-03-31T07:40:16Z,,,,
466,Option for jsonify handles dates by converting to isoformat,2012-03-30T14:57:39Z,2012-03-30T17:59:56Z,,TypeError,"TypeError: datetime.date(2012, 3, 30) is not JSON serializable","When `jsonify` is called on an object with a 'date' it throws:

```
TypeError: datetime.date(2012, 3, 30) is not JSON serializable
```

There is an innocuous fix - see http://stackoverflow.com/questions/455580

```
def date_handler(obj):
    if hasattr(obj, 'isoformat'):
        return obj.isoformat()
    else:
        raise TypeError, 'Object of type %s with value of %s is not JSON serializable' % (type(obj), repr(obj))
```

And https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L142 becomes:

```
json_str = json.dumps(dict(*args, **kwargs), indent=None, default=date_handler)
```

This strikes me as preferable to TypeError.

Alternatively, `jsonify` could accept a `default` argument that is passed to `json.dumps`.
"
465,Changed state of Flask-Bcrypt extension,2012-03-30T00:29:47Z,2012-03-30T22:02:11Z,,,,"Added docs link.
Marked as approved, because it satisfies all the requirements for approved extensions.
"
464,Remove triple-quotes from print statement in setup.py,2012-03-28T07:36:26Z,2012-03-28T08:50:37Z,,,,"If there's a reason for them being there, please enlighten me. :)
"
463,use sys.getfilesystemencoding() to join paths if needed,2012-03-27T17:18:41Z,2013-01-25T04:15:51Z,,,,"This allows to serve an application from a path containing non-ascii characters (see https://github.com/mitsuhiko/flask/issues/149 ).
"
462,Install docs: pip vs. easy_install consistency,2012-03-27T14:09:32Z,2012-03-27T14:12:01Z,,,,"Make the prose consistent with the code example.
"
461,Add flask.raw_context().,2012-03-26T17:11:42Z,2012-04-09T14:57:47Z,,,,"flask.raw_context() would do the same thing as test_request_context but without actually creating a request.

(Would it then be called flask.test_context()? That might get confusing.)
"
460,Problem with file uploading,2012-03-25T10:09:19Z,2015-03-12T08:38:21Z,,,,"Strange error happened to 100% working code (I mean this code has been working brilliantly for a while, but now gives strange errors).
Using flask (0.7.2), flask-wtf, flask-uploads.

Main code:

``` python
@app.route('/task/new', methods=['GET', 'POST'])
def task():
    form = TaskForm(request.form)
    if request.method == 'POST' and form.validate():
        print type(form.image) # <class 'flaskext.wtf.file.FileField'>
        print type(form.image.file) # <type 'unicode'>
        print type(form.image.data) # <type 'unicode'>
        print form.image.file.filename # gives AttributeError: 'unicode' object has no attribute 'filename'
```

Some part from forms.py:

``` python
from flaskext.wtf import ....... FileField,  file_allowed
from flaskext.uploads import UploadSet, IMAGES

images = UploadSet(""images"", IMAGES)

class TaskForm(Form):
    url = TextField(u'URL', [validators.Length(min=4, max=400), validators.Required()])
    title = TextField(u'TITLE', [validators.Length(min=4, max=4000), validators.Required()])
    description = TextAreaField(u'Desc', [validators.Length(min=4, max=4000), validators.Required()])
    image = FileField(u'Image', [file_allowed(images, ""Images only!"")])
```

Jinja 2 template:

``` jinja2
<form action=""{{ url_for('task', task_id=task.id) }}"" method=""POST"" enctype=""multipart/form-data"">
    {{ form.hidden_tag() }}
    {{ help.render_field(form.url) }} # using rendering form macro, no problem there
    {{ help.render_field(form.title) }}
        {{ help.render_field(form.description) }}
        {{ help.render_field(form.image) }}
        <button class=""positive"" type=""submit"">Save</button>
</form>
```

1) In Firefox submitting this form makes required fields (url, title, description) giving error ""This field is required. "" (Surely they are filled correctly).
2) In Chrome it's OK, but (from the main code): 

``` python
    print type(form.image) # <class 'flaskext.wtf.file.FileField'>
    print type(form.image.file) # <type 'unicode'>
    print type(form.image.data) # <type 'unicode'>
    print form.image.file.filename # gives AttributeError: 'unicode' object has no attribute 'filename'
```

Enctype is correct (it was working well, no changes were made).
So what can I do with this errors? It was working great, but now crashes. If needed, hosting is ep.io
"
459,Problem with file uploading,2012-03-25T10:05:04Z,2012-03-25T10:06:01Z,,,,"Strange error happened to 100% working code (I mean this code has been working brilliantly for a while, but now gives strange errors).
Using flask (0.7.2), flask-wtf, flask-uploads.

Main code:

@app.route('/task/new', methods=['GET', 'POST'])
def task():
    form = TaskForm(request.form)
    if request.method == 'POST' and form.validate():
        print type(form.image) # <class 'flaskext.wtf.file.FileField'>
        print type(form.image.file) # <type 'unicode'>
        print type(form.image.data) # <type 'unicode'>
        print form.image.file.filename # gives AttributeError: 'unicode' object has no attribute 'filename'

Some part from forms.py:

from flaskext.wtf import ....... FileField,  file_allowed
from flaskext.uploads import UploadSet, IMAGES

images = UploadSet(""images"", IMAGES)

class TaskForm(Form):
    url = TextField(u'URL', [validators.Length(min=4, max=400), validators.Required()])
    title = TextField(u'TITLE', [validators.Length(min=4, max=4000), validators.Required()])
    description = TextAreaField(u'Desc', [validators.Length(min=4, max=4000), validators.Required()])
    image = FileField(u'Image', [file_allowed(images, ""Images only!"")])

Jinja 2 template:

<form action=""{{ url_for('task', task_id=task.id) }}"" method=""POST"" enctype=""multipart/form-data"">
    {{ form.hidden_tag() }}
    {{ help.render_field(form.url) }} # using rendering form macro, no problem there
    {{ help.render_field(form.title) }}
        {{ help.render_field(form.description) }}
        {{ help.render_field(form.image) }}
        <button class=""positive"" type=""submit"">Save</button>
</form>


1) In Firefox submitting this form makes required fields (url, title, description) giving error ""This field is required. "" (Surely they are filled correctly).
2) In Chrome it's OK, but (from the main code): 
    print type(form.image) # <class 'flaskext.wtf.file.FileField'>
    print type(form.image.file) # <type 'unicode'>
    print type(form.image.data) # <type 'unicode'>
    print form.image.file.filename # gives AttributeError: 'unicode' object has no attribute 'filename'

Enctype is correct (it was working well, no changes were made).
So what can I do with this errors? It was working great, but now crashes. If needed, hosting is ep.io
"
458,Fixed weird string quoting in setup.py,2012-03-24T21:10:04Z,2012-03-28T12:57:00Z,,,,
457,Update docs/patterns/packages.rst,2012-03-20T21:13:07Z,2012-03-21T01:50:39Z,,,,"Fixed small typo (I assume) in documentation about Large applications.
Maybe some explanation of why it is needed to import all view functions in **init**.py should be added (note: I would propose something myself but as a total Flask noob I am not even sure that I understand the problem correctly).
"
456,Add hooks for to override url_for behavior.,2012-03-20T15:45:58Z,2012-04-24T01:21:35Z,,,,"An app can inject_url_defaults but it cannot otherwise change the url_for behavior.  I'd like for url_for to check the current_app to see if it provides its own url_for.  If it does; use it.  Otherwise proceed as currently implemented.

An alternative would be to register url-building handlers, but this would not fit well with multiple-app processes given that the current url_for is module-level.

I'm writing a Flask extension to provide cross-application URL-building, and I'd like to add a custom `url_for` method to all Flask instances which have been passed through `init_app`.
"
455,Remove an unused iteration variable.,2012-03-20T05:35:33Z,2012-03-28T08:51:26Z,,,,"We can just iterate over the namespace dictionary's keys here.  We
don't need its values.
"
454,not clear how to set charset for static json,2012-03-19T15:38:38Z,2012-03-19T16:59:54Z,,,,"i can't get a charset in json responses with my Flask app 
running wsgi under apache.

for static json files outside of my Flask app with httpd.conf:

```
AddDefaultCharset UTF-8
AddType 'application/json; charset=UTF-8' .json
```

i get the proper response:

```
Content-Type:application/json; charset=utf-8
```

but in my Flask app i still get only:

```
Content-Type:application/json
```

is there a way to fix this without moving my json files outside 
of my app, or creating a view just for them? that would be silly,
wouldn't it?
"
453,fix blohg and pidsim-web urls in powered-by list.,2012-03-19T05:15:18Z,2012-03-21T01:55:47Z,,,,"as summary says.
"
452,"""Example code leaked"" on all but Python 2.7",2012-03-19T00:07:35Z,2012-04-24T01:37:32Z,,AssertionError,AssertionError: Example code leaked,"Running tox, I get the following error for Python 2.5, 2.6 and PyPy, but not 2.7. I have no idea where the real problem is. Is it in CPython/PyPy rather than Flask?

```
FAIL: test_memory_consumption (flask.testsuite.regression.MemoryTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/simon/dev/projects/flask/flask/testsuite/regression.py"", line 77, in test_memory_consumption
    fire()
  File ""/home/simon/dev/projects/flask/flask/testsuite/regression.py"", line 50, in __exit__
    self.testcase.fail('Example code leaked')
AssertionError: Example code leaked
```
"
451,"Add app.add_template_filter(…, safe=True)",2012-03-19T00:03:37Z,2012-06-17T13:25:33Z,,,,"Allow an existing function returning HTML to be used as a ""safe"" filter without adding a ""def"" just to wrap the results in `Markup`. Example:

```
from markdown import markdown
app.add_template_filter(markdown, safe=True)
```
"
450,"Tests require simplejson on 2.5, have tox install it",2012-03-19T00:01:01Z,2012-03-21T02:18:19Z,,,,
449,Recent Werkzeug required?,2012-03-18T23:21:13Z,2012-04-24T01:47:47Z,,AssertionError,AssertionError: 200 != 404,"Running the test suite from git master in an old virtualenv with Werkzeug 0.6.2 installed, I got a failure went away when upgrading Werkzeug to 0.7 or the latest 0.8.3:

```
FAIL: test_test_app_proper_environ (flask.testsuite.basic.BasicFunctionalityTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/simon/dev/projects/flask/flask/testsuite/basic.py"", line 820, in test_test_app_proper_environ
    self.assert_equal(rv.status_code, 404)
  File ""/home/simon/dev/projects/flask/flask/testsuite/__init__.py"", line 133, in assert_equal
    return self.assertEqual(x, y)
AssertionError: 200 != 404
```

The fix was hinted by the test having different code paths for Werkzeug 0.7 and 0.8. Flask’s setup.py requires Werkzeug>=0.6.1, should that be changed to 0.7?
"
448,"No get_send_file_options on blueprints, test fail on master",2012-03-18T23:20:07Z,2012-04-09T15:11:44Z,,AssertionError,AssertionError: 43200 != 3600,"The `Flask.get_static_file_options` method uses the SEND_FILE_MAX_AGE_DEFAULT config, but there is nothing of the sort for blueprints. Tests fail on the current git master because of that:

```
FAIL: test_templates_and_static (flask.testsuite.blueprints.BlueprintTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/simon/dev/projects/flask/flask/testsuite/blueprints.py"", line 370, in test_templates_and_static
    self.assert_equal(cc.max_age, expected_max_age)
  File ""/home/simon/dev/projects/flask/flask/testsuite/__init__.py"", line 133, in assert_equal
    return self.assertEqual(x, y)
AssertionError: 43200 != 3600
```

I’d write a patch, but I’m not sure how to access the app config from a blueprint method. Would using `flask.current_app` be appropriate?
"
447,Added content length to xsendfile,2012-03-18T19:17:45Z,2012-10-07T13:23:05Z,,,,"Attempting to download large files using send_file with X-Sendfile headers did not work with Python 2.7.2, Apache 2.2.20 on Ubuntu 11.10, only an empty file was downloaded. Setting the ""Content-Length"" header solved the issue. I can't see why it would hurt to always have it there since response content is discarded when using X-Sendfile anyway.
"
446,Debug example with run_simple and flask app.,2012-03-16T08:40:02Z,2012-04-01T15:37:44Z,,,,"Added an example of how to configure debugging with run_simple, it has to be enabled both for the Flask app and the Werkzeug server. Took me a while to figure this one out, might be useful to other folks.
"
445,Update docs/patterns/mongokit.rst,2012-03-16T01:21:04Z,2012-03-21T02:01:28Z,,,,"Corrected MongoKit URL.
"
444,Add Flask-Shelve to the registry,2012-03-14T01:32:15Z,2012-03-14T01:34:57Z,,,,"This is the basic key/val flask extension that was suggested at the pycon sprints.
"
443,FR: A way to pass parameters to werkzeug's DebuggedApplication,2012-03-13T13:06:40Z,2013-07-26T23:16:25Z,,,,"It would be really nice to have a way to disable the LedgeIt button (so that I couldn't post tracebacks with potentially sensitive information to a public permanent storage with a _single click_ or by accidentally hitting enter) or make it point to 255.255.255.255 without turning off the debugging mode entirely.

Perhaps there can be a way to pass arguments to DebuggedApplication.**init** from werkzeug.debug (through **options of app.run or otherwise).
"
442,Correct and clarify error handling documentation.,2012-03-13T01:45:22Z,2013-01-25T04:18:36Z,,,,"As of Flask 0.8, unhandled exceptions are logged in production mode. Wording fixed for this.
Also point out 2 ways of defining your own error handlers.
Also point out downsides to simple email log handler.

Inspired by issue #192, which is now obsolete, but needed some documentation updates.
"
441,docfix: wrong converter name: unicode -> string  fixes #364,2012-03-12T23:50:29Z,2012-03-14T00:00:35Z,,,,
440,Reword the docs for writing a flask extension,2012-03-12T23:41:41Z,2012-03-14T00:00:18Z,,,,"There was a minor bug in the example extension that's
been fixed.

I also updated the description of the fixed code accordingly, and
expanded on the usage of _request_ctx_stack.top for adding data
that should be accesible to view functions.

I verified that the existing code as is works as expected.
"
439,"Add new exceptions module, to implement JSONHttpException and JSONBadRequest.",2012-03-12T22:30:45Z,2012-04-01T15:42:39Z,,,,"This is an update to pull request #423, to move exception classes out of wrappers.py
"
438,Improve foreword,2012-03-12T22:21:07Z,2012-03-14T02:17:29Z,,,,"I've changed a few words, but there's plenty I'd like to change / restructure about this Foreword.

Who is this foreword intended for? Experienced Pythonistas who are new to Flask? Folks who are new to flask regardless of their Python experience? Right now, this is a good foreword for the first group: its examples cover advanced topics that newer users won't understand, and whose only effect will be to scare those users. I would recommend splitting the foreword into two parts: (1) For new users (2) For experienced coders. This first portion would cover, in broad strokes, Flask's philosophy: convention over configuration, what ""micro"" means, ""simple tasks should be simple"", etc. The second portion, which we may want to hide on another page, will cover the implementation details of Flask's design decisions that advanced users will want to know about, such as the use of thread-local objects.

If that's a structure the community feels good about, I'd be happy to draft it up.
"
437,Review and tweak docs on pull request #384,2012-03-12T19:41:13Z,2012-03-14T02:30:16Z,,,,"PyCon code sprints.
"
436,Specifying Python version metadata in setup,2012-03-12T18:17:35Z,2012-03-12T18:34:07Z,,,,"so we don't remain at 1 star metadata on http://py3ksupport.appspot.com/ :)
"
435,Doc grammar fix from pycon sprints.,2012-03-12T18:03:23Z,2012-03-12T18:33:43Z,,,,"Minor grammar fix.
"
434,sessions documentation (client side vs server side),2012-03-12T15:49:59Z,2016-10-26T18:41:43Z,"docs, good first issue",,,"more explicit docs on client side sessions vs server side sessions (and how to implement server-side sessions)

recent mailing list discussion: http://flask.pocoo.org/mailinglist/archive/2012/3/1/is-it-wise-for-flask-to-store-session-variables-on-the-client/
unhappy feedback: http://feedback.flask.pocoo.org/message/223
"
433,Introduced a method to adjust static file cache-control headers based on filename,2012-03-12T15:30:42Z,2012-03-13T20:59:31Z,,,,"I needed this method to adjust the cache control headers for .js files that one of my applications was statically serving.  The default expiration is buried in an argument to `send_file` and is set to 12 hours.  There was no good way to adjust this value previously.  So I added a new method to `_PackageBoundObject` named `get_static_file_options` that returns a dict (empty by default) of keywords to pass into `send_file`.  This can be overridden in the `flask.Flask` derivative to adjust values based on the debug flag or filename.
"
432,Review flask-mongokit,2012-03-12T10:53:07Z,2014-10-19T18:18:19Z,,,,"In my eyes flask-mongokit fulfil all requirements for a aproved extension.
Please review.

Thanks

PS: It is already listed under extensions.
"
431,Remove dead poweredby links,2012-03-12T04:27:58Z,2012-03-13T20:54:03Z,,,,
430,Fix issue 140,2012-03-12T03:56:57Z,2012-03-13T20:51:53Z,,,,"This allows for a view function to return something like:

```
jsonify(error=""error msg""), 400
```
"
429,pdf version of docs has strange characters,2012-03-12T03:48:52Z,2016-06-03T08:41:36Z,docs,,,"unhappy comment: ""The pdf version of the doc contains strange ' chars, thus copy-pasting the code won't work. (It's ok with the online version though)""

link: http://feedback.flask.pocoo.org/message/277
"
428,"docfix: ""...to ensure beautiful and unique also unique..."" -> ""...to ensure beautiful and unique...""",2012-03-12T03:43:56Z,2012-03-13T20:51:20Z,,,,"as suggested in: http://feedback.flask.pocoo.org/message/279
"
427,"add heroku/deploy options to quickstart, and add clearer links in tutorial setup",2012-03-12T03:34:09Z,2012-03-13T18:47:04Z,,,,
426,better docs on message flashing and error handling in quickstart,2012-03-12T03:33:46Z,2016-06-02T17:53:25Z,,,,"unhappy user feedback: ""Message Flashing and Error Handling are not explained well in the Quickstart section.""

link: http://feedback.flask.pocoo.org/message/282
"
425,Partial content support,2012-03-12T03:16:14Z,2017-05-22T17:57:29Z,,,,"from feedback site: ""it doesn't support serving partial content (206), which seems to confuse browsers when serving them HTML5 media files even if it shouldn't.""

link: http://feedback.flask.pocoo.org/message/288
"
424,Allow entire blueprints to have lazy-loaded views despite using route decorators,2012-03-08T22:00:26Z,2017-05-28T04:20:35Z,blueprints,,,"For me, a single blueprint naturally goes in a module folder, and all the views go in a views.py there. If that's how you do it, it makes sense to lazy-load one blueprint at a time. But in order to do that, you have to change your whole routing system, using add_url_rule() instead of @bp.route(). I've got a fix for this, but it takes some modification of flask itself (so that there's a way to later .remove() the temporary lazy-loader rule added by add_url_rule; and so that you can app.full_redispatch_request after the lazy-loading is done).

Is this some horrid sin from the evil world of Django, or would my patches be welcome, or what?

Here's my lazyblueprint.py for reference:

```
from flask import Blueprint

class LazyBlueprint(Blueprint):
    def __init__(self, name, import_name, static_folder=None,
                 static_url_path=None, template_folder=None,
                 url_prefix=None, subdomain=None, url_defaults=None):
        super(LazyBlueprint, self).__init__(name, import_name, static_folder,
                 static_url_path, template_folder,
                 url_prefix, subdomain, url_defaults)
        self.views = '.'.join([import_name,'views'])
        print import_name, self.views
        self.lazyrules = []
        self.states = []
        self.record(self.setuplazyload)

    def setuplazyload(self, state):
        self.lazyrules.append(state.add_url_rule('/<path:endpoint>', 'index', self.lazyloadfor(state)))
        self.lazyrules.append(state.add_url_rule('/', 'index', self.lazyloadfor(state),
                                                  defaults={'endpoint':''}))
        self.states.append(state)

    def lazyloadfor(self, state):
        def innerlazyload(endpoint, **kw):
            for rule in self.lazyrules:
                rule.remove()
            self.base_functions, self.deferred_functions = self.deferred_functions, []
            __import__(self.views)

            state.app.debug, debug = False, state.app.debug #don't trigger setupfunction warnings
            for fixstate in self.states:
                for deferred in self.deferred_functions:
                    deferred(fixstate)
            state.app.debug = debug
            self.deferred_functions = self.base_functions + self.deferred_functions
            return self.redispatch(state, endpoint, **kw)
        return innerlazyload

    def redispatch(self, state, endpoint, **kw):
        return state.app.full_redispatch_request()
```

Here's how you'd use it: first skyblue/**init**.py:

```
from lazyblueprint import LazyBlueprint

skyblue = LazyBlueprint('simple_page', __name__,
                        template_folder='templates')
```

then skyblue/views.py:

```
from skyblue import skyblue

@skyblue.route('/')
def index():
    return ""<html><body>sky:1...blue:2...<a href=""hello"">Say hi!</a></body></html>""

@skyblue.route('/hello')
def hello():
    return ""Hello skyblue!""
```
"
423,"On JSON requests, the JSON response should have Content-Type: application/json",2012-03-08T21:44:23Z,2012-03-14T01:29:47Z,,,,"On JSON requests, the JSON response should have Content-Type: application/json and the body of the response should be a JSON object. This is related to issue #422.
"
422,Allow specifying request_class on a per-blueprint basis,2012-03-08T21:40:39Z,2017-06-02T18:40:05Z,blueprints,,,"Suppose we have a situation in which a user creates a blueprint for a ReSTful JSON API and another blueprint for something else.  On a badly formatted request, the URLs in the API blueprint will be parsing JSON (using `Request.json`) and should return JSON responses (possibly using `Request.on_json_loading_failed`), but bad requests to URLs in the other blueprint should respond with regular old HTML responses.

In this case the user should be able to set a custom `Flask.request_class` _for the API blueprint only_ which overrides the `on_json_loading_failed` method.
"
421,pip/virtualenv flaskext import error,2012-03-08T18:57:03Z,2012-03-08T19:30:33Z,,,,"Found this while searching for a solution: https://github.com/mitsuhiko/flask-babel/issues/19

In this issue, @ralfonso mentions that he is having trouble importing an editable babel package. I am having this problem too, but with another extension (flask_mongokit). 

from the python interpreter, if I import: 

``` python
from flaskext.mongokit import MongoKit
```

I get an ImportError: No module named mongokit

When I run my tests with nosetests, everything is fine. When I import from ipython, it works too. But running and importing from the plain interpreter fails.

sys.path contains:
~/.virtualenvs/myflask_project/src/flask-mongokit

I am not sure what is going on, because I know I ran the application before, and since then I pip installed/uninstalled many packages (non-editable).

**NOTE**

**After uninstalling flask-openid, the setup works again as intended. Is something wrong with flask-openid's  setup? Or with the flask exthook functionality?**
"
420,Add radio-exodus.de to the projects list,2012-03-08T00:16:05Z,2012-03-08T00:16:32Z,,,,"The site is 100% flask-based since almost a year now
"
419,request.mimetype always empty,2012-03-06T09:26:51Z,2012-03-06T11:33:08Z,,,,"it appears that `request.mimetype` is always an empty string - which I assume is a bug:

```
$ cat testcase.py
from flask import Flask, request, make_response


app = Flask(__name__)


@app.route(""/"")
def root():
    response = make_response(""mimetype: %s\n\n%s"" % (repr(request.mimetype),
            request.headers))
    response.headers[""Content-Type""] = ""text/plain""
    return response


if __name__ == ""__main__"":
    app.run()

$ python testcase.py &

$ curl -X GET -H ""Accept: text/plain"" http://127.0.0.1:5000/
mimetype: ''

Accept: text/plain
...

$ curl -X GET -H ""Accept: application/json"" http://127.0.0.1:5000/
mimetype: ''

Accept: application/json
...

$ curl -X GET -H \
    ""Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"" \
    http://127.0.0.1:5000/
mimetype: ''

Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
...
```

My expectation was that `request.mimetype` be populated based on the Accept header - is this perhaps misguided?

(I've traced this into Werkzeug, but kinda got lost along the way.)
"
418,"Fix the Github ""watch"" button for 4-digit watchers number.",2012-03-03T13:40:41Z,2012-03-03T14:01:27Z,,,,"The iframe is too narrow, the number of watchers goes to the next line bellow the button instead of staying on the left. It is barely visible because of the iframe’s fixed height. Making it wider looks better.
"
417,Fixed assumption made on session implementations,2012-03-02T10:51:42Z,2012-04-01T15:23:26Z,,,,"In the snippet 'session.setdefault(...).append(...)', it was being
assumed that changes made to mutable structures in the session are
are always in sync with the session object, which is not true for
session implementations that use a external storage for keeping their
keys/values.
"
416,Add Flask-fillin extension,2012-03-02T00:28:23Z,2012-03-21T01:59:04Z,,,,"I just added my Flask-fillin extension to the extension overview.
"
415,Test and fix for issue #414,2012-03-01T13:56:05Z,2012-03-01T13:59:00Z,,,,"Added a test to regress #414 and a simple fix.
"
414,"""silent"" keyword argument only partially implemented by Config.from_envvar",2012-03-01T13:53:31Z,2013-06-19T15:03:30Z,,,,"`Config.from_envvar` raises an exception if the configuration variable exists and references a file that does not exist.  The expectation is that the following test case should pass:

``` python
    def test_config_from_envvar_missing(self):
        env = os.environ
        try:
            os.environ = {'FOO_SETTINGS': 'missing.cfg'}
            try:
                app = flask.Flask(__name__)
                app.config.from_envvar('FOO_SETTINGS')
            except IOError:
                pass
            else:
                self.fail('expected IOError')
            self.assertFalse(not app.config.from_envvar('FOO_SETTINGS', silent=True))
        finally:
            os.environ = env
```
"
413,Blueprint example app,2012-03-01T08:28:02Z,2012-06-25T17:49:11Z,,,,"As per #404.

Though i have a couple of issues:
1. I can't mount blueprint's static under ""/"", would be good to show how static could be inside blueprint too (#348)
2. For some reason, if i register same blueprint under `/` and `/pages/`, / works as expected showing me index template, but /pages/ redirects back to /. Is it desired behavior?
"
412,Add jsonify_status_code function which allows the user to set status code on JSONified response,2012-02-29T05:28:38Z,2012-03-14T02:42:00Z,,,,"Add `flask.helpers.jsonify_status_code` function, a generalization of `flask.helpers.jsonify` which allows the user to set HTTP status code on JSONified responses. Documentation change, public API change, and additional test added as well.

I'm not totally sure that this is important enough to be part of the public API of Flask, but I've used this pattern enough in my code that I thought it might be worth at least a pull request discussion.
"
411,Remove redundant words from quickstart.,2012-02-26T20:47:07Z,2012-03-13T18:43:13Z,,,,
410,Preserve request context in the face of new requests,2012-02-24T16:02:53Z,2014-07-27T12:50:56Z,,,,"RequestContext.push pops and discards the top of the context stack if the top is preserved. Consequently, if you hit an exception in debug mode and drop into the debugger, but then make another request of the server, your debugger can no longer access the preserved context from the exception.

This is particularly a problem in Google Chrome, which follows each request with a request for ""/favicon.ico"". Any exception in debug mode will leave a preserved context on the stack, but will then immediately discard it when the favicon request arrives.
"
409,render_template using a list of templates,2012-02-24T06:49:18Z,2012-02-24T15:52:35Z,,,,"This would be very handy for dynamic template selection. For example i would override _some_ templates based on type of content rendered.

```
render_template(['%s.html % type, 'index.html'])
```
"
408,Update docs/errorhandling.rst,2012-02-23T06:50:54Z,2012-02-25T20:31:41Z,,,,"Typo fix
"
407,flask does not run in bjoern server,2012-02-22T14:37:02Z,2012-02-22T20:06:55Z,,TypeError,TypeError: FileWrapper() takes exactly 1 argument (2 given),"hi,when I test app on the bjoern server,console displays below errors 

Traceback (most recent call last):
  File ""/usr/local/lib/python2.6/dist-packages/Flask-0.8-py2.6.egg/flask/app.py"", line 1506, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/usr/local/lib/python2.6/dist-packages/Flask-0.8-py2.6.egg/flask/app.py"", line 1504, in wsgi_app
    response = self.full_dispatch_request()
  File ""/usr/local/lib/python2.6/dist-packages/Flask-0.8-py2.6.egg/flask/app.py"", line 1264, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/usr/local/lib/python2.6/dist-packages/Flask-0.8-py2.6.egg/flask/app.py"", line 1262, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/usr/local/lib/python2.6/dist-packages/Flask-0.8-py2.6.egg/flask/app.py"", line 1248, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/usr/local/lib/python2.6/dist-packages/Flask-0.8-py2.6.egg/flask/helpers.py"", line 623, in send_static_file
    return send_from_directory(self.static_folder, filename)
  File ""/usr/local/lib/python2.6/dist-packages/Flask-0.8-py2.6.egg/flask/helpers.py"", line 473, in send_from_directory
    return send_file(filename, conditional=True, **options)
  File ""/usr/local/lib/python2.6/dist-packages/Flask-0.8-py2.6.egg/flask/helpers.py"", line 385, in send_file
    data = wrap_file(request.environ, file)
  File ""/usr/local/lib/python2.6/dist-packages/Werkzeug-0.8.3-py2.6.egg/werkzeug/wsgi.py"", line 536, in wrap_file
    return environ.get('wsgi.file_wrapper', FileWrapper)(file, buffer_size)
TypeError: FileWrapper() takes exactly 1 argument (2 given)
"
406,Update docs/patterns/wtforms.rst,2012-02-21T20:07:31Z,2012-02-25T20:31:34Z,,,,"Fix closing tag, also remove quotes to follow other docs style.
"
405,Favicon request pops request context in debugger,2012-02-21T13:05:40Z,2012-02-22T09:11:33Z,,,,"```
127.0.0.1 - - [21/Feb/2012 12:36:49] ""GET / HTTP/1.1"" 500 -
Traceback (most recent call last):
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1518, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1506, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1504, in wsgi_app
    response = self.full_dispatch_request()
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1264, in full_dispatch_
    rv = self.handle_user_exception(e)
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1262, in full_dispatch_
    rv = self.dispatch_request()
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1248, in dispatch_reque
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/tmp/t.py"", line 8, in test
    raise Exception
Exception
127.0.0.1 - - [21/Feb/2012 12:36:49] ""GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:36:49] ""GET /?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:36:49] ""GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:36:49] ""GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:36:49] ""GET /?__debugger__=yes&cmd=resource&f=source.png HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:36:49] ""GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:36:49] ""GET /favicon.ico HTTP/1.1"" 404 -
127.0.0.1 - - [21/Feb/2012 12:37:03] ""GET /?__debugger__=yes&cmd=dump(request)&frm=13152656&s=EYoKchPnHhuZ75RuzgrG HTTP
127.0.0.1 - - [21/Feb/2012 12:37:05] ""GET / HTTP/1.1"" 500 -
Traceback (most recent call last):
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1518, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1506, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1504, in wsgi_app
    response = self.full_dispatch_request()
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1264, in full_dispatch_
    rv = self.handle_user_exception(e)
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1262, in full_dispatch_
    rv = self.dispatch_request()
  File ""/tmp/python2.7/lib/python2.7/site-packages/flask/app.py"", line 1248, in dispatch_reque
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/tmp/t.py"", line 8, in test
    raise Exception
Exception
127.0.0.1 - - [21/Feb/2012 12:37:05] ""GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:37:05] ""GET /?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:37:05] ""GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:37:05] ""GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:37:05] ""GET /?__debugger__=yes&cmd=resource&f=source.png HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:37:05] ""GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1"" 200 -
127.0.0.1 - - [21/Feb/2012 12:37:05] ""GET /favicon.ico HTTP/1.1"" 404 -
127.0.0.1 - - [21/Feb/2012 12:37:11] ""GET /?__debugger__=yes&cmd=dump(request)&frm=16515728&s=EYoKchPnHhuZ75RuzgrG HTTP
127.0.0.1 - - [21/Feb/2012 12:37:47] ""GET /?__debugger__=yes&cmd=source&frm=16515728&s=EYoKchPnHhuZ75RuzgrG HTTP/1.1"" 2
127.0.0.1 - - [21/Feb/2012 12:58:50] ""GET /?__debugger__=yes&cmd=source&frm=16515728&s=EYoKchPnHhuZ75RuzgrG HTTP/1.1"" 200 -
```

Chromium constantly requests favicon (http://code.google.com/p/chromium/issues/detail?id=39402) - hence the request context is cleared on every request to debugger.

This is not an issue on Firefox (as it caches 404 response).
"
404,Convert the Blueprint doc example into a runnable example.,2012-02-15T02:57:10Z,2015-03-12T08:40:15Z,,,,"Discussion on #403 points out the need for a runnable example in the `examples/` directory.  Convert the example in the doc at http://flask.pocoo.org/docs/blueprints into working project in examples/.  Write tests.  Register the blueprint twice to demonstrate Blueprint's design.
"
402,Better error/debugging page,2012-02-09T16:09:26Z,2012-03-14T01:12:20Z,,,,"Error page is fine, but it could be better.

For example see this: http://translate.google.com/translate?hl=cs&sl=cs&tl=en&u=http%3A%2F%2Fdoc.nette.org%2Fcs%2Fdebugging (I am sorry, the page doesn't have an English version, but I think the point is understandable via Google Translator)

Example is here: http://examples.nette.org/ndebug/nette-exception.html
PHP code: https://github.com/nette/nette/tree/master/Nette/Diagnostics

Moreover, it's plain HTML/JavaScript page, so framework can log right these into some defined place. It's very handy to run app on production -- when something fails, you can go to your log directory and see exactly what happened in the same way as it happened on your development server at localhost. You just open the saved HTML page with exception described and you can clearly see what happened. Of course, now you can e-mail the exceptions, but this dynamic plain HTML is so much more handy :-) E-mails are more like an alert, but they don't help much, even if they contain whole traceback.

I don't say we should have exactly this in Flask, I want to just suggest we could improve the page, we could learn something.
"
401,Run example application tests in Flask test runner.,2012-02-07T18:49:40Z,2012-02-07T18:51:33Z,,,,"Let's be sure to release Flask with fully functional example application tests.  Inspired by #400.
"
400,code errors at http://flask.pocoo.org/docs/testing/#testing,2012-02-07T18:34:24Z,2014-08-10T12:10:22Z,,,,"The flaskr_tests.py app as constructed by the code on the page will fail all 3 tests. I copied the source file at https://github.com/mitsuhiko/flask/blob/master/examples/flaskr/flaskr_tests.py and it runs all tests successfully. A vimdiff showed the following issues between the files (I hope the formatting isn't mangled too badly - if so, it's not hard to copy, paste, and do another vimdiff):

source file from github:                                                              code from tutorial: 
https://github.com/mitsuhiko/flask/blob/                                  http://flask.pocoo.org/docs/testing/#testing
master/examples/flaskr/flaskr_tests.py

---

def tearDown(self):                                                                    def tearDown(self):  
          """"""Get rid of the database again after each test

```
os.unlink(flaskr.app.config['DATABASE'])                             os.unlink(flaskr.DATABASE) 
os.unlink(flaskr.app.config['DATABASE'])                             os.unlink(flaskr.DATABASE)  
```

def test_login_logout(self):                                                       def test_login_logout(self):  
  """"""Make sure login and logout works""""""  
    rv = self.login(flaskr.app.config['USERNAME'],                     rv = self.login('admin', 'default') 
                          flaskr.app.config['PASSWORD'])            

```
rv = self.login(flaskr.app.config['USERNAME'] +                   rv = self.login('adminx', 'default')            
                      flaskr.app.config['PASSWORD'])             

rv = self.login(flaskr.app.config['USERNAME'],                     rv = self.login('admin', 'defaultx')            
                      flaskr.app.config['PASSWORD'] +         
```

def test_messages(self):                                                             def test_messages(self):  
    """"""Test that messages work""""""                                                    self.login('admin', 'default')  
    self.login(flaskr.app.config['USERNAME'],  
    flaskr.app.config['PASSWORD'])       
"
399,Collab me!,2012-02-07T02:30:57Z,2012-03-14T09:57:11Z,,,,"@mitsuhiko, I'd like to spend some significant time improving some parts of the documentation. You should add me as a collab on the repo. @rduplain agrees :)

:metal::trollface::metal:
"
398,21st Century Install Instructions,2012-02-07T02:07:37Z,2012-02-07T02:21:02Z,,,,"- Use distribute and pip, not setuptools and easy_install.
- Other nice fixes.
"
397,"Add a ""ignore_mimetype"" parameter to request.json",2012-02-01T17:59:45Z,2012-02-01T18:01:11Z,,,,"It would be nice to have a lightweight way to ignore the request's mime type and parse JSON regardless. My suggestion is an ""ignore_mimetype"" parameter that defaults to False.

I love Flask, thanks for an excellent framework.
"
396,Flask-Debugtoolbar changed owners,2012-02-01T16:37:26Z,2012-02-01T21:35:45Z,,,,
395,Flask-Debugtoolbar changed owners,2012-02-01T16:35:43Z,2012-02-01T16:36:28Z,,,,
394,Document context processors' variable functions,2012-02-01T13:04:06Z,2012-02-01T23:04:43Z,,,,"Document a way to use functions via context processors. The example isn't the best one, but I couldn't figure out a better one.
"
393,line continuation,2012-01-31T15:27:47Z,2012-01-31T16:06:23Z,,,,"replaced line-continuation backslashes

please see commit messages for details

since this was a bit of a stupefying task, careful review would be appreciated
"
392,"Hyphenate ""class-based""",2012-01-31T14:32:11Z,2012-01-31T15:05:03Z,,,,"makes it more readable (IMO)
"
391,Review Flask-Cake extension,2012-01-28T01:29:45Z,2014-10-19T18:18:24Z,,,,"The project is located [on Github here](https://github.com/rsenk330/Flask-Cake) and the documentation is located on [Read The Docs](readthedocs.org). I know I need unit tests yet to have it listed as an approved extension (will be adding those soon), but any other feedback and a listing as a non-approved extension (for now) would be appreciated.
"
390,Added PATCH method to the list of HTTP method functions for MethodView,2012-01-24T21:50:19Z,2012-01-24T22:01:27Z,,,,"PATCH should be supported by Flask, since Werkzeug does. See mitsuhiko/werkzeug#70.
"
389,send_from_directory() filename,2012-01-24T17:22:41Z,2012-01-25T00:26:35Z,,,,"From my experience, `send_from_directory()` sends a file but it's downloaded as the last part of the url as the browser see it.

Anyway to force the browser to download it as some other filename? I don't see the option, or know if it's even a flask thing or I have to do something else.
"
388,Flask documentation in ePub/Mobi format as well,2012-01-24T10:10:59Z,2012-01-26T18:26:18Z,,,,"In the future please consider to publish the flask documentation not only in PDF but also in formats easily readable by an ebook reader like Kindle or Nook. At least for me it's much easier to read longer documentation on a e-ink device rather than a monitor, and PDF are rendered quite awfully on my Kindle 3g.

I see that there's a builder for Sphinx that permits to build epub files along with their HTML versions here: http://sphinx.pocoo.org/builders.html#module-sphinx.builders.epub

ePub would be a easier format to convert, through Calibre we could have a 1:1 conversion in MOBI format too.

Thank you
"
387,documentation: minor stylistic adjustments,2012-01-23T19:40:23Z,2012-01-23T19:51:15Z,,,,"rewrapped lines (for short paragraphs) - please let me know whether you prefer no rewrapping in the future (cf. #369)
"
386,Gunicorn and debugging,2012-01-22T05:06:20Z,2012-03-14T01:11:22Z,,,,"Hi, can I get your opinion on the following SO post? This may well be as-designed, and if so, the SO post should reflect that for others in the future.

http://stackoverflow.com/questions/8950674/debugging-a-flask-app-running-in-gunicorn

Thanks
"
385,API change proposal : inconsistency for getting parameters in a request,2012-01-19T11:30:33Z,2012-01-19T12:37:22Z,,,,"Hi,
I come from a java background and I love using flask. But there is some itch with flask GET/POST API (production code and test code) I would like to discuss about.

In a java servlet, it doesn't matter what http method you're using (GET, POST, PUT), you always do this to get a parameter from input :

```
String username = request.getParameter(""username"");
String password = request.getParameter(""password"");
```

In flask, this is inconsistent :
for a  POST, flasks ""assumes"" data come from a form (wich is not mandatory, you can submit data without a form) :

```
username = request.form['username']
```

To me, in terms of API, form is wrong. But worse, if you do a GET, you can't use form, you'll have to user args :
GET :

```
username = request.args['username']
```

I would prefer to see, in POST/GET/PUT/whatever (I'm using parameter, as in java HttpServlet API) :

```
username = request.parameter['username']
```

As Im doing TDD, I observed the same inconsiancy in writing unit tests :
to test a POST, you can submit a dict (which is great and very pythonic) :

```
app.test_client().post('/login', data=dict(
        username=username,
        password=))
```

to test a GET, you can't pass a dict, you have to reconstruct the URL (which I don't find very pythonic) :

```
app.test_client().get('/agent/login?username=%s&password=%s' % (username, password))
```

I would love to be able to write this for a GET too : 

```
app.test_client().get('/login', data=dict(
        username=username,
        password=))
```

Anyway, what do you think ?
Thanks for your feedback.
"
384,JSONP inside of jsonify with tests,2012-01-17T20:15:07Z,2012-03-14T00:20:23Z,,,,"There is a other implementation of JSONP inside of the _flask.jsonify_ function with tests. It works well with jquery.
"
383,"Add option for disabling ""first request decorator"" (setupmethod) decorator",2012-01-17T18:28:55Z,2013-01-25T04:20:28Z,,,,"Sometimes it is unavoidable to raise the assertion added in SHA: 5500986971b28f270a27db633acf19984eee609e

For example the scenario described here:
http://blog.madflex.de/2012/1/17/FlaskSQLAlchemy_PostgresqlConnector/

There should be an option to disable the assertion even in debug mode.
"
382,Set TRAP_BAD_REQUEST_ERRORS to True as the default when debugging is enabled,2012-01-17T15:01:37Z,2017-05-30T02:53:19Z,,,,"When debugging an application, it's surprising to get a simple ""400 Bad Request"" when accessing a form parameter that doesn't exist instead of a full traceback. I always forget that I also need to set TRAP_BAD_REQUEST_ERRORS.

Is there a reason why this isn't set by default when debugging is enabled?
"
381,Consider debug=True in test client.,2012-01-17T04:25:58Z,2012-01-18T00:44:26Z,,,,"If the test client could set debug=True, it would allow testing with assertions in view functions hit by the test client.

When updating tests for pull request 336, I noticed the testing pattern of making assertions inside an inner view function -- while clever -- must be done carefully.  Because the test client does not set debug=True, the exceptions caused by the assertions were swallowed (which could have resulted in silently failing tests).  With debug=False in the test client, you have to verify the status code in the test client to ensure all assertions pass, which the test case now does.
http://github.com/mitsuhiko/flask/blob/master/flask/testsuite/basic.py#L363

Here's the pull request for reference:
http://github.com/mitsuhiko/flask/pull/336
"
380,Cannot run flask on app engine,2012-01-16T12:53:34Z,2012-01-18T23:59:43Z,,AttributeError,AttributeError: 'HardenedModulesHook' object has no attribute 'archive',"  File ""/Users/aksonov/PycharmProjects/issuengine/flask/app.py"", line 289, in **init**
    instance_path = self.auto_find_instance_path()
  File ""/Users/aksonov/PycharmProjects/issuengine/flask/app.py"", line 577, in auto_find_instance_path
    prefix, package_path = find_package(self.import_name)
  File ""/Users/aksonov/PycharmProjects/issuengine/flask/helpers.py"", line 532, in find_package
    filename = loader.archive
AttributeError: 'HardenedModulesHook' object has no attribute 'archive'
INFO     2012-01-16 12:52:07,534 dev_appserver.py:2832] ""GET / HTTP/1.1"" 500 
"
379,Update docs/api.rst a bit to reflect code.,2012-01-13T11:35:09Z,2012-01-16T18:55:57Z,,,,
378,jsonify should set the charset,2012-01-11T18:35:06Z,2012-01-11T19:15:47Z,,,,"I just read this blog post: http://wekeroad.com/2011/10/24/a-fun-little-json-murder-mystery-with-ie9/

It mentions that IE9 requires json responses to have a proper charset set for it to parse it correctly. I looked at what my API currently does (which uses jsonify) and it does not set the charset at all.

I might be missing something but I think that it should set it.
"
377,little documentation error,2012-01-11T10:48:07Z,2014-11-02T22:26:52Z,,,,"http://flask.pocoo.org/docs/api/#flask.render_template_string

Parameters should be ""source"" and ""context"", now there is ""template_name"" and ""context""
"
376,Blueprints overwrite their templates_folder,2012-01-10T14:08:43Z,2012-06-17T13:35:02Z,,,,"I have an app with two blueprints - `admin` and `default`. Both are stored in separate packages - `app.modules.admin` and `app.modules.default`. Both have separate `templates` and `static` folders. `default` is registered first (w/o `url_prefix`), `admin` is registered second (with `url_prefix='admin'`). Now, when rendering a template in an `admin` view function Flask searches for the file first in `default/templates` and then in `admin/templates`, so if I have file `home/index.html` in both blueprints (which is my case) Flask loads the file from first registered blueprint (`default` in my case), totally ignoring paths. The same goes for templates loaded with `extends` statement.
"
375,typo fix,2012-01-07T19:11:58Z,2012-01-07T19:20:29Z,,,,
374,error in view.rst ,2012-01-04T04:33:54Z,2012-01-04T23:05:02Z,,,,"view.rst:

app.add_url_rule('%s<%s:%s>' % (url, **pk, pk_type**), view_func=view_func,
                     methods=['GET', 'PUT', 'DELETE'])

It should be: 

app.add_url_rule('%s<%s:%s>' % (url, **pk_type, pk**), view_func=view_func,
                     methods=['GET', 'PUT', 'DELETE'])
"
373,Review Flask-PyMongo for approval,2012-01-01T01:36:38Z,2014-10-19T18:18:25Z,,,,"@rduplain has already listed it at http://flask.pocoo.org/extensions/#Flask-PyMongo

I believe it meets the criteria for approval, save that it could use more tests for the helper functions.
"
372,Document Creole syntax for snippets comments,2011-12-31T03:54:08Z,2015-04-03T20:03:27Z,,,,"The “new snippet” has a nice explanation for the Creole dialect that is used:

http://flask.pocoo.org/snippets/new/

But there is no such thing when adding a new snippet comment. A link to the new snippet page or the creole website in the comment form should be enough.

This is a follow-up on a mailing-list question: http://flask.pocoo.org/mailinglist/archive/2011/12/31/how-do-i-add-code-markers-to-snippets/
"
371,Quickstart: Unique URLs / Redirection Behaviour,2011-12-27T17:53:41Z,2014-10-19T18:33:48Z,,,,"(And in general in the quickstart) Instead of using ""pass"" which causes the code to break when pasted into hello.py:

@app.route('/projects/')
def projects():
    pass

@app.route('/about')
def about():
    pass

It would be nice if the code did enough so that the first-time user isn't faced with a non-working system. Even something as simple as:

@app.route('/projects/')
def projects():
    return ""projects""

@app.route('/about')
def about():
    return ""about""
"
370,Quickstart: Variable Rules Section,2011-12-27T17:47:37Z,2011-12-27T18:09:16Z,,,,"If you paste the code from ""Variable Rules"" into your test app (hello.py), it generates error messages when you go to those URLs. That code needs some fleshing out so that it doesn't break; for example:

@app.route('/user/<username>')
def show_user_profile(username):
    # show the user profile for that user
    return ""foo %s"" % username

@app.route('/post/int:post_id')
def show_post(post_id):
    # show the post with the given id, the id is an integer
    return ""bar %d"" % post_id
"
369,documentation: stylistic adjustments,2011-12-27T10:06:58Z,2012-01-04T23:05:16Z,,notes,notes:,"fixed various stylistic issues in an effort to slightly improve readability

notes:
- most changes/decisions are subjective (i.e. these are merely recommendations)
- I couldn't come up with reasonable criteria to split this into separate commits (so feel free to revert changes after pulling, should you decide to do so)
- I intentionally did not rewrap lines to avoid diff noise
- best reviewed with `git diff --ignore-all-space --color-words`
- I'm not yet intimately familiar with Flask or RST, so please review carefully

Please let me know whether this is useful at all. If so, I might put some effort in reviewing a few more chapters. If not, that's alright too.
"
368,unused code in app.logger ?,2011-12-26T08:17:25Z,2012-08-09T11:10:30Z,,,,"Hi
It's seem that these lines are unused and can be remve.

https://github.com/mitsuhiko/flask/blob/master/flask/app.py#L518

```
    if self._logger and self._logger.name == self.logger_name:
        return self._logger
```
"
367,support for HTTP/1.1 Transfer-Encoding: chunked,2011-12-22T23:34:43Z,2014-07-26T13:35:30Z,,,,"Flask seems to choke on chunked encoded requests (I've only tried with Content-Type: application/json). This results in an error when parsing the request body (and being able to deal with chunked encoding is a requirement of HTTP 1.1).
"
366,Added proper </li> closing element.,2011-12-20T20:06:50Z,2011-12-20T20:16:53Z,,,,"The example seemed to be lacking a closing tag for the <li> element. Please review. Thanks.
"
365,Correct order of arguments in example in docs,2011-12-19T13:02:59Z,2012-01-04T23:05:58Z,,,,"Fix a small error in documentation
"
364,Invalid name of converter in API docs,2011-12-19T12:54:17Z,2012-03-14T00:00:37Z,,,,"The API docs of Flask state that there are 4 builtin converters, `unicode`, `int`, `float` and `path`.  While the werkzeug docs state that the `unicode` converter's name is actually `string`. Either change werkzeug name of converter or correct the flask docs.

http://werkzeug.pocoo.org/docs/routing/#werkzeug.routing.UnicodeConverter
http://flask.pocoo.org/docs/api/#url-route-registrations
"
363,Review Flask-Bcrypt for approval,2011-12-15T12:40:21Z,2012-03-31T16:01:22Z,,,,"Although Flask-Bcrypt is already in the extension registry it has been recently updated to include proper documentation and I believe should be listed as an approved extension.

Thanks!
"
362,Flask HTML form arrays are mangled,2011-12-13T16:41:13Z,2011-12-13T17:57:48Z,,,,"Given a reference script like https://gist.github.com/1472832

I was expecting the form input named ""drint_type"" to be a list of multiple values, but it always == the first checkbox selected value.  I assume this is a problem with the lower level dependencies but wasn't sure. 
"
361,send_file uses 2x file's size in memory with conditional = True,2011-12-13T00:49:45Z,2014-08-25T22:53:10Z,,,,"https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L423

Conditional responses (`Response.make_conditional()`) cause the iterator to be converted to a list (which stores the contents of the file in memory) and then `''.join()` is used on the list (!!) which stores the contents of the file in memory AGAIN so Flask can use `len()` to determine content length. So for a short time it uses twice the item size in memory until the list conversion function returns the string from `''.join()` and the original list is destroyed.

This isn't mentioned anywhere in the Flask docs, and can be avoided by calculating the file size and setting the `Content-Length` header using `os.path.getsize()` or `fp.seek()` and `fp.tell()` before `rv.make_conditional` is called.
"
360,Review Flask-SeaSurf extension,2011-12-12T15:37:18Z,2012-04-03T23:47:28Z,,,,"Project is located here: https://github.com/maxcountryman/flask-seasurf

Includes tests.

Documentation is located here: http://packages.python.org/Flask-SeaSurf/
"
359,Class based view decorators,2011-12-08T15:47:11Z,2012-01-16T18:56:20Z,,,,"Current docs for pluggable view (`Flask.views.MethodView` and `Flask.views.View`) decorators are a big vague - although it is mentioned that one cannot use regular view decorators, it doesn't actually give a working example how to write that decorator.

I'm proposing to use a simple active user check instead of current incomplete `rate_limited` example...
"
358,More examples/documentation for pluggable view decorators,2011-12-08T14:58:07Z,2011-12-08T16:28:48Z,,,,"Current docs for pluggable view (`Flask.views.MethodView` and `Flask.views.View`) decorators are a big vague - although it is mentioned that one cannot use regular view decorators, it doesn't actually give a working example how to write that decorator.

I'm proposing to use a simple active user check instead of current incomplete `rate_limited` example...
"
357,flask_autoindex fails with flask 0.8.0 but works with 0.7.0,2011-12-06T03:33:16Z,2012-03-12T20:52:27Z,,AssertionError,AssertionError: A setup function was called after the first request was handled. This usually indicates a bug in the application where a module was not imported and decorators or other functionality was called too late.,"I was having trouble with flask_autoindex which I documented here:

https://github.com/sublee/flask-autoindex/issues/1

This was installed with:

virtualenv --no-site-packages env
source env/bin/activate
pip install flask_autoindex

Here's the traceback

Traceback (most recent call last):
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flask/app.py"", line 1518, in call
return self.wsgi_app(environ, start_response)
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flask/app.py"", line 1506, in wsgi_app
response = self.make_response(self.handle_exception(e))
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flask/app.py"", line 1504, in wsgi_app
response = self.full_dispatch_request()
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flask/app.py"", line 1264, in full_dispatch_request
rv = self.handle_user_exception(e)
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flask/app.py"", line 1262, in full_dispatch_request
rv = self.dispatch_request()
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flask/app.py"", line 1248, in dispatch_request
return self.view_functionsrule.endpoint
File ""/Users/davidthewatson/github/flongo/flaskengine/views.py"", line 31, in archive
idx = AutoIndex(app, browse_root=curdir)
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flaskext/autoindex/init.py"", line 203, in init
*_silk_options)
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flaskext/autoindex/init.py"", line 72, in init
self.silk = Silk(self.base, *_silk_options)
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flaskext/silk/init.py"", line 40, in init
self.silkicon = self.base.route(rule)(self.silkicon)
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flask/app.py"", line 923, in decorator
self.add_url_rule(rule, endpoint, f, **options)
File ""/Users/davidthewatson/github/flongo/env/lib/python2.7/site-packages/flask/app.py"", line 56, in wrapper_func
raise AssertionError('A setup function was called after the '
AssertionError: A setup function was called after the first request was handled. This usually indicates a bug in the application where a module was not imported and decorators or other functionality was called too late.
To fix this make sure to import all your view modules, database models and everything related at a central place before the application starts serving requests.

The relevant code is:

from flaskext.autoindex import AutoIndex

@app.route('/archive/', methods=['GET'])
def archive(path='./archive'):
idx = AutoIndex(app, browse_root=curdir)
return idx.render_autoindex(path)

However, this works fine when I pip uninstall flask and pip install -I flask==0.7.0. I'm not sure where the bug is, but I thought I'd mention it in case I did something wrong or it can be resolved such that the default pip installed version will work in virtualenv.

Thanks.
"
356,FTBFS with python-werkzeug-0.6.2-1.el6.noarch,2011-11-28T21:07:19Z,2014-10-19T18:34:29Z,,,,"See https://gist.github.com/1402052 for build log, but just looking at flask/testsuite/basic.py line 722, it seems to me that you don't really expect using  'Werkzeug>=0.6.1' which is what you require in setup.py.

So, what's correct ... setup.py or the testsuite?

Thanks
"
355,Added a small project starting script,2011-11-23T19:56:04Z,2012-01-04T23:06:49Z,,,,"Basically, sets up a small directory structure for most projects, gives you a gitignore file, index template, main application file.
"
354,Update documentation of url_for to indicate more clearly that substitution token values are required (maybe an example?),2011-11-23T19:30:02Z,2016-04-05T07:58:38Z,,,,"Upon initially reading the url_for function documentation I assumed that if I provided an endpoint matched to a URL rule with substitution tokens without specifying substitution values, it would return the base rule.  Having debugged my problem and re-read the url_for documentation closely, I realized that you tried to express this, it just isn't very 'tard friendly.
"
353,MethodViews for API example is missing parameter,2011-11-21T15:14:32Z,2012-03-14T01:25:46Z,,,,"On http://flask.pocoo.org/docs/views/#method-views-for-apis
At the end of the page in the very last code example you have:

```
def register_api(view, endpoint, url, pk='id', pk_type='int'):
    view_func = view.as_view(endpoint)
    app.add_url_rule(url, defaults={pk: None},
                     view_func=view_func, methods=['GET', 'POST'])
    app.add_url_rule('%s<%s:%s>' % (url, pk), view_func=view_func,
                     methods=['GET', 'PUT', 'DELETE'])

register_api(UserAPI, 'user_api', '/users/', pk='user_id')
```

The last `app.add_url_rule` has three substitutions in the string, but the tuple only has two items.

It should read:

```
    app.add_url_rule('%s<%s:%s>' % (url, pk_type, pk), view_func=view_func,
                     methods=['GET', 'PUT', 'DELETE'])
```
"
352,Review flask-lettuce extension,2011-11-21T02:14:12Z,2014-10-19T18:18:34Z,,,,"https://github.com/dqminh/flask-lettuce

Extension has docs, example usage and tests.
"
351,session is saved before @after_request callbacks,2011-11-20T00:23:00Z,2011-11-20T15:55:50Z,,,,"This makes it impossible to add data to session in said callbacks. For example, the following code does not work, because session is never stored:

``` python
@app.before_request
def before_request():
    u = session.get('user')
    g.user = u and db.User(u) or None

@app.after_request
def after_request(response):
    session['user'] = g.user and dict(g.user) or None
    return response
```
"
350,Endless redirect loop in flask 0.7.2,2011-11-17T19:02:45Z,2011-11-20T16:05:17Z,,,,"Not sure if this is already fixed in the latest release. Seems related to this discussion:

http://librelist.com/browser//flask/2011/6/29/psa-routing-redirect-behavior/

..but this was apparently fixed in 0.7.1. 

I am getting an endless redirect loop when doing the following:

``` python
@app.route('/loop', defaults={""a"":""Hello"", ""b"":""World""})
@app.route('/loop.<b>', defaults={""a"":""Hello""})
@app.route('/loop/<a>', defaults={""b"":""World""})
@app.route('/loop/<a>.<b>')
def endless_loop(a, b):
    return ""%s %s"" % (a, b)
```

(In case you are interested, in my application b is a file extension that specifies my API's output format)

This is what happens when you visit /loop:

127.0.0.1 - - [16/Nov/2011 17:16:35] ""GET /loop HTTP/1.1"" 301 -
127.0.0.1 - - [16/Nov/2011 17:16:35] ""GET /loop.World HTTP/1.1"" 301 -
127.0.0.1 - - [16/Nov/2011 17:16:35] ""GET /loop HTTP/1.1"" 301 -
127.0.0.1 - - [16/Nov/2011 17:16:35] ""GET /loop.World HTTP/1.1"" 301 -

A good workaround for my use case was to simply disable the redirection for defaults:

``` python
app.url_map.redirect_defaults = False
```

This is ok in my case since I am developing an API that does not need or want to be indexed by search engines, but for normal websites it would be suboptimal.

The smallest test case I could produce that triggers the bug is the following:

``` python
@app.route('/loop2', defaults={""a"":""Hello"", ""b"":""World""}) 
@app.route('/loop2/<a>', defaults={""b"":""World""})
def endless_loop2(a, b):
    return ""%s %s"" % (a, b)
```

127.0.0.1 - - [16/Nov/2011 17:15:31] ""GET /loop2 HTTP/1.1"" 301 -
127.0.0.1 - - [16/Nov/2011 17:15:31] ""GET /loop2/Hello HTTP/1.1"" 301 -
127.0.0.1 - - [16/Nov/2011 17:15:31] ""GET /loop2 HTTP/1.1"" 301 -
127.0.0.1 - - [16/Nov/2011 17:15:31] ""GET /loop2/Hello HTTP/1.1"" 301 -

I am running the packaged version of flask from ubuntu oneiric:

python-flask 0.7.2-1
python-werkzeug 0.6.2-1
"
349,Simple documentation cleanups,2011-11-10T05:15:48Z,2011-11-20T16:04:54Z,,,,"Hey guys, 

Just ran through the tutorial and came across a couple of typos in the docs that I'd thought I'd help correct.

Thanks!
Craig
"
348,Static files only work for blueprints registered with url_prefix,2011-11-08T17:50:06Z,,"blueprints, docs",,,"The option `static_folder` for blueprints only works correctly when the blueprint has been registered with a `url_prefix`, otherwise the application's default static URL takes precedence.

There is nothing wrong in that behavior, but it is not documented. It would be nice to have that fact mentioned at http://flask.pocoo.org/docs/blueprints/#static-files and/or http://flask.pocoo.org/docs/api/#blueprint-objects
"
347,Session information is not kept around in test_client after redirect,2011-11-08T08:37:45Z,2011-11-27T03:26:17Z,,,,"I added a testcase for redirect and session keeparound bug, but please note that currently, without the fix, it blows up the whole testsuite - all the tests executed after this test start failing.
"
346,Added option to generate secure URL with url_for(),2011-11-07T14:04:59Z,2011-11-07T14:53:31Z,,,,"Use case: 
Most of the time we could use a reverse proxy to handle, enforce and redirect ssl pages. But there are scenarios where one might be interested in securing only POST request in a form, not entire page. In order to do that, url_for() should be capable to generate 'https' URL's.
This change is requesting in conjunction with a change (to accept the force_secure field to build()) in Werkzeug.
"
345,Fix issue #338,2011-11-05T13:05:21Z,2011-11-20T16:00:14Z,,,,"Commit 51e4a58a fixes issue, commit e345a3af fixes a string formatting issue that came up while testing.
"
344,flask memory consumption,2011-11-05T08:20:41Z,2011-11-06T09:15:46Z,,,,"I write my first app. On start my app consumes about 14mb, then at work increases the memory consumption. Can increase up to 60 mb after 7 days of work. Why is this and how to fix it. My version flask and python and code of my app there http://pastebin.com/n69tbVfR
"
343,Additions to Working with Other Debuggers section ,2011-11-02T19:21:12Z,2012-01-16T18:56:06Z,,,,"Added details on how to make Flask's debugger work with Aptana/Eclipse.
"
342,"Config documentation ""instance_root"" -> ""instance_path""",2011-11-02T04:48:08Z,2011-11-02T13:13:14Z,,,,"Pretty sure this is an error in the documentation.  Not aware that any `instance_root` exists.
"
341,"In Flask.run, when the host/port argument is None, it will now use its default value.",2011-10-24T21:58:09Z,2012-01-17T04:40:28Z,,,,"This change allows you to write the following, while allowing `None` (or missing) configuration values.

```
app.run(app.config.get('APP_HOST'), app.config.get('APP_PORT'))
```
"
340,Just a little comment clarification,2011-10-23T23:42:21Z,2012-01-16T18:56:03Z,,,,"Just a little comment clarification
"
339,Broken setup.py (SyntaxError:invalid syntax),2011-10-22T18:52:46Z,2011-10-22T19:18:35Z,,SyntaxError,SyntaxError: invalid syntax,"<pre>
Downloading/unpacking Flask (from -r requirements.txt (line 1))
  Running setup.py egg_info for package Flask
    Traceback (most recent call last):
      File ""<string>"", line 14, in <module>
      File ""/home/denekurich/Projects/langoid.com/build/Flask/setup.py"", line 62
        print ""Audit requires PyFlakes installed in your system.""""""
                                                                ^
    SyntaxError: invalid syntax
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File ""<string>"", line 14, in <module>

  File ""/home/denekurich/Projects/langoid.com/build/Flask/setup.py"", line 62

    print ""Audit requires PyFlakes installed in your system.""""""

                                                            ^

SyntaxError: invalid syntax
</pre>
"
338,"TypeError in ""Method Views for APIs""",2011-10-20T18:16:10Z,2011-11-20T16:00:11Z,,TypeError,TypeError: post() got an unexpected keyword argument 'user_id',"Following the example code in [Method Views for APIs](http://flask.pocoo.org/docs/views/#method-views-for-apis) results in:

```
TypeError: post() got an unexpected keyword argument 'user_id'
```

Either the `post()` method needs to take a `user_id` (probably doesn't make sense), or an HTTP POST needs its own url_rule.
"
337,Updated docs - for Response class status_code => status,2011-10-17T13:12:18Z,2011-10-17T13:30:42Z,,,,"Fixes a doc bug.
"
336,Allow category filtering in get_flashed_messages to allow rending categories in separate html blocks,2011-10-17T02:51:51Z,2012-01-17T04:17:50Z,,,,"I found it a bit difficult to render separate html blocks for individual flash categories similar to bootstrap: http://twitter.github.com/bootstrap/#alerts.

This patch allows you to filter flash categories via a list.  So you can do something like:

```
{% with errors = get_flashed_messages(category_filter=[""error""]) %}
{% if errors %}
<div class=""alert-message block-message error"">
  <a class=""close"" href=""#"">×</a>
  <ul>
  {%- for msg in errors %}
  <li>{{ msg }}</li>
  {% endfor -%}
  </ul>
</div>
{% endif %}
{% endwith %}
```

...

Cheers,
  Steven
"
335,"Added Note to use PNG instead of ICO since support of ICO seems to ""die""",2011-10-13T12:31:41Z,2011-10-13T12:55:28Z,,,,"Hallo. In meinem Fall konnte ich egal wie Chrome 14.x und Firefox 7.x nicht überzeugen ein favicon im ICO format anzuzeigen. Glücklicherweise geht es eh besser mit PNG (transparenz is echt schick und eben bessere unterstützung in diversen grafikprogrammen). wie versucht in englisch oben zu beschreiben.

Danke, Marius
"
334,Typo fix,2011-10-13T08:50:04Z,2011-10-13T11:34:13Z,,,,
333,Added PasswordField in docs/patterns/wtforms.rst,2011-10-06T18:18:56Z,2011-10-06T19:27:07Z,,,,"Old code in wtforms.rst:
from wtforms import Form, BooleanField, TextField, validators

Edited One:
from wtforms import Form, BooleanField, TextField, PasswordField, validators
"
332,Flask.template_test(),2011-10-06T18:03:45Z,2012-10-07T10:51:51Z,,,,"While there is template_filter() decorator for creating jinja2 custom filters, it's good idea to add template_test:

```
def template_test(self, name=None):
    def decorator(f):
        self.jinja_env.tests[name or f.__name__] = f
        return f
    return decorator
```
"
331,static file would not send to browser correctly ,2011-09-30T16:36:26Z,,,,,"Hi, 

I've got a issue about static file.

When I put css file in /static/css/style.css in static directory and I described view function with `Variable Rules`.
Please see sample code on https://gist.github.com/1254213

`GET /static/css/style.css` request dispatch to view function and css file did not send to browser correctly.
I expected to `GET /static/css/style.css` should send css file to browser, not dispatch to view function.

Regards.
"
330,"fixed typo, quote ""with"" statement",2011-09-30T11:03:20Z,2012-01-16T18:55:50Z,,,,
329,Better support for error_handler register without decorator,2011-09-23T21:50:58Z,2012-03-12T23:31:47Z,,,,"As written here, the prefered way to register error_handlers to an application is through the app.error_handler decorator but, when using factories, this method becames far from ideal for ""big application""  patterns. 
"
328,"Review Flask-Peewee for listing, then approval.",2011-09-23T19:50:38Z,2014-10-19T18:18:37Z,,,,"Charles Leifer
http://charlesleifer.com/docs/flask-peewee/index.html
https://github.com/coleifer/flask-peewee
"
327,"Add to sys.path, not sys.path_info",2011-09-23T07:34:53Z,2011-09-23T13:02:37Z,,,,
326,Move Some Context Preservation Logic into App,2011-09-21T23:58:02Z,2011-09-24T18:28:11Z,,,,"Right now a test client can preserve the context for a little longer, so can exceptions. However there is no information if there is a context ""on hold"" on the stack which leads to the problem that if you continue to trigger exception you build up items on the stack in debug mode for nothing. There should always only be one context on the stack preserved and if another request comes in it should be removed.

This might also make the test client cleaner.
"
325,"Rewritten audit command in setup.py and some ""touches"" for docstrings",2011-09-18T12:09:50Z,2011-09-18T19:20:08Z,,,,"See title ^^ :)

PS. I'm not a native English speaker, so there might be some issues with my fixes...
"
324,Blueprint.app_url_value_preprocessor doesn't work correctly.,2011-09-16T22:51:29Z,2011-09-17T20:20:31Z,,,,"The code contains a typo, and additionaly it registers a blueprint-local preprocessor instead of a global one.
"
323,SERVER_NAME set to 127.0.0.1:5000 in dev breaks flash method,2011-09-16T15:06:53Z,2011-09-16T15:52:21Z,,,,"In my local machine, using flask 0.7.2, if I set **SERVER_NAME** to ""127.0.0.1:5000"", with all other options set to defaul, the flash method stops working in webkit based browsers. Firefox works normally. 

I didn't dig further into the problem, but someone said it was fixed in 0.8dev. 
"
322,Fixed typo in docstring of dispatch_request method of flask.views.View,2011-09-14T19:53:55Z,2011-09-18T19:20:40Z,,,," Nothing special - just a tiny typo encountered while browsing through the codebase.
"
321,create_global_jinja_loader has outdated docstring,2011-09-13T23:18:26Z,2011-09-14T01:28:46Z,,,,"""create_jinja_loader"" should be ""jinja_loader"" in http://flask.pocoo.org/docs/api/#flask.Flask.create_global_jinja_loader
"
320,Flask-MongoKit to GitHub,2011-09-13T19:28:27Z,2011-09-13T19:30:47Z,,,,"I moved Flask-MongoKit to GitHub and changed the extension entry.

Christoph
"
319,http request methods decorators for routing,2011-09-10T21:13:20Z,2011-10-06T15:10:28Z,,,,"Hello,

I added 4 functions to the Flask class that make routing basic http request easier. Now you can write:

```
@app.get('/')
def get_index():
    pass

@app.post('/')
def post_index():
    pass

@app.put('/')
def put_index():
    pass

@app.delete('/')
def delete_index():
    pass
```

instead of having to write methods=['POST'] in _route_. This makes writing RESTful api a lot cleaner.

There are also tests for these methods in the _HTTPRoutingTestCase_ class in testsuite/basic.py.
"
318,Review Flask-ZODB for approval,2011-09-07T03:28:56Z,2011-09-07T16:08:27Z,,,,"https://github.com/dag/flask-zodb

I'm releasing soon, but if there's any blockers for approval I'd like to fix them before the first release. Please review.
"
317,Review Flask-Sijax for approval.,2011-09-06T18:14:36Z,2014-10-19T18:18:39Z,,,,"Slavi Pantaleev
http://packages.python.org/Flask-Sijax/
"
316,Review Flask-Exceptional for approval.,2011-09-06T17:48:52Z,2011-09-18T21:25:17Z,,,,"Jonathan Zempel
http://packages.python.org/Flask-Exceptional/
http://github.com/jzempel/flask-exceptional
"
315,'Float' converter in route not working,2011-09-05T22:29:10Z,2011-09-05T22:41:50Z,,,,"In Flask 0.7.2, I have a route defined as:

```
@app.route('/venues/<float:lat>/<float:lon>/<float:rad>/')
```

Trying to access that route at http://127.0.0.1/10/20/30 will produce a ""404 Not Found"" error. If you change the route to

```
@app.route('/venues/<lat>/<lon>/<rad>/')
```

or substitute `int` for `float` using the conversion notation, then the route works correctly.
"
314,Add search to website for snippets and mailing list archives.,2011-09-05T17:47:31Z,2016-04-05T08:01:07Z,,,,"... and docs.
"
313,Example @login_required decorator confusing,2011-09-05T15:42:13Z,2016-06-05T21:23:25Z,docs,,,"Several people on IRC have failed to use this decorator correctly. The problem is they forget to pass the ""next"" value along in their POST of the login form. The situation could be improved with a note in the docs for view decorators.

The confusion typically is that they think they have a ""next"" value in request.args, because they do in the GET request to their login view, and then suddenly for no apparent reason it's not there - because it's a new request, the POST request of the login credentials. The solution is to add a hidden input with the value of the next URL:

``` html+jinja
<input type=hidden name=next value=""{{ request.values.next }}"">
```

and then use either `request.values` or `request.form` instead of `request.args` in the login view where the POST request is handled.

``` irc
17:05 <flipmoe> Is there something to pay attention to if you try to access request args using blueprints and an app factory? I get 'None' although there is a next parameter in the url. Thx
17:07 <donri> flipmoe: from where are you doing this?
17:07 <flipmoe> donri: from my login view
17:08 <donri> paste code paste.pocoo.org
17:13 <flipmoe> donri: http://paste.pocoo.org/show/470727/ 
17:14 <donri> and the code that redirects to login?
17:15 <DasIch> donri: line 32
17:15 <donri> nope
17:16 <flipmoe> donri: you mean the login_required decorator?
17:16 <donri> probably
17:16 <flipmoe> donri: ok
17:17 <flipmoe> donri: http://paste.pocoo.org/show/470731/ 
17:26 <donri> flipmoe: ah i see it
17:26 <donri> flipmoe: your redirect results in the GET which renders the template, where i assume you have a form that POST to login
17:26 <donri> flipmoe: but you're probably not passing along the 'next' from the GET
17:27 <donri> flipmoe: add an input hidden to the form and use request.values
17:28 <donri> remember that your login view handles two different forms of requests (get and post)
17:28 <donri> and validate_on_submit checks that the request method is POST
17:29 <flipmoe> donri: ok thx, do you have an example for that hidden input?
17:29 <donri> <input type=hidden name=next value=""{{ request.values.next }}"">
17:29 <donri> request.values is just a combined dict of the request.form and request.args
17:30 <flipmoe> donri: ok thank you!
17:30 <donri> then make sure to use request.values in the login view too
17:30 <flipmoe> donri: jep
17:31 <donri> may need to do something more to make the form valid against LoginForm with ""next"" in the form dict
17:32 <donri> (you could just pass it in form action=login?next=... but mitsuhiko seems to think that's bad for some reason i forgot)
17:33 <flipmoe> ok
```
"
312,use extended dict as app config,2011-09-05T08:29:16Z,2011-09-05T16:57:19Z,,,,"hi
App.config is a class based on dict object. 
So we must use it as a dict later and all settings in it accessed same as a dict.

like: 
app.config['DEBUG']

But i think it will be good to it can be accessed such as a class. 

app.config.DEBUG

it can be down by some simple overrided methods. i write simple code for this:

class EDict(dict):

```
def __init__(self, **kwargs):
    for key, value in kwargs.iteritems():
        self.__setitem__(key, value)
    dict.__init__(self)

def __getattr__(self, attr):
    return super(EDict, self).__getitem__(attr)

def __setattr__(self, attr, value):
    self[attr] = value

def __delattr__(self, key):
    return super(EDict, self).__delitem__(key)
```
"
311,Fix for d5cd4f8 which broke install on Windows ,2011-08-30T22:14:25Z,2011-08-31T13:17:10Z,,,,"When the testsuite was added to setup, it tries to add the test apps as directories. This breaks the install on Windows because the copy command used by setuptools can't copy directories recursively in Windows.

The fix is to use the include_package_data setting rather than specifying data directories by name. If directories shouldn't be added they can be filtered using the exclude_package_data setting.
"
310,Switch to primitive types in the config,2011-08-30T12:24:36Z,2011-09-25T17:12:56Z,,,,"Right now PERMANENT_SESSION_TIMEOUT can only be a datetime.timedelta object which is annoying. Make it possible to set this to an integer.
"
309,Fix session loading in flask.testing.TestClient.session_transaction(),2011-08-29T19:42:58Z,2011-09-07T09:44:08Z,,,,"`session_transaction()` currently does not load the session correctly, as `environ_overrides` is never used.
"
308,Typo in documentation,2011-08-25T20:14:53Z,2011-08-25T20:15:31Z,,,,"Fixed the typo as discussed in #pocoo.
"
307,route decorators custom enpoints,2011-08-25T10:47:48Z,2011-08-31T15:33:17Z,,,,"Allow passing the endpoint to the route decorators on Flask's `application` and `blueprints`.
"
306,make Cookie Path configurable,2011-08-25T09:55:16Z,2012-03-14T01:29:07Z,,,,"It should be possible to set the Cookie Path to something different from ""/"", default should be the application root path.
"
305,option to turn off Jinja2,2011-08-24T14:36:48Z,2011-09-27T16:45:11Z,,,,"I'd like to use Flask over pure Werkzeug but I don't need templating. It's fine for Jinja2 to be required to be installed since Flask extensions might expect it, but would it be possible (and worth it) for Flask to take an option to tell it not to bother setting up a default Jinja environment for the app since I won't be using it?
"
304,Improve configuration docs a bit,2011-08-17T05:53:04Z,2011-08-17T13:05:58Z,,,,"I actually wanted to add only the comment to the configuration file, but then spotted some places where docs could be improved. If you don't agree with them, then just commit the comment change for conf file example ;)
"
303,typo,2011-08-12T22:22:49Z,2011-09-07T09:44:52Z,,,,"Quite nothing, a little typo I detected while reading the docs.
"
302,Added closing tag,2011-08-11T04:18:09Z,2011-08-25T07:32:42Z,,,,"Silly mistake in the docs of not closing the <p> tag. The commit fixes it.
"
301,Add flash_error and get_flashed_errors,2011-08-11T04:13:20Z,2014-07-27T13:20:26Z,,,,"I think it would be convenient if we could have a  flash_error and get_flashed_errors (I don't know if this is to be included in Jinja, or here) method, because its quite a pain to filter through the categories every time, especially when the messages and errors must be on different parts of the page.

If you guys do approve, I would like to be able to write the code for solving the issue, if you don't mind.
"
300,Fixed part of issue #290.,2011-08-08T02:33:25Z,2011-08-08T06:34:13Z,,,,"Trying to fix https://github.com/mitsuhiko/flask/issues/290. I did not know if you like exceptions or not, so, right now it will return None if the mimetype is incorrect, if you like, I can do an exception instead.
"
298,Flask website license,2011-08-07T08:19:55Z,2011-08-09T14:16:36Z,,,,"What is the license for the Flask website? I would like to re-use the code for Librelist archives, but Flask’s website branch has no LICENSE file.
"
297,Fix typos,2011-08-05T14:14:48Z,2011-08-05T14:16:28Z,,,,"2 spelling errors, one incorrect usage, and 1 awkward construction.
"
296,Added decorators,2011-08-05T11:31:27Z,2011-08-05T11:37:32Z,,,,"I have added decorators for before_request and after_request, please ignore the README changes, they were errors I had trouble reversing. If it doesn't apply cleanly, please tell me so I can fix it. 

Also, keep up the excellent work, I love flask.
"
295,Added some very small changes,2011-08-05T10:55:16Z,2011-08-05T11:30:00Z,,,,"Added comments. 
"
294,Traceback logs not available for POST requests,2011-08-05T09:09:29Z,2011-08-05T10:36:04Z,,,,"When the app runs in debug mode, exceptions in handling GET requests would be displayed on the page and logging output. But for POST requests, it only returns ""400 Bad Request"", without any traceback, making debugging difficult. If it's a bad idea to display the traceback in web page, at least it should be displayed in the logging output.
"
293,Add runserver.py filename to match earlier section of example,2011-08-05T01:33:51Z,2011-08-05T01:34:31Z,,,,"Earlier on this page of docs, we write ""add a new file called runserver.py next to the inner yourapplication folder . . .""

This change makes the example consistent.
"
292,Allow passing additional `send_file` options to `app.send_static_file`,2011-08-04T01:27:15Z,2011-08-04T14:48:20Z,,,,"Hi Armin, I'm implementing a `send_static_file_versioned` view (which gets urls like `/vstatic/<versionstamp>/<path>`) and I would like it to just return `app.send_static_file(filename, cache_timeout=HUGE)` but that function does not currently accept the additional options that `flask.helpers.send_file` accepts. I believe this patch would accomplish what I'm looking for. Would it make sense to merge back into flask?
"
291,before_request functions not run before every request,2011-08-02T21:19:42Z,2011-08-04T14:45:24Z,,,,"I have a before_request function which I'd like to be actually run before every request. It sets some variables on `g` based on things like headers that I would like a custom error handler to be able to access. If I e.g. abort(404) from one of my own views, I'm fine, but if a request comes in that werkzeug can determine has no matching route, it bypasses my before_request function and goes straight to the error handler, so `g` is missing info.
"
290,request.json is documented twice,2011-08-02T14:31:19Z,2011-08-09T14:16:14Z,,,,"`flask.request.json` is documented twice in http://flask.pocoo.org/docs/api/#incoming-request-data

The two descriptions should be merged. Also they should say what happens when the request is not JSON. Is the .json attribute None?
"
289,Blueprints and Extensions and SQLAlchemy,2011-07-30T08:39:56Z,,"blueprints, docs",,,"We do not encourage people to create more than one database connection and to connect to databases in arbitrary extensions. The obvious exception are extensions whose sole purpose is to connect to databases. Dependency resolving is done by the developer. Eg:

``` #!python
app = Flask(__name__)
db = SQLAlchemy(app)
something = SomethingElse(app, db)
```

The problem comes with blueprints. If SomethingElse wants to define models it has to do that at a local scope where it has the reference to the db. Assuming it provides blueprints, how does the blueprint's views and other code get to the models? The sad truth is that if you make up blueprints on the fly the views in that blueprint don't know how to reference it.
"
288,Consistent quotes,2011-07-29T12:55:06Z,2011-07-29T12:55:50Z,,,,"Drives me crazy.
"
287,Setting multiple headers is not(?) supported in response,2011-07-26T12:42:24Z,2011-07-26T13:13:00Z,,,,"During the development of a HTTP proxy (which uses flask for the response view generation) I came into the issue of setting multiple header values.
The problem is that I get multiple Set-Cookies response from the upstream HTTP server, which I have to insert into flask's response. But currently it seems it's impossible due to the dictionary interface.
Any ideas?
"
286,AttributeError: type object 'EventsCodes' has no attribute 'IN_DELETE_SELF',2011-07-26T01:35:13Z,2011-07-26T10:08:20Z,,AttributeError,AttributeError: type object 'EventsCodes' has no attribute 'IN_DELETE_SELF',"It only happens when I try to enable debugging but this is the traceback I get

Traceback (most recent call last):
  File ""niftysite.py"", line 33, in <module>
    main()
  File ""niftysite.py"", line 30, in main
    app.run(host='0.0.0.0')
  File ""/home/aglenn/.virtualenvs/niftysite/local/lib/python2.7/site-packages/flask/app.py"", line 553, in run
    return run_simple(host, port, self, **options)
  File ""/home/aglenn/.virtualenvs/niftysite/local/lib/python2.7/site-packages/werkzeug/serving.py"", line 609, in run_simple
    run_with_reloader(inner, extra_files, reloader_interval)
  File ""/home/aglenn/.virtualenvs/niftysite/local/lib/python2.7/site-packages/werkzeug/serving.py"", line 528, in run_with_reloader
    reloader_loop(extra_files, interval)
  File ""/home/aglenn/.virtualenvs/niftysite/local/lib/python2.7/site-packages/werkzeug/serving.py"", line 436, in reloader_loop
    reloader(fnames, interval=interval)
  File ""/home/aglenn/.virtualenvs/niftysite/local/lib/python2.7/site-packages/werkzeug/serving.py"", line 464, in _reloader_inotify
    mask = reduce(lambda m, a: m | getattr(EventsCodes, a), mask, 0)
  File ""/home/aglenn/.virtualenvs/niftysite/local/lib/python2.7/site-packages/werkzeug/serving.py"", line 464, in <lambda>
    mask = reduce(lambda m, a: m | getattr(EventsCodes, a), mask, 0)
AttributeError: type object 'EventsCodes' has no attribute 'IN_DELETE_SELF'
"
285,"Document the debug param for Flask.run, it is not part of **options given",2011-07-23T18:33:27Z,2011-09-18T19:44:47Z,,,,"Document the debug param for Flask.run, it is not part of **options given to run_simple.

I am not sure bool() is appropriate.
"
284,Intersphinx link fixes.,2011-07-23T18:14:02Z,2011-07-23T18:15:01Z,,,,
283,Provide a built-in development server command-line interface.,2011-07-23T16:29:28Z,2014-07-26T12:27:47Z,,,,"As discussed on the mailing list:
http://flask.pocoo.org/mailinglist/archive/2011/7/22/application-mount-point/#abdbeee9ca8eda65f0e17a0aeb4fab5f

Make it possible to run a Flask application from the command line with this:

```
$ python -mflask.server yourapplication
```

What would that do?  It would attempt to import yourapplication and then looks for an object called ""app"".  If it finds that it uses that, otherwise you would have to do (yourapplication:application) or something.  Then it runs that with the development server.

What would that solve?

First of all it would no longer require `if __name__ == '__main__'`, secondly it would solve the double importing problems we commonly see as well as the fact that modules work different to applications.  Lastly the application object would no longer have to be a Flask application object but just any WSGI application object.
"
282,Minor documentation grammar / typo fixes,2011-07-19T21:44:15Z,2011-07-19T23:20:28Z,,,,"Just spotted these.
"
281,Typo: developped -> developed,2011-07-18T13:50:11Z,2011-07-18T14:04:32Z,,,,
280,Bugfixing docs/patterns/fileuploads.rst,2011-07-14T19:32:37Z,2011-07-15T17:02:58Z,,,,"copy and paste approach failed in the file upload tutorial
fixed it
hope you like it

cheers
"
279,route / add_url_rule Documentation,2011-07-14T13:00:50Z,2011-09-25T16:49:15Z,,,,"The docs are kinda inconsistent between route() and add_url_rule. The former should be documented as a decorator version of the latter which is true since Flask 0.3 at least.

Also with 0.7 and 0.8 we have some attributes on view functions that can have meanings attached. These now have a separate headline in the API docs, but I guess it would make sense to tidy this up a bit.
"
278,Typos in flask.app.Flask docstrings/comments,2011-07-13T00:35:40Z,2011-07-13T12:04:49Z,,,,"Line 85. ""yourapplicaiton"" where it should be ""yourapplication"":

```
        an SQL query in debug mode.  If the import name is not properly set
        up, that debugging information is lost.  (For example it would only
        pick up SQL queries in `yourapplicaiton.app` and not
        `yourapplication.views.frontend`)
```

Also, line 108, ""ocurrs"" where it should be ""occurs"":

```
    #: The debug flag.  Set this to `True` to enable debugging of the
    #: application.  In debug mode the debugger will kick in when an unhandled
    #: exception ocurrs and the integrated server will automatically reload
    #: the application if changes in the code are detected.
```
"
277,Don't use deprecated flask.session in flask.ctx.,2011-07-12T19:58:26Z,2011-07-12T20:54:55Z,,,,
276,Corrected decorators to remove duplicate teardown_request() and add after,2011-07-11T22:28:30Z,2011-07-11T22:32:56Z,,,,"Corrected decorators to remove duplicate teardown_request() and add after_request()
"
275,typo fix: flask -> flag,2011-07-11T22:25:56Z,2011-07-12T00:41:17Z,,,,
274,fixed typo,2011-07-10T16:28:32Z,2011-07-10T18:21:09Z,,,,
273,fixed typo,2011-07-10T16:25:25Z,2011-07-10T18:20:41Z,,,,
272,Blueprint template filters.,2011-07-08T15:00:26Z,2012-01-17T01:28:16Z,,,,"Adds an app_template_filter decorator to blueprint objects. Works exactly like the Flask.template_filter decorator.
"
271,small error in tutorial,2011-07-06T14:14:08Z,2011-07-07T11:21:39Z,,,,"I think there is a small error in the description of teardown_request.
"
270,Blueprints and URL processors,2011-07-06T00:22:43Z,2011-07-06T08:22:27Z,,TypeError,TypeError: 'dict' object is not callable,"In 0.7.1..

When I follow the example at the end of http://flask.pocoo.org/docs/patterns/urlprocessors/, I get...

```
TypeError: 'dict' object is not callable
```

In Blueprint's **init**(), I see:

```
    if url_defaults is None:
        url_defaults = {}
    self.url_defaults = url_defaults
```

which seems to overwrite the ""def url_defaults(..)"" below.

Everything seem to work as expected if I use something like this:

```
Blueprint.url_defaults_fix = Blueprint.url_defaults

bp = Blueprint(....)

@bp.url_defaults_fix
def abc(..):
    ....
```
"
269,Doc fix,2011-06-30T10:45:54Z,2011-07-06T08:25:40Z,,,,
268,Flask-7.0 uses with statement without import in helpers.py (Python2.5 incompatible),2011-06-29T08:22:17Z,2011-07-06T08:24:59Z,,,,"Flask-7.0 uses with statement without ""from **future** import with_statement"" in helpers.py, which cause broken on Python 2.5 environment.

The FIX:

add ""from **future** import with_statement"" to helpers.py
"
267,Missed the -w option in uWSGI deployment docs. ,2011-06-29T08:07:12Z,2011-08-24T22:57:33Z,,,,"Commit message (and pull req.) tells it all, I guess... Just 3 characters missing in the docs. 
"
266,Blueprint template lookup not documented enough,2011-06-28T21:50:58Z,2016-06-04T06:25:27Z,"blueprints, docs, good first issue",,,"The new blueprint template lookup scheme where the templates folder is just added to the searchpath instead of doing some weird stuff with the names as before. The documentation has to be clearer about that.
"
265,Issue #255: with statement in helpers.py and appengine compatibility fix.,2011-06-28T16:06:52Z,2011-06-28T16:09:04Z,,,,"Added with_statement import from **future** to ensure appengine compatibility.
"
264,with_statement & appengine compatibility,2011-06-28T15:57:54Z,2011-06-28T16:00:53Z,,,,"helpers.py in 0.7 uses the with_statement, but doesn't import it from **future**. This breaks appengine compatibility, at least when running with their runtime locally.

Fix is to do as app.py does and import with_statement.
"
263,Add a link to pluggable views docs in the changelog.,2011-06-28T13:25:59Z,2011-06-28T14:09:03Z,,,,
262,Typo fix in code samples for Pluggable Views doc.,2011-06-28T13:14:58Z,2011-06-28T14:09:21Z,,,,
261,Support for Class Based Views,2011-06-28T07:13:51Z,2011-06-28T12:46:21Z,,,,"Flask 0.8 should provide support for class based views similar to how they work in Django.

Additionally each CBV can provide the methods it responds so you don't have to register them on the route yourself, same with the endpoint.
"
260,Wrong Enctype Warnings,2011-06-27T08:22:15Z,2011-08-25T20:36:23Z,,,,"Because browsers send the filename of a filename if the enctype is urlencoded we could provide helpful warnings if the user attempts to use a file that's not there because the wrong enctype is set.
"
259,Fix a link in the changelog.,2011-06-27T06:21:46Z,2011-06-27T22:59:22Z,,,,
258,Make Tests for bluprints with dotted Names,2011-06-27T05:59:05Z,2011-06-27T07:21:00Z,,,,"We want to encourage blueprint names with dots in, make sure they work.
"
257,Pronoun gender fixes in documentation,2011-06-27T01:47:35Z,2011-06-27T05:58:10Z,,,,"This changes several instances of ""he"" to ""he or she"" in various places in the documentation.
"
256,url_for still reference module,2011-06-26T23:31:35Z,2011-06-27T05:58:33Z,,,,"url_for docstrings still reference module which are gone in 0.7

https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L152
"
255,editorial touch-ups to docs,2011-06-26T02:58:33Z,2012-01-17T02:52:23Z,,,,"I accidentally gq'd the lines to a width of 80, making it harder to see exactly what I've changed -- sorry! If that makes my suggestions unusable, you can simply refuse this request. I'm reading the docs to learn about Flask so I thought I might as well suggest improvements as I go.
"
254,Documentation Updates for 0.7,2011-06-24T15:38:15Z,2011-06-28T16:09:37Z,,,,"Here is what we still need to do:
1. improve the upgrading documentation.
2. expain some patterns you can do with blueprints
3. show how blueprints can be provided by extensions
4. show patterns with blueprints
"
253,Reports of sessions not working when SERVER_NAME set with port,2011-06-24T14:38:20Z,2011-06-27T07:40:49Z,,,,"Not sure how cookies are supposed to work with ports right now, but we got reports that they don't work with an explicitly set port. Investigate.
"
252,Added HTTPBin to Apps List,2011-06-23T17:16:04Z,2011-06-23T17:29:12Z,,,,"Thanks!
"
251,handle_exception doesn't catch everything.,2011-06-23T12:58:31Z,2011-06-23T18:55:17Z,,,,"Any errors that occur inside `request_context` are not properly caught by `handle_exception`. From app.py:

```
def wsgi_app(self, environ, start_response):
    with self.request_context(environ):
        try:
            response = self.full_dispatch_request()
        except Exception, e:
            response = self.make_response(self.handle_exception(e))
            return response(environ, start_response)
```

As an example, create an error handler for error code 500. Set `config['SERVER_NAME']` to something your client won't send, and visit the application. The call to `url_map.bind_to_environ` in `RequestContext` results in a ValueError from werkzeug.
"
250,Deploying with Fabric fabfile bugfix,2011-06-21T15:07:03Z,2011-06-21T15:12:44Z,,,,"Bug fix in the documentation for Deploying with Fabric: as of Fabric 1.0, in the local() function capture=False by default, so it must be explicitly set to capture=True so it returns a python string 
quick link to docs: http://docs.fabfile.org/en/1.0.1/api/core/operations.html#fabric.operations.local
"
249,jQuery Documentation Update,2011-06-20T22:07:54Z,2011-06-20T22:16:35Z,,,,"Improving documentation for loading jQuery. Now using Google CDN with fallback to local jQuery.
"
248,Review JSON Security,2011-06-20T07:57:08Z,2016-01-25T15:54:05Z,,,,"ECMAscript 5 changed behavior of Array literals. That part of the documentation is outdated by now. We should check what browsers are affected by this and update the docs accordingly.
"
247,don't spread JSON FUD,2011-06-19T18:54:09Z,2011-06-20T06:01:24Z,,,,"@rstacruz recently pointed me to the [JSON security](http://flask.pocoo.org/docs/security/#json-security) section of your documentation. It is irresponsible to pass off some sort of buggy browser behaviour (which probably doesn't even exist) as an inherent issue with using an array as the top-level object in a JSON document. The ecmascript 5 specification [very clearly states](http://es5.github.com/#x11.1.4):

> Let _array_ be the result of creating a new object as if by the expression `new Array()` where `Array` is the **standard built-in constructor** with that name.

Any browsers that behave as you say they _should_ in your documentation are not following the spec. I tested for this behaviour in Chrome, Opera, and Firefox, and none of them behaved as was described. Because of that, I ask that you remove that section of the documentation and put in its place a disclaimer that what was there previously (for over a year now!) was not factual. If anyone _does_ find this behaviour in any browser, report it instead in the proper place.
"
246,Split up Testsuite,2011-06-17T02:05:04Z,2011-08-26T10:21:52Z,,,,"After the 0.7 release we really should be splitting up the testsuite into more than one file :)
"
245,flask.__version__,2011-06-16T21:20:07Z,2011-06-28T21:31:00Z,,,,"New `flask.__version__` to determine what version of Flask is being used. 

Related: #216
"
244,Minor documentation fix,2011-06-16T14:11:00Z,2011-06-16T14:31:03Z,,,,"http://flask.pocoo.org/docs/patterns/appfactories/#basic-factories
- How do you get access the application with the config?
- How do you get access to the application with the config?
"
243,fixed minor typo,2011-06-16T06:32:01Z,2011-06-16T12:06:29Z,,,,
242,"As discussed with rduplain in IRC channel, uwsgi deployment documentation for nginx",2011-06-10T01:40:08Z,2011-06-10T16:17:13Z,,,,"Added initial uwsgi deployment documentation for nginx; updated nginx URL in fastcgi deployment docs; added uwsgi to deployment index
"
241,Tutorial Step 4 : teardown code sample is not well formated,2011-06-05T19:13:46Z,2011-06-24T14:38:48Z,,,,"On : http://flask.pocoo.org/docs/tutorial/dbcon/#tutorial-dbcon, the second sample code which should illustrate the teardown_request is not well formated.

@app.before_request def before_request():
  g.db = connect_db()

@app.teardown_request def teardown_request(exception):
  g.db.close()

Source code looks good anyway ?!?!
"
240,How to include custom Jinja extensions?,2011-06-04T17:29:50Z,2011-06-17T02:04:38Z,,,,"How do I include [FragmentCacheExtension example](http://jinja.pocoo.org/docs/extensions/#example-extension) into Flask?
"
239,added an argument to jsonify : status code,2011-06-01T16:16:36Z,2012-01-17T04:59:15Z,,,,"Hi,

Here's the thing :
- the first commit only passes the status argument to the Response base class.
- the second one updated the tests.

Thanks for this great microframework !
"
238,Clarify in docs that the SERVER_NAME config can also take a port number.,2011-05-30T19:41:48Z,2011-05-30T19:45:08Z,,,,"Change the documentation for the SERVER_NAME configuration value to tell that it can also take a port number. The port number is actually for url_for() to work with subdomains, as in issue #209.
"
237,A fix for send_file with unicode filenames.,2011-05-30T13:18:27Z,2011-06-24T14:30:56Z,,,,"send_file uses adler32 to build etags (which is enabled by default). adler32 takes a byte-string, and will try to encode unicode strings as ASCII which may fail. This patch encodes unicode filenames as UTF-8 before passing them to adler32.
"
236,Add Frozen-Flask to the extension registry,2011-05-29T07:38:55Z,2011-05-29T08:23:57Z,,,,"Add Frozen-Flask to the extension registry.

Also, I believe that it and Flask-Flatpages meet all the requirements for approved extensions, if someone wants to review them.

Thanks.
"
235,website's twitter.py script requires optional keywords,2011-05-24T07:53:27Z,2011-05-24T14:21:44Z,,,,"**twitter.py lines 65--70**

```
        for word in self.required:
            if word not in text:
                return False
        for word in self.optional:
            if word in text:
                return True
        return False
```

True can only be returned, if optional keywords are given. Therefore I recommend returning True if none of the for loops returned a value.
"
234,logging improperly extending directly from Logger class,2011-05-19T19:05:24Z,2011-05-24T14:34:44Z,,,,"The python logging facility provides a getter for the base logger class, logging.getLoggerClass().  This allows the base class of the logging singleton to be extended multiple times without overriding previous calls to logging.setLoggerClass(),   In my case specifically I'm setting up a base logging facility via an extended Logger,  flask won't play nice with this because its DebugLogger is not extended from the class returned via getLoggerClass().  For a patched version of the create_logging function see https://gist.github.com/981450
"
233,Prevent runtime error wrt json formdata,2011-05-18T22:24:31Z,2011-05-24T14:30:30Z,,,,"Hello guys,

I applied this change to my fork to alleviate an encoding problem.  I was sending http post with formadata jsonified.  The client machine uses iso-8859-1 and for most cases, I have to specify that encoding for xml and json work.

This works for my install, hopefully it will help others.

Ronnie and I discussed this in irc a while today.
"
232,Fixes Issue #227 where pop causes the session to be modified.,2011-05-17T15:50:35Z,2011-05-24T14:41:27Z,,,,"Prevent pop if flashes not in session to avoid modification to session fixes #227
"
231,pip install flask==dev resulting in svn warning,2011-05-14T11:28:35Z,2011-05-16T10:08:24Z,,,,"When I do the following in a fresh virtualenv initialized with --no-site-packages

```
pip install flask==dev
```

and then

```
pip freeze
```

then the result looks like this

```
Warning: cannot find svn location for Flask==0.7dev-20110514
## FIXME: could not find svn URL in dependency_links for this package:
Flask==0.7dev-20110514
Jinja2==2.5.5
Werkzeug==0.6.2
wsgiref==0.1.2
```
"
230,"the import order note was meant to be bold, not cursive",2011-05-08T09:35:12Z,2011-05-08T10:32:31Z,,,,
229,don't save session if nothing to save,2011-05-05T19:48:41Z,2011-07-08T17:38:05Z,,,,"makes caching w/varnish easier

``` diff
diff -r 66cb5def7b6e flask/app.py
--- a/flask/app.py      Fri Dec 31 15:21:46 2010 +0100
+++ b/flask/app.py      Thu May 05 15:45:18 2011 -0400
@@ -439,6 +439,8 @@ class Flask(_PackageBoundObject):
                         object)
         :param response: an instance of :attr:`response_class`
         """"""
+        if not session:
+            return
         expires = domain = None
         if session.permanent:
             expires = datetime.utcnow() + self.permanent_session_lifetime
```
"
228,Corrections to fabfile example,2011-04-27T21:47:38Z,2011-05-07T22:28:05Z,,,,"I could be wrong, but I think there are a couple of errors in the example fabfile. This fixes them.

Commit c6e4d743 is really what you want, the other two can be ignored. Couldn't figure out how to have make git behave.
"
227,get_flashed_messages() always forces session.should_save,2011-04-27T19:24:16Z,2011-05-28T13:14:21Z,,,,"I recently added message flashing to one of my apps, and noticed that it started re-issuing the session cookie on _every_ response.

A bit of digging revealed that `get_flashed_messages()` calls `session.pop('_flashes')` without first checking to see if `session['_flashes']` is missing or empty.  This has a side effect of triggering `ModificationTrackingDict.on_update()`, which in turn marks the session as modified even though it wasn't.  It happens even when no flash messages are set.

The fix should be easy.  Replace this part of `get_flashed_messages()`:

```
if flashes is None:
    _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', [])
```

With something like this:

```
if flashes is None and '_flashes' in session:
    _request_ctx_stack.top.flashes = flashes = session.pop('_flashes')
else:
    _request_ctx_stack.top.flashes = flashes =  []
```
"
226,Static files in non-url_prefixed modules don't work.,2011-04-27T07:26:36Z,2016-04-07T06:55:26Z,,,,"Hi,
I've encountered a strange bug while working with Flask. When I have two modules (say 'frontend' and 'admin') static files aren't found in frontend module. Admin module is url_prefixed with '/admin' and everything is fine with it.

The only workaround I found was to add a /static route in frontend module and serve files manually.

I've created a simple demo app to show the bug. It's available here: https://github.com/tomekwojcik/Flask-Module-Static-Files

Best ragards.
"
225,Application Dispatching > Combining Applications documentation is incorrect,2011-04-26T11:44:40Z,2011-06-25T18:20:58Z,,,,"The example in the docs under _Application Dispatching > Combining Applications_ is incorrect:

```
from werkzeug.wsgi import DispatcherMiddleware
from frontend_app import application as frontend
from backend_app import application as backend

application = DispatcherMiddleware(frontend, {
    '/backend':     backend
})
```

It leaves you with nothing to run, because `application` is _not_ an application (and thus cannot be `run()`) but an instance of `DispatcherMiddleware`, which nothing can be done with whatsoever. Google had no mention of DispatcherMiddleware apart from the above page and the Werkzeug web site. You therefore try to run it as a Werkzeug application, but:
- The Werkzeug documentation is lame and no help at all;
- It is not the right approach anyway.

The code sample should either be:

```
from werkzeug.wsgi import DispatcherMiddleware
from frontend_app import application as frontend
from backend_app import application as backend

frontend.wsgi_app = DispatcherMiddleware(frontend.wsgi_app, {
    '/backend':     backend
})

frontend.run()
```

or:

```
from flask import Flask
from werkzeug.wsgi import DispatcherMiddleware
from frontend_app import application as frontend
from backend_app import application as backend

application = Flask(__name__)

application.wsgi_app = DispatcherMiddleware(frontend, {
    '/backend':     backend
})

application.run()
```

There is one hint of this in _Quickstart > Hooking in WSGI Middlewares_ and another in the API reference for the `Flask` class, but neither of them is returned in Google searches about _Flask Werkzeug middleware_ for example.
"
224,Docs should mention that url_for() skips query string args with value=None,2011-04-20T18:07:10Z,2011-04-25T14:02:42Z,,,,"(Related to #20)

I just discovered that, when passing extra arguments to [url_for()](http://flask.pocoo.org/docs/api/#flask.url_for), it skips those whose values are None.  This is a convenient feature.  If it was documented, I would use it without worrying that it might disappear in the next version.
"
223,sys.excepthook error,2011-04-19T23:37:32Z,2011-06-24T14:36:37Z,,,,"When restarting in debug mode, this error was output:
- Detected change in 'atest.py', reloading
  Unhandled exception in thread started by
  sys.excepthook is missing
  lost sys.stderr
- Restarting with reloader...

It may be related to a known issue calling sys.excepthook from threads, see http://bugs.python.org/issue1230540

Using Flask 0.6.1, Werkzeug 0.62 under Python 2.7 64-bit on Solaris10/SPARC.
"
222,WTFForms: Error Handling for Forms in Templates,2011-04-19T15:40:04Z,2011-04-19T15:44:22Z,,ValueError,ValueError: too many values to unpack,"In the WTForms' documentation on [displaying errors](http://wtforms.simplecodes.com/#displaying-errors) it gives an example of putting all of a form's errors in a neat little section (second example) but when I run the aforementioned code Flask returns:

```
ValueError
ValueError: too many values to unpack
```

I imagine it comes from this line:

```
{% for field_name, field_errors in form.errors if field_errors %}
```

Is their example Django specific or am I just missing something?
"
221,Subclassing of Flask should be documented,2011-04-19T08:43:40Z,2016-06-03T16:53:19Z,docs,,,"- It should be made clear that for some problems (such as a custom Jinja environment), subclassing is _the_ solution and Flask is explicitly designed for it.
- Some examples and best-practices would be helpful, maybe as a 'pattern'. How to extend rather than replace the defaults, how to deal with immutable containers etc.
- The reasons for the need to subclass, and the design choice of immutable containers, could be explained and defended. (Needed at construction time?)

On IRC, questions for which subclassing is the answer, are not uncommon, and at the same time few realize that you can and _should_ do this for some things, and they're often confused as to _how_ it's properly done.

If I find the energy I might try to draft some of the above.
"
220,Custom default function for jsonify,2011-04-19T08:25:20Z,2014-07-26T12:26:09Z,,,,"It would be neat to be able to control the serialization of arbitrary objects with jsonify. The dumps function allows you to pass a callable for this. I propose the addition of either an overridable method on the Flask class that is passed by jsonify, or a decorator for registering such a function. The ""default default"" could simply raise TypeError, the ""default default"" for the json module.

``` python
class JSONAdaptiveFlask(Flask):

    def json_defaults(self, obj):
        if isinstance(obj, datetime):
            return obj.isoformat()
        try:
            return obj.__json__()
        except AttributeError:
            raise TypeError
```

… or …

``` python
@app.json_defaults
def json_adaption(obj):
    if isinstance(obj, datetime):
        return obj.isoformat()
    try:
        return obj.__json__()
    except AttributeError:
        raise TypeError
```

Unlike the rejected pull-request, this should be thread-safe. As for direct use of the json module, one can simply pass the reference:

``` python
json.dumps(obj, default=app.json_defaults)
```

In a discussion on IRC, Armin expressed concern that this kind of adaption isn't very useful in practice, because it differs between requests _what_ one wants serialized from an object. This problem can be solved by exploiting the fact that jsonify is request-bound, and the defaults function is able to read context-locals such as 'g'. It may not ""feel"" right but it is essentially what we need: a global state for the request.

``` python
class User(Model):

    def __json__(self):
        data = dict(name=self.name, joined=self.created_at)
        if g.user is self:
            data.update(email=self.email)
        if g.verbose_json:
            data.update(posts=self.posts)
```

The gain is that we can simplify views and structure the code better by moving model-logic to models. We can avoid repeating ourselves — the serialization is recursive, we just reference a datetime object and a list of instances of the Post model. We don't lose anything because by default it will behave as before and regardless we can still pass standard types directly to jsonify.

If you [Armin] approve the idea and decide on an API, I'll try my hand at a patch if you like.
"
219,before_request versus HTTP exceptions,2011-04-18T14:37:59Z,2017-04-26T06:07:39Z,,,,"Right now before_request cannot emit HTTP exceptions. This should be improved by allowing a certain useful subset of exception functionality there.
"
218,Small fix in the docs for deploying behind a proxy,2011-04-18T09:52:49Z,2011-04-18T15:00:12Z,,,,"Change to match headers in https://github.com/mitsuhiko/werkzeug/blob/master/werkzeug/contrib/fixers.py
"
217,Allow Header: appends an erroneous GET,2011-04-15T17:21:36Z,2011-04-18T15:10:59Z,,,,"A GET request is allowed for any route, even when it is not in the listed methods. The result is a 404 for the GET request.

For example:

<pre><code>@module.route('/foo', methods=[""PUT""])
def foo():
    return Response(status=204)</code></pre>


Here's the result of an OPTIONS request with the incorrect additional GET in the Allow header:

<pre><code>$ curl -IX OPTIONS http://localhost:5000/foo

HTTP/1.0 200 OK
Content-Type: text/html; charset=utf-8
Allow: PUT, HEAD, OPTIONS, GET
Content-Length: 0
Server: Werkzeug/0.6.2 Python/2.7
Date: Fri, 15 Apr 2011 17:17:31 GMT</code></pre>


A GET request responds with a 404:

<pre><code>$ curl -IX GET http://localhost:5000/foo

HTTP/1.0 404 NOT FOUND
Content-Type: text/html
Content-Length: 238
Server: Werkzeug/0.6.2 Python/2.7
Date: Fri, 15 Apr 2011 17:17:42 GMT</code></pre>
"
216,flask has no programmatically-accessible version number,2011-04-06T21:36:55Z,2011-06-28T14:56:29Z,,,,"I need to work around a problem in flask that is fixed in the development code. I wish flask had something like sys.version_info that my code could check before enabling the workaround.
"
215,Add safe_join: returns the filename used by send_from_directory.,2011-04-04T15:02:47Z,2011-04-18T14:48:49Z,,,,"Sometimes I want to use send_from_directory with special cases like pre-processing some file extensions or adding directory indexes. To access the relevant file myself, I need its filename. safe_join returns this name without sending the file directly.

I could just copy 6 lines from Flask, but this part is the one that is easy to get wrong (and accidentally expose /etc/passwd ...)

The new function appears nicely in the API docs, tests pass, but I did not add any test. Should we unit test it individually or are tests that use send_from_directory enough?
"
214,Untitled,2011-03-31T19:55:37Z,2011-04-18T14:40:57Z,,,,"Fixed a typo that was preventing second code block from appearing in a code block
"
213,Updating app.after_request decorator documentation.,2011-03-31T03:02:23Z,2011-04-18T14:39:39Z,,,,"I've had a problem with the after_request decorator for a long time until I realized that decorated functions must take one parameter and return a response. This updated documentation will hopefully help others not to make the same mistake.
"
212,Module.after_app_request causes exception (0.6.1),2011-03-31T02:23:08Z,2011-03-31T02:40:48Z,,TypeError,TypeError: after_request() takes no arguments (1 given),"When trying to use Module.after_app_request, it causes the following exception:

<pre>
Traceback (most recent call last):
  File ""/Users/remyroy/VirtualEnvs/issueproject/lib/python2.6/site-packages/flask/app.py"", line 889, in __call__
    return self.wsgi_app(environ, start_response)
  File ""/Users/remyroy/VirtualEnvs/issueproject/lib/python2.6/site-packages/flask/app.py"", line 883, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/Users/remyroy/VirtualEnvs/issueproject/lib/python2.6/site-packages/flask/app.py"", line 881, in wsgi_app
    response = self.process_response(response)
  File ""/Users/remyroy/VirtualEnvs/issueproject/lib/python2.6/site-packages/flask/app.py"", line 796, in process_response
    response = handler(response)
TypeError: after_request() takes no arguments (1 given)
</pre>


Steps to reproduce:
1.  Create a new folder issueproject.
2.  Create a file called issueproject.py in that folder with the following content:
   <pre>
   # -_\- coding: utf-8 -_-
   from flask import Flask
   from issueproject.views import views

app = Flask(**name**)

app.config.from_object('issueproject.config.Config')
app.register_module(views)

if **name** == ""**main**"":
    app.run()
</pre>
3.  Create a sub folder issueproject.
4.  Add a file called views.py in that sub folder with the following content:

<pre>
# -*- coding: utf-8 -*-
from flask import Module
views = Module(__name__)

@views.after_app_request
def after_request():
    pass

@views.route('/')
def index():
    return 'hello world'
</pre>
1.  Add a file called config.py in that sub folder with the following content:
   <pre>
   # -_\- coding: utf-8 -_-

class Config(object):
    DEBUG = True
    TESTING = False
</pre>
6.  Run the main issueproject.py with the following command line:

<pre>
python issueproject.py
</pre>
1.  Navigate to http://localhost:5000/ .
2.  See the exception.

Here is the pip freeze from my environment:

<pre>
Flask==0.6.1
Jinja2==2.5.5
PyRSS2Gen==1.0.0
Twisted==8.2.0
Werkzeug==0.6.2
altgraph==0.6.8.dev
bdist-mpkg==0.4.3.dev
bonjour-py==0.3
decorator==3.2.1
jsonrpc==0.01
macholib==1.2.1.dev
mercurial==1.8
modulegraph==0.7.2.dev
numpy==1.2.1
py==1.4.2
py2app==0.4.2
pyOpenSSL==0.7
pyobjc-core==2.2b3
pyobjc-framework-AddressBook==2.2b3
pyobjc-framework-AppleScriptKit==2.2b3
pyobjc-framework-Automator==2.2b3
pyobjc-framework-CFNetwork==2.2b3
pyobjc-framework-CalendarStore==2.2b3
pyobjc-framework-Cocoa==2.2b3
pyobjc-framework-Collaboration==2.2b3
pyobjc-framework-CoreData==2.2b3
pyobjc-framework-CoreText==2.2b3
pyobjc-framework-DictionaryServices==2.2b3
pyobjc-framework-ExceptionHandling==2.2b3
pyobjc-framework-FSEvents==2.2b3
pyobjc-framework-InputMethodKit==2.2b3
pyobjc-framework-InstallerPlugins==2.2b3
pyobjc-framework-InstantMessage==2.2b3
pyobjc-framework-InterfaceBuilderKit==2.2b3
pyobjc-framework-LatentSemanticMapping==2.2b3
pyobjc-framework-LaunchServices==2.2b3
pyobjc-framework-Message==2.2b3
pyobjc-framework-PreferencePanes==2.2b3
pyobjc-framework-PubSub==2.2b3
pyobjc-framework-QTKit==2.2b3
pyobjc-framework-Quartz==2.2b3
pyobjc-framework-ScreenSaver==2.2b3
pyobjc-framework-ScriptingBridge==2.2b3
pyobjc-framework-SearchKit==2.2b3
pyobjc-framework-SyncServices==2.2b3
pyobjc-framework-SystemConfiguration==2.2b3
pyobjc-framework-WebKit==2.2b3
pyobjc-framework-XgridFoundation==2.2b3
pyopencl==0.92
pytest==2.0.2
python-dateutil==1.2
pytools==11
virtualenv==1.5.1
wsgiref==0.1.2
wxPython==2.8.8.1
wxPython-common==2.8.8.1
wxaddons==2.8.8.1
xattr==0.5
zope.interface==3.5.1
</pre>
"
211,template and static directory names are hard-coded,2011-03-28T23:10:33Z,2011-06-24T14:31:33Z,,,,"While porting to flask, I found that there is no easy way to make flask look for templates and static files in the directories my application already uses for those files.  For various reasons, ""static"" and ""templates"" are not good choices for my app.  I wish I could configure flask to use my existing ones.
"
210,Starting the application,2011-03-28T11:32:33Z,2011-04-18T14:32:27Z,,,,"I was getting someone started on a project with flask and he jumped right on the tutorial and never saw a note on actually starting the application. I've added a note on where it seems most appropriate. 
"
209,"url_for does not list HOST:PORT on "".static"" entries",2011-03-22T17:32:23Z,2011-06-24T14:37:42Z,,,,"I've got a module based Flask app and expected to see the http://host:port/asset.file when calling url_for("".static""...

It does everything right except not listing the port number.
"
208,"Testing, Request Contexts, Extensions and Documentation",2011-03-20T20:39:03Z,2011-06-24T14:29:15Z,,,,"Right now it's not quite clear to many people how the request context can be used in unittests. It's a little bit weird because of a bunch of different issues.
- an application in non debug mode will not propagate exceptions. There should be a TESTING mode that raises exceptions through and also closes down the context unless preserved.
- Extensions should not connect to databases and similar things in before_request but attach to the context as necessary by themselves.
- Docs should outline how testing is supposed to happen.
"
207,Can we simplify Config.from_pyfile?,2011-03-15T12:07:44Z,2011-06-24T14:32:29Z,,,,"Why not:

```
imp.load_source('', path)
```

instead of https://github.com/mitsuhiko/flask/blob/master/flask/config.py#L123
"
206,Issue 198 doc fix,2011-03-15T03:37:32Z,2011-03-15T23:19:19Z,,,,"Small docstring fix.
"
205,PackageName==dev is required,2011-03-15T03:12:50Z,2015-04-25T08:43:38Z,docs,,,"Right now ExtensionName==dev is required to be approved however supporting that turns out to be surprisingly hard if you have changing repository URLs. We should either drop this requirement or provide a script that updates all existing descriptions with new names.

Right now a lot of Pocoo stuff itself does not support ==dev.
"
204,Extensions docs modifications.,2011-03-14T23:29:05Z,2011-03-15T23:20:33Z,,,,"Here's a second take at reworked extensions dev documentation. Again, the main point of these changes was to remove the example where a db was put on the g object.

Note also that I've removed the initialization function example, as it would be very difficult to implement without use of the g object.

Matt
"
203,Initial attempt at fixing task 174,2011-03-14T17:06:32Z,2011-03-14T18:27:53Z,,,,"with help from @brainsik
"
202,silent flag for config.from_pyfile,2011-03-14T14:47:48Z,2011-03-14T18:21:51Z,,,,"Silent flag added with checking for ENOENT & EISDIR. Test included.
"
201,Extension docs,2011-03-14T04:53:16Z,2011-03-14T18:25:26Z,,,,"Hey Armin -

I've update the extensions dev documentation as we discussed at the first sprint session.

As a reminder, the idea here was to make sure that the docs didn't recommend putting things like db objects on the g object in an extension - and especially not using before_request or after_request.

What I've tried to do is use patterns from the sqlalchemy extension. The one difference is a kind of ""manager"" pattern where the initialized extension returns a manager that has the db connection on it.

Let me know if this works for you. Obviously, I'm open to reworking if needed.

Matt
"
200,Wording issues on testing doc page,2011-03-14T02:22:23Z,2011-03-15T02:11:36Z,,,,"There are some minor wording issues/awkward sentences in a few places on the Testing Flask application page.
"
199,DispatcherMiddleware and application creating documentation,2011-03-14T02:16:50Z,2011-06-24T14:33:55Z,,,,"Multiple applications should be documented on top of dispatcher middleware and some other things.
"
198,Config.from_envvar should be able to fail silent,2011-03-14T02:11:26Z,2011-06-24T14:33:03Z,,,,"Right now from_envvar does not support silent falling back. This should be fixed and implemented similar to from_pyfile.
"
197,Extension Reviewing,2011-03-14T01:35:22Z,2011-09-05T17:06:49Z,,,,"Approve new extension reviewers and do a bunch of extension reviewing at pycon.
"
196,Fix crossref links in docs,2011-03-14T00:50:58Z,2011-03-14T01:10:44Z,,,,"Couldn't make it to PyCon but helping out with the sprint remotely :)

https://github.com/mitsuhiko/flask/issues/labels/feedback#issue/180
"
195,Typo fixes for the sprint start.,2011-03-13T23:49:45Z,2011-03-14T01:14:32Z,,,,"Corrected a few small typos in the documentation for the start of the PyCon sprint. There are only two real typos, the rest are mostly a question of hyphenation and wording.
"
194,Open the session after the request context is pushed on the stack,2011-03-11T14:35:25Z,2011-03-14T08:25:25Z,,,,"This is required to implement a custom session storage with for example the following code:

```
class CustomSession(Session):
    def __init__(self, *args, **kwargs):
        super(self.__class__, self).__init__(*args, **kwargs)
        self._db_instance = None


class CustomSessionStore(SessionStore):
    def get(self, sid):
        if not self.is_valid_key(sid):
            return self.new()

        instance = SessionData.query.get(sid)
        data = instance.data if instance else {}
        session = self.session_class(data, sid, False)
        session._db_instance = instance
        return session

    def save(self, session):
        if session._db_instance:
            session._db_instance.data = dict(session)
        else:
            instance = SessionData(id=session.sid, data=dict(session))
            db.session.add(instance)
            session._db_instance = instance
        db.session.commit()
```
"
193,Wording change to the documentation,2011-03-09T18:36:05Z,2011-03-14T18:26:43Z,,,,"Each time I start up a new flask project I run into the same mental block while re-reading the documentation. The Packages section says to put the view imports at the bottom of the file. So each time I run into that problem I spend 20 minutes thinking ""Sure, that works for packages but I need to register my modules and I can't do that if the import has to be the last thing in the file."" I think the language changes here make it clear that the import doesn't have to be the last thing.
"
192,log exceptions using app.logger,2011-03-04T18:03:49Z,2015-11-03T14:55:10Z,,,,"I'm working on a project where we're running flask w/mod_wsgi in development and it'd be really nice to be able to route all errors the app's log (vs having some in the app's log and some in the apache log).  Though the built-in dev server is more convenient, we're running mod_wsgi in development for consistency with production.
"
191,Update the readme,2011-03-03T15:14:00Z,2011-09-06T01:54:49Z,,,,"The readme is horribly outdated, especially the 'Is it ready?' section. It should be updated to reflect the maturity of the project.

Also it mentions that Flask is intended for small projects which, even though it is true, probably scares away people who want to build a medium to large sized project, which is really not necessary.
"
190,Should link to Werkzeug’s docs prominently,2011-02-22T14:41:11Z,2017-05-22T19:29:54Z,docs,,,"Many Flask questions on the mailing list or IRC are easily answered by reading Werkzeug documentation. Maybe Flask docs should make more obvious (and repeat everywhere) that many thing (Request and Response objects, routing, ...) are just inherited from Werkzeug, and link to the relevant documentation.
"
189,"{{ url_for('static', filename='style.css') }} is not working in Python 2.7.1",2011-02-21T15:28:51Z,2011-02-22T11:03:36Z,,,,"{{ url_for('static', filename='style.css') }} is not working, gives error 500.
Python 2.7.1, Flask 0.6.1
Try to run minitwit.py
"
188,Please review Flask-FlatPages and Flask-Static,2011-02-20T12:46:46Z,2011-09-05T23:01:47Z,,,,"Please review the [Flask-FlatPages](http://packages.python.org/Flask-FlatPages/) and [Flask-Static](http://packages.python.org/Flask-Static/) extensions for approval.

All [requirements](http://flask.pocoo.org/docs/extensiondev/#approved-extensions) are met as far as I can tell.
"
187,Issue 178 - website fixes,2011-02-20T05:50:15Z,2011-02-21T02:20:19Z,,,,"Added link to issue tracker from main page and community page.
"
186,Issue 178,2011-02-20T05:23:05Z,2011-02-21T02:19:58Z,,,,"Added a link to issue tracker from the left navigation of documentation.
"
185,Issue 178,2011-02-20T05:10:19Z,2011-02-20T13:13:36Z,,,,"Added a link to issue tracker from the left navigation of documentation.
"
184,runserver.py was missing from directory listing,2011-02-19T23:56:23Z,2011-02-22T06:15:42Z,,,,"I noticed that runserver.py was missing from one of the directory listings in the documentation.  Great work on Flask, so far I'm really liking it and can't wait to hear more about it at PyCon!
"
183,Document Auth&Auth,2011-02-17T22:25:12Z,2016-06-03T22:17:00Z,docs,,,"People seem to be put off by the lack of auth&auth in Flask. Just because it's not there it does not mean it's hard. Documentation should show an example, maybe with Flask-SQLAlchemy.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/54
"
182,"""Nothing is rendered""",2011-02-17T22:23:57Z,2015-04-25T08:43:58Z,,,,"There seem to be a few situations left where ""nothing is rendered and nothings is displayed"" ends up for the user. This probably means that the debug mode was not enabled. We should probably add a stderr based error logging by default in production mode because of that or at least warn the user in the documentation more.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/56
"
181,Discouraging Foreword in Documentation,2011-02-17T22:22:33Z,2012-07-15T14:29:20Z,docs,,,"The documentation is currently very discouraging to many new users. We shouldn't have written the documentation that way because nobody else does and honesty is not expected I guess :)

Related feedback issues:
- http://feedback.flask.pocoo.org/message/60
"
180,Documentation not properly cross referenced,2011-02-17T22:11:15Z,2011-03-14T01:13:33Z,docs,,,"The documentation should cross reference better. A few of these might be caused by the recent moving around inside Werkzeug.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/92
"
179,mod_wsgi Deployment Chapter is incomplete,2011-02-17T22:09:18Z,2014-09-04T21:01:08Z,docs,,,"We have to expand the mod_wsgi deployment chapter.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/98
"
178,Flask Bugtracker is not obvious,2011-02-17T22:08:26Z,2011-02-21T10:20:34Z,,,,"People have a hard time finding the issue tracker apparently. We should probably link that from more prominent places.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/103
"
177,Tutorial should mention deployment with mod_wsgi or something else,2011-02-17T22:07:21Z,2014-09-04T21:01:10Z,docs,,,"Many people struggle with deploying a simple Flask application. The tutorial should show that and provide some helpful pointers to other parts of the documentation that handle deployment.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/105
"
176,Example Application too Basic,2011-02-17T22:06:26Z,2015-11-03T14:39:22Z,docs,,,"There should be a larger tutorial that not only shows how to use Flask but also some extensions (maybe Flask-Script, Flask-SQLAlchemy and Flask-WTF) and modules (or what we will call them then)

Related feedback issues:
- http://feedback.flask.pocoo.org/message/115
"
175,Error Handlers versus Werkzeug Exceptions,2011-02-17T21:51:42Z,2017-04-26T06:14:51Z,discussion,,,"Currently you can only declare error handler for Werkzeug exceptions. That's pretty much the case because what is not raised as a Werkzeug HTTP exception can't be catched. However since Python 2.4 is currently in the process of being phased out we could now finally make exceptions actual response objects if we prefer so it would make sense to keep that in mind and provide catching not only by code but also by any kind of instance check.

This also affects Werkzeug.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/112
"
174,after_request behavior regarding exceptions,2011-02-17T21:49:45Z,2011-03-14T20:14:11Z,,,,"after_request is not executed if an exception happens in debug mode. This is annoying for databases because it requires that you restart the server to tear down the connection. Sometimes that's what you want, otherwise not. The original intention was that you want to continue having the transaction in the interactive debugger.

Generally however we need a separate decorator that always executes after request, even if an exception happened. Signals are one option, if that is what we want we should document it better. I would prefer a separate decorator however.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/108
- http://feedback.flask.pocoo.org/message/76
"
173,Documentation needs to explain Circular Dependencies Better,2011-02-17T21:46:50Z,2016-06-03T22:19:13Z,docs,,,"Currently the documentation does not explain well enough how to deal with circular imports.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/99
- http://feedback.flask.pocoo.org/message/18
"
172,Module is a bad name / Bad behavior,2011-02-17T21:45:56Z,2011-08-07T08:53:50Z,,,,"Currently Flask calls the blueprint for reusable thingies ""Module"" which is a terrible name because it already has a lot of meaning in Python. Because Modules also need to be pimped we should consider introducing a new concept altogether with a new name and phase out modules.

For all changes that are backwards incompatible we should consider that people hate updating their code so at the very least provide a script like the werkzeug import rewriter.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/10
- http://feedback.flask.pocoo.org/message/21
- http://feedback.flask.pocoo.org/message/99
- http://feedback.flask.pocoo.org/message/117
"
171,Reverse Relative/Absolute Linking for url_for,2011-02-17T21:42:00Z,2011-06-24T14:28:53Z,,,,"url_for is currently the wrong way round compared to absolute imports. This also makes converting into larger applications hard when you suddenly introduce modules and a few views on the application itself remain (eg: static exports). The problem with ""reversing"" is that it breaks current code, so at the very least it should be an option.

We also have to investigate how many extensions this would affect.

Related feedback issues:
- http://feedback.flask.pocoo.org/message/7
"
170,jsonify doesn't accept a list,2011-02-16T20:30:58Z,2011-02-16T20:33:09Z,,,,"I was suprised to find that jsonify(['hello', 'world']) will raise a TypeError even though 

> [
>     ""hello"",
>     ""world""
> ]

is valid json.

I think there should be a check to see if the first argument is a list instance and just do a json dump of the first argument if it is or something like that.
"
169,trailing slash redirect doesn't work for route('/'),2011-02-14T21:32:16Z,2014-10-19T18:38:07Z,,,,"Flask's automatic redirects to add a trailing slash don't appear to work for the root view.  This isn't noticeable when the application is mounted at the root of a domain, but mine is mounted in a subdirectory using mod-wsgi:

WSGIScriptAlias /myapp /path/to/myapp/modwsgi/stub.py

The result is that when someone visits http://mysite/myapp, none of the application's relative urls work.  (This is expected if the trailing slash is missing, because a relative url like static/image.png means something different depending on whether the current page is http://foo/bar or http://foo/bar/)
"
168,jsonify and return a list,2011-02-12T20:00:14Z,2011-02-12T20:08:01Z,,ValueError,ValueError: dictionary update sequence element #0 has length 1; 2 is required,"I tryed to do the following:
    term = request.args.get('term')
    query = db.session.query(Class)
    query = query.filter(Class.name.like('%s%%' % term))  
    return jsonify ([{'label' : klass.name } for klass in query.all()])

and it returned the following excpetion:
    File ""C:\Users\tzulberti\envs\uml\lib\site-packages\flask-0.6.1-py2.7.egg\flask\app.py"", line 889, in **call**
        return self.wsgi_app(environ, start_response)
    File ""C:\Users\tzulberti\envs\uml\lib\site-packages\flask-0.6.1-py2.7.egg\flask\app.py"", line 879, in wsgi_app
        response = self.make_response(self.handle_exception(e))
    File ""C:\Users\tzulberti\envs\uml\lib\site-packages\flask-0.6.1-py2.7.egg\flask\app.py"", line 876, in wsgi_app
        rv = self.dispatch_request()
    File ""C:\Users\tzulberti\envs\uml\lib\site-packages\flask-0.6.1-py2.7.egg\flask\app.py"", line 695, in dispatch_request
        return self.view_functions[rule.endpoint](**req.view_args)
    File ""E:\Proyectos\pywebuml\src\pywebuml\web.py"", line 50, in autocomplete_search
        return jsonify([{'label' : klass.name } for klass in query.all()])
    File ""C:\Users\tzulberti\envs\uml\lib\site-packages\flask-0.6.1-py2.7.egg\flask\helpers.py"", line 106, in jsonify
        return current_app.response_class(json.dumps(dict(_args, *_kwargs),
    ValueError: dictionary update sequence element #0 has length 1; 2 is required

But when using from json import dump the result of the query is returned without any problem.
ValueError: dictionary update sequence element #0 has length 1; 2 is required
"
167,Fix for a word tense issue in the docs.,2011-02-06T21:16:02Z,2011-02-17T21:37:31Z,,,,
166,Update Extension List,2011-02-06T05:06:20Z,2011-02-06T12:06:20Z,,,,"There are tons of new extensions that need to be reviewed :)

http://pypi.python.org/pypi?%3Aaction=search&term=flask&submit=search
"
165,Updated documentation for deploying with Lighttpd,2011-02-04T13:28:45Z,2011-02-05T16:29:54Z,,,,"I've updated the documentation for Lighttpd deployment with FastCGI.
"
164,"Wrong ""Date"" http header, breaks clientside caching for static files, lots of 304 responses",2011-02-04T03:00:55Z,2011-02-06T00:41:07Z,,,,"quoting from flask.helpers.send_file:
    # if we know the file modification date, we can store it as the
    # current time to better support conditional requests.  Werkzeug
    # as of 0.6.1 will override this value however in the conditional
    # response with the current time.  This will be fixed in Werkzeug
    # with a new release, however many WSGI servers will still emit
    # a separate date header.
    if mtime is not None:
        rv.date = int(mtime)

These 2 lines break clientside caching because they emit a wrong Date header.

As by rfc 2616, the Date header should tell when the Response originated from
the server (== current server time), but this code sets it to the mtime of
the static file (== some time in the past).

This obviously at least breaks Firefox 3.6, because it'll always consider its
cache entry as stale then (even when the Expires date and max-age would
normally not lead to staleness).

Wrong behaviour:
1st request -> 200, all further requests (directly afterwards) -> 304

Correct behaviour (wrong code removed):
1st request -> 200, 
(NO further requests happening until Expires is reached), 
next request (after expiry) -> 304

Wrong behaviour was introduced after 0.6.2 due to unknown reasons by:

https://github.com/mitsuhiko/flask/commit/85ff63c32e7237280bff3293481a371fb3da180c

I don't see how this shall ""better support conditional requests"", it rather
looks like breaking caching and doing lots of unneeded requests.
"
163,"control of Session hash_method, serialization_method, expiration behavior",2011-01-30T02:13:08Z,2014-07-26T12:22:17Z,,,,"[Revised after reading the code more carefully.]

I'd like to use Flask sessions with a few tweaks:
- json instead of pickle
- sha256 or sha512 instead of sha1
- expiration when the browser closes _or_ after an idle time limit, whichever comes first: save_cookie(session_expires=something, expires=None)
- automatically updated last-request time, to support the idle time limit

In the absence of direct support of these features, I think I can accomplish them with a SecureCookie/Session subclass.  It looks like I can make Flask use my subclass by overriding Flask.open_session(), but since the existing method contains slightly more logic than simply instantiating a Session, I'm concerned that overriding it might introduce strange behavior with future versions of Flask

Would you consider exposing an official means of using a custom Session/SecureCookie class?  Maybe even turning some of the above tweaks into Flask configuration options?
"
162,overriding JSONEncoder,2011-01-28T06:07:26Z,2011-02-05T17:01:56Z,,,,"Hey, I don't know if this is the right flask-ish way to do this, but it would great to have a way to set the JSONEncoder to allow for non-dict object types.  This seemed like the easiest way, but I didn't see a good way to fit this into the existing config.

-matt
"
161,Endpoint decorators,2011-01-23T12:32:22Z,2011-01-24T13:00:57Z,,,,
160,Favicon pattern,2011-01-20T16:06:00Z,2011-01-21T14:50:29Z,,,,
159,A typo in the open_resource() doc string.,2011-01-16T12:35:54Z,2011-01-16T13:29:37Z,,,,
158,Typos + favicon pattern,2011-01-10T01:17:28Z,2011-01-20T15:46:46Z,,,,
157,One-Click-Getting-Started Script,2011-01-07T15:15:47Z,2011-01-08T05:58:36Z,,,,"Many people don't like to deal with virtualenv and other things to get started. Maybe it would be interesting to play around with various concepts of reducing the installation time to executing a single script that creates a tarball with flask and all deps in there so that you can just drop it into a folder and are done.
"
156,fix subdomain for static rule on registering module,2011-01-06T15:48:22Z,2011-01-07T23:51:30Z,,,,
155,OpenID login for AOL broken in Flask website.,2011-01-04T23:33:18Z,2014-07-26T12:22:41Z,,,,"Logging in to flask.pocoo.org with http://openid.aol.com/username fails consistently for me.  After being asked to share my nickname by AOL I just never get redirected back to Flask site.  

Safari Version 5.0.3 (6533.19.4)
MacOS X 10.6.5
"
154,docs updates to match new Werkzeug docs,2011-01-04T00:09:02Z,2011-01-07T23:46:05Z,,,,"changed all references to not refer to magical import system
"
153,Context processor use is problematic.,2011-01-03T02:39:36Z,2013-06-20T15:11:01Z,,,,"Implementing Facebook authentication, I need a context processor that will insert a current_user variable to the template context by performing some operations on the cookies/request. Since context processors need the app object for the decorator, they are rather hard to put in another file, and this feels unclean.

Could something be done to enable putting context processors in a context_processors.py file by themselves, short of importing and decorating them one by one?
"
152,Trailing slash URL redirect does not include the query string.,2011-01-01T14:56:37Z,2011-03-14T20:35:18Z,,,,"When redirecting, for example, ""/home"" to ""/home/"", the query string is discarded. For example, ""/home?foo=bar"" is redirected to ""/home/"" instead of ""/home/?foo=bar"", as expected.
"
151,Added closing tags to template examles,2010-12-30T12:50:44Z,2011-01-01T17:02:40Z,,,,"In the tutorial _Step 6: The Templates_, some of the html closing tags for the definition lists and list items were missing in `show_entries.html` and `login.html`. Regards.
"
150,"Global ""messages"" when using flash()",2010-12-12T00:16:10Z,2010-12-20T21:51:27Z,,,,"When using the flash() function I use get_flashed_messages() in the template for display.  Today when attempting to use the variable ""messages"" in my template I found the flashed messages are exposed there as a global in the templates.  That's probably ok but unless I missed it, this is not documented in the flash() documentation: http://flask.pocoo.org/docs/api/#message-flashing or the jinja context here: http://flask.pocoo.org/docs/templating/

My ""messages"" were hidden completely by the (empty) flash messages until I realized what might be happening.

Anyhow, thanks for the great tools!
"
149,UnicodeEncodeError when script is in a folder with non-ascii characters in the name,2010-12-09T17:51:54Z,2016-06-03T22:52:12Z,,,,"Very very nice work done in Flask! Really liked it!
However, I was trying to run my Flask script under a subfolder of my Desktop folder in Ubuntu. Since my system is set up for Portuguese (I'm Brazilian), the default name for the folder is ""Área de Trabalho"". I was getting UnicodeEncodeError every time I tried to run the example in ""11.7 Uploading Files"". (At least it was really good to teach me how to use the Flask debugger!) I went around, examining where the error was coming from, and, finally, got to ""File ""/usr/local/lib/python2.6/dist-packages/Flask-0.6-py2.6.egg/flask/helpers.py"", line 350, in send_file"", when the function adler32 uses the unicode string. Then, I just tried a quick ""from zlib import adler32; adler32(u'Á')"" to realize that zlib doesn't allow unicode strings, returning a ""UnicodeEncodeError: 'ascii' codec can't encode character u'\xc1' in position 0: ordinal not in range(128)"".
Of course I can move my script to another folder, but it would be nice not having to think about that in the future, especially when it is said that ""Flask like Jinja2 and Werkzeug is totally Unicode based when it comes to text"".
Sorry if I don't make much sense... it's almost 3:00am around here...

Congrats for the great job on Flask!

jjunho
"
148,Allow custom TestClient,2010-12-03T18:42:28Z,2010-12-06T10:16:20Z,,,,"It would be useful to make the test client class an overridable property (as is currently the case with response_class).

It would then be possible to insert a custom TestClient class with additional methods (for example, a ""login"" method) in unit tests.

For example:

```
app.test_client_class = MyCustomClient
client = app.test_client() 
```
"
147,pypy 1.4 and Flask Sessions,2010-11-26T23:48:37Z,2013-07-26T22:25:22Z,,,,"Hello,

just tried pypy 1.4 and go a strange bug when using Flask's sessions:
here is the traceback:
http://paste.pocoo.org/show/296447/

a simple app that trigger the bug:
http://paste.pocoo.org/show/296464/
"
146,Passthrough exceptions in TESTING mode,2010-11-21T23:17:35Z,2011-03-16T14:27:17Z,,,,"I think if TESTING is set, Flask should re-raise exceptions just like it currently does if DEBUG is enabled. This would enable a behavior similar to DEBUG_PROPAGATE_EXCEPTIONS while still testing with DEBUG=False.
"
145,Fix issues like issue 111,2010-11-20T12:03:25Z,2010-11-27T17:08:28Z,,,,"In Flask's add_url_rule method, after add rule to url_map, then check whether the rule is added before. 

```
rules_before_added = self.url_map._rules[:-1]
ix = rules_before_added.index(rule)
```

If the rule added before, then override the view function of previously rule.

```
if endpoint_override:
    self.view_functions[endpoint_override] = view_func
```
"
144,Minor spelling fixes,2010-11-13T11:29:55Z,2010-11-19T12:29:07Z,,,,"Mainly `unicode` -> `Unicode`.
"
143,Pointless example for Signal.connected_to,2010-11-09T21:30:12Z,2010-11-19T20:25:51Z,,,,"The example last in [this](http://flask.pocoo.org/docs/signals/#subscribing-to-signals) section is pointless because the `recorded` list is never yielded and it is not reachable from anywhere. `connected_to` yields `None`.

```
def captured_templates(app):
    recorded = []
    def record(template, context):
        recorded.append((template, context))
    return template_rendered.connected_to(record, app)
```

It's still a meaningful pattern for like what Flask-Testing does, appending to `self.templates` which in deed is reachable from tests. What would be a sensible rewrite?
"
142,Untitled,2010-11-08T17:07:25Z,2010-11-08T17:30:21Z,,,,
141,Module-local errorhandler,2010-11-04T20:58:11Z,2014-07-26T12:19:56Z,,,,"There's probably a reason this isn't currently supported, but in any case it _would_ be neat if we could have errorhandlers local to a `flask.Module`, that don't affect the application globally.
"
140,Make tuple to make_response handle response objects,2010-11-04T20:55:50Z,2012-03-13T21:00:50Z,,,,"Mainly so that this works:

```
return jsonify(error=""I pity the foo'!""), 400
```

This would result in what now requires:

```
return Response(jsonify(error=""I pity the foo'!."").data,
                mimetype='application/json', status=400)
```
"
139,Typo in the security XSS section.,2010-11-03T19:17:52Z,2010-11-07T12:37:15Z,,,,
138,Updated link for 'declarative' in sqlalchemy.rst,2010-11-03T11:46:48Z,2011-02-18T05:36:29Z,,,,
137,Minor changes on docs,2010-10-31T03:56:04Z,2010-11-01T23:04:03Z,,,,"Fixed issue #133.
"
136,Fixed indentation in session API docs,2010-10-31T00:59:56Z,2010-11-01T23:05:15Z,,,,"While looking through the Flask docs this evening, I came across a minor formatting issue in the list attributes on session. The single commit here fixes that.
"
135,Some minor doc fixes,2010-10-28T21:21:42Z,2010-10-29T16:41:57Z,,,,"Hi Armin, Dan,

Was running through the introduction and tutorial and picked up some minor fixes.
Please pull if they are any use for you.

Thanks for all the work you put out on Flask!

Regards, Daniel
"
134,test_request_context should trigger before_request and after_request,2010-10-27T16:19:47Z,2010-10-27T23:21:03Z,,,,"Am I missing a reason why this isn't the case or is it simply a bug?
"
133,signals.rst,2010-10-25T15:19:45Z,2010-11-01T23:03:57Z,,,,"This ...

 Example subscriber::

```
    def log_template_renders(sender, template, context):
        sender.logger.debug('Rendering template ""%s"" with context %s',
                            template.name or 'string template',
                            context)

    from flask import request_started
    request_started.connect(log_template_renders, app)
```

... the two last lines must be...
        from flask import template_rendered
        template_rendered.connect( log_template:renders, app)
"
132,Documentation bug fix,2010-10-25T13:40:06Z,2010-10-25T15:49:52Z,,,,
131,Modules and Lazy Loading,2010-10-25T08:29:08Z,2011-06-17T02:06:44Z,,,,"The new module system should support lazy loading and still provide early access to templates and static files.
"
130,Website,2010-10-23T10:10:09Z,2010-10-23T11:17:11Z,,,,
129,Thoughts about the fabric docs,2010-10-22T17:47:32Z,2016-06-05T20:13:59Z,docs,,,"Maybe use of one of these should be suggested:

```
setup.py egg_info ...
--tag-svn-revision (-r)  Add subversion revision ID to version number
--tag-date (-d)          Add date stamp (e.g. 20050528) to version number
--tag-build (-b)         Specify explicit tag to add to version number
```

A problem with this is that `setup.py --fullname` does not include the tag. Not really an issue with `-b`, a useful value might be `git log -1 --format=%h` for example.

Another thought: why go through all that trouble to extract the tarball?

```
easy_install myapp.tar.gz
```

Also: why not call `pack()` in deploy?
"
128,Proper initial environ for flask's test_app(),2010-10-22T15:18:29Z,2010-10-22T15:19:55Z,,,,"Better handling for `test_request_context` don't just append the port.
Also implemented a proper initial environment to use with `Flask.test_app()` based on the application's configuration.
"
127,Ticket 126,2010-10-21T19:36:52Z,2010-10-22T12:37:06Z,,,,"Here's a fix for ticket 126.

I still suspect that a similar problem will rise when using app.test_client(). I'll investigate.
"
126,Provide a correct initial environment based on app's config,2010-10-21T06:58:29Z,2010-10-22T12:40:50Z,,,,"Recently I provided a fix for flask-script https://bitbucket.org/s0undt3ch/flask-script/changeset/6e7141f2d142 which provides a correct environment for test apps based on their configuration.

I think this fix should be implemented instead on Flask itself.
"
125,Fix failing unit tests when using flask under Jython,2010-10-19T04:03:48Z,2010-10-19T07:07:42Z,,,,"I'm attempting to work with flask under Jython, and I've encountered some failing unit tests in my initial investigations. 

On Jython sys is not implemented as a python module so unfortunately the code for dynamically creating the config module in the Config.from_pyfile method does not work as intended.

I created a patch so this module is created using the imp.new_module('config') rather than type(sys)('config').
"
124,small change to tutorial 'folders' page,2010-10-12T02:12:06Z,2010-10-22T12:37:56Z,,,,"replaced 'Drop all the templates there' with 'The templates you create later in the tutorial will go in this directory.'

The original wording was confusing to someone who I am teaching how to program using Flask.
"
123,issue in test_request_context method of Flask class,2010-10-11T19:24:53Z,2010-10-22T16:11:56Z,,,,"When SERVER_NAME in conf is not None and different to ""localhost"",  app.test_request_context() will be failure.

Instead, we can do like this

```
  environ_overrides=dict(HTTP_HOST=app.conf['SERVER_NAME'],
                        SERVER_NAME=app.conf['SERVER_NAME'])

  app.text_request_context(environ_overrides=environ_overrides)
```

That's OK. Just look at above there is no issue in test_request_context, but what can extensions which use test_request_context do ? It is not a good idea if it handled by themselves.

For example, in Flask-Script's shell command, it will make a text_request_context and run shell in this context. If Flask-Script don't deal with SERVER_NAME environ, shell command will fail. 

I believe that Flask should do something for that because SERVER_NAME is imported by Flask and using in create_url_adapter method and others.
"
122,HTTP method decorators,2010-10-07T20:01:35Z,2010-10-09T01:18:03Z,,,,"Hello, I just wanted to know if you were interested in this kind of syntactic sugar. That is:

@app.get(/bla/bla/)<br />
def do_something():

@app.post(/bla/bla)<br />
etc.

For the moment there are just @get and @post implementations. Of course the way it's implemented is really not rocket science, but at least it seems it does not break anything.
"
121,Another small packages documentation change,2010-10-06T13:58:45Z,2010-10-07T11:33:18Z,,,,"Just a small change to docs/patterns/packages.rst

The example code about using modules didn't mention the use of the url_prefix keyword argument to the register_module method on the app. When I created an app following the code examples this way, it wouldn't work until I debugged the problem and found that both the admin and frontend module ""apps"" were being mounted on '/' in the url map by default.

I made a small change to the code example and added an short explanation paragraph below to help explain this.
"
120,handful of minor doc touchups,2010-10-06T06:12:08Z,2010-10-07T11:32:17Z,,,,"Fixed a trail-off sentence in docs, then passed through for obvious typos and word flow.

-Ron
"
119,support classes in addition to functions for views,2010-10-05T19:33:45Z,2011-09-19T14:58:22Z,,,,"Hope I did this right.  First time using github and using hg-git, as well.
"
118,Powered By Flask,2010-09-30T09:30:17Z,2010-10-05T10:07:21Z,,,,"I added our relaunched website.
"
117,minor doc fix,2010-09-11T23:51:57Z,2010-09-12T18:43:01Z,,,,"noticed that the API docs claim that app.after_requests_funcs is updated by the **before_request()** decorator
"
116,Add domain to module,2010-09-10T05:36:56Z,2014-07-26T12:20:39Z,,,,"It should be possible to assign a module to a domain. Currently you can only set subdomain.
"
115,Small documentation change,2010-09-09T19:38:05Z,2010-09-09T22:56:36Z,,,,"Just wanted to clear up an ambiguity I ran into while trying to follow the user documentation. Not sure it's in the rightest right place, but basically I didn't realize that url_prefix needed to be explicity specified when calling register_module on the Flask object to register the imported modules from separate packages (as per the layout specified in http://flask.pocoo.org/docs/patterns/packages/#modules-and-resources)
"
114,A default response body,2010-09-07T01:50:50Z,2014-07-26T12:18:46Z,,,,"First, I used this code in a private page:

```
headers = {""WWW-Authenticate"": 'Basic realm=""Login Required""'}
return Response(status=401, headers=headers)
```

It works well with werkzeug default container, but it has a problem with meinheld container.
When I request the page on meinheld, I got an ""Internal Server Error"" and error message:

```
[error] pid ..., File ""meinheld/server/response.c"", line 605 :TypeError: response item must be a string
```

I tried to find the cause and I found it.

Flask's `Response` class has a `response` parameter, it has the default value of `None`.
I think that a response body in the WSGI interface must be a `basestring`. So I suggest
to change `response` parameter's default value to `""""`(a blank string).
"
113,Added Blueslug to website,2010-09-01T15:55:46Z,2010-09-01T16:46:02Z,,,,"Hey Armin - I may have screwed this up, still don't quite have the hang of git/github. 

If this is messed up let me know. The actual commit is http://github.com/cgrinds/flask/commit/4b1137b41a170583a734b6a9c367833c8e45cb33
"
112,JSONP,2010-09-01T03:05:43Z,2012-03-14T00:19:24Z,,,,"If you are interested, I added a function to return padded JSON. I needed it for a project I'm working on and it seemed like the easiest thing to do was add the six lines of code into Flask.

Thanks for the awesome framework.

Tom
"
111,`static` path has a problem in the module which doesn't have a subdomain.,2010-08-25T04:44:15Z,2011-06-24T14:28:39Z,,,,"Version: 0.7dev

First, I supposed that the domain is ""mydomain.org"".

source tree:
- `mywebsite`
  - `__init__.py`
  - `mywww`
    - `__init__.py`
    - `static`
      - `test.txt`
  - `static`
    - `test.txt`

mywebsite/__init__.py:

```
from flask import Flask
import mywww
app = Flask(__name__)
app.config[""SERVER_NAME""] = ""mydomain.org""
app.register_module(mywww.app)
```

mywebsite/static/test.txt:

```
Failure...
```

mywebsite/mywww/__init__.py:

```
from flask import Module
app = Module(__name__) # This module hasn't a subdomain.
                       # It should route ""http://mydomain.org/"" not ""http://sub.mydomain.org/""
@app.route(""/"")
def index():
    return ""ok"", 200
```

mywebsite/mywww/static/test.txt:

```
Success!
```

While running this application, a result of `http://mydomain.org/` is `ok`. Yes, it's expected. But a result of `http://mydomain.org/static/test.txt` is `Failure...`. It is routed `mywebsite/static/test.txt`, not `mywebsite/mywww/static/test.txt`. It is not expected.

If `mywww` has a subdomain, there is no problem.

```
app = Module(__name__, subdomain=""sub"")
```

`http://sub.mydomain.org/static/test.txt` puts `Success!`.
"
110,getting raw POST data for whatever mimetype,2010-08-25T01:08:42Z,2010-08-25T16:46:32Z,,,,"Hello,

it seems that request.data only has content if the mime type is unknown

I think it would be handy to be able to access the raw POST data even if the mime type is know:
for example i m POSTing a JSON string, but i don t want flask to unserialize it because i'll do it later.

The same with curl -d that add a mime type of application/x-www-form-urlencoded so, request.data is empty
"
109,[doc] uploaded file validation example,2010-08-22T10:00:56Z,2010-08-23T21:38:19Z,,,,"The file uploading section of the documentation implicitly assumes in the provided example that you can safely validate an uploaded file by simply validating its filename extension. I think it's somewhat dangerous, and an example with mimetype validation should be used instead (or maybe just by adding a warning notice).
"
108,"`url_for(""static"", ...)` with `subdomain` problem",2010-08-20T07:22:53Z,2010-08-20T16:16:27Z,,,,"The version is 0.6.

I made a `flask.Module` with `subdomain` option.

```
from flask import Module
app = Module(__name__, subdomain=""sub"")
```

And when I use `url_for(""static"", ...)` in a template, it returns `""http://example.net/static""` instead of `""/static""`(`""http://sub.example.net/static""`). So I added some code for debugging to flask/app.py(line 512).

```
print options
```

Result is:

```
{'endpoint': 'static'}
{'subdomain': 'sub', 'endpoint': 'sub.favicon'}
{'subdomain': 'sub', 'endpoint': 'sub.index'}
...
```

The url rule for `static`, which is added automatically doesn't have a `subdomain` option.
"
107,Fabric deploy script `docs/patterns/fabric.rst` does not work (for me),2010-08-19T13:58:49Z,2014-07-26T12:19:31Z,,,,"I was trying to get deployment with fabric and distribute done like explained in the docs. However the deployment script always aborted with this error message

```
warning: manifest_maker: standard file 'setup.py' not found
```

So I tried for hours to find the problem and it seems that I have found it (although it is possible that the documented script works fine on other installations - I can only talk about my).

This is how the source code looks in the deploy function right now:

```
#...
with cd('/tmp/yourapplication'):
    run('tar xzf /tmp/yourapplication.tar.gz')
# now setup the package with our virtual environment's
# python interpreter
run('/var/www/yourapplication/env/bin/python setup.py install')
#...
```

I had to change it like this to make the script work:

```
#...
with cd('/tmp/yourapplication'):
    run('tar xzf /tmp/yourapplication.tar.gz')
# You have to be inside the folder where 'setup.py' resides
# in order to make it work
with cd('/tmp/yourapplication/%s' % dist):
    # now setup the package with our virtual environment's
    # python interpreter
    run('/var/www/yourapplication/env/bin/python setup.py install')
#...
```

Plus I changed `run('mkdir /tmp/yourapplication')` to `run('mkdir -p /tmp/yourapplication')` because after a failed deployment the dir has not been removed and the next deployment attempt prematurely ended ""because the directory already existed""
"
106,Typing error in docs/patterns/fabric.rst,2010-08-18T19:55:31Z,2010-08-18T19:58:12Z,,,,"Inside the deploy method 

```
# upload the source tarball to the temporary folder on the server
put('sdist/%s.tar.gz' % dist, '/tmp/yourapplication.tar.gz')
```

should be

```
# upload the source tarball to the temporary folder on the server
put('dist/%s.tar.gz' % dist, '/tmp/yourapplication.tar.gz')
```

(there is an s before dist)
"
105,`pydoc flask` [or vars(flask)] fails,2010-08-06T12:25:47Z,2010-08-07T11:03:11Z,,AttributeError,AttributeError: 'NoneType' object has no attribute 'app',"Steps to reproduce:

```
(werk)mini:~ fz$ python
Python 2.6.1 (r261:67515, Dec 17 2009, 00:59:15) 
[GCC 4.2.1 (Apple Inc. build 5646)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import pydoc, flask
>>> pydoc.pager = lambda text: pydoc.pipepager(text, 'cat')
>>> help(flask)
Help on package flask:

flask = <module 'flask' from '/Volumes/Home/FZ/.local/repo/flask/flask/__init__.pyc'>
>>> 
```

No top-level documentation! Same problem with help(flask.app), help(flask.globals), help(flask.helpers), also via the pydoc -p web server. I found that it hinges on this:

```
>>> pydoc.text.docmodule(flask)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/Volumes/Home/FZ/.local/lib/python2.6/site-packages/pydoc.py"", line 1100, in docmodule
    contents.append(self.docother(value, key, name, maxlen=70))
  File ""/Volumes/Home/FZ/.local/lib/python2.6/site-packages/pydoc.py"", line 1299, in docother
    repr = self.repr(object)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/repr.py"", line 24, in repr
    return self.repr1(x, self.maxlevel)
  File ""/Volumes/Home/FZ/.local/lib/python2.6/site-packages/pydoc.py"", line 955, in repr1
    return cram(stripid(repr(x)), self.maxother)
  File ""/Volumes/Home/FZ/.local/env/werk/lib/python2.6/site-packages/werkzeug/local.py"", line 321, in __repr__
    obj = self._get_current_object()
  File ""/Volumes/Home/FZ/.local/env/werk/lib/python2.6/site-packages/werkzeug/local.py"", line 306, in _get_current_object
    return self.__local()
  File ""/Volumes/Home/FZ/.local/repo/flask/flask/globals.py"", line 17, in <lambda>
    current_app = LocalProxy(lambda: _request_ctx_stack.top.app)
AttributeError: 'NoneType' object has no attribute 'app'
>>> 
```

and can be fixed by the following change (which I hope won't cause breakage elsewhere):

```
diff --git a/flask/globals.py b/flask/globals.py
index aac4655..0a17f56 100644
--- a/flask/globals.py
+++ b/flask/globals.py
@@ -14,7 +14,8 @@ from werkzeug import LocalStack, LocalProxy

 # context locals
 _request_ctx_stack = LocalStack()
-current_app = LocalProxy(lambda: _request_ctx_stack.top.app)
-request = LocalProxy(lambda: _request_ctx_stack.top.request)
-session = LocalProxy(lambda: _request_ctx_stack.top.session)
-g = LocalProxy(lambda: _request_ctx_stack.top.g)
+_top = _request_ctx_stack.top
+current_app = LocalProxy(lambda: _top.app if _top else None)
+request = LocalProxy(lambda: _top.request if _top else None)
+session = LocalProxy(lambda: _top.session if _top else None)
+g = LocalProxy(lambda: _top.g if _top else None)
```

Then one gets as expected, e.g.

```
>>> help(flask.globals)
Help on module flask.globals in flask:

NAME
    flask.globals

FILE
    /Volumes/Home/FZ/.local/repo/flask/flask/globals.py

DESCRIPTION
    flask.globals
    ~~~~~~~~~~~~~

    Defines all the global objects that are proxies to the current
    active context.

    :copyright: (c) 2010 by Armin Ronacher.
    :license: BSD, see LICENSE for more details.

DATA
    current_app = None
    g = None
    request = None
    session = None
```
"
104,send_file in flask 0.6 issues,2010-08-06T10:09:11Z,2010-08-06T17:29:03Z,,,,"See there:

http://hg.moinmo.in/moin/2.0-dev/rev/58eb8f978188

http://hg.moinmo.in/moin/2.0-dev/rev/25de9bb78a9f

Please apply upstream, having to have patched files is obviously a pain for packaging.
"
103,Change the static folder,2010-08-04T14:47:18Z,2011-06-24T14:27:22Z,,,,"It should be possible to change the location/name of the static folder. A new keyword parameter to the package bound object should be added for that.

```
# just change the URL rule
module = Module(__name__, static_path='/_static')

# change the static folder's name and URL rule
module = Module(__name__, static_folder='media')
--> module = Module(__name__, static_path='/media', static_folder='media')

# a nested folder and it's URL rule:
module = Module(__name__, static_folder='assets/shared')
--> module = Module(__name__, static_path='/shared', static_folder='assets/shared')
```

Paths obviously relative to the root_path of the object.
"
102,Wrong import in Errorhandling,2010-08-03T21:53:49Z,2010-08-07T11:41:13Z,,,,"The example at ""Logging to file"" has
'from logging.handlers import TheHandlerYouWant'
though it should be
'from logging import TheHandlerYouWant'
"
101,Implement jinja's ModuleLoader,2010-08-03T17:49:05Z,2016-06-04T18:59:50Z,,,,"It would be interesting to implement ModuleLoader in flask. It would make a huge difference in GAE response times for flask applications.
"
100,Inconsistency in docs/testing.rst,2010-07-31T21:05:44Z,2010-08-03T10:20:29Z,,,,"The first time the FlaskrTestCase source code is shown the setUp method looks like this:

```
def setUp(self):
    self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
    self.app = flaskr.app.test_client()
    flaskr.init_db()
```

Note `self.db_fd, flaskr.DATABASE = tempfile.mkstemp()`

The second time it looks like this:

```
def setUp(self):
    self.db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()
    self.app = flaskr.app.test_client()
    flaskr.init_db()
```

Note `self.db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()`

Now I think the first version is not that good because it relies on the settings to be declared inside flaskr.py. I tried to put the settings in another file and load them with `app.config.from_object(settings)` only to find out that my real database is used because obviously blog.DATABASE is not read at all in flaskr.py.

Note that there is the same problem with the `tearDown` method.
"
99,Section 3.8 Sessions - bug in example of escaping session value,2010-07-30T19:13:47Z,2010-07-31T02:16:45Z,,,,"# Description

Need to qualify the call to escape() with Markup class. 
# Reference

http://flask.pocoo.org/docs/quickstart/#sessions

3.8 Sessions
Besides the request object there is also a second object called session that allows you to store information specific to a user from one request to the next. This is implemented on top of cookies for you and signs the cookies cryptographically. What this means is that the user could look at the contents of your cookie but not modify it, unless he knows the secret key used for signing.
In order to use sessions you have to set a secret key. Here is how sessions work:
The here mentioned escape() does escaping for you if you are not using the template engine (like in this example).
How to generate good Secret Keys
from flask import session, redirect, url_for, escape
@app.route(’/’) def index():
if ’username’ in session: return ’Logged in as %s’ % escape(session[’username’])
return ’You are not logged in’
# Bug Fix

---- replace line: if ’username’ in session: return ’Logged in as %s’ % escape(session[’username’])
---- with: if ’username’ in session: return ’Logged in as %s’ % Markup.escape(session[’username’])
"
98,Response object mismatch,2010-07-28T08:10:00Z,2010-07-28T17:46:01Z,,,,"In [Response object documentation page](http://flask.pocoo.org/docs/api/?highlight=response#flask.Response), the parameter 'status_code' is mentioned. It looks like its real name is 'status'.
"
97,Automagic OPTIONS: incorrect Allow results for routes with multiple handlers,2010-07-27T21:44:36Z,2010-07-27T23:28:20Z,,,,"If an URL rule has more than one handlers for different HTTP methods (typical for RESTful apps), OPTIONS will incorrectly report only the methods of the first handler.

Consider the following example:

```
@app.route('/things/<thing>')
def one_thing(thing):
    return ""it's a "" + thing + ""!""

@app.route('/things/<thing>', methods=['PUT'])
def put_thing(thing):
    return ""Thanks for the thing.""
```

Performing an OPTIONS request on /things/foo incorrectly reports only the methods of the first handler:

```
$ curl -IXOPTIONS http://localhost:8080/things/foo
HTTP/1.0 200 OK
Content-Type: text/html; charset=utf-8
Allow: HEAD, OPTIONS, GET
...
```

Werkzeug gets it right though, if an invalid method is attempted:

```
$ curl -IXFOO http://localhost:8080/things/foo
HTTP/1.0 405 METHOD NOT ALLOWED
Content-Type: text/html
Allow: PUT, HEAD, OPTIONS, GET
...
```

I figure something along the lines of MapAdapter.match() in werkzeug/routing.py is required (loop through all matching handlers and add up the supported methods)

Thanks :-)
"
96,Application directory,2010-07-20T18:22:09Z,2010-07-21T16:28:03Z,,,,"Not really a bug, but something worth mentioning in the documentation

the structure of the application is usually
application/**init**.py : creation of the app, registration of the modules
but then the modules don't have access to the ""app"" (cannot do 'from application import app')

how can we structure the app to have access to some global variables in all modules, etc?

if the app is only one module, it's okay because we already have the app, but if we're registering  modules, they don't  necessarily have access to the app  
"
95,Bug when server handles registered urls?,2010-07-19T14:47:37Z,2010-07-20T13:52:31Z,,,,"I register a module using app.register_module(my_module)
my module has a url_prefix '/module '

when running on localhost, everything is fine, but when installing on
 a host, trying to fetch http://distant.host/module redirects me
  to http:// localhost /module
"
94,Flask.signalhandler decorator,2010-07-19T00:57:12Z,2010-07-20T13:52:59Z,,,,"```
@app.signalhandler(template_rendered)
def handler…
```
# 

```
def handler…
template_rendered.connect(handler, app)
```
"
93,typo in HTML history docs,2010-07-18T15:34:10Z,2010-07-18T23:54:24Z,,,,"minor typo on the HTML/XHTML FAQ page (http://flask.pocoo.org/docs/htmlfaq/)

It says that <dl> closure is optional in HTML5, I believe you meant <dt>

Nice summary btw. 
"
92,Improve template documentation,2010-07-17T15:13:36Z,2010-07-17T23:30:36Z,,,,"The template documentation is currently spread out between quickstart and various functions in the api docs.  There should be a template chapter for:
- how autoescaping works and how it can be controlled (autoescape / safe, filenames) 
- basic jinja introduction and links to jinja docs
- what global functions and objects are available
"
91,Automatic URL variable insertion,2010-07-17T14:57:40Z,2011-06-24T14:27:33Z,,,,"There should be a way to automatically prefix all URLs with a language code for example and inject that value for all url_for calls that expect it.
"
90,Disabling code execution,2010-07-16T16:55:36Z,2010-07-17T13:44:19Z,,,,"When we want to show an error on a webserver to someone, we'd like the webserver to display the error as in debug mode, but not permit arbitrary code execution.

There should be an option to either disable completely the code execution but show the debug info on the page, or only allow code execution when it comes from localhost
"
89,Metaprogramming,2010-07-16T10:04:59Z,2010-07-16T11:16:05Z,,,,"Often one has to create a generic code for a website part that will be instantiated with different parameters to obtain efficient sub-applications for a website, Flask should include some metaprogramming capabilities (see http://pastebin.com/wAR7e8qh)
"
88,Documentation of server configuration and middleware inclusion,2010-07-16T10:03:16Z,2010-07-17T13:39:31Z,,,,"It would be nice that the (already fairly complete) documentation also hints at how to configure servers for production use (multiple backend servers, apache, nginx, python servers, etc) and how to setup werkzeug and wsgi middlewares in a regular flask application  
"
87,2 little bugs in jqueryexample.py,2010-07-16T07:42:21Z,2010-07-16T11:16:23Z,,,,"I found 2 little bugs in jqueryexample.py:
1. In import from flask missing jsonify
2. in template layout.html is 
`<script type=text/javascript src=""{{ url_for('static', filename='app.js') }}""></script>`
, but app.js file is missing.
"
86,Module.add_url_route and App.add_url_route not consistent  ,2010-07-15T09:29:19Z,2010-07-15T12:35:58Z,,,,"App.add_url_route allows the name of the route to be None, but Module.add_url_route requires all three arguments, but it should not really be necessary
"
85,Update Docs to mention MAX_CONTENT_LENGTH,2010-07-14T15:05:43Z,2010-07-16T11:16:23Z,,,,"Currently the upload docs mention subclassing request objects I think for uploads.
"
84,Webapp installed into lib of virtualenv cannot find templates,2010-07-13T23:44:41Z,2010-07-14T07:16:09Z,,TemplateNotFound,TemplateNotFound: frontend/index.html,"I'm using virtualenv to install my application, but when I do it cannot find any of the templates. I suspect the jinja_loader environment. The call looks something like this:

```
return render_template(""admin/login.html"",
                       form=form,
                       html=gen,
                       **request.args)
```

Here's a trace:

Traceback (most recent call last):
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Flask-0.5.1-py2.7.egg/flask/app.py"", line 816, in **call**
    return self.wsgi_app(environ, start_response)
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Flask-0.5.1-py2.7.egg/flask/app.py"", line 760, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Flask-0.5.1-py2.7.egg/flask/app.py"", line 757, in wsgi_app
    rv = self.dispatch_request()
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Flask-0.5.1-py2.7.egg/flask/app.py"", line 654, in dispatch_request
    return self.view_functions[req.endpoint](**req.view_args)
  File ""/private/tmp/fooba/lib/python2.7/site-packages/cockerel-dev-py2.7.egg/cockerel/webapp/views/frontend.py"", line 12, in index
    return render_template(""frontend/index.html"")
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Flask-0.5.1-py2.7.egg/flask/templating.py"", line 74, in render_template
    return ctx.app.jinja_env.get_template(template_name).render(context)
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Jinja2-2.5-py2.7.egg/jinja2/environment.py"", line 716, in get_template
    return self._load_template(name, self.make_globals(globals))
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Jinja2-2.5-py2.7.egg/jinja2/environment.py"", line 690, in _load_template
    template = self.loader.load(self, name, globals)
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Jinja2-2.5-py2.7.egg/jinja2/loaders.py"", line 115, in load
    source, filename, uptodate = self.get_source(environment, name)
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Flask-0.5.1-py2.7.egg/flask/templating.py"", line 45, in get_source
    return loader.get_source(environment, template)
  File ""/private/tmp/fooba/lib/python2.7/site-packages/Jinja2-2.5-py2.7.egg/jinja2/loaders.py"", line 180, in get_source
    raise TemplateNotFound(template)
TemplateNotFound: frontend/index.html
"
83,Support conditional GET for static files,2010-07-13T20:44:10Z,2010-07-13T22:01:19Z,,,,"It seems Flask doesn't support the conditional GET for static files. It always returns 200 OK, even though the file is older than the If-Modified-Since request header.

Consider the following example:

/static$ ls -l browser.css 
-rw-r--r-- 1 joh joh 600 2010-07-13 22:25 browser.css

Now perform a conditional GET with curl:

$ curl -I -z ""Tue, 13 Jul 2010 20:37:52 GMT"" http://localhost:8080/static/browser.css
HTTP/1.0 200 OK
Content-Type: text/css; charset=utf-8
Cache-Control: public, max-age=43200
Expires: Wed, 14 Jul 2010 08:42:44 GMT
ETag: ""flask-1279052703.2-600-2392659594""
Date: Tue, 13 Jul 2010 20:42:44 GMT
Connection: close
Server: Werkzeug/0.6.2 Python/2.6.5

Just as a comparison, here's the correct response from Apache:

$ curl -I -z ""Tue, 13 Jul 2010 20:37:52 GMT"" http://localhost/jq.html
HTTP/1.1 304 Not Modified
Date: Tue, 13 Jul 2010 20:43:47 GMT
Server: Apache/2.2.14 (Ubuntu)
ETag: ""1540072-3f-48b36b51d6983""
Vary: Accept-Encoding
"
82,The after_request handlers should be called in reverse order,2010-07-12T14:08:00Z,2010-07-12T16:08:56Z,,,,"This `after_request` handlers should be called in reverse order to ensure the very first registered handler should be called at last.

For example, I register `after_request` callback to close database session. As my code grows, I register few more `after_request` callbacks expecting that the very first callback registered will be called at last, but it doesn't.
"
81,Static URL rule not being added on GAE with static_dir handler,2010-07-07T08:37:24Z,2010-07-13T21:15:04Z,,,,"When app.yaml has `static_dir` point to Flask application's `static/` directory, `os.path.exists` will always return `False` and thus causing `_PackageBoundObject.has_static_dir` to return `False` making static URL rule not being added at initialization. 

Example:
#### app.yaml

```
application: demo
version: 1
runtime: python
api_version: 1

handlers:
- url: /static
  static_dir: static

- url: /.*
  script: app.py
```
#### app.py

```
from google.appengine.ext.webapp.util import run_wsgi_app
from flask import Flask
app = Flask(__name__)

@app.route('/')
def demo():
    return str(app.has_static_folder)

def main():
    run_wsgi_app(app)

if __name__ == '__main__':
    main()
```

This will return `False` but will return `True` once I comment out the static handler. Current workaround is to add static rule myself, using `app.add_url_rule(app.static_path + '/<path:filename>', endpoint='static')` of sort. It would be nice of Flask detects GAE and add the static path anyway.
"
80,Sessions and SERVER_NAME,2010-07-07T05:29:55Z,2010-07-14T01:51:44Z,,,,"Cookies are not set correctly when SERVER_NAME is set. Investigate.
"
79,If SERVER_NAME is set the cookie does not set itself correctly,2010-07-05T23:25:07Z,2010-07-06T08:42:45Z,,,,"The domain information is not used to set the domain for the cookie of the session. The cookie is only set for path=/ for the current domain. If DOMAIN_NAME is set this should be used for setting session cookies for ""."" + DOMAIN_NAME.
"
78,remove circular dependency between flask.wrappers and flask.helpers,2010-07-04T20:26:41Z,2010-07-04T21:55:21Z,,,,"I don't understand why `flask.helpers.jsonify` uses `current_app.response_class`, while `flask.helpers.send_file` uses `Response`.

Fixing this, you get rid of the circular dependency between `wrappers` and `helpers`.
"
77,Flask broken on 2.5 without simplejson,2010-07-04T13:56:03Z,2010-07-04T15:21:21Z,,,,"It is a regression in the module branch : if json is not available, the framework is broken.

(make test fails with ImportError)
"
76,Better autoescaping default configuration,2010-07-03T08:59:00Z,2010-07-04T18:07:46Z,,,,"Flask should by default not apply autoescaping for templates from string as well as templates with a .txt extension and similar things.
"
75,Document that exceptions are swallowed in non-debug Mode,2010-07-02T11:24:25Z,2010-07-02T17:45:39Z,,,,"This also means that use_reloader=True, debug=True works but debug=False, use_debugger=True does not.
"
74,Explain UTF-8 Encoding,2010-06-30T23:09:25Z,2010-06-30T23:45:44Z,,,,"The documentation should explain that Flask assumes utf-8 for templates.
"
73,Link to Flask-SQLAlchemy and Flask-WTF in the docs,2010-06-29T14:03:50Z,2010-06-30T23:22:52Z,,,,"The docs should link to the Flask-SQLAlchemy and Flask-WTF extensions in the sqlalchemy and wtforms patterns.
"
72,"Add support for Nginx ""X-Accel-Redirect"" header to send_file",2010-06-28T19:56:08Z,2010-06-29T06:33:30Z,,,,"The information for nginx's send_file support is here:

http://wiki.nginx.org/NginxXSendfile

This might be the job of middleware (have the middleware hijack the X-Sendfile header and modify it for nginx), but it would be nice to support this natively.
"
71,Document request.endpoint and request.view_args,2010-06-28T17:37:49Z,2010-06-28T23:32:07Z,,,,"They are missing currently but are a stable interface that one can rely on.
"
70,Documentation has to explain Flask constructor better,2010-06-22T22:32:41Z,2010-07-01T10:58:50Z,,,,"People often do `Flask(__name__)` when the app is not in the `__init__` which is a bad idea. Flask-SQLAlchemy also debugs based on that name so this should definitively be explained.

Furthermore the fact that `__name__` becomes `'__main__'` in modules started from within should be explained.
"
69,Add Twill to the docs,2010-06-21T22:06:04Z,2010-07-02T17:40:42Z,,,,"It's probably a good idea to explain how Twill can be used for testing Flask applications.

Example: http://dpaste.de/JYhp/
"
68,Example App based on Flask + Extensions,2010-06-21T12:46:03Z,2014-09-29T12:03:03Z,docs,,,"It would be nice to see an example application for 0.5 that is based on Flask plus a few Flask extensions that represents a semi-realworld example of how to do applications.

Example proposals:
## A Wiki
- showcase how config management works
- how to unittest more complex apps
- maybe even use modules
- Flask-Fungiform for the form handling
- Flask-SQLAlchemy for database
- flask-mail for sending mail notifications
- Flask-OpenID for user authentication
- Flask-Babel for i18n
- jQuery for client side JavaScript
- a creoleparser for the wiki Syntax

Thanks to all the extensions that application could still be reasonable small (~1000 lines of code I guess without the templates)
"
67,Explain Unicode in Flask,2010-06-12T16:41:07Z,2010-06-17T17:05:29Z,,,,"To avoid confusion the unicode behavior of Python and Flask should be documented.
"
66,flask.pocoo.org HTML 5 compliant,2010-06-07T12:33:49Z,2010-06-17T23:45:34Z,,,,"FWIW, I checked the flask website for HTML 5 compliance (I know, it is only a draft).

Not compliant:
- http://html5.validator.nu/?doc=http://flask.pocoo.org/
- http://html5.validator.nu/?doc=http://flask.pocoo.org/docs/

Compliant:
- http://html5.validator.nu/?doc=http://flask.pocoo.org/community/
- http://html5.validator.nu/?doc=http://flask.pocoo.org/snippets/
"
65,Logger Decorator for Additional Information Injection,2010-06-06T23:00:09Z,2010-06-29T14:03:22Z,,,,"Once the module is split into a package (#62) it should be possible to lazily import the logger system and with that wrap the Flask logger with a class that injects additional information to the logging system for each log.

This should make it possible to log the request URI, remote address and some other things.
"
64,unable to configure static_dir or templates_dir,2010-06-05T18:38:37Z,2010-07-06T14:26:49Z,,,,"Currently it's not possible to configure the static_dir or the templates_dir of an application instance, because the Jinja environment and the static directory are configured on instantiation.

I would suggest to split the jinja_env and static middleware configuration in a separate method ""def setup_env(self):"" and call this method from **init** (depending on a boolean flag).

Then it could be used like this:

```
app = Flask(__name__, setup_env=False)
app.templates_dir = 'funny_templates'
app.setup_env()
```

But if it makes no sense, just close the request: finally I did it differently.
"
63,Update Design Decisions based on recent changes,2010-06-03T15:23:58Z,2010-06-18T15:03:37Z,,,,"The design decisions document is slightly outdated. Things that should be covered:
- multiple apps
- register_module()
- logging maybe
- what should go into flask and what not
"
62,Split up flask.py into multiple files,2010-06-03T13:25:06Z,2010-07-06T14:26:56Z,,,,"Flask gets more and more docstrings and inline documentation comments so that it becomes a quite large file.  I would love to split this up for the next release into the following modules:
- flask - imports the public api
- flask.ctx - _RequestContext and all kinds of locals
- flask.app - Config/App
- flask.module - Module
- flask.helpers - the helper functions such as url_for, jsonify etc.
- flask.wrappers - Request/Response/_RequestContext
- flask.session - Session
"
61,test_request_context doesn't act like the documentation says,2010-06-02T15:37:30Z,2010-06-03T13:01:53Z,,,,"Sorry, closed on accident.

To get this to work I had to do other things, you can see from my gist: http://gist.github.com/422460

It would be nice if this was done automatically so I could just use test_request_context the way the documentation states.
"
60,test_request_context doesn't act like the documentation says,2010-06-02T14:51:45Z,2010-06-03T13:27:56Z,,,,"To get this to work I had to do other things, you can see from my gist: http://gist.github.com/422460

It would be nice if this was done automatically so I could just use test_request_context the way the documentation states.
"
59,Response should always be processed.,2010-06-02T14:46:38Z,2010-06-02T23:05:46Z,,,,"If an exception is handled by exception handlers and a valid response is generated then the response should also be processed using `process_response`.
"
58,Consider adding a TESTING switch,2010-06-01T22:34:31Z,2010-06-06T22:56:10Z,,,,"Many extensions (like flask-mail) might want to switch to mock-mode for testing. It would be nice to have a central switch like DEBUG to enable that.
"
57,Document flask._request_ctx_stack,2010-05-29T18:56:55Z,2010-05-31T15:50:37Z,,,,"Flask extensions are allowed to access this object, also user code might if it wants to do really magic stuff. The leading underscore however means: try avoid using it, similar to sys._getframe.
"
56,`make test` should use flask module in current directory not system-wide module,2010-05-29T14:40:41Z,2010-05-31T15:53:16Z,,,,"Currently tests are run against system-wide flask, which basically loses point of testing during package upgrades on Gentoo.
"
55,Document Extension Development,2010-05-29T12:05:08Z,2010-05-31T21:40:39Z,,,,"There has to be a best practice document for extension development covering these things:
- naming your extension
- using the flaskext namespace
- properly specifying dependencies
- making `==dev` versioning work
- what belongs into a config and what not (deployment stuff into config, rest in the init call)
- when to use `init_extension(app)` versus `extension = Extension(app)`
"
54,Add i18n support using Jinja2/Babel,2010-05-28T14:50:08Z,2010-05-29T22:27:07Z,,,,"Is there an option to use the jinja2.ext.i18n in Flask?
And if yes, an example would be nice. :)
"
53,0.3 release ships with .git and missing examples,2010-05-28T13:50:04Z,2010-05-28T19:49:02Z,,,,"That should be fixed ASAP.
"
52,HTML4/HTML5/XHTML FAQ,2010-05-28T10:25:54Z,2010-06-07T06:49:38Z,,,,"The docs need some very basic FAQ on HTML5. All the documentation samples are using HTML5 and I constantly get reports that closing tags are missing.
"
51,Replace foo in placeholders,2010-05-27T22:07:39Z,2010-06-10T23:37:45Z,,,,"Alternative could be all kinds of liquids you put into flasks.

Context: http://twitter.com/mschrag/statuses/14853065391
"
50,Inconsistent license language and attribution for snippets,2010-05-26T15:14:43Z,2010-05-27T10:30:27Z,,,,"Snippets are placed in the public domain when posted, but this is not reflected when snippets are viewed.  Additionally, the whole display (code, comments, style and all) is currently reported as copyright Armin, with all rights implicitly reserved.
"
49,Document lazy loading of view functions,2010-05-26T09:14:24Z,2010-05-26T12:50:27Z,,,,"For GAE and some other envs it makes sense not to use decorators but lazily load functions based on name instead. This should be documented as pattern.
"
48,Distribute single modules,2010-05-25T15:08:30Z,2010-05-27T10:37:19Z,,,,"The documentation should do a better job at explaining how single modules could be deployed.
"
47,Document how to generate Secret Keys,2010-05-25T15:08:11Z,2010-05-26T13:19:53Z,,,,"Documentation should contain some infos about how to generate secret keys.
"
46,Provide a way to access a resource filename,2010-05-24T23:13:36Z,2010-05-25T13:16:06Z,,,,"There is open_resource, but sometimes one does not need an open file but the filename.

I've thought of something like this: http://paste.pocoo.org/show/217837/
"
45,Mistake in docstring of app.errorhandler,2010-05-24T19:40:38Z,2010-05-25T06:18:04Z,,,,"There is a variable missing in the docstring (and thus in the documentation) in app.errorhandler. 
http://github.com/mitsuhiko/flask/blob/master/flask.py#L998
"
44,Document app.run() should be in __name__ == '__main__',2010-05-24T07:45:08Z,2010-05-24T13:26:13Z,,,,"Common problem that breaks on mod_wsgi and other deployments.
"
43,Bind test_request_context for interactive Python shell,2010-05-21T20:17:56Z,2010-05-25T06:18:17Z,,,,"For the interactive Python shell, the test_request_function should be invokable to bind the context to the end of the session for easier testing.  Something like this:

```
>>> from yourapplication import app
>>> app.test_request_context().bind()
>>> from flask import request
>>> request.path
u'/'
```

Or something similar.
"
42,Document URL Redirection Behaviour and how to use it,2010-05-19T19:42:36Z,2010-05-24T20:26:13Z,,,,"There was a length discussion on #pocoo about the redirection behaviour of Werkzeug today. As a result of that discussion I think it should be explained in detail in the documentation.
"
41,broken link in doc,2010-05-18T10:47:07Z,2010-05-18T16:07:14Z,,,,"on this page:
http://flask.pocoo.org/docs/patterns/distribute/

the ""package"" link of this sentence is 404:
In this case we assume your application is called yourapplication.py and you are not using a module, but a package. 
"
40,Python 3K,2010-05-16T14:31:50Z,2013-06-19T14:44:57Z,,,,"What would it take to get Flask up and running with Python 3? I heard you got Jinja2 up and running on py3k but I am less sure about Werkzeug and the WSGI spec in general for Python 3. Have you put any thought into it or had any luck trying to accomplish it?
"
39,Docs/Tests missing in Tarball,2010-05-16T00:04:45Z,2010-05-17T00:01:40Z,,,,"Should be added :)
"
38,Set server_name in bind_to_environ(),2010-05-14T17:00:20Z,2010-07-05T10:11:20Z,,,,"_RequestContext binds the url_map without setting server_name, so it is impossible to make apps that serve dynamic subdomains. server_name should be an optional configuration.

environ = create_environ(path='/', base_url='http://www.test.com')
url_adapter = url_map.bind_to_environ(environ, server_name='test.com')
endpoint, kwargs = url_adapter.match('/')
assert endpoint == 'test'
assert 'subdomain' in kwargs
assert kwargs['subdomain'] == 'www'

environ = create_environ(path='/', base_url='http://foo.test.com')
url_adapter = url_map.bind_to_environ(environ, server_name='test.com')
endpoint, kwargs = url_adapter.match('/')
assert endpoint == 'test'
assert 'subdomain' in kwargs
assert kwargs['subdomain'] == 'foo'
"
37,some minor typos throughout docs,2010-05-12T01:35:13Z,2010-05-13T10:31:54Z,,,,"I found some minor typos throughout docs, which I fixed in rduplain@78ade243bf6448e5afa2d6aa7ad54654406635db
"
36,Long lived sessions staying long-lived after session.permanent set False,2010-05-11T23:46:19Z,2010-05-16T22:43:15Z,,,,"Fixed it by adding the session_expires=None to the end of this method call:

 def save_session(self, session, response):
        expires = None
        if session.permanent:
            expires = datetime.utcnow() + self.permanent_session_lifetime
        session.save_cookie(response, self.session_cookie_name,
                            expires=expires, httponly=True, session_expires=None)  <== only change
"
35,Support for Flashing Categories,2010-05-11T23:34:48Z,2010-05-16T22:38:56Z,,,,"The new signature for `flash()` should look like this in 0.5:

```
def flash(message, category='message'):
    ...
```

The method to fetch messages then will also accept a parameter that allows pulling as tuples with the category as well:

```
def get_flashed_messages(with_categories=False):
    ...
```

If invoked with that parameter set to `False` (which is the default) just the strings are returned, otherwise tuples in the form `(category, message)`.
"
34,Can't do POST to view method which doesn't invoke flask.request.form,2010-05-09T12:22:42Z,2010-05-09T12:46:47Z,,,,"Doing POST to view method which doesn't invoke flask.request.form results to „Unable to Connect“ on WebKit based browsers (Epiphany, Midori). Firefox is working.
"
33,Variable Module Prefix,2010-05-06T10:24:27Z,2011-08-07T08:54:06Z,,,,"The module branch support variable modules.  Something like this:

```
wiki = Module(__name__, url_prefix='/<user>')
```

Then each function registered is passed 'user' as first parameter.  This already works as far as I can see, however it would be better if that value can be attached to `g` instead.  What should work (not tested) is this:

```
@wiki.before_request
def attach_user():
    g.wiki_user = request.view_args.pop('user', None)
```

The problem with this is that URLs generated still need that user attached, so `url_for` needs some kind of support for that.  However I am not entirely sure how that should look like.
"
32,add a way to add extra data for modus before dispatching to them,2010-05-06T09:45:41Z,2010-05-08T00:29:21Z,,,,"it would be nice if there was a way to generate extra data before dispatching to a module

something like this (bad example to get the idea across)

<pre>
@app.route('/<username>/wiki', module=vcswiki)
def user_wiki(username):
    g.wiki = get_wiki_for_user(username)

@app.route('/help', module=vcswiki)
def help_wiki():
    g.wiki = get_help_wiki()
</pre>
"
31,Wrap emails on malformed mails,2010-05-05T13:15:25Z,2010-05-05T15:39:17Z,,,,"Right now the mailinglist does not wrap mails if the client did not wrap them in advance. Looks bad: http://flask.pocoo.org/mailinglist/archive/2010/5/5/ann-garter-a-library-of-useful-flask-related-functions/
"
30,base_url / url docs mixed up,2010-05-04T08:18:13Z,2010-05-04T09:45:32Z,,,,"These two have to be reversed in the API docs.
"
29,register_module fails when url_prefix not previously set,2010-05-04T07:33:04Z,2010-05-04T09:42:21Z,,,,"The following example (taken from the documentation, simplified) fails to work correctly.
The index() function is registered at / instead of /admin.

myapp/__init__.py:
    from flask import Flask
    from myapp.admin import admin
    app = Flask(**name**)
    app.register_module(admin, url_prefix='/admin')

myapp/admin.py
    from flask import Module
    admin = Module(**name**)
    @admin.route('/')
    def index():
        return 'This should be at /admin'
"
28,Minor typo in fileuploads doc.,2010-05-04T07:30:13Z,2010-05-04T08:18:45Z,,,,"flask / docs / patterns / fileuploads.rst

In the HTML snipets, the <p> is not closed (there should be a </p> somewhere no ?

<p><input type=file name=file>
         <input type=submit value=Upload>
"
27,Document setup.py,2010-05-04T07:28:56Z,2010-05-16T23:59:55Z,docs,,,"Documentation should show how a typical setup.py with distribute looks like and how it can be used to deploy code.
"
26,layout.html (in website branch) is missing closing tags,2010-05-04T05:09:52Z,2010-05-04T05:13:45Z,,,,"Just wanted to let you know that layout.html is missing some closing tags </p> etc. May want to fix for validation if you care.
"
25,Per-module processors,2010-05-03T22:09:47Z,2010-05-04T09:51:31Z,,,,"There should be a @context_processor decorator for modules, so that a processor can be added on a per-module basis, in the same way as @before_request. A processor function defined this way would only be executed in the module space.

[from the mailinglist]
"
24,None return values from functions fail with wrong error,2010-05-02T19:26:43Z,2010-05-03T11:07:53Z,,,,"They should fail with an explicit error instead especially because the current behavior is just plain wrong.
"
23,CSRF protection,2010-05-02T18:37:04Z,2010-05-03T11:07:01Z,,,,"Filters/session CSRF checking could be added to Flask, or otherwise common patterns added to documentation (see Django CSRF protection for example - http://docs.djangoproject.com/en/dev/ref/contrib/csrf/)
"
22,Add werkzeug.script examples to documentation,2010-05-02T12:33:26Z,2010-07-05T10:11:06Z,,,,"It might be useful to have examples in the docs on how to integrate werkzeug.script with Flask, in particular shell and runserver:

http://werkzeug.pocoo.org/documentation/dev/script.html
"
21,Typo in flask quickstart docs,2010-05-01T12:41:07Z,2010-05-02T09:32:22Z,,,,"In section 'The Request Object' is a typo when doing route definition.
...
@app.route('/login', method=['POST', 'GET'])
def login():
...

the keyword argument should be 'methods' not 'method'.
"
20,Docs should mention Query Args for url_for,2010-04-30T08:59:39Z,2010-05-02T09:36:47Z,,,,"Right now the docs to not mention that url_for can generate query arguments as well. That should be fixed.
"
19,Typo in flaskr tutorial -> testing,2010-04-27T21:07:59Z,2010-05-02T09:38:45Z,,,,"The sentence that reads

```
Now that you have finished the application and everything works as expected, it’s probably not the best idea to add automated tests to simplify modifications in the future.
```

Should probably read

```
Now that you have finished the application and everything works as expected, it’s probably a good idea to add automated tests to simplify modifications in the future.
```
"
18,Access session object during unittest,2010-04-27T21:01:49Z,2010-05-02T09:45:45Z,,,,"Can we get the docs updated to include an example to access session object while unit testing.

Here is a potential solution, using unittest for flaskr

```
def test_session(self):
    with flaskr.app.test_request_context('/login', method='POST', data=dict(
                    username=flaskr.USERNAME, password=flaskr.PASSWORD,)):
        rv = flaskr.app.dispatch_request()
        assert flaskr.session['logged_in'] == True

    with flaskr.app.test_request_context('/login', method='POST', data=dict(
                    username=flaskr.USERNAME+'x', password=flaskr.PASSWORD+'x',)):
        rv = flaskr.app.dispatch_request()
        assert not flaskr.session.get('logged_in')
```
"
17,Configuration Support,2010-04-27T10:29:20Z,2010-05-27T15:59:52Z,,,,"Apps should have some kind of config dict attached. That would make it a lot cleaner to deal with configuration values.
"
16,Add easy way to set session expiry ,2010-04-26T09:00:49Z,2010-04-27T12:32:58Z,,,,"It's quite difficult at the moment to set the expiry date for the session. Ideally something like this could work (although it might require subclassing SecureCookie):

```
if request.form.get('remember_me', False):
    session.expires = timedelta(days=30)
```
"
15,Typo in docs: redirect instead of return redirect,2010-04-26T02:27:35Z,2010-04-26T06:59:13Z,,,,"Thanks to <jmcantrell> for reporting on irc.
I searched through the rest of the docs and don't see any other occurrences.
I made the change in my fork...
"
14,Documentation Modification (app.run),2010-04-24T00:06:27Z,2010-04-24T15:46:35Z,,,,"Hi there,

I was reading through the documentation in the tutorial, and I think it may be beneficial to a lot of users (like myself) who develop on remote servers to include information about the optional host parameter in app.run():

app.run(host='your public ip')

It is listed on Application Setup Code at the bottom, but since the first page, 'Quickstart' demos an application, I think it should be included there (or at least linked).
"
13,decorators to add custom jinja filters/globals,2010-04-23T15:01:01Z,2010-04-26T06:59:43Z,,,,"Hello,

it would be nice to have a decorator to define a function as a jinja filter instead of adding the function to 
app.jinja_env.filters

thanx
"
12,Make endpoint optional in @route,2010-04-22T11:37:45Z,2010-05-16T22:44:23Z,,,,"Make endpoint an option in the @route decorator. By default it would still use the function name. This would allow more flexibility in larger applications:

```
def route(self, rule, **options):
    def decorator(f):
        endpoint = options.pop('endpoint', f.__name__)
        self.add_url_rule(rule, endpoint, **options)
        return f
    return decorator
```
"
11,Make it easier to add routes via add_url_rule,2010-04-19T16:35:17Z,2010-04-19T18:48:02Z,,,,"add_url_rule should accept an optional view function. Currently you need to do two steps to associate a rule, endpoint and view_function. 

This issue is suggesting that it should only take one step. Replace add_url_rule(self, rule, endpoint, *_options) with add_url_rule(self, rule, endpoint, view_func=None, *_options)
"
10,Flash fails in nonobvious way when secret isn't set,2010-04-17T03:43:47Z,2010-04-17T12:11:38Z,,,,"Here's what fails http://paste.pocoo.org/show/202792/

The Flash section of the docs should at least mention that app.secret is required but I'm not sure that's enough.

One idea would be to require secret_key to be explicitly set and fail to run if it isn't. 
For folks that don't need sessions they could pass a message to that effect to run(). 
My guess is session/flash will be used by more apps than not.
"
9,Rename @app.request_init and @app.request_shutdown,2010-04-16T02:57:40Z,2010-04-16T09:03:55Z,,,,"Not a big deal but I think pre_request and post_request have better symmetry than init and shutdown.
"
8,Preserve request context on exception in debug mode,2010-04-16T00:10:33Z,2010-04-16T00:28:58Z,,,,"In debug mode the request context should stick around on an exception so that the request object is still valid in the debugger.
"
7,Visibility on pocoo.org,2010-04-14T17:29:24Z,2010-04-17T12:54:21Z,,,,"Some day, it should be added to the list of Werkzeug-based frameworks :
http://dev.pocoo.org/projects/werkzeug/wiki/WerkzeugBasedFrameworks
(and Denied, too?)

And maybe on the http://dev.pocoo.org/ page too.

After the first release, probably.
"
6,GAE Support,2010-04-14T01:08:30Z,2010-04-14T13:18:02Z,,,,"Right now Flask does not support GAE, that should be fixed. Switch to FileSystemLoader and CWD usage if GAE is detected, stick to pkg_resources otherwise for better portability.
"
5,Implement SQLAlchemy,2010-04-13T03:36:19Z,2010-04-13T10:53:09Z,,,,"Use SQLAlchemy in the core framework as an ORM
"
4,Integrate Babel for i18n,2010-04-13T03:35:29Z,2010-04-13T10:53:09Z,,,,"http://babel.edgewall.org
"
3,Switch to explicit request object passing,2010-04-13T03:31:57Z,2010-04-13T10:53:09Z,,,,"This makes it more to type (because you now have something to pass around) but it makes it a whole lot easier to debug hairy situations and to test the code.
"
2,Get rid of the decorator function registering,2010-04-13T03:31:38Z,2010-04-13T10:53:09Z,,,,"Causes a lot of troubles for applications that have circular dependencies. It also requires that the whole application is imported when the system initializes or certain URLs will not be available right away.
"
1,Implement dotted names for URL endpoints,2010-04-13T03:31:11Z,2010-04-13T10:53:09Z,,,,"It makes a lot of sense to change the way endpoints (the names of the functions / URL rules) are handled to also take the module name into account. Right now the function name is the URL name, but imagine you have a large applications consisting of multiple components. In that case, it makes a lot of sense to use dotted names for the URL endpoints.
"
