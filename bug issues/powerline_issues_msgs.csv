ID,Title,Created At,Closed At,Issues,Errors,Messages,Body
1870,(fix) updated linux spotify app dbus config,2018-01-10T02:51:53Z,,,,,"Updating linux dbus config according to Spotify client version: 1.0.69.336.g7edcc575.

Now player segment works as expected."
1869,Tmux truecolor support,2017-12-29T17:13:55Z,2017-12-29T18:01:01Z,"c:b:tmux, t:enhancement",,,"Fixes issue #1863.

This PR adds some code to `powerline/renderers/tmux.py` that checks if truecolor is enabled, and if so, uses the truecolor 24-bit hex colour rather than a 256-colour version."
1868,Need better configuration for tmux windows,2017-12-25T05:49:24Z,,"c:documentation, t:enhancement",,,"I would like to change the colors and format for the tmux line. Not the segments on the right, but the list of windows on the left. I can't find anything in the docs about how to configure the way the active/inactive windows are rendered. Does such configuration exist? Could it be added?"
1867,tell people how to enable Vim statusline,2017-12-21T08:00:46Z,2017-12-21T20:39:50Z,"c:documentation, t:enhancement",,,"I bet author got this question a lot, why just tell people how to explain it?"
1866,Significant memory leak with tmux,2017-12-12T23:22:50Z,,"c:b:tmux, e:linux, s:invalid:foreign bug, t:bug",,,"I've had this issue for several months now and have only just realized that powerline was causing it. It's been too long for me to remember if it's happened ever since I started using powerline though, so I can't bisect.

I leave weechat open in tmux permanently and after several days to about a week I find tmux is using 30% of my system memory (2G, VPS). The status bar begins to glitch out (blinks in and out and displays variable names instead of information) and eventually attempting to even just open a new window in tmux will give an out of memory error. Closing tmux and reloading it 'solves' the issue.

It's been several days now since removing powerline from my .tmux.conf and I'm still sitting at 0.2% memory usage.

I don't really have any information other than that I'm using:
Arch
linux-4.14.4
https://aur.archlinux.org/packages/python-powerline-git/
tmux 2.6
Enabling it with ""source /usr/share/tmux/powerline.conf"" in ~/.tmux.conf

Is there anything I can do to try and find out what the source of the leak is?"
1865,Q: Remove $HOSTNAME,2017-12-06T11:54:35Z,2017-12-06T20:18:15Z,s:invalid,,,"Hi there.
[I asked a question in superuser about powerline](https://superuser.com/questions/1274468/how-to-remove-hostname-in-powerline)  but I really don't know why it taken negative point & why no one answered that. In the other hand I know asking question in issue tracker is illegal but I 'm newbie & have no one to guide & answering me, so if you don't mind please let me know How can I remove $HOSTNAME (I just want full path of my current directory).
Thanks."
1864,Q: Does it support git flags? ,2017-12-04T13:57:11Z,2017-12-04T20:38:39Z,"c:VCS support, s:invalid",,,"Does powerline support git flags?
I have searched for it but no desired results.
I have already installed it on my Fedora 27 with [this article](https://fedoramagazine.org/add-power-terminal-powerline/) but I don't know how to check it out (git flag support). If it does, How can I check it out?"
1863,Powerline ignores the term_truecolor setting for tmux statusline,2017-12-02T12:20:59Z,,"c:b:tmux, t:enhancement",,,"Hi,
I have an odd little case where powerline seems to ignore the ""term_truecolor"" global setting just for the tmux statusline. This happens even though my terminal and tmux are perfectly capable of using truecolor.
I have configured powerline to use the gruvbox theme (https://github.com/morhetz/gruvbox) for everything I use. It works everywhere except the powerline tmux statusline. It's probably best to show some screenshots.

This shows two neovim instances inside tmux. The colors for neovim are correct, the ones for the statusline are not. The outermost elements in the statusline should have the same color as the mode element in neovim.
![selection_001](https://user-images.githubusercontent.com/9497302/33515235-95b0d108-d760-11e7-85ac-151ecb9c5b32.png)
(Disclaimer: I did not get powerline to work with neovim. Neovim just uses the plain gruvbox theme and vim-airline. It uses the same colors though. I just included this as a proof, that truecolor works inside tmux.)

This shows the same tmux instance with a terminal. As you can see again, the terminal PS1 uses the right colors.
![selection_002](https://user-images.githubusercontent.com/9497302/33515263-21ef013a-d761-11e7-9d4c-2e3ffd279a2c.png)

Here now is the main reason why I think the problem is with powerline: Before I source the powerline binding for tmux, I set up a sort of fallback in my .tmux.conf with the right colors. And look, they actually work!
![selection_003](https://user-images.githubusercontent.com/9497302/33515295-7493f224-d761-11e7-9c9e-52c369c395c4.png)

And now what makes me think that powerline ignores the ""term_truecolor"" setting for tmux: This is how my PS1 looks, when I set ""term_truecolor"" to false.
![selection_004](https://user-images.githubusercontent.com/9497302/33515323-c65c61fe-d761-11e7-91cb-ee5e00001915.png)
That looks pretty much the same to me.

The gruvbox theme provides colors for truecolor and 256 colors. I set both of them in my colors configuration for powerline. Here is my colors.json:
```json
{
  ""colors"": {
    ""gruvbox_dark:0_bg"":            [235, ""282828""],
    ""gruvbox_dark:8_gray"":          [245, ""928374""],

    ""gruvbox_dark:1_dark_red"":      [124, ""cc241d""],
    ""gruvbox_dark:9_light_red"":     [167, ""fb4934""],

    ""gruvbox_dark:2_dark_green"":    [106, ""98971a""],
    ""gruvbox_dark:10_light_green"":  [142, ""b8bb26""],

    ""gruvbox_dark:3_dark_yellow"":   [172, ""d79921""],
    ""gruvbox_dark:11_light_yellow"": [214, ""fabd2f""],

    ""gruvbox_dark:4_dark_blue"":     [66,  ""458588""],
    ""gruvbox_dark:12_light_blue"":   [109, ""83a598""],

    ""gruvbox_dark:5_dark_purple"":   [132, ""b16286""],
    ""gruvbox_dark:13_light_purple"": [175, ""d3869b""],

    ""gruvbox_dark:6_dark_aqua"":     [72,  ""689d6a""],
    ""gruvbox_dark:14_light_aqua"":   [108, ""8ec07c""],

    ""gruvbox_dark:7_gray"":          [246, ""a89984""],
    ""gruvbox_dark:15_fg"":           [223, ""ebdbb2""],

    ""gruvbox_dark:bg0_h"":           [234, ""1d2021""],

    ""gruvbox_dark:bg0"":             [235, ""282828""],
    ""gruvbox_dark:bg0_s"":           [236, ""32302f""],

    ""gruvbox_dark:bg1"":             [237, ""3c3836""],
    ""gruvbox_dark:fg4"":             [246, ""a89984""],

    ""gruvbox_dark:bg2"":             [239, ""504945""],
    ""gruvbox_dark:fg3"":             [248, ""bdae93""],

    ""gruvbox_dark:bg3"":             [241, ""665c54""],
    ""gruvbox_dark:fg2"":             [250, ""d5c4a1""],

    ""gruvbox_dark:bg4"":             [243, ""7c6f64""],
    ""gruvbox_dark:fg1"":             [223, ""ebdbb2""],

    ""gruvbox_dark:gray"":            [245, ""928374""],
    ""gruvbox_dark:fg0"":             [229, ""fbf1c7""],

    ""gruvbox_dark:dark_orange"":     [166, ""d65d0e""],
    ""gruvbox_dark:light_orange"":    [208, ""fe8019""]
  },
  ""gradients"": {}
}

```

And for reference, here are my tmux color constants, that are used prior to sourcing the powerline tmux binding:
```tmux
# color constants {{{2

GRUVBOX_DARK_0_BG=""#282828""
GRUVBOX_DARK_8_GRAY=""#928374""

GRUVBOX_DARK_1_DARK_RED=""#cc241d""
GRUVBOX_DARK_9_LIGHT_RED=""#fb4934""

GRUVBOX_DARK_2_DARK_GREEN=""#98971a""
GRUVBOX_DARK_10_LIGHT_GREEN=""#b8bb26""

GRUVBOX_DARK_3_DARK_YELLOW=""#d79921""
GRUVBOX_DARK_11_LIGHT_YELLOW=""#fabd2f""

GRUVBOX_DARK_4_DARK_BLUE=""#458588""
GRUVBOX_DARK_12_LIGHT_BLUE=""#83a598""

GRUVBOX_DARK_5_DARK_PURPLE=""#b16286""
GRUVBOX_DARK_13_LIGHT_PURPLE=""#d3869b""

GRUVBOX_DARK_6_DARK_AQUA=""#689d6a""
GRUVBOX_DARK_14_LIGHT_AQUA=""#8ec07c""

GRUVBOX_DARK_7_GRAY=""#a89984""
GRUVBOX_DARK_15_FG=""#ebdbb2""

GRUVBOX_DARK_BG0_H=""#1d2021""

GRUVBOX_DARK_BG0=""#282828""
GRUVBOX_DARK_BG0_S=""#32302f""

GRUVBOX_DARK_BG1=""#3c3836""
GRUVBOX_DARK_FG4=""#a89984""

GRUVBOX_DARK_BG2=""#504945""
GRUVBOX_DARK_FG3=""#bdae93""

GRUVBOX_DARK_BG3=""#665c54""
GRUVBOX_DARK_FG2=""#d5c4a1""

GRUVBOX_DARK_BG4=""#7c6f64""
GRUVBOX_DARK_FG1=""#ebdbb2""

GRUVBOX_DARK_GRAY=""#928374""
GRUVBOX_DARK_FG0=""#fbf1c7""

GRUVBOX_DARK_DARK_ORANGE=""#d65d0e""
GRUVBOX_DARK_LIGHT_ORANGE=""#fe8019""

# 2}}}

```

I hope this helps you guys find the bug or somebody to point out some error in my powerline config, that I overlooked so far."
1862,Get wrong width of screen when setting tmux window status on Windows Bash,2017-11-25T20:05:31Z,2017-11-25T20:20:00Z,"c:b:tmux, e:wsl, s:invalid:foreign bug, t:bug",,,"There are some problems when displaying tmux windows status on Window Bash
As the screenshot, the left side could not display session name and the right side displayed hostname at the next line.
The character for splitting `>` was also abnormal.
I am not sure the reason but I guess the python script get wrong screen width during initializing.

Environment:
 - Windows 10 15063.726
 - Bash 4.4.0-43-Microsoft
 - tmux 2.1
 - powerline-status: 2.6

.tmux.conf:
```
source /usr/share/doc/tmux/examples/vim-keys.conf
source /usr/share/doc/tmux/examples/screen-keys.conf
source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf

set-option -g xterm-keys # support arrow
set-option -g default-terminal ""screen-256color""
```

.bashrc: default setting in Bash

![171126040446](https://user-images.githubusercontent.com/5286233/33234279-fa14a2de-d25e-11e7-9881-840ba4cbe740.png)

"
1861,Missing space when using bash in tmux with battery,2017-11-24T22:22:13Z,2017-11-25T20:43:39Z,"c:b:shell, s:invalid:foreign bug, t:bug",,,"Noticed that when I am using tmux, with bash as my shell, and the battery segment in my bash powerline, if I have power connected, there is a missing space at the end of the powerline.

If I'm not using tmux (bash only), no problem with power connected or disconnected, but inside tmux, if power is connected, commands entered are overlapping the final arrow.

Configs:
config.json:
```json
{
    ""common"": {
        ""log_file"": ""/tmp/powerline.log""
    },
    ""ext"": {
        ""shell"": {
            ""theme"": ""multi_leftonly"",
            ""colorscheme"": ""solarized""
        },
        ""tmux"": {
            ""colorscheme"": ""solarized""
        }
    }
}
```
themes/shell/multi_leftonly.json
```json
{
        ""segments"": {
        ""above"": [
            {
                ""left"": [
                    {
                        ""function"": ""powerline.segments.common.net.hostname"",
                        ""priority"": 10
                    },
                    {
                        ""function"": ""powerline.segments.common.bat.battery"",
                        ""priority"": 10
                    },
                    {
                        ""function"": ""powerline.segments.common.env.user"",
                        ""priority"": 30
                    },
                    {
                        ""function"": ""powerline.segments.shell.cwd"",
                        ""priority"": 10
                    },
                    {
                        ""function"": ""powerline.segments.shell.jobnum"",
                        ""priority"": 20
                    },
                    {
                        ""function"": ""powerline.segments.shell.last_status"",
                        ""priority"": 10
                    }
                ]
            }
        ],
                ""left"": [
                        {
                                ""function"": ""powerline.segments.common.env.virtu                                                                                                         alenv"",
                                ""priority"": 50
                        },
            {
                ""function"": ""powerline_gitstatus.gitstatus"",
                ""priority"": 40
            }
                ]
        }
}
```
colorschemes/solarized.json:
```
{
  ""groups"": {
    ""gitstatus"":                 { ""fg"": ""solarized:base1"",           ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_branch"":          { ""fg"": ""solarized:base1"",           ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_branch_clean"":    { ""fg"": ""solarized:base1"", ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_branch_dirty"":    { ""fg"": ""solarized:yellow"", ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_branch_detached"": { ""fg"": ""solarized:magenta"",    ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_tag"":             { ""fg"": ""solarized:cyan"",        ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_behind"":          { ""fg"": ""solarized:base2"",          ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_ahead"":           { ""fg"": ""solarized:base2"",          ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_staged"":          { ""fg"": ""solarized:green"",           ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_unmerged"":        { ""fg"": ""solarized:red"",       ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_changed"":         { ""fg"": ""solarized:orange"",    ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_untracked"":       { ""fg"": ""solarized:yellow"", ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus_stashed"":         { ""fg"": ""solarized:blue"",        ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""gitstatus:divider"":         { ""fg"": ""solarized:base1"",           ""bg"": ""solarized:base02"", ""attrs"": [] },
    ""battery"":                   { ""fg"": ""solarized:base1"",           ""bg"": ""solarized:base02"", ""attrs"": [] }
  }
}
```

This is using the latest source 6be991c571e6abc333d5ed1e5884e60e16ec2eed

![bash-power-conn](https://user-images.githubusercontent.com/4759896/33224828-4297f11e-d133-11e7-8afb-2e030d2ad4eb.PNG)
![bash-power-disconn](https://user-images.githubusercontent.com/4759896/33224830-44d3b3dc-d133-11e7-9bac-060168aea155.PNG)
![tmux-power-conn](https://user-images.githubusercontent.com/4759896/33224832-47e1f318-d133-11e7-8bf0-41c942012d75.PNG)
![tmux-power-disconn](https://user-images.githubusercontent.com/4759896/33224833-4b3ecc2a-d133-11e7-9c8e-cf9bc57537e5.PNG)


I do not notice this on my Macbook with the same config using the last pypi release"
1860,Check for battery percentage if no charge/energy,2017-11-24T21:12:08Z,2017-11-24T21:34:15Z,"c:common segments, e:wsl, t:bug",,,"Windows Subsystem for Linux abstracts the batteries in a laptop
into a single battery, and only states the percent charge via
/sys/power_supply/battery/capacity.  If dbus is unavailable,
and no charge/energy readings are available for any power supply,
search for the first power supply that has a capacity file, and use it
(and its state) as the battery status.

Tested on a Surface Book 2 running Windows 10 with  Windows
Subsytem for Linux Ubuntu 16.04"
1859,Uptime segment is hard to configure reliably,2017-11-18T23:21:40Z,,"c:common segments, t:bug",,,"Currently it is impossible to

1. Use shorten_len to get rid of seconds/minutes/etc: if there are zero minutes it will show seconds instead. May be fixed by using empty string for seconds format, but that is not documented.
2. If there are zero days/minutes/etc the relevant part is unconditionally omitted. This makes segment length frequently change."
1858,Powerline not working with bash - displaying ???'s for separators (powerline vim dispalys OK),2017-11-15T10:27:05Z,2017-11-22T11:04:06Z,"c:b:shell, t:bug",,,"Currently the bash prompt showing as colour version, but with no glyphs, i.e.:

    ?username???/???opt???path1???path2???

`vim` is working as expected; the correct glyph for the hard separators.  

**The expected glyphs *are* visible if I `cat` the `powerline.json` files with the hard separator codes.**

Originally it wasn't displaying within vim, until I installed a patched font for for putty.  Even then it still wasn't visible on the shell prompt, however I at least go the *question marks to show* by setting the locale (see towards the end) and re-copying the main config:

    /usr/lib/python2.7/site-packages/powerline/config_files/config.json 

to

     ~/.config/powerline/config.json

Calling powerline using: 

    POWERLINE_BASH_CONTINUATION=1 POWERLINE_BASH_SELECT=1 source /usr/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh

This is inside a docker instance using a centos7 image, with powerline installed using `pip` as per the setup instructions of the main powerline git repository. I did have to add the locale to the bare bones image:

    localedef -i en_GB -c -f UTF-8 en_GB.UTF-8

And I changed the locale to:

    LANG=en_GB.utf-8
    LC_CTYPE=""en_GB.utf-8""
    LC_NUMERIC=""en_GB.utf-8""
    LC_TIME=""en_GB.utf-8""
    LC_COLLATE=""en_GB.utf-8""
    LC_MONETARY=""en_GB.utf-8""
    LC_MESSAGES=""en_GB.utf-8""
    LC_PAPER=""en_GB.utf-8""
    LC_NAME=""en_GB.utf-8""
    LC_ADDRESS=""en_GB.utf-8""
    LC_TELEPHONE=""en_GB.utf-8""
    LC_MEASUREMENT=""en_GB.utf-8""
    LC_IDENTIFICATION=""en_GB.utf-8""
    LC_ALL=en_GB.utf-8

I appreciate any help to try and fix this, and any tips on how to help diagnose the issue (even code edits) is appreciated.   

Is it possible for instance to print out the current theme and what configuration files are being used? 

It seems like this could be an issue with the render engine or perhaps an incompatibility with bash (*GNU bash, version 4.2.46(2)-release (x86_64-redhat-linux-gnu)*)?

**EDIT(1):** *Using `echo $PS1 | od -c -t x1` it looks as if the question marks are in the prompt itself.   An issue with the powerline render engine perhaps?*"
1857,No vim binding when installed via apt in Ubuntu 17.10,2017-11-14T02:48:52Z,2017-11-14T06:59:32Z,"c:b:vim, c:installation, s:invalid:foreign bug, t:bug",,,"Running Ubuntu 17.10 and installed powerline from the Ubuntu repos:
`sudo apt install powerline`
Edited my .bashrc and .tmux.conf and powerline is working as expected. However, when I edited my vimrc to add powerline it wouldn't work. After some searching I see there is nothing for vim in /usr/share/powerline/bindings

Is this a bug or am I missing something?"
1856,vim powerline python errors mac os sierra,2017-11-07T14:11:51Z,2017-11-07T21:12:51Z,"c:b:vim, s:invalid:configuration error, t:bug",,,"I  tried to install powerline to my vim by adding

`python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup`

to my ~/.vimrc. However I get errors. `
line   13:
E319: Sorry, the command is not available in this version: python3 from powerline.vim import setup as powerline_setup
line   14:
E319: Sorry, the command is not available in this version: python3 powerline_setup()
line   15:
E319: Sorry, the command is not available in this version: python3 del powerline_setup
Press ENTER or type command to continue
`

I am expecting that vim might invoke apple's python and not python3 which I have installed using anaconda. How can I fix that?"
1854,PowerlineSymbols bigger than other fonts.,2017-11-01T03:01:19Z,2017-11-01T23:16:50Z,,,,"![image](https://user-images.githubusercontent.com/24678727/32258161-df1824d4-bef3-11e7-97b0-37d1ffa6da43.png)
In Ubuntu 16.04LTS"
1853,Corrected interface lookups to work with systemd,2017-10-31T02:44:52Z,2017-10-31T10:41:37Z,"c:common segments, t:bug",,,"This should allow lookups to be performed against the new systemd interface (as well as all other interfaces) simply by comparing the prefix of the interface name rather than the first characters only. This also allows for enx interfaces that use the mac address as the identifier and throws the modifier for a spin by returning a crazy long integer.

Reference: https://github.com/systemd/systemd/blob/master/src/udev/udev-builtin-net_id.c#L20"
1852,Per-line outer_padding,2017-10-27T21:50:53Z,,"c:b:shell, c:configuration, t:enhancement",,,"Currently the ""outer_padding"" attribute applies to every line for a multiline prompt.
So if I want to achieve something like this:

![capto_capture 2017-10-27_05-17-16_pm](https://user-images.githubusercontent.com/10589586/32125621-d64e7ee6-bb3a-11e7-9568-ce4ff831e08e.png)

I have to set ""outer_padding"": 0, then hard code ""before"": "" "" for the user segment, which is inelegant, and does not work in all cases, since user is not always the first segment.
I cannot find another way around this.
Is there a way to set per-line ""outer_padding""?
"
1851,Added Vim segment plugin for the Asynchronous Linter Engine (ALE),2017-10-23T16:53:54Z,2017-10-27T20:29:56Z,"a:segment, c:b:vim, t:enhancement",,,"This segment has the same functionality and interface as the Syntastic
Vim segment plugin, and the code is largely adapted from it"
1850,powerline-setup throws error on Ubuntu 17.10 using the Fish prompt,2017-10-23T01:47:06Z,2017-10-23T06:05:53Z,"c:b:shell, s:invalid, t:bug",,,"I just installed the powerline apt package on Ubuntu 17.10 and followed the documentation to install it for the Fish prompt, then I got the error below after trying to launch Fish. The `{repository_root}` of this ubuntu package is ""/usr/share"".

```
/usr/share/powerline/bindings/fish/powerline-setup.fish (line 35): function: Illegal function name '--on-variable'
		function --on-variable fish_key_bindings _powerline_set_default_mode
			if test x$fish_key_bindings != xfish_vi_key_bindings
		^
in function “powerline-setup”
	called on line 14 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
	called during startup

/usr/share/powerline/bindings/fish/powerline-setup.fish (line 42): function: Illegal function name '--on-variable'
		function --on-variable POWERLINE_COMMAND _powerline_update
			set -l addargs ""--last-exit-code=\$status""
		^
in function “powerline-setup”
	called on line 14 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
	called during startup

/usr/share/powerline/bindings/fish/powerline-setup.fish (line 78): 
		_powerline_set_default_mode
		^
in function “powerline-setup”
	called on line 14 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
	called during startup

/usr/share/powerline/bindings/fish/powerline-setup.fish (line 79): 
		_powerline_update
		^
in function “powerline-setup”
	called on line 14 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
	called during startup
```"
1849,Fixes typo in documentation,2017-10-15T11:03:37Z,2017-10-15T11:30:56Z,"c:documentation, t:bug",,,"In the first paragraphof usage.html: ""s/Presense/Presence of Python support in vim..."""
1848,bash + tmux will hold a ridiculous number of open file handles,2017-10-13T19:19:43Z,,"c:b:shell, c:b:tmux, t:bug",,,"I set up powerline for bash and tmux. I started using it at work but immediately noticed that everything would slow to a crawl when opening a new tmux pane. If I continued to work and opened maybe one or two other panes, tmux would eventually hang and complain about too many open files.

I looked at lsof for my user in a few scenarios:
1) no powerline shell and no powerline tmux
```
plain shell:
$ lsof | grep sdaniel | wc -l
67
plain shell + plain tmux (1 pane):
$ lsof | grep sdaniel | wc -l
143
plain shell + plain tmux (2 pane):
$ lsof | grep sdaniel | wc -l
165
plain shell + plain tmux (4 pane):
$ lsof | grep sdaniel | wc -l
209
plain shell + plain tmux (8 pane):
$ lsof | grep sdaniel | wc -l
297
```
2) powerline shell and no powerline tmux
```
shell:
  lsof | grep sdaniel | wc -l
100
shell + plain tmux (1 pane):
 lsof | grep sdaniel | wc -l
176
shell + plain tmux (2 pane):
 lsof | grep sdaniel | wc -l
198
shell + plain tmux (4 pane):
 lsof | grep sdaniel | wc -l
242
shell + plain tmux (8 pane):
  lsof | grep sdaniel | wc -l
330
```
3) powerline shell and powerline tmux
```
shell + tmux (1 pane):
 lsof | grep sdaniel | wc -l
220
shell + tmux (2 pane):
 lsof | grep sdaniel | wc -l
302
shell + tmux (4 pane):
 lsof | grep sdaniel | wc -l
436
shell + tmux (8 pane):
 lsof | grep sdaniel | wc -l
704
shell + tmux (8 pane, 1st window) (1 pane, 2nd window):
 lsof | grep sdaniel | wc -l
876
shell + tmux (8 pane, 1st window) (8 pane, 2nd window):
 lsof | grep sdaniel | wc -l
1312
```
During the course of my day to day development, I will routinely have 3 to 8 tmux windows open, each with anywhere from 2 to 6 panes open (vims, shells, tailing logs, etc.). Powerline's behavior in this situation seems...not ideal to me...

To the point: my issue is that using powerline shell and powerline tmux is preventing me from getting any work done because tmux crashes complaining about too many open files!"
1847,Shell: tmux copy mode select backwards goes way too far,2017-10-12T07:52:11Z,,"c:b:shell, c:b:tmux, t:bug",,,"# Setup
* Latest powerline installed.
* zsh or bash set up with default theme for powerline
* Tmux is configured with vi copy mode bindings: `set-window-option -g mode-keys vi`
*  A shell runs inside any of the latest year's tmux versions.

# How to trigger problem
First you type some shell command, e.g.

```shell
 09:43:03  INSERT  erikw  ~  echo test msg
```

Then you want to copy copy this command, and to do that with tmux copy mode. So you enter copy mode with `prefix-]` and go up to the end of the command with the intention to step backwards to the ""e"" in echo and then press enter to make a copy.


Put cursor here
```shell
 09:43:03  INSERT  erikw  ~  echo test msg
                                                ^
```

Now press space to start selection.

Then using normal vi command to step one word back at the time, press `b`, which takes you to the beginning of the previous word, like

```shell
 09:43:03  INSERT  erikw  ~  echo test msg
                                              ^---
```

Perfect. Lets press `b` one more time to  mark the next word for selection too:

```shell
 09:43:03  INSERT  erikw  ~  echo test msg
                                         ^--------
```

all good. As a vi user I know now that I only have to press `b` one more time to end up at the ""e"" of echo, and then I'm done with my selection and can copy the command.

**Problem is here!**

The expected outcome of pressing `b` now is:

```shell
 09:43:03  INSERT  erikw  ~  echo test msg
                                    ^------------
```

However with powerline installed in zsh or bash, this is the actual outcome here:

```shell
 09:43:03  INSERT  erikw  ~  echo test msg
^-------------------------------------------------
```

It steps all the way back to the beginning of the line. Terrible, now I have to step forward using forward search, or estimate how many characters to jump forward etc.


Without powerline in zsh or bash, tmux `b` in copy mode works as expected, no problem. I only have this with powerline theme applied. I tried changing the theme to add some extra spaces at the trailing `>` at the end of the shell status line, but that did not help.

There is something with powerline that make tmux text selection consider the part after the last `> ` and the first character of the command to be one long contiguous word. It looks visually as there is a space between `> echo` but text selection considers it a whole word for some reason.


Why is this worth fixing? Well because copying old commands is probably the most common use case for tmux and copy mode, so this is annoying every time one try to do that. :)

Anyone have ideas on how we can make the status line not be considered a long word? :)"
1846,Design issue in Ubuntu 16.04,2017-10-12T06:36:31Z,2017-10-12T07:01:02Z,"c:b:shell, s:duplicate, s:invalid:error in environment, t:bug",,,"My colleague had installed Powerline few days back in his Linux  Elementary OS and I really liked the way it was designed and went ahead too but I am facing a minor issue in changing the appearance of the directory name appearing in the terminal window


![image](https://user-images.githubusercontent.com/31121849/31482268-289bcd14-af17-11e7-90cc-626bf5171c18.png)

While I needed this above look but what I am getting is this:

![image](https://user-images.githubusercontent.com/31121849/31482315-5694b9b0-af17-11e7-8b1c-08b6cd37c7e6.png)

I need some guidance on how to make it look like the above image

"
1845,"Fira Mono regular is missing the ""For Powerline"" in the full name",2017-10-09T15:05:02Z,,,,,"```
$ otfinfo -i ""FuraMono-Regular Powerline.otf""
Family:              Fira Mono for Powerline
Subfamily:           Regular
Full name:           Fira Mono
```"
1844,powerline and iTerm2 shell integration no longer working together,2017-10-09T01:03:20Z,2017-10-09T06:54:07Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"**iTerm2**: Build 3.1.4.beta.1
**powerline**: 2.6

Contents of bash_login:
```bash
# iterm shell integration
test -e ${HOME}/.iterm2_shell_integration.bash && source ${HOME}/.iterm2_shell_integration.bash

# powerline prompt
powerline-daemon -q
POWERLINE_BASH_CONTINUATION=1
POWERLINE_BASH_SELECT=1
. /usr/local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh
```

Contents of $PROMPT_COMMAND:
```
__bp_precmd_invoke_cmd; _powerline_set_prompt; __bp_interactive_mode
```

The very first prompt of a shell works (iterm's little chevron is present and the first command gets recorded in `Toolbelt > Command History`

All subsequent prompts do not call the iterm shell integration functions.

The behaviour is the same regardless of who is given first crack at PS1 (ie, if I move the iterm shell integration initializer below powerline's).

"
1843,Errors when switched to root,2017-10-07T04:25:48Z,2017-10-07T12:18:46Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"_powerline_set_prompt: command not found
__vte_prompt_command: command not found

I get these errors when switch to su"
1842,Bash prompt no longer uses > as the separator ,2017-10-05T20:02:38Z,2017-10-05T20:48:49Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"Similar to the issue [https://github.com/powerline/powerline/issues/1697](url). The behavior change happened inside one bash session. Here is `locale` returns:
```
LANG=""en_US.UTF-8""
LC_COLLATE=""en_US.UTF-8""
LC_CTYPE=""en_US.UTF-8""
LC_MESSAGES=""en_US.UTF-8""
LC_MONETARY=""en_US.UTF-8""
LC_NUMERIC=""en_US.UTF-8""
LC_TIME=""en_US.UTF-8""
LC_ALL=
```
Both Terminal and iTerm2 changed. Feel free to let me know if other information would be helpful to identify the issue. Thank you."
1841,Help with enabling segments,2017-10-02T07:57:50Z,2017-10-02T08:02:06Z,"c:configuration, s:invalid",,,"I am very beginner at this stuff, I would like to know how to enable/show the battery/weather segment.
I tried going through the documentation, did some stackoverflow searches. 
Every time i end up creating too many errors
Would be really helpful if you could spare some minutes of your time explaining the process

![powerline](https://user-images.githubusercontent.com/20777462/31068398-5d5f23de-a747-11e7-97d6-c120d6f98bcf.png)
"
1840,finish_args() takes at least 3 arguments (2 given),2017-09-30T19:49:45Z,2017-09-30T19:57:51Z,"s:duplicate, t:bug",,,"I'm not sure that this issue is resolved.

#1839 

finish_args() takes at least 3 arguments (2 given)locate
locate: no pattern to search for specified
finish_args() takes at least 3 arguments (2 given)locate powerline
/etc/fonts/conf.avail/10-powerline-symbols.conf
/etc/fonts/conf.d/10-powerline-symbols.conf
/home/atools/10-powerline-symbols.conf
/home/atools/.cache/pip/wheels/2b/3c/b6/0f2dd3801dadbae0b9f610fefbccc6f472540b86fd380b91fc/powerline_status-2.6-cp35-none-any.whl
/home/atools/.config/fontconfig/conf.d/10-powerline-symbols.conf
/home/atools/.config/hexchat/scrollback/freenode/#powerline.txt
/home/atools/.local/bin/powerline
/home/atools/.local/bin/powerline-config
/home/atools/.local/bin/powerline-daemon
/home/atools/.local/bin/powerline-lint
/home/atools/.local/bin/powerline-render
/home/atools/.local/bin/powerline.sh
/home/atools/.local/lib/python3.5/site-packages/powerline
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info
/home/atools/.local/lib/python3.5/site-packages/powerline/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings
/home/atools/.local/lib/python3.5/site-packages/powerline/colorscheme.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands
/home/atools/.local/lib/python3.5/site-packages/powerline/config.py
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files
/home/atools/.local/lib/python3.5/site-packages/powerline/dist
/home/atools/.local/lib/python3.5/site-packages/powerline/ipython.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lemonbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib
/home/atools/.local/lib/python3.5/site-packages/powerline/lint
/home/atools/.local/lib/python3.5/site-packages/powerline/listers
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers
/home/atools/.local/lib/python3.5/site-packages/powerline/pdb.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderer.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers
/home/atools/.local/lib/python3.5/site-packages/powerline/segment.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors
/home/atools/.local/lib/python3.5/site-packages/powerline/shell.py
/home/atools/.local/lib/python3.5/site-packages/powerline/theme.py
/home/atools/.local/lib/python3.5/site-packages/powerline/vim.py
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/colorscheme.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/config.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/ipython.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/lemonbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/pdb.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/renderer.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/segment.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/shell.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/theme.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/vim.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bar
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bash
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/config.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/fish
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/i3
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/lemonbar
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/rc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/shell
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tcsh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/__pycache__/config.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome/powerline-awesome.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome/powerline.lua
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome/__pycache__/powerline-awesome.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bar/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bar/powerline-bar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bar/__pycache__/powerline-bar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bash/powerline.sh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/fish/powerline-setup.fish
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/i3/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/i3/powerline-i3.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/i3/__pycache__/powerline-i3.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/post_0_11.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/pre_0_11.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/since_5.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__/post_0_11.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__/pre_0_11.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__/since_5.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/lemonbar/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/lemonbar/powerline-lemonbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/lemonbar/__pycache__/powerline-lemonbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__main__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__pycache__/__main__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/widget.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/__pycache__/widget.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/rc/powerline.rc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/shell/powerline.sh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tcsh/powerline.tcsh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline-base.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.7_plus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.8.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.8_minus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.9_plus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_2.1_plus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/autoload
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/plugin
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/autoload/powerline
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/autoload/powerline/debug.vim
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/plugin/powerline.vim
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/awesome.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/__pycache__/awesome.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/config.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/daemon.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/lemonbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/lint.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/main.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/config.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/daemon.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/lemonbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/lint.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/main.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colors.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/config.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/ipython
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/pdb
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/tmux
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/ipython/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/pdb/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/pdb/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/pdb/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/tmux/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/tmux/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim/solarizedlight.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ascii.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/pdb
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/powerline.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/powerline_terminus.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/powerline_unicode7.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/tmux
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/unicode.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/unicode_terminus.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/unicode_terminus_condensed.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/wm
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython/in.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython/in2.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython/out.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython/rewrite.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/pdb/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/continuation.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/default_leftonly.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/select.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/tmux/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/cmdwin.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/help.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/plugin_commandt.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/plugin_gundo-preview.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/plugin_gundo.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/plugin_nerdtree.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/quickfix.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/tabline.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/wm/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/dist/systemd
/home/atools/.local/lib/python3.5/site-packages/powerline/dist/systemd/powerline-daemon.service
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/config.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/debug.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/dict.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/encoding.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/humanize_bytes.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/inotify.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/memoize.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/monotonic.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/overrides.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/path.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/shell.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/threaded.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/unicode.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/url.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/config.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/debug.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/dict.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/encoding.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/humanize_bytes.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/inotify.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/memoize.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/monotonic.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/overrides.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/path.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/shell.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/threaded.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/unicode.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/url.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/bzr.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/git.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/mercurial.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__/bzr.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__/git.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__/mercurial.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/inotify.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/stat.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/tree.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/uv.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/inotify.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/stat.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/tree.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/uv.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/checks.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/context.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/imp.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/inspect.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/selfcheck.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/spec.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/checks.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/context.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/imp.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/inspect.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/selfcheck.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/spec.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/composer.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/constructor.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/error.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/events.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/loader.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/markedvalue.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/nodes.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/parser.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/reader.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/resolver.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/scanner.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/tokens.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/composer.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/constructor.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/error.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/events.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/loader.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/markedvalue.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/nodes.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/parser.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/reader.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/resolver.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/scanner.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/tokens.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/i3wm.py
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/pdb.py
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/vim.py
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__/i3wm.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__/pdb.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__/vim.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/commandt.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/gundo.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/nerdtree.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__/commandt.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__/gundo.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__/nerdtree.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/i3bar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/lemonbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/pango_markup.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/pdb.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/tmux.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/vim.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/i3bar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/lemonbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/pango_markup.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/pdb.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/tmux.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/vim.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/pre_5.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/since_5.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__pycache__/pre_5.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__pycache__/since_5.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/bash.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/ksh.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/rcsh.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/readline.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/tcsh.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/zsh.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/bash.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/ksh.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/rcsh.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/readline.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/tcsh.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/zsh.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/i3wm.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/ipython.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/pdb.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/shell.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/tmux.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/i3wm.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/ipython.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/pdb.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/shell.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/tmux.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/bat.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/env.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/mail.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/net.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/players.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/sys.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/time.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/vcs.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/wthr.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/bat.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/env.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/mail.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/net.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/players.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/sys.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/time.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/vcs.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/wthr.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/capslock.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/commandt.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/nerdtree.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/syntastic.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/tagbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/capslock.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/commandt.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/nerdtree.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/syntastic.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/tagbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/vim.py
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/__pycache__/vim.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/DESCRIPTION.rst
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/INSTALLER
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/METADATA
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/RECORD
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/WHEEL
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/metadata.json
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/top_level.txt
"
1839,finish_args() takes at least 3 arguments (2 given),2017-09-30T18:54:28Z,2017-09-30T19:21:46Z,"s:duplicate, t:bug",,,"Having this problem, saw a similar post, so thought i'd delete and reinstall it, still hasn't fixed the issue.


/home/atools/.cache/pip/wheels/2b/3c/b6/0f2dd3801dadbae0b9f610fefbccc6f472540b86fd380b91fc/powerline_status-2.6-cp35-none-any.whl
/home/atools/.config/fontconfig/conf.d/10-powerline-symbols.conf
/home/atools/.config/hexchat/scrollback/freenode/#powerline.txt
/home/atools/.local/bin/powerline
/home/atools/.local/bin/powerline-config
/home/atools/.local/bin/powerline-daemon
/home/atools/.local/bin/powerline-lint
/home/atools/.local/bin/powerline-render
/home/atools/.local/bin/powerline.sh
/home/atools/.local/lib/python3.5/site-packages/powerline
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info
/home/atools/.local/lib/python3.5/site-packages/powerline/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings
/home/atools/.local/lib/python3.5/site-packages/powerline/colorscheme.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands
/home/atools/.local/lib/python3.5/site-packages/powerline/config.py
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files
/home/atools/.local/lib/python3.5/site-packages/powerline/dist
/home/atools/.local/lib/python3.5/site-packages/powerline/ipython.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lemonbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib
/home/atools/.local/lib/python3.5/site-packages/powerline/lint
/home/atools/.local/lib/python3.5/site-packages/powerline/listers
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers
/home/atools/.local/lib/python3.5/site-packages/powerline/pdb.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderer.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers
/home/atools/.local/lib/python3.5/site-packages/powerline/segment.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors
/home/atools/.local/lib/python3.5/site-packages/powerline/shell.py
/home/atools/.local/lib/python3.5/site-packages/powerline/theme.py
/home/atools/.local/lib/python3.5/site-packages/powerline/vim.py
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/colorscheme.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/config.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/ipython.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/lemonbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/pdb.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/renderer.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/segment.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/shell.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/theme.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/__pycache__/vim.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bar
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bash
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/config.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/fish
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/i3
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/lemonbar
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/rc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/shell
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tcsh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/__pycache__/config.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome/powerline-awesome.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome/powerline.lua
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/awesome/__pycache__/powerline-awesome.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bar/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bar/powerline-bar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bar/__pycache__/powerline-bar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/bash/powerline.sh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/fish/powerline-setup.fish
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/i3/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/i3/powerline-i3.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/i3/__pycache__/powerline-i3.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/post_0_11.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/pre_0_11.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/since_5.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__/post_0_11.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__/pre_0_11.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/ipython/__pycache__/since_5.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/lemonbar/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/lemonbar/powerline-lemonbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/lemonbar/__pycache__/powerline-lemonbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__main__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/pdb/__pycache__/__main__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/widget.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/qtile/__pycache__/widget.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/rc/powerline.rc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/shell/powerline.sh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tcsh/powerline.tcsh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline-base.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.7_plus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.8.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.8_minus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_1.9_plus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline_tmux_2.1_plus.conf
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/tmux/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/autoload
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/plugin
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/autoload/powerline
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/autoload/powerline/debug.vim
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/vim/plugin/powerline.vim
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/awesome.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/wm/__pycache__/awesome.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh
/home/atools/.local/lib/python3.5/site-packages/powerline/bindings/zsh/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/config.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/daemon.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/lemonbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/lint.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/main.py
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/config.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/daemon.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/lemonbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/lint.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/commands/__pycache__/main.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colors.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/config.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/ipython
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/pdb
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/tmux
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/ipython/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/pdb/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/pdb/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/pdb/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/tmux/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/tmux/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim/solarized.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/colorschemes/vim/solarizedlight.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ascii.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/pdb
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/powerline.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/powerline_terminus.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/powerline_unicode7.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/tmux
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/unicode.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/unicode_terminus.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/unicode_terminus_condensed.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/wm
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython/in.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython/in2.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython/out.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/ipython/rewrite.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/pdb/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/continuation.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/default_leftonly.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/shell/select.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/tmux/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/__main__.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/cmdwin.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/help.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/plugin_commandt.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/plugin_gundo-preview.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/plugin_gundo.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/plugin_nerdtree.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/quickfix.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/vim/tabline.json
/home/atools/.local/lib/python3.5/site-packages/powerline/config_files/themes/wm/default.json
/home/atools/.local/lib/python3.5/site-packages/powerline/dist/systemd
/home/atools/.local/lib/python3.5/site-packages/powerline/dist/systemd/powerline-daemon.service
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/config.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/debug.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/dict.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/encoding.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/humanize_bytes.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/inotify.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/memoize.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/monotonic.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/overrides.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/path.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/shell.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/threaded.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/unicode.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/url.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/config.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/debug.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/dict.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/encoding.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/humanize_bytes.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/inotify.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/memoize.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/monotonic.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/overrides.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/path.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/shell.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/threaded.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/unicode.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/__pycache__/url.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/bzr.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/git.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/mercurial.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__/bzr.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__/git.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/vcs/__pycache__/mercurial.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/inotify.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/stat.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/tree.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/uv.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/inotify.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/stat.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/tree.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lib/watcher/__pycache__/uv.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/checks.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/context.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/imp.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/inspect.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/selfcheck.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/spec.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/checks.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/context.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/imp.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/inspect.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/selfcheck.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/__pycache__/spec.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/composer.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/constructor.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/error.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/events.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/loader.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/markedvalue.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/nodes.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/parser.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/reader.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/resolver.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/scanner.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/tokens.py
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/composer.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/constructor.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/error.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/events.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/loader.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/markedvalue.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/nodes.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/parser.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/reader.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/resolver.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/scanner.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/lint/markedjson/__pycache__/tokens.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/i3wm.py
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/pdb.py
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/vim.py
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__/i3wm.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__/pdb.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/listers/__pycache__/vim.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/commandt.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/gundo.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/nerdtree.py
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__/commandt.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__/gundo.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/matchers/vim/plugin/__pycache__/nerdtree.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/i3bar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/lemonbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/pango_markup.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/pdb.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/tmux.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/vim.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/i3bar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/lemonbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/pango_markup.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/pdb.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/tmux.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/__pycache__/vim.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/pre_5.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/since_5.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__pycache__/pre_5.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/ipython/__pycache__/since_5.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/bash.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/ksh.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/rcsh.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/readline.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/tcsh.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/zsh.py
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/bash.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/ksh.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/rcsh.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/readline.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/tcsh.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/renderers/shell/__pycache__/zsh.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/i3wm.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/ipython.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/pdb.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/shell.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/tmux.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/i3wm.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/ipython.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/pdb.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/shell.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/__pycache__/tmux.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/bat.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/env.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/mail.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/net.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/players.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/sys.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/time.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/vcs.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/wthr.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/bat.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/env.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/mail.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/net.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/players.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/sys.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/time.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/vcs.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/common/__pycache__/wthr.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/capslock.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/commandt.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/nerdtree.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/syntastic.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/tagbar.py
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/capslock.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/commandt.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/nerdtree.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/syntastic.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/segments/vim/plugin/__pycache__/tagbar.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/__init__.py
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/__pycache__
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/vim.py
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/__pycache__/__init__.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline/selectors/__pycache__/vim.cpython-35.pyc
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/DESCRIPTION.rst
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/INSTALLER
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/METADATA
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/RECORD
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/WHEEL
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/metadata.json
/home/atools/.local/lib/python3.5/site-packages/powerline_status-2.6.dist-info/top_level.txt
/usr/share/doc/fonts-powerline
/usr/share/doc/python-powerline
/usr/share/doc/python3-powerline
/usr/share/doc/fonts-powerline/changelog.Debian.gz
/usr/share/doc/fonts-powerline/copyright
/usr/share/doc/python-powerline/changelog.Debian.gz
/usr/share/doc/python-powerline/copyright
/usr/share/doc/python3-powerline/changelog.Debian.gz
/usr/share/doc/python3-powerline/copyright
/var/lib/dpkg/info/fonts-powerline.conffiles
/var/lib/dpkg/info/fonts-powerline.list
/var/lib/dpkg/info/fonts-powerline.md5sums
/var/lib/dpkg/info/python-powerline.list
/var/lib/dpkg/info/python-powerline.md5sums
/var/lib/dpkg/info/python-powerline.postinst
/var/lib/dpkg/info/python-powerline.prerm
/var/lib/dpkg/info/python3-powerline.list
/var/lib/dpkg/info/python3-powerline.md5sums
/var/lib/dpkg/info/python3-powerline.postinst
/var/lib/dpkg/info/python3-powerline.prerm
"
1838,IPython prompt customization,2017-09-27T10:33:46Z,2017-09-28T19:59:58Z,"c:b:ipython, c:configuration, c:core, t:enhancement",,,"By default IPython shows a green prompt for the input and a red prompt for the output.
Is it possible to add something like `prompt_count_out` so it will be easier to add this feature to a custom theme without overriding `config_files/colorschemes/ipython/__main__.json` and `segments/ipython.py`?
There is eventually another way to achieve this? Thank you."
1837,Issue with the Powerline bar,2017-09-26T20:52:33Z,2017-09-26T20:57:47Z,"c:b:shell, s:invalid",,,"<img width=""789"" alt=""issue"" src=""https://user-images.githubusercontent.com/24566968/30882759-58297072-a30a-11e7-95ec-8bcd4810102b.png"">

Has anyone a suggestion for the red lines in the pictures ??
 It is not supposed that ""Big Bang"" an ""64?"" is standing there. 
I haven't made any costum configuration yet. 
It would be nice when somebody could help me because Iam not a specialist in this area :D 
"
1836,Arbitrary command segment,2017-09-25T15:23:52Z,2017-09-25T15:26:42Z,"a:segment, s:duplicate, t:enhancement",,,"Is it possible to include the output of an arbitrary shell command or script as a segment?

In my use case, I would execute the command every few seconds and update the segment if the output changes."
1835,Initial support for gruvbox colorscheme,2017-09-24T16:12:44Z,,,,,"Here is my implementation for [gruvbox](https://github.com/morhetz/gruvbox): tmux and shell.

![gruvbox_powerline](https://user-images.githubusercontent.com/3227746/30784347-e6e0d570-a153-11e7-8dd4-f036e7408979.png)
"
1834,vim 8.0: status line flashes when typing,2017-09-23T20:04:46Z,,"c:b:vim, t:bug",,,"After updating to vim 8.0 status line started to blink from grey to blue each time I insert any symbol. I had vim 7.4 before and in insert mode it was always just blue. Now on each time I type a symbol it changes from grey to blue, then back to grey.

here is my `vim --version` output: 

```
VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Sep 23 2017 22:36:49)
Included patches: 1-1141
Compiled by root@equi-UX32LN
Huge version with GTK2 GUI.  Features included (+) or not (-):
+acl             +file_in_path    +mouse_sgr       +tag_old_static
+arabic          +find_in_path    -mouse_sysmouse  -tag_any_white
+autocmd         +float           +mouse_urxvt     -tcl
+balloon_eval    +folding         +mouse_xterm     +termguicolors
+browse          -footer          +multi_byte      +terminal
++builtin_terms  +fork()          +multi_lang      +terminfo
+byte_offset     +gettext         -mzscheme        +termresponse
+channel         -hangul_input    +netbeans_intg   +textobjects
+cindent         +iconv           +num64           +timers
+clientserver    +insert_expand   +packages        +title
+clipboard       +job             +path_extra      +toolbar
+cmdline_compl   +jumplist        +perl            +user_commands
+cmdline_hist    +keymap          +persistent_undo +vertsplit
+cmdline_info    +lambda          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      -python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con_gui  +lua             +rightleft       +windows
+diff            +menu            +ruby            +writebackup
+digraphs        +mksession       +scrollbind      +X11
+dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     +xim
+emacs_tags      +mouseshape      +startuptime     +xpm
+eval            +mouse_dec       +statusline      +xsmp_interact
+ex_extra        -mouse_gpm       -sun_workshop    +xterm_clipboard
+extra_search    -mouse_jsbterm   +syntax          -xterm_save
+farsi           +mouse_netterm   +tag_binary      
   system vimrc file: ""$VIM/vimrc""
     user vimrc file: ""$HOME/.vimrc""
 2nd user vimrc file: ""~/.vim/vimrc""
      user exrc file: ""$HOME/.exrc""
  system gvimrc file: ""$VIM/gvimrc""
    user gvimrc file: ""$HOME/.gvimrc""
2nd user gvimrc file: ""~/.vim/gvimrc""
       defaults file: ""$VIMRUNTIME/defaults.vim""
    system menu file: ""$VIMRUNTIME/menu.vim""
  fall-back for $VIM: ""/usr/local/share/vim""
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H -DFEAT_GUI_GTK  -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2   -g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1       
Linking: gcc   -L. -fstack-protector -rdynamic -Wl,-export-dynamic -Wl,-E   -L/usr/local/lib -Wl,--as-needed -o vim   -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lfontconfig -lfreetype -lSM -lICE -lXpm -lXt -lX11 -lXdmcp -lSM -lICE  -lm -ltinfo -lnsl  -lselinux  -ldl  -L/usr/lib -llua5.1 -Wl,-E  -fstack-protector-strong -L/usr/local/lib  -L/usr/lib/x86_64-linux-gnu/perl/5.22/CORE -lperl -ldl -lm -lpthread -lcrypt -L/usr/lib/python2.7/config -lpython2.7   -Wl,-rpath,/../lib -Wl,-R/../lib -lruby -lpthread -ldl -lcrypt -lm  -L/home/equi/.rvm/rubies/ruby-2.3.1/lib 
```

in my `.vimrc` I have
`Plugin 'powerline/powerline', {'rtp': 'powerline/bindings/vim/'}`"
1833,what's meaning of `ST 1[2][3]`,2017-09-19T02:31:33Z,2017-09-19T05:28:05Z,"c:b:shell, s:invalid",,,"![image](https://user-images.githubusercontent.com/9859965/30573282-9311cbec-9cb8-11e7-9e45-fc8063ad341c.png)
I don't know what's meaning of `ST 1` beside git branch on the right."
1832,Set window_flags for tmux?,2017-09-16T13:39:37Z,,"c:b:tmux, c:configuration, t:enhancement",,,"In the powerline tmux binding (part of which shown below) I don't know how to set `window_flags` to `0` or `false` or whatever so that the window flags don't appear in the window titles. What is the appropriate way to set this? I've tried use `set-option` in my tmux config file but it says that it's not a valid option.

```
set -g window-status-format ""#[$_POWERLINE_WINDOW_COLOR]$_POWERLINE_LEFT_HARD_DIVIDER_SPACES#I#{?window_flags,#F, } #[$_POWERLINE_WINDOW_DIVIDER_COLOR]$_POWERLINE_LEFT_SOFT_DIVIDER#[default]#W $_POWERLINE_LEFT_HARD_DIVIDER_SPACES""
```"
1831,Powerline possibly sends garbage characters on resize,2017-09-13T13:34:47Z,2017-09-14T07:03:58Z,"c:b:shell, s:invalid:foreign bug, t:bug",,,"I had a problem with a terminal emulator I am developing for some time with powerline sending garbage characters on stdout if you resize rapidly. Initially I thought it was a bug on my side but after investigating it looks like it comes from powerline, or zsh/powerline in combination.

I log all bytes directly in the terminal, reading from the zsh process, and I see sequences like these;

```
bd 04 ec 6d fa 07
0b 81 eb fe fc 07
cf 01 de 20 fa 07
```
embedded among normal ansi sequences. It looks like they may be addresses, so it is potentially a stack array overrun problem.

As I have not been able to reproduce it in other terminal emulators I post this here as a FYI, hoping that someone has an idea why this happens.
"
1830,Fix typo,2017-09-11T12:26:26Z,2017-09-11T18:47:03Z,,,,
1829,iTunes Segment not working,2017-09-09T16:13:54Z,2017-09-10T00:31:33Z,"c:b:tmux, e:macos, s:invalid:configuration error, t:bug",,,"System OSX 10.12.6 sierra
Terminal iTerm
tmux right length is 500
This is the pip install of powerline-status

Spotify is working fine
iTunes not at all

Theme
```
{
	""segments"": {
		""right"": [
      {
        ""function"": ""powerline.segments.common.players.itunes"",
        ""name"": ""player""
      },
			{
				""function"": ""powerline.segments.common.sys.uptime"",
				""priority"": 50
			},
			{
				""function"": ""powerline.segments.common.sys.system_load"",
				""priority"": 50
			},
			{
				""function"": ""powerline.segments.common.time.date""
			},
			{
				""function"": ""powerline.segments.common.time.date"",
				""name"": ""time"",
				""args"": {
					""format"": ""%H:%M"",
					""istime"": true
				}
			},
			{
				""function"": ""powerline.segments.common.net.hostname""
			}
		]
	}
}
```
powerline-lint
```
error while checking theme (key /segments/right/list item 0/function)
found highlight groups list (player_fallback, player) with all groups not defined in some colorschemes
(Group names were taken from function documentation.)
  in ""/Users/dnehrig/Library/Python/2.7/lib/python/site-packages/powerline/config_files/themes/tmux/default.json"", line 5, column 56:
     ... werline.segments.common.players.itunes"",
                                         ^

Error while checking theme (key /segments/right/list item 0/function)
found highlight group player_fallback not defined in the following colorschemes: default, solarized

Error while checking theme (key /segments/right/list item 0/function)
found highlight group player not defined in the following colorschemes: solarized

Error while checking theme (key /segments/right/list item 0/function)
found highlight groups list (player_play, player) with all groups not defined in some colorschemes
(Group names were taken from function documentation.)
  in ""/Users/dnehrig/Library/Python/2.7/lib/python/site-packages/powerline/config_files/themes/tmux/default.json"", line 5, column 56:
     ... werline.segments.common.players.itunes"",
                                         ^

Error while checking theme (key /segments/right/list item 0/function)
found highlight group player_play not defined in the following colorschemes: default, solarized

Error while checking theme (key /segments/right/list item 0/function)
found highlight group player not defined in the following colorschemes: solarized

Error while checking theme (key /segments/right/list item 0/function)
found highlight groups list (player_pause, player) with all groups not defined in some colorschemes
(Group names were taken from function documentation.)
  in ""/Users/dnehrig/Library/Python/2.7/lib/python/site-packages/powerline/config_files/themes/tmux/default.json"", line 5, column 56:
     ... werline.segments.common.players.itunes"",
                                         ^

Error while checking theme (key /segments/right/list item 0/function)
found highlight group player_pause not defined in the following colorschemes: default, solarized

Error while checking theme (key /segments/right/list item 0/function)
found highlight group player not defined in the following colorschemes: solarized

Error while checking theme (key /segments/right/list item 0/function)
found highlight groups list (player_stop, player) with all groups not defined in some colorschemes
(Group names were taken from function documentation.)
  in ""/Users/dnehrig/Library/Python/2.7/lib/python/site-packages/powerline/config_files/themes/tmux/default.json"", line 5, column 56:
     ... werline.segments.common.players.itunes"",
                                         ^

Error while checking theme (key /segments/right/list item 0/function)
found highlight group player_stop not defined in the following colorschemes: default, solarized

Error while checking theme (key /segments/right/list item 0/function)
found highlight group player not defined in the following colorschemes: solarized
```
powerline tmux right
```
powerline tmux right
#[fg=colour233,bg=default,nobold,noitalics,nounderscore] #[fg=colour247,bg=colour233,nobold,noitalics,nounderscore] ↑  14m 54s#[fg=colour241,bg=colour233,nobold,noitalics,nounderscore] #[fg=colour2,bg=colour233,nobold,noitalics,nounderscore] 1.9 #[fg=colour2,bg=colour233,nobold,noitalics,nounderscore]1.5 #[fg=colour2,bg=colour233,nobold,noitalics,nounderscore]1.1#[fg=colour236,bg=colour233,nobold,noitalics,nounderscore] #[fg=colour247,bg=colour236,nobold,noitalics,nounderscore] 2017-09-09#[fg=colour241,bg=colour236,nobold,noitalics,nounderscore] #[fg=colour252,bg=colour236,bold,noitalics,nounderscore] 18:10#[fg=colour252,bg=colour236,nobold,noitalics,nounderscore] #[fg=colour16,bg=colour252,bold,noitalics,nounderscore]  admins-MBP.local %
```"
1828,Fix data type in branch segment documentation,2017-09-02T19:39:45Z,2017-09-02T19:39:50Z,"c:VCS support, c:documentation, t:bug",,,Closes #1827
1827,fix data type error,2017-09-02T19:11:55Z,2017-09-02T19:39:50Z,"c:VCS support, c:documentation, t:bug",,,
1826,Prefixing or appending items to powerline prompt,2017-08-30T18:34:45Z,2017-08-31T15:27:37Z,"c:configuration, s:invalid",,,"This is a simple question and after looking through the documentation I still cannot figure it out for myself. All I'd like to do is determine how to prefix or append characters to the powerline prompt. Specifically after all of my segments I'd like a space to separate the last segment and the commands I'm typing. I've tried ""after"" in various places in the themes, like I said after reviewing the docs, but cannot figure it out. I do have my dividers/arrows disabled, so each segment is a ""rectangle"".

Apologies if this is not the appropriate venue for this type of question, but any help would be appreciated."
1825,external_ip segment hangs the shell because of network timeout,2017-08-30T18:31:54Z,2017-08-31T15:39:46Z,"c:common segments, s:invalid:configuration error, t:bug",,,"Helluu!

I experience that the segment `external_ip` is not working good if there is no Internet connection -- it hangs the powerline-daemon for 10 seconds.

# The setup
I have configured correctly powerline for `tmux` and for `zsh`. The cofiguration for tmux uses the `external_ip` segment. 

# The problem
When no internet connection is available, the IP segment at

`/usr/lib/python3.6/site-packages/powerline/segments/common/net.py:_external_ip()`

uses 

`/usr/lib/python3.6/site-packages/powerline/lib/url.py:urllib_read()`

which in turn uses 

```python
urlopen(timeout=10)
```

What now happens is that the powerline-daemon freezes for 10 seconds. If you during this time create a new shell, it will hang too as the powerline daemon is busy. If you press enter in an open shell, it hangs too, as the shell status can't be printed either (uses powerline).

Maybe add a configuration parameter cold be added to `external_ip` to set the network timout setting to something lower than 10s? 

What do you think? 

Having shells freezing because of no Internet connection is simply not good!"
1824,Fix handling of empty config.json,2017-08-24T17:04:05Z,2017-08-25T14:03:46Z,"c:configuration, s:not a bug, t:bug","TypeError, json.decoder.JSONDecodeError","TypeError: 'NoneType' object is not iterable, json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","When `~/.config/powerline/config.json` and friends are empty, `powerline-lint` will fail with:

```
Traceback (most recent call last):
  File ""/usr/bin/powerline-lint"", line 13, in <module>
    sys.exit(check(args.config_path, args.debug))
  File ""/usr/lib/python3.6/site-packages/powerline/lint/__init__.py"", line 496, in check
    main_config = load_config('config', find_config_files, config_loader)
  File ""/usr/lib/python3.6/site-packages/powerline/__init__.py"", line 199, in load_config
    mergedicts(ret, config_loader.load(path))
  File ""/usr/lib/python3.6/site-packages/powerline/lib/dict.py"", line 39, in mergedicts
    for k in d2:
TypeError: 'NoneType' object is not iterable
```

and opening a new shell using powerline gives:

```
Traceback (most recent call last):
  File ""/usr/bin/powerline-config"", line 20, in <module>
    pl = config.create_powerline_logger(args)
  File ""/usr/lib/python3.6/site-packages/powerline/bindings/config.py"", line 222, in create_powerline_logger
    config = get_main_config(args)
  File ""/usr/lib/python3.6/site-packages/powerline/bindings/config.py"", line 218, in get_main_config
    return load_config('config', find_config_files, config_loader)
  File ""/usr/lib/python3.6/site-packages/powerline/__init__.py"", line 199, in load_config
    mergedicts(ret, config_loader.load(path))
  File ""/usr/lib/python3.6/site-packages/powerline/lib/config.py"", line 160, in load
    r = self._load(path)
  File ""/usr/lib/python3.6/site-packages/powerline/lib/config.py"", line 21, in load_json_config
    return load(config_file_fp)
  File ""/usr/lib64/python3.6/json/__init__.py"", line 299, in load
    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
  File ""/usr/lib64/python3.6/json/__init__.py"", line 354, in loads
    return _default_decoder.decode(s)
  File ""/usr/lib64/python3.6/json/decoder.py"", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File ""/usr/lib64/python3.6/json/decoder.py"", line 357, in raw_decode
    raise JSONDecodeError(""Expecting value"", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File ""/usr/bin/powerline-config"", line 20, in <module>
    pl = config.create_powerline_logger(args)
  File ""/usr/lib/python3.6/site-packages/powerline/bindings/config.py"", line 222, in create_powerline_logger
    config = get_main_config(args)
  File ""/usr/lib/python3.6/site-packages/powerline/bindings/config.py"", line 218, in get_main_config
    return load_config('config', find_config_files, config_loader)
  File ""/usr/lib/python3.6/site-packages/powerline/__init__.py"", line 199, in load_config
    mergedicts(ret, config_loader.load(path))
  File ""/usr/lib/python3.6/site-packages/powerline/lib/config.py"", line 160, in load
    r = self._load(path)
  File ""/usr/lib/python3.6/site-packages/powerline/lib/config.py"", line 21, in load_json_config
    return load(config_file_fp)
  File ""/usr/lib64/python3.6/json/__init__.py"", line 299, in load
    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
  File ""/usr/lib64/python3.6/json/__init__.py"", line 354, in loads
    return _default_decoder.decode(s)
  File ""/usr/lib64/python3.6/json/decoder.py"", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File ""/usr/lib64/python3.6/json/decoder.py"", line 357, in raw_decode
    raise JSONDecodeError(""Expecting value"", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
```

This fixes the merging of None dicts and catches the JSONDecodeError."
1823,Do not use negative indexes,2017-08-22T07:31:09Z,2017-08-22T09:04:47Z,"c:b:shell, t:bug",,,Ref #1821.
1822,"For a day it worked fine, now its broken",2017-08-21T19:23:55Z,2017-08-25T16:17:30Z,"c:font, s:invalid:no information, t:bug",,,"![terminalpower](https://user-images.githubusercontent.com/20777462/29534631-4c9b8c1a-86d4-11e7-9a45-c85a0607520a.png)

I tried re-installing, no help!"
1821,Remove hashtag character at 48,2017-08-19T13:48:48Z,2017-08-19T14:23:15Z,"c:b:shell, t:bug",,,Fix last_pipe_status: bad array subscript
1820,Confusing documentation for default segment args,2017-08-16T01:02:54Z,,"c:documentation, s:wontfix, t:bug",,,"After spending quite a bit of time diagnosing why a `hostname` segment in a shell theme wouldn't appear, including carefully checking the [documentation](https://powerline.readthedocs.io/en/master/configuration/segments/common.html#powerline.segments.common.net.hostname) and the [source it links to](https://powerline.readthedocs.io/en/master/_modules/powerline/segments/common/net.html#hostname) (and [on GitHub](/powerline/powerline/blob/develop/powerline/segments/common/net.py#L17)), I finally realized that the `only_in_ssh` argument is set to true in `.../themes/shell/__main__.json`. I had assumed, I think fairly, that optional segment arguments wouldn't be quietly overridden by the default config files.

It would be great if the docs could include a hint that, despite the declaration setting the parameter to `false` by default in the source (and therefore the docs), it is overridden by default for an entire environment. I think I disagree with that override in general, but at the very least I think it would be very helpful to document the full set of defaults for segments in the out-of-the-box config."
1819,lemonbar stacks on one monitor when using two monitors,2017-08-15T18:37:51Z,,"c:b:wm, t:bug",,,"Hello, I'm having an issue with powerline-lemonbar when I use two monitors, where rather than displaying one bar per output, it stacks both of the bars on one.

Specifically, this only happens when one monitor is configured to be above/below the other, i.e., 
```bash
xrandr --output VGA1 --above LVDS1
``` 
results in two stacked bars on VGA1 and none on LVDS1, whereas 
```bash
xrandr --output VGA1 --left-of LVDS1
``` 
results in the expected configuration.

Even when they stack, it's clear that they're still getting information about which output they should appear on. The widths are correct for the intended output (one will be smaller than the other), and I added a `print(bars)` statement to `powerline/bindings/lemonbar/powerline-lemonbar.py`, and the output was: 
```
[('LVDS1', <subprocess.Popen object at 0x7fed4a053978>, 273.2), ('VGA1', <subprocess.Popen object at 0x7fed4a05eac8>, 384.0)]
```

I'm using powerline 2.6, i3-gaps 4.13 (for Manjaro), lemonbar-xft-clicky 0.r214.a2fad82, and python 3.6.

Thank you!"
1818,added elapsed time to spotify applescript player segment,2017-08-08T05:48:02Z,2017-08-09T17:03:06Z,"c:players, e:macos, t:enhancement",,,"added elapsed time to spotify applescript player segment
tested on OS X 10.12.6 Spotify 1.0.58"
1817,change spotify to use applescript on OS X,2017-08-08T04:14:04Z,2017-08-08T04:15:44Z,"c:players, t:bug",,,"changed choosing logic. because:
spotify on OS X does not support dbus message so applescript had to be used.
other system does not support applescript so dbus has to be used."
1816,fix spotify applescript track length,2017-08-08T04:10:30Z,2017-08-08T04:41:59Z,"c:players, t:bug",,,"Because duration of current track is returned by milliseconds from spotify.
it should be divided by 1000 before being displaying."
1815,why don't spotify player status in MacOS be prefered to use osascript?,2017-08-07T11:00:17Z,2017-08-08T04:17:05Z,"c:players, e:macos, t:bug",,,"in /powerline/segments/common/players.py line 374
```
if 'dbus' in globals() or not sys.platform.startswith('darwin'):
```
this means that even in macOS dbus is preffered way.
but in macOS dbus-python is very buggy, dbus module is buggy no matter installed by brew or ports.
on the contrary, osascript is preinstalled on OS X systems and rarely have issue.

I think that line should be something like
```
if 'dbus' in globals() and not sys.platform.startswith('darwin'):
```

or even just
```
if not sys.platform.startswith('darwin'):
```
because linux system has to use dbus anyways."
1814,powerline.segments.common.net.internal_ip doesn't work in macOS Sierra 10.12.5 even after installing netifaces,2017-08-06T16:35:20Z,2017-08-07T23:24:17Z,"c:common segments, s:invalid:configuration error, t:bug",,,"```
{
        ""spaces"": 1,
        ""outer_padding"": 1,
        ""segments"": {
                ""right"": [
                        {
                                ""function"": ""powerline.segments.common.net.internal_ip""
                        }
                ],
                ""left"": [
                ]
        }
}
```"
1813,Adding elapsed time to dbus players,2017-08-04T18:55:33Z,2017-08-04T21:47:20Z,"c:players, t:enhancement",,,I have added the dbus elapsed line for all dbus players.
1812,Update tests,2017-07-30T16:37:00Z,,"c:tests, t:enhancement",,,
1811,"Adding Music On Console (mocp) support, requires >= 2.3.0 version",2017-07-30T05:09:54Z,2017-08-02T12:09:25Z,"a:segment, c:players, t:enhancement",,,
1810,Problem with ipython3,2017-07-28T11:04:03Z,2017-09-02T21:34:50Z,"c:b:ipython, t:bug",,,"      File ""/usr/lib/python3.6/site-packages/powerline/bindings/ipython/since_5.py"", line 11, in <module>
        from powerline.bindings.ipython.post_0_11 import PowerlineMagics, ShutdownHook
    ModuleNotFoundError: No module named 'powerline.bindings.ipython.post_0_11'

EDIT: Replaced single backticks with 4-space indent."
1809,Custom Segments,2017-07-24T20:21:08Z,2017-07-24T20:24:13Z,s:invalid,,,"I know that I can write custom Segments by simply forking the powerline repo, but is there an easy way to put Segments on the python path and see them loaded?  I've tried putting a segment in /Users/ggp/Library/Python/2.7/lib/python/site-packages/mypackage but I can't seem to get anything loaded.

Is this even correct or is there a better way.
"
1808,PWD freeze.,2017-07-24T10:42:13Z,2017-07-24T10:53:23Z,"c:b:shell, s:duplicate, t:bug",,,"When i'm using powerline(installed from pip, powerline-status 2.6), i found sometimes my current working directory will freeze no matter where i `cd` to

 cy  ~  Documents  Sources  A7  cd /home/cy
 cy  ~  Documents  Sources  A7  

I'm not sure what log i should give. So if you need anything else to debug this problem, feel free to tell me.
Thanks
"
1807,Powerline statusline loses its colours in Vim when `:w` is used,2017-07-21T12:58:21Z,2017-07-22T11:42:16Z,"c:b:vim, s:invalid:error in environment, t:bug",,,"`vim --version` output:
```
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Nov 24 2016 16:44:48)
Included patches: 1-1689
Extra patches: 8.0.0056
```
Using the powerline theme for vim, here is how the theme is called:
```
set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/
set laststatus=2
```

Each time I use `:w` to write to a file, my powerline statusline goes from looking like this:
![image](https://user-images.githubusercontent.com/29816026/28464049-ddabd66e-6e66-11e7-89af-9efa9a9713fc.png)

...to looking like this: 
![image](https://user-images.githubusercontent.com/29816026/28464067-f9577080-6e66-11e7-96f3-c037ffa8232f.png)

If I use `so %` to re-source the .vimrc file in the same session, the statusline colours return as normal (until `:w` is used again)

Doing some research, if I use `:verbose set statusline?`, it outputs `statusline=%!py3eval('powerline.statusline(1)')`. Seems like somewhere the powerline theme is calling to set the `statusline` param to `1`, as opposed to the value of `2` like it should be to have it persist. 

I realise this may not be a powerline theme issue, so please close if necessary (I have also posted this in the Vim issues thread)"
1806,cpu_load_percent is unusable due to color missing in solarized,2017-07-19T21:34:59Z,2017-07-20T15:44:36Z,"c:b:tmux, t:bug",,,"I have just installed `powerline` from `pip` (and `psutil`), I have copy and paste the `theme/tmux/default.json` to use `powerline.segments.common.sys.cpu_load_percent` and nothing appeared in `tmux`.

I tried to lint it and I get this error:

```
$ powerline-lint                                                                  

Error while checking theme (key /segments/right/list item 1/function)
found highlight groups list (cpu_load_percent_gradient, cpu_load_percent) with all groups not defined in some colorschemes
(Group names were taken from function documentation.)
  in ""/home/gdifolco/.config/powerline/themes/tmux/default.json"", line 9, column 48:
     ...  ""powerline.segments.common.sys.cpu_load_percent"",
                                         ^

Error while checking theme (key /segments/right/list item 1/function)
found highlight group cpu_load_percent_gradient not defined in the following colorschemes: solarized

Error while checking theme (key /segments/right/list item 1/function)
found highlight group cpu_load_percent not defined in the following colorschemes: solarized
```

I tried to copy and paste the lines from `colorschemes/default.json` to `colorschemes/solarized.json` without any result."
1805,"Shell prompt showing powerline symbols, except for stash?",2017-07-15T03:46:30Z,2017-07-15T03:53:05Z,"c:b:shell, s:invalid:configuration error, t:bug",,,"I recently updated Powerline, and for some reason, the `vcs.stash` segment is showing in ASCII mode rather than Powerline/Unicode symbol mode:

<img width=""808"" alt=""screenshot 2017-07-15 13 37 05"" src=""https://user-images.githubusercontent.com/21655/28236195-d5f7f9d8-6962-11e7-96f7-e2e51edc660b.png"">

Since ⌆ is a Unicode symbol, it should show up even without patched fonts (although I do have the font patched anyway), so I'm not sure why this is happening.

I don't have anything (that I know of) that is overriding it for the `vcs.stash` segment, with a pretty simple shell theme:
```json
{
	""segments"": {
		""left"": [
			{
				""function"": ""powerline.segments.shell.mode""
			},
			{
				""function"": ""powerline.segments.common.net.hostname"",
				""priority"": 10
			},
			{
				""function"": ""powerline.segments.common.env.user"",
				""priority"": 30
			},
			{
				""function"": ""powerline.segments.common.env.virtualenv"",
				""priority"": 50
			},
			{
				""function"": ""powerline.segments.shell.cwd"",
				""priority"": 10
			},
			{
				""function"": ""powerline.segments.shell.jobnum"",
				""priority"": 20
			}
		],
		""right"": [
			{
				""function"": ""powerline.segments.shell.last_pipe_status"",
				""priority"": 10
			},
			{
				""function"": ""powerline.segments.common.vcs.stash"",
				""priority"": 30
			},
			{
				""function"": ""powerline.segments.common.vcs.branch"",
				""priority"": 40
			}
		]
	}
}
```

Using powerline-status 2.6, fish 2.6 on macOS 10.12 inside Terminal.app. No custom config, apart from the above theme.

Any idea where to start debugging? I've tried adding a `~/.config/powerline/config.json` and setting `default_top_theme` to various choices, none of which gave me the desired effect."
1804,vim-signify integrated into vim theme,2017-07-14T23:20:13Z,,"c:b:vim, t:enhancement",,,"Hi Guys

is there support from vim-signify in powerline? Currently vim-arline has the support, so, just asking is this isn't already implemented.

Thanks!"
1803,Fix powerline with gcc7,2017-07-13T13:58:04Z,2017-07-13T20:02:23Z,"c:daemon, t:bug",,,"Hi,

the first two patches fix the compilation of powerline with GCC 7.x. The last one is a small optimization.
"
1802,Sourcing zsh binding gives error,2017-07-13T13:51:29Z,2017-07-13T16:00:49Z,"c:b:shell, s:invalid, t:bug",,,"Sourcing Powerline's _zsh_ binding does not work and provides a missing argument error like so:

```zsh
$ . /usr/lib/python3.6/site-packages/powerline/bindings/zsh/powerline.zsh
finish_args() missing 1 required positional argument: 'args'
```
Here are some more information about my powerline installation
```
pip show powerline-status                      (07-13 15:46)
Name: powerline-status
Version: 2.6.dev9999-git.b-8d577b59584c51c643495f5173da5b8a04806236-
Summary: The ultimate statusline/prompt utility.
Home-page: https://github.com/powerline/powerline
Author: Kim Silkebaekken
Author-email: kim.silkebaekken+vim@gmail.com
License: MIT
Location: /usr/lib/python3.6/site-packages
Requires: 
```
I found this previous issue which was about a similar error https://github.com/powerline/powerline/issues/1766 and thus uninstalled my Python 2.7 version of Powerline, but the errors still remains."
1801,Traceback when hitting Ctrl+c quickly on F26/Python 3.6,2017-07-12T21:07:24Z,2017-07-12T21:31:45Z,"c:b:shell, s:not a bug, t:bug",,,"Possibly related to: https://github.com/powerline/powerline/issues/1800

### Setup info: 

OS: Fedora 26 
Python: Python 3.6
Powerline: From official repository
```
powerline-fonts-2.6-1.fc26.noarch
powerline-2.6-1.fc26.x86_64
tmux-powerline-2.6-1.fc26.noarch
powerline-docs-2.6-1.fc26.noarch
vim-powerline-2.6-1.fc26.noarch
```

Initialized with the following in `~/.bashrc`:

```
powerline-daemon -q
export POWERLINE_BASH_CONTINUATION=1
export POWERLINE_BASH_SELECT=1
. /usr/share/powerline/bash/powerline.sh
```

### Problem:

When hitting Ctrl+c on the commandline quickly, the following happens:

```
 xenith  ~  ^C
^C
Traceback (most recent call last):
  File ""/usr/bin/powerline"", line 19, in <module>
    from powerline.lib.encoding import get_preferred_output_encoding
  File ""/usr/lib/python3.6/site-packages/powerline/__init__.py"", line 11, in <module>
    from powerline.lib.config import ConfigLoader
  File ""/usr/lib/python3.6/site-packages/powerline/lib/config.py"", line 11, in <module>
    from powerline.lib.threaded import MultiRunnedThread
  File ""/usr/lib/python3.6/site-packages/powerline/lib/threaded.py"", line 8, in <module>
    from powerline.segments import Segment
  File ""/usr/lib/python3.6/site-packages/powerline/segments/__init__.py"", line 6, in <module>
    from pkgutil import extend_path
  File ""/usr/lib64/python3.6/pkgutil.py"", line 6, in <module>
    import importlib.util
  File ""/usr/lib64/python3.6/importlib/util.py"", line 13, in <module>
    from contextlib import contextmanager
  File ""/usr/lib64/python3.6/contextlib.py"", line 228, in <module>
    class suppress(AbstractContextManager):
  File ""/usr/lib64/python3.6/abc.py"", line 147, in __new__
    cls._abc_negative_cache = WeakSet()
  File ""/usr/lib64/python3.6/_weakrefset.py"", line 37, in __init__
    self.data = set()
KeyboardInterrupt
^C
^C
Traceback (most recent call last):
  File ""/usr/bin/powerline"", line 19, in <module>
    from powerline.lib.encoding import get_preferred_output_encoding
  File ""/usr/lib/python3.6/site-packages/powerline/__init__.py"", line 11, in <module>
    from powerline.lib.config import ConfigLoader
  File ""/usr/lib/python3.6/site-packages/powerline/lib/config.py"", line 11, in <module>
    from powerline.lib.threaded import MultiRunnedThread
  File ""/usr/lib/python3.6/site-packages/powerline/lib/threaded.py"", line 8, in <module>
    from powerline.segments import Segment
  File ""/usr/lib/python3.6/site-packages/powerline/segments/__init__.py"", line 6, in <module>
    from pkgutil import extend_path
  File ""/usr/lib64/python3.6/pkgutil.py"", line 6, in <module>
    import importlib.util
  File ""<frozen importlib._bootstrap>"", line 961, in _find_and_load
  File ""<frozen importlib._bootstrap>"", line 950, in _find_and_load_unlocked
  File ""<frozen importlib._bootstrap>"", line 655, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 674, in exec_module
  File ""<frozen importlib._bootstrap_external>"", line 779, in get_code
  File ""<frozen importlib._bootstrap_external>"", line 487, in _compile_bytecode
KeyboardInterrupt
 xenith  ~  130  ^C
^C
Traceback (most recent call last):
  File ""/usr/bin/powerline"", line 19, in <module>
    from powerline.lib.encoding import get_preferred_output_encoding
  File ""/usr/lib/python3.6/site-packages/powerline/__init__.py"", line 6, in <module>
    import logging
  File ""/usr/lib64/python3.6/logging/__init__.py"", line 28, in <module>
    from string import Template
  File ""<frozen importlib._bootstrap>"", line 961, in _find_and_load
  File ""<frozen importlib._bootstrap>"", line 950, in _find_and_load_unlocked
  File ""<frozen importlib._bootstrap>"", line 655, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 674, in exec_module
  File ""<frozen importlib._bootstrap_external>"", line 771, in get_code
  File ""<frozen importlib._bootstrap_external>"", line 450, in _validate_bytecode_header
KeyboardInterrupt
 xenith  ~  130  ^C
^C
Traceback (most recent call last):
  File ""/usr/bin/powerline"", line 19, in <module>
    from powerline.lib.encoding import get_preferred_output_encoding
  File ""/usr/lib/python3.6/site-packages/powerline/__init__.py"", line 6, in <module>
    import logging
  File ""/usr/lib64/python3.6/logging/__init__.py"", line 26, in <module>
    import sys, os, time, io, traceback, warnings, weakref, collections
  File ""/usr/lib64/python3.6/traceback.py"", line 5, in <module>
    import linecache
  File ""/usr/lib64/python3.6/linecache.py"", line 11, in <module>
    import tokenize
  File ""/usr/lib64/python3.6/tokenize.py"", line 33, in <module>
    import re
  File ""/usr/lib64/python3.6/re.py"", line 123, in <module>
    import sre_compile
  File ""/usr/lib64/python3.6/sre_compile.py"", line 14, in <module>
    import sre_parse
  File ""/usr/lib64/python3.6/sre_parse.py"", line 74, in <module>
    class Pattern:
KeyboardInterrupt
^C
Traceback (most recent call last):
  File ""/usr/bin/powerline"", line 19, in <module>
    from powerline.lib.encoding import get_preferred_output_encoding
  File ""/usr/lib/python3.6/site-packages/powerline/__init__.py"", line 11, in <module>
    from powerline.lib.config import ConfigLoader
  File ""/usr/lib/python3.6/site-packages/powerline/lib/config.py"", line 12, in <module>
    from powerline.lib.watcher import create_file_watcher
  File ""/usr/lib/python3.6/site-packages/powerline/lib/watcher/__init__.py"", line 7, in <module>
    from powerline.lib.watcher.inotify import INotifyFileWatcher
  File ""/usr/lib/python3.6/site-packages/powerline/lib/watcher/inotify.py"", line 10, in <module>
    from powerline.lib.inotify import INotify
  File ""/usr/lib/python3.6/site-packages/powerline/lib/inotify.py"", line 10, in <module>
    from ctypes.util import find_library
  File ""/usr/lib64/python3.6/ctypes/util.py"", line 2, in <module>
    import shutil
  File ""/usr/lib64/python3.6/shutil.py"", line 983, in <module>
    _ntuple_diskusage = collections.namedtuple('usage', 'total used free')
  File ""/usr/lib64/python3.6/collections/__init__.py"", line 431, in namedtuple
    exec(class_definition, namespace)
  File ""<string>"", line 1, in <module>
KeyboardInterrupt
```

Confirmed this with another user as well 
"
1800,"powerline bash prompt is slow to generate, despite powerline-daemon running",2017-07-12T18:42:11Z,2017-07-12T21:32:16Z,"c:b:shell, s:not a bug, t:bug",,,"### Setup info: 

OS: Fedora 26 
Python: Python 3.6
Powerline: From official repository
```
powerline-fonts-2.6-1.fc26.noarch
powerline-2.6-1.fc26.x86_64
tmux-powerline-2.6-1.fc26.noarch
powerline-docs-2.6-1.fc26.noarch
vim-powerline-2.6-1.fc26.noarch
```

Initialized with the following in `~/.bashrc`:

```
powerline-daemon -q
export POWERLINE_BASH_CONTINUATION=1
export POWERLINE_BASH_SELECT=1
. /usr/share/powerline/bash/powerline.sh
```

### Problem:

If a picture is worth a thousand words, then a video... well here you go (click for a better view).

![powerline_is_being_slow](https://user-images.githubusercontent.com/10273878/28134048-cc408d56-670f-11e7-93c9-3f2c5ef36679.gif)

#### Note:  Left side is F26, Right is F25. These are separate VMs being run in virt-manager. They are stock installations, but have been fully updated. Only powerline has been installed and configured as shown. In the beginning of the GIF you can see the relevant version information. 

I suspect the fact that Fedora 25 is Python `3.5.3` and F26 is Python `3.6.1` may be the culprit. (oops, I should have shown that in the GIF also, but forgot)

Please see this downstream bug report also by me: https://bugzilla.redhat.com/show_bug.cgi?id=1469861 should it contain any additional info (none at the time of writing) "
1799,Ubuntu Subsytem on Windows Compatibility,2017-07-12T16:42:50Z,2017-07-12T21:35:33Z,"e:wsl, s:invalid",,,"Hi all,

Anyone got this working in the new linux subsystem on windows 10? "
1798,fontconfig: add Terminus font,2017-07-05T22:49:21Z,2017-07-05T22:55:33Z,"c:font, s:duplicate, t:enhancement",,,Add Terminus to the fontconfig file. Tested to work fine on Ubuntu 16.04.
1797,powerline doesn't work for zsh on Arch Linux,2017-07-03T15:49:21Z,2017-07-04T07:20:07Z,"c:b:shell, s:invalid, t:bug",,,"Hi,

I have the following lines in my .zshrc

    powerline-daemon -q
    . /usr/lib/python3.6/site-packages/powerline/bindings/zsh/powerline.zsh

but they don't seem to do anything. Can anyone help me please?
"
1796,The command will move slightly,2017-07-02T09:20:52Z,,"c:b:shell, e:wsl, t:bug",,,"I make a gif for specfiy this problem like following

![](https://i.stack.imgur.com/8wrdw.gif)

I don't sure this is a bug,but I hope this case get a improvement.Thanks

BTW,I'm in *Windows 10 Subsystem for Linux*"
1795,Unable to find new colorschemes,2017-07-02T07:42:24Z,2017-07-02T12:49:13Z,"c:b:tmux, s:invalid:configuration error, t:bug",KeyError,"KeyError: u'Highlighting groups not found in colorscheme: background","I copied solarized.json to solarizedlight.json `~/.config/powerline/colorschemes/tmux/solarizedlight.json`.

I also added it in `config_files/colorschemes/tmux/solarizedlight.json`
I changed the `config.py`
```
		""tmux"": {
			""colorscheme"": ""solarizedlight"",
			""theme"": ""default""
		},
```
But then I get this error
```
➜  ~ powerline-config tmux setup
Traceback (most recent call last):
  File ""/home/maik/.local/bin/powerline-config"", line 22, in <module>
    args.function(pl, args)
  File ""/home/maik/.local/lib/python2.7/site-packages/powerline/commands/config.py"", line 15, in __call__
    self.function(*args, **kwargs)
  File ""/home/maik/.local/lib/python2.7/site-packages/powerline/bindings/config.py"", line 211, in tmux_setup
    init_tmux_environment(pl, args, set_tmux_environment=ste)
  File ""/home/maik/.local/lib/python2.7/site-packages/powerline/bindings/config.py"", line 124, in init_tmux_environment
    highlight = get_highlighting(highlight_group)
  File ""/home/maik/.local/lib/python2.7/site-packages/powerline/bindings/config.py"", line 110, in get_highlighting
    return colorscheme.get_highlighting([group], None)
  File ""/home/maik/.local/lib/python2.7/site-packages/powerline/colorscheme.py"", line 105, in get_highlighting
    raise KeyError('Highlighting groups not found in colorscheme: ' + ', '.join(groups))
KeyError: u'Highlighting groups not found in colorscheme: background
```"
1794,Replace ~/.fonts with ~/.local/share/fonts in help,2017-07-02T03:13:00Z,2017-07-02T04:37:40Z,"c:documentation, t:enhancement",,,"`~/.fonts/` has been deprecated in favour of `~/.local/share/fonts/`.

References:
- https://github.com/behdad/fontconfig/blob/master/fonts.conf.in#L29
- https://lists.freedesktop.org/archives/fontconfig/2014-July/005270.html

Fixes #1793"
1793,Replace reference to deprecated ~/.fonts/ folder in installation instructions,2017-07-02T03:11:24Z,2017-07-02T04:37:40Z,"c:documentation, t:enhancement",,,"The installation instructions for Linux currently specify using the `~/.fonts/` directory, but use of this folder has been deprecated:

https://github.com/behdad/fontconfig/blob/master/fonts.conf.in#L29
https://lists.freedesktop.org/archives/fontconfig/2014-July/005270.html

Instead, it should point to the `~/.local/share/fonts/` folder."
1792,Specify argparse dependency,2017-06-30T23:59:03Z,2017-07-01T10:58:03Z,"c:installation, e:python-2.6, t:bug",,,Fixes #1791
1791,Fail to start the powerline.sh,2017-06-30T22:34:27Z,2017-07-01T10:58:03Z,"c:installation, e:python-2.6, t:bug",,,"As you see,I have install the powerline successfully

![](http://i.stack.imgur.com/WJXll.png)

But I cannot start the powerline.sh.

![](http://i.stack.imgur.com/pWdcS.png)

Could you give some advice for this error?

"
1790,pip3 install powerline-status using Cygwin on Windows 10 builds linux binary instead,2017-06-30T13:40:25Z,,"c:installation, e:cygwin, t:bug",,,"Trying to improve the performance of powerline in the Cygwin on Windows 10 system I installed make, gcc, etc. and rebuilt powerline with pip3.

The result was a linux ELF binary in /usr/bin which didn't work.

I didn't do any further digging.

I moved to the socat version instead.

Best,

Matthew"
1789,Misaligned glyphs from the powerline-fonts,2017-06-23T21:39:34Z,2017-06-24T08:23:22Z,"c:font, s:wontfix, t:bug",,,"Hey, I'm on Arch, and I've been using the powerline fonts for a while. Arch moved over to using the fallback fonts by default instead of the patched ones, and I've noticed a consistent persistent misalignment of the glyphs with an number of the supported fonts including but not limited to Source Code Pro.

I've seen this on multiple machines, and I'm not totally sure what is the problem
![screenshot from 2017-06-23 17-35-31](https://user-images.githubusercontent.com/6083371/27501383-ea33d8e2-583a-11e7-8241-cb7dac7882b5.png)

It draws off-alignment in Gnome-Terminal, Tilda, and even suckless st, so i think it's a font problem."
1788,Bash error after I execute a command,2017-06-16T23:32:28Z,2017-06-17T08:05:14Z,"c:b:shell, s:duplicate, t:bug",,,"Whenever I execute a command, after the output from it, I get:
`-bash: last_pipe_status: bad array subscript`

Attached  is a screenshot of my interaction
<img width=""616"" alt=""screen shot 2017-06-16 at 4 31 42 pm"" src=""https://user-images.githubusercontent.com/10778111/27247848-5cfdfe1e-52b1-11e7-8c00-65fef1ecade0.png"">
"
1787,c,2017-06-15T20:12:27Z,2017-06-15T20:13:29Z,s:invalid,,,
1786,Spelling Fix,2017-06-08T00:57:07Z,2017-06-08T01:06:53Z,"c:documentation, t:bug",,,
1785,"add awesome4+ support, fixes #1784",2017-06-03T19:59:44Z,2017-06-03T20:15:49Z,"c:b:wm, t:bug",,,
1784,Support for awesome4+,2017-06-03T19:20:30Z,2017-06-03T20:15:51Z,"c:b:wm, t:bug",,,I already tried it. One just hast to replace   ``awful.util.spawn_with_shell`` with ``awful.spawn.with_shell`` in the `powerline.lua`.
1783,Check that bash has (no) $PIPESTATUS support before using it,2017-06-02T18:13:07Z,2017-06-03T20:36:29Z,"c:b:shell, t:bug",,,Ref #1782
1782,"Fix for ""last_pipe_status: bad array subscript""",2017-06-02T11:21:11Z,2017-06-02T17:58:03Z,"c:b:shell, t:bug",,,"Recent versions of powerline lead to this error in bash: 

```
-bash: last_pipe_status: bad array subscript
```"
1781, powerline symbol at 0x00A0 not displayed in GVim but works in ViM,2017-05-26T07:33:44Z,2017-05-26T09:17:28Z,"c:b:vim, c:font, s:invalid:foreign bug",,,"I am using Arch Linux and installed powerline, powerline-vim and powerline-fonts from the official repositories.
Everything works except for GVim where the glyphs at 0x00A0 are not displayed in GVim but are properly displayed in ViM. I use ViM under gnome-terminal with ttf-inconsolata, same font is used in GVim."
1780,finish_args() takes at least 3 arguments (2 given),2017-05-21T22:11:31Z,2017-05-21T22:21:40Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"I can't make bash show powerline correctly on Ubuntu 17.04. But I get the Ubuntu 16.04.2 LTS work.

I followed the tutorial https://www.tecmint.com/powerline-adds-powerful-statuslines-and-prompts-to-vim-and-bash/. 

After I put this in .bashrc, it shows finish_args() takes at least 3 arguments (2 given).
if [ -f `which powerline-daemon` ]; then
  powerline-daemon -q
  POWERLINE_BASH_CONTINUATION=1
  POWERLINE_BASH_SELECT=1
  . ~/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh
fi
"
1779,Add some fixes for vterm tests,2017-05-21T13:11:51Z,2017-05-21T13:30:42Z,"c:tests, t:bug",,,
1778,Switch vterm tests to use “standard” temporary directory in tests/tmp,2017-05-20T23:35:25Z,2017-05-21T00:06:26Z,"c:tests, t:bug",,,
1777,locale.getdefaultlocale()[1] returns 'UTF-8' on OSX,2017-05-20T12:42:41Z,2017-05-20T14:58:38Z,"s:invalid:error in environment, t:bug",ValueError,"ValueError: unknown locale: UTF-8","Hi.

I'm getting this error:

```
Traceback (most recent call last):
  File ""/Users/twieland/Library/Python/2.7/bin/powerline-config"", line 6, in <module>
    from powerline.commands.config import get_argparser
  File ""/Users/twieland/Library/Python/2.7/lib/python/site-packages/powerline/commands/config.py"", line 6, in <module>
    import powerline.bindings.config as config
  File ""/Users/twieland/Library/Python/2.7/lib/python/site-packages/powerline/bindings/config.py"", line 19, in <module>
    from powerline.commands.main import finish_args
  File ""/Users/twieland/Library/Python/2.7/lib/python/site-packages/powerline/commands/main.py"", line 18, in <module>
    encoding = get_preferred_arguments_encoding()
  File ""/Users/twieland/Library/Python/2.7/lib/python/site-packages/powerline/lib/encoding.py"", line 89, in get_preferred_arguments_encoding
    locale.getdefaultlocale()[1]
  File ""/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Versions/2.7/lib/python2.7/locale.py"", line 545, in getdefaultlocale
    return _parse_localename(localename)
  File ""/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Versions/2.7/lib/python2.7/locale.py"", line 477, in _parse_localename
    raise ValueError, 'unknown locale: %s' % localename
ValueError: unknown locale: UTF-8
Traceback (most recent call last):
  File ""/Users/twieland/Library/Python/2.7/bin/powerline-config"", line 6, in <module>
    from powerline.commands.config import get_argparser
  File ""/Users/twieland/Library/Python/2.7/lib/python/site-packages/powerline/commands/config.py"", line 6, in <module>
    import powerline.bindings.config as config
  File ""/Users/twieland/Library/Python/2.7/lib/python/site-packages/powerline/bindings/config.py"", line 19, in <module>
    from powerline.commands.main import finish_args
  File ""/Users/twieland/Library/Python/2.7/lib/python/site-packages/powerline/commands/main.py"", line 18, in <module>
    encoding = get_preferred_arguments_encoding()
  File ""/Users/twieland/Library/Python/2.7/lib/python/site-packages/powerline/lib/encoding.py"", line 89, in get_preferred_arguments_encoding
    locale.getdefaultlocale()[1]
  File ""/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Versions/2.7/lib/python2.7/locale.py"", line 545, in getdefaultlocale
    return _parse_localename(localename)
  File ""/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Versions/2.7/lib/python2.7/locale.py"", line 477, in _parse_localename
    raise ValueError, 'unknown locale: %s' % localename
ValueError: unknown locale: UTF-8
```"
1776,✏️ Add fish to list of supported apps on readme,2017-05-17T21:56:19Z,2017-05-17T21:58:46Z,"c:documentation, t:bug",,,
1775,Add support for pipestatus in bash,2017-05-16T16:23:42Z,2017-05-16T17:07:59Z,"c:b:shell, t:enhancement",,,
1774,Android Environment,2017-05-16T09:17:09Z,2017-05-16T13:35:16Z,"c:b:shell, s:invalid:foreign bug, t:bug",,,"Hi,
I'm new to this cool stuff. It actually looks great but I ran into this weird issue very quickly as I'm an Android developer.
After I typed ""lunch"" command in my Android project, the powerline seems stopped working, the ""path"" in prompt does not change at all.
It seems like there's some variable defining conflicts, but I'm not sure.
Anybody could help on this one?

Thank you!"
1773,Sporadic weather error,2017-05-16T03:57:54Z,2017-05-16T09:30:14Z,"c:common segments, s:invalid:foreign bug, t:bug",,,"Just upgraded to version 2.6 and I'm getting the following sporadic error:
```
ERROR:tmux:WeatherSegment:Exception while computing state for None: 'NoneType' object is not subscriptable
```

My configuration is pretty simple:
```
{
  {
        ""function"": ""powerline.segments.common.wthr.weather"",
        ""args"": {
          ""icons"": {
            ""day"":           ""〇"",
            ""blustery"":      ""⚑"",
            ""rainy"":         ""☔"",
            ""cloudy"":        ""☁"",
            ""snowy"":         ""❅"",
            ""stormy"":        ""☈"",
            ""foggy"":         ""≡"",
            ""sunny"":         ""☼"",
            ""night"":         ""☾"",
            ""windy"":         ""☴"",
            ""not_available"": ""�"",
            ""unknown"":       ""⚠""
          }
        }
      }
}
```

This was working before the upgrade. Seems to have the same issue using Python 2 and Python 3. Also fails with or without the icon configuration."
1772,Windows 10 Subsystem for Linux - render error,2017-05-15T22:23:09Z,2017-05-15T22:55:31Z,"c:font, s:invalid:error in environment, t:bug",,,"I installed the Windows Subsystem for Linux together with powerline.

![bashscreenshot](https://cloud.githubusercontent.com/assets/3937642/26081875/2a787732-39cd-11e7-937d-a7f5048d1790.png)

![vimscreenshot](https://cloud.githubusercontent.com/assets/3937642/26081960/9142c846-39cd-11e7-85bb-92349aef799c.png)

As you can see, I have question marks next to every box which was rendered... Do you have a solution for it or its a general problem?

Cheers"
1771,Replace awesome-client with a Python-native dbus interface.,2017-05-13T05:33:09Z,,"c:b:wm, t:enhancement",,,"Instead of spawning awesome-client every couple of seconds to update the
widget, use Python's own native dbus interface. Fewer system resources used by
avoiding the spawn as well as removing noise on the dbus caused by open+close.

I haven't updated the tests for this as I'm unsure just how to test. The current tests
replace `awesome-client` with its own version that logs the request but doesn't
connect to awesome. Problem is that by removing that layer(s), I haven't a clue
how to ""intercept"" or shim the dbus interface. I'm happy to take suggestions."
1770,Abstract away subscription to workspace event,2017-05-11T20:04:31Z,2017-05-11T20:04:42Z,"c:b:wm, t:bug",,,
1769,Fix i3 bar bindings,2017-05-11T18:09:42Z,2017-05-11T19:45:00Z,"c:b:wm, t:bug",,,"Specifically:

- Do not log exceptions to the same location data is output.
- Fix format, i3bar is no longer using “pseudo-JSON”, also not sure whether it 
  ever used format `[[right list], [left list]]`, but it definitely does not 
  now.
- i3bgbar branch is no longer available.
- Yet i3wm supports background color, just with the different key (`background` 
  vs `background_color`)."
1768,vim will stuck when edit a big file.,2017-05-09T11:21:51Z,2017-05-10T01:01:41Z,"c:b:vim, t:bug",,,"when I edit a big file, vim will stuck. when I delete powerline plugin, and edit the file again, it's ok.
My file have 169819 lines."
1767,Vim `<C-x>` triggers powerline mode change.,2017-05-08T16:21:59Z,2017-05-08T16:31:42Z,"c:b:vim, s:duplicate, t:bug",,,"### Steps to reproduce ###
1. Open vim (`$> vim`)
2. Initiate insert mode (push `i`)
3. Push `<C-x>` (`Ctrl+x`)

### Expected behavior ###
1. After opening, powerline shows colors related to normal mode
2. After pushing `i`, powerline switches to insert mode colors
3. After pushing `<C-x>`, powerline stays with insert mode colors

### Observed behavior ###
...
3. Powerline trips up, doesn't show the ""mode"" block, and goes back to normal mode colors


This causes flickering when using YouCompleteMe (and probably other Omnicomplete style plugins)."
1766,Updating to master results in error message,2017-05-08T07:37:24Z,2017-05-09T14:37:16Z,"c:b:tmux, s:invalid:error in environment, t:bug",,,"I'm on Arch wit tmux 2.4 installed and I just upgraded to master

Using powerline with just tmux I do get powerline as my statusline but the left and right side show an error message instead of the segments:

`finish_args() missing 1 required positional argument: 'args'`

This happens even if I use the default settings."
1765,add Terminus alias,2017-05-06T13:10:34Z,2017-05-06T15:21:54Z,"c:font, s:wontfix, t:enhancement",,,this allows using Terminus with PowerlineSymbols in xfce4-terminal and similar terminals
1764,Break #… sequences inside `#()` in tmux status options,2017-05-05T21:33:41Z,2017-05-06T18:44:37Z,"c:b:tmux, t:bug",,,Workarounds #1758.
1763,the internal_ip segment doesn't work in tmux,2017-05-01T07:18:31Z,2017-05-01T20:23:41Z,"c:b:tmux, t:bug",,,"Hi!
I just install the powerline and all the python packages needed(including netifaces), 
when I configure the powerline, all other segments work fine, but the internal_ip segment isn't displayed, by the way, the external_ip is working fine

Bowen"
1762,Use custom travis folds,2017-05-01T01:07:36Z,2017-05-01T03:19:54Z,"c:tests, t:enhancement",,,
1761,Refactor test scripts and reenable shell tests,2017-04-30T10:57:04Z,2017-05-01T00:17:55Z,"c:tests, t:bug",,,
1760,Fix tmux vterm tests,2017-04-29T23:46:57Z,2017-04-30T09:45:15Z,"c:b:tmux, c:tests, t:bug",,,First commits originate from #1507.
1759,shell bindings won't show special characters on NetBSD,2017-04-29T15:51:37Z,2017-04-30T07:38:30Z,"c:b:shell, t:bug",,,"```
$ echo $TERM
xterm-256color
$ locale
LANG=""en_US.UTF-8""
LC_CTYPE=""en_US.UTF-8""
LC_COLLATE=""C""
LC_TIME=""C""
LC_NUMERIC=""C""
LC_MONETARY=""C""
LC_MESSAGES=""en_US.UTF-8""
LC_ALL=""""
$ uname -a
NetBSD coruscant 7.1 NetBSD 7.1 (GENERIC.201703111743Z) amd64
```
While working on FreeBSD and of course Linux, the shell bindings won't show special characters (padlock, triangle) in the statusline on a NetBSD tty. The terminal accepts those characters perfectly and shows them happily when doing
```
$ grep text .local/lib/python2.7/site-packages/powerline/config_files/themes/powerline.json 
                                ""unicode_text"": true
                                ""CTRL_V_text"": ""↕{rows} ↔{vcols}"",
                                ""v_text_oneline"": ""↔{vcols}"",
                                ""v_text_multiline"": ""↕{rows}"",
                                ""V_text"": ""⇕{rows}""
                                ""text"": """"
                                ""text"": ""+""
```
The copy/paste comes from the actual terminal where *powerline* won't show the special characters.

This machine is accessed via SSH, just like the other machines where I can actually see the complete and shiny prompt, i.e. not a font issue.

I see this wrong behavior with both *bash* and *zsh*."
1758,Powerline affects tmux 2.4 CPU usage?,2017-04-27T12:21:40Z,2017-05-02T11:02:53Z,"c:b:tmux, t:bug",,,"Hello,

I recently updated to `tmux V 2.4` and soon started to notice the huge increase in tmux [CPU usage](https://github.com/tmux/tmux/issues/889). 

Today I set up to get in this and found out when I commented my tmux powerline sourcing line 
`
source ""/usr/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf""
`
tmux works normally (without eating CPU).

It's probably not helpful but I tried changing my powerline/theme configurations to 
`$ touch empty.json` and reflected that in `~/.config/powerline/config.json` lost theme as expected but tmux ran smoothly.


If I remove every line and keep just the barebones which don't display anything however CPU goes up again.

Like this :- 

```
{
	""segments"": {
		""right"": [
        ]
	}
}
```
Please help."
1757,Do not forget to collect mercurial servers,2017-04-24T14:46:24Z,2017-04-24T18:35:05Z,"c:VCS support, t:bug",,,"Current variant spawns way too many hg instances which are not collected until 
Vim exits."
1756,No such file or directory,2017-04-24T11:24:53Z,2017-04-24T11:26:51Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"I installed powerline but I got this error every time I open the terminal
```
-bash: /Library/Python/2.7/lib/python/site-packages/powerline/bindings/bash/powerline.sh: No such file or directory
```

How I can fix this problem?"
1755,Trailing whitespace segment enhancement for diff files,2017-04-21T03:24:09Z,,"c:b:vim, t:enhancement",,,"In diff files, the line starts with a space if that line has not changed between the two files. If that line was actually empty, that space counts as being at the end of the line too. For diffs, it would be nice if these could be ignored. Even better would be if trailing whitespace was only indicated on the added lines (starting with `+`); this could be an optional thing.

I would try to implement this but I don't know how to ask vim what the filetype setting is."
1754,Spotify segment don't work,2017-04-20T00:36:53Z,,"c:b:tmux, t:bug",,,"log:
`2017-04-19 21:27:08,988:DEBUG:tmux:watcher:Trying to use inotify watcher`
`2017-04-19 21:27:08,988:DEBUG:tmux:watcher:Trying to use inotify watcher`

powerline-lint:
```
Script started on Qua 19 Abr 2017 21:34:06 BRT

Error while checking theme (key /segments/right/list item 1/function)
found highlight groups list (player_fallback, player) with all groups not defined in some colorschemes
(Group names were taken from function documentation.)
  in ""/home/victor/.config/powerline/themes/tmux/default.json"", line 12, column 56:
     ... werline.segments.common.players.spotify_dbus"",
                                         ^

Error while checking theme (key /segments/right/list item 1/function)
found highlight group player_fallback not defined in the following colorschemes: default, solarized

Error while checking theme (key /segments/right/list item 1/function)
found highlight group player not defined in the following colorschemes: solarized

Error while checking theme (key /segments/right/list item 1/function)
found highlight groups list (player_play, player) with all groups not defined in some colorschemes
(Group names were taken from function documentation.)
  in ""/home/victor/.config/powerline/themes/tmux/default.json"", line 12, column 56:
     ... werline.segments.common.players.spotify_dbus"",
                                         ^

Error while checking theme (key /segments/right/list item 1/function)
found highlight group player_play not defined in the following colorschemes: default, solarized

Error while checking theme (key /segments/right/list item 1/function)
found highlight group player not defined in the following colorschemes: solarized

Error while checking theme (key /segments/right/list item 1/function)
found highlight groups list (player_pause, player) with all groups not defined in some colorschemes
(Group names were taken from function documentation.)
  in ""/home/victor/.config/powerline/themes/tmux/default.json"", line 12, column 56:
     ... werline.segments.common.players.spotify_dbus"",
                                         ^

Error while checking theme (key /segments/right/list item 1/function)
found highlight group player_pause not defined in the following colorschemes: default, solarized

Error while checking theme (key /segments/right/list item 1/function)
found highlight group player not defined in the following colorschemes: solarized

Error while checking theme (key /segments/right/list item 1/function)
found highlight groups list (player_stop, player) with all groups not defined in some colorschemes
(Group names were taken from function documentation.)
  in ""/home/victor/.config/powerline/themes/tmux/default.json"", line 12, column 56:
     ... werline.segments.common.players.spotify_dbus"",
                                         ^

Error while checking theme (key /segments/right/list item 1/function)
found highlight group player_stop not defined in the following colorschemes: default, solarized

Error while checking theme (key /segments/right/list item 1/function)
found highlight group player not defined in the following colorschemes: solarized

Script done on Qua 19 Abr 2017 21:34:08 BRT
```


my tmux theme config:
```
{
  ""segments"": {
    ""right"": [
      {
        ""function"": ""powerline.segments.common.players.spotify_dbus"",
        ""name"": ""player""
      },
      {
        ""function"": ""powerline.segments.common.net.hostname""
      }
    ]
  }
}
```"
1753,Is there a way someone could donate money to this project or the people maintaining it?,2017-04-18T06:44:34Z,2017-04-18T07:21:33Z,s:invalid,,,"Powerline is extremely useful to me. It drastically improves my terminal workflow and environment, and as I can see from the number of stars and number of open and closed issues, it does for many others.

Is there a way someone could donate some money to this project or the maintainer(s) (especially @ZyX-I) to show thanks and to keep it going?

(Edit: if there isn't, thoughts about adding a link or donate button to the README?)"
1752,byobu,2017-04-15T09:55:24Z,2017-05-20T22:22:28Z,"c:b:tmux, s:invalid:unsupported software, t:bug",,,"vanilla tmux:
![vanilla tmux](https://cloud.githubusercontent.com/assets/4723091/25062733/d7917086-2186-11e7-8432-6bc5e4951b33.png)
byobu tmux:
![byobu tmux](https://cloud.githubusercontent.com/assets/4723091/25062734/e6740c44-2186-11e7-8623-250ef497eade.png)"
1751,Sway support,2017-04-15T08:08:10Z,,"c:b:wm, t:enhancement",,,[Sway](http://swaywm.org/) is an i3 like tiling window manager for Wayland. Powerline support for sway was great :smile:
1750,username and hostname with ssh,2017-04-11T05:04:53Z,,"c:common segments, t:enhancement",,,"Hi,
I started goofing with powerline functions to get my own ""widgets"" in my local tmux sessions.

My main interest was to get a widget to show me the current user, the current host and the OS that a shell in tmux is currently showing.

I stumbeled upon https://github.com/powerline/powerline/issues/858 despite the thread being quiet old there does not seem to be a possibility to get what I wanted.
powerline.segments.common.net.hostname seems to be limited in helping me either.

So I approached it differently and wanted to educatedly ""guess"" the relevant portions.

QUESTION:
This issue is basically a question: Is this stupid? Can it be done more elegant?
Once you get started its hard to stop. I got a way to carve out the directory being shown locally inside a tty pane and made a git widget as well, next idea is to show pyenv info if relevant.

http://imgur.com/a/jMbqx

Disclaimer: This is not optimised in any way.

My approach:
- Get the tty of the currently selected pane
- Get a list of processes that are running inside this tty:
- Having the process list, I simply check for the existence of ""ssh "" in it. Thats due to my usage pattern: When I use ssh, its either rsync, simple ssh shell on remote machines or tunnels. In either case I have the ssh process in the foreground.
- If it is an ssh connection, I try to carve out the username either with ""ssh -G""or  check the process list for the cli parameters (-l or user@server).




```
# -*- coding: utf-8 -*-

from powerline.lib import add_divider_highlight_group
import subprocess

# icons from custom font
osmap = {
    'mac':''
    , 'debian':''
    , 'ubuntu':''
    , 'arch':''
    , 'freebsd':''
    , 'coreos':''
    , 'fedora':''
    , 'suse':''
    , 'redhat':''
}

def shell(cmd):
    return subprocess.check_output(cmd, shell=True)[:-1]

def current_tty():
    return shell(""tmux display -p '#{pane_tty}'"")[8:]

def is_ssh(process_list):
    return ""ssh "" in process_list

def get_local_hostname():
    return shell(""hostname"").split(""."")[0]

def get_ssh_host(process_list):
    possible_hosts = process_list.split(""ssh "")[1].split('\n')[0].split("" "")
    while possible_hosts[0][0] == '-':
        possible_hosts = possible_hosts[2:]
    host = possible_hosts[0]
    return host

def get_icon_for_host(hostname):
    local_host = get_local_hostname()
    if local_host == hostname:
	return osmap['mac'] + "" "" # TODO add magic
    identityfileentry = shell(""ssh -G "" + hostname + "" | grep identityfile "")
    split = identityfileentry.split(""__"")
    if not len(split) == 2:
        return None
    else:
        osname = split[1]
        if osname in osmap:
            return osmap[osname] + "" ""
    return None

def get_process_list(tty):
    return shell(""ps -t "" + tty + "" -o command="")

def get_foreground_user_of_tty(tty):
    return shell(""ps auxh | grep "" + tty + "" | grep -v 'grep' | awk '{print $1}' | head -n 1"")

def get_hostname():
    tty = current_tty()
    process_list = get_process_list(tty)
    if is_ssh(process_list):
        ssh_host = get_ssh_host(process_list)
        if ""@"" in ssh_host:
            return ssh_host.split(""@"")[1]
        else:
            return ssh_host
    else:
        return get_local_hostname()

def get_username():
    tty = current_tty()
    process_list = get_process_list(tty)
    if is_ssh(process_list):
        # need to check if we logged with lower rights than we could:
        split_ssh_command = process_list.split(""ssh "")[1].split('\n')[0].split("" "")
        while len(split_ssh_command) > 2 and not split_ssh_command[0] == ""-l"":
            split_ssh_command = split_ssh_command[2:]
        if split_ssh_command[0] == ""-l"":
            return split_ssh_command[1]
        else:
            host = get_ssh_host(process_list)
            return shell(""ssh -G "" + host + "" | grep 'user '"").split("" "")[1]
    else:
        return get_foreground_user_of_tty(tty)

def get_os_icon():
    hostname = get_hostname()
    return get_icon_for_host(hostname)


@add_divider_highlight_group('background:divider')
def username(pl):
    return get_username()

@add_divider_highlight_group('background:divider')
def hostname(pl):
   return get_hostname()

@add_divider_highlight_group('background:divider')
def os_icon(pl):
   return get_os_icon()

```

"
1749,powerline renders endlessly. ,2017-04-09T15:16:58Z,2017-04-09T15:20:17Z,"c:b:tmux, s:duplicate, t:bug",,,"It goes once per second until it floods the screen. 
![2017-04-09-111051_1920x1080_scrot](https://cloud.githubusercontent.com/assets/299944/24838433/b782226a-1d15-11e7-9ad5-7ebc2af6ca11.png)
"
1748,Shell arrow/branch icons issue on OS X 10.12.4,2017-04-06T16:27:36Z,2017-04-06T17:04:19Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"After updating to OS X 10.12.4, the shell arrow/branch icons were replaced with 'BR' and '|'.

I removed ~/.config/powerline with no effect.  Here is the output of powerline-lint and locale:

```
 clamey  ~  ls ~/.config/powerline
ls: /Users/clamey/.config/powerline: No such file or directory
 clamey  ~  powerline-lint -p ~/.config/powerline -p /usr/local/lib/python2.7/site-packages/powerline/config_files
 clamey  ~  locale
LANG=""en_US.UTF-8""
LC_COLLATE=""en_US.UTF-8""
LC_CTYPE=""en_US.UTF-8""
LC_MESSAGES=""en_US.UTF-8""
LC_MONETARY=""en_US.UTF-8""
LC_NUMERIC=""en_US.UTF-8""
LC_TIME=""en_US.UTF-8""
LC_ALL=
```

Happens on iTerm 3.0.15 and Terminal 2.7.2.

Screenshot of Terminal

![powerline-issue](https://cloud.githubusercontent.com/assets/1063046/24765039/960dac3a-1ab3-11e7-9f5b-a9702b00b4b1.png)

Iterm settings (Non-ASCII same as ASCII set)

![iterm-settings](https://cloud.githubusercontent.com/assets/1063046/24765116/da3e9194-1ab3-11e7-9aea-e1f0f56e7e14.png)"
1747,Hard divider color isn't set correctly?,2017-04-01T21:28:41Z,2017-04-02T02:02:08Z,"c:b:shell, e:macos, s:invalid:error in environment, t:bug",,,"
<img width=""298"" alt=""screen shot 2017-04-01 at 5 21 22 pm"" src=""https://cloud.githubusercontent.com/assets/5854101/24582536/d9532e46-16ff-11e7-99fb-5ab0bd6ed52f.png"">

AFAICT, per the docs, hard divider color should be set by the segment to the left. 

- I've upgraded to the newest version of powerline:
```
$  pip freeze | ag powerline-status
powerline-status==2.5.2
```
- My colorscheme is:
```json
{
	""name"": ""Default color scheme for shell prompts"",
	""groups"": {
		""hostname"":         { ""fg"": ""brightyellow"", ""bg"": ""mediumorange"", ""attrs"": [] },
		""environment"":      { ""fg"": ""white"", ""bg"": ""darkestgreen"", ""attrs"": [] },
		""mode"":             { ""fg"": ""darkestgreen"", ""bg"": ""brightgreen"", ""attrs"": [""bold""] },
		""attached_clients"": { ""fg"": ""white"", ""bg"": ""darkestgreen"", ""attrs"": [] },
		""critical:failure"": { ""fg"": ""white"", ""bg"": ""darkestgreen"", ""attrs"": [] },
		""critical:success"": { ""fg"": ""white"", ""bg"": ""darkestgreen"", ""attrs"": [] },
        ""virtualenv"":       { ""fg"": ""green"", ""bg"": ""brightorange"", ""attrs"": [] },
        ""cwd"":              { ""fg"": ""gray70"", ""bg"": ""gray70"", ""attrs"": [] },
        ""cwd:divider"":      { ""fg"": ""gray70"", ""bg"": ""gray70"", ""attrs"": [] },
        ""cwd:current_folder"":{ ""fg"": ""gray70"", ""bg"": ""gray70"", ""attrs"": [] },
        ""branch"":           { ""fg"": ""white"", ""bg"": ""gray10"", ""attrs"": [] },
        ""branch_dirty"":     { ""fg"": ""white"", ""bg"": ""gray10"", ""attrs"": [] },
        ""branch_clean"":     { ""fg"": ""white"", ""bg"": ""gray10"", ""attrs"": [] },
        ""branch:divider"":   { ""fg"": ""gray10"", ""bg"": ""gray10"", ""attrs"": [] },
        ""jobnum"":           { ""fg"": ""white"", ""bg"": ""darkestgreen"", ""attrs"": [] },
        ""information:priority"":	{ ""fg"": ""white"", ""bg"": ""darkestgreen"", ""attrs"": [] }
	},
	""mode_translations"": {
		""vicmd"": {
			""groups"": {
				""mode"": {""fg"": ""darkestcyan"", ""bg"": ""white"", ""attrs"": [""bold""]}
			}
		}
	}
}
```
I've tried adding, eg, a `virtualenv:divider` line, but that doesn't change anything. 
The output from `powerline-lint` all [seems unrelated](https://gist.github.com/liavkoren/f47f77a7e828a2b32868e1fc7f699a48) (and prior to upgrading, I cleared all the powerline-lint errors, and that didn't make a difference, either.)

I'm pretty sure I'm just doing something wrong in the config, rather than this being a bug, but I have no idea what to do next, and I've even looked through the source code quickly. 

Thanks!"
1746,Handle C file status,2017-04-01T12:33:48Z,2017-04-24T14:22:01Z,"c:VCS support, t:bug",,,
1745,ubuntu 16.04  a red bar on the left of the status line,2017-03-27T08:41:03Z,2017-03-27T09:13:06Z,"c:b:vim, s:invalid, t:bug",,,"Hi,I'm using terminal Vim in ubuntu 16.04 ,After I have installed  this plugin through Vundle . Every times i open vim i find a red block on the most left side of the status line. it looks werid . would you be so kind to help me out with this? Thanks a lot .
![image](https://cloud.githubusercontent.com/assets/8174987/24347787/1eaaae94-130c-11e7-9a13-438f7317a9b2.png)
"
1744,powerline 2.5.2 powerline-setup throws errors on Mac,2017-03-23T11:05:11Z,2017-03-23T18:21:09Z,"c:b:shell, e:macos, s:invalid, t:bug",,,"This is on *powerline 2.5.2* and OSX 10.12.3 and using fish 2.5.0

```
pip install --user git+git://github.com/Lokaltog/powerline  --upgrade                          3247ms  Thu Mar 23 07:01:42 2017
Collecting git+git://github.com/Lokaltog/powerline
  Cloning git://github.com/Lokaltog/powerline to /private/var/folders/_6/2jfng6gs0r71z_x3q7hw3mp80000gn/T/pip-R6PuAr-build
Installing collected packages: powerline-status
  Found existing installation: powerline-status 2.5.2.dev9999+git.5a7c3e02ce5b6d4cb89a296227c37c026ba4bd95
    Uninstalling powerline-status-2.5.2.dev9999+git.5a7c3e02ce5b6d4cb89a296227c37c026ba4bd95:
      Successfully uninstalled powerline-status-2.5.2.dev9999+git.5a7c3e02ce5b6d4cb89a296227c37c026ba4bd95
  Running setup.py install for powerline-status ... done
Successfully installed powerline-status-2.5.2.dev9999+git.5a7c3e02ce5b6d4cb89a296227c37c026ba4bd95
~ powerline-setup                                                                                2973ms  Thu Mar 23 07:01:50 2017
function: Illegal function name '--on-variable'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 35):             function --on-variable fish_key_bindings _powerline_set_default_mode
                        if test x$fish_key_bindings != xfish_vi_key_bindings
                ^
in function 'powerline-setup'
        called on standard input

function: Illegal function name '--on-variable'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 42):             function --on-variable POWERLINE_COMMAND _powerline_update
                        set -l addargs ""--last-exit-code=\$status""
                ^
in function 'powerline-setup'
        called on standard input

fish: Unknown command '_powerline_set_default_mode'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 78):             _powerline_set_default_mode
                ^
in function 'powerline-setup'
        called on standard input

fish: Unknown command '_powerline_update'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 79):             _powerline_update
                ^
in function 'powerline-setup'
        called on standard input

function: Illegal function name '--on-variable'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 96):                             function --on-variable PWD _powerline_tmux_set_pwd
                                        _powerline_tmux_setenv PWD ""$PWD""
                                ^
in function 'powerline-setup'
        called on standard input

function: Illegal function name '--on-signal'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 99):                             function --on-signal WINCH _powerline_tmux_set_columns
                                        _powerline_tmux_setenv COLUMNS (_powerline_columns)
                                ^
in function 'powerline-setup'
        called on standard input

fish: Unknown command '_powerline_tmux_set_columns'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 102):                            _powerline_tmux_set_columns
                                ^
in function 'powerline-setup'
        called on standard input

fish: Unknown command '_powerline_tmux_set_pwd'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 103):                            _powerline_tmux_set_pwd
                                ^
in function 'powerline-setup'
        called on standard input

~
```"
1743,powerline-setup throws errors on Mac,2017-03-23T01:56:47Z,2017-03-23T04:17:10Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"This is on 10.12.3 and using fish 2.5.0

```
ction: Illegal function name '--on-variable'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 35):           function --on-variable fish_key_bindings _powerline_set_default_mode
                        if test x$fish_key_bindings != xfish_vi_key_bindings
                                                                                                                                                ^
in function 'powerline-setup'
        called on standard input

function: Illegal function name '--on-variable'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 42):           function --on-variable POWERLINE_COMMAND _powerline_update
                        set -l addargs ""--last-exit-code=\$status""
                                                                                                                                                ^
in function 'powerline-setup'
        called on standard input

fish: Unknown command '_powerline_set_default_mode'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 78):           _powerline_set_default_mode
                                                                                                                                                ^
in function 'powerline-setup'
        called on standard input

fish: Unknown command '_powerline_update'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 79):           _powerline_update
                                                                                                                                                ^
in function 'powerline-setup'
        called on standard input

function: Illegal function name '--on-variable'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 96):                           function --on-variable PWD _powerline_tmux_set_pwd
                                        _powerline_tmux_setenv PWD ""$PWD""
                                                                                                                                                                ^
in function 'powerline-setup'
        called on standard input

function: Illegal function name '--on-signal'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 99):                           function --on-signal WINCH _powerline_tmux_set_columns
                                        _powerline_tmux_setenv COLUMNS (_powerline_columns)
                                                                                                                                                                ^
in function 'powerline-setup'
        called on standard input

fish: Unknown command '_powerline_tmux_set_columns'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 102):                          _powerline_tmux_set_columns
                                                                                                                                                                ^
in function 'powerline-setup'
        called on standard input

fish: Unknown command '_powerline_tmux_set_pwd'
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 103):                          _powerline_tmux_set_pwd
                                                                                                                                                                ^
in function 'powerline-setup'
        called on standard input
```"
1742,Incorrect glyphicons on Ubuntu 16.04,2017-03-21T21:09:05Z,2017-03-21T21:21:31Z,"c:font, s:wontfix, t:bug",,,"I installed powerline and fonts using fontconfig method, but glyphicons are not correct:
- gnome terminal (a little too height arrows)
![gnome](http://i.imgur.com/M4AGmjP.png)
- guake (a little too height arrows)
![guake](http://i.imgur.com/2JFSLfu.png)
- xterm (no glyphicons)
![xterm](http://i.imgur.com/U8CoHZG.png)

I also tried installing patched fonts, but nothing helped. I can provide logs, system info or something else."
1741,Fix typo in package i3ipc in requirements list,2017-03-18T19:30:33Z,2017-03-18T22:07:40Z,"c:documentation, c:installation, t:bug",,,
1740,right prompts for bash,2017-03-14T16:19:21Z,2017-03-14T20:01:07Z,"c:b:shell, s:wontfix, t:enhancement",,,"Provide a right prompt for bash so that with the default config, so
that those right segments don't fall into oblivion.

Given the way they are output, there is no adjustment of the current
line for window width cahnhes, of course, but all subsequent lines will
be adjusted to the new prompt."
1739,Complains about missing powerline.conf,2017-03-12T10:50:01Z,2017-03-12T11:43:42Z,"c:b:tmux, c:installation, s:invalid:error in environment, t:bug",,,"Each time I SSH into my server, I am seeing this one error

![selection_001](https://cloud.githubusercontent.com/assets/177641/23831052/ee932266-077d-11e7-8371-a8df4a06ea06.png)

And then I am just seeing this plain theme where powerline and sorin theme are missing
![selection_003](https://cloud.githubusercontent.com/assets/177641/23831059/0fbe0ae6-077e-11e7-8258-69e18f51366a.png)

Any clues what this could be?
"
1738,fix incorrect segment type `segments_list` - should be `segment_list`,2017-03-11T14:24:12Z,2017-03-11T14:26:23Z,"c:documentation, t:bug",,,"`segments_list` type throws an Error:
> Unknown segment type: segments_list

Correct type is `segment_list`.
This fixes the docs."
1737,Git clone/pull/push causing powerline failure,2017-03-11T03:03:46Z,2017-03-11T09:16:17Z,"c:b:shell, e:windows, s:invalid",,,"Every time I run the command `git clone`, `git pull`, or `git push` my terminal's output get's turned into what look like the underlying character codes.

![powershell_powerline_git_failure](https://cloud.githubusercontent.com/assets/7308850/23819998/a2abc0c4-05d4-11e7-90ce-19b53fb9a5d2.PNG)

I'm using HyperTerm but have verified that this occurs even in regular PowerShell.

![powershell_powerline_git_failure_ps](https://cloud.githubusercontent.com/assets/7308850/23820014/fc6b9b16-05d4-11e7-851a-8a9ff6c5c121.PNG)
"
1736,.,2017-03-08T23:01:04Z,2017-03-08T23:22:36Z,s:invalid:no information,,,
1735,Assume latest tmux version if -V returns 'master',2017-03-07T21:50:16Z,2017-03-18T15:45:50Z,"c:b:tmux, t:bug",,,"See #1727.

It seems that [tmux/tmux](https://github.com/tmux/tmux/branches) is only developed on a single `master` branch, so having that comparison hardcoded is probably appropriate, but hardcoding the latest tmux version to be bumped every release seems less-than-ideal to me, open to suggestions on that.

Since tmux releases may prompt changes to the tmux bindings anyhow though, it  may be 'good enough' but I suspect something better should be done in `powerline/bindings/config.py` to snap to the latest version based on the available tmux.conf's in the binding directory."
1734,`powerline-config tmux setup` fails when using tmux compiled from github master since tmux commit c034670,2017-03-06T23:04:54Z,2017-05-20T21:57:10Z,"c:b:tmux, s:duplicate, t:bug",ValueError,"ValueError: need more than 1 value to unpack","In commit c034670 to the tmux repo, `powerline-config tmux setup` has returned the following error:

```
Traceback (most recent call last):
  File ""/usr/local/bin/powerline-config"", line 22, in <module>
    args.function(pl, args)
  File ""/usr/local/lib/python2.7/dist-packages/powerline/commands/config.py"", line 15, in __call__
    self.function(*args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/powerline/bindings/config.py"", line 181, in tmux_setup
    tmux_version = get_tmux_version(pl)
  File ""/usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/__init__.py"", line 79, in get_tmux_version
    major, minor = version_string.split('.')
ValueError: need more than 1 value to unpack
```

This is due to tmux author @nicm removing the version number from `configure.ac` so that `tmux -V` now returns `tmux master` instead of `tmux 2.4`.

> programs should not rely on the format of tmux -V

For reference: 

[https://github.com/tmux/tmux/commit/c0346701dfa2a4aa4c2ea6f05157406bcfb7a50b](https://github.com/tmux/tmux/commit/c0346701dfa2a4aa4c2ea6f05157406bcfb7a50b)

[https://github.com/tmux/tmux/issues/810](https://github.com/tmux/tmux/issues/810)"
1733,Change output font color/boldness,2017-03-06T01:10:30Z,2017-03-23T21:30:32Z,"s:invalid, s:invalid:no information",,,"How do I change the font from the output? I like bold font with a color, not plain white. "
1732,Itunes players/ music player change?,2017-03-03T23:56:14Z,2017-03-06T23:56:09Z,"c:players, t:enhancement",,,"From the old version of the powerline, I have the ITunes player segment fixed. I have also change the way how the player segment looks, now you can see how far down the music has been played."
1731,MacOS Sierra Iterm2 tmux -2 new-session,2017-03-02T20:41:48Z,2017-03-03T23:57:01Z,"c:b:tmux, s:invalid:error in environment, t:bug",,,"After upgrade to latest MacOS version I've got issue, when during remote connection (MacOS client -> Linux server) didn't started tmux with powerline. Just usual tmux (green bottom line). With Linux clients no such problems. Connection to already running tmux with powerline is OK.
During connection, running bash script:
```bash
TMUX=""/usr/bin/tmux""
POWERLINE_CONF=""$HOME/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf""

$TMUX -2 attach || \
$TMUX -2 new-session -s ""$(hostname -s)"" -n ""$(hostname -s)"" \; source ""$POWERLINE_CONF""
```
Any advice and suggestions will be greatly appreciated

Update:
https://powerline.readthedocs.io/en/master/troubleshooting.html#in-tmux-there-is-a-green-bar-in-place-of-powerline
Done already and it worked with previous MacOS version"
1730, remanent character in statusbar using power lin with tmux,2017-03-02T15:51:58Z,,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"I have a remanent character on the left part of the tux-powerlined status bar see screenshot:
![screenshot 2017-03-02 09 50 28](https://cloud.githubusercontent.com/assets/15145274/23514711/bfedb1d6-ff2d-11e6-9ae9-b6725c41034d.png)
![screenshot 2017-03-02 09 49 05](https://cloud.githubusercontent.com/assets/15145274/23514712/c0004620-ff2d-11e6-8256-b2daf50da92d.png)
(the blur part is just an attempt to hide my ip)

this character can disappear when playing with the windows size...
"
1729,Prevent divide by zero battery capacity,2017-02-25T21:50:52Z,2017-02-25T22:27:45Z,"c:common segments, t:bug",,,If your battery is broken this segment crashes with a ZeroDivisionError
1728,Help， Mac os powerline  like square why  ?,2017-02-23T09:24:48Z,2017-02-23T16:26:56Z,"c:b:shell, e:macos, s:invalid:error in environment, t:bug",,,"As below a picture , become square :
![image](https://cloud.githubusercontent.com/assets/1111353/23252759/f6127db4-f9ec-11e6-9f3a-46c3e018dd4b.png)
"
1727,tmux master branch version issue,2017-02-22T17:18:22Z,2017-03-18T15:45:52Z,"c:b:tmux, t:bug",,,"Hello,
when compiling the tmux from source (master branch). tmux -V shows ""master"" as the version number. This causes ""source .powerline/powerline/bindings/tmux/powerline.conf"" to fail. If I checkout the latest tag of tmux so that tmux -V shows a version number e.g. 2.3 - ""source .powerline/powerline/bindings/tmux/powerline.conf"" works fine."
1726,Powerline daemon AWOL.,2017-02-21T09:52:27Z,2017-02-21T20:10:04Z,s:invalid,,,"Hi Folks.

I've had all sorts of woes getting power line installed on my Mac OS X 10.11.  Using the `pip install powerline-status` I found that the scripts and configs weren't installed, and I had to go grab them from github and install them myself.  Now i've done that, Powerline is working, but it's pretty slow (in iTerm).  I suspect it's because it's not using `powerline-daemon`. It doesn't seem to exist on my system, so I assume it was another thing that wasn't included in the pip install.  Problem is that I don't know where to get it from, and even if I did, i'm not sure how to run it.  Is it enough to just call `powerline-daemon -q` from `.bash_profile`? "
1725,How to set colour scheme for one particular occurrence of a segment?,2017-02-20T23:47:57Z,2017-02-20T23:56:47Z,"c:configuration, s:invalid",,,"I have something like this in my shell config file:

```JSON
{
	""segments"": {
		""above"": [
			{
				""left"": [
					{
						""function"": ""powerline.segments.shell.mode""
					},
					{
						""function"": ""powerline.segments.common.net.hostname"",
						""priority"": 10
					},
					{
						""function"": ""powerline.segments.common.env.user"",
						""priority"": 30
					},
					{
						""function"": ""powerline.segments.common.env.virtualenv"",
						""priority"": 50
					},
					{
						""function"": ""powerline.segments.shell.cwd"",
						""priority"": 10,
						""args"": {
							""use_path_separator"": true
						}
					},
					{
						""function"": ""powerline.segments.shell.jobnum"",
						""priority"": 20
					}
				]
			}
		],
		""left"": [
			{
				""function"": ""powerline.segments.shell.mode""
			},
			{
				""function"": ""powerline.segments.common.time.date"",
				""name"": ""fake_newline"",
				""draw_hard_divider"": false,
				""args"": {
					""format"": ""$ ""
				}
			}
		],
		""right"": [
			{
				""function"": ""powerline.segments.shell.last_pipe_status"",
				""priority"": 10
			},
			{
				""function"": ""powerline.segments.common.vcs.stash"",
				""priority"": 50
			},
			{
				""function"": ""powerline.segments.common.vcs.branch"",
				""priority"": 40
			},
			{
				""function"": ""powerline.segments.common.time.date""
			},
			{
				""function"": ""powerline.segments.common.time.date"",
				""args"": {
					""format"": ""%H:%M:%S %A"",
					""istime"": true
				}
			}
		]
	}
}
```

I want to set different colours for only the 1st occurrence of `powerline.segments.common.time.date`.
How can I do this?
"
1724,I cannot change the segment of powerline for tmux,2017-02-18T10:41:50Z,2017-02-18T13:58:24Z,"c:b:tmux, s:invalid, t:bug",,,"#1724

I cannot change the segments of powerline for tmux. I cannot change the segments even editing the original source.  

please refer  
  
[bindings/tmux/powerline.conf](https://github.com/wsbky/setting-files/blob/master/powerline/bindings/tmux/powerline.conf)  
[config_files/config.json](https://github.com/wsbky/setting-files/blob/master/powerline/config_files/config.json)  
[config_files/themes/tmux/custom.json](https://github.com/wsbky/setting-files/blob/master/powerline/config_files/themes/tmux/custom.json)"
1723,Temporary disable tmux and shell tests so that do not fail CI,2017-02-14T08:04:08Z,2017-02-14T09:16:06Z,"c:tests, t:bug",,,
1722,Fix #1719,2017-02-13T23:58:41Z,2017-02-14T08:00:41Z,"c:b:vim, c:configuration, t:bug",,,"We add some default colorings based on the previous colorings to avoid changing statusline colors when switching into completion mode.

Sorry about the spam. I should have made the changes from develop instead of master."
1721,Fix #1719,2017-02-13T23:45:09Z,2017-02-13T23:54:12Z,"c:b:vim, c:configuration, t:bug",,,"We add some default colorings based on the previous colorings to avoid changing statusline colors when switching into completion mode.

If anyone could tell me how to delete the release commits that would be pretty great."
1720,Make length of `output_padding` in renderer controllable,2017-02-13T22:53:14Z,2017-02-19T12:00:55Z,"c:configuration, c:core, t:enhancement",,,"Defaults to previous behaviour (length 1).

I'm not sure if anyone else would be interested in this change, but the compulsory padding was bugging me so here it is."
1719,Statusline toggles color when vim enters ^X mode,2017-02-13T22:12:58Z,2017-02-14T08:00:44Z,"c:b:vim, c:configuration, t:bug",,,"This is particularly annoying when YCM auto trigger is on, which calls ^X^O^P after ever keystroke. Turning auto trigger off is not exactly an option because the semantic triggers are incredibly useful.

Related vim modes are `ic`, `ix`, 'Rc` and `Rx`."
1718,Any way to show OPERATOR in Vim statusline when in operator pending mode?,2017-02-09T19:17:48Z,2017-02-09T19:23:21Z,"c:b:vim, s:invalid:foreign bug, t:enhancement",,,Is it possible?
1717,Fish bindings: replace eval with source,2017-02-06T14:09:41Z,2017-04-01T12:28:11Z,"c:b:shell, t:bug",,,"For some reason, fish 2.5.0 freaks out under certain circumstances if
your `config.fish` calls `eval` at any point. For equally mysterious
reasons, replacing `eval` with `source` makes things work again.

See fish-shell/fish-shell#3809 for more details."
1716,Support more vim modes,2017-02-06T13:47:10Z,2017-02-13T17:33:03Z,"c:b:vim, t:bug",,,Fixes #1715
1715,KeyError when typing in insert mode (Vim 8.0),2017-02-06T13:14:12Z,2017-02-13T17:33:03Z,"c:b:vim, t:bug",KeyError,"KeyError: u'ic'","I've recently upgraded my Vim. `vim --version` displays this:
```
VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Feb  3 2017 19:09:12)
MacOS X (unix) version
Included patches: 1-297
Compiled by Homebrew
...
```

When I edit a file where YouCompleteMe is enabled and start typing in insert mode, I get the following error from Powerline:

```
2017-02-06 13:10:51,654:ERROR:vim:mode:Exception while computing segment: u'ic'
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/segment.py"", line 173, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/segment.py"", line 412, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/segments/vim/__init__.py"", line 101, in mode
    return vim_modes[mode]
KeyError: u'ic'
```

it seems like Vim is in a mode which powerline doesn't recognise? If anyone has any advice I would be really appreciative!"
1714,fish shell binding is broken,2017-02-05T01:39:43Z,2017-02-05T01:51:13Z,"c:b:shell, s:duplicate, t:bug",,,"I am using powerline together with fish shell, and after updating to the newest fish shell (2.5.0) I have encountered following problem: fish reports that some functions are not properly declared:

```
function: Illegal function name '--on-variable'
~/.local/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 35):            function --on-variable fish_key_bindings _powerline_set_default_mode
                        if test x$fish_key_bindings != xfish_vi_key_bindings
                                                                                                        ^
in function “powerline-setup”
        called on line 6 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
        called during startup

function: Illegal function name '--on-variable'
~/.local/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 42):            function --on-variable POWERLINE_COMMAND _powerline_update
                        set -l addargs ""--last-exit-code=\$status""
                                                                                                        ^
in function “powerline-setup”
        called on line 6 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
        called during startup

~/.local/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 78):            _powerline_set_default_mode
                                                                                                        ^                                            
in function “powerline-setup”                                                                                                                        
        called on line 6 of file ~/.config/fish/config.fish                                                                                          
                                                                                                                                                     
from sourcing file ~/.config/fish/config.fish                                                                                                        
        called during startup                                                                                                                        
                                                                                                                                                     
~/.local/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 79):            _powerline_update                            
                                                                                                        ^                                            
in function “powerline-setup”                                                                                                                        
        called on line 6 of file ~/.config/fish/config.fish                                                                                          
                                                                                                                                                     
from sourcing file ~/.config/fish/config.fish                                                                                                        
        called during startup
```

The problem is that some functions use bad syntax and function name is not the first argument right after the function ('--on-variable' or '--on-signal' are being used instead).

This has been already fixed in the powerline repository (https://github.com/powerline/powerline/commit/21ea62db56eaec619374e83e28458a86303d58de#diff-62e7668802d31b110fd9f7ac55608d9a) but a new version of powerline has not been created since then (mid of December 2016). 

It was all fine up until new version of fish (2.5.0) has been released. Now this is a serious problem, as powerline will not work for those who have updated their fish to the newest version. Latest version of fish shell behaves a bit differently than older versions and just throws an error if function name is not the first argument after function keyword.

I am using:
fish shell 2.5.0
powerline 2.5"
1713,Vim : mode update,2017-02-04T21:50:14Z,2017-02-04T22:46:30Z,"c:b:vim, s:wontfix, t:enhancement",,,"Mode remains set to ""Normal"" when typing r to replace one char (should be set to ""Replace"", I think ?)
"
1712,Powerline seems to be broken in latest version of Fish (2.5.0),2017-02-03T16:06:20Z,2017-02-03T20:48:33Z,"c:b:shell, s:duplicate, t:bug",,,"After updating to Fish Shell 2.5.0, I get the following error on startup:
```
function: Illegal function name '--on-variable'
~/Library/Python/2.7/lib/python/site-packages/powerline/bindings/fish/powerline-setup.fish (line 35): 		function --on-variable fish_key_bindings _powerline_set_default_mode
			if test x$fish_key_bindings != xfish_vi_key_bindings
                                                                                                      		^
in function 'powerline-setup'
	called on line 13 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
	called during startup

function: Illegal function name '--on-variable'
~/Library/Python/2.7/lib/python/site-packages/powerline/bindings/fish/powerline-setup.fish (line 42): 		function --on-variable POWERLINE_COMMAND _powerline_update
			set -l addargs ""--last-exit-code=\$status""
                                                                                                      		^
in function 'powerline-setup'
	called on line 13 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
	called during startup

~/Library/Python/2.7/lib/python/site-packages/powerline/bindings/fish/powerline-setup.fish (line 78): 		_powerline_set_default_mode
                                                                                                      		^
in function 'powerline-setup'
	called on line 13 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
	called during startup

~/Library/Python/2.7/lib/python/site-packages/powerline/bindings/fish/powerline-setup.fish (line 79): 		_powerline_update
                                                                                                      		^
in function 'powerline-setup'
	called on line 13 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
	called during startup

```"
1711,invalid syntax while installing from pip3,2017-02-01T21:51:16Z,2017-02-01T22:11:14Z,"s:invalid:foreign bug, t:bug",,,"Hello, I'm facing error while trying to install it with pip3

    Collecting powerline
      Downloading powerline-0.2.4.zip (79kB)
        100% |████████████████████████████████| 81kB 50kB/s
        Complete output from command python setup.py egg_info:
        Traceback (most recent call last):
          File ""<string>"", line 1, in <module>
          File ""/tmp/pip-build-ieu0zabf/powerline/setup.py"", line 27
            zip_safe = False,
            ^
        SyntaxError: keyword argument repeated

        ----------------------------------------
    Command ""python setup.py egg_info"" failed with error code 1 in /tmp/pip-build-ieu0zabf/powerline/"
1710,powerline-lint doesn't allow comments in config files,2017-01-30T23:33:41Z,,"c:lint, t:enhancement",,,"I use comments in my config files to remind me of things or add mode-lines, but `powerline-lint` currently marks them as unknown keys. I propose adding something like a comment marker to allow for addings comments to the JSON formatted configs.

```javascript
{
  ""# this is a comment""
}
```"
1709,Powerline doesn't work with IPython 5.2.0 (and Python 3.6.0),2017-01-30T10:30:12Z,2017-02-05T10:44:21Z,"c:b:ipython, t:bug",AttributeError,"AttributeError: 'TerminalInteractiveShell' object has no attribute '_make_style_from_name'","Hey there folks, I'm afraid that Powerline is no longer happy with the very latest version of IPython

```
 fots  ~  ipython
Python 3.6.0 (default, Dec 24 2016, 00:01:50) 
Type ""copyright"", ""credits"" or ""license"" for more information.

IPython 5.2.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.
[TerminalIPythonApp] WARNING | Error in loading extension: powerline.bindings.ipython.post_0_11
Check your config files in /Users/fots/.ipython/profile_default
Traceback (most recent call last):
  File ""/usr/local/lib/python3.6/site-packages/IPython/core/shellapp.py"", line 246, in init_extensions
    self.shell.extension_manager.load_extension(ext)
  File ""/usr/local/lib/python3.6/site-packages/IPython/core/extensions.py"", line 85, in load_extension
    if self._call_load_ipython_extension(mod):
  File ""/usr/local/lib/python3.6/site-packages/IPython/core/extensions.py"", line 132, in _call_load_ipython_extension
    mod.load_ipython_extension(self.shell)
  File ""/usr/local/lib/python3.6/site-packages/powerline/bindings/ipython/post_0_11.py"", line 111, in load_ipython_extension
    ip.prompts = PowerlinePrompts(ip)
  File ""/usr/local/lib/python3.6/site-packages/powerline/bindings/ipython/since_5.py"", line 62, in __init__
    powerline.do_setup(shell, self, shutdown_hook)
  File ""/usr/local/lib/python3.6/site-packages/powerline/bindings/ipython/since_5.py"", line 26, in do_setup
    saved_msfn = ip._make_style_from_name
AttributeError: 'TerminalInteractiveShell' object has no attribute '_make_style_from_name'

In [1]: 
```

IPython 5.1.0 works just fine on the same system.

```
 fots  ~  ipython
Python 3.6.0 (default, Dec 24 2016, 00:01:50) 
Type ""copyright"", ""credits"" or ""license"" for more information.

IPython 5.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

 In [1]   
```

Thanks in advance for your help!

Cheers
Fotis"
1708,Suppress whitespace when tmux status line is filled,2017-01-24T21:08:11Z,2017-01-24T21:15:43Z,"c:b:tmux, s:wontfix, t:bug",,,"As you can see in the following example, there is too much white space taking up screen space, which could have been used to display more windows instead:

![screen shot 2017-01-24 at 22 57 51](https://cloud.githubusercontent.com/assets/1271164/22266469/d949ca6e-e288-11e6-9e57-d80d76f5d076.png)

The only variable that I've found in the configs that removes some space is the 'spaces' variable in `themes/powerline.json`, which removes a single space from everywhere if set to `0`.

For example, I don't want the space between the window id and the divider, and not so much space between the window name and the next window.

BTW, thanks for the nice plugin! 👍

Cheers,
Paschalis"
1707,Short prompt,2017-01-24T13:58:16Z,2017-01-24T18:34:31Z,"c:configuration, s:invalid",,,"Hi, 

I use powerline-2.5-3.fc25.x86_64 and powerline-fonts-2.5-3.fc25.x86_64.

How can I do to make prompt show the basename of the current working directory, and not the full path of it?

Thanks in advance!"
1706,Added note about laststatus,2017-01-21T23:58:16Z,2017-01-22T00:39:12Z,"c:b:vim, c:documentation, t:enhancement",,,"Users may be confused when installing powerline as it does not appear by default in single-window mode. This change alerts users that they should not expect to see the status line and points them to the help documents for laststatus so that they can activate it in all cases if they want.

See #1688"
1705,Wrong cursor position in termite,2017-01-18T17:20:01Z,2017-01-18T17:59:35Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"Exact replica of: https://github.com/powerline/powerline/issues/845

Using latest python 3.6 and powerline 2.5 with latest Hack font.

Oddly in any terminal other than termite (such as urxvt) gets corrupted attempting to render with the same font.

My complete dotfiles are available here for reference: https://github.com/lrvick/dotfiles

Termite:
![](http://i.imgur.com/fpWSrOy.png)

urxvt:
![](http://i.imgur.com/gTfh0cD.png)
"
1704,Installation for Windows support,2017-01-13T02:49:35Z,2017-01-13T04:56:01Z,"c:documentation, e:windows, t:enhancement",,,Added documentation for Windows support with the only Python 2.7 as the test version.
1703,Trailing 2 at the end of directory address,2017-01-11T06:56:21Z,2017-01-11T07:04:51Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"Powerline works perfectly for me except that I am getting a trailing '2' at the end like the one shown in the screenshot
![screenshot from 2017-01-11 12-16-26](https://cloud.githubusercontent.com/assets/9202135/21838519/5f337bd4-d7f8-11e6-9186-d97ffc7186fc.png)

This appeared when there was an error installing some other package and has been persistent since then. I have tried reinstalling powerline and there is no sign of this number 2 anywhere in my .bashrc file"
1702,Correct order of arguments in function defs in powerline-setup.fish,2017-01-06T05:06:25Z,2017-01-06T06:05:38Z,"c:b:shell, t:bug",,,"Argument order for defining functions has become more strict in
fish-shell.  The existing definitions in powerline-setup.fish would
cause errors similar to the following:

function: Illegal function name '--on-variable'
~/.local/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 35):            function --on-variable fish_key_
bindings _powerline_set_default_mode
                        if test x$fish_key_bindings != xfish_vi_key_bindings
                                                                                                        ^
in function “powerline-setup”
        called on line 248 of file ~/.config/fish/config.fish

from sourcing file ~/.config/fish/config.fish
        called during startup

The documentation for fish-shell now states the order must be
function NAME [OPTIONS]; BODY; end
(https://github.com/fish-shell/fish-shell/commit/c26d317da5950645590fecf45c907f35ba0462bb)

The code changes in
fish-shell (https://github.com/fish-shell/fish-shell/commit/320cb6857f2b8c44e2caf76553ae931a15e10e81#diff-72c6692091dfe4baf2dfe25db6da2ef6R1554)
support this ordering. ""A valid function name has to be the first argument."""
1701,Powerline consuming lots of CPU and IO under vim,2017-01-05T16:35:16Z,2017-01-06T08:05:27Z,"c:b:tmux, c:b:vim, e:macos, t:bug",,,"I'm probably barking up the wrong tree here, I couldn't find any more information on how to debug this, though: The setup is MacOS with Vim8 and tmux 2.3 from homebrew and powerline-status 2.5 from PIP. My Vim is being awfully slow if there are many tmux/vim-panes opens.

Turns out the culprit seems to be that Vim causes powerline to be run on every single refresh event (scrolling, typing a single key etc.). Tracing shows that the whole python interpreter and powerline are loaded on every such event, leading to excessive - though cached - I/O and CPU. 

I've no idea wether the source of the problem is within Vim, tmux, powerline or my setup. The powerline-daemon is running, `file $(which powerline)` is the compiled Mach-O and apart from the problem stated above everything is working fine.

Any idea how to approach this situation?"
1700,Can't enable cpu_load_percent_module!,2017-01-05T13:56:33Z,,"c:common segments, s:invalid:configuration error, t:bug",AttributeError,"AttributeError: 'CPULoadPercentSegment' object has no attribute 'update'`","I'm getting following error message.

`2017-01-05 14:52:45,265:ERROR:shell:CPULoadPercentSegment:Exception while updating: 'CPULoadPercentSegment' object has no attribute 'update'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/lib/threaded.py"", line 71, in set_update_value
    self.update_value = self.update(self.update_value)
AttributeError: 'CPULoadPercentSegment' object has no attribute 'update'`

My configuration looks as follows.

```
""segments"": {
                ""left"": [
                        {
                                ""function"": ""powerline.segments.shell.mode""
                        },
                        {
                                ""function"": ""powerline.segments.common.net.hostname"",
                                ""priority"": 10
                        },
                        {
                                ""function"": ""powerline.segments.common.env.user"",
                                ""priority"": 30
                        },
                        {
                                ""function"": ""powerline.segments.common.env.virtualenv"",
                                ""priority"": 50
                        },
                        {
                                ""function"": ""powerline.segments.shell.cwd"",
                                ""priority"": 10
                        },
                        {
                                ""function"": ""powerline.segments.shell.jobnum"",
                                ""priority"": 20
                        },
                        {
                                ""function"": ""powerline.segments.common.sys.cpu_load_percent"",
                                ""args"": {
                                        ""interval"": 1,
                                        ""format"": ""u'{0:.0f}%'"",
                                        ""shutdown_event"": ""none"",
                                        ""update_first"": ""true""
                                }
                        }
                ]
```"
1699,Can't enable weather widget!,2017-01-05T13:37:35Z,,"c:common segments, s:invalid:configuration error, t:bug",,,"The documentation very imprecise so I had to google myself through issues and answers on stack exchange. Still I can't get it working. I get the following error message.

`2017-01-05 14:19:53,543:ERROR:shell:WeatherSegment:internal error: value was not computed even though update_first was set`

No weather is displayed.

My theme configuration (default.json) looks like follows.

```JSON
        ""segments"": {
                ""left"": [
                        {
                                ""function"": ""powerline.segments.shell.mode""
                        },
                        {
                                ""function"": ""powerline.segments.common.net.hostname"",
                                ""priority"": 10
                        },
                        {
                                ""function"": ""powerline.segments.common.env.user"",
                                ""priority"": 30
                        },
                        {
                                ""function"": ""powerline.segments.common.env.virtualenv"",
                                ""priority"": 50
                        },
                        {
                                ""function"": ""powerline.segments.shell.cwd"",
                                ""priority"": 10
                        },
                        {
                                ""function"": ""powerline.segments.shell.jobnum"",
                                ""priority"": 20
                        },
                        {
                                ""function"":  ""powerline.segments.common.wthr.weather"",
                                        ""args"": {
                                                ""interval"": 600,
                                                ""after_update"": ""false"",
                                                ""key"": ""none"",
                                                ""shutdown_event"": ""none"",
                                                ""update_first"": ""true"",
                                                ""location_query"": ""Bern, Switzerland"",
                                                ""temp_hottest"": 40,
                                                ""temp_coldest"": -30,
                                                ""temp_format"": ""none"",
                                                ""unit"": ""C"",
                                                ""icons"": ""none""
                                                }
                        }
                ],
                ""right"": [
                        {
                                ""function"": ""powerline.segments.shell.last_pipe_status"",
                                ""priority"": 10
                        },
                        {
                                ""function"": ""powerline.segments.common.vcs.stash"",
                                ""priority"": 50
                        },
                        {
                                ""function"": ""powerline.segments.common.vcs.branch"",
                                ""priority"": 40
                        }
                ]
        }
}
```

The color scheme looks like follows.

```JSON
{
        ""name"": ""Default color scheme for shell prompts"",
        ""groups"": {
                ""hostname"":         { ""fg"": ""brightyellow"", ""bg"": ""mediumorange"", ""attrs"": [] },
                ""environment"":      { ""fg"": ""white"", ""bg"": ""darkestgreen"", ""attrs"": [] },
                ""mode"":             { ""fg"": ""darkestgreen"", ""bg"": ""brightgreen"", ""attrs"": [""bold""] },
                ""attached_clients"": { ""fg"": ""white"", ""bg"": ""darkestgreen"", ""attrs"": [] },
                ""weather"":          { ""fg"": ""gray9"", ""bg"": ""gray2"", ""attrs"": [] }
        },
        ""mode_translations"": {
                ""vicmd"": {
                        ""groups"": {
                                ""mode"": {""fg"": ""darkestcyan"", ""bg"": ""white"", ""attrs"": [""bold""]}
                        }
                }
        }
}
```

What am I missing?

I'm on bash with Fedora 22."
1698,"""bad interpreter"" error on Terminal startup",2017-01-02T18:59:33Z,2017-01-02T22:40:50Z,"c:b:shell, c:installation, e:macos, s:invalid:error in environment",,,"> /usr/local/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh:200: /usr/local/bin/powerline-config: bad interpreter: /usr/local/opt/python3/bin/python3.5: no such file or directory
> /usr/local/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh:204: /usr/local/bin/powerline-config: bad interpreter: /usr/local/opt/python3/bin/python3.5: no such file or directory'

I get the above message printed at the start of every Terminal session. Using a macOS Sierra (10.12.3 Beta) machine and this issue wasn't present until about a week ago. I'm not sure what was changed that made this issue start... the only things that could have changed my Python installation recently (if that's the issue) are regular Homebrew updates using the `brew update` command.

I don't quite understand what's wrong here, but any help would be appreciated. :+)

-- paanvaannd
"
1697,bash prompt looks rectangle ,2016-12-18T07:00:50Z,2016-12-18T10:16:55Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"Bash prompt looks different (rectangle ), How can I change it to arrow ?
![bash](https://cloud.githubusercontent.com/assets/3982702/21292067/8aa61012-c51d-11e6-87b3-96b0ca30e214.png)

but looks fine in vim 
![vim](https://cloud.githubusercontent.com/assets/3982702/21292065/7d3de8c8-c51d-11e6-913e-acf2f61c1570.png)

PS: already using inconsolata  for powerline"
1696,vim: Selecting tabs with mouse cycles tab instead of select,2016-12-16T14:10:41Z,2016-12-16T15:22:23Z,"c:b:vim, s:invalid:configuration error, t:bug",,,"If vim is configured with `set mouse=a` you can click on the tabs to select a tab. If powerline is enabled in vim, then a click on any tab will instead cycle to the next tab, like `gt` in normal mode, instead of selecting the clicked tab.

**System:**
Powerline: `2.5`, python3 version, installed with pip3.
Vim: `8.0`
Python: `3.5.2`
Terminal emulator: iTerm `3.012`
OS: macOS Sierra 10.12.1

Very annoying :-) "
1695,strange  PROMPT in zsh,2016-12-09T14:51:57Z,2016-12-09T16:02:22Z,"c:b:shell, s:invalid:no information, t:bug",,,"![07-12-16_21 08 03](https://cloud.githubusercontent.com/assets/1023532/21052728/12c25a78-be2f-11e6-9140-dba100c73f29.png)
zsh 5.2
Python 2.7.12
powerline-status Version: 2.4
urxvt
How to fix it ? 
thanks for the help"
1694,Add file name to dict in mpd.,2016-12-08T00:37:53Z,,"c:players, t:enhancement",,,"Fixes #1693 

Now the player mpd segment can also display filename."
1693,Mpd player segment Show filename instead of album/artist,2016-12-08T00:08:41Z,,"c:players, t:enhancement",,,"My music collection is mostly mp3's ripped lazily. I have them organized in directories as ""artist""/""song title.mp3"".  Very few of them have the album info correctly and few of them are outright wrong. 

Mpc can return the file name, starting from the root of the default music directory using '%file%' format tag. This is exactly what I need for displaying the song title and artist. Usually it's ""None - None (5:13)"" for me. "
1692,Unable to see the conda virtual environment,2016-12-06T08:43:40Z,2016-12-07T00:22:08Z,"c:common segments, s:invalid:foreign bug, t:bug",,,"When activating a virtual environment (`source activate myenv`), I don't see an indication of the activated environment in the segments. Note I have `'virtual_env'` in the `SEGMENTS` and I have disabled `PS1` change from conda's config (`changeps1: False`).

How can I get to see the active environment?"
1691,Uninstall powerline,2016-12-05T13:52:57Z,2016-12-05T21:16:43Z,"c:b:shell, c:installation, s:invalid",,,There is no information whatsoever on how to remove powerline. I installed it with the install.sh and it screwed up my bash_profile for some reason. It is common curtesy to provide a removal script and not only an install script. Is there any other way?
1690,Fix filenames for linux power supply class in battery segment.,2016-12-01T05:07:59Z,2016-12-14T18:00:41Z,"c:common segments, e:linux, t:bug",,,"Both ""charge"" (µAh) and ""energy"" (µWh) represents ""capacity""
of battery in linux.

More details can find here:
https://github.com/torvalds/linux/blob/master/Documentation/power/power_supply_class.txt

Fixes #1605."
1689,neovim + python 3.5.2 (AttributeError: 'str' object has no attribute 'decode'),2016-11-25T06:33:50Z,2016-11-25T07:08:07Z,"c:b:vim, s:invalid:unsupported software, t:bug","AttributeError, NameError","AttributeError: 'str' object has no attribute 'decode', NameError: name 'powerline_setup' is not defined","Hi there!
does powerline for vim(neovim) supports python 3.5.2 ?

i have this easy issue.

```
Error detected while processing function provider#python3#Call:
line   18:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/usr/local/lib/python3.5/site-packages/powerline/vim.py"", line 15, in <module>
    from powerline.bindings.vim import vim_get_func, vim_getvar, get_vim_encoding, python_to_vim
  File ""/usr/local/lib/python3.5/site-packages/powerline/bindings/vim/__init__.py"", line 44, in <module>
    vim_encoding = get_vim_encoding()
  File ""/usr/local/lib/python3.5/site-packages/powerline/bindings/vim/__init__.py"", line 25, in get_vim_encoding
    return vim.options['encoding'].decode('ascii') or 'ascii'
AttributeError: 'str' object has no attribute 'decode'
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name 'powerline_setup' is not defined
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name 'powerline_setup' is not defined
```

if theres already a fix please! if not i could fix it and make a pull request. thanks."
1688,Not visible in Vim unless multiple windows are open,2016-11-23T23:09:27Z,2016-11-24T04:22:10Z,"c:b:vim, s:not a bug, t:bug",,,"Title says it all. Powerline is normally non-present (The status line with -- INSERT -- or the last typed command is still there), but when I have multiple windows open (whether vertically or horizontally split, and whether it's multiples of the same buffer or multiple buffers), it shows up under all of them as it should.

I can provide configuration information as necessary but don't want to just dump a wall of everything on you. This is a terminal Vim, not running in a GUI; version is 7.4, compiled with Python 3 support. OS is Mint. I vaguely recall an issue like this a while ago when I was setting up on a previous system, but can't seem to find anything on it now, so that's just a vague assurance that it's probably solvable?"
1687,Powerline not loaded in pre-compiled MacVim,2016-11-19T17:50:09Z,2016-11-20T11:34:39Z,"c:installation, e:macos, s:invalid",,,"It would be nice to be able to use MacVim + Powerline without installing Xcode, but I have never been able to figure out whether that's possible, and if so, how to make that happen.

The only way I have ever been able to use Powerline with MacVim is by installing Xcode and then compiling MacVim with Homebrew via the [method outlined in the Powerline docs](https://powerline.readthedocs.io/en/latest/installation/osx.html#vim-installation). I have tried `brew cask install macvim` as well as downloading directly from the [MacVim releases page](https://github.com/macvim-dev/macvim/releases), but the Powerline status bar never loads when using those instances of MacVim.

I guess my question is... why? What are the pre-built MacVim applications missing? Conversely, what is it about compiling MacVim via Homebrew that allows Powerline to function properly?"
1686,travis-ci is not working for any branch,2016-11-19T09:42:56Z,2017-02-19T21:05:17Z,"c:tests, t:bug",,,"the master and the develop branches are broken as you can see it here https://travis-ci.org/rchicoli/powerline/builds/175796522
At the moment every single PR will fail

```bash
The command ""tests/test.sh"" exited with 1.
```"
1685,interval time is not been used for the segments,2016-11-19T09:22:17Z,2016-11-20T18:58:36Z,"c:common segments, s:not a bug, t:bug",,,"```json
""function"": ""powerline.segments.common.wthr.weather"",
	""args"": {
		""interval"": 3600
	}
```

```bash
$ tcpdump -i eth0 -tttt -n host query.yahooapis.com \
or host raw.githubusercontent.com

2016-11-19 11:12:41.588379 IP 76.13.28.196.80
.
2016-11-19 11:12:43.178557 IP 76.13.28.196.80
.
2016-11-19 11:12:45.036968 IP 76.13.28.196.80
```

the same happens for the external_ip 
```json
""function"": ""powerline.segments.common.net.external_ip"",
	""args"": {
		""interval"": 3600,
		""query_url"": ""http://ipv4.icanhazip.com/""
	}
```

```bash
$ tcpdump -i eth0 -tttt -n host icanhazip.com

2016-11-19 11:17:45.180188 IP 64.182.208.181.80
.
2016-11-19 11:17:46.713373 IP 64.182.208.181.80
.
2016-11-19 11:17:48.402072 IP 64.182.208.181.80
```"
1684,"Arrows don't appear in prompt. Directories separated by ""|"" instead.",2016-11-19T06:53:17Z,2016-11-19T16:08:18Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"I have installed all the patched fonts, and selected ubuntu mono for powerline in terminal as the custom font. UTF-8 is the encoding and using gnome terminal. Here's the screenshot http://i.imgur.com/FenWUXi.png
Have this in my bashrc:

```
 if [ -f /usr/local/lib/python2.7/dist-packages/powerline/bindings/bash/powerline.sh ]; then
             source /usr/local/lib/python2.7/dist-packages/powerline/bindings/bash/powerline.sh
fi
```
Please help.
"
1683,Tmux statusline shifting weirdly,2016-11-18T20:15:11Z,2016-11-18T21:51:22Z,"c:b:tmux, s:duplicate, t:bug",,,Installed powerline on xfce terminal but the statusline has been duplicating and shifting the new one upwards till it fills up the screen and continues scrolling.
1682,test travis,2016-11-14T18:33:07Z,2016-11-14T18:48:14Z,s:invalid,,,merge master into develop. This is only a test in order to find out why Travis is failing: https://travis-ci.org/powerline/powerline/jobs/175787867
1681,retry 5 times before throwing an exception,2016-11-13T20:05:23Z,2016-11-20T19:12:51Z,"c:tests, t:bug",,,"after upgrading my system to latest I had some issue with the weather segment.  I was getting sporadic errors:
```ERROR:tmux:WeatherSegment:Exception while computing state for None: 'NoneType' object has no attribute ' getitem '```
this happens because some times `response['query']['results'] is None`  
so I added at least a retry up to 5 times.  
problem solved for me: this is related to: #1119"
1680,Statusline not showing in iTerm with tmux -CC,2016-11-11T08:50:40Z,2016-11-12T11:05:28Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"On macOS 10.12.1 with iTerm 3.0.12, the powerline statusbar works fine in vim as well as tmux 2.3 (both from homebrew).

However, when starting tmux with `tmux -CC`, I get a new window with only the bash promt and not the statusbar. Any ideas why this is not working?"
1679,Tmux status line is duplicated once every second,2016-11-09T22:09:56Z,2016-11-10T21:32:36Z,"c:b:tmux, s:duplicate, t:bug",,,"Using tmux 2.3, powerline 2.5. As soon as I start tmux, the status line starts duplicating, stacking on itself about once every second.

![image](https://cloud.githubusercontent.com/assets/324392/20156657/e5113662-a696-11e6-8ff0-644f9dfe09c9.png)

"
1678,Tmux powerline eating up screen on Arch linux,2016-11-08T03:00:48Z,2016-11-08T19:44:43Z,"c:b:tmux, s:duplicate, t:bug",,,"Hi, I'm not entirely sure when this started happening but my tmux powerline setup is eating up my screen on my Arch install. Every few seconds the status line eats another line.

Interestingly enough, this only happens when I'm logged in through my DE (Using Gnome 3.22, it happens if I use Classic, Xorg, or Wayland). If I ssh in and attach to the tmux session, everything seems good. I'm thinking the problem might lie elsewhere, but thought I'd start here.

Using:
powerline 2.5-1
tmux 2.3-1

![tmux](https://cloud.githubusercontent.com/assets/780934/20085264/9899cc16-a535-11e6-9a1e-22bdf747ee35.gif)
"
1677,Branch symbol show error,2016-11-02T06:30:46Z,2016-11-04T11:13:52Z,"c:font, s:invalid:error in environment, t:bug",,,"vim: 7.4
os: ubuntu 16.04

The branch symbol show error like this:
![](https://lh3.googleusercontent.com/vR-Z8IvAUKaDszt4gbT-0O2mSS-tvvPuyiPXdCn7aDq5kLH38JXpNZr-ozFYgdo54jax0c73dg-DHB1gayzeFkM_QJrqd4Ug5HHs347mL8Y3szktB4mltFSaE2Hj_PJCzclazDgvHHRUL3U1iXYFe3fh82CSx32CMZOrQOR8__LZoL7Ud9aZJoYzR4oL5NmK6S6W0ZpZpbNiHhrg7IG3C4Qag55qqhB1GtkYQInIYIgwxbLmhjA6kEgca07awn3XzetbUU7FzRwxkXZDV6aH7c3MCIYD-MuubyY1N4-IASzt7gQh22EYpmPZUXxMDkkee-C-BAxRpiG3i4nRLAalzO7LGGP6Ucg5pTLYGugzR7AQr68-35TYsYRbdNDUAhIZ4IrriCxINQ-6JooJdAZBnJ4iC9APIj9NFHWufPbiyV28KKK_b-HHCDPyOxOrUyl6ioO0Gw-Atp6uo51p6GbczKUd6vs9lYe8MBqDH_bpUKFJJn_xkH76BP501D2cWAtfat8nDxqkmfv4lQFnJ5f8scvfO9Xo_Ad1rqskivHr4AA_WjORMSpc0ITWvwmoAutcCmPBV1edxNbq_kWy2ACKL4xuN9veu6l0MahOxx0z0TU6mzjj=w375-h17-no)"
1676,Use hglib instead of mercurial directly.,2016-11-01T04:13:55Z,2016-11-01T20:42:12Z,"c:VCS support, t:bug",,,"This wrapper uses the command server without tying it to the mercurial internals, which means it can support Python 3 and use a more liberal license.

Fixes #1675 and maybe fixes #1646."
1675,Mercurial branches are no longer shown,2016-11-01T00:00:17Z,2016-11-01T20:42:12Z,"c:VCS support, t:bug",,,"I'm not sure at what point it stopped working, but git branches are fine while mercurial branches are not shown. I removed my custom config just to be sure; can't verify in bash because it doesn't have a right side view, but in vim, the same thing occurs where the branch is missing in mercurial repos.

Currently using powerline 2.5 from Fedora repos and mercurial 3.7.3."
1674,Icons dissapeared,2016-10-30T12:36:08Z,2016-10-30T18:44:50Z,"c:configuration, s:not a bug, t:bug",,,"In latest version disappeared ""clock"" and ""weather"" icons
![screenshot 2016-10-30 14 28 51](https://cloud.githubusercontent.com/assets/23050688/19836606/2760a4b2-9eae-11e6-828b-932f8d71aea0.png)
"
1673,Provide another default theme with less troublesome characters,2016-10-29T12:38:11Z,2016-10-29T16:43:16Z,"c:configuration, t:enhancement",,,"Ref #1652
"
1672,"Fix shell prompts which have above line(s), but no left segments",2016-10-29T12:18:00Z,,"c:b:shell, t:bug",,,"Bindings for other POSIX-like shells are still affected.

No tests yet.

Fixes #1670
"
1671,tmux duplicates statusline on every refresh of the powerline status,2016-10-29T11:42:11Z,2016-10-29T12:20:13Z,"c:b:tmux, s:duplicate, t:bug",,,"Hello,
I have tried to use powerline with tmux but, for some reasons, tmux is duplicating the statusline on every time the data of one of the right segments is modified (for example, the CPU load, the time or the uptime)

I am currently using MATE Terminal, but I have also been able to replacate this bug on other term emulators: urxvt, xterm, termite and Tilda.
![screenshot at 2016-10-29 13-33-20](https://cloud.githubusercontent.com/assets/7113941/19829293/e7a6d6e2-9ddc-11e6-9839-3e1532ac250c.png)
_The bug on MATE Terminal_

I am pretty sure powerline is at cause here, I have try to modify the POWERLINE_COMMAND variable, and the problem stopped. I have also managed to stop the duplication by setting the value of my right segment to something else (for instance : `set status-right 1`).

Another thing I managed to spot is that sometimes, when I start pwerline for tmux, an odd string appears in my left segment. It happens rather fast, so I've not been able to take a screencap, but it was something like ""<env $POWERLI""

EDIT : just after finishing writing this report, I actually managed to take a screenshot of the string : 
![screenshot at 2016-10-29 13-43-22](https://cloud.githubusercontent.com/assets/7113941/19829338/f785f83a-9ddd-11e6-80e0-465d52964f96.png)
"
1670,"Multiline prompt, no newline at end of ""above"" line.",2016-10-29T00:38:00Z,,"c:b:shell, t:bug",,,"Hey all. I'm new here, so forgive me if this isn't an issue. I'm trying to set up a multiline prompt and I'm running into a few problems.
FYI, I'm using zsh.

1) I have an ""above"" list in my segments list, but the cursor starts at the end of the right segments (the last character on the row). After one character, the rest of the characters follow on the next line. For example:
![screenshot from 2016-10-28 17 32 55](https://cloud.githubusercontent.com/assets/1885442/19825898/967fa2c4-9d34-11e6-8cc8-6890fb78ba7e.png)

This happens no matter what width the terminal is.

2) If you compare the screenshot with my config below, I'm supposed to have a `hostname` segment in the above left. It is not showing up.
3) You can also see that the `mode` and `last_pipe_status` segments (which are supposed to be in left and right, respectively) aren't showing up either.

Here is my .config/powerline/mine.json:

``` json
{
    ""segments"": {
        ""above"": [
            {
                ""left"": [
                    {
                        ""function"": ""powerline.segments.common.net.hostname"",
                        ""priority"": 10,
                    },
                    {
                        ""function"": ""powerline.segments.common.env.user"",
                        ""priority"": 30,
                    },
                    {
                        ""function"": ""powerline.segments.common.env.virtualenv"",
                        ""priority"": 50
                    },
                    {
                        ""function"": ""powerline.segments.shell.cwd"",
                        ""priority"": 10,
                        ""args"": {
                            ""use_path_separator"": true,
                            ""dir_shorten_len"": 1,
                            ""dir_limit_depth"": 10,
                            ""shorten_home"": true
                        }
                    },
                    {
                        ""function"": ""powerline.segments.shell.jobnum"",
                        ""priority"": 20
                    },
                    {
                        ""function"": ""powerline.segments.shell.continuation""
                    }
                ],
                ""right"": [
                    {
                        ""function"": ""powerline.segments.common.vcs.branch"",
                        ""priority"": 40,
                        ""args"": {
                            ""status_colors"": true
                        }
                    },
                    {
                        ""function"": ""powerline.segments.common.time.date"",
                        ""name"": ""time"",
                        ""args"": {
                            ""format"": ""%H:%M:%S"",
                            ""istime"": true
                        }
                    },
                    {
                        ""function"": ""powerline.segments.common.time.date"",
                        ""args"": {
                            ""format"": ""%A, %d %B %Y""
                        }
                    }
                ]
            }
        ],
        ""left"": [
            {
                ""function"": ""powerline.segments.shell.mode""
            }
        ],
        ""right"": [
            {
                ""function"": ""powerline.segments.shell.last_pipe_status"",
                ""priority"": 10
            }
        ]
    }
}

```
"
1669,Fixed grammar,2016-10-28T15:28:09Z,2016-10-28T21:42:19Z,"c:documentation, t:bug",,,
1668,tmux freezes when running with powerline.,2016-10-28T13:11:52Z,2016-10-28T16:37:06Z,"c:b:tmux, s:invalid:error in environment, t:bug",,,"I am on **OSX 10.11.6 (El Capitan)**. Using **tmux 2.4** inside **iTerm2**, with **powerline 2.5**.

After a very short time tmux would freeze when running with powerline enabled. It freezes and dies so bad, that I have to kill the process.

I can see some ghosts tmux processes appearing:
<img width=""200"" alt=""tmux_dead"" src=""https://cloud.githubusercontent.com/assets/474655/19807364/a6da3d22-9d17-11e6-9f6c-ae36abe22a90.png"">

On the other hand, when I disable powerline, everything is just fine no matter how much I push tmux (many new sessions, new windows, new panes etc.).

I have the following line to enable powerline in my .tmux.conf:

```
run-shell ""powerline-daemon -q""
source ""/Users/me/opt/Darwin64/powerline/powerline/bindings/tmux/powerline.conf""
```

Any ideas?
"
1667,Feature/1666 tmux synchronized panes segment,2016-10-27T11:19:17Z,,"a:segment, c:b:tmux, t:enhancement",,,"A new segment for tmux. Would be nice to see this in the official build.
"
1666,[feature] tmux segment for synchronized panes,2016-10-27T11:02:43Z,,"a:segment, c:b:tmux, t:enhancement",,,"In tmux it is possible to synchronize all panes in a window. To see and be warned about synchronized panes I made a new segment to indicate the current sync-state. 

If the panes of the current window are synchronized, the ""SYNC"" indicator appears. 
If the panes are not synchronized, the indicator is not visible.

A small change in 2 files is required to achieve this. I will make a new fork/branch for the pull request.
"
1665,Fixed colors gradients in default and solarized,2016-10-25T12:45:04Z,2016-10-26T00:57:01Z,"c:configuration, t:enhancement",,,"Because of error:

> Error while checking theme (key /segments/right/list item 2/function)
> found highlight groups list (network_load_sent_gradient, network_load_recv_gradient, network_load_gradient) with all groups not defined in some colorschemes
> (Group names were taken from function documentation.)
>   in ""/home/acid/.config/powerline/themes/tmux/default.json"", line 14, column 48:
>      ...  ""powerline.segments.common.net.network_load"",
>                                          ^
> 
> Error while checking theme (key /segments/right/list item 2/function)
> found highlight group network_load_sent_gradient not defined in the following colorschemes: default, solarized
> 
> Error while checking theme (key /segments/right/list item 2/function)
> found highlight group network_load_recv_gradient not defined in the following colorschemes: default, solarized
- Added _network_load_sent_gradient_ and _network_load_recv_gradient_ to **powerline/config_files/colorschemes/default.json**
- Added _network_load_gradient_, _network_load_sent_gradient_ and _network_load_recv_gradient_ to **powerline/config_files/colorschemes/solarized.json**
- Indents a bit increased
"
1664,[feature] Integrate Glances,2016-10-25T11:16:40Z,,"a:segment, c:common segments, t:enhancement",,,"A new metric could be to show any metric marked as critical by [Glances](https://nicolargo.github.io/glances/).

Here are Glances levels:
- GREEN: OK (everything is fine)
- BLUE: CAREFUL (need attention)
- VIOLET: WARNING (alert)
- RED: CRITICAL (critical)

For example if the ""CPU ctx_sw"" and ""MEM used"" are marked as CRITICAL, then show in the powerline status bar in RED: `CPU ctx_sw, MEM used` or `CPY ctx_sw: 16000 - MEM used: 17.3G`.

Ideally clicking it (with mouse mode on), would open Glances.

This has advantages over most other metrics in that I'm usually interested to see if something is possibly wrong and it may be one of many many metrics/sensors. Glances does monitor a lot of metrics including but not limited to:
- CPU usage, iowait, context switches...
- MEMORY used
- SWAP used
- NETWORK I/O
- DISK I/O and free space
- SENSORS like fans and temperature of the PC
- DOCKER containers

It has at the bottom a ""critical alert detected"" list which may be easy to capture and reduce to a few characters if there is any issue detected.

Ideally one may want to also get alerts for any level with highest alert first and using colors like Glances.
"
1663,System load gradient,2016-10-25T10:36:24Z,2016-10-25T20:34:46Z,"c:common segments, s:invalid:configuration error, t:bug",,,"**Powerline Version: 2.5**
**OS: CentOS 7.2.1511**
**Installed By:** pip install --user git+git://github.com/powerline/powerline

For some reason **threshold_good** and **threshold_bad** doesn't work for me in _powerline.segments.common.sys.system_load_ segment. Gradient colours doesn't changing
In case, if

``` json
{
    ""function"": ""powerline.segments.common.sys.system_load"",
    ""args"": {
    ""threshold_good"": ""1.0"",
    ""threshold_bad"": ""1.5""
},
```

or

``` json
{
    ""function"": ""powerline.segments.common.sys.system_load"",
    ""name"": ""system_load_gradient"",
    ""args"": {
        ""threshold_good"": ""1.0"",
        ""threshold_bad"": ""1.5""
    },
},
```

Without arguments works.
Also working if change _threshold_good_ or _threshold_bad_ in .../powerline/segments/common/sys.py

**Powerline Version: 2.5.1**
**OS: Fedora release 24**
**Installed By: dnf install powerline tmux-powerline** 

In case if add arguments with threshold in Fedora, load average doesn't show at all.
"
1662,Error show name when completed,2016-10-22T18:11:37Z,2016-10-23T00:06:15Z,"c:b:shell, c:font, s:invalid:error in environment, t:bug",,,"After I completed the installation then it fails like this. I used the python 3.4. Help Me !!
![error](https://cloud.githubusercontent.com/assets/16979197/19621508/a0de1faa-98bd-11e6-9d41-19df939bce1a.png)
"
1661,Tmux 2.2 with Powerline 2.5 repeats the statusline with every update,2016-10-22T04:56:06Z,2016-10-22T11:12:36Z,"c:b:tmux, e:linux, s:duplicate, t:bug",,,"I've recently updated my system (Fedora 25) which comes with tmux 2.2 and I noticed strange effect; every time powerline updates the uptime in the statusline, it repeats the whole line in a new line again as seen in the following image:

![screenshot from 2016-10-22 06-44-15](https://cloud.githubusercontent.com/assets/928614/19616986/3082be3c-982c-11e6-90be-557f1e242478.png)

I've used `powerline` and `tmux-powerline` packages from official fedora repos (their versions are 2.5), in addition to cloning the git repository and using the last stable `master` branch with tag `2.5`. Both give the same issue.

I've also tried to comment all my options in `~/.tmux.conf` except the powrline loading part, but no avail.

My `~/.tmux.conf`:

``` tmux
# force reload ~/.tmux.conf using PREFIX r
unbind r
bind r source-file ~/.tmux.conf \; display ""Reloaded!""

# act like GNU screen
unbind C-b
set -g prefix C-a

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# # smart pane switching with awareness of vim splits
bind -n C-h run ""(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L""
bind -n C-j run ""(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D""
bind -n C-k run ""(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U""
bind -n C-l run ""(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R""
bind -n C-\ run ""(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l""

# act like vim
setw -g mode-keys vi
# bind -n C-h run ""(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L""
# bind -n C-j run ""(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D""
# bind -n C-k run ""(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U""
# bind -n C-l run ""(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R""
# bind -n C-\ run ""(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l""

# splits I can understand (from http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/)
bind | split-window -h
bind - split-window -v

# Support 256 colors (or use tmux -2)
set -g default-terminal ""screen-256color""

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# explicitly disable mouse control
setw -g mouse on

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
# set-option -g bell-on-alert on

# Enable Arrows
set-window-option -g xterm-keys on

# installed powerline (fedora)
# source ""/usr/share/tmux/powerline.conf""

# local powerline (git submodule)
run-shell ""powerline-daemon -q""
source ""/home/anass/.powerline/powerline/bindings/tmux/powerline.conf""
```

There's no special tmux powerline configurations.
"
1660,Powerline in tmux gets scrolled up by gnome-terminal,2016-10-19T20:04:56Z,2016-10-20T00:17:06Z,"c:b:tmux, e:linux, s:duplicate, t:bug",,,"When opening tmux with powerline in gnome-terminal, powerline shows up for a split second and disappears again. Then after approximately 5 seconds, the command line disappears and powerlines updates get scrolled up across the screen in 2 second intervals (see attachment)

This seems to be an issue with gnome-terminal, as it still works fine with xterm and konsole. This was caused by a recent update, assumingly in gnome or python, as the same setup worked fine before.
![bildschirmfoto von 2016-10-19 21-58-30](https://cloud.githubusercontent.com/assets/15603149/19535431/e8028998-9647-11e6-9610-733f7bba1414.png)
"
1659,pip install didn't include vim bindings,2016-10-19T15:26:55Z,2016-10-20T15:10:06Z,"c:b:vim, c:installation, e:linux, s:invalid",,,"I followed the install instructions on Ubuntu 16.04. Powerline is working fine in bash, but when I tried to install in vim, it isn't working - I just see a blank white line:
![powerline](https://cloud.githubusercontent.com/assets/452218/19525380/6477f1fa-95e6-11e6-9425-813ee2cec33f.png)

I looked, and my /usr/share/powerline/bindings directory does not have a vim/ subdirectory.

Is there a reason that wouldn't be installed?
"
1658,Powerline scrolling new lines instead of updating status bar,2016-10-13T15:40:00Z,2016-10-13T15:42:29Z,"c:b:tmux, e:linux, s:duplicate, t:bug",,,"![2016-10-13-111734_1060x641_scrot](https://cloud.githubusercontent.com/assets/3475233/19355030/d2c1f11a-9136-11e6-8762-3ad66c00e047.png)

Running tmux in termite on Arch. After updating Arch packages, including termite, Powerline creates a new line instead of updating the current status bar.

tmux config:

```
unbind C-b
set -g prefix C-a
bind b send-prefix

# powerline
run-shell ""powerline-daemon -q""
source $HOME/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

# everything gets better with vim bindings
setw -g mode-keys vi

unbind n
unbind p
bind . next-window
bind , previous-window

# copy & paste
unbind [
bind Escape copy-mode
bind p paste-buffer
unbind -t vi-copy 'v'
unbind -t vi-copy 'y'
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'

# we want color ffs
set -g default-terminal ""screen-256color""

# we also want mouse
# set -g mouse-utf8 on
set -g mouse on

set -g history-limit 30000

# delay
# set -s escape-time 1

# moving window easy way
bind-key m command-prompt -p ""move window to:"" ""swap-window -t '%%'""

# not-so-easy to type, but easier to remember
unbind %
bind | split-window -h
bind - split-window -v

bind k select-pane -U
bind l select-pane -R
bind j select-pane -D
bind h select-pane -L

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
```

zsh config:

```
if [ -e /usr/share/terminfo/x/xterm-256color ]; then
    export TERM='xterm-256color'
else
    export TERM='xterm-color'
fi

ZSH=$HOME/.oh-my-zsh
ZSH_THEME='bira'

DEFAULT_USER='hilln'

setopt AUTO_CD

# Set to this to use case-sensitive completion
CASE_SENSITIVE=""true""

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE=""true""

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS=""true""

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE=""true""

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION=""true""

# Uncomment following line if you want red dots to be displayed while waiting for completion
 COMPLETION_WAITING_DOTS=""true""

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY=""true""

# Uncomment following line if you want to  shown in the command execution time stamp
# in the history command output. The optional three formats: ""mm/dd/yyyy""|""dd.mm.yyyy""|
# yyyy-mm-dd
HIST_STAMPS=""yyyy-mm-dd""

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git git-flow zsh-syntax-highlighting colorize tmux)

# tmux options
ZSH_TMUX_AUTOSTART=false

source $ZSH/oh-my-zsh.sh

. $HOME/.shellrc.load
```

termite config:

```
[options]
font = Monaco 10

# Solarized dark color scheme

[colors]
foreground = #839496
foreground_bold = #eee8d5
#foreground_dim = #888888
background = #002b36
cursor = #93a1a1

# if unset, will reverse foreground and background
highlight = #839496

# colors from color0 to color254 can be set
color0 = #073642
color1 = #dc322f
color2 = #859900
color3 = #b58900
color4 = #268bd2
color5 = #d33682
color6 = #2aa198
color7 = #eee8d5
color8 = #002b36
color9 = #cb4b16
color10 = #586e75
color11 = #657b83
color12 = #839496
color13 = #6c71c4
color14 = #93a1a1
color15 = #fdf6e3

```
"
1657,Powerline default shell theme no longer shows git branch on the right,2016-10-13T13:39:41Z,,"c:VCS support, c:b:shell, t:bug",,,"Hello,

I recently installed powerline in a new laptop ArchLinux installation and using the default shell theme for some reason the git branches no longer appear on the right of the terminal. There is quite a lot of space on my screen for it to appear but it does not appear. I even tried with `""priority"": None` which should always make it show but that also did not work.

**Powerline Version**: 2.5.1 
**OS**: Archlinux
**Installed By**: Pacman, the package manager of the distro

I renamed default shell theme to `lef.json` and made some changes to assure that it's getting picked up and the changes were getting picked up so we can be sure that powerline recognizes, parses and uses those files.

config.json

``` json
{
    ""common"": {
        ""term_truecolor"": false
    },
    ""ext"": {
        ""ipython"": {
            ""colorscheme"": ""default"",
            ""theme"": ""in"",
            ""local_themes"": {
                ""rewrite"": ""rewrite"",
                ""out"": ""out"",
                ""in2"": ""in2""
            }
        },
        ""pdb"": {
            ""colorscheme"": ""default"",
            ""theme"": ""default""
        },
        ""shell"": {
            ""colorscheme"": ""default"",
            ""theme"": ""lef"",
            ""local_themes"": {
                ""continuation"": ""continuation"",
                ""select"": ""select""
            }
        },
        ""tmux"": {
            ""colorscheme"": ""default"",
            ""theme"": ""default""
        },
        ""vim"": {
            ""colorscheme"": ""default"",
            ""theme"": ""default"",
            ""local_themes"": {
                ""__tabline__"": ""tabline"",

                ""cmdwin"": ""cmdwin"",
                ""help"": ""help"",
                ""quickfix"": ""quickfix"",

                ""powerline.matchers.vim.plugin.nerdtree.nerdtree"": ""plugin_nerdtree"",
                ""powerline.matchers.vim.plugin.commandt.commandt"": ""plugin_commandt"",
                ""powerline.matchers.vim.plugin.gundo.gundo"": ""plugin_gundo"",
                ""powerline.matchers.vim.plugin.gundo.gundo_preview"": ""plugin_gundo-preview""
            }
        },
        ""wm"": {
            ""colorscheme"": ""default"",
            ""theme"": ""default""
        }
    }
}
```

lef.json theme (basically copy paste of default.json for shell)

``` json
{
    ""segments"": {
        ""left"": [
            {
                ""function"": ""powerline.segments.shell.mode""
            },
            {
                ""function"": ""powerline.segments.common.net.hostname"",
                ""priority"": 10
            },
            {
                ""function"": ""powerline.segments.common.env.user"",
                ""priority"": 30
            },
            {
                ""function"": ""powerline.segments.common.env.virtualenv"",
                ""priority"": 50
            },
            {
                ""function"": ""powerline.segments.shell.cwd"",
                ""priority"": 10
            },
            {
                ""function"": ""powerline.segments.shell.jobnum"",
                ""priority"": 20
            }
        ],
        ""right"": [
            {
                ""function"": ""powerline.segments.shell.last_pipe_status"",
                ""priority"": 10
            },
            {
                ""function"": ""powerline.segments.common.vcs.stash"",
                ""priority"": 50
            },
            {
                ""function"": ""powerline.segments.common.vcs.branch"",
                ""priority"": 40
            }
        ]
    }
}
```

Any idea on how to address this issue would be greatly appreciated.
"
1656,Gnome Terminal 3.22 keeps scrolling the base line,2016-10-12T12:50:50Z,2016-10-12T19:27:51Z,"c:b:tmux, e:linux, s:duplicate, t:bug",,,"I just upgraded to Gnome 3.22 on Arch and this is what happens:

![screenshot from 2016-10-12 14-46-01](https://cloud.githubusercontent.com/assets/263378/19310585/2293b8ce-908b-11e6-9d69-c305143822f7.png)

Let me know what else you need or if I need to report this over at GNOME.
"
1655,spotify_dbus not working but spotify_apple_script works,2016-10-11T00:40:33Z,2016-11-04T10:59:19Z,"c:players, e:macos, s:invalid:no information, t:bug",,,"Hi,
I love using powerline with zsh, tmux and vim and I have spent a lot of time customizing it. Thank you!
I am having trouble getting spotify segment to work for me. spotify_dbus does not work for me, where spotify_apple_script works. spotify_apple_script makes my vim very slow and I can't use it on my Linux machines. Please help me. Below is the snippet where I have showcased the problem.

```
$ # Environment: Mac OSX
$ uname && sw_vers -productVersion
Darwin
10.11.6

$ # All pre-requisites installed
$ brew info dbus
dbus: stable 1.10.8 (bottled), devel 1.11.4, HEAD
Message bus system, providing inter-application communication
==> Caveats
To have launchd start dbus now and restart at login:
  brew services start dbus
 $ ps aux | grep ""[d]bus""
rohithvsm       18445   0.0  0.0  2454632   2212   ??  S     5:20PM   0:00.02 /usr/local/Cellar/dbus/1.10.8/bin/dbus-daemon --nofork --session
$ pip show dbus-python
Version: 1.2.4
Summary: Python bindings for libdbus
Location: /usr/local/lib/python2.7/site-packages
$ python -c 'import dbus; print dbus.__version__'
1.2.4

$ python
>>> from powerline.segments.common.players import spotify_dbus
>>> from powerline import get_fallback_logger
>>> # spotify_dbus returns None
>>> print spotify_dbus(pl=get_fallback_logger())
None
>>> from powerline.segments.common.players import spotify_apple_script
>>> # spotify_apple_script works
>>> print spotify_apple_script(pl=get_fallback_logger())
[{u'contents': u'~ Black Sabbath - Sabbath Bloody Sabbath (5783:20)', u'highlight_groups': [u'player_pause', u'player']}]
```
"
1654,how to change the distance among different parts of tmux status bar.,2016-10-09T03:36:18Z,2016-10-09T13:27:51Z,"c:b:tmux, t:enhancement",,,"As shown in the following figure, I would like to change the distance, but I do not find how to configure the attribute in the source code. 
![bf8194cc36d91b0f90964547799c0291](https://cloud.githubusercontent.com/assets/1595077/19217718/1bbad966-8e14-11e6-98aa-5bcd202527f1.png)
"
1653,Generation of the prompt is really slow,2016-10-03T14:24:44Z,,"c:b:shell, c:daemon, e:linux, t:bug",,,"Hi, I've just started using powerline, but for some reason it is really slow for me on zsh.
I've tried searching for a solution online, and tried some other configuration but all give the same result.

The slowness is seen whenever the prompt needs to be redrawn, most notably on opening a terminal and after pressing enter). It takes about half a second for it to be drawn.

To try to debug this issue, I've launched the daemon in foreground mode under strace.
This is what seen each time the prompt needs to be drawn:
`$ strace powerline-daemon --foreground`

```
accept4(3, {sa_family=AF_UNIX}, [110->2], SOCK_CLOEXEC) = 4
select(5, [3 4], [], [3 4], {60, 0})    = 1 (in [4], left {59, 999996})
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 632478969}) = 0
select(5, [4], [], [4], {2, 0})         = 1 (in [4], left {1, 999997})
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 632598579}) = 0
recvfrom(4, ""c\0shell\0aboveleft\0-r\0.zsh\0--last""..., 4096, 0, NULL, NULL) = 1514
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell/__main__.json"", {st_mode=S_IFREG|0644, st_size=147, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 634978702}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 635021207}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/powerline.json"", {st_mode=S_IFREG|0644, st_size=2672, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 635625733}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 635667022}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/config.json"", {st_mode=S_IFREG|0644, st_size=1060, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 636175827}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 636217036}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colors.json"", {st_mode=S_IFREG|0644, st_size=13825, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 636720445}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 636760584}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/__main__.json"", {st_mode=S_IFREG|0644, st_size=287, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 637351078}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 637388688}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/default.json"", {st_mode=S_IFREG|0644, st_size=3871, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 637950523}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 637986264}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell/default.json"", {st_mode=S_IFREG|0644, st_size=796, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 638561309}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 638596433}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/default.json"", {st_mode=S_IFREG|0644, st_size=526, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 639130886}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 639164622}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
stat(""/home/mich/.config/powerline/themes/shell/continuation.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colorschemes/shell/__main__.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/config.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colorschemes/default.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/powerline.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/shell/default.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colors.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/shell/__main__.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colorschemes/shell/default.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/shell/select.json"", 0x7ffc6af06c50) = -1 ENOENT (No such file or directory)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell/__main__.json"", {st_mode=S_IFREG|0644, st_size=147, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 640104376}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 640127764}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/powerline.json"", {st_mode=S_IFREG|0644, st_size=2672, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 640456378}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 640479281}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/config.json"", {st_mode=S_IFREG|0644, st_size=1060, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 640770046}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 640793130}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colors.json"", {st_mode=S_IFREG|0644, st_size=13825, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 641084022}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 641106958}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/__main__.json"", {st_mode=S_IFREG|0644, st_size=287, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 641479987}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 641502980}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/default.json"", {st_mode=S_IFREG|0644, st_size=3871, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 641825860}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 641848533}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell/default.json"", {st_mode=S_IFREG|0644, st_size=796, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 642200821}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 642223785}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/default.json"", {st_mode=S_IFREG|0644, st_size=526, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 642576317}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 642599057}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
stat(""/home/mich/.config/powerline/themes/shell/continuation.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colorschemes/shell/__main__.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/config.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colorschemes/default.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/powerline.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/shell/default.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colors.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/shell/__main__.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colorschemes/shell/default.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/shell/select.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
geteuid()                               = 1000
select(5, [3], [4], [3 4], {60, 0})     = 1 (out [4], left {59, 999997})
sendto(4, ""%{\33[0;38;5;22;48;5;148;1m%}\302\240INS""..., 203, 0, NULL, 0) = 203
close(4)                                = 0
select(4, [3], [], [3], {60, 0})        = 1 (in [3], left {59, 999259})
accept4(3, {sa_family=AF_UNIX}, [110->2], SOCK_CLOEXEC) = 4
select(5, [3 4], [], [3 4], {60, 0})    = 1 (in [4], left {59, 999998})
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 644487356}) = 0
select(5, [4], [], [4], {2, 0})         = 1 (in [4], left {1, 999999})
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 644537126}) = 0
recvfrom(4, ""c\0shell\0right\0-r\0.zsh\0--last-exi""..., 4096, 0, NULL, NULL) = 1510
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell/__main__.json"", {st_mode=S_IFREG|0644, st_size=147, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 645348057}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 645368995}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/powerline.json"", {st_mode=S_IFREG|0644, st_size=2672, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 645669841}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 645689847}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/config.json"", {st_mode=S_IFREG|0644, st_size=1060, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 645937088}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 645956371}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colors.json"", {st_mode=S_IFREG|0644, st_size=13825, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 646207694}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 646227227}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/__main__.json"", {st_mode=S_IFREG|0644, st_size=287, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 646531324}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 646550570}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/default.json"", {st_mode=S_IFREG|0644, st_size=3871, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 646807388}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 646824178}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/themes/shell/default.json"", {st_mode=S_IFREG|0644, st_size=796, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 647084736}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 647100864}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
lstat(""/usr"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib"", {st_mode=S_IFDIR|0755, st_size=147456, ...}) = 0
lstat(""/usr/lib/python3.5"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/usr/lib/python3.5/site-packages/powerline/config_files/colorschemes/shell/default.json"", {st_mode=S_IFREG|0644, st_size=526, ...}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 647343032}) = 0
clock_gettime(CLOCK_MONOTONIC_RAW, {140858, 647358509}) = 0
read(5, 0x1a0cb10, 5000)                = -1 EAGAIN (Resource temporarily unavailable)
stat(""/home/mich/.config/powerline/themes/shell/continuation.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colorschemes/shell/__main__.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/config.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colorschemes/default.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/powerline.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/shell/default.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colors.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/shell/__main__.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/colorschemes/shell/default.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.config/powerline/themes/shell/select.json"", 0x7ffc6af06bf0) = -1 ENOENT (No such file or directory)
stat(""/home/mich"", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
stat(""/home/mich/.git"", 0x7ffc6af055e0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.hg"", 0x7ffc6af055e0)  = -1 ENOENT (No such file or directory)
stat(""/home/mich/.bzr"", 0x7ffc6af055e0) = -1 ENOENT (No such file or directory)
lstat(""/home/mich"", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
lstat(""/home/mich/.."", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat(""/home/.git"", 0x7ffc6af055e0)      = -1 ENOENT (No such file or directory)
stat(""/home/.hg"", 0x7ffc6af055e0)       = -1 ENOENT (No such file or directory)
stat(""/home/.bzr"", 0x7ffc6af055e0)      = -1 ENOENT (No such file or directory)
lstat(""/home"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/home/.."", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat(""/.git"", 0x7ffc6af055e0)           = -1 ENOENT (No such file or directory)
stat(""/.hg"", 0x7ffc6af055e0)            = -1 ENOENT (No such file or directory)
stat(""/.bzr"", 0x7ffc6af055e0)           = -1 ENOENT (No such file or directory)
lstat(""/"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/.."", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat(""/home/mich"", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
stat(""/home/mich/.git"", 0x7ffc6af055e0) = -1 ENOENT (No such file or directory)
stat(""/home/mich/.hg"", 0x7ffc6af055e0)  = -1 ENOENT (No such file or directory)
stat(""/home/mich/.bzr"", 0x7ffc6af055e0) = -1 ENOENT (No such file or directory)
lstat(""/home/mich"", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
lstat(""/home/mich/.."", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat(""/home/.git"", 0x7ffc6af055e0)      = -1 ENOENT (No such file or directory)
stat(""/home/.hg"", 0x7ffc6af055e0)       = -1 ENOENT (No such file or directory)
stat(""/home/.bzr"", 0x7ffc6af055e0)      = -1 ENOENT (No such file or directory)
lstat(""/home"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/home/.."", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat(""/.git"", 0x7ffc6af055e0)           = -1 ENOENT (No such file or directory)
stat(""/.hg"", 0x7ffc6af055e0)            = -1 ENOENT (No such file or directory)
stat(""/.bzr"", 0x7ffc6af055e0)           = -1 ENOENT (No such file or directory)
lstat(""/"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat(""/.."", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
select(5, [3], [4], [3 4], {60, 0})     = 1 (out [4], left {59, 999997})
sendto(4, """", 0, 0, NULL, 0)            = 0
close(4)                                = 0
```

Now, I'm not an expert, but it seems it is trying to read something from file descriptor 5 in a loop, with no success.
This is what fd 5 points to:

```
$ ls -al /proc/$(pgrep -f ""/usr/bin/powerline-daemon --foreground"")/fd/5            
lr-x------ 1 mich users 64 Oct  3 16:14 /proc/30585/fd/5 -> anon_inode:inotify
```

I use Arch Linux and installed powershell form the Community repo.

```
$ pacman -Q powerline powerline-common
powerline 2.5-1
powerline-common 2.5-1
```

This is the only line I currently have in my .zshrc
`. /usr/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh`
"
1652,Gnome 3.22 support,2016-10-01T10:02:49Z,2016-10-01T12:47:23Z,"c:b:tmux, e:linux, s:invalid:foreign bug, t:bug",,,"Here is what I see after Gnome 3.22 upgrade:

![output](https://cloud.githubusercontent.com/assets/304265/19013369/4237f7ce-87d7-11e6-9810-2ca962915441.gif)
"
1651,IPython not working,2016-09-28T23:41:58Z,2016-12-14T20:33:08Z,"c:b:ipython, t:bug",,,"Here's the error when entering ipython:

> Python 3.5.1 (default, Aug  9 2016, 15:35:51) 
> Type ""copyright"", ""credits"" or ""license"" for more information.
> 
> IPython 4.2.0 -- An enhanced Interactive Python.
> ?         -> Introduction and overview of IPython's features.
> %quickref -> Quick reference.
> help      -> Python's own help system.
> object?   -> Details about 'object', use 'object??' for extra details.
> 2016-09-28 20:33:59,568:ERROR:ipython:powerline:Failed to import attr renderer from module powerline.renderers.ipython: module 'powerline.renderers.ipython' has no attribute 'renderer'
> Traceback (most recent call last):
>   File ""/usr/lib/python3.5/site-packages/powerline/**init**.py"", line 382, in get_module_attr
>     return getattr(**import**(module, fromlist=(attr,)), attr)
> AttributeError: module 'powerline.renderers.ipython' has no attribute 'renderer'
> 2016-09-28 20:33:59,569:ERROR:ipython:powerline:Failed to create renderer: Failed to obtain renderer
> Traceback (most recent call last):
>   File ""/usr/lib/python3.5/site-packages/powerline/**init**.py"", line 842, in update_renderer
>     self.create_renderer(**cr_kwargs)
>   File ""/usr/lib/python3.5/site-packages/powerline/**init**.py"", line 666, in create_renderer
>     raise ImportError('Failed to obtain renderer')
> ImportError: Failed to obtain renderer
> 2016-09-28 20:33:59,569:ERROR:ipython:powerline:Failed to render: Failed to obtain renderer
> Traceback (most recent call last):
>   File ""/usr/lib/python3.5/site-packages/powerline/**init**.py"", line 859, in render
>     self.update_renderer()
>   File ""/usr/lib/python3.5/site-packages/powerline/**init**.py"", line 842, in update_renderer
>     self.create_renderer(**cr_kwargs)
>   File ""/usr/lib/python3.5/site-packages/powerline/**init**.py"", line 666, in create_renderer
>     raise ImportError('Failed to obtain renderer')
> ImportError: Failed to obtain renderer

Here's powerline config for ipython:

``` json
""ext"": {
                ""ipython"": {
                        ""colorscheme"": ""default"",
                        ""theme"": ""in"",
                        ""local_themes"": {
                                ""rewrite"": ""rewrite"",
                                ""out"": ""out"",
                                ""in2"": ""in2""
                        }
                },
```

Here's the ipython_config.py:

``` python
c = get_config()
c.InteractiveShellApp.extensions = [
    'powerline.bindings.ipython.post_0_11'

]
```
"
1650,Powerline for Zsh not connecting to daemon,2016-09-26T17:50:59Z,2016-09-26T18:29:07Z,"c:b:shell, s:not a bug, t:bug",,,"My powerline prompt in Zsh does not seem to be connecting to the daemon.

```
% cat /etc/lsb-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=16.04
DISTRIB_CODENAME=xenial
DISTRIB_DESCRIPTION=""Ubuntu 16.04.1 LTS""
```

```
% zsh --version
zsh 5.1.1 (x86_64-ubuntu-linux-gnu)
```

```
% pip show powerline-status | grep '^Version'
Version: 2.5
```

```
% file ~/.local/bin/powerline
/home/xandor/.local/bin/powerline: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=ae4f0504ed8a97f976490efd936f45a11b4fd61a, not stripped
```

`powerline-daemon` is started by Tmux (which is run before Zsh); `.tmux.conf`:

```
PATH=""$HOME/.local/bin:$PATH""
run-shell ""powerline-daemon -q""
run-shell 'tmux source-file ""$(python -m site --user-site)/powerline/bindings/tmux/powerline.conf""'
```

Relevant part of `.zshrc`:

```
PATH=""$HOME/.local/bin:$PATH""
source ""$(python -m site --user-site)/powerline/bindings/zsh/powerline.zsh""
```

(`PATH` is exported later in `.zshrc`. Incidentally I'm actually adding `$HOME/.local/bin` to `PATH` only once because the setting in `.tmux.conf` is necessary for Powerline to work for Tmux, but it doesn't export to the shell env, which is exactly the behaviour I want).

`~/.config/powerline/config.json`:

```
{
    ""common"": {
        ""term_truecolor"": false
    },
    ""ext"": {
        ""shell"": {
            ""colorscheme"": ""solarized"",
            ""theme"": ""default"",
            ""local_themes"": {
                ""continuation"": ""continuation"",
                ""select"": ""select""
            }
        },
        ""tmux"": {
            ""colorscheme"": ""solarized"",
            ""theme"": ""default""
        }
    }
}
```

I'm using `libzpython`. Contrary to the README of zpython, debian-based OSs do have the correct headers in the `zsh-dev` package to be able to build. I built it against Python 2.7 (using `cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython2.7.so && make && sudo make install`).

I've been struggling with the performance of Powerline for Zsh on my Ubuntu box for a little while, wondering what the problem was. I edited `~/.local/bin/powerline-daemon` to print some statements in the `do_run` function. When I then ran `powerline-daemon --foreground` (after killing it first), there is no output from the shell client. Tmux client was definitely connected, lots of activity indicated by my added print statements. When I removed the powerline bindings from `.tmux.conf` and again looked for activity from the shell, there was simply no output from `powerline-daemon`, indicating no connections from any clients.

I'm not using Powerline for any other software at the moment.

Please advise :-).
"
1649,powerline status overflow in iterm2,2016-09-19T22:14:43Z,2016-09-19T22:35:02Z,"c:b:shell, e:macos, s:invalid:error in environment",,,"<img width=""1105"" alt=""screen shot 2016-09-19 at 1 13 46 pm"" src=""https://cloud.githubusercontent.com/assets/1888003/18650740/8500d9f0-7e7b-11e6-8b2e-659e729bef24.png"">

Hi, 

Have a overflow on the status into the second line no matter the size of the terminal. 
Wondering if any has had this problem, if it is a problem with powerline installation, iterm2 settings or possibly themes?

I have tried a different themes, and I have installed [powerline fonts ](https://github.com/powerline/fonts) and changed it in iterm2's profile settings. 

Thanks!
"
1648,Provide explicit scope information in powerline.zsh,2016-09-17T15:25:23Z,2016-09-17T16:32:55Z,"c:b:shell, t:bug",,,"Fixes #1647
"
1647,jobnum Segment Shows '0' Regardless of show_zero Setting When Using zpython,2016-09-16T15:09:45Z,2016-09-17T16:32:55Z,"c:b:shell, t:bug",,,"### Issue

If you are using `zpython` in `zsh`, the `jobnum` segment will show `0` when there are zero jobs regardless of the `show_zero` setting.
### Expected Behavior

If there are zero background jobs, and `show_zero` is false, instead of displaying `0`, `powerline` should hide the segment.
### Recreating

This issue can be recreated by including the `jobnum` segment in your shell config and using `zsh` with `zpython` as the `powerline` renderer. I believe that `jobnum` is included in the default shell config, and by default `show_zero` is false.
### Cause

`jobnum()` in `powerline/segments/shell.py` treats `segment_info['args'].jobnum` as type `int` (and that is correct when `zpython` isn't being used). However, the `Args.jobnum` property in `powerline/bindings/zsh/__init__.py` has a type of `str`. Since `'0' != 0`, the segment is shown.
### Solution

Update the `Args.jobnum` property to convert the type to `int`.

As I identified the cause and solution, I will make the changes and submit a pull request.
"
1646,Powerline fails to know about custom Mercurial extensions,2016-09-14T14:23:09Z,2016-11-01T20:42:12Z,"c:VCS support, t:bug",RequirementError,RequirementError: repository requires features unknown to this Mercurial: xxx    ,"When I start vim + powerline in a Mercurial repo and open a file, I get the following error message:

```
*** failed to import extension xxx: No module named xxx                                                                                                                          
2016-09-13 16:01:30,548:ERROR:vim:file_vcs_status:Exception while computing segment: repository requires features unknown to this Mercurial: xxx                                              
Traceback (most recent call last):                                                                                                                                                            
  File ""/usr/local/lib/python2.7/dist-packages/powerline/segment.py"", line 173, in process_segment                                                                                            
    contents = segment['contents_func'](pl, segment_info)                                                                                                                                     
  File ""/usr/local/lib/python2.7/dist-packages/powerline/segment.py"", line 412, in <lambda>                                                                                                   
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)                                                                                         
  File ""/usr/local/lib/python2.7/dist-packages/powerline/segments/vim/__init__.py"", line 544, in file_vcs_status                                                                              
    status = repo.status(os.path.relpath(name, repo.directory))                                                                                                                               
  File ""/usr/local/lib/python2.7/dist-packages/powerline/lib/vcs/mercurial.py"", line 59, in status                                                                                            
    create_watcher=self.create_watcher,                                                                                                                                                       
  File ""/usr/local/lib/python2.7/dist-packages/powerline/lib/vcs/__init__.py"", line 131, in get_file_status                                                                                   
    file_status_cache[keypath] = ans = get_func(directory, file_path)                                                                                                                         
  File ""/usr/local/lib/python2.7/dist-packages/powerline/lib/vcs/mercurial.py"", line 64, in do_status                                                                                         
    repo = self._repo(directory)                                                                                                                                                              
  File ""/usr/local/lib/python2.7/dist-packages/powerline/lib/vcs/mercurial.py"", line 37, in _repo                                                                                             
    return hg.repository(self.ui, directory)                                                                                                                                                  
  File ""/usr/lib/python2.7/dist-packages/mercurial/hg.py"", line 165, in repository                                                                                                            
    peer = _peerorrepo(ui, path, create)                                                                                                                                                      
  File ""/usr/lib/python2.7/dist-packages/mercurial/hg.py"", line 152, in _peerorrepo                                                                                                           
    obj = _peerlookup(path).instance(ui, path, create)                                                                                                                                        
  File ""/usr/lib/python2.7/dist-packages/mercurial/localrepo.py"", line 1957, in instance                                                                                                      
    return localrepository(ui, util.urllocalpath(path), create)                                                                                                                               
  File ""/usr/lib/python2.7/dist-packages/mercurial/localrepo.py"", line 306, in __init__                                                                                                       
    self.vfs, self.supported)                                                                                                                                                                 
  File ""/usr/lib/python2.7/dist-packages/mercurial/scmutil.py"", line 1111, in readrequires                                                                                                    
    hint=_(""see https://mercurial-scm.org/wiki/MissingRequirement""                                                                                                                            
RequirementError: repository requires features unknown to this Mercurial: xxx    
```

I believe this is because powerline uses [MercurialApi](https://www.mercurial-scm.org/wiki/MercurialApi) instead of [CommandServer](https://www.mercurial-scm.org/wiki/CommandServer).
"
1645,tmux seems to update cursor position every second with powerline enabled,2016-09-10T10:53:55Z,2016-09-10T14:19:18Z,"c:b:tmux, s:not a bug, t:bug",,,"As described above, it seems like with powerline enabled, tmux either redraws the status line every second, or just moves the cursor around. In PuTTY this renders terminal scrolling (PuTTY's native scrollback) completely broken, as the window position is restored to bottom-of-scrollback every time new data comes in.

There is no periodically updated data other than date/time (without seconds) shown in my status line. Removing the date/time segments does not help. Is there something I can do about this?
"
1644,VCS branch segment doesnt highlight properly if a powerline-daemon is running,2016-09-08T08:50:23Z,,"c:VCS support, c:watchers, t:bug",,,"![screen shot 2016-09-08 at 1 47 42 am](https://cloud.githubusercontent.com/assets/6378815/18343030/658a9df4-7566-11e6-9669-c3715b7fece6.png)
"
1643,OSX - zsh install - permission denied,2016-09-02T11:37:42Z,2016-09-04T17:07:01Z,"c:b:shell, e:macos, s:invalid:error in environment, t:bug",,,"I get this on both `master` and `develop`

```
$ . /Users/huygiang/src/github.com/powerline/powerline/powerline/bindings/zsh/powerline.zsh
zsh: permission denied:
zsh: permission denied:
```
"
1642,Use powerline daemon for running awesome bindings,2016-08-19T19:28:22Z,2017-04-01T12:31:43Z,"c:b:wm, t:bug",,,"Also adds functional tests for awesome bindings.

Replaces #1641
"
1641,Python process replication fix while restarting Awesome ,2016-08-18T20:11:31Z,2016-08-19T19:29:37Z,"c:b:wm, t:bug",,,"Hello,

I run into an issue with **powerline-awesome.py** replication while restarting **Awesome Window Manager**. After some investigation I've found that `ps -C powerline-awesome.py` is not returning proper results. At least in my version of `ps` (I'm using **Arch**):

> ps --version 
> ps from procps-ng 3.3.12

So I modified the `powerline/bindings/awesome/powerline.lua` a bit to use `ps aux` and `grep`  (which should work similarly on all Linux distributions - correct me if I'm wrong).

Finally I created this pull request to share my experience - feel free to reject it if it's useless :)

Lukasz

PS Keep up the good work! Powerline is really awesome!
"
1640,VCS module doesn't know about is_watching(),2016-08-18T08:19:38Z,,"c:VCS support, t:bug",AttributeError,AttributeError: 'functools.partial' object has no attribute 'is_watching',"This happens on openSUSE 42.1 with python 2.7.12:

```

python -c 'from powerline.lib.vcs import debug; debug()' $(pwd)
Watching /home/asn/workspace/projects/samba
Press Ctrl-C to exit.
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/usr/lib/python2.7/site-packages/powerline/lib/vcs/__init__.py"", line 269, in debug
    print ('Branch name: %s Status: %s' % (repo.branch(), repo.status()))
  File ""/usr/lib/python2.7/site-packages/powerline/lib/vcs/git.py"", line 93, in branch
    create_watcher=self.create_watcher,
  File ""/usr/lib/python2.7/site-packages/powerline/lib/vcs/__init__.py"", line 58, in get_branch_name
    is_watched = fw.is_watching(directory)
AttributeError: 'functools.partial' object has no attribute 'is_watching'
```
"
1639,"In fish shell, No prompt until manually calling powerline-setup. ",2016-08-18T01:33:36Z,2017-03-28T04:34:24Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"I am using fish version 2.3.1. 

I do not get the powerline prompt until I call powerline-setup. I tried putting powerline-setup at the top of my fish prompt but that does not do anything. Please let me know what information you need. 

Here is a screenshot. I do three things in that prompt:
1 start a new terminal
2 cd into a directory: you can see powerline not activated at this point
3) setup, then you can see it activated. 
http://imgur.com/a/WjaEG
"
1638,Use $TMUX_PANE if it is defined,2016-08-17T19:09:38Z,2016-08-18T15:52:37Z,"c:b:shell, c:b:tmux, t:enhancement",,,"Also closes #1637 in most cases
"
1637,"Setting up bash prompt inside tmux causes a ""sessions should be nested with care"" error",2016-08-17T16:35:41Z,2016-08-17T19:10:01Z,"c:b:shell, c:b:tmux, s:invalid:error in environment, t:bug",,,"I have bash prompt setup in my .bash_profile using the following

```
if [ $TERM == 'xterm-256color' -o $TERM == 'screen-256color' ]; then
    if alias | grep -q tmux; then
        unalias tmux
    fi
    if [ -z $TMUX ]; then
        powerline-daemon -q
    fi
    POWERLINE_BASH_CONTINUATION=1
    POWERLINE_BASH_SELECT=1
    source /usr/local/lib/python3.5/site-packages/powerline/bindings/bash/powerline.sh
fi

alias tmux='tmux new -A -s wombat'
```

I have tmux status line configured using 

```
source ""/usr/local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf""
```

Every time I start tmux, I get ""sessions should be nested with care"" error. It seems to be caused by the source command, if I remove it, I don't get the error, but I don't get the prompt either. If I run the source command from command line in a new bash window, I don't get the error.
"
1636,Custom window-status-format in tmux statusbar has to be added manually,2016-08-17T14:20:28Z,,"c:b:tmux, t:enhancement",,,"While powerline manages the `status-left` and `status-right` parts of the tmux statusbar using the json configuration, there is no way to edit the window display this way. 

Say I want the window title to show me the current hostname instead of the default (whether automatic-rename is on or off). I have to set the `window-status-format` to do it, but that overwrites the powerline background.
I could add it manually, but it would be more consistent if powerline handled it. Or describe a way to do it in the documentation, if for some reason it's not possible.

If I understand it correctly, the `window-status-format` is just in powerline format, because status-left was set by powerline before? Or am I getting something wrong here? I'm at least not seeing `window-status-format` being set using `tmux show-options`
"
1635,Shell prompt disappered,2016-08-13T10:46:55Z,,"c:b:shell, s:invalid:no information, t:bug",,,"My shell prompt i.e [username@hostname ~]$ disappeared when i ran powerline could you please tell me how to fix it. I am using bash shell on fedora 24
"
1634,Error in `/usr/bin/python': realloc(): invalid pointer,2016-08-12T08:05:09Z,2016-08-12T11:59:00Z,"s:invalid:foreign bug, t:bug",,,"Hello Guys,

I already installed the powerline-status by pip in my Ubuntu 14.04 ,and configured well.

But when I sshed to my Ubuntu 14.04 via putty, and repeatedly typed in Ctr+C in command line ,it showed ""Error in `/usr/bin/python': realloc(): invalid pointer"" and poped out the ""Fatal Python error: non-string found in code slot"" when I tried to open a new tmux seesion (FYI, I didn't create any tmux session before this), and showed ""couldn't find my command""(the English meaning of ""未能找到命令"") just like I typed the wrong command.

And the issue seemed existed int the powerline-render script,as shown in the image below

The powerline install information is shown below

   Name: powerline-status
Version: 2.5
Location: /usr/local/lib/python2.7/dist-packages

PS: I installed my Ubuntu 14.04 in VirtualBox .
![linux_python_error 2016-08-12_160442](https://cloud.githubusercontent.com/assets/1448776/17616301/6c3d5eea-60a6-11e6-8066-912099429c3a.jpg)
![linux_python_error 2016-08-12_160418](https://cloud.githubusercontent.com/assets/1448776/17616302/6c410216-60a6-11e6-8862-a0555278f9d6.jpg)

![Uploading erro.jpg…]()

How can I do with that ? Thank you
"
1633,Please create segments for TaskWarrior,2016-08-11T15:29:57Z,,"a:segment, c:common segments, t:enhancement",,,"I'd like to have segments in my config to display my current TaskWarrior context name and the current active task.

Could you create these?
"
1632,Terminal title does not refresh after disconnecting an ssh connection,2016-08-10T08:04:06Z,2017-02-05T10:16:47Z,"s:invalid:error in environment, t:bug",,,"On Linux Mint 18 Cinnamon.
To reproduce simply start an ssh connection and disconnect.
"
1631,Hidden external IP segment (in tmux) does not join the surrounding segments properly.,2016-08-09T01:39:00Z,2017-02-05T10:14:58Z,"c:b:tmux, t:bug",,,"Here is what I am referring to:
![2016-08-08-181803_474x61_scrot](https://cloud.githubusercontent.com/assets/6516167/17501660/a956cbb8-5d95-11e6-9e1d-468cbdb65d62.png)

This is the left most part of my tmux status bar. The segments are tmux session name, external IP and email count. Due to limited width on my monitor, the IP segment is  not shown. That is expected. However, the join between the two remaining segments is what I have the issue with. 

My tmux version is 2.1; 

powerline-status Version: 2.2.dev9999-git.44b2f91729a4c45099d0efe2b14fd02b8a7676e1

On a bigger monitor, it shows all three segments without a hitch. The separators between the IP and mail work fine. And if there is no new email, the IP segment shows up properly, with the hard divider. 
"
1630, powerline-daemon is not running when start tmux,2016-08-03T13:23:43Z,2016-08-04T14:09:30Z,"c:b:tmux, s:invalid:no information, t:bug",,,"When I start tmux looks like the  powerline-daemon is not running, and when I start it manually it works

my tmux.conf (I tried with run-shell and only with run)

```
run-shell 'powerline-daemon -q'

source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
set -g default-terminal ""screen-256color""

# scrollback size
set -g history-limit 10000

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# pass through xterm keys
set -g xterm-keys on


#binding Ctrl+a
set-option -g prefix C-a
bind-key C-a last-window
bind-key z setw synchronize-panes
set -g base-index 1
# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

bind-key C command-prompt -p ""Name of new window: "" ""new-window -n '%%'""

# reload config
bind r source-file ~/.tmux.conf \; display-message ""Config tmux reloaded...""

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'e' to begin selection as in Vim
bind-key -t vi-copy e begin-selection
bind-key -t vi-copy y copy-pipe ""reattach-to-user-namespace pbcopy""

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe ""reattach-to-user-namespace pbcopy""

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

```
"
1629,Powerline is not working with tmux 2.2,2016-08-02T15:12:44Z,2016-08-02T19:01:20Z,"c:core, s:invalid:error in environment, t:bug",ValueError,ValueError: unknown locale: UTF-8,"Tmux version: 2.2
powerline version: 2.5

I added the configs in my tmux.conf

```
run-shell 'powerline-daemon -q'
source '/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'
```

and when reload the the conf I got:

```
'powerline-daemon -q' returned 1
'powerline-config tmux setup' returned 1
```

running powerline-daemon -q in the command line I got:

```

Traceback (most recent call last):
  File ""/usr/local/bin/powerline-daemon"", line 18, in <module>
    from powerline.commands.main import finish_args, write_output
  File ""/usr/local/lib/python2.7/site-packages/powerline/commands/main.py"", line 17, in <module>
    encoding = get_preferred_arguments_encoding()
  File ""/usr/local/lib/python2.7/site-packages/powerline/lib/encoding.py"", line 89, in get_preferred_arguments_encoding
    locale.getdefaultlocale()[1]
  File ""/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/locale.py"", line 545, in getdefaultlocale
    return _parse_localename(localename)
  File ""/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/locale.py"", line 477, in _parse_localename
    raise ValueError, 'unknown locale: %s' % localename
ValueError: unknown locale: UTF-8
```

my locale are:

```
$ locale
LANG=
LC_COLLATE=""C""
LC_CTYPE=""UTF-8""
LC_MESSAGES=""C""
LC_MONETARY=""C""
LC_NUMERIC=""C""
LC_TIME=""C""
LC_ALL=
```

any tips?
"
1628,"""Above right"" shell segments align to the left on multiline setup",2016-07-29T05:06:36Z,2016-12-14T19:33:14Z,"c:b:shell, s:invalid:configuration error, t:bug",,,"I'm running Powerline with fish from tmux. I tried setting up a multiline shell prompt and received the following behavior on both fish and zsh:

![selection_009](https://cloud.githubusercontent.com/assets/9872501/17238250/e1e25e2e-5562-11e6-8e8e-8b40a47cbc6a.png)

I haven't yet tried to reproduce in a VM, so if there's an obvious thing I'm doing wrong, please point it out.

If it helps, here's the output of `env $POWERLINE_COMMAND shell right | xxd`:

```
00000000: 1b5b 306d                                .[0m
```

And here are the fish prompts:

``` fish
$ type fish_prompt                                                                                                                        
fish_prompt is a function with definition
function fish_prompt
    env $POWERLINE_COMMAND shell aboveleft --last-exit-code=$status --last-pipe-status=$status --jobnum=(jobs -p | wc -l) --renderer-arg=client_id=12917 --width=$_POWERLINE_COLUMNS --renderer-arg=mode=$fish_bind_mode --renderer-arg=default_mode=$_POWERLINE_DEFAULT_MODE
end
$ type fish_right_prompt                                                                                                                  
fish_right_prompt is a function with definition
function fish_right_prompt
    env $POWERLINE_COMMAND shell right --last-exit-code=$status --last-pipe-status=$status --jobnum=(jobs -p | wc -l) --renderer-arg=client_id=12917 --width=$_POWERLINE_COLUMNS --renderer-arg=mode=$fish_bind_mode --renderer-arg=default_mode=$_POWERLINE_DEFAULT_MODE
    echo -n "" ""
end
```

---

`~/.config/powerline/themes/shell/default.json`:

``` json
{
    ""segments"": {
        ""above"": [
            {
                ""left"": [
                    {
                        ""function"": ""powerline.segments.common.net.hostname"",
                        ""priority"": 10
                    },
                    {
                        ""function"": ""powerline.segments.common.env.user"",
                        ""priority"": 30
                    },
                    {
                        ""function"": ""powerline.segments.shell.cwd"",
                        ""priority"": 10
                    },
                    {
                        ""function"": ""powerline.segments.shell.jobnum"",
                        ""priority"": 20
                    }
                ],
                ""right"": [
                    {
                        ""function"": ""powerline_gitstatus.gitstatus"",
                        ""priority"": 40
                    },
                    {
                        ""function"": ""powerline.segments.common.time.date"",
                        ""name"": ""time"",
                        ""args"": {
                            ""format"": ""%H:%M:%S"",
                            ""istime"": true
                        }
                    },
                    {
                        ""function"": ""powerline.segments.shell.last_pipe_status"",
                        ""priority"": 10
                    },
                    {
                        ""function"": ""powerline.segments.common.env.virtualenv"",
                        ""priority"": 50
                    }
                ]
            }
        ],
        ""left"": [
            {
                ""function"": ""powerline.segments.shell.mode""
            },
            {
                ""function"": ""powerline.segments.shell.last_pipe_status"",
                ""priority"": 10
            },
            {
                ""function"": ""powerline.segments.common.time.date"",
                ""args"": {
                    ""format"": ""$""
                }
            }
        ],
        ""right"": [
        ]
    }
}
```

`~/.tmux.conf`:

``` tmux
set -g default-terminal ""screen-256color""
POWERLINE_CONFIG_PATHS=""$HOME/.config/powerline""
run-shell ""powerline-daemon -q""
source ""/usr/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf""
```

Minimal `config.fish`:

``` fish
set -gx POWERLINE_CONFIG_PATHS ""$HOME/.config/powerline""

set fish_function_path $fish_function_path ""/usr/lib/python3.5/site-packages/powerline/bindings/fish""
powerline-setup

source /usr/share/fish/functions/fzf.fish
```

Minimal `.zshrc`:

``` zsh
HYPHEN_INSENSITIVE=""true""
DISABLE_AUTO_UPDATE=""true""

if [[ -r /usr/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh ]]; then
    source /usr/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh
fi
```

Shell: `fish v2.3.1`, `zsh 5.2`
Python: `3.5.2`
OS: Manjaro (Arch Linux derivative)

```
$ pip show powerline-status

---
Metadata-Version: 1.1
Name: powerline-status
Version: 2.4
Summary: The ultimate statusline/prompt utility.
Home-page: https://github.com/powerline/powerline
Author: Kim Silkebaekken
Author-email: kim.silkebaekken+vim@gmail.com
License: MIT
Location: /usr/lib/python3.5/site-packages
Requires: 
Classifiers:
  Development Status :: 5 - Production/Stable
  Environment :: Console
  Environment :: Plugins
  Intended Audience :: End Users/Desktop
  License :: OSI Approved :: MIT License
  Natural Language :: English
  Operating System :: Microsoft :: Windows
  Operating System :: POSIX
  Programming Language :: Python :: 2.6
  Programming Language :: Python :: 2.7
  Programming Language :: Python :: 3.2
  Programming Language :: Python :: 3.3
  Programming Language :: Python :: 3.4
  Programming Language :: Python :: Implementation :: CPython
  Programming Language :: Python :: Implementation :: PyPy
```
"
1627,IPython (>=5.0.0) bindings needs to be updated,2016-07-27T12:32:26Z,2016-07-27T12:44:53Z,"c:b:ipython, s:duplicate, t:bug",ImportError,ImportError: cannot import name PromptManager,"Loading powerline extension as described in the documentation for IPython results in the following error:

``` python
$ ipython2
Python 2.7.12 (default, Jun 28 2016, 08:31:05) 
Type ""copyright"", ""credits"" or ""license"" for more information.

IPython 5.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.
[TerminalIPythonApp] WARNING | Error in loading extension: powerline.bindings.ipython.post_0_11
Check your config files in /home/avmo/.ipython/profile_default
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/IPython/core/shellapp.py"", line 246, in init_extensions
    self.shell.extension_manager.load_extension(ext)
  File ""/usr/lib/python2.7/site-packages/IPython/core/extensions.py"", line 83, in load_extension
    __import__(module_str)
  File ""/usr/lib/python2.7/site-packages/powerline/bindings/ipython/post_0_11.py"", line 6, in <module>
    from IPython.core.prompts import PromptManager
ImportError: cannot import name PromptManager

In [1]:                           
```
## How to replicate
- Use ipython==5.0.0 and powerline 2.4
- Follow instructions in http://powerline.readthedocs.io/en/master/usage/other.html#ipython-prompt
- Launch ipython.
## Reason

See https://raw.githubusercontent.com/ipython/ipython/000f321c8bed714d2fc776ef83b845b116610e87/docs/source/whatsnew/version5.rst

> The `PromptManager` class has been removed, and the prompt machinery simplified.
> See `custom_prompts` to customise prompts with the new machinery.
"
1626,Virtualenv Title is not centered,2016-07-23T03:11:31Z,2016-07-23T15:23:09Z,"c:b:shell, c:font, s:invalid:foreign bug, t:bug",,,"I'm using Konsole, the VIM statusline shows fine, but when a virtualenv is activated the name is oddly offset from the center:

![model1](https://cloud.githubusercontent.com/assets/6021771/17075450/9205c72a-5061-11e6-8158-ab4621adf6c1.png)
"
1625,add option to powerline.segments.vim.file_directory to abbreviate directory,2016-07-21T03:20:51Z,,"c:b:vim, t:enhancement",,,"by default vim will shorten ~/dev/blah/folder/file.c to ~/d/b/f/file.c which is usually specific enough to know what you're editing, but powerline by default only outputs the full path (with some other shortening options, if there is enough space), and the current filename.

when working across large project trees (sometimes even referencing a file from another project), the tabline fills up quickly, and a much shorter version of file_directory would be appreciated

essentially, i'm just asking for something similar to dir_shorten_len from powerline.segments.common.env.cwd
"
1624,"segment comes closer to prompt, moves in closer farther up the directory tree I go",2016-07-21T02:54:47Z,2016-07-23T02:35:30Z,"c:b:shell, s:invalid:foreign bug, t:bug",,,"I have a few computers with powerline on it, and have been running powerline for a long while now, no issues until recently when I moved one of my computers over to an AMD/FM2+ system. I have tried chrooting and rebuilding my environment from scratch to see if I had some sort of config issue, borrowing config and powerline environment from a working computer (other). And I have had no luck. It's been a while since I dug through powerline to try and follow how the segment horizontal offset is calculated. Right now I am at the point where this issue might be more effectively solved by bringing this up here since it might be something obvious I haven't laid my hands on.

Symptoms, under ZSH V 5.0.8 and 5.2 when ever there is a segment displayed (right side, be it VCS or an error of sorts) it is offset inward towards the prompt. It seems to shift in a few spaces every time I go in to another folder (further in to the tree). The cursor then goes back about 5-8 places in to the PS1, so it gets confused with the user name, and looks fairly ugly. Anyways, there is no issue with BASH, as it only occurs when a segment shows up, and then the cursor is misplaced.

If this sounds like an obvious issue or there are a few files I can look at in order to get some sort of start on troubleshooting I would appreciate it. Again, it's been a while since I dug through this, so I am kind of rusty on the organization/implementation. Right now I put powerline in a dot folder under any given user, and make the appropriate links and zshrc configs to get the daemon running. Gentoo, 64 bit, python 2.7.10 / 3.4.3

I am running some plugins right now (ZSH). I will continue to investigate my zshrc just to see if I can see anything that changes anything. 
"
1623,Error when using a lister to show workspaces,2016-07-20T00:52:02Z,2016-07-20T12:36:31Z,"c:b:wm, s:invalid:configuration error, t:bug",,,"I tried to use powerline with i3 + lemonbar. But when trying to show the workspaces with the ""powerline.segments.i3wm.workspaces""-function, the not-focused workspaces are shown in a list without spaces and not as segments. So I tried to use the powerline.listers.i3wm.workspace_lister with the following code:
`{ name"": ""i3 workspaces"",
""function"": ""powerline.listers.i3wm.workspace_lister"" }
`
But after that, some cryptic xml-style stuff is shown in the bar and the following error is written to the console:

> 2016-07-20 02:29:39,854:ERROR:wm:i3 Workspaces:Failed to compute segment contents: coercing to str: need a bytes-like object, generator found
> Traceback (most recent call last):
>  File ""/usr/lib/python3.5/site-packages/powerline/theme.py"", line 161, in get_segments
>    ) + segment['after']
>  File ""/usr/lib/python3.5/site-packages/powerline/lib/unicode.py"", line 41, in u
>    unicode(s, 'utf-8')
> TypeError: coercing to str: need a bytes-like object, generator found

The message in the bar isn't fully shown, just something like
`<generator object workspace_lister.<locals>.<genexpr> at 0x7f58...>`

EDIT: I start the bar with the following command:
`python <path-to-lemonbar-binding>/powerline-lemonbar.py --i3 --height 16 -- -f ""DejaVu Sans Mono for Powerline:size=10""`
"
1622,'auto' watcher exception loop,2016-07-19T20:07:33Z,2016-07-19T21:10:18Z,"c:watchers, s:wontfix, t:enhancement",,,"When `TreeWatcher.get_watcher` is called and watcher_type is set to `auto`, exceptions that are handled with try/except keep getting hit over and over again.

Specifically, I'm running into an inotify `DirTooLarge` in my main git repo, and the time/resources spent trying to return an `INotifyTreeWatcher` each time are wasteful.

I think it would be beneficial to reset `self.watcher_type` based on the first successful initialized watcher when we init `TreeWatcher` with `watcher_type=auto`
"
1621,reset last status code before calling zle reset-prompt,2016-07-18T23:47:47Z,2017-04-01T12:35:52Z,"c:b:shell, s:invalid:foreign bug, t:bug",,,"Currently, toggling modes in the Zsh line editor causes the `powerline.segments.shell.last_status` segment to be incorrectly cleared, because the return code of `_powerline_set_true_keymap_name $KEYMAP` fills the value of `$?` at draw time. This patch to `bindings/zsh/powerline.zsh` captures the last status code and restores it before redrawing the prompt.
"
1620,"Powerline seems not worked well with zsh and ""ZLE_RPROMPT_INDENT=0"".",2016-07-18T17:23:49Z,2016-07-18T18:08:47Z,"c:b:shell, s:invalid:foreign bug, t:bug",,,"![screenshot from 2016-07-19 01-00-56](https://cloud.githubusercontent.com/assets/1610614/16923934/549fd408-4d4f-11e6-8c77-982d06a88415.png)

OS: Arch Linux
zsh version: zsh 5.2 (x86_64-unknown-linux-gnu)
powerline version: powerline-status (2.5) from pip
"
1619,VCS Branch Segment Doesn't Display in Tmux,2016-07-13T21:11:36Z,2016-07-13T21:16:37Z,"c:VCS support, c:b:tmux, s:duplicate",,,"`$HOME/.config/powerline/themes/tmux/default.json`:

```
{
    ""segments"": {
        ""right"": [
            {
                ""function"": ""powerline.segments.common.time.date""
            },
            {
                ""function"": ""powerline.segments.common.vcs.branch""
            },
            {
                ""function"": ""powerline.segments.common.time.date"",
                ""name"": ""time"",
                ""args"": {
                    ""format"": ""%H:%M"",
                    ""istime"": true
                }
            },
            {
                ""function"": ""powerline.segments.common.net.hostname""
            }
        ]
    }
}
```

Screenshot:

![screenshot from 2016-07-13 14 10 44](https://cloud.githubusercontent.com/assets/347571/16819956/9bd05a0a-4903-11e6-9ade-cdb089632905.png)

The `git` binary is on my path, and all other segments display. Is there a way to debug _why_ the segment isn't being shown? I'm running the latest powerline release.
"
1618,Add support for IPython-5,2016-07-08T17:50:37Z,2016-07-09T22:40:11Z,"c:b:ipython, t:enhancement",,,"Fixes #1617 
"
1617,Powerline doesn't work with IPython 5.x,2016-07-08T08:55:14Z,2016-07-09T22:40:11Z,"c:b:ipython, t:bug",ImportError,ImportError: cannot import name PromptManager,"Just after run ipython one can see this:

``` python
[TerminalIPythonApp] WARNING | Error in loading extension: powerline.bindings.ipython.post_0_11
Check your config files in /home/local/GER/psocha/.ipython/profile_default
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/IPython/core/shellapp.py"", line 246, in init_extensions
    self.shell.extension_manager.load_extension(ext)
  File ""/usr/local/lib/python2.7/dist-packages/IPython/core/extensions.py"", line 83, in load_extension
    __import__(module_str)
  File ""/usr/local/lib/python2.7/dist-packages/powerline/bindings/ipython/post_0_11.py"", line 6, in <module>
    from IPython.core.prompts import PromptManager
ImportError: cannot import name PromptManager
```

Quick grep through IPython sources shows:

``` python
        if 'PromptManager' in self.config:
            warn('As of IPython 5.0 `PromptManager` config will have no effect'
                 ' and has been replaced by TerminalInteractiveShell.prompts_class')
```
"
1616,README: Use the svg Travis image,2016-07-08T07:52:11Z,2016-07-09T13:19:51Z,"c:documentation, t:enhancement",,,
1615,RE fish: No prompt until manually calling `powerline-setup`,2016-07-08T02:13:02Z,2016-07-08T08:38:59Z,s:invalid,,,"I want to reopen: https://github.com/powerline/powerline/issues/983

Because I still have the problem two years later, even with new versions. See my comment at end of that thread. 
"
1614,Fix trailing whitespace segment on Python 3.,2016-07-06T23:23:53Z,2016-07-10T00:02:09Z,"c:b:vim, t:bug",,,"Using str() on a bytestring produces the repr on Python 3, not some
implicitly decoded string. So use an explicit decode instead.

Fixes #1613.
"
1613,Trailing whitespace segment does not work on Python 3,2016-07-06T23:03:29Z,2016-07-10T00:02:09Z,"c:b:vim, t:bug",,,"The trailing whitespace segment indicates the wrong lines, due to [this line](https://github.com/powerline/powerline/blob/develop/powerline/segments/vim/__init__.py#L581). Running `str` on `bytes` does not automatically encode anything anymore. `str(b' \t')` creates a string `""b' \\t'""`, which means it doesn't just match whitespace, but also the letters b and t, plus a single quote and backslash.
"
1612,create segment for tmux-mem-cpu-load,2016-07-01T01:39:34Z,,"a:segment, c:common segments, t:enhancement",,,"Thank you for your work on powerline!

I was fiddling around with some segments this afternoon and ended up writing a segment for [tmux-mem-cpu-load](https://github.com/thewtex/tmux-mem-cpu-load). Should I make a pull request for the [addition](https://github.com/andreasgrv/powerline/commit/98bdcf5f1fb5bb69ca98df9ea975ca9810e2622a) or would it not be of no use?
"
1611,Cannot identify what this segment means,2016-06-28T03:34:32Z,2016-06-28T03:40:37Z,s:invalid,,,"So sorry for filing an issue about this but I've looked literally everywhere in the documentation for both powerline and oh-my-zsh, where I installed it from, and  and come up with nothing. What does this orange '1' mean in my power line status bar? 

![screenshot of oh-my-zsh power line status bar with unidentified notification](https://s31.postimg.org/5j73f1mpn/Screen_Shot_2016_06_28_at_1_25_00_PM.png)

I've been using powerline for a year or so and I've never seen it before. I'm in a repo, but it doesn't seem git related – as you can see in the screenshots it doesn't change when I add/commit/push. I don't think it's anything to do with anything needing an update, or else I would have seen it before. It's not a new email –  I don't have that plugin, and I have no unread emails. When I open another terminal tab in the same directory, the orange '1' segment is not there. When I cd to another directory in the first terminal window, the orange '1' _is_ still there.

I haven't really added much in the way of plugins, and I've left the configuration more or less how it came from `oh-my-zsh`. Basically, I'm stumped here. The 'problem' is, I think, that powerline has been working so transparently, and is so easy to use, that I haven't needed to learn anything about it – and now I feel pretty stupid. Any wisdom anyone could offer would be much appreciated, I'm going crazy not knowing even the most minor thing about my own machine lol.
"
1610,Arrow symbol code.,2016-06-22T11:16:19Z,2016-06-22T11:23:42Z,s:invalid,,,"I want to use arrow symbol. I installed patched fonts from https://github.com/powerline/fonts. What is char code of the arrow symbol?
"
1609,Misleading error when psutil unavailable,2016-06-14T06:05:47Z,2016-06-14T06:08:02Z,"c:common segments, s:invalid, t:bug",,,"When `python-psutil` is not installed, the following error is given:

```
2016-06-14 03:03:12,953:WARNING:shell:user:Failed to get username  
```

This can be misleading.

Note: tested on `fedora:latest` docker image without additional installs.
"
1608,Problem with 4-byte symbol output,2016-06-04T23:39:32Z,2016-06-05T09:22:13Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"I wanted to add a symbol to segment output. I didn't found proper way to do this, so I edited ExternalIpSegment.render in net.py file by adding symbol to ip:
`return [{'contents': u""\U0001F310"" + ip, 'divider_highlight_group': 'background:divider'}]`
symbol properly appears, but this happens:
![screenshot_20160605_023636](https://cloud.githubusercontent.com/assets/13075253/15802761/70d247ce-2ac6-11e6-94d8-113d5b20e6b5.png)
Every update it's growing. When I add 2-byte or ascii symbol everything is ok. Using tmux.
"
1607,Improve weather query,2016-06-04T18:23:34Z,2016-06-04T18:26:47Z,"c:common segments, s:invalid, t:bug",,,"#1596 does not seem to have been merged so opening this PR to remove use of the external lookup table for location_query.
"
1606,Tmux left side priority,2016-06-01T03:01:09Z,2016-06-01T06:50:51Z,"c:b:tmux, s:not a bug, t:bug",,,"Whenever I don't have enough width, I'd like for my right side components to disappear before it shrinks the left side. I tried setting the right side components' priority to something near 1000 but that still doesn't seem to work.

Is this a bug or intended behavior, and if it's intended, is there a way to change this behavior?
"
1605,Wrong sysfs filenames in battery segment?,2016-05-30T20:41:37Z,2016-12-14T18:00:41Z,"c:common segments, e:linux, t:bug",,,"Hello everybody!

I was looking at why the battery segment (segments/common/bat.py) wasn't working on my machine. Turned out it was looking for batteries in sysfs and specifically the files `energy_(full|now)`, which don't exist on my machine (Linux 4.5). Seems they are prefixed with `charged` instead `energy`. Changing it resulted in usual energy readings :).

Sven
"
1604,Allow for differently coloured email notifications for multiple mail …,2016-05-27T13:05:01Z,2016-05-27T13:56:09Z,"c:common segments, t:enhancement",,,"…accounts

Right what it says on the box ;-)
"
1603,Select symbols not being displayed under urxvt,2016-05-26T20:05:59Z,2016-05-26T20:40:53Z,"c:font, s:invalid:foreign bug, s:invalid:unsupported software, t:bug",,,"Some. but not all, Powerline symbols are not being shown for Airline in zsh. 

I'm using this for my font under .Xresources
`URxvt.font: xft:Hack-Regular:pixelsize=22,xft:PowerlineSymbols`

These are the symbols not being displayed, according to the airline help page

![sym](https://cloud.githubusercontent.com/assets/16902421/15588333/61bbea78-235b-11e6-9141-636af08a7d2b.png)

This is what airline looks like 

![vimerror](https://cloud.githubusercontent.com/assets/16902421/15588342/6e5b4274-235b-11e6-97d1-3c347e3319f6.png)

And this is what zsh looks like, there shoud be an 'x' where that box is

![zsherror](https://cloud.githubusercontent.com/assets/16902421/15588357/7ffd34a6-235b-11e6-8948-9c8a8f7c721d.png)

`$TERM` outputs to `rxvt-unicode-256color`
"
1602,`poweline-daemon` seems to corrupt rendering after restarting OSX,2016-05-18T07:43:20Z,2016-05-18T13:49:00Z,"c:b:shell, s:invalid:error in environment, t:bug",Notes,Notes:,"The status line rendered well up to a restart. After restarting my machine, and starting a new terminal session, the separators seem incorrect, and continues to be so until I issue `powerline-daemon --kill`. Here's a screen to explain:

![screen shot 2016-05-18 at 09 30 08](https://cloud.githubusercontent.com/assets/321520/15350894/69055ba0-1cdc-11e6-8ac2-f70e9526cc68.png)

Here is my installation location

```
pip show powerline-status

---
Metadata-Version: 1.1
Name: powerline-status
Version: 2.4
Summary: The ultimate statusline/prompt utility.
Home-page: https://github.com/powerline/powerline
Author: Kim Silkebaekken
Author-email: kim.silkebaekken+vim@gmail.com
License: MIT
Location: /Users/pavel/.local/lib/python2.7/site-packages
Requires:
Classifiers:
  Development Status :: 5 - Production/Stable
  Environment :: Console
  Environment :: Plugins
  Intended Audience :: End Users/Desktop
  License :: OSI Approved :: MIT License
  Natural Language :: English
  Operating System :: Microsoft :: Windows
  Operating System :: POSIX
  Programming Language :: Python :: 2.6
  Programming Language :: Python :: 2.7
  Programming Language :: Python :: 3.2
  Programming Language :: Python :: 3.3
  Programming Language :: Python :: 3.4
  Programming Language :: Python :: Implementation :: CPython
  Programming Language :: Python :: Implementation :: PyPy
```

Notes:
1. I have no local customizations.
2. I recently upgraded to iTerm2 Version 3 Beta (Build 2.9.20160510), but this issue occurs also in ""vanilla OSX Terminal"" app as well.

Please let me know if you need more info and I'll edit the issue to include it.
"
1601,Powerline does not show up on tmux 2.2,2016-05-17T02:35:44Z,,"c:b:tmux, t:bug",UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 0: ordinal not in range(128),"I was using tmux 1.8 and powerline was working fine. Then I upgraded to tmux 2.2 and, now instead of the powerline bar only the default green bar shows up on my Mac OsX (El Capitan - Version 10.11.4).

If I write on the command line - `powerline-config tmux setup` the following errors show up -

```
Traceback (most recent call last):
  File ""/Users/Nafiz/anaconda/bin/powerline-config"", line 22, in <module>
    args.function(pl, args)
  File ""/Users/Nafiz/anaconda/lib/python2.7/site-packages/powerline/commands/config.py"", line 15, in __call__
    self.function(*args, **kwargs)
  File ""/Users/Nafiz/anaconda/lib/python2.7/site-packages/powerline/bindings/config.py"", line 181, in tmux_setup
    tmux_version = get_tmux_version(pl)
  File ""/Users/Nafiz/anaconda/lib/python2.7/site-packages/powerline/bindings/tmux/__init__.py"", line 76, in get_tmux_version
    version_string = get_tmux_output(pl, '-V')
  File ""/Users/Nafiz/anaconda/lib/python2.7/site-packages/powerline/bindings/tmux/__init__.py"", line 37, in get_tmux_output
    return _run_tmux(lambda cmd: run_cmd(pl, cmd), args)
  File ""/Users/Nafiz/anaconda/lib/python2.7/site-packages/powerline/bindings/tmux/__init__.py"", line 27, in _run_tmux
    return runner([get_tmux_executable_name()] + list(args))
  File ""/Users/Nafiz/anaconda/lib/python2.7/site-packages/powerline/bindings/tmux/__init__.py"", line 37, in <lambda>
    return _run_tmux(lambda cmd: run_cmd(pl, cmd), args)
  File ""/Users/Nafiz/anaconda/lib/python2.7/site-packages/powerline/lib/shell.py"", line 34, in run_cmd
    p = Popen(cmd, shell=False, stdout=PIPE, stdin=PIPE)
  File ""/Users/Nafiz/anaconda/lib/python2.7/subprocess.py"", line 710, in __init__
    errread, errwrite)
  File ""/Users/Nafiz/anaconda/lib/python2.7/subprocess.py"", line 1335, in _execute_child
    raise child_exception
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 0: ordinal not in range(128)
```

My `.tmux.config` file has the following-

```
run-shell ""powerline-daemon -q""

source ""/Users/Nafiz/anaconda/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf""


# use 256 colors
set -g default-terminal ""screen-256color""
```

Any help will be appreciated.
"
1600,Poweline isn't installing the bash bindings.,2016-05-14T06:33:00Z,2016-05-14T06:56:48Z,"c:installation, s:invalid, t:bug",,,"I have cloned the git repo, I run setup.py build && setup.py install, but bash bindings aren't intsalled?

Why?
How to fix that?
"
1599,RHEL install fails with version number detection,2016-05-13T11:28:58Z,2016-05-13T14:08:47Z,"c:installation, s:invalid:unsupported software, t:bug",ValueError,"ValueError: (""Expected ',' or end-of-list in"", u'powerline-status==2.4.dev9999+git.d115012b3b442917dcdfb7ea674d3dc3c9da17ce', 'at', u'+git.d115012b3b442917dcdfb7ea674d3dc3c9da17ce')","pip install --user --editable={path}

fails with: 
ValueError: (""Expected ',' or end-of-list in"", u'powerline-status==2.4.dev9999+git.d115012b3b442917dcdfb7ea674d3dc3c9da17ce', 'at', u'+git.d115012b3b442917dcdfb7ea674d3dc3c9da17ce')
"
1598,Fix weather retrieval per @gsusrafael,2016-05-12T15:04:13Z,2016-05-15T10:39:41Z,"c:common segments, t:bug",,,"#1571

Credit for fix to @gsusrafael
Tested locally and is working.
"
1597,Glyphs using rxvt-unicode,2016-05-12T11:36:51Z,2016-05-12T14:39:39Z,"c:font, s:invalid:foreign bug, t:bug",,,"Hello,
I am using rxvt-unicode compiled with unicode3 and 256color with zsh as my shell. The font I use is Inconsolata. I installed powerline with apt-get and tried to use `Inconsolata for Powerline` that comes with the Installation. 
When is use this font with `URxvt.font: xft:Inconsolata for Powerline:size=15` the result is the following: 
![default](https://cloud.githubusercontent.com/assets/11629114/15213243/566cd274-1846-11e6-8413-96d473a835fc.png)

When I use the patched font installed in `~/.fonts/` as `Inconsolata for Powerline patched` the result looks like this:
![patched](https://cloud.githubusercontent.com/assets/11629114/15213269/80370426-1846-11e6-95db-e78f15007143.png)

For other terminals `Inconsolata for Powerline` works though (gnome-terminal, xfce4-terminal).

EDIT: Some clarification.
"
1596,segments/weather: improve weather query,2016-05-11T22:03:15Z,2016-05-15T10:37:54Z,"c:common segments, t:bug",,,"The weather query no longer depends on an external lookup table for
location codes.
"
1595,ZSH ImportError: No module named 'powerline' - Ubuntu 16.04,2016-05-11T15:49:13Z,2016-05-11T18:45:45Z,"c:b:shell, s:invalid:error in environment, t:bug","ImportError, NameError","ImportError: No module named 'powerline', NameError: name '_powerline_setup' is not defined","hi,
my zsh output

Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
ImportError: No module named 'powerline'
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name '_powerline_setup' is not defined
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name '_powerline_setup' is not defined
Traceback (most recent call last):  
  File ""<string>"", line 1, in <module>
NameError: name '_powerline' is not defined

this is my config in .zshrc
POWERLINE_CONFIG_COMMAND=/home/piero/.local/bin/powerline-config
source /home/piero/.local/lib/python2.7/site-packages/powerline_status-2.4-py2.7.egg/powerline/bindings/zsh/powerline.zsh

My python path
python -c ""import sys; import os; print(sys.path)""
['', '/home/piero/.local/lib/python2.7/site-packages/powerline_status-2.4-py2.7.egg', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/home/piero/.local/lib/python2.7/site-packages', '/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages/FontTools', '/usr/lib/python2.7/dist-packages/PILcompat', '/usr/lib/python2.7/dist-packages/gst-0.10', '/usr/lib/python2.7/dist-packages/gtk-2.0', '/usr/lib/pymodules/python2.7', '/usr/lib/python2.7/dist-packages/ubuntu-sso-client', '/usr/lib/python2.7/dist-packages/wx-3.0-gtk2']

install dir
piero@piero-laptop:~% ls -lrta /home/piero/.local/lib/python2.7/site-packages/powerline_status-2.4-py2.7.egg 
total 20
drwx------ 21 piero piero 4096 mag 11 16:26 ..
drwxrwxr-x  3 piero piero 4096 mag 11 16:26 EGG-INFO
drwxrwxr-x  2 piero piero 4096 mag 11 16:26 bin
drwxrwxr-x  5 piero piero 4096 mag 11 16:26 .
drwxrwxr-x 13 piero piero 4096 mag 11 16:26 powerline

i defined POWERLINE_CONFIG_COMMAND because initially I had this error
/home/piero/.local/lib/python2.7/site-packages/powerline_status-2.4-py2.7.egg/powerline/bindings/zsh/powerline.zsh:200: no such file or directory: /home/piero/.local/lib/python2.7/site-packages/powerline_status-2.4-py2.7.egg/scripts/powerline-config
/home/piero/.local/lib/python2.7/site-packages/powerline_status-2.4-py2.7.egg/powerline/bindings/zsh/powerline.zsh:204: no such file or directory: /home/piero/.local/lib/python2.7/site-packages/powerline_status-2.4-py2.7.egg/scripts/powerline-config

thanks for your support
"
1594,Add iTunes now playing segment.,2016-05-10T10:58:03Z,,"a:segment, c:players, e:macos, t:enhancement",,,"I wish I could add now playing segment from iTunes on OS X. I found [gist](https://gist.github.com/jenrzzz/980fed34dab65a6c74ae) in Google with segment what shows current music, but I don't know how to install it (or even test it). Can you enlighten me?
"
1593,powerline not appearing in zsh,2016-05-09T21:11:19Z,2016-05-10T16:52:24Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"Hi guys,

Arch Linux user here. I use rxvt-unicode. Powerline is not working for zsh, I followed the instructions and I've configured ~/.zshrc with the `powerline-daemon -q` and the `source /usr/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh` instruction. Already did a `whereis` to find out where python and powerline are, and I managed to put them into the `$PATH` environment variable so I ended up adding **/usr/lib/python3.5**, **/usr/bin/python3.5**,e **/usr/bin/powerline**. 

First time I installed it via `pacman`, tried uninstalling and going again with`pip`, nothing changed.  Manually running `source /usr/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh` does nothing.

I've already googled and searched for previous issues as well as looked up at the troubleshooting page, but can't really seem to find something that fits my case. Got any ideas? 

Thanks.

EDIT: pressing ` in the terminal makes a""Powerline-like"" tab appear. It says ""bquote"" in it. not really sure what that means though. Still have the issue 
"
1592,"Powerline with Tmux are ""ignoring"" (?) left side.",2016-05-09T20:50:15Z,2016-05-09T21:24:33Z,"c:b:tmux, s:duplicate, t:bug",,,"I have a weird problem with using Powerline with Tmux. It just ignoring my changes for left side of panel, right side works correctly. 

Screenshot: ![http://puu.sh/oM2oZ/39f447dd37.png](http://puu.sh/oM2oZ/39f447dd37.png)

My .tmux.conf file looks that:

```
set -g default-terminal ""screen-256color""
run-shell ""powerline-daemon -q""

# change shell to zsh
set-option -g default-shell /bin/zsh

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# use hjkl for moving
# and HJKL for resizing
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# don't rename windows automatically
set-option -g allow-rename off

######################
### DESIGN CHANGES ###
######################

source ""/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf""
```

I'm using OS X, tmux version is 2.1. What am I doing wrong?
"
1591,Mode-dependent highlighting color issue,2016-05-06T19:56:18Z,2016-05-06T21:01:43Z,"c:b:vim, s:invalid:foreign bug, t:bug",,,"Re-sizing your window can mess up with the colors:
![p1](https://cloud.githubusercontent.com/assets/14293802/15084632/bf8f2d72-13a2-11e6-8892-46165443745b.png)
INSERT becomes green...
![p2](https://cloud.githubusercontent.com/assets/14293802/15084635/c3ae0162-13a2-11e6-8312-ca37b010a1cf.png)
"
1590,[cygwin] powerline-config tmux setup consumes all available RAM,2016-05-06T19:47:04Z,2016-05-23T19:56:28Z,"c:b:tmux, e:cygwin, s:invalid:foreign bug, t:bug",,,"I recently had to reinstall my cygwin setup due to a hard drive failure. My binaries have been reinstalled, but my home directory was stored on a different drive and has remained intact. 

I have powerline installed from git (the stable version in pip has some kind of binary incompatibility). It works correctly for my shell and for vim, however since reinstalling it is now working incorrectly for tmux.

Upon running the command `powerline-config tmux setup` the computer becomes unresponsive, and task manager informs me that in just a few seconds powerline is consuming over 6GB of system memory. A few seconds later the cygwin process  and its subprocesses are killed by Windows.

Since my home environment hasn't changed I can only assume that a change in powerline since the last time I checked the repository out is the cause.
"
1589,Powerline symbols in (u)xterm and (u)rxvt are shown as squares or not shown at all.,2016-05-06T16:05:04Z,2016-05-08T02:01:43Z,"c:font, s:invalid:error in environment, t:bug",,,"I've seen a lot of threads and issues around the internet regarding this Issue but I can't find any solution that works for me.

Currently I use Gnome terminal on Ubuntu Gnome and **the powerline symbols are shown great**. I would like to start using `xterm`/`uxterm`  `rxvt`/`urxvt`. Although I slightly prefer `xterm` I wouldn't mind between choosing one of them but I can't make any of them work properly with the powerline symbols. I have tried already running: `rxvt -fn 'xft:DejaVu Sans Mono for Powerline-10'` as sugested in #684 but no luck.

This is my `~/.Xresources`:

```
xterm*facename: source code pro for powerline
xterm*font: 8x16
xterm*facesize: 16
xterm*utf: on
xterm*utf8: on
```

This is how my prompt looks like on xterm:
![screenshot from 2016-05-06 19-32-51](https://cloud.githubusercontent.com/assets/10998835/15079467/5ee291fc-13c1-11e6-88ec-c0ed7f704fde.png)

And this is how it looks on gnome-terminal:
![screenshot from 2016-05-06 19-34-15](https://cloud.githubusercontent.com/assets/10998835/15079504/895300b6-13c1-11e6-8e58-f177f8337b46.png)
"
1588,Separators disappearing on ALT+TAB,2016-05-05T15:19:49Z,2016-05-05T15:39:55Z,"s:invalid:foreign bug, t:bug",,,"I think it's easier to explain this issue with some pictures:

![2016-05-05-171533_1919x63_scrot](https://cloud.githubusercontent.com/assets/8199224/15047395/10d67b4a-12e5-11e6-9aad-a7a604e70de9.png)

This happens with all the separators:

![2016-05-05-171707_1919x65_scrot](https://cloud.githubusercontent.com/assets/8199224/15047414/2142f846-12e5-11e6-896e-937c9b1463e1.png)

It also happens with a different theme:

![2016-05-05-171850_1919x79_scrot](https://cloud.githubusercontent.com/assets/8199224/15047446/4d08a624-12e5-11e6-9a56-51189ee62718.png)

And with `emacs -Q` as well:

![2016-05-05-172008_1919x60_scrot](https://cloud.githubusercontent.com/assets/8199224/15047490/802f0480-12e5-11e6-8d73-7cb495778161.png)

I am using latest `powerline` from MELPA, on GNU Emacs 25.0.93.1 (x86_64-debian-linux-gnu, GTK+ Version 3.14.5) of 2016-05-05. 

All I do is switching between windows with ALT+TAB, and upon returning on the Emacs windows this is what I see.
"
1587,Python warning at startup,2016-05-04T22:07:37Z,2016-05-04T22:09:46Z,"c:b:vim, s:duplicate, s:invalid:unsupported software, t:bug",,,"I see this every time

```
~ ❯❯❯ vi
You need vim compiled with Python 2.6, 2.7 or 3.2 and later support
for Powerline to work. Please consult the documentation for more
details.
Press ENTER or type command to continue
```

Any ideas why? It didn't happen before I upgraded Ubuntu to 15.04 ...
"
1586,"Right hand prompt in zsh, when in git dir, always shows Master",2016-05-04T12:34:18Z,2016-05-04T17:07:07Z,"c:VCS support, c:b:shell, s:invalid:error in environment, t:bug",,,"I've noticed this started happening in the last few days, I've tried the powerline available via pip as well as 2.4-1.1 available via repos for openSUSE.

Using zsh, when I navigate in to a git directory the prompt on the right always shows I'm on the Master branch, regardless of whether I am on another branch.

I asked in the zsh irc channel, but since my $RPROMPT was for powerline they didn't know what it should look like and whether it was wrong.
"
1585,Fix left segments support in tmux-2.1,2016-04-30T13:27:11Z,2016-04-30T19:48:30Z,"c:b:tmux, t:bug",,,"Fixes #1583
"
1584,Broken after upgrade to Ubuntu Xenial,2016-04-25T22:44:29Z,2016-04-25T23:09:24Z,"c:b:vim, s:invalid:unsupported software, t:bug",,,"After upgrading the Ubuntu release, vim does not start with the Powerline anymore. No idea why.

And I see this every time

```
~/D/abc ❯❯❯ vi                                                                                 develop ✭
You need vim compiled with Python 2.6, 2.7 or 3.2 and later support
for Powerline to work. Please consult the documentation for more
details.
Press ENTER or type command to continue
```

In your documentation I couldn't find any hints on how to fix the above.
"
1583,tmux left side segments are being overwritten by everything else,2016-04-25T15:00:06Z,2016-04-30T19:48:30Z,"c:b:tmux, t:bug",,,"I have only one segment(IP address) on the left side of tmux. When I either start powerline or source tmux.conf, I see the segment show up momentarily, only to be overdrawn by the rest of the segments. 

![2016-04-25-094225_1918x157_scrot](https://cloud.githubusercontent.com/assets/6516167/14787683/12869d12-0aca-11e6-8b20-664cac5df089.png)

However, if I move the segment to the right, it shows up.
![2016-04-25-094630_1919x139_scrot](https://cloud.githubusercontent.com/assets/6516167/14787790/af726994-0aca-11e6-84dd-e7c2b1dd9faa.png)

The only difference is where I put the IP address segment.

The output for `powerline tmux left`

```
#[fg=colour247,bg=colour233,nobold,noitalics,nounderscore] 71.14.228.130 #[fg=colour233,bg=default,nobold,noitalics,nounderscore] 
```

For `powerline tmux right`

```
#[fg=colour160,bg=default,nobold,noitalics,nounderscore] #
[fg=colour231,bg=colour160,bold,noitalics,nounderscore] ✉ 2#
[fg=colour231,bg=colour160,nobold,noitalics,nounderscore] #
[fg=colour231,bg=colour160,bold,noitalics,nounderscore] ✉ 1#
[fg=colour236,bg=colour160,nobold,noitalics,nounderscore] #
[fg=colour252,bg=colour236,bold,noitalics,nounderscore] ⌚ 09:49#
[fg=colour233,bg=colour236,nobold,noitalics,nounderscore] #
[fg=colour231,bg=colour233,nobold,noitalics,nounderscore]  #
[fg=colour1,bg=colour233,nobold,noitalics,nounderscore]♥♥♥♥♥#
[fg=colour231,bg=colour233,nobold,noitalics,nounderscore]#
[fg=colour252,bg=colour233,nobold,noitalics,nounderscore] #
[fg=colour16,bg=colour252,bold,noitalics,nounderscore]  BlitzKomp
```

(newlines added by me for clarity, but were not present in the output)

My default theme (`themes/tmux/default.json`) : http://pastebin.com/CyGgeGGS
My tmux.conf : http://pastebin.com/jxgY3NiU
"
1582,New to powerline and needs some help,2016-04-23T18:48:02Z,2016-04-23T18:51:32Z,"c:b:shell, s:invalid:configuration error, t:bug",,,"I am fairly new to powerline. I am using plugin 'vim-airline' for vim and really like it so i want to change my Terminal prompt look to be the same/similar.

I am using OSX EI Captain. After went through all the installation process on official-doc, my Bash prompt doesn't look as anticipated.

I put following into my bash_profile.

``` bash
export PIP_INSTALL_HOME=/usr/local/lib/python2.7/site-packages # (using brew install python)
powerline -daemon -q
POWERLINE_BASH_CONTINUATION=1
POWERLINE_BASH_SELECT=1
. $PIP_INSTALL_HOME/powerline/bindings/bash/powerline.sh 
```

And here is how my bash prompt looks
<img width=""675"" alt=""screen shot 2016-04-23 at 2 44 59 pm"" src=""https://cloud.githubusercontent.com/assets/10333817/14763383/fe6b1a4c-0961-11e6-8783-9d2e070bf396.png"">

And my $PROMPT_COMMAND =

> powerline_set_prompt update_terminal_cwd

I just don't know how to approach this, thanks for any help!
"
1581,White space is missing on the left side,2016-04-23T07:58:15Z,,"c:b:tmux, t:bug",,,"I updated to Ubuntu 16.04 today and I had an annoying side-effect with tmux+powerline. I don't know if this problem is about tmux ou powerline. In the default theme, the current window shows an \* (asterisk) and the previous window shows an - (hyphen) after the window number. Until yesterday, the other windows showed a white space, keeping fixed the letters on the left side. Without the white space, the letters of the left side move when I switch between the windows. How do I add a white space after the window number? 
"
1580,VCS segment displaying incorrect branch info,2016-04-22T13:31:46Z,,"c:VCS support, t:bug",,,"vcs.branch segment shows the wrong branch name in certain repositories, however it ironically happens in my powerline fork. Any clue as to what could cause this? Behaviour is as expected in other repositories as far as I can tell. Also, dirty branch detection does work in the powerline repository.

![](http://koendercksen.com/files/2016-04-22-153300_556x190_scrot.png)
"
1579,provide a VCS stash segment,2016-04-22T13:28:02Z,2016-04-27T19:13:09Z,"a:segment, c:VCS support, t:enhancement",,,"Some version control systems have an area where changes can be stored as temporary work in progress instead of publishing them to the history, such as Git's ""stash"" or Mercurial's ""shelve"". Their count neatly displayed in powerlines similar to the branch name could remind a developer that there are still open ends left in his repository.

This pull requests sets up a segment doing so and provides an implementation for Git repositories. As it is my first take on the powerline source code, comments are much appreciated.
"
1578,Update README URLs based on HTTP redirects,2016-04-21T16:27:18Z,2016-04-21T19:36:43Z,"c:documentation, t:bug",,,"Created with https://github.com/dkhamsing/frankenstein
### GitHub Corrected URLs

| Was | Now |
| --- | --- |
| https://github.com/bling/vim-airline | https://github.com/vim-airline/vim-airline |
### Other Corrected URLs

| Was | Now |
| --- | --- |
| http://www.fsd.it/fonts/pragmatapro.htm | http://www.fsd.it/shop/fonts/pragmatapro |
"
1577,What do double question marks mean?,2016-04-20T20:04:34Z,2016-04-20T21:03:34Z,"c:VCS support, s:invalid",,,"I tried the documentation but couldn't find this anywhere.

![image](https://cloud.githubusercontent.com/assets/1276286/14688616/1f7d1d8a-0709-11e6-859d-6c0d4e433ed7.png)

Would like to know what the two red question marks represent. Sometimes I also see just a single one.
"
1576,Minute missing in tmux powerline,2016-04-20T07:57:51Z,2016-04-20T09:35:55Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"# Issue

Given that I installed powerline
When I open a tmux session
Then the powerline should be shown, including the full minutes
But instead, the second of the two minutes is always missing
## Info

See this screenshot, which displays the issue:
![missing_minute](https://cloud.githubusercontent.com/assets/1196244/14667107/c47eea6a-06dd-11e6-9666-d0374cd0bfd5.png)

The issue is not specific to a certain time.

OS: Arch linux
powerline version: `2.4-1`
tmux version: `2.2-1`
"
1575,tmux: powerline doesn't integrate because of removed configuration opition,2016-04-18T22:24:52Z,2016-04-18T22:25:34Z,"c:b:tmux, s:duplicate, t:bug",subprocess.CalledProcessError,"subprocess.CalledProcessError: Command '['tmux', 'set', '-g', 'status-utf8', 'on']' returned non-zero exit status 1","When I start tmux I get the basic green status bar, even with the most minimal configuration possible:

``` conf
source /usr/lib64/python3.5/site-packages/powerline/bindings/tmux/powerline.conf
```

When I run powerline-config tmux setup I get the following error:

```
unknown option: status-utf8
Traceback (most recent call last):
  ...
subprocess.CalledProcessError: Command '['tmux', 'set', '-g', 'status-utf8', 'on']' returned non-zero exit status 1
```

The traceback itself isn't very useful, but the stderr output of tmux is, looking at the tmux documentation, seting ""status-utf8"" has been unnecessary since the 1.0 release, it's auto-detected. When this was filed as a bug against tmux the advice was to remove the option (https://github.com/tmux/tmux/issues/230#), and I can confirm that for me (with tmux 2.2) removing that options from powerline-base.conf indeed fixes the issue and tmux+powerline works as expected.

I don't know how you want to handle this. I'd be happy to send a pull request to remove the configuration option, the documentation seems to suggest that it is safe to do so and it does fix my system with tmux 2.2, where it seems the option is not just deprecated by removed.
"
1574,Compatible with tmux 2.2,2016-04-17T20:19:42Z,2016-04-17T20:46:31Z,"c:b:tmux, s:duplicate, t:bug",subprocess.CalledProcessError,"subprocess.CalledProcessError: Command '['tmux', 'set', '-g', 'status-utf8', 'on']' returned non-zero exit status 1","tmux 2.2 is now detect utf8 automatically, hence the option `set-utf8 on` no longer works.

And, powerline for tmux crashed when trying to call that option from tmux config.

``` bash
➜  ~  powerline-config tmux setup
zsh: correct 'tmux' to '.tmux' [nyae]? n
unknown option: status-utf8
Traceback (most recent call last):
  File ""/usr/bin/powerline-config"", line 22, in <module>
    args.function(pl, args)
  File ""/usr/lib/python3.5/site-packages/powerline/commands/config.py"", line 15, in __call__
    self.function(*args, **kwargs)
  File ""/usr/lib/python3.5/site-packages/powerline/bindings/config.py"", line 212, in tmux_setup
    source_tmux_files(pl, args, tmux_version=tmux_version, source_tmux_file=stf)
  File ""/usr/lib/python3.5/site-packages/powerline/bindings/config.py"", line 74, in source_tmux_files
    source_tmux_file(os.path.join(TMUX_CONFIG_DIRECTORY, 'powerline-base.conf'))
  File ""/usr/lib/python3.5/site-packages/powerline/bindings/config.py"", line 199, in source_tmux_file_nosource
    run_tmux_command(*args)
  File ""/usr/lib/python3.5/site-packages/powerline/bindings/tmux/__init__.py"", line 32, in run_tmux_command
    _run_tmux(subprocess.check_call, args)
  File ""/usr/lib/python3.5/site-packages/powerline/bindings/tmux/__init__.py"", line 27, in _run_tmux
    return runner([get_tmux_executable_name()] + list(args))
  File ""/usr/lib/python3.5/subprocess.py"", line 584, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['tmux', 'set', '-g', 'status-utf8', 'on']' returned non-zero exit status 1
```

``` bash
➜  ~  tmux set -g status-utf8 on
unknown option: status-utf8
```

Full changelog of tmux: https://raw.githubusercontent.com/tmux/tmux/master/CHANGES
I'm using powerline 2.3 from stable release.
"
1573,"tmux statusbar is outdated : ""unknown option: status-utf8""",2016-04-17T18:35:47Z,2016-04-17T18:38:54Z,"c:b:tmux, s:duplicate, t:bug",,,"Today's tmux update broke the Powerline statusbar : 
`tmux set -g status-utf8 on` is no longer valid. 
Tmux returns `unknown option: status-utf8`.
"
1572,Symbol colors are off in iTerm2,2016-04-16T15:19:44Z,2016-04-16T15:30:51Z,"c:b:shell, s:invalid:foreign bug, t:bug",,,"Here's a screenshot of powerline in iTerm2 with patched fonts:

![screen shot 2016-04-16 at 11 17 47 am 1](https://cloud.githubusercontent.com/assets/866856/14581847/06f14576-03c5-11e6-8c25-bd5e14423cf3.png)

The symbols colors are off and I can't seem to get them to be the same color. I made sure that the contrast was correctly set in iTerm2. Any ideas?
"
1571,Weather segment no longer works due to Yahoo requiring OAuth,2016-04-16T08:49:34Z,2016-05-15T10:37:54Z,"c:common segments, t:bug",KeyError,KeyError: u'rss',"I just tried adding the weather segment, and got this error. After looking at it, it turns out that Yahoo has forced OAUTH on their weather API's.

```
2016-04-16 09:41:33,504:ERROR:tmux:WeatherSegment:Yahoo returned malformed or unexpected response: u'{""query"":{""count"":1,""created"":""2016-04-16T08:41:33Z"",""lang"":""en-US"",""results"":{""weather"":{""xmlns"":""http://where.yahooapis.com/v1/schema.rng"",""error"":{""lang"":""en-US"",""yahoo"":""http://www.yahooapis.com/v1/base.rng"",""uri"":""http://yahoo.com"",""description"":""Please provide valid credentials. OAuth oauth_problem=\\""OST_OAUTH_PARAMETER_ABSENT_ERROR\\"", realm=\\""yahooapis.com\\"""",""detail"":""Please provide valid credentials. OAuth oauth_problem=\\""OST_OAUTH_PARAMETER_ABSENT_ERROR\\"", realm=\\""yahooapis.com\\""""}}}}}'
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/powerline/segments/common/wthr.py"", line 146, in compute_state
    condition = response['query']['results']['weather']['rss']['channel']['item']['condition']
KeyError: u'rss'
```
"
1570,only show vim tabline with more than one buffer or tab,2016-04-14T08:54:35Z,2016-04-14T17:47:18Z,"c:b:vim, s:wontfix, t:enhancement",,,"I recently discovered that powerline can not only list tabs, but also buffers in vim - an extremely useful feature to me. But I found a detail that could be improved upon.

Currently, I can set vim's `showtabline` to `2`, showing it always, or to `1` showing it only when multiple tabs are open. I miss a setting to only show it when there is more than one tab or buffer open. As vim normally does not list buffers there at all, this is maybe an issue to powerline and not vim itself.

I do not know enough of vim to script when the tabbar should appear, but I found that its Python interface seems to have structures able to count both, as `:help python-tabpages` and `:help python-buffers` tell.
"
1569,Vim's quickfix window missing scroll percentage,2016-04-13T23:31:53Z,,"c:b:vim, s:not a bug, t:bug",,,"At a glance, I don't know how far I am in the buffer without the scroll percentage that's normally in bottom right of the quickfix (and location list) window.

Displaying current line and total lines may even be better e.g. ""25/500"", but powerline shouldn't display _less_ useful information than the default configuration.

With powerline:
![before](https://cloud.githubusercontent.com/assets/646121/14512476/3947efd0-0194-11e6-9782-16aa66df05c0.png)

Without powerline:
![beforer](https://cloud.githubusercontent.com/assets/646121/14512487/477648c2-0194-11e6-8219-f056ba4d133c.png)
"
1568,delete rogue whitespace,2016-04-13T21:36:45Z,2016-04-13T22:14:54Z,"c:VCS support, s:wontfix, t:enhancement",,,
1567,Add `short` param for system_load segment,2016-04-08T08:43:26Z,2016-04-08T20:36:50Z,"c:common segments, t:enhancement",,,
1566,Can't get powerline to work with tmux...,2016-04-07T15:17:38Z,,"c:b:tmux, s:invalid:error in environment, t:bug",,,"I'm using a virtual machine to run Ubuntu 15.10 and got powerline to work with Vim.  Trying to get it to work with tmux has been a challenge.  

After getting it to work with Vim I spent 2 days trying to get it to work in tmux with no avail.

So one day Ubuntu had updates so I installed them and rebooted and it started working!

Today I had Ubuntu updates again so I installed and rebooted and powerline for tmux(vim still works) stopped working and I'm not sure why?

This is what my ~/.tmux.conf looks like:
source ~/.local/lib/python3.4/site-packages/powerline/bindings/tmux/powerline.conf
set-option -g default-terminal ""screen-256color""

Thanks for anyone's help!
"
1565,Fix and update documentation concerning i3wm,2016-04-06T10:58:19Z,2016-04-07T17:07:09Z,"c:documentation, t:bug",,,"update dependencies for xrandr and i3ipc, fix a typo
"
1564,Powerline with tmux causes high CPU usage in tmux.,2016-04-05T06:16:18Z,2016-04-05T14:34:48Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"Removed items from .tmux.conf and kept restarting tmux until I saw the CPU usage drop. Usage remained high until I removed:

> source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

Started a few months ago, just finally lost patience with everything being so damn slow and started tracking it down.

Tried with and without the powerline -daemon with no change.

![screen shot 2016-04-04 at 3 40 58 pm](https://cloud.githubusercontent.com/assets/499317/14272762/b4645766-faba-11e5-9f92-9ebba00c0915.png)

> ## %> pip show powerline
> 
> Metadata-Version: 1.0
> Name: Powerline
> Version: beta
> Summary: The ultimate statusline/prompt utility.
> Home-page: https://github.com/Lokaltog/powerline
> Author: Kim Silkebaekken
> Author-email: kim.silkebaekken+vim@gmail.com
> License: UNKNOWN
> Location: /usr/local/lib/python2.7/site-packages
> Requires:
> Classifiers:
> 
> %> brew info tmux
> tmux: stable 2.1 (bottled), HEAD
> Terminal multiplexer
> https://tmux.github.io/
> /usr/local/Cellar/tmux/1.9a (16 files, 599.2K)
>   Poured from bottle
> /usr/local/Cellar/tmux/2.0 (16 files, 620.6K)
>   Poured from bottle
> /usr/local/Cellar/tmux/2.1 (15 files, 648.8K) *
>   Poured from bottle
> From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/tmux.rb
> ==> Dependencies
> Build: pkg-config ✔
> Required: libevent ✔
> ==> Caveats
> Example configuration has been installed to:
>   /usr/local/opt/tmux/share/tmux
> 
> Bash completion has been installed t
"
1563,"Official name for ""command"" mode is ""normal"" mode -> unified descript…",2016-04-03T14:38:13Z,2016-04-03T15:27:30Z,"c:b:shell, s:not a bug, t:bug",,,"…ion that powerline also uses in vim.
"
1562,Boxes instead of < and > for powerline,2016-04-03T07:56:19Z,2016-04-03T08:48:18Z,"c:font, s:invalid:error in environment, t:bug",,,"#823 I've refered to this Issue but I still can't solve my problem... Here's my current settings.

Here's my environment: (I'm using the KDE version)
`Linux Gene-Manjaro 4.4.6-1-MANJARO #1 SMP PREEMPT Sat Mar 19 06:00:37 CET 2016 x86_64 GNU/Linux`

![image](https://cloud.githubusercontent.com/assets/13523904/14231410/97c6fdfe-f9b4-11e5-95da-43bc5e94d03b.png)
"
1561,Increase socket backlog number for `powerline-daemon`,2016-03-29T16:20:11Z,2016-05-29T00:49:44Z,"c:daemon, e:freebsd, t:bug",,,"The number `1` for backlog is quite small.

On my FreeBSD box, I got this message:

```
Mar 28 19:01:43 imfsa kernel: sonewconn: pcb 0xfffff802088b25a0: Listen queue overflow: 2 already in queue awaiting acceptance (32 occurrences)
```

and

```
% netstat -na | grep fffff802088b25a0
ffffff802088b25a0 stream      0      0 fffff802088b25a0        0        0        0 /tmp/powerline-ipc-1001
```

Increasing the backlog number can solve the queue overflow problem.
"
1560,spotify segment in vim radically slows down vim,2016-03-29T10:39:23Z,,"c:players, t:enhancement",,,"Adding spotify to powerline-status in vim causes vim to horribly slow down, this is probably due to having to execute the applescript and fetching the song way more frequent than it's supposed to be. my observation is that it triggers with any vim-related movement (hjkl, mode changes...etc).

my `~/.vimrc` portion of the code regarding powerline is:
`run-shell ""powerline-daemon -q""`
`set rtp+=/usr/local/lib/python2.7/site-packages/powerline/bindings/vim`
`python from powerline.vim import setup as powerline_setup`
`python powerline_setup()`
`python del powerline_setup`

and my `/.config/powerline/themes/vim/default.json` is:

```
{
    ""segments"": {
        ""left"": [
            {
                ""function"": ""mode"",
                ""exclude_modes"": [""nc""]
            },
            {
                ""function"": ""visual_range"",
                ""include_modes"": [""v"", ""V"", ""^V"", ""s"", ""S"", ""^S""],
                ""priority"": 10
            },
            {
                ""function"": ""paste_indicator"",
                ""exclude_modes"": [""nc""],
                ""priority"": 10
            },
            {
                ""function"": ""powerline.segments.vim.plugin.capslock.capslock_indicator"",
                ""include_modes"": [""i"", ""R"", ""Rv""],
                ""priority"": 10
            },
            {
                ""function"": ""branch"",
                ""exclude_modes"": [""nc""],
                ""priority"": 30
            },
            {
                ""function"": ""readonly_indicator"",
                ""draw_soft_divider"": false,
                ""after"": "" ""
            },
            {
                ""function"": ""file_scheme"",
                ""priority"": 20
            },
            {
                ""function"": ""file_directory"",
                ""priority"": 40,
                ""draw_soft_divider"": false
            },
            {
                ""function"": ""file_name"",
                ""draw_soft_divider"": false
            },
            {
                ""function"": ""file_vcs_status"",
                ""before"": "" "",
                ""draw_soft_divider"": false
            },
            {
                ""function"": ""modified_indicator"",
                ""before"": "" ""
            },
            {
                ""exclude_modes"": [""i"", ""R"", ""Rv""],
                ""function"": ""trailing_whitespace"",
                ""display"": false,
                ""priority"": 60
            },
            {
                ""exclude_modes"": [""nc""],
                ""function"": ""powerline.segments.vim.plugin.syntastic.syntastic"",
                ""priority"": 50
            },
            {
                ""exclude_modes"": [""nc""],
                ""function"": ""powerline.segments.vim.plugin.tagbar.current_tag"",
                ""draw_soft_divider"": false,
                ""priority"": 50
            },
            {
                ""type"": ""string"",
                ""highlight_groups"": [""background""],
                ""draw_soft_divider"": false,
                ""draw_hard_divider"": false,
                ""width"": ""auto""
            }
        ],
        ""right"": [
            {
                ""function"": ""file_format"",
                ""draw_soft_divider"": false,
                ""exclude_modes"": [""nc""],
                ""priority"": 60
            },
            {
                ""function"": ""file_encoding"",
                ""exclude_modes"": [""nc""],
                ""priority"": 60
            },
            {
                ""function"": ""file_type"",
                ""exclude_modes"": [""nc""],
                ""priority"": 60
            },
            {
                ""function"": ""line_percent"",
                ""priority"": 50,
                ""width"": 4,
                ""align"": ""r""
            },
            {
                ""function"": ""csv_col_current"",
                ""priority"": 30
            },
            {
                ""type"": ""string"",
                ""name"": ""line_current_symbol"",
                ""highlight_groups"": [""line_current_symbol"", ""line_current""]
            },
            {
                ""function"": ""line_current"",
                ""draw_soft_divider"": false,
                ""width"": 3,
                ""align"": ""r""
            },
            {
                ""function"": ""powerline.segments.common.players.spotify""
            },
            {
                ""function"": ""virtcol_current"",
                ""draw_soft_divider"": false,
                ""priority"": 20,
                ""before"": "":"",
                ""width"": 3,
                ""align"": ""l""
            }

        ]
    }
}
```

I definitely think there should be a way to make rendering for spotify part at least execute every couple of seconds instead of the current state.

My setup is:
Mac OSX El captain 10.11 
I ran vim for this expirement from MacVim, vim inside iTerm2 with zsh, vim inside Terminal app with zsh. vim inside Tmux running on zsh from iTerm2.
results are not that different from each other. and all cases it is almost unusable.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/32357286-spotify-segment-in-vim-radically-slows-down-vim?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1559,Use proper dictionary for getting “elapsed” value in mpd bindings,2016-03-27T00:08:30Z,2016-03-27T00:08:34Z,"c:players, t:bug",,,"Fixes #1550
"
1558,Fix a few typos/strange wording in installation/osx.rst,2016-03-24T20:18:59Z,2016-03-24T20:19:02Z,"c:documentation, t:bug",,,
1557,Fix OS X installation guide little formatting issues and phrasing,2016-03-24T16:19:24Z,2016-03-24T20:16:00Z,"c:documentation, t:bug",,,
1556,Fix LC_MESSAGES AttributeError,2016-03-24T02:10:40Z,2016-03-24T19:55:21Z,"c:lib, e:windows, t:bug",,,"Adds code to check if locale has the 'LC_MESSAGES' attribute before
executing the following line of code:

```
locale.getlocale(locale.LC_MESSAGES)[1]
```

Fixes #1555
"
1555,Windows Python seems to lack locale.LC_MESSAGES,2016-03-24T01:31:11Z,2016-03-24T19:55:21Z,"c:lib, e:windows, t:bug",AttributeError,AttributeError: 'module' object has no attribute 'LC_MESSAGES',"When I attempt to open a file in a .git repository with Vim + Powerline I get the following error displayed in Vim's command line:

```
AttributeError: 'module' object has no attribute 'LC_MESSAGES'
```

If I execute the :messages command in Vim's commandline I get the following stack trace:

```
""D:\Users\Wolf\Copy\Documents\Projects\Visual Studio\Visual Studio 2015\Projects\SteamDesktopAuthenticator\lib\SteamAuth\SteamAuth\TimeAligner.cs"" [unix] 84L, 2776C
2016-03-23 04:26:15,427:ERROR:vim:file_vcs_status:Exception while computing segment: 'module' object has no attribute 'LC_MESSAGES'
Traceback (most recent call last):
  File ""C:\Program Files (x86)\Vim\vimfiles\bundle\powerline\powerline\segment.py"", line 173, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""C:\Program Files (x86)\Vim\vimfiles\bundle\powerline\powerline\segment.py"", line 412, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""C:\Program Files (x86)\Vim\vimfiles\bundle\powerline\powerline\segments\vim\__init__.py"", line 525, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""C:\Program Files (x86)\Vim\vimfiles\bundle\powerline\powerline\lib\vcs\git.py"", line 82, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""C:\Program Files (x86)\Vim\vimfiles\bundle\powerline\powerline\lib\vcs\__init__.py"", line 131, in get_file_status
    file_status_cache[keypath] = ans = get_func(directory, file_path)
  File ""C:\Program Files (x86)\Vim\vimfiles\bundle\powerline\powerline\lib\vcs\git.py"", line 177, in do_status
    return next(self._gitcmd(directory, 'status', '--porcelain', '--ignored', '--', path))[:2]
  File ""C:\Program Files (x86)\Vim\vimfiles\bundle\powerline\powerline\lib\shell.py"", line 58, in readlines
    encoding = get_preferred_input_encoding()
  File ""C:\Program Files (x86)\Vim\vimfiles\bundle\powerline\powerline\lib\encoding.py"", line 61, in get_preferred_input_encoding
    locale.getlocale(locale.LC_MESSAGES)[1]
```

Upon examining the method get_preferred_input_encoding() in lib\encoding.py I found the issue to be the following line of code:

```
locale.getlocale(locale.LC_MESSAGES)[1]

Note: get_preferred_output_encoding() also contains this line.
```

So when I call this code directly in a python 2.7.10 instance, I got the same AttributeError: (happens in clean virtual machine images of Windows 7 and Windows 10 + fresh installs of Python 2.7.10 so its either a windows-only bug or it just happens for this version of Python):

```
Microsoft Windows [Version 10.0.10240]
(c) 2015 Microsoft Corporation. All rights reserved.

C:\Users\Wolf>python
Python 2.7.10 (default, May 23 2015, 09:40:32) [MSC v.1500 32 bit (Intel)] on win32
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import locale
>>> locale.getlocale(locale.LC_MESSAGES)[1]
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
AttributeError: 'module' object has no attribute 'LC_MESSAGES'
>>>
```

And in my own testing I was able to fix the issue for get_preferred_output_encoding(), and similarly for get_preferred_input_encoding(), with the following modification:

if hasattr(locale, 'LC_MESSAGES'):
    return (
        locale.getlocale(locale.LC_MESSAGES)[1]
        or locale.getdefaultlocale()[1]
        or 'ascii'
    )

return (
    locale.getdefaultlocale()[1]
    or 'ascii'
)
"
1554,zsh plugin not working,2016-03-22T19:41:44Z,2016-03-23T15:01:19Z,"c:b:shell, s:invalid:configuration error, t:bug",,,"On my system (archlinux) the zsh plugin is not working. There is no error message but the prompt is not changed from the normal grml-zsh-config prompt. However, when using multi-line inputs, the prompt changes e.g. to `cond` and `for` correctly. The bash, tmux and vim plugins work correctly.

I use:
zsh 5.2
powerline 2.3
rxvt-unicode 9.22
My `.zshrc` sources the `.zshrc.local`, its last lines are:

```
powerline-daemon -q
source /usr/lib/python3.5/site-packages/powerline/bindings/zsh/powerline.zsh
```
"
1553,Fix command-t tests,2016-03-22T12:09:43Z,2016-04-08T17:58:12Z,"c:b:vim, t:bug",,,
1552,More specific instructions for iPython,2016-03-22T11:55:58Z,2016-03-22T12:11:36Z,"c:documentation, t:enhancement",,,"This PR is improving documentation about how to integrate Powerline with iPython. Tested on Arch Linux and Ubuntu.
"
1551,More specific instructions for iPython,2016-03-22T11:12:28Z,2016-03-22T11:47:58Z,"c:documentation, s:invalid, t:enhancement",,,"This PR is improving documentation about how to integrate Powerline with iPython. Tested on Arch Linux and Ubuntu.
"
1550,powerline.segments.common.players.mpd: {elapsed} format is None,2016-03-21T01:55:26Z,2016-03-27T00:08:34Z,"c:players, t:bug",,,"Music Player Daemon: 0.19.9
Powerline: powerline-2.3-1.fc23.src.rpm
tmux: 2.1

I am using the MPD segment with tmux. I tried dumping out all the valid format items for the player:

`~/.config/powerline/config.json`

```
{
    ""common"": {
        ""log_file"": ""/tmp/powerline.log"",
        ""log_level"": ""DEBUG""
    },
    ""ext"": {
        ""shell"": {
            ""colorscheme"": ""default"",
            ""theme"": ""default_leftonly"",
            ""local_themes"": {
                ""continuation"": ""continuation"",
                ""select"": ""select""
            }
        },
        ""tmux"": {
            ""theme"": ""mpd""
        }
    }
}
```

`~/.config/powerline/themes/tmux/mpd.json`

```
{
    ""segments"": {
        ""right"": [
            {
                ""function"": ""powerline.segments.common.players.mpd"",
                ""name"": ""player"",
                ""args"": {""format"": ""{state_symbol} {album} {artist} {title} {elapsed} {total}""},
                ""priority"": 70
            },
            {
                ""function"": ""powerline.segments.common.sys.uptime"",
                ""priority"": 50
            },
            {
                ""function"": ""powerline.segments.common.net.hostname""
            }
        ]
    }
}
```

Everything looks OK during playback except {elapsed} always evaluates to None. The log shows nothing unusual.
"
1549,Make Popen.communicate receive only bytes,2016-03-19T19:53:27Z,2016-03-19T20:35:46Z,"c:lib, t:bug",,,"Fixes #1547
Closes #1548
"
1548,fix asrun to pass bytes instead of a string to run_cmd,2016-03-19T18:39:39Z,2016-03-19T20:05:50Z,"e:macos, t:bug",,,
1547,run_cmd: Popen.communicate doesn't take a string,2016-03-17T23:04:39Z,2016-03-19T20:35:46Z,"c:lib, t:bug",,,"`powerline.lib.shell.run_cmd` function calls `Popen.communicate(stdin)`.
`powerline.lib.shell.asrun` function calls `run_cmd` and passes `ascript` to its 3rd argument (`stdin`).
`powerline.segments.common.spotify` calls `asrun` with an apple script of type ""string"".

But according to Python [2.7](https://docs.python.org/2/library/subprocess.html) and [3.5](https://docs.python.org/3/library/subprocess.html) docs, `Popen.communicate` takes a ""data"", not a ""string"".

So as a result, `spotify_apple_script` doesn't work and complain about expecting bytes but receiving str, throws an error.
"
1546,Right arrow fine but left arrow not rendered in tmux,2016-03-16T20:57:12Z,2016-03-16T22:09:22Z,"c:b:tmux, s:invalid:error in environment, t:bug",,,"![screenshot from 2016-03-17 01-58-39](https://cloud.githubusercontent.com/assets/1254236/13827669/dbe6a0d6-ebe3-11e5-9f15-7efd69c4bcc7.png)

I have set up the configuration as described in [the docs](https://powerline.readthedocs.org/en/latest/usage/other.html#tmux-statusline).

gnome-terminal font: ""Roboto Mono for Powerline Regular""

Shell: zsh with oh-my-zsh (theme: robbyrussell)

Config dump below:

```
[ms] ➜  ~ tmux -V
tmux 2.0
[19ms] ➜  ~ tmux show-options -g
@continuum-save-last-timestamp ""1458159665""
@plugin ""tmux-plugins/tmux-continuum""
@resurrect-restore-script-path ""/home/user1/.tmux/plugins/tmux-resurrect/scripts/restore.sh""
@resurrect-save-script-path ""/home/user1/.tmux/plugins/tmux-resurrect/scripts/save.sh""
@resurrect-strategy-irb ""default_strategy""
assume-paste-time 1
base-index 0
bell-action any
bell-on-alert off
default-command """"
default-shell ""/usr/bin/zsh""
destroy-unattached off
detach-on-destroy on
display-panes-active-colour red
display-panes-colour blue
display-panes-time 1000
display-time 4000
history-limit 50000
lock-after-time 0
lock-command ""lock -np""
lock-server on
message-command-style fg=yellow,bg=black
message-style fg=black,bg=yellow
mouse-resize-pane off
mouse-select-pane off
mouse-select-window off
mouse-utf8 on
prefix C-b
prefix2 none
renumber-windows off
repeat-time 500
set-remain-on-exit off
set-titles off
set-titles-string ""#S:#I:#W - ""#T""""
status on
status-interval 2
status-justify left
status-keys emacs
status-left ""#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold]#[noitalics]#[nounderscore],#[fg=colour16]#[bg=colour254]#[bold]#[noitalics]#[nounderscore]} #S #{?client_prefix,#[fg=colour31],#[fg=colour254]}#[bg=colour233]#[nobold] #(env \$POWERLINE_COMMAND \$POWERLINE_COMMAND_ARGS tmux left --width=`tmux display -p '#{client_width}'` -R width_adjust=`tmux show-options -g status-right-length | cut -d' ' -f2` -R pane_id=""`tmux display -p '#D'`"")""
status-left-length 20
status-left-style default
status-position bottom
status-right ""#(env ""$POWERLINE_COMMAND"" $POWERLINE_COMMAND_ARGS tmux right -R pane_id=""`tmux display -p ""#D""`"" --width=`tmux display -p ""#{client_width}""` -R width_adjust=`tmux show-options -g status-left-length | cut -d"" "" -f 2`)""
status-right-length 150
status-right-style default
status-style fg=colour231,bg=colour233
status-utf8 on
update-environment ""DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY""
visual-activity off
visual-bell off
visual-silence off
word-separators "" -_@""
[17ms] ➜  ~  
[17ms] ➜  ~ 
[17ms] ➜  ~ 
[17ms] ➜  ~ 
[17ms] ➜  ~ zsh --version
zsh 5.1.1 (x86_64-ubuntu-linux-gnu)
[14ms] ➜  ~  
[14ms] ➜  ~  
[14ms] ➜  ~  
[14ms] ➜  ~  
[14ms] ➜  ~  cat .tmux.conf
setw -g mode-keys vi # I especially like being able to search with /,? when in copy-mode
bind-key C-y run ""tmux show-buffer | xclip -sel clip -i"" \;
bind-key -n C-Left previous-window
bind-key -n C-Right next-window
#shift arrow to change panes
bind-key -n S-Left select-pane -L
bind-key -n S-Right select-pane -R
bind-key -n S-Up select-pane -U
bind-key -n S-Down select-pane -D
set -g status-right ""#(battery Discharging; battery Charging) | %e %B %R""
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# set the panes to copy same path
bind '""' split-window -c ""#{pane_current_path}""
bind % split-window -h -c ""#{pane_current_path}""

run-shell ""powerline-daemon -q""
source ""/home/user1/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf""
[21ms] ➜  ~ 
[21ms] ➜  ~ env | grep LC_                                                         
LC_IDENTIFICATION=en_US.UTF-8
LC_TIME=en_US.UTF-8
LC_NUMERIC=en_US.UTF-8
LC_PAPER=en_US.UTF-8
LC_MEASUREMENT=en_US.UTF-8
LC_ADDRESS=en_US.UTF-8
LC_MONETARY=en_US.UTF-8
LC_NAME=en_US.UTF-8
LC_TELEPHONE=en_US.UTF-8
LC_CTYPE=en_IN
LC_ALL=en_US.UTF-8
[14ms] ➜  ~  
[14ms] ➜  ~  
[14ms] ➜  ~  
[14ms] ➜  ~  
[14ms] ➜  ~  env | grep LANG
LANG=en_US.UTF-8
```

Let me know if I need to put more info here.
"
1545,uninstall,2016-03-16T12:38:51Z,2016-03-16T13:08:20Z,s:invalid:no information,,,
1544,tmux-powerline: environment variable pops up in tmux 2.1 statusbar,2016-03-16T07:58:26Z,2016-03-16T10:29:39Z,"c:b:tmux, s:duplicate, t:bug",,,"More information: https://bugzilla.redhat.com/show_bug.cgi?id=1318155
"
1543,Powerline/zsh extremely slow in git repos with large file counts,2016-03-14T12:48:18Z,2016-03-14T14:44:17Z,"c:b:shell, s:wontfix, t:bug",,,"Hey,

I'm finding zsh with powerline takes a long time to finish commands such as `ls`, `cd` in git repos with high file counts.. Is this a known issue? 

For example, the following project:

https://github.com/shakacode/react-webpack-rails-tutorial

Once npm install is run on this, the directory and its subdirectories will contain around 32000 files. The vast majority are `.gitignore`d, but the presence of so many files in a git repo seems to be the deciding factor for the massive slow downs I'm seeing: Powerline/zsh are really speedy in the root directory, and in repos with a low file count. In rbenv's gem installation paths, eg `$HOME/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/railties-4.2.2`, or just generally under `$/.rbenv` (190~k files) things slow down heavily, but in a normal rails project everything is fine.

In the above project, the `client/node_modules` directory is the main offender, containing 29000 of the 32000 files. Note however that the problem is still exhibited in subdirectories outside of `node_modules`, eg `:/app/models`.
"
1542,Add segments.i3wm.scratchpad,2016-03-09T21:23:05Z,2016-03-20T00:50:45Z,"a:segment, c:b:wm, t:enhancement",,,"Tests are missing but this needs to wait until acrisci/i3ipc-python#26 gets merged anyway
"
1541,Issue with konsole and zsh,2016-03-09T05:56:38Z,2016-03-09T10:11:17Z,"c:b:tmux, s:invalid:error in environment, t:bug",,,"I am using zsh with Konsole and this is what I am seeing when I run tmux.
![snapshot1](https://cloud.githubusercontent.com/assets/5670927/13626590/61ae0840-e5e9-11e5-9654-9f9597abfe01.png)

Instead of seeing the arrow symbols and other font, I am just seeing a vertical line. What should be done so that it looks like in the screenshot
"
1540,docs/source/usage/other.rst: fix typo in note,2016-03-06T18:55:22Z,2016-03-07T06:16:50Z,"c:documentation, t:bug",,,
1539,Daemon not used by awesome binding ,2016-03-04T19:12:56Z,2016-03-04T19:16:08Z,"c:b:wm, s:not a bug, t:bug",,,"I'm using the binding for awesome WM and when inspecting powerline daemon system calls with `strace` I  can't see any activity at all (while I seen activity from tmux binding for example).

Given that I'm using the same segments that i use in tmux, I should see a similar activity (for example fopen() for battery related `/proc/` files).
"
1538,tmux quirky status line,2016-03-02T17:09:08Z,2016-03-02T19:40:40Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"Having an issue with tmux. I set it up as per the instructions on the site yet when I load it up, I get the status bar that stacks on top of each other. as well as an error within my prompt. It is non-existant. I had to ctrl-c and I get these errors. 
![Image1](https://dl.dropboxusercontent.com/u/9377605/Screen%20Shot%202016-03-02%20at%2011.35.18%20AM.png)
"
1537,Cannot install with instructions provided. ,2016-02-29T19:42:05Z,2016-02-29T20:38:35Z,"e:macos, s:invalid:error in environment, t:bug","Exception, OSError, IOError","Exception:, OSError: [Errno 13] Permission denied: '/Library/Python/2.7/site-packages/powerline', IOError: [Errno 1] Operation not permitted: '/System/Library/Frameworks/Python.framework/Versions/2.7/bin/powerline'","Hey guy. I reset my path. i have reinstalled pip. I have done all that I can Could you please not just close the issue when the issue still exists. 

I have installed pip from scratch, and then ran `pip install powerline-status` 

I got an error that read 

```
$ pip install powerline-status
Collecting powerline-status
Installing collected packages: powerline-status
Exception:
Traceback (most recent call last):
  File ""/Library/Python/2.7/site-packages/pip/basecommand.py"", line 209, in main
    status = self.run(options, args)
  File ""/Library/Python/2.7/site-packages/pip/commands/install.py"", line 317, in run
    prefix=options.prefix_path,
  File ""/Library/Python/2.7/site-packages/pip/req/req_set.py"", line 731, in install
    **kwargs
  File ""/Library/Python/2.7/site-packages/pip/req/req_install.py"", line 845, in install
    self.move_wheel_files(self.source_dir, root=root, prefix=prefix)
  File ""/Library/Python/2.7/site-packages/pip/req/req_install.py"", line 1044, in move_wheel_files
    isolated=self.isolated,
  File ""/Library/Python/2.7/site-packages/pip/wheel.py"", line 343, in move_wheel_files
    clobber(source, lib_dir, True)
  File ""/Library/Python/2.7/site-packages/pip/wheel.py"", line 314, in clobber
    ensure_dir(destdir)
  File ""/Library/Python/2.7/site-packages/pip/utils/__init__.py"", line 82, in ensure_dir
    os.makedirs(path)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.py"", line 157, in makedirs
    mkdir(name, mode)
OSError: [Errno 13] Permission denied: '/Library/Python/2.7/site-packages/powerline'
```

I'm not sure if the last part is important The OSError...

Then I tried to install via `sudo` and got this. 

```
$ sudo pip install powerline-status
The directory '/Users/rrobin008c/Library/Caches/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
The directory '/Users/rrobin008c/Library/Caches/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
Collecting powerline-status
Installing collected packages: powerline-status
Exception:
Traceback (most recent call last):
  File ""/Library/Python/2.7/site-packages/pip/basecommand.py"", line 209, in main
    status = self.run(options, args)
  File ""/Library/Python/2.7/site-packages/pip/commands/install.py"", line 317, in run
    prefix=options.prefix_path,
  File ""/Library/Python/2.7/site-packages/pip/req/req_set.py"", line 731, in install
    **kwargs
  File ""/Library/Python/2.7/site-packages/pip/req/req_install.py"", line 845, in install
    self.move_wheel_files(self.source_dir, root=root, prefix=prefix)
  File ""/Library/Python/2.7/site-packages/pip/req/req_install.py"", line 1044, in move_wheel_files
    isolated=self.isolated,
  File ""/Library/Python/2.7/site-packages/pip/wheel.py"", line 375, in move_wheel_files
    clobber(source, dest, False, fixer=fixer, filter=filter)
  File ""/Library/Python/2.7/site-packages/pip/wheel.py"", line 321, in clobber
    shutil.copyfile(srcfile, destfile)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py"", line 83, in copyfile
    with open(dst, 'wb') as fdst:
IOError: [Errno 1] Operation not permitted: '/System/Library/Frameworks/Python.framework/Versions/2.7/bin/powerline'
```

While this did result in an error, I noticed that teh `powerline` directory was created. 

I made sure to export my path to include PIP and Python
currently `powerline` path is `/Library/Python/2.7/site-packages/powerline`

and I have exported the path into 
`export PATH=""$PATH:$HOME/Library/Python/2.7/site-packages""`

What am I doing wrong exactly?
"
1536,Unable to locate sites-enabled/scripts folder for zsh,2016-02-29T18:56:27Z,2016-02-29T19:15:19Z,"c:installation, e:macos, s:duplicate, s:invalid:error in environment, t:bug",,,"So i installed the power line, and I am getting an error. 

When i try and `source ""/Library/Python/2.7/site-packages/powerline/bindings/zsh/powerline.zsh""`

Im getting an error for unk directory. 

its not there. Im curious if I installed it wrong, or if this is a bug. 
"
1535,vcs.branch segment does not appear in tmux,2016-02-27T19:06:29Z,2016-02-27T19:51:28Z,"c:VCS support, c:b:tmux, s:invalid:configuration error, t:bug",,,"I attempted to add the vcs.branch segment to powerline in tmux but it does not appear when I change my working directory to a directory containing a git repository.

Interestingly enough, if I source /usr/local/lib/python2.7/dist-packages/powerline/bindings/bash/powerline.sh to enable the bash powerline in a tmux session then the branch segment starts working as expected in the tmux statusline.

I have powerline 2.3 installed from pypi.

Here is my powerline config:

``` Diff
diff -Nur /usr/local/lib/python2.7/dist-packages/powerline/config_files/themes/tmux/default.json /home/cody-somerville/.config/powerline/themes/tmux/default.json
--- /usr/local/lib/python2.7/dist-packages/powerline/config_files/themes/tmux/default.json      2016-02-21 21:17:15.000000000 -0700
+++ /home/cody-somerville/.config/powerline/themes/tmux/default.json    2016-02-27 11:52:22.650562594 -0700
@@ -1,7 +1,20 @@
 {
+       ""segment_data"": {
+               ""branch"" : {
+                       ""before"": "" "",
+                       ""args"": {
+                               ""status_colors"": true
+                       }
+               }
+       },
        ""segments"": {
                ""right"": [
                        {
+                               ""name"": ""branch"",
+                               ""function"": ""powerline.segments.common.vcs.branch"",
+                               ""priority"": 50
+                       },
+                       {
                                ""function"": ""powerline.segments.common.sys.uptime"",
                                ""priority"": 50
                        },
```

Here is my tmux configuration:

```
set-option -g history-limit 5000
run-shell ""powerline-daemon -q""
source ""/usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf""
```
"
1534,Evaluate use of libuv-cffi bindings as a replacement for PyUV,2016-02-27T18:48:30Z,,"c:watchers, e:freebsd, e:macos, e:windows, t:enhancement",,,"I was just looking into using PyPy as the Python interpreter for Powerline, but PyUV cannot be built for PyPy (see saghul/pyuv#49). There exist, however, [cffi bindings for libuv](https://github.com/koehlma/uv), which also work with PyPy (see the [feature list](https://github.com/koehlma/uv#features)).

It would be nice to see whether these could be used as a replacement for PyUV on systems where they are present and fallback to PyUV on systems where they are not. According to the author of the bindings, @koehlma, ""it is not fully pyuv compatible, although it should be possible to write a thin pyuv compatibility layer"".
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/31377789-evaluate-use-of-libuv-cffi-bindings-as-a-replacement-for-pyuv?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1533,Direct X rendering and Windows,2016-02-24T06:04:01Z,2016-02-24T12:59:33Z,"c:font, s:invalid",,,"I found that using direct X to render the fonts will produce a much better result, I posted the results over at airlines, but I'm gonna copy paste them here, mostly because it will help to generate more accurate powerline symbols.

(I didn't find any topics on these in the issues, so I made one)
We know that the status bar even after font patching on windows will still is not perfect like you see on MacVim, so did a little searching, and I found that vim has rendering support for Direct X which is much better than the current rendering using GDI, but your vim has to support it, after a few tests, I have the following results:

Without Direct X (Status Bar)
![Status Bar Old](http://puu.sh/n8Ac8/ea6b69485e.png)

With Direct X (Status Bar)
![Status Bar New](http://puu.sh/n8Ahw/caf5ff0f9a.png)

Without Direct X (Unicode Symbols from the Help)
![Unicode Sym old](http://puu.sh/n8Ae7/5dae6e1298.png)

With Direct X (Unicode Symbols from help)
![Unicode Sym New](http://puu.sh/n8AjA/4f4cc9a9fa.png)

Without Direct X (Powerline Symbols)
![Powerline sym old](http://puu.sh/n8Af5/26832dd4b0.png) 

With Direct X (Powerline Symbols)
![PowerLIne symbols New](http://puu.sh/n8Ako/5257a276c4.png)

This is the Vim I used: [Vim x64 with Direct X](https://bintray.com/veegee/generic/vim_x64/7.4.1403/view)
Thanks to Veegee we have the latest vim with Direct X enabled.

Also once you have Direct X support, you have to turn it on like the following:

```
set encoding=utf-8   
set rop=type:directx,gamma:1.0,contrast:0.5,level:1,geom:1,renmode:4,taamode:1
```

all of those options are adjustable, after a few tests, those worked for me, you can change them for yourself, but the last 3 options (geom, renmode, taamode) those I got the best result using those values.

I think with a few modifications to the font patching, we could get a much better result.
One disadvantage I noticed is it slows down vim a bit, not a lot, but noticeable.

So tell me what you think.
"
1532,Fixes bug in multi-battery support,2016-02-21T18:10:57Z,2016-02-21T18:32:05Z,"c:common segments, e:linux, t:bug",,,"Fixes a bug introduced by #1531 where a typo in the filepath for battery energy levels leads to a `FileNotFoundError`.
"
1531,Multiple Battery Support,2016-02-20T21:31:30Z,2016-02-20T23:19:29Z,"c:common segments, t:enhancement",,,"Adding multiple battery support to DBUS+UPOWER and /sys battery interfaces.  Fixes #1288 and hopefully mirrors #1522.
"
1530,PowerLine is not working with Root,2016-02-15T09:45:55Z,2016-02-15T11:30:21Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"![terminal](https://cloud.githubusercontent.com/assets/12265797/13044905/0c0b106a-d3ea-11e5-86df-05b50e784300.png)

I'm using Elementary Os, PowerLine is only working for Local user, when I logged in to Root, It's disappeared.
"
1529,Changing edit mode in multiline zsh prompt causes redraw in the wrong place,2016-02-14T00:49:12Z,2016-02-14T02:26:50Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"I configured a multiline zsh prompt (3 lines, first line completely empty), and there is one thing that is quite annoying. When changing edit mode (I use vi mappings), the prompt gets redrawn in such a way that current command entry line jumps two lines up, to where the prompts initial first line was drawn.

![mode](https://cloud.githubusercontent.com/assets/2332355/13031005/17561d9e-d2bd-11e5-82c4-b6d4b2b971a9.gif)
"
1528,[Pycharm] Terminal have a wrong arrows,2016-02-12T22:30:07Z,2016-02-12T23:12:09Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"Hi guys

I like powerline and i think that is beautiful, i haven't any problem with terminal and guake terminal, but, with Pycharm terminal i have:
![seleccion_105](https://cloud.githubusercontent.com/assets/5034215/13022263/22d4cb76-d1ae-11e5-992d-b21b67875ff6.png)
The arrows are showed as `ff..` or are put backed, i don't know why happen this.

Thank you very much.
"
1527,Update command used to install macvim with brew,2016-02-10T20:10:14Z,2016-02-10T20:10:34Z,"c:documentation, t:bug",,,"Flag `--override-system-vim` is deprecated.

Fixes #1526.
"
1526,Update macvim brew flags,2016-02-10T15:11:51Z,2016-02-10T20:10:34Z,"c:documentation, t:bug",,,"The flags passed to brew when installing macvim could be updated on [the installation page](http://powerline.readthedocs.org/en/master/installation/osx.html).
`Warning: mccvim: --override-system-vim was deprecated; using --with-override-system-vim instead!`
(Also, there are some weird-looking periods after the first two commands.)
"
1525,Fix bug in xrandr output detection,2016-02-08T21:12:48Z,2016-02-08T22:54:05Z,"c:b:wm, t:bug",,,"When there is a primary output set the current regex doesn't match that line / output.
"
1524,fix: Make dbus battery status consistent,2016-02-07T14:53:12Z,2016-02-07T21:20:57Z,"c:common segments, t:bug",,,"- In #1499 a change was introduced that made use of the ""Discharging""
  status of a battery in order to detect whether the AC power is
  available.
  
  The DBus part of the function that gets this data, however, stayed
  unchanged. In order to keep it consistent this commit changes it in
  such a way that it preforms the same function as the code introduced
  in #1499 by checking for the Discharging state of the battery as
  described here:
  http://upower.freedesktop.org/docs/Device.html#Device:State

Signed-off-by: mr.Shu mr@shu.io
"
1523,docs: Fix a small typo in develop/segments.rst,2016-02-07T14:36:33Z,2016-02-07T16:15:51Z,"c:documentation, t:bug",,,"- The display_condition key in the docs was rendered as
  'display_condition`' due to a small typo. This commit fixes that.

Signed-off-by: mr.Shu mr@shu.io

---

Note that this problem can be seen at https://powerline.readthedocs.org/en/latest/develop/segments.html#dev-segments-seg-contents where I noticed it too.
"
1522,fix: Battery segment for multiple batteries,2016-02-07T12:40:36Z,2016-02-07T14:03:45Z,"c:common segments, t:enhancement",,,"- Make battery segment work for multiple batteries by getting data from
  all of them and then computing the weighted average of their actual
  capacities where the weights are the provided percentages of full
  charge.
  
  For two batteries, therefore, this would look like the following:
  
  ```
    output = (p_1 * c_1 + p_2 * c_2) / (c_1 + c_2)
  ```
  
  where p_n is the percentage of full charge of the n-th battery and c_n
  is the capacity of the n-th battery at full charge.
- A few trailing spaces were removed in the `bat.py` file.

Signed-off-by: mr.Shu mr@shu.io

---

Note that this fixes #1288 and implements the percentage computation the author of that issue suggested.
"
1521,janitoring: Removed trailing characters in .rst,2016-02-07T08:32:52Z,2016-02-07T13:28:48Z,"c:documentation, s:wontfix, t:enhancement",,,"- This commit removes all unnecessary trailing whitespace from .rst
  files in the repository.

Signed-off-by: mr.Shu mr@shu.io
"
1520,Rename some highlight groups,2016-01-29T21:44:35Z,,"c:b:wm, c:common segments, t:enhancement",,,"Currently some group names are inconsistent. Specifically `w_…` groups should be `workspace:…`. `superuser` should be `user:root`.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/30347981-rename-some-highlight-groups?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1519,How to display output of arbitrary shell command in powerline segment?,2016-01-16T13:31:18Z,2016-01-16T22:21:11Z,"a:segment, c:common segments, t:enhancement",,,"I would like to display the free disk space in a segment.
How could I achieve this? There seems to be no existing segment for this. 
"
1518,[Powerline] Display full file path in Powerline for Vim?,2016-01-14T23:53:37Z,2016-01-15T09:57:55Z,"c:b:vim, s:invalid",,,"Hi,

I just want to know how to show full file path in Powerline for Vim? I mean normally without Powerline I would add something like the following to my `.vimrc` to show the full file path:

``` vim
set statusline+=%F
```

However, in Powerline for Vim, only the file name is displayed (for example, `./.vimrc` when I open `.vimrc` from my home directory). How can I display the full file path in Vim with Powerline?
"
1517,Add listers for i3wm workspaces and outputs,2016-01-12T21:41:42Z,2016-02-04T01:32:25Z,"a:segment, c:b:wm, t:enhancement",,,
1516,Tmux powerline status bar reverting after using source command,2016-01-06T00:03:10Z,2016-01-06T00:12:17Z,"c:b:tmux, s:invalid:configuration error, t:bug",,,"After configuring Powerline to work with tmux as stated in the documentation, the status bar looks as follows regularly even though I have configured some extra information to show there:

<img width=""570"" alt=""tmux_powerline_regular"" src=""https://cloud.githubusercontent.com/assets/16567134/12131098/b49a8bde-b3dd-11e5-8350-b0c01388621c.png"">

After running the ""tmux source"" command, the screen flutters and looks like the following, almost as desired, for about half a second before reverting to the state in the first image:

<img width=""570"" alt=""tmux_powerline_issue"" src=""https://cloud.githubusercontent.com/assets/16567134/12131124/e0a22cc8-b3dd-11e5-8079-0a40ef1e2a27.png"">

The following is my .tmux.conf file as a plaintext document:
[paanvaannd.tmux.conf.txt](https://github.com/powerline/powerline/files/79230/paanvaannd.tmux.conf.txt)

Machine info:
Retina MacBook early 2013, OS X El Capitan, using iTerm2 v2.1.4
"
1515,No module named 'packaging' or 'pkg_resources._vendor' when installing on Python 3,2016-01-02T19:03:27Z,2016-01-02T19:08:31Z,"c:installation, s:invalid:foreign bug, t:bug",ImportError,ImportError: No module named 'pkg_resources._vendor',"When installing `powerline-status` from PyPi via the AUR Python 3 package or `pip install --user`, the installation fails with this traceback : 

```
Traceback (most recent call last):
  File ""/usr/lib/python3.5/site-packages/pkg_resources/__init__.py"", line 91, in <module>
    import pkg_resources._vendor.packaging.version
ImportError: No module named 'pkg_resources._vendor'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/bin/pip"", line 5, in <module>
    from pkg_resources import load_entry_point
  File ""/usr/lib/python3.5/site-packages/pkg_resources/__init__.py"", line 97, in <module>
    import packaging.version
ImportError: No module named 'packaging'
```

I'm running Python 3.5.1 on Arch Linux x64.
"
1514,A lot of space between the cursor and the arrow with Fish shell,2016-01-02T08:19:31Z,2016-01-02T08:22:44Z,"c:b:shell, s:invalid:unsupported software, t:bug",,,"Even if there is an error the space remains. If I `cd` into a directory the space doubles. Hitting return doesn't help either.
I am using Elementary OS.

![screenshot from 2016-01-02 03 17 55](https://cloud.githubusercontent.com/assets/2798620/12073781/74c1d1e2-b0ff-11e5-9b3b-7278ac169189.png)
"
1513,Disable ExternalIpSegment on network exceptions,2016-01-01T01:54:26Z,2016-01-01T02:00:45Z,"c:common segments, s:invalid, t:bug",,,"If  external  network  is  unavailable, ExternalIpSegment  will  fail  with  an
exception and  cause powerline to display  error text instead of  all segments.
This commit fixes  it by catching all exceptions  inside _external_ip function,
returning an empty  string in case of  an error which causes  Powerline to hide
ExternalIpSegment.

This pull request is referenced in issue #1512.
"
1512,External IP segment causes entire status line to fail if unable to connect,2016-01-01T01:53:22Z,2016-01-01T02:05:30Z,"c:common segments, s:invalid:configuration error, t:bug",,,"If Internet connection is down, or powerline is unable to resolve given URL, or any other network-based exception occurs during the call of `_external_ip(query_url)` in `segments/common/net.py`, that function raises an unhandled exception which causes entire powerline to display that exception.

From the user perspective, displaying a concise error message instead, something like `No connection` or disabling the segment altogether would provide a smoother user experience. I'm submitting a pull request which implements this behavior.
"
1511,Ctrlp's search field disappears using Powerline,2015-12-17T12:17:55Z,2016-06-15T07:42:12Z,"c:b:vim, s:invalid:error in environment, t:bug",,,"When using CtrlP to navigate between files, the search field disappears when using Powerline. See the video below for a demonstration of the problem.

http://d.pr/i/10iwp/2PhkvJGN

Powerline installed via `pip`:

```

---
Metadata-Version: 2.0
Name: powerline-status
Version: 2.3
Summary: The ultimate statusline/prompt utility.
Home-page: https://github.com/powerline/powerline
Author: Kim Silkebaekken
Author-email: kim.silkebaekken+vim@gmail.com
License: MIT
Location: /usr/local/lib/python2.7/site-packages
Requires:
```

Vim installed via `brew`:

```
vim: stable 7.4.963, HEAD
Vi ""workalike"" with many additional features
http://www.vim.org/
Conflicts with: ex-vi
/usr/local/Cellar/vim/7.4.963 (1620 files, 29M) *
    Built from source with: --override-system-vi --with-lua --with-luajit
From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/vim.rb
```

I'm using iTerm2 (2.1.4) on OS X (10.11.2). The video was taken within tmux (tmux 2.1). As you can see, as I type, the search field flickers but eventually the text disappears. Doing the same thing outside tmux result in the same problem, except now the whole screen flickers.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/29205369-ctrlp-s-search-field-disappears-using-powerline?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1510,Remove status-utf8 option,2015-12-16T20:59:16Z,2015-12-17T00:09:04Z,"c:b:tmux, t:bug",,,"It is incorrect to set it at all because what powerline outputs depends on 
locale used, and if locale is utf8 then tmux should already set this option.
"
1509,unknown option: status-utf8,2015-12-16T18:46:19Z,2015-12-16T20:46:35Z,"c:b:tmux, s:invalid:unsupported software, t:bug",,,"error occurs:
 subprocess.CalledProcessError: Command '[u'tmux', 'set', '-g', 'status-utf8', 'on']' returned non-zero exit status 1

status-utf8 option is removed in latest tmux.
"
1508,Add support for OS X en0 on internal_ip,2015-12-09T19:19:10Z,2016-02-21T18:27:40Z,"c:common segments, t:enhancement",,,"This simple change ensures support for OS X interfaces on the common.net.internal_ip segment.
"
1507,[WIP] Refactor editors code,2015-12-05T22:37:33Z,,"c:b:vim, t:enhancement",,,"There are three long-term targets here: Vim without +python, neovim (ref #1287) and emacs. Main idea is reducing the necessity to communicate with the editor to nearly one stage. This PR is doing refactoring of the code, not adding new applications to support.

TODO:
- [x] Create new way to describe powerline requirements.
- [x] Update all segments which can be updated to use this new way.
- [ ] (partial: missing type conversions) Update all segment listers to use this new way.
- [x] Remove dependency on the vim module: import it once at startup and pass it around.
- [x] Update development documentation regarding vim segments.
- [x] Create documentation describing how to create new Vim segments.
- [x] Create documentation describing how to add new editors support.
- [ ] Move non-vim-specific editor segments to `powerline.segments.editors` module.
- [ ] Make all remaining `powerline.segments.vim*` modules `powerline.segments.editors`.
- [ ] Move all vim listers to `powerline.listers.editors` since they are not vim-specific. Requires doing something with `buffer`, `window`, `tabpage`, `bufnr`, `winnr`, `tabnr` `segment_info` keys.
- [ ] Make documentation for listers point to new location.
- [ ] Make documentation for segments point to new location.
- [ ] Make cvs_col_current segment non-editor-specific. Requires abstracting buffer lines access.
"
1506, offline battery symbol,2015-12-01T05:00:47Z,2015-12-01T07:37:37Z,"c:common segments, s:invalid:configuration error, t:bug",,,"I've searched all over the internet similar to the ones used by the online battery, uptime, time segment and haven't able to find any. There's just a big gap when I switch to using the battery and I would love the have a battery symbol there. Can anybody help?
"
1505,environment variables set as tmux segments never update value,2015-11-29T18:12:02Z,2015-11-29T18:55:46Z,"c:b:tmux, s:not a bug, t:bug",,,"I tried to set a couple of environment variables as tmux segments. Example:

```
{
  ""function"": ""powerline.segments.common.env.environment"",
    ""args"": {
      ""variable"": ""tnumAll""
    }
 },
```

The variable does show up with the correct value in the correct location when I start a tmux session, but then it never changes even though the environment variable does change. I've confirmed this by typing `echo $tnumAll` and getting the correct value that differs from the one displayed in powerline bar in tmux. I have to close the session and start a new one to see the new values.

By contrast, setting this environment variable as a shell segment works as expected. With every new prompt line, the value displayed is the current one.

I tried looking around for similar reports but didn't find anything, so I'm not sure if this is expected behaviour, or if I'm missing some customization trick, or if it's a bug.

I'm seeing thing with:
powerline: 2.3
tmux: 2.1 (installed with Homebrew)
and iTerm 2.1.4 (latest stable) on OS X 10.11.1
"
1504,Tmux uptime segment missing,2015-11-25T14:38:07Z,2015-11-25T18:17:39Z,"c:b:tmux, t:bug",,,"No errors, just the tmux uptime segment quietly missing. 
I do have psutil installed. I've tried both 3.x and to 2.x to no avail.
![shot3](https://cloud.githubusercontent.com/assets/148098/11399900/233a7b86-9358-11e5-9121-4c405f2c1742.jpg)
"
1503,Add iTerm fix solution.,2015-11-24T22:47:06Z,2015-11-24T22:57:08Z,"c:documentation, t:enhancement",,,"Add a iTerm fix solution from https://github.com/powerline/fonts/issues/44
"
1502,tmux status-right w/ powerline shows code briefly before rendering,2015-11-24T17:20:46Z,2015-11-24T20:18:13Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"I recently made a big version jump up to tmux 2.1 and powerline 2.3 from some ancient version (sorry, don't remember what versions).  Took me a while to get the configs sorted out, but everything seems to be working now except for a strange rendering issue in tmux.  When I first switch windows in a tmux session, the status-right will flash showing code, then usually in less than a second it resolves to render the segments.

Here is what it looks like when it flashes the code:
<img width=""949"" alt=""screen shot 2015-11-24 at 9 02 51 am"" src=""https://cloud.githubusercontent.com/assets/131392/11374737/6db65a12-928c-11e5-995b-eecd5197a1f6.png"">

And then when it resolves <1sec later:
<img width=""381"" alt=""screen shot 2015-11-24 at 9 14 57 am"" src=""https://cloud.githubusercontent.com/assets/131392/11374743/7aef9ea0-928c-11e5-80e9-1b706eb31c0d.png"">

I honestly don't know if this is a bug in tmux, powerline, or my config, but it is quite distracting when I'm working on something and I'd really appreciate any help figuring out the cause.
"
1501,[Players - mpd] Use Unicode where available,2015-11-23T08:06:17Z,2015-11-28T19:49:06Z,"c:players, t:bug",,,"Otherwise the mpd function will fail when it encounters non-ASCII metadata as it tries to do a unicode.format() and attempts to decode the incoming data as ASCII, throwing a UnicodeDecodeError exception.

Fixes #1500 

Note that `python-mpd` (as opposed to `python-mpd2`) does not support `client.currentsong()`, so I don't think that actually works anymore.  Otherwise I'd be happy to a `try / except TypeError` + redo without the `use_unicode` parameter.  `python-mpd2` is happy with the extra argument under Python 3 (it's just mostly a no-op).
"
1500,[Players - mpd] Exception when track metadata contains non-ASCII text,2015-11-23T08:01:36Z,2015-11-28T19:49:06Z,"c:players, t:bug",,,"When using Python 2, if mpd sends back track information containing Unicode, a `UnicodeDecodeError` is raised because it tries to convert the strings to Unicode assuming they're ASCII.

Will post PR in a minute.
"
1499,"[Battery - Linux] Allow AC power to be named ""ADPx""",2015-11-23T07:42:22Z,2015-11-28T20:53:06Z,"c:common segments, t:bug",,,"Support AC adapters that are listed in sysfs as ""ADPx"" in addition
to ""ACx"".  The name comes straight from ACPI, and unfortunately it
is extremely inconsistent across manufacturers.

Fixes #1498

That line is getting a bit long, but flake8 didn't seem to want to complain.
"
1498,"[Battery - Linux] Some AC adapters are named ""ADPx""",2015-11-23T07:37:41Z,2015-11-28T20:53:06Z,"c:common segments, t:bug",,,"#1483 fixed things to read the batter online status from `/sys/class/power_supply/AC*` (instead of from the battery).  Unfortunately, it looks like that last part (`AC*`) comes straight from ACPI, and is totally inconsistent across manufacturers; on my device it's called `ADP0` instead.

PR coming up shortly to add an item to the condition.  Alternatively, we can attempt to read from the battery's `status` file (in sysfs, next to `capacity`) and match against the string [`Discharging`](https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/drivers/power/power_supply_sysfs.c?id=refs/tags/v4.4-rc2#n50).
"
1497,fontconfig-infinality-ultimate support for PowerlineSymbols,2015-11-22T09:55:37Z,,"c:font, t:enhancement",,,"It would be nice if PowerlineSymbols would support the fontconfig-infinality-ultimate font set and configuration. Given that it is a fixed set of fonts for all systems using it, this should be the one-time job of adding a bunch of lines to `10-powerline-symbols.conf`.

Homepage: http://bohoomil.com/
GitHub: https://github.com/bohoomil/fontconfig-ultimate

Currently, Powerline with fontconfig-infinality-ultimate looks like this: ![powerline-with-fontconfig-infinality-ultimate](https://cloud.githubusercontent.com/assets/63082/11323103/039675ec-9109-11e5-8987-55a7e8f71cd5.png)
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/28509686-fontconfig-infinality-ultimate-support-for-powerlinesymbols?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1496,Remove deprecated g:powerline_use_var_handler variable,2015-11-22T08:39:24Z,,"c:b:vim, c:configuration, t:enhancement",,,"It was deprecated after #1495 and should be removed in next major release.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/28508950-remove-deprecated-g-powerline_use_var_handler-variable?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1495,Add more logging options,2015-11-22T01:37:55Z,2015-11-22T03:35:56Z,"c:configuration, c:core, t:enhancement",,,"Allow logging to multiple locations at once and also log to locations other then one stream (selected by powerline and not by user) or one file.
"
1494,Powerline's bash prompt hangs upon 'cd' to certain directories,2015-11-20T20:56:13Z,,"c:b:shell, c:daemon, t:bug",,,"The Powerline bash prompt hangs upon issuing a `cd` command to a number of directories. Neither sending `SIGINT` nor `SIGTSTP` are sufficient to recover control of affected prompts. Those directories can be listed fine with the Powerline prompt and `cd` works when not using the Powerline bash prompt.

The directories that this occurs in appear to all have (valid) symbolic links contained within them. However, I cannot reproduce this issue by creating another directory with symbolic links elsewhere, so this may simply be coincidental. All directories that were confirmed to be affected by this resided within a single user-created directory, but again this is likely to be coincidental and due to a lack of systematic directory traversal.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/28473177-powerline-s-bash-prompt-hangs-upon-cd-to-certain-directories?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1493,mem stat added,2015-11-17T12:16:34Z,2015-11-17T12:18:07Z,s:invalid,,,
1492,git status shows as dirty when ignored files exist,2015-11-15T05:05:03Z,2015-11-15T05:08:20Z,"c:VCS support, s:invalid, t:bug",,,"The purpose of adding something to `.gitignore` is for them to be _ignored_ by anything related to git. As such, I don't understand why Powerline shows the git repo as dirty when there are ignored files. Happy to submit a patch, but I wanted to understand the logic behind this first in case there was a use case I didn't think of.
"
1491,Tabline and bufferlister updates,2015-11-14T21:16:48Z,2015-11-15T03:30:11Z,"c:b:vim, t:bug",,,"This pull request dramatically improves the experience of using the tabline with `showtabline=2` set. #1281 discusses an issue with Powerline flickering that is only caused when the bufferline is always displayed (with only one tab).

This is due to the prior usage of `vim_getbufoption(segment, 'buflisted')` in the conditionals of the bufferlister segment. Querying the buffer options through the vim python module's `option` attribute caused vim to think it needed to update the tabline for every keystroke after any event that changed the buffer's options.

Using the vim module's `eval` method to directly use the `buflisted(nr)` vim method instead does not cause vim to update the tabline after every keystroke, but rather after events that would change that status, thus fixing the flickering problem.

In addition to improving the flickering, I have also added additional highlight groups to further customize the colors used by the tabline when buffers are listed. You can now customize the colors based on a buffer's modified status, and the tabline has its own background and divider highlight group by default.
"
1490,ctrlp statusline,2015-11-13T20:19:16Z,,"a:segment, c:b:vim, t:enhancement",,,"PR for https://github.com/powerline/powerline/issues/1489
"
1489,CtrlP theme,2015-11-13T13:49:52Z,,"c:b:vim, t:enhancement",,,"Is it possible to have a ctrlp theme for powerline? It'd be great if you could lead me to write one if no one with the knowledge has the time to write it himself.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/28221253-ctrlp-theme?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1488,Tmux 2.1 compatibility,2015-11-12T11:10:55Z,2015-11-12T18:45:48Z,"c:b:tmux, s:invalid:no information, t:bug",,,"I tried it, but I'm unable to get powerline working with tmux 2.1, so I must be stuck in 1.9.
"
1487,Duplicate virtual environment prompt with conda,2015-11-08T16:54:41Z,2015-11-08T17:19:36Z,"c:b:shell, s:invalid:configuration error, t:bug",,,"I am using conda for managing python packages. However I noticed that when I change to a conda environment there will appear duplicate virtual env prompt, illustrated below:
![image](https://cloud.githubusercontent.com/assets/6040760/11021446/5e733bcc-867c-11e5-8769-6b2e4afb02db.png)

However, sourcing the .zshrc file agains seems to fix it, but I cannot do this manually every time.
"
1486,Fix #1483 -- [Battery - Linux] Fix AC status fetch,2015-11-08T11:55:52Z,2015-11-08T15:10:28Z,"c:common segments, t:bug",,,"Fix a bug where the `online` property is checked inside battery
instead of AC.

As specified in issue #1483, `online` is found only inside
`/sys/class/power_supply/AC<x>/` directories, and equals `1` when cable is
plugged, and `0` when unplugged.
"
1485,[Tmux] Wrong display color for powerline tmux's statusbar - Solarized theme,2015-11-07T16:41:54Z,,"c:configuration, t:bug",,,"I am currently using Powerline on my Arch machine with Python 3.5 (just updated several weeks ago). The colors on the left of the tmux statusbar (using Solarized theme) is different from what it used to be in Python 3.4. Here is a screenshot:

![selection_002](https://cloud.githubusercontent.com/assets/874795/11016070/74473492-852a-11e5-8d37-aa0ac8234b94.png)

Here is my machine's information:
OS: 4.2.5-1-ARCH
Tmux Version: tmux 2.1
Powerline Version: 2.2 & 2.3
Python Version: 3.5.0
Pip Version: 7.1.2

Hope there will be a fix soon.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/28056614-tmux-wrong-display-color-for-powerline-tmux-s-statusbar-solarized-theme?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1484,Vim stuck 'can't import powerline.vim',2015-11-06T21:32:16Z,2015-11-06T21:36:30Z,"c:b:vim, s:invalid:configuration error, t:bug",,,"~~I tried installing Powerline, and added the neccesary lines to my .vimrc. It then said there was an import error, saying there was no module named powerline.vim. I tried removing those lines from my .vimrc, but it persists. I even tried reinstalling vim, but it STILL shows up. What can I do?~~

EDIT: Uninstalling Powerline seems to have fixed it. Huh.
"
1483,[Battery] No such file or directory: /sys/class/power_supply/BAT0/online,2015-11-06T10:36:23Z,2015-11-08T15:10:29Z,"c:common segments, t:bug",,,"Battery segment attempts to read the `online` file in `/sys/class/power_supply/<BAT>` that doesn't exist.

AFAIK the `online` file is found only inside `AC` entries in `/sys/class/power_supply`.

```
/sys/class/power_supply/AC0 $ ls
power  device  online  subsystem  type  uevent
```

Can be related with f098ed2fe0a444f5
"
1482,Include dist folder to MANIFEST.in,2015-11-04T11:22:49Z,2015-11-04T16:30:50Z,"c:installation, e:linux, t:bug",,,"As introduced in #1449 a systemd's `.service` file was included in `dist/systemd`.
However this folder was not included in `MANIFEST.in`.
"
1481,I can't add any segment to right side of ipython,2015-11-03T22:52:51Z,2015-11-04T07:39:36Z,"c:b:ipython, s:invalid:foreign bug, t:bug",,,"I added this for test to my ipython theme (in.json):

```
""right"": [
  {
    ""function"": ""powerline.segments.common.time.date"",
    ""args"": {
      ""format"": ""%Y-%m-%d %H:%M:%S""
    },
    ""priority"": 100
  }
]
```

but it's not working, nothing is shown on the right hand side of ipython.

though my changes to ""left"" list apply immediately.
"
1480,Add a hack to detect proper installation directory for powerline binary,2015-11-01T14:14:00Z,2015-11-17T00:42:26Z,"c:installation, s:not a bug, t:bug",,,"Fixes #1479
"
1479,tries to install scripts to ${PYTHONHOME}/bin on OS X (outside of $PATH),2015-10-29T22:39:16Z,2015-11-17T00:41:15Z,"c:installation, e:macos, s:not a bug",,,"I can't come up with a way to make pip install on a proper location such as ~/bin or /usr/local/bin, so I guess the workaround for now is to either symlink from that directory or add it to my $PATH.

Everything I'm using is coming from MacPorts except for Powerline itself, which is the current Git version. OS X is current (El Capitan).

Here's a partial verbose output of pip showing the issue:

```
    byte-compiling /Users/carlos/Library/Python/2.7/lib/python/site-packages/powerline/theme.py to theme.pyc
    byte-compiling /Users/carlos/Library/Python/2.7/lib/python/site-packages/powerline/vim.py to vim.pyc
    running install_data
    creating /Users/carlos/Library/Python/2.7/bin
    copying scripts/powerline -> /Users/carlos/Library/Python/2.7/bin
    running install_egg_info
    Copying powerline_status.egg-info to /Users/carlos/Library/Python/2.7/lib/python/site-packages/powerline_status-2.3.dev9999+git.fc6c3d94741baa77cc75e86510fda88bafe8b9ec-py2.7.egg-info
    running install_scripts
    copying build/scripts-2.7/powerline-config -> /Users/carlos/Library/Python/2.7/bin
    copying build/scripts-2.7/powerline-daemon -> /Users/carlos/Library/Python/2.7/bin
    copying build/scripts-2.7/powerline-lint -> /Users/carlos/Library/Python/2.7/bin
    copying build/scripts-2.7/powerline-render -> /Users/carlos/Library/Python/2.7/bin
    changing mode of /Users/carlos/Library/Python/2.7/bin/powerline-config to 755
    changing mode of /Users/carlos/Library/Python/2.7/bin/powerline-daemon to 755
    changing mode of /Users/carlos/Library/Python/2.7/bin/powerline-lint to 755
    changing mode of /Users/carlos/Library/Python/2.7/bin/powerline-render to 755
    writing list of installed files to '/var/folders/j2/pfmcwmg15rdby4qc549mggs00000gp/T/pip-liwFQ2-record/install-record.txt'
  Removing source in /var/folders/j2/pfmcwmg15rdby4qc549mggs00000gp/T/pip-HkHkJA-build
Successfully installed powerline-status
Cleaning up...
```
"
1478,OSX El Capitan destroyed my powerline,2015-10-28T21:38:05Z,2015-10-30T18:13:48Z,"c:b:shell, c:b:vim, c:installation, e:macos, t:bug","ImportError, NameError","ImportError: No module named powerline.vim, NameError: name 'powerline_setup' is not defined","I had powerline installed for use within both vim and zsh and everything worked well, that is until I installed OSX El Capitan. Now when I open .zsh I get:

```
zsh: no such file or directory: /usr/local/lib/python2.7/site-packages/scripts/powerline
zsh: no such file or directory: /usr/local/lib/python2.7/site-packages/scripts/powerline
```

and when I try to use vim, I get:

```
An error occurred while importing powerline package.
This could be caused by invalid sys.path setting,
or by an incompatible Python version (powerline requires
Python 2.6, 2.7 or 3.2 and later to work). Please consult
the troubleshooting section in the documentation for
possible solutions.
Error detected while processing /Users/ejam/.vimrc:
line   17:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
ImportError: No module named powerline.vim
line   18:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name 'powerline_setup' is not defined
line   19:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name 'powerline_setup' is not defined
```

Needless to say, powerline is no longer working in either place. I have poured a few hours into this already, and nothing is seeming to work. I have tried reinstalling vim, python, and powerline with no success. Below are the details:

Running OSX 10.11.1
Python: 2.7.10

Both python and vim were installed via homebrew using: 

```
brew install python
brew install vim --env-std --override-system-vim
```

Powerline was installed via python:

```
pip install powerline-status
```

Added to .zshrc:

```
source /usr/local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
```

Added to .vimrc

```
 source /usr/local/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim
 python from powerline.vim import setup as powerline_setup
 python powerline_setup()
 python del powerline_setup
```

${PATH}:

```
/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin:/usr/local/sbin
```

Output from within vim (:python import sys; print(sys.path)):

```
['/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python27.zip', '/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/pytho
n2.7', '/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin', '/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Version
s/2.7/lib/python2.7/plat-mac', '/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages', '/usr/local/Cellar/python/2.7.
10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk', '/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old', '/usr/local/
Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload', '/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7
/site-packages', '/Library/Python/2.7/site-packages', '_vim_path_', '/usr/local/lib/python2.7/site-packages']
```

Any help would be much appreciated!
"
1477,Enable powerline.service by default?,2015-10-26T00:21:41Z,2015-10-26T01:03:48Z,"c:installation, e:linux, s:invalid, t:question",,,"As maintainer of the powerline package in Debian, I have the option to either install and enable the powerline systemd service file by default when users install the package, or simply provide it as an example in the documentation. Which do you prefer, developpers?
"
1476,Powerline-daemon complain about usage in tmux.,2015-10-24T15:50:58Z,2015-10-24T16:19:26Z,"c:b:tmux, s:invalid, t:bug",,,"Hey there,
I use powerline for my tmux status bar, and it has partly broken since last week, this is the issue:

I use 3 sessions at the same time on my laptop (main, mail, irc) but after the first main is launched, the others get a error message in the status bar ""usage: powerline-daemon [-h] [-r MODULE] [-w WIDTH] [--last-exit-code INT]"".
The erreur message did not show up on the fist launched session.

I use:
tmux: v2.1
powerline: v2.2-2

My tmux.conf minified:

```
run-shell ""powerline-daemon -r""
source ""/usr/share/powerline/bindings/tmux/powerline.conf""
set -g @tpm_plugins '            \
  tmux-plugins/tpm               \
  tmux-plugins/tmux-sensible     \
  tmux-plugins/tmux-copycat      \
  tmux-plugins/tmux-resurrect    \
  tmux-plugins/tmux-continuum    \
  tmux-plugins/tmux-yank         \
  seebi/tmux-colors-solarized    \
'
run-shell '~/.tmux/plugins/tpm/tpm'
```

Did someone have an idea ?
"
1475,icons not displaying locally but ok when ssh somewhere else,2015-10-22T19:02:42Z,2015-10-22T19:07:12Z,"c:common segments, s:invalid:configuration error, t:bug",,,"I am trying to figure out what is wrong with my workstation because since the upgrade to OSX El Capitan the icons don't show up.

The funny thing is that they are not working locally. If I ssh into another box they show up fine.

At the same time, they work on my laptop running the same settings, but if I ssh into my workstations they still don't show. 

An image might explain better what I am seeing:
![bash](https://cloud.githubusercontent.com/assets/1116445/10675368/7bdc1944-7908-11e5-9152-37bb80161921.png)

I don't believe it is a problem with powerline itself, but I'd like some directions
"
1474,"tmux error : ""unsupported operand type(s) for -=: 'int' and 'unicode'""",2015-10-22T12:12:57Z,2015-10-23T07:04:07Z,"c:b:tmux, t:bug",,,"After an upgrade of the package using `pip`, I have an issue with the tmux statusline but the vim one works nicely. Without any kind of modification of basic installation and with version2.1.0 of tmux, it puts me this message in the right part of the statusline :

```
unsupported operand type(s) for -=: 'int' and 'unicode'
```

Here's the code of my `.tmux.conf` if it could help to detect the issue:

```
run-shell ""powerline-daemon -q""

# use UTF8
set -g utf8
set-window-option -g utf8 on

set-option -g default-command ""reattach-to-user-namespace -l bash""
# make tmux display things in 256 colors
set -g default-terminal ""screen-256color""

set -g history-limit 50000
set -g display-time 4000

# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-a
unbind C-b

# use send-prefix to pass C-a through to application
bind C-a send-prefix

# shorten command delay
set -sg escape-time 1

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display ""Reloaded!""

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h
bind - split-window -v

# use shortcut to kill pane and window
bind j kill-pane
bind k kill-window

# Make the current window the first window
bind T swap-window -t 1

# -----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
source ""/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf""
```
"
1473,ERROR:tmux:powerline:Failed to render: 'int' object has no attribute 'lstrip',2015-10-21T03:33:53Z,2015-10-21T07:18:39Z,"c:b:tmux, s:duplicate, t:bug",,,"You can reproduce the error wih this env
mac os x 10.11
tmux 2.1
python 2.7
powerline 2.2
"
1472,Add hide_domain argument to common.env.user segment,2015-10-19T20:46:50Z,2015-10-19T21:03:41Z,"c:common segments, t:enhancement",,,"If true, this argument hides `@` and the following characters from the user
name.

Fixes #1420
Closes #1426
"
1471,Support tmux-2.1,2015-10-19T18:52:06Z,2015-10-19T20:34:12Z,"c:b:tmux, t:bug",,,"Tmux-2.1 appears not to output leading `%` when using `tmux display -p '#D'`. 
This change changes type of the `pane_id` argument: leading `%` turns it into 
a literal string, number in front makes it be parsed as a JSON number.

Fixes #1470
"
1470,OS X- 'int' object has no attribute 'lstrip' in right statusbar.,2015-10-19T16:37:36Z,2015-10-19T20:34:12Z,"c:b:tmux, e:macos, t:bug",,,"Hi - 

My powerline status has been working well for some time under el capitan (since install a couple of weeks back) but as of this morning I'm now getting:

`'int object has not attribute 'lstrip' where my right hand statusbar should be.  

I recently updated a couple of pip modules as I was chasing another problem, including psutil.  (This was previously at 3.1.1 ) and my statusbar is now broken. I'm not 100% sure this is the cause though, as I've also been updating a few other things. I rolled back to 3.1.1 but still no luck.

I also run weekly brew updates, I also recently updated to el capitan.  

Love to find the cause of this, or get some guidance on troubleshooting.
"
1469,update spelling,2015-10-14T06:50:50Z,2015-10-14T12:46:13Z,"c:documentation, s:invalid, t:bug",,,
1468,Keep MPD Connection alive in now_playing segment,2015-10-09T10:17:43Z,2015-10-09T14:47:25Z,"c:players, s:invalid:no information, t:enhancement",,,"The now_playing segment creates a new MPD connection on every rendering pass:

![](http://i.imgur.com/b4c1iiq.png?1)
as you can see, a new connection is spawned twice a second (mopidy is a mpd server).

I don't know the actual performance impact but it seems pretty ""stupid"" to me.
"
1467,Add i3 to the tagline,2015-10-08T09:53:17Z,2015-10-08T17:07:56Z,"c:documentation, t:enhancement",,,
1466,Skip date test on PyPy3,2015-10-05T22:37:38Z,2015-10-05T23:15:06Z,"c:tests, t:bug",,,"See https://bitbucket.org/pypy/pypy/issues/2161/pypy3-strftime-does-not-accept-unicode
"
1465,Disable python2.6 ucs2 vim tests,2015-10-05T21:41:18Z,2015-10-05T22:30:24Z,"c:tests, t:bug",,,
1464,Fix typo (missing letter) in installation/osx.rst,2015-10-05T21:27:15Z,2015-10-05T21:27:32Z,"c:documentation, t:bug",,,"Closes #1463
"
1463,Missed a letter,2015-10-05T21:24:22Z,2015-10-05T21:27:32Z,"c:documentation, t:bug",,,
1462,Include i3wm segments in configuration docs,2015-10-05T18:58:43Z,2015-10-05T18:59:50Z,"c:documentation, t:enhancement",,,
1461,Make date segments work with non-ascii characters in the format string.,2015-10-04T20:13:43Z,2015-10-05T21:42:37Z,"c:common segments, t:bug",UnicodeEncodeError,UnicodeEncodeError: 'ascii' codec can't encode character,"Enables fancy glyphs in the date segment

``` json
""powerline.segments.common.time.date"": { 
    ""args"": { ""format"": ""%F ⌚ %T"" } 
} 
```

![image](https://cloud.githubusercontent.com/assets/1686266/10269978/c1ac87ec-6ae4-11e5-86b4-bae34de41bd5.png)

This solves a bug where unicode characters in the format string would cause a UnicodeEncodeError.

```
UnicodeEncodeError: 'ascii' codec can't encode character
u'\u231a' in position 3: ordinal not in range(128)
```
"
1460,integer: command not found,2015-10-02T23:21:30Z,2015-10-13T11:13:56Z,"c:b:shell, e:macos, t:bug",,,"Cannot integrate into zsh on OS X due to the following error

```
/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh: line 21: integer: command not found
/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh: line 29: syntax error near unexpected token `_powerline_tmux_setenv'
/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh: line 29: `       function -g _powerline_tmux_setenv() {'
```
"
1459,instructions are either incomplete or do not work,2015-10-01T17:00:48Z,2015-10-01T17:06:15Z,"c:documentation, s:invalid:no information, t:enhancement",,,"Using mac osx and followed instructions on website.
running this command: pip install --user powerline-status
logs out: Requirement already satisfied (use --upgrade to upgrade): powerline-status in ./Library/Python/2.7/lib/python/site-packages

When I look in the terminal there is no highlighting as shown in the git read me.
The fonts installation instructions are way too vague. What patched font is one supposed to use and even after choosing one in the terminal preferences the color paths do not show up in the terminal.
"
1458,Not worked with Linux Mint 17.2.,2015-09-30T19:01:30Z,2015-10-19T21:00:09Z,"c:font, s:invalid:foreign bug, t:bug",,,"I use Slackware 14.1 before, It worked for me like this:

![snap1](http://zw963.bitbucket.org/powerline2.png)

But, when I switch to Linux Mint 17.2, it not work, like this;

![snap1](http://zw963.bitbucket.org/powerline1.png)

Is there any details I need to to for this? 

Thanks.
"
1457,i3 lemonbar with workspace info,2015-09-29T17:58:18Z,2015-10-05T18:59:52Z,"c:b:wm, s:invalid",,,"Is there any way to display the available workspaces and highlight the current or action required workspaces?
"
1456,Do not state that patched font does not work for rxvt-unicode,2015-09-29T10:50:43Z,2015-09-29T11:18:49Z,"c:documentation, t:bug",,,"Fixes #1455
"
1455,Documentation: urxvt and patched fonts,2015-09-29T10:31:02Z,2015-09-29T11:18:48Z,"c:documentation, t:bug",,,"Hi,
Apologies if this is the wrong place.
The documentation, here, http://powerline.readthedocs.org/en/latest/installation.html#patched-fonts indicates that patched fonts don't work on urxvt. Reading elsewhere, and by personal experience, the opposite is true: the usual (fontconfig) method doesn't work, but installing a patched font does.

Edit: previously had wrong url
"
1454,Symbols not working on FreeBSD.,2015-09-28T21:33:21Z,2015-09-28T21:33:58Z,"c:b:shell, c:font, e:freebsd, t:bug",,,"Using iTerm2 (latest version) to ssh into a FreeBSD box.  The symbols are not working, even though they work fine for local shells and when I ssh into all of my Linux boxes.  Locale is set to en_US.UTF-8.  Any tips on troubleshooting this would be appreciated.
"
1453,Adding note about python-dev requirement for pyuv,2015-09-24T17:25:46Z,2015-09-24T17:38:02Z,"c:documentation, s:wontfix, t:enhancement",,,
1452,Add git merge/rebase to git branch segment.,2015-09-23T02:48:39Z,2016-01-05T20:42:09Z,"a:segment, c:VCS support, t:enhancement",,,"Prior to using powerline with bash, I used $(__git_ps1) to add git
branch info to my prompt.  __git_ps1 includes the branch name, but it
also provides some additional status information that is incredibly
helpful for staying oriented when in the middle of some git operations
like a merge or rebase.

This patch implements something similar for the git implementation of
the vcs branch segment.  For example, if you're in the middle of an
interactive rebase on branch ""master"", the branch segment will now
show ""master (REBASE-i)"".
"
1451,Show conda environment in virtualenv segment.,2015-09-14T02:08:38Z,2015-10-19T20:50:05Z,"c:common segments, t:enhancement",,,"Conda environments are pretty much the same as virtualenvs, so I just added a check for them there. One could put it in a separate segment, but I think it fits naturally here.
"
1450,Not able to get VIM to use powerline installed via pip,2015-09-13T17:52:34Z,2015-09-13T18:33:16Z,"c:b:vim, s:invalid:configuration error, t:bug",ImportError,ImportError: No module named vim,"Hello,

I have been following the instructions as per:
https://powerline.readthedocs.org/en/latest/usage/other.html#vim-statusline

However, I am unable to get it to work. The new powerline status line doesn't show up in vim (though I am able to get it to work in bash).

I tried opening up an ipython shell and running:

```
from powerline.vim import setup
```

and I get this:

```
ImportError: No module named vim
```

I assume this is the root of my troubles, but I don't know where to begin in fixing this issue.

How can one proceed?
"
1449,"Added a systemd service, fixes #1447.",2015-09-13T14:54:56Z,2015-09-13T15:20:16Z,"c:installation, t:enhancement",,,"OK, done and tested. I didn't set any `Restart=` since I don't know if it should be restarted by sytemd on failure, right now it just fails, if it fails.
"
1448,Use vterm for shell tests,2015-09-13T11:52:27Z,,"c:tests, t:enhancement",,,
1447,Provide a systemd service for powerline-daemon,2015-09-12T13:13:58Z,2015-09-13T15:20:17Z,"c:installation, t:enhancement",,,"It would greatly simplify setting it up for, especially on Archlinux. Thanks.
"
1446,powerline vim status bar does not show unless Syntastic displays its error box,2015-09-11T18:31:57Z,2015-09-11T18:33:42Z,"c:b:vim, s:invalid:error in environment, t:bug",,,"Powerline vim status bar does not show unless Syntastic displays its error box.

<img width=""820"" alt=""screenshot 2015-09-11 14 24 06"" src=""https://cloud.githubusercontent.com/assets/4237425/9822942/5f6b7ec2-5891-11e5-8737-a276e733fb5b.png"">

<img width=""817"" alt=""screenshot 2015-09-11 14 24 28"" src=""https://cloud.githubusercontent.com/assets/4237425/9822950/62531e7e-5891-11e5-8ada-1da18ed83b7a.png"">

I suspect Powerline vim is rendering offscreen and Syntastic is forcing it to render on-screen. 

Any ideas?
"
1445,weather segment key error,2015-09-10T04:12:27Z,2015-09-10T05:05:51Z,"c:common segments, s:not a bug, t:bug",,,"Generally the weather is displayed correctly but every little while I randomly get an ERROR

![screenshot from 2015-09-09 21 07 47](https://cloud.githubusercontent.com/assets/83137/9779980/584e3fc2-5737-11e5-9fd4-3ee946d657d1.png)

`:tmux:WeatherSegment:Yahoo returned malformed or unexpected response: '{""query"":{""count"":1,""created...`
"
1444,Powerline extends to a second line when using Vim and iTerm2,2015-09-09T07:22:20Z,2015-09-09T15:30:36Z,"c:b:vim, e:macos, s:invalid:error in environment, t:bug",,,"When opening Vim in iTerm2, powerline is incomplete in displaying all the infomation, and extends to another line.
![screen shot 2015-09-09 at 3 18 43 pm](https://cloud.githubusercontent.com/assets/9145357/9755647/2fcc5e7a-5706-11e5-924a-f4f116a80cd4.png)
This issue appeared right after I installed iTerm2, zsh, and oh-my-zsh. In Terminal.app, powerline is normal. Any ideas?
"
1443,Add option to detect internal_ip interface from default gateway,2015-09-05T22:07:57Z,2015-09-05T22:24:41Z,"c:common segments, t:enhancement",,,"This pull requests adds the option to specify `interface='default_gateway'` to the `internal_ip` segment. This displays the IP address of the interface connected to the [default gateway](https://en.wikipedia.org/wiki/Default_gateway).

**Motivation:** I own a MacBook Pro running OS X. Sometimes I am connected to the Internet via Ethernet (interface `en0`), other times via wireless (interface `en1`). Either way, I want to see the IPv4 address of the interface through which my Internet traffic is going.

**Details:** The default behavior for OS X is that IPv4 addresses are configured through DHCP, and only assigned if the interface is connected. But IPv6 addresses are assigned through [stateless address autoconfiguration](https://en.wikipedia.org/wiki/IPv6#Stateless_address_autoconfiguration_.28SLAAC.29) for both interfaces, no matter if they are connected. After adding `en` to the list of recognized interfaces, `interface='auto'` always selects `en0` (being the lowest-numbered), then does not display the segment when I am connected via wireless as `en0` does not have an IPv4 address. Selecting the interface based on the default gateway, however, yields my preferred results, and I also think this behavior would be useful to others.

Feel free to cherry pick to leave out the commit that adds an extra log message. I added it because I found it useful in my debugging, and `INFO` messages are not logged by default anyway.

Thanks!
"
1442,Strange characters appearing instead of arrows,2015-09-02T17:31:29Z,2015-09-02T17:36:29Z,"s:invalid:error in environment, t:bug",,,"I'm sure I've screwed up something obvious here, but first pass at installing Powerline for vim and tmux on Mac OSX 10.10.5. 

Here's what it looks like (arrows are pointing to the strange character): 

http://imagebin.ca/v/2EHhxEY4Ew3W

See those little characters that look like W on top of a sideways 3? Pretty sure that's where the arrows are supposed to be. 

Here's my ~/.vimrc file: 

```
set nocompatible              "" be iMproved, required
filetype off                  "" required                                        

"" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
"" alternatively, pass a path where Vundle should install plugins
""call vundle#begin('~/some/path/here')

"" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"" The following are examples of different formats supported.
"" Keep Plugin commands between vundle#begin/end.

"" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'

"" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'

""Git plugin vim airline, lightweight version of Powerline
""Plugin 'bling/vim-airline'

"" All of your Plugins must be added before the following line
call vundle#end()            "" required
filetype plugin indent on    "" required
"" To ignore plugin indent changes, instead use:
""filetype plugin on
""
"" Brief help
"" :PluginList       - lists configured plugins
"" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
"" :PluginSearch foo - searches for foo; append `!` to refresh local cache
"" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
""
"" see :h vundle for more details or wiki for FAQ
"" Put your non-Plugin stuff after this line

source /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim
set laststatus=2         

if has(""gui_running"")
       let s:uname = system(""uname"")
          if s:uname == ""Darwin\n""
                    set guifont=Inconsolata\ for\ Powerline:h15
                       endif
                   endif


set guifont=Inconsolata\ for\ Powerline:h15
let g:Powerline_symbols = 'fancy'
set encoding=utf-8
set t_Co=256
set fillchars+=stl:\ ,stlnc:\
set term=xterm-256color
set termencoding=utf-8


""add convenience variable vim-airline  
""let g:airline_powerline_fonts = 1

""these are taken from fullstackpython.com

"" enable syntax highlighting
syntax enable

"" show line numbers
set number

"" set tabs to have 4 spaces
set ts=4

"" indent when moving to the next line while writing code
set autoindent

"" expand tabs into spaces
set expandtab   

"" when using the >> or << commands, shift lines by 4 spaces
set shiftwidth=4

"" show a visual line under the cursor's current line 
set cursorline

"" show the matching part of the pair for [] {} and ()
set showmatch

"" enable all Python syntax highlighting features
let python_highlight_all = 1
```

Here is my ~/.tmux.conf file:

```
source /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf                             
```

Regarding font installation, I did download the fonts from here: 

https://github.com/powerline/fonts

But I couldn't not get the install.sh script to run, tried multiple ways, made sure it was executable, etc, but no luck. So I ended up just manually install all the fonts in all those folders to my /Library/Fonts folder. 

Any ideas what's going wrong here? 
"
1441,Using powerline inside of tmux causes the shell commands to overwrite itself,2015-08-31T05:20:28Z,2015-08-31T15:45:12Z,"c:b:shell, t:bug",,,"When I use powerline outside of tmux everything is working as usual the shell prompt is working fine but when I use it inside of a tmux session the problem arises the commands start overwriting themselves. I don't know if this has anything to do  with the .tmux.conf file . here is the screenshot 

![screenshot from 2015-08-31 10 45 08](https://cloud.githubusercontent.com/assets/10919848/9572479/fe94bd78-4fcd-11e5-98fe-4fd0371d1ebf.png)

I was typing sudo 'somecommand ' and it started overwriting itself
"
1440,Bar / Lemonbar click support,2015-08-30T15:53:09Z,2015-08-30T15:59:03Z,"c:b:wm, s:invalid:foreign bug, t:enhancement",,,"Is there any way for me to develop a segment that offers lemonbar's click support that doesn't involve returning the Abutton:command: in literal_contents?
"
1439,Fix support for passworded connections in mpd+python-mpd* player seg,2015-08-30T10:13:20Z,2015-08-30T11:29:35Z,"c:players, t:bug",,,"Fixes #1437
"
1438,username (i think) displaying twice,2015-08-27T11:49:07Z,2015-08-27T12:51:06Z,"c:b:shell, s:not a bug, t:bug",,,"Any idea why it displays my username twice??

In `.bashrc` (ubuntu) I have this as the last entry

```
    function _update_ps1() {
       PS1=""$(~/powerline-shell.py $? 2> /dev/null)""
    }

    if [ ""$TERM"" != ""linux"" ]; then
        PROMPT_COMMAND=""_update_ps1; $PROMPT_COMMAND""
    fi
```

and this is what I see

![powerline](https://cloud.githubusercontent.com/assets/2920180/9519812/fc873176-4cb9-11e5-9fb3-67e1f66f5c0b.png)

Any ideas?
"
1437,Can't get MPD and cpu_load_percent status to work with tmux,2015-08-27T06:48:26Z,2015-08-30T11:12:18Z,"c:b:tmux, c:common segments, c:players, t:bug",,,"First, for the music status bar, my mpd setup in `~/.config/powerline/themes/tmux/default.json` looks like this

``` json
{
    ""function"": ""powerline.segments.common.players.mpd"",
    ""name"": ""player"",
    ""args"": {
        ""host"": ""my_password@localhost"",
        ""port"": 2856
    }
},
```

I have `mpc` and `python2-mpd` package installed, and I can get mpd status from mpc by `mpc status --host=my_password@localhost --port=2856`.

But with powerline, it doesn't seems to work.

Second, for the `cpu_load_percent` status, my setup is

``` json
{
    ""function"": ""powerline.segments.common.sys.cpu_load_percent""
},
```

But it doesn't appear either.

Other segments work file to me.
Am I missing something?
"
1436,Adding zoom indicator to window status formats.,2015-08-26T15:03:54Z,2015-08-27T15:45:02Z,"c:b:tmux, t:enhancement",,,
1435,problem with tmux's network_load segment ,2015-08-26T07:34:45Z,2015-08-29T22:15:27Z,"c:common segments, t:bug",AttributeError,AttributeError: 'module' object has no attribute 'network_io_counters',"Hi! I got this error when using powerline.segments.common.net.network_load segment with tmux: 
ERROR:tmux:NetworkLoadSegment:Exception while computing state for u'auto': 'module' object has no attribute 'network_io_counters'
powerline/segments/common/net.py"", line 153, in _get_interfaces
    io_counters = psutil.network_io_counters(pernic=True)
AttributeError: 'module' object has no attribute 'network_io_counters'

Changing line 153 in ""powerline/segments/common/net.py"" to the following solves the problem for me:
try:
                        io_counters = psutil.net_io_counters(pernic=True)
                except AttributeError:
                        io_counters = psutil.network_io_counters(pernic=True) 
"
1434,Make shell tests use vterm as well,2015-08-21T15:34:08Z,2015-08-22T15:35:58Z,"c:tests, t:bug",,,"Should fix issue with failing shell tests once and forever. Maybe also including #931.
"
1433,"Vim has moved to github, so tip and version tag got renamed",2015-08-21T15:06:37Z,2015-08-21T15:20:43Z,"c:tests, t:enhancement",,,
1432,Add 'output' option to segments.i3wm.workspaces,2015-08-21T14:48:18Z,2015-08-22T17:12:53Z,"c:b:wm, t:enhancement",,,"moved out of #1431
"
1431,Rename bar (bar-aint-recursive) to lemonbar,2015-08-21T12:42:10Z,2016-01-08T22:19:46Z,"c:b:wm, t:enhancement",,,"PR for issue #1430

I sneaked in a small update to the i3wm.workspaces segment, I hope that's okay.
`powerline-lemonbar.py` got a lot more complicated, I bet you will know a cleaner way than reimplement all that in `LemonbarPowerline`?
"
1430,Rename bar (bar-aint-recursive) to lemonbar,2015-08-21T10:24:57Z,2017-08-15T19:02:55Z,"c:b:wm, t:enhancement",,,"The [bar](https://github.com/LemonBoy/bar) statusline has been renamed to `lemonbar` and gained popularity since (even though the repo is still called `bar` on github). I have already seen two people on reddit miss the fact that there are supported bindings.

The renderer, binding and docs section need to be renamed.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/26030038-rename-bar-bar-aint-recursive-to-lemonbar?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1429,bash prompt issues,2015-08-21T02:37:52Z,2015-08-21T16:23:17Z,"c:b:shell, s:invalid:configuration error, t:bug",,,"This may have been addressed in a previous/closed issue, but I couldn't find anything with a set of appropriate searches, so here goes.  I use powerline for my bash promptlocally, and on a development server I ssh into.  Locally it works just fine, but the prompt does not display correctly at all on the remote server.  The fact that it seems to work locally suggests (at least to me) that it is not an issue with my terminal emulator (urxvt), or fonts.

The prompt seems to overwrite itself, my input appears in column 2 on top of the prompt.  Disabling segments seems to alter this behavior somewhat, though I cannot lock down which segments are specifically causing issues.  

Some potentially relevant details:

localhost:

```
    $ uname -r
    4.1.5-1-ARCH

    $ bash --version
    GNU bash, version 4.3.39(1)-release (x86_64-unknown-linux-gnu)
```

remote server:

```
    $ uname -v
    #1 SMP Debian 3.2.57-3+deb7u1    

    $ bash --version
    GNU bash, version 4.2.37(1)-release (x86_64-pc-linux-gnu)
```
"
1428,How can I uninstall powerline?,2015-08-20T10:19:58Z,2015-08-20T14:08:26Z,s:invalid,,,"I've installed powerline on my Ubuntu by running `sudo pip install --user git+git://github.com/powerline/powerline`, but I find it's too overwhelming for me as a novice to use such an integrated tool, so I thought vim-airline could be a better fit for me. I've searched through this repo and the linked documentory but failed to find any pointer. And I've tried `sodu pip uninstall powerline` and `pip uninstall --user git+git://github.com/powerline/powerline`, but both didn't work. 

Sorry for asking such an unfriendly question. Thanks. 
"
1427,Spotify Segment list Index Out of range (Using OS X),2015-08-13T09:41:27Z,2015-09-14T18:26:13Z,"c:players, e:macos, s:invalid:foreign bug, t:bug",,,"Using OS X 10.10.1 iTerm2
Spotify Version : 1.0.11.134.ga37df67b
Spotify Segment not working using 
powerline.segments.common.players.spotify and powerline.segments.common.players.spotify_apple_script
Issue : IndexError: list index out of range
Screenshot :
![Screenshot :](http://i.imgur.com/N8jRB7J.png)
Dedicated Code to Error line :
![Dedicated Code to Error line :](http://i.imgur.com/x6HzrQ9.png)
sadly im not that python savvy but i know that list index out of range has to do if some try to grab for example a [6] but it doesn't exist
"
1426,Adds feature hide_domain (requested in #1420),2015-08-07T15:47:03Z,2015-10-19T21:03:41Z,"c:common segments, t:enhancement",,,"Set ""hide_domain"" to true in powerline.segments.common.env.user in
your shell theme json to hide the domain component of a username
(ex, ""user@DOMAIN.COM"" becomes just ""user"".)

Tests have been added, too, but an adult may want to double check
them.
"
1425,Powerline Truck Factor,2015-08-06T12:19:05Z,2015-08-06T15:31:31Z,"s:invalid, t:question",,,"As part of my PhD research on code authorship, we calculated the Truck Factor (TF) of some popular GitHub repositories.

As you probably know, the [Truck (or Bus) Factor](https://en.wikipedia.org/wiki/Bus_factor) designates the minimal number of developers that have to be hit by a truck (or quit) before a project is incapacitated. In our work, we consider that a system is in trouble if more than 50% of its files become orphan (i.e., without a main author).

More details on our work in this preprint: https://peerj.com/preprints/1233

We calculated the TF for **Powerline** and obtained a value of **1**.

The developer responsible for this TF is:

Nikolai Aleksandrovich (ZyX) - author of 97% of the files 

To validate our results, we would like to ask **Powerline** developers the following three brief questions:

(a) Do you agree that the listed developer is the main developer of **Powerline**?

(b) Do you agree that **Powerline** will be in trouble if the listed developer leave the project (e.g., if he wins in the lottery, to be less morbid)?

(c) Does **Powerline** have some characteristics that would attenuate the loss of the listed developer (e.g., detailed documentation)?

Thanks in advance for your collaboration,

Guilherme Avelino
PhD Student
Applied Software Engineering Group (ASERG)
UFMG, Brazil
http://aserg.labsoft.dcc.ufmg.br/
"
1424,Powerline-config tmux exiting with status 127,2015-08-05T13:16:12Z,2015-08-05T14:37:52Z,"c:b:tmux, s:invalid:error in environment, t:bug",,,"Running OS X 10.11 Beta 6, and Bash 3.2.

It seems that the rootless changes to the way the system Python are able to access `/usr` is causing an issue with powerline-config. 

Tmux is unable to show any components in the powerline statusbar and when trying to manually source .tmux.conf from within tmux the following is returned:

```
'powerline-config tmux setup' returned 127
```
"
1423,env,2015-08-04T09:53:25Z,2015-08-04T09:53:41Z,s:invalid,,,"edit: wasn't paying attention to window focus, sorry
"
1422,Enabling tabline (or equivalent) using Powerline in vim,2015-07-30T22:30:14Z,2015-07-31T04:37:46Z,"c:b:vim, s:invalid:configuration error, t:bug",,,"Hey there, thanks so much for your great project :smile: 

I have read the documentation several times and it mentions tabline is enabled for vim when using powerline.  I've tried installinrg the tabline plugin for vim to no avail, any idea what I'm missing?

**Airline**: notice that you can see a list of open files at the top of the screen

![screen shot 2015-07-31 at 8 27 11 am](https://cloud.githubusercontent.com/assets/1811813/8996798/4556e084-375e-11e5-92d3-8e2a44b378cd.png)

**Powerline**: as you can see, that file list is not present in powerline

![screen shot 2015-07-31 at 8 27 36 am](https://cloud.githubusercontent.com/assets/1811813/8996802/537168ba-375e-11e5-95e5-8a35e73251b6.png)

Thanks in advance :smile: 
Fotis
"
1421,powerline-daemon usage replaces the dynamic tmux Powerline status,2015-07-29T23:33:35Z,2015-08-07T22:55:46Z,"c:b:tmux, t:bug",,,"This issue is analogous to issue #960, except that instead of a different `powerline-daemon` usage message repeatedly printing within bash, the different usage string prints within the `tmux` status line and the prompt often gets an additional red segment (refer to the below screenshot). The usage message is: `usage: powerline-daemon [-h] [-r MODULE] [-w WIDTH] [--last-exit-code INT]`. Changing directories within a problematic tmux session often yields multiple: `failed to connect to server` errors. Detaching from such a session and attempting to re-attach, yields: `no sessions`. It appears that this issue is causing my entire tmux server to crash.

Tmux `powerline-daemon` error:
![image](https://cloud.githubusercontent.com/assets/10501947/8971988/bdcd43c8-3623-11e5-897b-9e0f088b1047.png)

Initially valid tmux state for comparison (please ignore the dotted line; it is an artifact of my screenshot application):
![image](https://cloud.githubusercontent.com/assets/10501947/8972011/ea0f4134-3623-11e5-9653-ab829c32faa1.png)

I am using the current release of Powerline, installed only via pip 7.10. Every other tested aspect of the Powerline status setup is working in my configuration (bash prompt, IPython, PDB, and Vim). Tmux works with Powerline fine, except for this problem. As in issue #960, Powerline works correctly in Tmux for a while (as shown above) and only eventually has this error, at which point it never works correctly for that session.

Once the error does occur, it also seems to affect various plugins. For example, I can usually do `prefix + X` (shift + x) to kill my current session without detaching tmux (via the [tmux sessionist plugin](https://github.com/tmux-plugins/tmux-sessionist)). However, after this error occurs in a session, attempting to do so results in an error. I assume that this is due to the tmux server connection going down.

The directory returned by `python -c 'import powerline; print(powerline.__file__)` is consistent with the directory prefixes used in both my bash and tmux configurations.

---

Relevant environment variables, echoed from a tmux session:

---

```
$PROMPT_COMMAND
```

```
_powerline_set_prompt
history -a; 
_powerline_tmux_set_pwd
```

---

```
$PS1
```

```
\[^[[0;38;5;231;48;5;31;1m\] cviner \[^[[0;38;5;31;48;5;240;22m\] \[^[[0;38;5;250;48;5;240m\]~ \[^[[0;38;5;245;48;5;240;22m\] \[^[[0;38;5;250;48;5;240m\]cytomod \[^[[0;38;5;245;48;5;240;22m\] \[^[[0;38;5;250;48;5;240m\]experiments \[^[[0;38;5;245;48;5;240;22m\] \[^[[0;38;5;252;48;5;240;1m\]linked-2015-07-29-MEME-ChIP-test \[^[[0;38;5;240;49;22m\] \[^[[0m\]
```

---

```
$POWERLINE_COMMAND
```

```
powerline
```

---

`type _powerline_set_prompt` returns:

```
_powerline_set_prompt is a function
_powerline_set_prompt ()
{
    local last_exit_code=$?;
    local jobnum=""$(jobs -p|wc -l)"";
    PS1=""$(_powerline_prompt aboveleft $last_exit_code $jobnum)"";
    if test -n ""$POWERLINE_SHELL_CONTINUATION$POWERLINE_BASH_CONTINUATION""; then
        PS2=""$(_powerline_local_prompt left -r.bash $last_exit_code $jobnum continuation)"";
    fi;
    if test -n ""$POWERLINE_SHELL_SELECT$POWERLINE_BASH_SELECT""; then
        PS3=""$(_powerline_local_prompt left '' $last_exit_code $jobnum select)"";
    fi;
    return $last_exit_code
}
```

---

My `.tmux.conf` reads:

```
#------------------------------------------
set -g @tpm_plugins '               \
  tmux-plugins/tpm                  \
  tmux-plugins/tmux-sensible        \
  tmux-plugins/tmux-logging         \
  tmux-plugins/tmux-resurrect       \
  tmux-plugins/tmux-pain-control    \
  tmux-plugins/tmux-sessionist     \
'

set -g history-limit 1000000


set -g @resurrect-save 'E'
set -g @resurrect-restore 'R'
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
# set -g @resurrect-strategy-nvim 'session'

# mousmocil --list)"" teamocile scrolling support
# From: https://gist.github.com/simme/1297707
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-window-option -g mode-mouse on

#From: http://superuser.com/a/395273
set-window-option -g xterm-keys on

# pane movement; From: http://unix.stackexchange.com/a/14301
bind-key < command-prompt -p ""join pane from:""  ""join-pane -s '%%'""
bind-key > command-prompt -p ""send pane to:""  ""join-pane -t '%%'""

# Tmux statusline Powerline config
# From: https://powerline.readthedocs.org/en/master/usage/other.html#tmux-statusline
run-shell ""powerline-daemon -q""
source ""/mnt/work1/users/home2/cviner/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf""

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
#------------------------------------------
```
"
1420,Strip domain component from username?,2015-07-29T15:21:32Z,2015-10-19T21:03:41Z,"c:common segments, t:enhancement",,,"Before I dig too far into the source, I want to know if there's already a provision to strip the domain component from the username portion of the shell.

So I'm clear: right now because I'm on a Linux VM joined to an AD domain, my username shows up as username@DOMAIN.COM in my shell prompt.  That obviously takes up a lot of space and I'd like to get that back.

Thanks!
"
1419,vim start up Error detected while processing function Pl#Statusline,2015-07-25T16:41:33Z,2015-07-25T16:42:58Z,"s:invalid, t:bug",,,"Cause unknown error.
vim start up after 

```
Error detected while processing function Pl#Statusline:
0
E684: list index out of range: 0
E15: Invalid expression: g:Pl#THEME[a:statusline].mode_statuslines[mode]
```

powerline is comment out.

```
"" NeoBundle 'Lokaltog/vim-powerline'
```

Not error.

Perhaps powerline is the cause.
"
1418,Add ac-charging indication for battery segment,2015-07-24T14:18:06Z,2015-08-07T22:08:58Z,"c:common segments, t:enhancement",,,
1417,"Vim plugin not displaying properly in tmux, okay otherwise",2015-07-24T00:47:31Z,2015-07-24T02:44:59Z,"c:b:wm, s:invalid:error in environment, t:bug",,,"I am having an issue when I open Vim, but only if I am in a tmux session.

It normally looks like this:

![vim](https://s3.amazonaws.com/miscds/vim.png)

but inside tmux looks like this:

![tmux-vim](https://s3.amazonaws.com/miscds/tmux-vim.png)

My patched fonts are working, so I am unsure why this is occurring.

My tmux config looks like:

```
source ""/Users/damien/anaconda/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf""
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify ""centre""
```
"
1416,Fish Shell - $CMD_DURATION,2015-07-21T01:52:36Z,,"c:b:shell, t:enhancement",,,"I recently switched over from powerline-shell, and am loving this powerline. Except the lack of a `timer`, which can be in my case provided by Fish's (unexported) Env Var of $CMD_DURATION, somehow this would need to be picked up on, is this possible?
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/24682380-fish-shell-cmd_duration?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1415,Workaround tmux bug: additional space in display -p '#D' output,2015-07-19T11:34:15Z,2015-07-20T05:19:07Z,"c:b:tmux, t:bug",,,"Fixes #1412
"
1414,Fix manpage generation with python3,2015-07-19T09:12:11Z,2015-07-19T11:24:02Z,"c:documentation, e:python-3, t:bug",,,"Fix manpage generation with Python 3 and allow packagers to select which version of sphinx-build (python2 ou 3) they want to use. Fixes issue #1388.
"
1413,"401:ERROR:vim:powerline:Failed to create renderer: [Errno 28] Auf dem Gerät ist kein Speicherplatz mehr verfügbarYou may need to increase the inotify limits on your system, via /proc/sys/inotify/max_user_*",2015-07-18T12:23:30Z,2015-07-18T13:43:20Z,"c:core, s:invalid:error in environment, t:bug",OSError,"OSError: [Errno 28] Auf dem Gerät ist kein Speicherplatz mehr verfügbarYou may need to increase the inotify limits on your system, via /proc/sys/inotify/max_user_*","Hello, I got some problems with my vim-powerline configuration. The notice to check my inotify limits at /proc/sys/inotify/max_user_\* won't work, because the folder inotify is not existent.

``` log
2015-07-18 14:20:56,401:ERROR:vim:powerline:Failed to create renderer: [Errno 28] Auf dem Gerät ist kein Speicherplatz mehr verfügbarYou may need to increase the inotify limits on your system, via /proc/sys/inotify/max_user_*
Traceback (most recent call last):
  File ""/usr/lib/python3.4/site-packages/powerline/__init__.py"", line 742, in update_renderer
    self.create_renderer(**cr_kwargs)
  File ""/usr/lib/python3.4/site-packages/powerline/__init__.py"", line 480, in create_renderer
    self.config_loader.set_watcher(self.common_config['watcher'])
  File ""/usr/lib/python3.4/site-packages/powerline/lib/config.py"", line 84, in set_watcher
    self.watcher.transfer_calls(watcher)
  File ""/usr/lib/python3.4/site-packages/powerline/lib/config.py"", line 49, in transfer_calls
    getattr(watcher, attr)(*args, **kwargs)
  File ""/usr/lib/python3.4/site-packages/powerline/lib/watcher/inotify.py"", line 100, in watch
    self.handle_error()
  File ""/usr/lib/python3.4/site-packages/powerline/lib/inotify.py"", line 138, in handle_error
    raise OSError(eno, self.os.strerror(eno) + str(extra))
OSError: [Errno 28] Auf dem Gerät ist kein Speicherplatz mehr verfügbarYou may need to increase the inotify limits on your system, via /proc/sys/inotify/max_user_*
Traceback (most recent call last):
  File ""<string>"", line 12, in <module>
  File ""/usr/lib/python3.4/site-packages/powerline/__init__.py"", line 796, in setup
    self.do_setup(*args, **kwargs)
  File ""/usr/lib/python3.4/site-packages/powerline/vim.py"", line 203, in do_setup
    self.update_renderer()
  File ""/usr/lib/python3.4/site-packages/powerline/__init__.py"", line 742, in update_renderer
    self.create_renderer(**cr_kwargs)
  File ""/usr/lib/python3.4/site-packages/powerline/__init__.py"", line 480, in create_renderer
    self.config_loader.set_watcher(self.common_config['watcher'])
  File ""/usr/lib/python3.4/site-packages/powerline/lib/config.py"", line 84, in set_watcher
    self.watcher.transfer_calls(watcher)
  File ""/usr/lib/python3.4/site-packages/powerline/lib/config.py"", line 49, in transfer_calls
    getattr(watcher, attr)(*args, **kwargs)
  File ""/usr/lib/python3.4/site-packages/powerline/lib/watcher/inotify.py"", line 100, in watch
    self.handle_error()
  File ""/usr/lib/python3.4/site-packages/powerline/lib/inotify.py"", line 138, in handle_error
    raise OSError(eno, self.os.strerror(eno) + str(extra))
OSError: [Errno 28] Auf dem Gerät ist kein Speicherplatz mehr verfügbarYou may need to increase the inotify limits on your system, via /proc/sys/inotify/max_user_*
An error occurred while importing powerline module.
This could be caused by invalid sys.path setting,
or by an incompatible Python version (powerline requires
Python 2.6, 2.7 or 3.2 and later to work). Please consult
the troubleshooting section in the documentation for
possible solutions.
```
"
1412,Tmux right side only visible for first 3 windows,2015-07-15T19:11:59Z,2015-07-19T19:05:25Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"When I first start tmux, with no prior sessions, the right side of the status bar appears as normal (with uptime, time, server name, etc.). However, after I add three additional windows (for a total of four), the Powerline data changes as follows:
- If `powerline-daemon` **is** running, then the right side of the status bar changes to the first line of the powerline-daemon usage message: `usage: powerline-daemon [-h] [-r MODULE] [-w WIDTH] [--last-exit-code INT]`.
- If `powerline-daemon` **is not** running, then the right side of the status bar becomes blank.

If I kill or start powerline-daemon while inside a tmux session, the status bar will adjust to the corresponding appearance after a moment.

This is not an issue of _how many_ tmux windows I have. If, after creating new windows, I switch back to one of the first three windows, the status bar goes back to normal. Switching back to window 4+, the status bar goes wrong again.

This is not an issue of the window number. If I destroy window 1 (where the status bar was correct), and then create another window, that new window will be numbered 1, but the status bar won't be correct for it. I suspect this is because the ""pane ID"" always increases; although window numbers get re-used, pane IDs do not.

The tmux window count applies across sessions, so if I ""use up"" the correctly working windows in one session, disconnect from that session, and create a new session, _all_ the windows in the new session will have the wrong status bar.

Killing the tmux server (as by exiting all sessions) and restarting it makes new windows have the right status bar, but only the first three windows again.

If I run the tmux command `run-shell 'powerline tmux right'`, the output appears correct. Likewise if I run <code>env ""$POWERLINE_COMMAND"" $POWERLINE_COMMAND_ARGS tmux right -R pane_id=`tmux display -p ""#D""`</code>, which is what's configured in _bindings/tmux/powerline-base.conf_. (In my environment, `POWERLINE_COMMAND` is simply `powerline`, and `POWERLINE_COMMAND_ARGS`.)

I'm using Powerline 2.2 installed with `pip3 install powerline-status` under Python 3.4 and Tmux 2.0.

What else can I do to investigate this problem?
"
1411,"tmux line ""hovers"" when full-screen in OS X",2015-07-13T22:56:07Z,2015-07-14T04:56:55Z,"c:b:tmux, s:invalid:error in environment, t:bug",,,"With `tmux` running in Terminal.app, powerline hovers - by roughly it's own height - above the bottom of the screen when full screen.

The effect is not present at any non-full-screen height of Terminal while resizing.

Using OS X 10.11 (Beta) and Terminal 2.6; I can verify if also present on 10.10 later.
"
1410,Spotify segment not working,2015-07-11T18:16:11Z,2015-07-11T22:44:51Z,"c:b:tmux, e:macos, s:invalid:foreign bug, t:bug",,,"Hi guys, I'm trying to setup the spotify segment on OSX:

```
{
  ""segments"": {
    ""right"": [
      {
        ""function"": ""powerline.segments.common.players.spotify"",
        ""name"": ""player""
      }
    ]
  }
}
```

I've tried also `spotify_apple_script` but in both cases the right part of the bar disappear, if I shutdown spotify or remove the segment it works again, is it something wrong in the config?
"
1409,Improve developer documentation,2015-07-10T12:59:23Z,,"c:documentation, t:enhancement",,,"Recent issue (#1407) has shown that some critical information is missing from `develop/segments.rst`:
1. It should remind about adding highlight groups to the configuration.
2. It should describe how to use powerline-lint for first-level troubleshooting new segments.
3. It should describe powerline/segments directory layout more thoroughly.
4. It should describe powerline.lib.threaded.

// And, BTW, ThreadedDocumenter should be renamed to SegmentDocumenter.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/24077233-improve-developer-documentation?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1408,Added tips for Urxvt compiler flags,2015-07-10T09:30:57Z,2015-10-15T21:21:49Z,"c:documentation, t:enhancement",,,"In regards to #684 , this might be useful to have in the tips & tricks.

Apparently, my editor also trimmed some whitespace, sorry about that. ;)
"
1407,add subprocess segment,2015-07-10T08:00:26Z,2015-07-10T12:01:09Z,"c:common segments, s:invalid, t:enhancement",,,
1406,Using MacPorts python,2015-07-07T22:19:06Z,2015-07-07T22:55:53Z,"c:installation, s:invalid:foreign bug, t:bug",,,"I have MacPorts python selected. The problem with powerline is all the binaries that use python use
# !/usr/bin/python

which goes to the system python and crashes or fails to load the proper python bindings like mercurial bindings (also from MacPorts).

If I change all of the #!/usr/bin/python to
# !/usr/bin/env python

Everything works and I can use MacPorts python with MacPorts MacVim and MacPorts zsh.
"
1405,Powerline and »normal« statusbar of other plugins,2015-07-07T21:46:31Z,2015-07-08T04:20:57Z,"c:b:vim, s:invalid, t:enhancement",,,"Hello,

I am using the ATplugin for LaTeX support within vim. The ATplugin generates its own statusbar at the bottom of the page with some useful hints for LaTeX. But now while loading a tex file the powerline gets somehow overwritten. It would be nice, to see them both, for example powerline above the statusbar of ATP or at the top of the editor...is there a way to manage that?
"
1404,"Do not use tcsh, mksh, busybox and socat from deps",2015-07-06T18:07:35Z,2015-08-21T15:18:56Z,"c:tests, t:enhancement",,,"All of them were whitelisted:
- Tcsh was whitelisted in travis-ci/travis-ci#3882.
- Mksh was whitelisted in travis-ci/travis-ci#3881.
- Busybox was whitelisted in travis-ci/travis-ci#3880.
- Socat was whitelisted in travis-ci/travis-ci#3883.
"
1403,Unused Right-hand Column,2015-07-06T10:52:07Z,2015-07-06T15:04:13Z,"c:b:shell, s:invalid:configuration error, s:invalid:foreign bug, t:bug",,,"![powerline](https://cloud.githubusercontent.com/assets/2403652/8520753/3ce062e6-23d5-11e5-9559-b0b9cc752e5b.JPG)
As you can see, I am using Powerline (Daemonized) for both Tmux and Fish, but the powerline within Fish isn't flush to the right hand side like the tmux one is, this isn't the case only within tmux, I can actually place my cursor outside of the red user segment. Any ideas what could be causing this behaviour?
"
1402,Issues with tmux from master.,2015-07-04T10:25:55Z,2015-07-04T21:37:42Z,"c:b:tmux, s:invalid:unsupported software, t:bug",,,"Not sure if you're aware, or if it's an issue with just me, but I've had some issues with tmux's master branch and Powerline, the issue is gone when I downgrade to tmux 2.0.

The problem starts after I start tmux, this will appear in the right status bar.

![](http://i.imgur.com/r9TU0ra.png)

After a few seconds it will go back to:

![](http://i.imgur.com/GRifx6h.png)

Then, if I were to create a few more windows, say, 5, this happens:

![](http://i.imgur.com/b2hP7YM.png)

The right status bar is blank, so I create a few more windows, which causes the first image to appear in the right status bar.

`powerline-config tmux setup` does nothing to change this.

`powerline-render tmux right -R pane_id=$(tmux display -p ""#D"")` has everything I want, but tmux doesn't display it.

`tmux.conf`:

```
run-shell ""powerline-daemon -q""
set -g mode-keys vi
set -g status-keys vi

bind-key m split-window mutt
bind-key q run-shell -b tmux-charsel
bind-key t run-shell -b tmux-task

set -g prefix C-b
bind-key a send-prefix
bind-key C-a last-window

bind-key 0 select-window -t :10

bind-key C-d detach-client -P

bind-key ""#"" last-window
bind-key @ switch-client -l

#bind-key ] paste-buffer -p

set -g base-index 1

set -g display-time 2000

set -s escape-time 0

set -g aggressive-resize on

set -g message-bg colour235
set -g message-fg white



set -g pane-border-fg '#333333'
set -g pane-active-border-fg cyan

set -g mode-keys vi
set -g default-terminal 'screen-256color'
set -g update-environment ""REMOTE_HOSTNAME SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY""

set-window-option -g pane-base-index 1

set -g history-limit 200000

source ~/powerline/powerline/bindings/tmux/powerline.conf
run-shell ~/.tmux/tmux-pain-control/pain_control.tmux
run-shell ~/.tmux/tmux-copycat/copycat.tmux

```
"
1401,powerline-config tmux fails on blank lines,2015-06-30T15:02:04Z,2015-06-30T16:04:47Z,"c:b:tmux, s:invalid, t:bug",IndexError,IndexError: list index out of range,"Trying to setup the config-files for tmux, running:

``` bash
powerline-config tmux setup
```

Get IndexError:

``` python
Traceback (most recent call last):
  File ""/home/user/.local/bin/powerline-config"", line 6, in <module>
    exec(compile(open(__file__).read(), __file__, 'exec'))
  File ""/home/user/builds/powerline/scripts/powerline-config"", line 22, in <module>
    args.function(pl, args)
  File ""/home/user/builds/powerline/powerline/commands/config.py"", line 15, in __call__
    self.function(*args, **kwargs)
  File ""/home/user/builds/powerline/powerline/bindings/config.py"", line 212, in tmux_setup
    source_tmux_files(pl, args, tmux_version=tmux_version, source_tmux_file=stf)
  File ""/home/user/builds/powerline/powerline/bindings/config.py"", line 74, in source_tmux_files
    source_tmux_file(os.path.join(TMUX_CONFIG_DIRECTORY, 'powerline-base.conf'))
  File ""/home/user/builds/powerline/powerline/bindings/config.py"", line 198, in source_tmux_file_nosource
    args = [args[0]] + [replace_env(arg) for arg in args[1:]]
IndexError: list index out of range
```

What's causing this is a newline in the configfile: powerline/bindings/tmux/powerline-base.conf

``` bash
...
set -g window-status-current-format ""#[$_POWERLINE_WINDOW_CURRENT_HARD_DIVIDER_COLOR]$_POWERLINE_LEFT_HARD_DIVIDER

#Blank line above ^
 # Legacy status-left definition to be overwritten for tmux Versions 1.8+
...
```

I'm at
Branch: master
Commit: 03195cf93f
"
1400,Fix powerline-setup.fish prompt args,2015-06-29T23:27:27Z,2015-06-29T23:51:03Z,"c:b:shell, s:invalid, t:bug",,,"powerline expects arguments options with underscores, not hyphens.
"
1399,2.2 update stops supporting blank lines in zsh prompt,2015-06-29T01:31:49Z,2015-06-29T01:35:07Z,"c:b:shell, s:wontfix, t:bug",,,"In powerline 2.1 I could leave a blank line in my prompt by having an empty dictionary in the JSON configuring the shell prompt.

In the example default.json file below, 2.1 would have a blank line, followed by the line starting with the shell mode, followed by the line starting with the date.  In powerline 2.2 the empty hash at the end of the 'above' array is ignored, and no blank line is left.

``` json
{
  ""segments"": {
    ""above"": [
      {
        ""left"": [
          {
            ""function"": ""powerline.segments.shell.mode""
          },
          {
            ""function"": ""powerline.segments.common.env.user"",
            ""priority"": 30
          },
          {
            ""function"": ""powerline.segments.common.net.hostname"",
            ""priority"": 10
          },
          {
            ""function"": ""powerline.segments.shell.cwd"",
            ""priority"": 10,
            ""args"": {
              ""use_path_separator"": ""false"",
                            ""dir_limit_depth"": 0
            }
          }
        ],
        ""right"": [
          {
            ""function"": ""powerline.segments.shell.last_pipe_status"",
            ""priority"": 10
          }
        ]
      },
      {
      }
    ],
    ""left"": [
      {
        ""function"": ""powerline.segments.common.time.date"",
        ""priority"": 10,
        ""args"": {
          ""format"": ""%H:%M:%S""
        }
      },
      {
        ""function"": ""powerline.segments.common.env.virtualenv"",
        ""priority"": 50
      },
      {
        ""function"": ""powerline.segments.common.vcs.branch"",
        ""priority"": 40,
        ""args"": {
          ""status_colors"": ""true""
        }
      }
    ],
    ""right"": [
    ]
  }
}
```
"
1398,VCS module in ZSH doesn't show git info anymore,2015-06-26T01:28:43Z,2015-06-26T14:14:05Z,"c:VCS support, c:b:shell, s:invalid:error in environment, t:bug",,,"Hi,

just reinstalled my OS (FreeBSD 10.1) and while doing that switched powerline from an old development version to the officially released version with pip. Now powerline VCS module doesn't show anything anymore for git repos, while mercurial still works fine.

If if helps, I just did a pull in the old repo I used before the reinstall to see at what version I was:

From https://github.com/Lokaltog/powerline
   34f53ac..4d1b8e4  master     -> origin/master
   9823701..0dc5c39  develop    -> origin/develop
- [new tag]         2.1.4      -> 2.1.4
- [new tag]         2.1        -> 2.1
- [new tag]         2.1.1      -> 2.1.1
- [new tag]         2.1.2      -> 2.1.2
- [new tag]         2.1.3      -> 2.1.3
  Updating 34f53ac..4d1b8e4

Thanks
"
1397,workaround for strange characters in vim,2015-06-23T16:57:50Z,2015-06-23T20:59:31Z,"c:documentation, s:wontfix, t:enhancement",,,"Just wanted to write a quick guide for vim users, who using/or want to use powerline, but they get strange characters. I know Lokaltog/powerline is deprecated, but still, many uses that.
1. Install Lokaltog's powerline: https://github.com/Lokaltog/vim-powerline
2. Install patched-fonts(https://github.com/powerline/fonts), and set the new fonts in your terminal, like: Ubuntu Mono derivative Powerline
3. Copy this to your .vimrc file:

```
set laststatus=2
let g:Powerline_symbols = 'fancy'
set termencoding=utf-8
set encoding=utf-8
let g:Powerline_dividers_override = [""\Ue0b0"", ""\Ue0b1"", ""\Ue0b2"", ""\Ue0b3""]
let g:Powerline_symbols_override = { 'BRANCH': ""\Ue0a0"", 'LINE': ""\Ue0a1"", 'RO': ""\Ue0a2"" }
```

And thank god, it's working!

![ehqesln](https://cloud.githubusercontent.com/assets/9632419/8311900/ba131dae-19d9-11e5-8886-6d1c393125f7.png)
"
1396,time.cpython-34m.so: undefined symbol: PyExc_OSError,2015-06-16T13:13:07Z,2015-06-16T19:24:35Z,"c:b:vim, s:invalid:foreign bug, t:bug",,,"![vimpowerlineerror](https://cloud.githubusercontent.com/assets/1650090/8183601/c7a872ca-146b-11e5-9ec5-458e931242e0.png)
When I start vim,it shows the window.
"
1395,Support timezones without any external libraries,2015-06-16T10:00:59Z,2015-06-16T19:40:19Z,"c:common segments, s:invalid, t:enhancement",,,
1394,tmux displays config on first session startup..,2015-06-16T08:47:22Z,2015-06-16T19:30:28Z,"c:b:tmux, s:wontfix, t:bug",,,"When starting a fresh tmux session, a message displaying what seems to be the running config is displayed. The message does not get displayed on subsequent sessions I open, nor when I disable powerline on my .tmux.conf file. It is my first day using the plugin on tmux, so I'm not sure if this is a normal occurrence.

![tmux startup](http://imgbin.org/images/24259.PNG)  

I currently have the following lines on **.tmux.conf**
`run-shell ""powerline-daemon -q""`
`source ""/usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf""`
`set-window-option -g utf8 on`
`set -g default-terminal ""screen-256color""`

Thanks you.
"
1393,Use psutil.boot_time() function if appropriate,2015-06-14T22:23:22Z,2015-06-14T22:36:04Z,"c:common segments, t:bug",,,"It now replaced psutil.BOOT_TIME attribute.

Fixes #1391
"
1392,powerline on ubuntu server (non-gui),2015-06-14T22:07:32Z,2015-06-15T06:01:16Z,"s:invalid:error in environment, t:bug",,,"I installed powerline using the patched fonts as shown [on the docs page](http://powerline.readthedocs.org/en/latest/installation/linux.html), but I'm still unable to get the status line to display the proper symbols: 

![powerline](http://i.stack.imgur.com/STUcB.png)

After installing the patched fonts in  ~/.fonts, I updated the font cache, and restarted the system but I still get the same results.  I've never really worked with fonts before so I'm thinking I'm missing something in my configuration to allow the system to use the patched fonts. 

Things I've done so far:
1. Installed powerline using Vundle, uninstalled it in favor of the pip install version as mentioned above
2. Intalled patched fonts with provided install.sh script (I also copied the fonts to /usr/share
3. Updated fc-cache 
4. set the locale, and 256 color for my terminal
5. In my .vimrc file
- set rtp+=/usr/local/lib/python2.7/dist-packages/powerline/bindings/vim/
- set t_Co=256
- set laststatus=2
- set encoding=utf-8
- let g:Powerline_symbols = 'fancy' (I tried it with and without this line)

Any help or suggestions are appreciated.
"
1391,ERROR:tmux:uptime:Exception while computing segment: 'module' object has no attribute 'BOOT_TIME',2015-06-14T15:13:58Z,2015-06-14T22:36:04Z,"c:common segments, t:bug",,,"I'm running a fresh version of OS X 10.10.3.

After installing Powerline (iTerm 2.1.1), in the bottom right corner I get the following error message:

```
ERROR:tmux:uptime:Exception while computing segment: 'module' object has no attribute 'BOOT_TIME'
```

![Screenshot](http://i.imgur.com/WPkZXp4.png)

Does this have something to do with psutil?
"
1390,Docs do not cover setup for vim,2015-06-05T17:23:25Z,2015-06-05T17:31:49Z,"c:documentation, s:invalid, t:bug",,,"I went to https://github.com/Lokaltog/vim-powerline, which says the plugin is deprecated in favor of Localtog/powerline, which redirects to powerline/powerline. This project has no information on setting up vim. The documentation only says what the prerequisites are for vim -- but what repo do I use for the actual vim plugin??
"
1389,Gmail folder name for mail segment,2015-06-01T12:02:16Z,2015-06-01T15:39:58Z,"c:common segments, s:invalid",,,"Hi there,

Could you provide an example of a segment mail configuration example where something else than INBOX is used or a link to the folders/subfolders format used by gmail is explained ?

Thanks in advance !
"
1388,Manpage generation with python3,2015-05-31T07:18:44Z,2015-07-19T11:24:03Z,"c:documentation, t:bug",,,"I had to add
""from functools import reduce""
to the beginning of /docs/source/powerline_automan.py
"
1387,Fix dash bindings on OS X,2015-05-30T14:40:54Z,2015-05-30T14:45:34Z,"c:b:shell, e:macos, t:bug",,,"Fixes two errors that occur while using Powerline with the dash shell under Mac OS X.

**Problem:** Execution of the mktemp command fails.
**Cause:** mktemp requires a mandatory argument on OS X.
**Solution:** Provide a template using the -t option. While it is a deprecated option on Linux, it is still supported and provides compatibility with other systems.

**Problem:** The powerline executable fails to be called because its command line unexpectedly contains spaces.
**Cause:** The _POWERLINE_JOBS variable contains spaces because the wc command returns spaces before the number on OS X.
**Solution:** Trim the spaces before assigning the value to the variable.

(Follow-up to #1364)
"
1386,Test,2015-05-30T10:47:14Z,2015-05-30T10:57:49Z,"s:invalid, t:bug",,,"Test.
"
1385,Homebrew Python 2.7.10 upgrade causing powerline to error,2015-05-29T15:33:40Z,2015-06-05T17:15:23Z,"c:b:vim, s:invalid:error in environment, t:bug",,,"after upgrading python to 2.7.10 and reinstalling powerline-status (2.1.4) from pip, i get the following error when loading up vim:

```
$ vim
An error occurred while importing powerline module.
This could be caused by invalid sys.path setting,
or by an incompatible Python version (powerline requires
Python 2.6, 2.7 or 3.2 and later to work). Please consult
the troubleshooting section in the documentation for
possible solutions.
Error detected while processing /usr/local/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim:
line  157:
E887: Sorry, this command is disabled, the Python's site module could not be loaded.
Press ENTER or type command to continue
```
"
1384,Homebrew upgrade to Python 2.7.10 breaks Powerline with ZSH,2015-05-29T00:07:40Z,2015-06-03T17:21:47Z,"c:b:shell, e:python-2.7, s:invalid:error in environment, t:bug",ImportError,"ImportError: dlopen(/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so, 2): Symbol not found: __PyErr_ReplaceException","After upgrading to Python 2.7.10, I get the following using default configs for powerline:

```
Last login: Thu May 28 19:56:33 on ttys000
2015-05-28 20:02:12,797:ERROR:shell:segment_generator:Failed to import attr hostname from module powerline.segments.common.net: dlopen(/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so, 2): Symbol not found: __PyErr_ReplaceException
  Referenced from: /usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so
  Expected in: flat namespace
 in /usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/site-packages/powerline/__init__.py"", line 317, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
  File ""/usr/local/lib/python2.7/site-packages/powerline/segments/common/net.py"", line 8, in <module>
    from powerline.lib.url import urllib_read
  File ""/usr/local/lib/python2.7/site-packages/powerline/lib/url.py"", line 9, in <module>
    from urllib2 import urlopen, HTTPError  # NOQA
  File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py"", line 94, in <module>
    import httplib
  File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py"", line 80, in <module>
    import mimetools
  File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/mimetools.py"", line 6, in <module>
    import tempfile
  File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/tempfile.py"", line 32, in <module>
    import io as _io
  File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/io.py"", line 51, in <module>
    import _io
ImportError: dlopen(/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so, 2): Symbol not found: __PyErr_ReplaceException
  Referenced from: /usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so
  Expected in: flat namespace
 in /usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so
2015-05-28 20:02:12,799:ERROR:shell:segment_generator:Failed to generate segment from {u'function': u'powerline.segments.common.net.hostname', u'priority': 10}: Failed to obtain segment function
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/site-packages/powerline/segment.py"", line 322, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/local/lib/python2.7/site-packages/powerline/segment.py"", line 69, in get_function
    raise ImportError('Failed to obtain segment function')
ImportError: Failed to obtain segment function
```

Reverting back to Python 2.7.9 fixes the issue for me. This feels like a packaging issue, but I figured I'd file here first since Powerline is the only thing I've noticed that's broken.
"
1383,"Include configurable gradient in uptime, like it's in mail segment",2015-05-26T17:15:00Z,2015-05-26T17:23:18Z,"c:common segments, s:wontfix, t:enhancement",,,"Would be cool to be able to configure a gradient background for the Uptime segment, much like the Mail segment currently does. That would serve as a warning to know the computer is running for too long (or maybe a whooray?).
"
1382,Can't use powerline-i3,2015-05-24T16:25:30Z,2015-05-30T01:35:24Z,"c:b:wm, t:bug",,,"Hello!

The bar shows up with anything but a "",["" when I pipe powerline-i3 to lemonbar like this: /usr/local/lib/python2.7/dist-packages/powerline/bindings/i3/powerline-i3.py | lemonbar

When using bar-aint-recursive instead, it returns a: File ""/usr/local/lib/python2.7/dist-packages/powerline/bindings/i3/powerline-i3.py"", line 38, in render sys.stdout.flush() IOError: [Errno 32] Broken pipe

Testing powerline-status 2.1.4 with nothing on .config/powerline
"
1381,Add support for truncating tmux segments,2015-05-23T12:07:40Z,2015-05-23T13:43:21Z,"c:b:tmux, t:enhancement",,,"Ref #1328 
Ref #137
"
1380,Symbols not displaying when using launchd to start powerline-daemon,2015-05-22T18:56:00Z,2015-05-22T19:16:58Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"If I start `powerline-daemon`, either in daemon or foreground mode, using a bash shell, then the bash prompt displays symbols properly.

However, if I use launchd on OS X to start `powerline-daemon`, everything functions properly, but the bash prompt won't display the symbols.

Any idea how I should troubleshoot?
"
1379,Add stat-based threaded directory watcher,2015-05-22T18:07:27Z,,"c:watchers, t:enhancement",,,"Discussion was in #833.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/16787134-add-stat-based-threaded-directory-watcher?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1378,Update players.py,2015-05-22T14:11:34Z,2015-05-22T18:04:47Z,"c:documentation, c:players, s:duplicate, t:enhancement",,,"Give some hints to install compatible `mpd` Python module, and rewrite to show that the Python package is preferred (for example player status isn't supported properly via `mpc` command).
"
1377,Update reference.rst,2015-05-22T14:10:58Z,2015-05-22T18:04:14Z,"c:documentation, s:duplicate, t:enhancement",,,"Clarifying a bit the confusion of lower priority vs lower priority number.
"
1376,[docs] Clear explanation of what's exactly {repository_root} in docs,2015-05-19T14:10:02Z,2015-05-30T12:32:55Z,"c:documentation, t:enhancement",,,"While trying to install powerline as a bash plugin, I found trouble discovering where it was installed. The docs refer to a `{repository_root}` but there's no clear explanation on where it is. As a python newbie I had a hard time using find to discover it was installed at `/usr/local/lib/python2.7/dist-packages/powerline`.

I'm not sure how to specify it generically enough for all users in the docs to create a PR, tho.
"
1375,"[docs] Updating default, system-wide config paths",2015-05-19T14:07:45Z,2015-05-30T11:18:14Z,"c:documentation, t:enhancement",,,"Things now are in `{powerline_root}/config_files/{stuff}`.

I would like to add here that I've just installed Powerline through `pip` and there's no `~/powerline` nor `~/.config/powerline` in my Ubuntu box, but I'm unsure if that's an issue or it should be noted down in the docs.
"
1374,Update players.py,2015-05-19T12:57:57Z,2015-05-20T18:42:33Z,"c:documentation, t:enhancement",,,"Give some hints to install compatible `mpd` Python module, and rewrite to show that the Python package is preferred (for example player status isn't supported properly via `mpc` command).
"
1373,Update reference.rst,2015-05-19T12:20:23Z,2015-05-20T18:42:33Z,"c:documentation, t:enhancement",,,"Clarifying a bit the confusion of lower priority vs lower priority number.
"
1372,Switch the underlying i3-IPC layer and deprecate i3bgbar bindings,2015-05-17T18:00:52Z,2015-05-17T18:20:12Z,"c:b:wm, t:enhancement",,,"Replaces #1366 which contains at least one error (Python-2.6 does not support `func(expr for i in iterable)`: need more parenthesis) and a number of style mistakes.

Provided tests should’ve catched the error if it was not fixed in c02516a4437c0d94f6585dce65ca349c6b399120.
"
1371,Add support for clicking tabs in Vim,2015-05-17T12:01:39Z,2015-05-29T19:54:22Z,"c:b:vim, c:core, t:enhancement",,,"Fixes #1353
"
1370,Add support for non-SSL IMAP4 connections,2015-05-17T08:56:17Z,2015-05-29T19:10:34Z,"c:common segments, t:enhancement",,,"Fixes #1351
"
1369,Use different highlight group for network_load divider,2015-05-17T08:28:59Z,2015-05-17T09:49:23Z,"c:common segments, c:configuration, t:bug",,,"Fixes #1368
"
1368,[Tmux-Solarized] Wrong background color statusbar - Solarized colorscheme for Tmux,2015-05-16T18:46:49Z,2015-05-17T09:49:23Z,"c:b:tmux, c:configuration, t:bug",,,"Hi guys,

I just updated my powerline to the latest version and used the solarized.json colorscheme for my tmux (v2.0). Unfortunately, the background color for the separator between the ""uptime"" and ""system_load"" seems to be wrong/inconsistent with the rest of their backgrounds):

![selection_001](https://cloud.githubusercontent.com/assets/874795/7667551/54b5c97e-fbda-11e4-830c-f0491e70257f.png)

It would be great if anyone here can help me resolve this problem right now (like setting a certain value for certain field in colorscheme/tmux/solarized.json). I hope there would soon be a fix to this Tmux solarized.json theme in the next release.
"
1367,Interval in segment does nothing,2015-05-15T01:00:29Z,2015-05-30T12:16:49Z,"c:core, s:no feedback, t:bug",,,"I've written a few segments, which take a few seconds to execute, not unlike the IMAP segment.

However, I find that my segment's `""compute_state""` (I'm subclassing `KwThreadedSegment`, like the IMAP one), is being called continuously, sometimes even several times per second, and entirely ignores the `""interval""` setting.

In addition to bombarding the remote service I'm fetching data from, this also causes powerline to flicker.

Being certain that I was doing something wrong, I splashed a healthy amount of debugging onto the IMAP fetcher, and noticed the same behavior there. It connects to the remote mail server several times per second, and does not respect the `""interval""` specified on the class (60 seconds).

Am I misunderstanding how to write segments entirely, or is this a bug?
"
1366,Switch the underlying i3-IPC layer and deprecate i3bgbar bindings,2015-05-14T14:12:41Z,2015-05-17T18:01:11Z,"c:b:wm, t:enhancement",,,
1365,Powerline doesn't work on RedHat 5.10 for vim,2015-05-14T07:36:30Z,2015-05-14T12:58:49Z,"c:b:vim, s:invalid:unsupported software, t:bug",SyntaxError,SyntaxError: invalid syntax,"Hi, I'm using powerline for vim.

I add this line to .vimrc:

```
set runtimepath+=~/.vim/bundle/powerline/powerline/bindings/vim
```

But I got:

```
Traceback (most recent call last):
  File ""<string>"", line 9, in ?
  File ""/home/l9s/.myconf/unix/dotvim/bundle/powerline/powerline/__init__.py"", line 74
     prefix = self.ext + ((':' + prefix) if prefix else '')
                                          ^
 SyntaxError: invalid syntax
An error occurred while importing powerline module.
This could be caused by invalid sys.path setting,
or by an incompatible Python version (powerline requires
Python 2.6, 2.7 or 3.2 and later to work). Please consult
the troubleshooting section in the documentation for
possible solutions.
Error detected while processing /home/l9s/.myconf/unix/dotvim/bundle/powerline/powerline/bindings/vim/plugin/powerline.vim:
line  157:
  File ""<string>"", line 50
    ee = lambda *args, **kwargs: echoerr(*args, stream=sys.stdout, **kwargs)
                                                     ^
SyntaxError: invalid syntax
```

It seems that my python version is too low...(Which is actually too low as Python 2.4.3)
But I can't upgrade python since _yum_ depends on python...

How to fix this problem?
"
1364,Fix dash bindings on OS X,2015-05-13T15:26:05Z,2015-05-13T21:15:06Z,"c:b:shell, e:macos, s:invalid, t:bug",,,"Fixes two errors that occur while using Powerline with the dash shell under Mac OS X.

**Problem:** Execution of the mktemp command fails.
**Cause:** mktemp requires a mandatory argument on OS X.
**Solution:** Provide a template using the -t option. While it is a deprecated option on Linux, it is still supported and provides compatibility with other systems.

**Problem:** The powerline executable fails to be called because its command line unexpectedly contains spaces.
**Cause:** The _POWERLINE_JOBS variable contains spaces because the wc command returns spaces before the number on OS X.
**Solution:** Trim the spaces before assigning the value to the variable.
"
1363,Fatal Python error: Py_Initialize,2015-05-13T07:13:31Z,2015-05-13T19:09:48Z,"c:b:vim, e:macos, s:invalid:error in environment, t:bug",ImportError,ImportError: No module named 'encodings',"I installed powerline-status on python 3.4 stable.

and, set .vimrc,

``` vim
set rtp+=""/usr/local/lib/python3.4/site-packages/powerline/bindings/vim""
python3 from powerline.vim import setup as powerline_setup
python3 powerline_setup()
python3 del powerline_setup
```

but, Display this error when launching vim.

```
Fatal Python error: Py_Initialize: unable to load the file system codec
ImportError: No module named 'encodings'
Vim: Caught deadly signal ABRT
Vim: Finished.
[1]    53069 abort      vi
```
- python 3.4 stable
- powerline-status 2.1.4 latest
- MacVim homebrew Built from source with --with-python3, --with-lua, --with-luajit, --override-system-vim

What should I do?
Thanks.
"
1362,everything after the directory shows right aligned,2015-05-11T08:57:22Z,,"c:b:shell, t:bug",,,"OS: Mac OS X
zsh with ohmyzsh and powerline-status installed [via pip install powerline-status --user]

See the following output 

![](http://picpaste.com/pics/a61d87153072c18e16d5d79715c1902d.1431352897.png)

This seems to be a bug.

I am not a shell expert so cannot comment much on this.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/14218985-everything-after-the-directory-shows-right-aligned?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1361,Powerline wont work on my .zshrc and .bashrc,2015-05-11T06:43:14Z,2015-05-14T16:57:28Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"Hi, i have Ubuntu linux 14.04, i have installed and 'sourced' powerline.zsh in my .zshrc (also my .bashrc) but when i start the terminals i get an error saying: 

> Traceback (most recent call last):  
>   File ""/usr/bin/powerline-render"", line 15, in <module>
>     from powerline.shell import ShellPowerline, get_argparser, finish_args, write_output
> ImportError: cannot import name get_argparser
> Traceback (most recent call last):
>   File ""/usr/bin/powerline-render"", line 15, in <module>
>     from powerline.shell import ShellPowerline, get_argparser, finish_args, write_output
> ImportError: cannot import name get_argparser.

have installed many versions (python, python2, python 2.7, python3 and python 3.4) am not a python programmer but i understand a bit of python codes. Please help cause i couldn't find the solution for my own and i would really love to have powerline working on my shells.. 
Thanks.. 
"
1360,Fix main arguments parser tests,2015-05-10T19:18:01Z,2015-05-10T19:24:45Z,"c:b:shell, c:b:tmux, t:bug",,,"Should fix #1357.
"
1359,powerline tmux right results in AttributeError: 'list' object has no attribute 'starts with',2015-05-10T18:54:46Z,2015-05-10T19:19:52Z,"c:b:shell, s:duplicate, t:bug",AttributeError,AttributeError: 'list' object has no attribute 'startswith',"On master I get the following traceback:

```
$ powerline tmux right -R pane_id=`tmux display -p ""#D""`                                                                                             
Traceback (most recent call last):
  File ""/usr/local/bin/powerline-render"", line 30, in <module>
    write_output(args, powerline, segment_info, get_unicode_writer())
  File ""/usr/local/lib/python2.7/site-packages/powerline/commands/main.py"", line 156, in write_output
    if args.side.startswith('above'):
AttributeError: 'list' object has no attribute 'startswith'
```
"
1358,Switch to container-based infrastructure,2015-05-10T18:45:28Z,2015-05-10T20:10:50Z,"c:tests, t:enhancement",,,"Should speed up builds. A number of packages are missing, so they are now compiled by https://github.com/powerline/bot-ci.
"
1357,sourcing bash/powerline.sh fails,2015-05-10T17:47:16Z,2015-05-10T19:24:45Z,"c:b:shell, t:bug",AttributeError,AttributeError: 'list' object has no attribute 'startswith',"Hi, I'm getting errors on my 2nd PC, while powerline works on the first w/o problems. Both have the same architecture (64bit), OS (ArchLinux) and the same packages and configs.

---

When I source /usr/lib/python3.4/site-packages/powerline/bindings/bash/powerline.sh on my 2nd PC I get something like (powerline-daemon not running):
Traceback (most recent call last):
  File ""/usr/bin/powerline-render"", line 30, in <module>
    write_output(args, powerline, segment_info, get_unicode_writer())
  File ""/usr/lib/python3.4/site-packages/powerline/commands/main.py"", line 156, in write_output
    if args.side.startswith('above'):
AttributeError: 'list' object has no attribute 'startswith'
Traceback (most recent call last):
  File ""/usr/bin/powerline-render"", line 30, in <module>
    write_output(args, powerline, segment_info, get_unicode_writer())
  File ""/usr/lib/python3.4/site-packages/powerline/commands/main.py"", line 156, in write_output
    if args.side.startswith('above'):
AttributeError: 'list' object has no attribute 'startswith'
Traceback (most recent call last):
  File ""/usr/bin/powerline-render"", line 30, in <module>
    write_output(args, powerline, segment_info, get_unicode_writer())
  File ""/usr/lib/python3.4/site-packages/powerline/commands/main.py"", line 156, in write_output
    if args.side.startswith('above'):
AttributeError: 'list' object has no attribute 'startswith'

---

with powerline-daemon running I only get:
'list' object has no attribute 'startswith'

---

installed powerline via python3.4 pip (pip install powerline-status), fontconfig font installation and using it inside a bash shell in xfce4-terminal (http://powerline.readthedocs.org/en/latest/usage/shell-prompts.html#bash-prompt)
"
1356,Can't install tmux config in Fedora 21,2015-05-08T21:22:34Z,2015-05-09T21:38:20Z,"c:b:tmux, s:invalid:error in environment, t:bug",subprocess.CalledProcessError,"subprocess.CalledProcessError: Command '[u'tmux', u'set-environment', u'-g', u'_POWERLINE_BACKGROUND_COLOR', u'fg=colour231,bg=colour233,nobold,noitalics,nounderscore']' returned non-zero exit status 1","I have installed powerline locally using pip (`pip install --user powerline-status`). I have followed the instructions to edit ~/.tmux.conf properly:

```
run-shell ""/home/me/.local/bin/powerline-daemon -q""
source ""/home/me/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf""
```

When I launched tmux however, I found that nothing was changed. I tried to manually execute the setup in powerline.conf with `.local/bin/powerline-config tmux setup`, which returned the following error:

``` pytb
failed to connect to server: Connection refused
Traceback (most recent call last):
  File "".local/bin/powerline-config"", line 22, in <module>
    args.function(pl, args)
  File ""/home/me/.local/lib/python2.7/site-packages/powerline/commands/config.py"", line 15, in __call__
    self.function(*args, **kwargs)
  File ""/home/me/.local/lib/python2.7/site-packages/powerline/bindings/config.py"", line 168, in tmux_setup
    init_tmux_environment(pl, args)
  File ""/home/me/.local/lib/python2.7/site-packages/powerline/bindings/config.py"", line 116, in init_tmux_environment
    set_tmux_environment(varname, powerline.renderer.hlstyle(**highlight)[2:-1])
  File ""/home/me/.local/lib/python2.7/site-packages/powerline/bindings/tmux/__init__.py"", line 51, in set_tmux_environment
    run_tmux_command('set-environment', '-g', varname, value)
  File ""/home/me/.local/lib/python2.7/site-packages/powerline/bindings/tmux/__init__.py"", line 32, in run_tmux_command
    _run_tmux(subprocess.check_call, args)
  File ""/home/me/.local/lib/python2.7/site-packages/powerline/bindings/tmux/__init__.py"", line 27, in _run_tmux
    return runner([get_tmux_executable_name()] + list(args))
  File ""/usr/lib/python2.7/subprocess.py"", line 540, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '[u'tmux', u'set-environment', u'-g', u'_POWERLINE_BACKGROUND_COLOR', u'fg=colour231,bg=colour233,nobold,noitalics,nounderscore']' returned non-zero exit status 1
```

I tried to temporarily disable my firewall to see if that was causing an issue, but I am still getting the same error message with the firewall disabled.

My tmux version is 1.9a-5.fc21.
"
1355,Fix tmux-2.0 support,2015-05-08T21:08:30Z,2015-05-10T13:45:54Z,"c:b:tmux, t:bug",,,"Fixes #1354
"
1354,Powerline broken with Tmux 2.0,2015-05-07T16:29:39Z,2015-05-10T13:45:54Z,"c:b:tmux, t:bug",,,"The powerline status line seems to break after TMUX 2.0 update. Any ideas how to fix this?

![1___zsh_tmux_plugin_run__tmux__and_new_issue_ _powerline_powerline](https://cloud.githubusercontent.com/assets/732178/7520379/dfe99ec0-f4ab-11e4-9e14-36625dfbba31.png)

My `.tmux.conf` is --

```
set -g status-right '#(/Users/subho/.powerline/scripts/powerline tmux right)'
source '/Users/subho/.powerline/powerline/bindings/tmux/powerline.conf'
```

And my `powerline.conf` is --

```
if-shell 'env ""$POWERLINE_CONFIG_COMMAND"" tmux setup' '' 'run-shell ""powerline-config tmux setup""'
# vim: ft=tmux
```
"
1353,Cannot click tabs in Vim,2015-05-04T21:35:30Z,2015-05-29T19:54:22Z,"c:b:vim, t:enhancement",,,"When powerline is active, Vim's tab bar reacts to the mouse only poorly. Every click anywhere on the tabbar switches to the next tab, regardless which or any tab was hit at all.  It would be better if a tab could be activated by clicking on it, like Vim does when powerline is not active. 
"
1352,Custom segment not showing up with powerline-daemon,2015-05-02T21:34:26Z,2015-05-03T09:17:10Z,"s:invalid:foreign bug, t:bug",,,"I'm the author of a segment for Powerline, and have run into an issue when upgrading to Powerline 2.1:

When using Bash and running the daemon, the segment won't show. I've setup a Debian box, installed Powerline, my segment and started it like this:

``` bash
powerline-daemon -q
POWERLINE_BASH_CONTINUATION=1 POWERLINE_BASH_SELECT=1 . /usr/local/lib/python2.7/dist-packages/powerline/bindings/bash/powerline.sh
```

The interesting thing is, when I kill the daemon the segment immediately appears. Starting it again and the segment is also gone again.

I've enabled a log-file and set the log level to DEBUG, but nothing is showing that can give me a hint. The only thing that is showing is:

``` txt
2015-05-02 23:28:37,515:DEBUG:shell:watcher:Trying to use inotify watcher
```

I hope you guys can give me some hint on how to proceed :)

Please see here for some more discussion: https://github.com/jaspernbrouwer/powerline-gitstatus/issues/1
"
1351,Email segment only works for SSL servers.,2015-04-23T10:30:39Z,2015-05-29T19:10:34Z,"c:common segments, t:enhancement",,,"I can't connect to my non SSL imap server. I'm thinking about adding an additional argument use_ssl defaulted to true. In order to allow configuration of non SSL IMAP servers.
"
1350,Email-Segment mail.py displays un and pw if pc has no network,2015-04-22T22:50:07Z,2015-05-10T14:46:22Z,"c:common segments, s:no feedback, t:bug",,,"On my laptop if I have no internet connection, powerline bar throws exception, because imap connection doesn't work (of course because of no internet)

because the exception message contains un and pw in plaintext, it would be better, if the pw is replaced by some stars. 

maybe it's also possible with a simple try-catch block, to catch the exception and disable the output complete, if the system has no internet or better, check if internet, before imap-connection.
"
1349,More themes for vim,2015-04-22T04:00:24Z,2015-04-22T04:13:03Z,s:invalid,,,"Hi 
i use powerline for gvim. I see there are a limited number of themes. Any other repo where I can get more themes for powerline?

Thanks in advance. 
"
1348,Fix warning when &l:statusline is set to a unicode value,2015-04-17T19:12:46Z,2015-04-17T20:21:25Z,"c:b:vim, t:bug",,,"This normally should not happen because &l:stl should be powerline-controlled,
but some plugins do this.

Fixes #1347
"
1347,Unicode comparison warining,2015-04-13T11:03:17Z,2015-04-17T20:21:25Z,"c:b:vim, t:bug",,,"I installed powerline with [ctrlspace](https://github.com/szw/vim-ctrlspace) in vim. When I open the ctrlspace window, I got a warning said

``` python
UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
```

You may fix it easily by modifying the code at [line 244](https://github.com/powerline/powerline/blob/develop/powerline/vim.py#L244) of vim.py

``` diff
- if window.options['statusline'] != statusline:
+ if type(window.options['statusline']) != type(statusline) or window.options['statusline'] != statusline:
```
"
1346,Where are the fonts?,2015-04-10T17:22:23Z,2015-05-10T14:34:10Z,"c:documentation, s:not a bug, t:bug",,,"In the docs
https://github.com/powerline/powerline/blob/develop/docs/source/installation/osx.rst#fonts-installation
it says ""Install downloaded patched font by double-clicking the font file in Finder""

What folder would this be in?
"
1345,Glyphs not showing - depending on user?,2015-04-10T15:39:30Z,2015-04-10T21:19:36Z,"c:b:shell, s:invalid:error in environment, t:bug",,,"After installing the OSX 10.10.3 update, the glyphs do not show when I'm logged in as a normal user, but when I sudo to root, they work fine:

![screen shot 2015-04-10 at 11 36 45 am](https://cloud.githubusercontent.com/assets/181952/7091205/35707eae-df76-11e4-9efb-aaf2f94e19da.png)

I'm sure it's my configuration, but I can't figure out what's broken/different?
"
1344,"Revert ""Add note on outdated ArchLinux AUR Packages.""",2015-04-04T16:22:14Z,2015-04-04T19:43:32Z,"c:documentation, t:bug",,,"Reverts powerline/powerline#1343
"
1343,Add note on outdated ArchLinux AUR Packages.,2015-04-04T07:47:58Z,2015-04-04T12:36:19Z,"c:documentation, t:bug",,,"From Issue #1341
"
1342,Update troubleshooting.rst,2015-04-03T18:24:50Z,2015-04-03T19:32:50Z,"c:documentation, t:bug",,,"#230
"
1341,Installation on Linux documentation AUR packages,2015-04-02T12:39:23Z,2015-04-04T12:36:21Z,"c:documentation, t:bug",,,"In the 'Installation on Linux' docs (https://powerline.readthedocs.org/en/master/installation/linux.html#installation-on-linux), there are links to the Arch Linux AUR packages.
These packages are outdated (release 1.3.1), and the current maintainer doesn't respond.

So until this is solved, maybe add this as a note to the documentation?, so that people won't get confused when trying to install this way.
"
1340,Is this repo workable as a submodule?,2015-03-26T16:06:03Z,2015-03-26T18:46:00Z,"c:installation, s:invalid:error in environment, t:bug",OSError,OSError: [Errno 2] No such file or directory,"Because I have it a submodule on my dotfile repo and I get this error in my zsh when it starts:

```
Traceback (most recent call last):
  File ""/Users/kgan/Git/dotfiles/powerline/client/powerline.py"", line 57, in <module>
    os.execvp('powerline-render', args)
  File ""/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.py"", line 346, in execvp
    _execvpe(file, args)
  File ""/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.py"", line 382, in _execvpe
    func(fullname, *argrest)
OSError: [Errno 2] No such file or directory
```
"
1339,Support tmux zoom status,2015-03-25T06:29:47Z,2015-09-21T19:38:30Z,"c:b:tmux, t:enhancement",,,"When zoomining a pane there should be some notification that we are zoomed in int he status bar. 

http://blog.sanctum.geek.nz/zooming-tmux-panes/
"
1338,Error while installing powerline via pip,2015-03-25T06:27:30Z,2015-03-25T18:50:09Z,"c:installation, s:invalid:foreign bug, t:bug",SyntaxError,SyntaxError: keyword argument repeated,"sudo pip-2.7 install powerline                                                                                                                              

Downloading/unpacking powerline
  Downloading powerline-0.2.4.tar.bz2 (61kB): 61kB downloaded
  Running setup.py egg_info for package powerline
    Traceback (most recent call last):
      File ""<string>"", line 16, in <module>
      File ""/tmp/pip-build-root/powerline/setup.py"", line 27
        zip_safe = False,
    SyntaxError: keyword argument repeated
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File ""<string>"", line 16, in <module>

  File ""/tmp/pip-build-root/powerline/setup.py"", line 27

```
zip_safe = False,
```

SyntaxError: keyword argument repeated

---

Command python setup.py egg_info failed with error code 1 in /tmp/pip-build-root/powerline
Storing complete log in /home/aviral/.pip/pip.log
"
1337,Support for date segment to take a timezone argument,2015-03-25T01:03:24Z,,"c:common segments, t:enhancement",,,"I wanted the functionally to have two clocks of different timezones in my powerline, this did the trick.
"
1336,How configure to show git branch ,2015-03-21T04:07:54Z,2015-03-21T09:24:49Z,s:invalid,,,"I finded this part but I don't know what I have to do with this information.

I would like to show the virtualenv and the gemset too, if it's possible.
"
1335,Every time I upgrade or touch anything on powerline everything breaks,2015-03-19T16:31:18Z,2015-03-19T16:36:10Z,s:invalid,,,
1334,"ERROR:shell:environment:Exception while computing segment: str expected, not bool",2015-03-15T08:11:39Z,2015-04-02T17:39:21Z,"c:common segments, s:no feedback, t:bug",TypeError,"TypeError: str expected, not bool","I use tmux and zsh.
When I start the zsh using tmux, sometimes this error occurs.
What would be the best thing to do?

```
2015-03-15 17:02:13,355:ERROR:shell:environment:Exception while computing segment: str expected, not bool
Traceback (most recent call last):
  File ""/usr/local/lib/python3.5/site-packages/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/usr/local/lib/python3.5/site-packages/powerline/segment.py"", line 405, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/usr/local/lib/python3.5/site-packages/powerline/segments/common/env.py"", line 18, in environment
    return segment_info['environ'].get(variable, None)
  File ""/Users/zchee/.pyenv/versions/3.5-dev/lib/python3.5/_collections_abc.py"", line 422, in get
    return self[key]
  File ""/Users/zchee/.pyenv/versions/3.5-dev/lib/python3.5/os.py"", line 634, in __getitem__
    value = self._data[self.encodekey(key)]
  File ""/Users/zchee/.pyenv/versions/3.5-dev/lib/python3.5/os.py"", line 710, in encode
    raise TypeError(""str expected, not "" type(value).__name__)
TypeError: str expected, not bool
```

Thanks.
"
1333,"""Void-variable left"" with latest version (powerline-20150312.2049)",2015-03-13T10:38:06Z,2015-03-13T11:29:07Z,"s:invalid, t:bug",,,"Hello,

I did not change anything regarding my Powerline config. Though, just after updating this morning, I now have:

```
Error during redisplay: (eval (let* ((active (powerline-selected-window-active)) (mode-line (if active (quote mode-line) (quote mode-line-inactive))) (face1 (if active (quote powerline-active1) (quote powerline-inactive1))) (face2 (if active (quote powerline-active2) (quote powerline-inactive2))) (default-dictionary-face (if active (quote powerline-default-dictionary-active-face) (quote powerline-default-dictionary-inactive-face))) (other-dictionary-face (if active (quote powerline-other-dictionary-active-face) (quote powerline-other-dictionary-inactive-face))) (separator-left (intern (format ""powerline-%s-%s"" powerline-default-separator (car powerline-default-separator-dir)))) (separator-right (intern (format ""powerline-%s-%s"" powerline-default-separator (cdr powerline-default-separator-dir)))) (lhs (list (when (and (fboundp (quote vc-switches)) buffer-file-name vc-mode) (if (eq (vc-state buffer-file-name) (quote up-to-date)) (powerline-vc (quote powerline-normal-face) (quote r)) (powerline-vc (quote powerline-modified-face) (quote r)))) (when (and (not (fboundp (quote vc-switches))) buffer-file-name vc-mode) (powerline-vc face1 (quote r))) (when (and buffer-file-name vc-mode) (if (eq (vc-state buffer-file-name) (quote up-to-date)) (funcall separator-left (quote powerline-normal-face) mode-line) (funcall separator-left (quote powerline-modified-face) mode-line))) (if (not (buffer-modified-p)) (powerline-raw ""%*"" nil (quote l)) (powerline-raw ""%*"" (quote mode-line-emphasis) (quote l))) (powerline-raw mode-line-mule-info nil (quote l)) (powerline-buffer-id nil (quote l)) (when (and (boundp (quote which-func-mode)) which-func-mode) (powerline-raw which-func-format nil (quote l))) (powerline-raw "" "") (funcall separator-left mode-line face1) (when (boundp (quote erc-modified-channels-object)) (powerline-raw erc-modified-channels-object face1 (quote l))) (powerline-major-mode face1 (quote l)) (powerline-process face1) (powerline-raw "" "" face1) (funcall separator-left face1 face2) (powerline-minor-modes face2 (quote l)) (powerline-narrow face2 (quote l)) (powerline-raw "" "" face2) (funcall separator-left face2 mode-line))) (rhs (list (powerline-raw global-mode-string mode-line (quote r)) (funcall separator-right mode-line face1) (powerline-raw ""%l"" face1 (quote l)) (powerline-raw "", "" face1 (quote l)) (powerline-raw ""%c"" face1 (quote r)) (funcall separator-right face1 mode-line) (powerline-raw "" "") (powerline-raw ""%4p"" nil (quote r)) (funcall separator-right mode-line face2) (powerline-buffer-size face2 (quote l)) (powerline-raw "" "" face2) (let ((dict (and (featurep (quote ispell)) (or ispell-local-dictionary ispell-dictionary)))) (cond (buffer-read-only (powerline-raw ""%%%%  "" default-dictionary-face (quote l))) ((null dict) (powerline-raw ""--  "" default-dictionary-face (quote l))) (t (powerline-raw (concat (substring dict 0 2) ""  "") other-dictionary-face (quote l)))))))) (concat (powerline-render lhs) (powerline-fill mode-line (powerline-width rhs)) (powerline-render rhs)))) signaled (void-variable left) [5 times]
```
"
1332,Always write str() objects to the stream in echoerr,2015-03-11T19:05:21Z,2015-03-11T19:53:25Z,"c:lint, t:bug",,,"Fixes #1331
"
1331,Linter does not work with encodings properly,2015-03-10T16:17:38Z,2015-03-11T19:53:24Z,"c:lint, t:bug",,,"Trying to lint

```
{
    ""segments"": {
        ""right"": [
            {
                ""function"": ""powerline.segments.common.wthr"",
                ""module"": ""powerline.segments.common"",
                ""name"": ""weather"",
                ""args"": {
                    ""unit"": ""C"",
                    ""location_query"": ""oslo, norway""
                }
            }
        ]
    }
}
```

emits UnicodeEncodeError.

Ref #779: configuration that emits this error was shown there.
"
1330,powerline in tmux - time won't update,2015-03-10T01:18:16Z,2015-03-10T17:25:49Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"currently using powerline on fedora 21 in tmux-1.9a. when i open tmux the time is correct but it never updates, it just shows the time the window was opened. how can i resolve this?
"
1329,Leaks build environment into documentation,2015-03-08T23:00:07Z,2015-03-11T19:45:50Z,"c:documentation, t:bug",,,"Building the Sphinx documentation leaks the current environment into `html/develop/extensions.html`. I can't tell if this is a problem with the way the docstrings are written or if it's an upstream (Sphinx) bug.

This issue was identified as part of the Debian [reproducible build](https://wiki.debian.org/ReproducibleBuilds) effort and was initally reported on the [Debian Bug Tracker](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=778250).
"
1328,Tmux line should hide stuff on the right instead of the window list,2015-03-03T11:48:08Z,2015-05-23T13:43:23Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"When using tmux with a narrow terminal window, powerline will draw the uptime, load, date, etc over the list of windows on the left.

As the window list is contextual and the status information on the right is background, I feel that the stuff on the right should be hidden if there is not enough room for both.
"
1327,Do not write empty lines above prompt and fix tcsh,2015-03-01T14:22:17Z,2015-03-01T14:41:51Z,"c:b:shell, t:bug",,,"Ref #1322.
"
1326,Another attempt to stabilize vterm tests,2015-03-01T12:58:07Z,,"c:b:tmux, c:tests, t:bug",,,"This time I start with enhancing diagnostics.
"
1325,Add missing highlight groups,2015-03-01T11:31:24Z,2015-03-01T11:53:03Z,"c:configuration, c:lint, t:bug",,,"It appears that `warning:regular` group was missing, so email_imap segment did not work (#1323, #1320) and when running under superuser user segment was not highlighted properly.

This PR adds missing highlight groups and also makes sure that `powerline-lint` will be able to catch such problems in the future.
"
1324,Add support for jython-2.7,2015-03-01T11:28:14Z,,"c:core, t:enhancement",,,"- [x] Make sure that python tests work.
- [ ] Make sure that shell tests work.
- [ ] Make jython be tested by travis.

Note: support is partial because Jython 2.7 beta is missing some Python 2.7 capabilities.
"
1323,Add warning:regular to default color scheme,2015-03-01T06:44:54Z,2015-03-01T10:02:24Z,"c:configuration, s:invalid, t:enhancement",,,"Tried setting up the email_imap_alert with the default scheme, but it crashed saying that the highlight color group 'email_alert' couldn't be found. This seems to fix it.
"
1322,"Handling ""no visible segments"" inside ""above"" declarations",2015-02-27T03:30:47Z,2015-03-01T14:41:52Z,"c:b:shell, t:bug",,,"When all the segments ""above"" the main prompt line are invisible, the code displays a possibly unwanted blank line. 

I was hoping to use the above line to ""warn"" me when I was inside ranger subshells so I placed an Environment variable segment and that worked fine, but when nothing is there to display it places spurious blank lines in my console. 

```
RANGER_LEVEL 2  
techdragon  ~                                                                                                                                                        
RANGER_LEVEL 2  
techdragon  ~  exit                                                                                                                                                      
RANGER_LEVEL 1  
techdragon  ~                                                                                                                                                        
RANGER_LEVEL 1  
techdragon  ~  exit                                                                                                                                                      

techdragon  ~        

techdragon  ~  
```
"
1321,Better Music Plugin,2015-02-26T18:19:50Z,2015-02-26T18:47:02Z,"c:players, t:enhancement",,,"I wrote something like this last time I set up my linux environment, but it got lost in a reformat. Basically you could/should be able to split the line into subsegments:

```
▶ | Some Band  - Album | Some Title | 3:75
```

This could be realized rather easily parallel to the way the format string works already:

```
""args"": {
  ""format"": [
     {
        ""highlighting_group"": ""player_symbol"",
        ""format"": ""{state_symbol}""
     },
     {
        ""highlighting_group"": ""player_artist"",
        ""format"": ""{artist} - {album}""
     },
     {
        ""highlighting_group"": ""player_title"",
        ""format"": ""{title}""
     },
     {
        ""highlighting_group"": ""player_duration"",
        ""format"": ""{total}""
     }
   ]
}
```

The only issue I see is the handling ofe player state and highlight groups together.
"
1320,Mail segment not working in wm theme due to colorscheme problems,2015-02-26T10:12:57Z,2015-03-01T11:53:03Z,"c:b:wm, t:bug",,,"- OS: Archlinux
- Powerline: [python-powerline-git](https://aur.archlinux.org/packages/python-powerline-git)
- version: 2.1 (ca6797055a728bb043d0ac46a849949d8efd72ff)

I'm using the mail segment with LemonBoy's [Bar](https://github.com/LemonBoy/bar) (compiled on the `cairo-love` branch):
`/home/fradeve/.config/powerline/config.json`

``` json
    }
    ""ext"": {
        ""wm"": {
            ""colorscheme"": ""default"",
             ""theme"": ""fradeve""
        }
    }
```

`/home/fradeve/.config/powerline/themes/wm/fradeve.json`

``` json
        ""email_imap_alert"": {
                ""before"": ""✉ "",
                ""args"": {
                    ""server"" : ""mail.some.org"",
                    ""username"": ""francesco.devirgilio@inventati.org"",
                    ""password"": """"
                }
           }
```

`/home/fradeve/.i3/config`

``` bash
exec python /usr/lib/python3.4/site-packages/powerline/bindings/bar/powerline-bar.py --i3 | bar -b -f ""-misc-dejavu sans mono-medium-r-normal--11-*-*-*-m-*-iso10646-1""
```

It works perfectly inside Tmux bar, but it errors in wm, due to the lack of a colorscheme (the error flicks for just 1 sec on the bar, so I'm not able to copy/paste it here, but it has to do with the lack of ""groups"" in `email_alert` or something similar).
The segment works if I create `/home/fradeve/.config/powerline/colorschemes/wm/default.json` with this content:

``` json
{
    ""name"": ""Default color scheme for window managers"",
    ""groups"": {
        ""background:divider"": { ""fg"": ""gray5"", ""bg"": ""gray0"" },
        ""session"": { ""fg"": ""black"", ""bg"": ""gray10"", ""attr"": [""bold""] },
        ""date"": { ""fg"": ""gray8"", ""bg"": ""gray2"" },
        ""time"": { ""fg"": ""gray10"", ""bg"": ""gray2"", ""attr"": [""bold""] },
        ""time:divider"": { ""fg"": ""gray5"", ""bg"": ""gray2"" },
        ""email_alert"": { ""fg"": ""white"", ""bg"": ""brightred"", ""attr"": [""bold""] },
        ""email_alert_gradient"": { ""fg"": ""white"", ""bg"": ""yellow_orange_red"", ""attr"": [""bold""] },
        ""hostname"": { ""fg"": ""black"", ""bg"": ""gray10"", ""attr"": [""bold""] },
        ""weather"": { ""fg"": ""gray8"", ""bg"": ""gray0"" },
        ""weather_temp_gradient"": { ""fg"": ""blue_red"", ""bg"": ""gray0"" },
        ""weather_condition_hot"": { ""fg"": ""khaki1"", ""bg"": ""gray0"" },
        ""weather_condition_snowy"": { ""fg"": ""skyblue1"", ""bg"": ""gray0"" },
        ""weather_condition_rainy"": { ""fg"": ""skyblue1"", ""bg"": ""gray0"" },
        ""uptime"": { ""fg"": ""gray8"", ""bg"": ""gray0"" },
        ""external_ip"": { ""fg"": ""gray8"", ""bg"": ""gray0"" },
        ""network_load"": { ""fg"": ""gray8"", ""bg"": ""gray0"" },
        ""system_load"": { ""fg"": ""gray8"", ""bg"": ""gray0"" },
        ""system_load_good"": { ""fg"": ""lightyellowgreen"", ""bg"": ""gray0"" },
        ""system_load_bad"": { ""fg"": ""gold3"", ""bg"": ""gray0"" },
        ""system_load_ugly"": { ""fg"": ""orangered"", ""bg"": ""gray0"" },
        ""environment"": { ""fg"": ""gray8"", ""bg"": ""gray0"" }
    }
}
```

I'm not using Powerline since ages, but it seems to me that the good way to go is to copy the default colorscheme for the wm from the `config_files/colorschemes` folder, but there's no wm colorscheme there. Any hint?
"
1319,Use special function for appending to precmd_functions,2015-02-23T20:46:35Z,2015-02-26T21:41:17Z,"c:b:shell, t:bug",,,"This way there appear no duplicates.
"
1318,"Powerline messes up display when opening file named ""\u0080""",2015-02-23T15:01:43Z,,"c:b:vim, t:bug",,,"I mean, U+0080 &lt;control&gt; character. The result looks like this:

![Messed display starting from the filename](http://img-fotki.yandex.ru/get/16138/9151298.5/0_b0888_500cc1d0_orig.png)

. This does not happen if filename is ""\x80"" (one byte).
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/8832834-powerline-messes-up-display-when-opening-file-named-u0080?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1317,Add some fixes for testing from ebuild,2015-02-21T12:38:35Z,2015-02-21T17:33:05Z,"c:tests, t:bug",,,"Dash tests still do not work, but now they do not work completely, not “are not stable” (#931). Alongside with other small fixes this PR switches from screen for shell tests to pexpect.
"
1316,Make it possible to run the whole test suite outside of travis,2015-02-20T20:57:34Z,2015-02-20T21:59:25Z,"c:tests, t:enhancement",,,
1315,QTile plugin has inconsistent or wrong identifiers,2015-02-20T13:57:37Z,,"c:b:wm, t:enhancement",,,"It is wrong to have qtile textbox widget class have the same name as main powerline class. Also word `timeout` (in arguments) usually refers to maximum time something should wait or, at least, time after which something should be run (once), not to the interval between two runs.

These identifiers are renamed as a part of #1314, in next major release old names must be removed.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/8746632-qtile-plugin-has-inconsistent-or-wrong-identifiers?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1314,Update qtile bindings,2015-02-20T13:39:56Z,2015-02-20T19:08:49Z,"c:b:wm, t:enhancement",,,"Fixed some bugs, did some renamings and made it possible to use powerline on both sides there.

Ref #1313
"
1313,Qtile plugin crashes,2015-02-19T20:35:09Z,2015-02-20T19:08:44Z,"c:b:wm, t:bug",AttributeError,AttributeError: Powerline has no attribute: qtile,"Adding the the code supplied in the documentation crashes my qtile installation:

```
$ python .config/qtile/config.py
Traceback (most recent call last):
  File "".config/qtile/config.py"", line 174, in <module>
    Powerline(timeout=2),
  File ""/usr/lib/python2.7/site-packages/powerline/bindings/qtile/widget.py"", line 13, in __init__
    self.timeout_add(timeout, self.update)
  File ""/usr/lib/python2.7/site-packages/libqtile/widget/base.py"", line 169, in timeout_add
    return self.qtile.call_later(seconds, self._wrapper, method, *method_args)
  File ""/usr/lib/python2.7/site-packages/libqtile/configurable.py"", line 44, in __getattr__
    raise AttributeError(""%s has no attribute: %s"" % (cname, name))
AttributeError: Powerline has no attribute: qtile
```

I'm running the latest ""stable"" version of qtile 0.9.1.
"
1312,Stabilize vterm tests,2015-02-19T08:33:42Z,2015-02-19T09:16:06Z,"c:tests, t:bug",,,"Unlike previous attempts this uses a well-known “rerun the failing test” path.
"
1311,Fix C client compilation on Python-2.6,2015-02-14T22:32:05Z,2015-02-18T23:47:40Z,"c:installation, t:bug",,,"This was broken in #1226.
"
1310,PEP 440 install warnings for develop branch install,2015-02-14T15:26:36Z,2015-02-14T22:04:54Z,"c:installation, t:bug",,,"``` bash
pip install git+git://github.com/powerline/powerline

Collecting git+git://github.com/powerline/powerline
  Cloning git://github.com/powerline/powerline to /var/folders/l8/pv0ydc1x49s0z92yl5xpywqm0000gn/T/pip-24kC0Z-build
    /usr/local/lib/python2.7/site-packages/setuptools/dist.py:291: UserWarning: The version specified (u'dev-9823701a55f2828edd8db53d12c46c7b8d578588') is an invalid version, this may not work as expected with newer versions of setuptools, pip, and PyPI. Please see PEP 440 for more details.
      ""details."" % self.metadata.version
Installing collected packages: powerline-status
  Running setup.py install for powerline-status
    /usr/local/lib/python2.7/site-packages/setuptools/dist.py:291: UserWarning: The version specified (u'dev-9823701a55f2828edd8db53d12c46c7b8d578588') is an invalid version, this may not work as expected with newer versions of setuptools, pip, and PyPI. Please see PEP 440 for more details.
      ""details."" % self.metadata.version
    changing mode of build/scripts-2.7/powerline-lint from 644 to 755
    changing mode of build/scripts-2.7/powerline-daemon from 644 to 755
    changing mode of build/scripts-2.7/powerline-render from 644 to 755
    changing mode of build/scripts-2.7/powerline-config from 644 to 755
    changing mode of /usr/local/bin/powerline-config to 755
    changing mode of /usr/local/bin/powerline-daemon to 755
    changing mode of /usr/local/bin/powerline-lint to 755
    changing mode of /usr/local/bin/powerline-render to 755
    /usr/local/lib/python2.7/site-packages/pkg_resources/__init__.py:2512: PEP440Warning: 'powerline-status (dev-9823701a55f2828edd8db53d12c46c7b8d578588)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.
      PEP440Warning,
Successfully installed powerline-status-dev-9823701a55f2828edd8db53d12c46c7b8d578588
```
"
1309,Powerline fish breaks when in cloned powerline directory,2015-02-14T12:45:30Z,2015-02-15T12:24:31Z,"c:b:shell, s:invalid:unsupported software, t:bug",,,"When I checked out powerline from git I installed it and it looked like it didn't work, so I installed it from pip instead (latest version).  Then it still didn't look like it worked, so I gave up and changed directory to ~ ready to remove the fish config... and suddenly it worked again.

Changing back to the cloned repo directory breaks it.

See attached screenshot for what exactly happens when I move into the bad dir.

![Screenshot](https://cloud.githubusercontent.com/assets/375847/6199614/6aa8c3a8-b44f-11e4-91ea-9db5cfb977e6.png)
"
1308,tmux fails to raise statusline (green bar instead) using master branch of tmux [solved],2015-02-10T19:41:28Z,2015-02-10T21:32:09Z,"c:b:tmux, s:invalid, t:bug",subprocess.CalledProcessError,"subprocess.CalledProcessError: Command '['tmux', 'set-environment', '-r', '_POWERLINE_BACKGROUND_COLOR']' returned non-zero exit status 1","hello, it's been a while since I have run tmux with powerline, before I have had really no issues Before I stopped using powerline I found that I had to manually set the background color to the tmux status line otherwise it was off color.

I would use this in the .tmux.conf

set -g status-style ""bg=colour234""

now that I am using powerline again in tmux, the official way to install/config, I am having a problem getting tmux to execute powerline-config tmux setup. The PATH and POWERLINE_CONFIG_COMMAND are all set properly, and the command ""powerline-config tmux setup"" works AFTER i am in a tmux session (just not while starting tmux).

here is the redirected stderr/stdout for the command I ran (run-shell) from the tmux config while trying to execute powerline-config tmux setup.

```
can't establish current session
Traceback (most recent call last):
  File ""/root/.local/bin/powerline-config"", line 22, in <module>
    args.function(pl, args)
  File ""/root/.local/lib/python3.4/site-packages/powerline/commands/config.py"", line 15, in __call__
    self.function(*args, **kwargs)
  File ""/root/.local/lib/python3.4/site-packages/powerline/bindings/config.py"", line 168, in tmux_setup
    init_tmux_environment(pl, args)
  File ""/root/.local/lib/python3.4/site-packages/powerline/bindings/config.py"", line 116, in init_tmux_environment
    set_tmux_environment(varname, powerline.renderer.hlstyle(**highlight)[2:-1])
  File ""/root/.local/lib/python3.4/site-packages/powerline/bindings/tmux/__init__.py"", line 53, in set_tmux_environment
    run_tmux_command('set-environment', '-r', varname)
  File ""/root/.local/lib/python3.4/site-packages/powerline/bindings/tmux/__init__.py"", line 32, in run_tmux_command
    _run_tmux(subprocess.check_call, args)
  File ""/root/.local/lib/python3.4/site-packages/powerline/bindings/tmux/__init__.py"", line 27, in _run_tmux
    return runner([get_tmux_executable_name()] + list(args))
  File ""/usr/lib/python3.4/subprocess.py"", line 561, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['tmux', 'set-environment', '-r', '_POWERLINE_BACKGROUND_COLOR']' returned non-zero exit status 1
```

it seems as though the ""background color"" might be causing problems.

tput colors reports ""256"", echo $TERM reports ""screen-256color"", I use rxvt-unicode compiled with --enable-unicode3, and have no problems with vim or zsh. Again, I can invoke powerline-config tmux setup after starting tmux, and I see everything I am supposed to, it just doesn't seem to work while binding/or running the command explicitly inside the .tmux.conf. 

source ""/root/.local/lib/python3.4/site-packages/powerline/bindings/tmux/powerline.conf""
# set -g status-style ""bg=colour234""

run-shell ""powerline-config tmux setup &> /root/error.info""
"
1307,Some segments smother every other segments output,2015-02-09T22:34:00Z,2015-02-20T19:09:35Z,"c:b:shell, c:b:tmux, c:common segments, e:freebsd, s:invalid:foreign bug, t:bug",,,"I installed
powerline_status-dev_9823701a55f2828edd8db53d12c46c7b8d578588-py2.7.egg-info
on FreeBSD 10.1, zsh 5.0.7, tmux 1.9a, rxvt-unicode 9.21
via pip and started modifying the config files to play around. I found a few problems with some of the segments:

In tmux, I tried to add the common.sys.cpu_load_percent segment, but it will cause the entire right side to vanish, unless I delete the common.sys.system_load segment. Then it appears like expected.
Same thing with the pairs common.net.external_ip & common.net.hostname, and common.net.network_load & common.wthr.weather.

common.net.internal_ip simply does nothing (no blanking the entire side, but also no output). Setting the interface argument to ""re0"" didn't change this.

common.net.network_load often shows absurdly high transfer rates. It's basically unusable. Sometimes it errors out with a ""Measure interval zero"".

common.net.hostname is in the default Shell config, but it doesn't show (it _does_ work in the tmux setting above!).

Now, before I dive into the code, since logging yields nothing except the aforementioned network_load errors, I'd like to see if anyone has an explanation for this strange behaviour.
Thanks.
"
1306,powerline-daemon prints usage instead of shell powerline,2015-02-08T18:02:27Z,2015-02-09T05:43:42Z,"c:b:shell, s:invalid, t:bug",,,"I installed the latest powerline version from git via `setup.py install`. Removed all old installations and config files beforehand. Now when I activate the bash or fish binding this is what I get as a prompt every time:

```
usage: powerline-daemon [-h] [-r MODULE] [-w WIDTH] [--last_exit_code INT]
                    [--last_pipe_status LIST] [--jobnum INT]
                    [-c KEY.KEY=VALUE] [-t THEME.KEY.KEY=VALUE]
                    [-R KEY=VAL] [-p PATH] [--socket ADDRESS]
                    ext [{left,right,above,aboveleft}]
```

however `powerline shell left` prints the correct prompt.

`_powerline_local_prompt left` and `_powerline_prompt left` do the same...

Actually `powerline` is being called though; I put a little bash wrapper there and these are the arguments supplied:

`shell aboveleft --last-exit-code=1 --last-pipe-status=1 --jobnum=0 --renderer-arg=client_id=19211 --width=158 --renderer-arg=default_mode=default`
"
1305,Fix link to colorschemes section,2015-02-07T21:33:46Z,2015-02-07T21:56:57Z,"c:documentation, t:bug",,,"The ""Colorschemes"" link on the configuration page leads to Color definnitions instead of Colorschemes.
"
1304,Problem with creating custom color scheme for shell,2015-02-07T20:38:00Z,2015-02-07T21:04:23Z,"c:configuration, s:invalid, t:bug",KeyError,KeyError: u'Highlighting groups not found in colorscheme: user',"I just wanted to change one color in the default color scheme for shell, so I copied default.json from `powerline/config_files/colorschemes/shell/` to `~/.config/powerline/colorschemes/shell`, renamed it to `custom.json` and edited my `config.json` accordingly.

But it's not working for some reason and when I kill the `powerline-daemon` it spits out tons of errors:

```
Kill command sent to daemon, if it does not die in a couple of seconds use kill to kill it
2015-02-08 02:31:02,295:ERROR:shell:user:Failed to set highlight group: u'Highlighting groups not found in colorscheme: user'
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/powerline/segment.py"", line 147, in set_segment_highlighting
    segment.get('gradient_level')
  File ""/usr/local/lib/python2.7/dist-packages/powerline/colorscheme.py"", line 105, in get_highlighting
    raise KeyError('Highlighting groups not found in colorscheme: ' + ', '.join(groups))
KeyError: u'Highlighting groups not found in colorscheme: user'
2015-02-08 02:31:02,296:ERROR:shell:cwd:Failed to set highlight group: u'Highlighting groups not found in colorscheme: cwd:current_folder, cwd'
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/powerline/segment.py"", line 147, in set_segment_highlighting
    segment.get('gradient_level')
  File ""/usr/local/lib/python2.7/dist-packages/powerline/colorscheme.py"", line 105, in get_highlighting
    raise KeyError('Highlighting groups not found in colorscheme: ' + ', '.join(groups))
KeyError: u'Highlighting groups not found in colorscheme: cwd:current_folder, cwd'
2015-02-08 02:31:02,296:ERROR:shell:cwd:Failed to set highlight group: u'Highlighting groups not found in colorscheme: cwd'
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/powerline/segment.py"", line 147, in set_segment_highlighting
    segment.get('gradient_level')
  File ""/usr/local/lib/python2.7/dist-packages/powerline/colorscheme.py"", line 105, in get_highlighting
    raise KeyError('Highlighting groups not found in colorscheme: ' + ', '.join(groups))
KeyError: u'Highlighting groups not found in colorscheme: cwd'
```

Am I doing it wrong?
"
1303,Is multi-user powerline-daemon possible?,2015-02-07T14:28:56Z,2015-02-07T14:45:35Z,"c:daemon, s:wontfix, t:enhancement",,,"This is more of a question than an issue as I have a work around. Is it possible to get `powerline-daemon` to run once and have all users access it?

I run several users on my servers and I like to have powerline as it really helps. However if I login as `user1` and then run `powerline-daemon -q` if I su to user2 I notice it's using the script version due to the slow down.

At the moment I've got a script doing <pre><code>sudo user1 powerline-daemon -q
sudo user2 powerline-daemon -q
sudo user3 powerline-daemon -q</code></pre>

Which while it works, it seems a waste of resources to do so. Is this the only way or is there a better way?
"
1302,Is /themes/powerline.json override possible?,2015-02-07T14:20:33Z,2015-02-07T14:33:27Z,"c:configuration, s:invalid, t:enhancement",,,"I've got my theme and config up-to-date with the latest style on github now. No more modifying defaults or **main**'s... however there is one last file I need to modify, but I'd like to avoid this if possible.
I'd like to override certain options in `/theme/powerline.json` with my own config file. DejaVu Sans Mono lacks several font glyphs. Such as U+231A [Watch].

As such I've altered my `/theme/powerline.json` to <pre><code>      ""time"": {
            ""before"": ""◔ ""
        },</code></pre>

However it'd be nice to do this globally without modifying 'core' files where possible.
"
1301,threaded.py interval,2015-02-07T10:52:51Z,2015-02-07T12:43:02Z,"c:common segments, s:invalid, t:bug",TypeError,TypeError: unsupported operand type(s) for -: 'unicode' and 'float',"Once I added the weather segment to my config, I saw it a few times on my command line and then it vanished. This only happens with the daemon mode, not the script mode.

Running with powerline-daemon --replace --foreground produced the following errors:

<pre><code>Exception in thread Thread-1:
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
    self.run()
  File ""/usr/lib/python2.7/threading.py"", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File ""/usr/lib/python2.7/site-packages/powerline/lib/threaded.py"", line 91, in run
    self.shutdown_event.wait(max(self.interval - (monotonic() - start_time), self.min_sleep_time))
TypeError: unsupported operand type(s) for -: 'unicode' and 'float'

Exception in thread Thread-2:
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
    self.run()
  File ""/usr/lib/python2.7/threading.py"", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File ""/usr/lib/python2.7/site-packages/powerline/lib/threaded.py"", line 91, in run
    self.shutdown_event.wait(max(self.interval - (monotonic() - start_time), self.min_sleep_time))
TypeError: unsupported operand type(s) for -: 'unicode' and 'float'

Exception in thread Thread-3:
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
    self.run()
  File ""/usr/lib/python2.7/threading.py"", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File ""/usr/lib/python2.7/site-packages/powerline/lib/threaded.py"", line 91, in run
    self.shutdown_event.wait(max(self.interval - (monotonic() - start_time), self.min_sleep_time))
TypeError: unsupported operand type(s) for -: 'unicode' and 'float'

2015-02-07 18:34:58,625:ERROR:shell:WeatherSegment:Exception while updating: unsupported operand type(s) for +: 'float' and 'unicode'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/lib/threaded.py"", line 71, in set_update_value
    self.update_value = self.update(self.update_value)
  File ""/usr/lib/python2.7/site-packages/powerline/lib/threaded.py"", line 240, in update
    if last_query_time < monotonic() < last_query_time + self.interval:
TypeError: unsupported operand type(s) for +: 'float' and 'unicode'
Exception in thread Thread-4:
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
    self.run()
  File ""/usr/lib/python2.7/threading.py"", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File ""/usr/lib/python2.7/site-packages/powerline/lib/threaded.py"", line 91, in run
    self.shutdown_event.wait(max(self.interval - (monotonic() - start_time), self.min_sleep_time))
TypeError: unsupported operand type(s) for -: 'unicode' and 'float'</code></pre>


Having investigated this, I've altered my own threaded.py on line 115 to force the keyword's value to a float.
   self.interval = float(interval)

After doing this, I'm no longer getting this error.
"
1300,Another attempt to stabilize vterm tests,2015-02-07T08:12:43Z,2015-02-07T19:08:05Z,"c:tests, t:bug",,,"This variant reduces the number of commands tmux needs to run in `powerline.conf`.
"
1299,Wait more before failing tmux vterm tests,2015-02-07T01:58:13Z,2015-02-07T02:13:57Z,"c:tests, t:bug",,,"May fix random test failures.
"
1298,Right segments disappeared after update,2015-02-05T15:06:39Z,2015-02-05T16:29:11Z,"c:b:tmux, s:invalid, t:bug",,,"Today I updated powerline to the current stable version via pip. I restarted tmux and my terminal (I'm on current Arch 64). Powerline loads just fine but my right segments which had network info and weather stuff in it don't display. Have there been any changes to the config files? My old version was about 6 months old. Can't tell exactly.
"
1297,Fix socket address size on non-Linux platforms.,2015-02-04T19:05:34Z,2015-02-05T04:25:07Z,"c:daemon, e:linux, e:macos, t:bug",,,"After some debugging, I found that the Powerline client on my OS X was not connecting to the daemon. After some more debugging, it turned out that it was an incorrect `sockaddr_un` size being passed to `connect`.

This pull request should fix this for non-Linux platforms. If the platform defines `SUN_LEN`, we'll use that, otherwise fall back to the size of the struct. No changes were made for Linux.

This code was tested on OS X Mavericks (10.9) and CentOS 7.

On a side note, would you be opposed to me adding more options for debugging the clients? I know the goal is to keep them small and fast, but it was confusing for a newcomer like me to be ""using the daemon"" but still have a slow prompt. I'd have to think about how it could be implemented, but it would be nice to know that the client isn't connecting even when it falls back to exec'ing `powerline-render`.

Thanks!
"
1296,Can't see powerline docs,2015-02-04T12:27:57Z,2015-02-04T16:10:01Z,"c:documentation, s:invalid, t:bug",,,"When I try and view the powerline docs at https://powerline.readthedocs.org/en/latest/ , my browser can't open the page. If I try and ping to https://powerline.readthedocs.org/en/latest/ , in terminal, it says cannot resolve.
Is it possible to give me another link to the docs please.

Many Thanks

Paul
"
1295,Tmux config printed out on start,2015-02-03T17:36:31Z,2015-02-03T18:17:59Z,"c:b:tmux, s:wontfix, t:bug",,,"Not sure if that's intentional or if it can somehow be suppressed, but the powerline setup for tmux is printing all the settings, basically the output of ""powerline-config tmux setup"".

As seen here:

![screenshot from 2015-02-03 18 32 21](https://cloud.githubusercontent.com/assets/4313751/6025501/3b943176-abd3-11e4-8eb9-19525ec50623.png)

I tried resetting my config to just sourcing of the tmux script and the daemon start, which did not cause any changes.
"
1294,"Python error ""AttributeError: 'NoneType' object has no attribute 'startswith'""",2015-02-02T09:41:57Z,2015-05-10T14:38:30Z,"c:b:shell, t:bug",`AttributeError,`AttributeError: 'NoneType' object has no attribute 'startswith'`,"When trying to start powerline inside a zsh shell in tmux, I get the following error:

`AttributeError: 'NoneType' object has no attribute 'startswith'`

The related code inside main.py:

``` python
    def write_output(args, powerline, segment_info, write, encoding):
        if args.renderer_arg:
            segment_info.update(args.renderer_arg)
        if args.side.startswith('above'):
               for line in powerline.render_above_lines(
            width=args.width,
            segment_info=segment_info,
            mode=segment_info.get('mode', None),
               ):
            write(line.encode(encoding, 'replace'))
            write(b'\n')
               args.side = args.side[len('above'):]

        if args.side:
            rendered = powerline.render(
                width=args.width,
                side=args.side,
                segment_info=segment_info,
                mode=segment_info.get('mode', None),
            )
            write(rendered.encode(encoding, 'replace'))
```

I guess args.side is just undefined. 

Any ideas?
"
1293,Question: Is it possible to colorize segments?,2015-02-01T18:01:06Z,2015-02-01T18:52:46Z,s:invalid,,,"When I use the default configuration ([pastebin](http://pastebin.com/dH9CKXAQ)) for tmux, my right segment group looks like this:

![bildschirmfoto 2015-02-01 um 18 56 32](https://cloud.githubusercontent.com/assets/944459/5993072/2449fb4e-aa44-11e4-9dfb-835f379aa743.png)

When I now change adjust the configuration ([pastebin](http://pastebin.com/8S9aYH8Z)) to add new ones or get rid of uninteresting segments, it will look like this:

![bildschirmfoto 2015-02-01 um 18 58 31](https://cloud.githubusercontent.com/assets/944459/5993080/57451bfa-aa44-11e4-8056-5d718a49173f.png)

My question is: where do you configure the color options of the segments? As you can see in the default configuration they have different backgrounds. But whenever i add some new ones (which were not in there before), they all have black background. Is there any way to change this?
"
1292,fish: normal mode not displayed,2015-01-31T23:55:01Z,2015-02-01T18:44:19Z,"c:b:shell, s:invalid, t:bug",,,"Nightly powerline, nightly fish. Default configuration.

Insert mode ($fish_bind_mode == ""insert"")
INSERT > user > ~ > ls -lah

Normal mode ($fish_bind_mode == ""default"")
user > ~ > ls -lah
"
1291,Bash Prompt: readline insert/normal mode,2015-01-31T20:31:44Z,2015-01-31T20:33:00Z,"c:b:shell, t:enhancement",,,"It would be great if the bash prompt would change color just as the vim one does.

What has to be done / is it easy ?
"
1290,Add support for Python debugger,2015-01-31T12:20:35Z,2015-02-07T01:27:43Z,"c:b:pdb, t:enhancement",,,
1289,Fix highlight groups linting,2015-01-31T12:16:46Z,2015-01-31T12:36:46Z,"c:configuration, c:lint, t:bug",,,"Currently linter did not really check anything because colorscheme configurations were saved to a wrong location.
"
1288,Battery segment doesn't work with dual-battery laptops.,2015-01-29T15:26:52Z,2016-02-20T23:19:29Z,"c:common segments, t:enhancement",,,"My laptop is Lenovo Thinkpad X240, and it got two batteries, which is `battery_BAT0` and `battery_BAT1` in UPower.
The battery segment of powerline display only the percentage of `battery_BAT0`, where it should be something like:
(`percentage of BAT0` \* `capacity of BAT0` + `percentage of BAT1` \* `capacity of BAT1`) / ( `capacity of BAT0` + `capacity of BAT1` )
"
1287,Add support for NeoVim,2015-01-27T20:28:42Z,,"c:b:vim, t:enhancement",,,"I understand that this may not be immediately feasible due to the still-unstable nature of NeoVim, but I'd like to make the request anyway.

First, powerline fails when it tries to access the bindeval method which NeoVim does not support. I attempted to do some initial debugging, and discovered that Powerline relies on Vim's 7.4 Python API when it detects a version greater than 703. NeoVim reports as version 704 right now, but has not added support for Vim's 7.4 Python API (see discussion on neovim/neovim#1898), which apparently includes the bindeval method. After attempting to work around this by modifying powerline's version checking, I'm still seeing the following issue:

```
Error detected while processing function PowerlinePyeval..provider#python#Call:
line    1:
NameError(""name 'powerline' is not defined"",)
```

I'm not sure what's going on here that it cannot find ""powerline"". Executing `:py import sys; print sys.path` seems to indicate that the right paths can be found, and I can execute `:py import powerline` without complaint.

For the record, I'm running the latest NeoVim (NVIM 0.0.0-alpha+201501262108) on Mac OS 10.10, with Python 2.7 installed through homebrew, and powerline 2.0 installed through pip.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/8079473-add-support-for-neovim?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1286,Shell and VIM broken since update,2015-01-26T17:17:28Z,2015-01-26T17:40:08Z,"c:b:shell, t:bug",ImportError,ImportError: No module named os,"Hi everyone,

as per subject I'm having issues since my last update, neither the shell prompt or the vim status line are currently working. I tried also a clean reinstall but it didn't help.

Following are errors and the relative configurations that are causing them. I'm running on OSX Yosemite latest version and using iTerm.

Any help or hint about how to solve/debug this it will be very appreciated. Also, if you need any further details please let me know.
##### Shell

``` fish
Last login: Mon Jan 26 16:56:45 on ttys002
/usr/local/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish (line 79):      _powerline_bind_mode
                                                                                                               ^
in function 'powerline-setup',
    called on line 40 of file '/Users/marco.debortoli/.config/fish/config.fish',

in . (source) call of file '/Users/marco.debortoli/.config/fish/config.fish',
    called on standard input,
```

``` fish
# Powerline
set -gx fish_function_path $fish_function_path ""/usr/local/lib/python2.7/site-packages/powerline/bindings/fish""
powerline-setup
```
##### vim

``` fish
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/site-packages/site.py"", line 75, in <module>
    __boot()
  File ""/usr/local/lib/python2.7/site-packages/site.py"", line 3, in __boot
    import os
ImportError: No module named os
```

``` fish
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" Powerline setup
python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup
let g:Powerline_symbols = 'unicode'
```
"
1285,Add BAR support with i3 bindings,2015-01-25T09:52:45Z,2015-01-25T16:20:10Z,"c:b:wm, t:enhancement",,,"Ref #1256.
"
1284,Update zpython bindings according to new zpython changes,2015-01-24T23:10:08Z,2015-01-24T23:23:20Z,"c:b:shell, t:enhancement",,,
1283,When testing Vim do not rely on test order and do not save state,2015-01-24T22:59:23Z,2015-01-24T23:11:39Z,"c:tests, t:bug",,,"This commit refactors `TestVim` test class in test_configuration so that
1. `test_environ_update` does not leave state (value of `powerline_config_paths` 
   global Vim variable) behind other tests can use.
2. `test_local_themes` does not rely on state left from `test_environ_update`, 
   instead using new facility for providing needed value of 
   `Powerline.get_config_paths` call. This facility will be used later in BAR 
   tests.

Ref #1256
"
1282,vim broken after January  5th,2015-01-24T17:18:36Z,2015-01-24T21:49:36Z,"c:b:vim, s:invalid, t:bug",,,"Hi, I installed dev on January 5th to my laptop, when I installed dev today vim support was broken, the powerline looks very bad..

can you create a realease at fb652d5126534f4a881473b9af5ad8db6b62dc53, that is the last good state I found - I did not really try others, but that works great for me....

Best regards
Jan
"
1281,Powerline causes flickering in vim.,2015-01-22T16:45:23Z,2015-11-15T03:30:14Z,"c:b:vim, t:bug",,,"After opening a file with vim I can scroll flicker-free. When I open another file, or even another buffer like Unite, vim starts to flicker when switching files and scrolling. Repeated switching makes the flickering worse. Sometimes, I can't even see text until I stop scrolling.

```
vim --version
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Jan 14 2015 20:16:36)
Included patches: 1-580
Compiled by Arch Linux
Huge version with GTK2 GUI.  Features included (+) or not (-):
+acl             -ebcdic          +localmap        +printer         +title
+arabic          +emacs_tags      +lua             +profile         +toolbar
+autocmd         +eval            +menu            +python          +user_commands
+balloon_eval    +ex_extra        +mksession       -python3         +vertsplit
+browse          +extra_search    +modify_fname    +quickfix        +virtualedit
++builtin_terms  +farsi           +mouse           +reltime         +visual
+byte_offset     +file_in_path    +mouseshape      +rightleft       +visualextra
+cindent         +find_in_path    +mouse_dec       +ruby            +viminfo
+clientserver    +float           +mouse_gpm       +scrollbind      +vreplace
+clipboard       +folding         -mouse_jsbterm   +signs           +wildignore
+cmdline_compl   -footer          +mouse_netterm   +smartindent     +wildmenu
+cmdline_hist    +fork()          +mouse_sgr       -sniff           +windows
+cmdline_info    +gettext         -mouse_sysmouse  +startuptime     +writebackup
+comments        -hangul_input    +mouse_urxvt     +statusline      +X11
+conceal         +iconv           +mouse_xterm     -sun_workshop    -xfontset
+cryptv          +insert_expand   +multi_byte      +syntax          +xim
+cscope          +jumplist        +multi_lang      +tag_binary      +xsmp_interact
+cursorbind      +keymap          -mzscheme        +tag_old_static  +xterm_clipboard
+cursorshape     +langmap         +netbeans_intg   -tag_any_white   -xterm_save
+dialog_con_gui  +libcall         +path_extra      -tcl             -xpm
+diff            +linebreak       +perl            +terminfo
+digraphs        +lispindent      +persistent_undo +termresponse
+dnd             +listcmds        +postscript      +textobjects
```

Terminal is gnome terminal.
"
1280,Powerline is slow on OSX,2015-01-22T04:52:51Z,2015-02-12T19:07:54Z,"c:b:shell, e:macos, s:duplicate, t:bug",,,"I'm using powerline with the default configs.  The prompts take a noticeable amount of time to appear on OSX.

I've tried both zsh and bash, and I am running powerline-daemon -q in .bash_profile/.zshrc.

I'm not 100% sure that this is a bug, but I'm willing to provide any information you need.
"
1279,Weather error in status bar ,2015-01-18T02:45:05Z,2015-05-10T14:39:51Z,"c:common segments, s:no feedback, t:bug",,,"You can also see the json for the weather in the screenshot.

![tmux_error](https://cloud.githubusercontent.com/assets/1574572/5791210/ed93298a-9e91-11e4-8b1b-60cd03a506c8.jpg)
"
1278,Error when adding mail status bar on tmux.,2015-01-18T02:15:32Z,2015-01-18T02:26:47Z,"c:common segments, s:invalid, t:bug",Error,Error: tmux:email_imap_alert: Exception while computing segment: key() takes at least 2 arguments (0 given).,"I've got the following in my default.json file:

```
  1 {
  2         ""segments"": {
  3                 ""right"": [
  4                         {
  5                                 ""function"": ""powerline.segments.common.mail.email_imap_alert"",
  6                                 ""username"": ""jody@jody-white.com"",
  7                                 ""password"": ""NopeNopeNope"",
  8                                 ""server"": ""imap.gmail.com"",
  9                                 ""port"": 993,
 10                                 ""folder"": ""Inbox"",
 11                                 ""max_msgs"": 100
 12                         },
 13                         {
 14                                 ""function"": ""powerline.segments.common.time.date"",
 15                                 ""name"": ""time"",
 16                                 ""args"": {
 17                                         ""format"": ""%H:%M"",
 18                                         ""istime"": true
 19                                 }
 20                         },
 21                         {
 22                                 ""function"": ""powerline.segments.common.time.date""
 23                         },
 24                         {
 25                                 ""function"": ""powerline.segments.common.net.external_ip"",
 26                                 ""query_url"": ""http://ipv4.icanhazip.com/""
 27                         },
 28                         {
 29                                 ""function"": ""powerline.segments.common.net.hostname""
 30                         },
 31                         {
 32                                 ""function"": ""powerline.segments.common.bat.battery""
 33                         }
 34                 ]
 35         }
 36 }
```

Then I get:

```
Error: tmux:email_imap_alert: Exception while computing segment: key() takes at least 2 arguments (0 given).
```
"
1277,Update code according to the changes in deps repository,2015-01-17T23:18:06Z,2015-01-18T13:12:45Z,"c:tests, t:enhancement",,,
1276,Powerline not working when logging in over SSH,2015-01-16T22:50:47Z,2015-01-16T22:56:31Z,"c:b:shell, s:invalid, t:bug",,,"Powerline works perfectly for bash when I use it locally (or via tmux). However when I SSH to the machine in question - I get following errors:

```
powerline-daemon: command not found
-bash: /usr/local/{organization}/home/{username}/.local/lib/python2.7/site-packages/powerline/bindings/bash/../../../scripts/powerline-config: No such file or directory
-bash: /usr/local/{organization}/home/{username}/.local/lib/python2.7/site-packages/powerline/bindings/bash/../../../scripts/powerline-config: No such file or directory
powerline-daemon: command not found
-bash: /usr/local/{organization}/home/{username}/.local/lib/python2.7/site-packages/powerline/bindings/bash/../../../scripts/powerline-config: No such file or directory
-bash: /usr/local/{organization}/home/{username}/.local/lib/python2.7/site-packages/powerline/bindings/bash/../../../scripts/powerline-config: No such file or directory
```

If I start tmux after this - I can see powerline for bash in tmux just fine though.
"
1275,The sideways carrot symbol that splits segments of power line are lowered,2015-01-16T03:16:51Z,2015-01-16T05:12:35Z,"c:font, s:invalid, t:bug",,,"I hope I described this correctly, I've search the documentation and other issues, and got nothing. Instead of describing it more, here is my problem:
![2015-01-15-214645_657x65_scrot](https://cloud.githubusercontent.com/assets/901870/5771053/83ce8a24-9d03-11e4-9a83-739261d46243.png)
The segment borders are not centered. Here is my vimrc:

``` VimL
""Vundle stuff
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
set rtp+=/home/adam/code/cvs/git/powerline/powerline/bindings/vim
call vundle#end()
filetype plugin indent on
"" When started as ""evim"", evim.vim will already have done these settings.
if v:progname =~? ""evim""
  finish
endif
set backspace=indent,eol,start

if has(""vms"")
  set nobackup      "" do not keep a backup file, use versions instead
else
  set backup        "" keep a backup file (restore to previous version)
  set undofile      "" keep an undo file (undo changes after closing)
endif
set history=50      "" keep 50 lines of command line history
set ruler       "" show the cursor position all the time
set showcmd     "" display incomplete commands
set incsearch       "" do incremental searching
map Q gq
inoremap <C-U> <C-G>u<C-U>
if has('mouse')
  set mouse=a
endif
if &t_Co > 2 || has(""gui_running"")
  syntax on
  set hlsearch
endif
if has(""autocmd"")
  augroup vimrcEx
  au!
  autocmd FileType text setlocal textwidth=78
  autocmd BufReadPost *
    \ if line(""'\"""") > 1 && line(""'\"""") <= line(""$"") |
    \   exe ""normal! g`\"""" |
    \ endif

  augroup END

else

  set autoindent        "" always set autoindenting on

endif "" has(""autocmd"")
if !exists("":DiffOrig"")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
          \ | wincmd p | diffthis
endif
set nu
set cursorline
colorscheme jellybeans
set rtp+=/home/adam/code/cvs/git/powerline/powerline/bindings/vim
set laststatus=2
set t_Co=256
set guifont=Anonymice\ Powerline\ 15
set showtabline=2
set noshowmode
```

I am running OpenBSD-current, use zsh, and the st terminal emulator. 
I'll supply any other info that is needed. Thanks
"
1274,Tmux statusline has incorrect spacing or characters on the left side in iTerm 2,2015-01-14T21:11:02Z,2015-02-19T08:19:42Z,"c:b:tmux, s:no feedback, t:bug",,,"This has looked like this since I first installed powerline about a year ago. Just upgraded to latest powerline via pip, and tmux 1.9a via homebrew but no change. Note that the characters look right at my zsh prompt and in my vim status line. See bottom left of this screenshot for weirdness:

![http://i.imgur.com/inxC7wv.png](http://i.imgur.com/inxC7wv.png)

Anyone else seeing this? iTerm 2 on OS X.
"
1273,powerline-config crash,2015-01-14T19:05:22Z,2015-01-14T20:05:42Z,"c:b:tmux, s:duplicate, t:bug",TypeError,TypeError: finish_args() takes exactly 2 arguments (1 given),"`powerline-config tmux setenv` on current `develop` (761a035765bdc16a634b4052cc85000798310f61) crashes with backtrace:

```
# powerline-config tmux setenv

Traceback (most recent call last):
  File ""/usr/local/bin/powerline-config"", line 22, in <module>
    args.function(pl, args)
  File ""/usr/local/lib/python2.7/site-packages/powerline/commands/config.py"", line 15, in __call__
    self.function(*args, **kwargs)
  File ""/usr/local/lib/python2.7/site-packages/powerline/bindings/config.py"", line 93, in init_environment
    powerline = ShellPowerline(finish_args(EmptyArgs('tmux', args.config_path)))
TypeError: finish_args() takes exactly 2 arguments (1 given)
```

Commit 917dfed84240078da8dab1edc380df63dbd243cd appears to be the culprit, as it added an argument to `finish_args()` (in powerline.commands.main), but missed (at least) the invocation at [powerline/bindings/config.py:93](https://github.com/powerline/powerline/blob/c9d1b81954f63366489528b3511bc87444b9760d/powerline/bindings/config.py#L93).

/cc @ZyX-I 
"
1272,Doc not working,2015-01-14T07:41:15Z,2015-01-14T14:14:44Z,"c:documentation, s:invalid, t:bug",,,"When I click on the documentation link on the first page and the SSL handshake error is shown.
"
1271,Add support for cygwin battery status using cdll,2015-01-11T22:36:28Z,2015-01-15T17:51:42Z,"c:common segments, t:enhancement",,,"In Cygwin on Windows, python doesn't have win32com (no COM support). Calling out to COM did not seem to be trivial under cygwin, but WMIC is easy.

I am currently using this fork locally and it's working great! :)
"
1270,Make sure python_to_vim function is able to format lists,2015-01-11T15:18:43Z,2015-01-12T04:54:04Z,"c:b:vim, t:bug",,,"Fixes #1268
"
1269,Ubuntu oh-my-zsh permision denied,2015-01-11T15:06:51Z,2015-01-11T15:08:49Z,"c:b:shell, s:invalid, t:bug",,,"I've installed powerline and moved it to `~/powerline`. when adding this line
`powerline/bindings/zsh/powerline.zsh`  to the end of my `.zshrc`
and re poening my terminator terminal I got this message : `/home/ubuntu/.zshrc:83: permission denied: powerline/bindings/zsh/powerline.zsh`
"
1268,KeyError: <type 'list'>,2015-01-11T15:03:22Z,2015-01-12T04:54:04Z,"c:b:vim, t:bug",KeyError,KeyError: <type 'list'>,"``` python
ERROR:vim:visual_range:Exception while computing segment: <type 'list'>
Traceback (most recent call last):
  File ""/usr/local/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/usr/local/powerline/powerline/segment.py"", line 405, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/usr/local/powerline/powerline/segments/vim/__init__.py"", line 77, in ret
    r = func(segment_info=segment_info, **kwargs)
  File ""/usr/local/powerline/powerline/segments/vim/__init__.py"", line 138, in visual_range
    svcol = vim_funcs['virtcol']([sline, scol, soff])
  File ""/usr/local/powerline/powerline/bindings/vim/__init__.py"", line 148, in __call__
    ))) + b')')
  File ""/usr/local/powerline/powerline/bindings/vim/__init__.py"", line 147, in <genexpr>
    python_to_vim(o) for o in args
  File ""/usr/local/powerline/powerline/bindings/vim/__init__.py"", line 60, in python_to_vim
    return python_to_vim_types[type(o)](o)
KeyError: <type 'list'>
```
"
1267,archlinux package not working out of the box,2015-01-11T12:23:53Z,2015-01-11T12:24:42Z,"c:installation, e:linux, s:invalid, t:bug",ImportError,ImportError: No module named powerline.vim,"phaezah7@argon ~ % vim
Traceback (most recent call last):
  File ""<string>"", line 9, in <module>
ImportError: No module named powerline.vim
An error occurred while importing powerline module.
This could be caused by invalid sys.path setting,
or by an incompatible Python version (powerline requires
Python 2.6, 2.7 or 3.2 and later to work). Please consult
the troubleshooting section in the documentation for
possible solutions.
Unable to import powerline, is it installed?

[...]

phaezah7@argon ~ % yaourt -Ql python-powerline-git |grep powerline.vim
python-powerline-git /usr/lib/python3.4/site-packages/powerline/bindings/vim/plugin/powerline.vim
python-powerline-git /usr/lib/python3.4/site-packages/powerline/vim.py
python-powerline-git /usr/share/vim/vimfiles/plugin/powerline.vim
"
1266,The online documentation is not up to date?,2015-01-10T23:23:07Z,2015-01-10T23:41:51Z,"c:documentation, t:bug",,,"https://powerline.readthedocs.org/en/latest/develop/segments.html still says `highlight_group`, while it seems it should be `highlight_groups` now? The docs in the repo seem to be updated, so it might be a problem with readthedocs?
"
1265,Fix tmux bindings and add functional test for tmux,2015-01-10T21:20:56Z,2015-01-16T21:55:49Z,"c:b:tmux, t:bug",,,"Fixes #1264
"
1264,Missing color on tmux windows?,2015-01-10T13:28:58Z,2015-01-16T21:55:49Z,"c:b:tmux, t:bug",,,"![bildschirmfoto 2015-01-10 um 14 23 58](https://cloud.githubusercontent.com/assets/22835/5691713/94f34192-98d4-11e4-8e38-9b65f541177b.png)

I have updated powerline from way back when, redid my whole config to be sure (basically I just removed segments from the right side), but I'm missing colors in the left side.

How can I check if powerline is indeed sending the color information correctly and I should be looking later down the line, or if I should be looking at powerline? Thanks.
"
1263,When using `rc` remove “read() failed” messages,2015-01-09T14:41:35Z,2015-01-09T15:37:08Z,"c:tests, t:bug",,,"They are causing tests to fail, like in [build 1322.7](https://travis-ci.org/powerline/powerline/jobs/46443873).
"
1262,Terminal title changed to default profile,2015-01-09T13:33:57Z,2015-01-09T14:06:55Z,"c:b:shell, s:invalid, t:bug",,,"Hi,
I'm using `gnome-terminal` in Linux Min 17.
Was able to install powerline system-wide and it works, after configuring `.bashrc` but actually the title of the terminal returns to the default title profile which is, in my case, ""Terminal"".  
I tried to put in `.bashrc`:

```
PROMPT_COMMAND='echo -ne ""\033]0;${USER}@${HOSTNAME}: ${PWD}\007""'
```

To restore normal usage, but it breaks the powerline configuration.
"
1261,Error on vim,2015-01-08T23:00:47Z,2015-01-09T13:06:12Z,"c:b:vim, s:invalid, t:bug",ImportError,ImportError: No module named 'powerline.matchers.vim.plugin.ctrlp',"I am not sure this report doesn't repeat something, but:

```
2015-01-09 01:54:39,165:ERROR:vim:matcher_generator:Failed to import attr ctrlp from module powerline.matchers.vim.plugin.ctrlp: No module named 'powerline.matchers.vim.plugin.ctrlp'
Traceback (most recent call last):
  File ""/usr/lib/python3.4/site-packages/powerline/__init__.py"", line 317, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named 'powerline.matchers.vim.plugin.ctrlp'

```

Vim version:

```
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Jan  8 2015 03:14:08)
Included patches: 1-567
Compiled by ArchLinux
Big version without GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         +gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    -netbeans_intg   +title
-clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   +perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         -profile         +visualextra
+cryptv          +linebreak       +python/dyn      +viminfo
+cscope          +lispindent      +python3/dyn     +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      +lua             +rightleft       +windows
+diff            +menu            +ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        +mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
   system vimrc file: ""/etc/vimrc""
     user vimrc file: ""$HOME/.vimrc""
 2nd user vimrc file: ""~/.vim/vimrc""
      user exrc file: ""$HOME/.exrc""
  fall-back for $VIM: ""/usr/share/vim""
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H   -D_FORTIFY_SOURCE=2  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
Linking: gcc   -L. -Wl,-O1,--sort-common,--as-needed,-z,relro -fstack-protector -rdynamic -Wl,-export-dynamic -Wl,-E -Wl,-rpath,/usr/lib/perl5/core_perl/CORE  -Wl,-O1,--sort-common,--as-needed,-z,relro -L/usr/local/lib -Wl,--as-needed -o vim        -lm -lncurses -lelf    -lacl -lattr -lgpm -ldl  -L/usr/lib -llua -Wl,-E -Wl,-rpath,/usr/lib/perl5/core_perl/CORE -Wl,-O1,--sort-common,--as-needed,-z,relro -fstack-protector -L/usr/local/lib  -L/usr/lib/perl5/core_perl/CORE -lperl -lnsl -ldl -lm -lcrypt -lutil -lpthread -lc    -lruby -lpthread -lgmp -ldl -lcrypt -lm  -L/usr/lib   
```

Powerline version: commit: `886c38c37bf8c797f65d7bb2a4e5bf4f7a82d571`

What must I do?
"
1260,Some documentation changes,2015-01-08T15:24:07Z,2015-01-08T16:55:22Z,"c:documentation, t:enhancement",,,
1259,Allow --foreground to be used with --replace,2015-01-08T13:47:01Z,2015-01-08T15:22:48Z,"c:daemon, t:enhancement",,,"Fixes #1235
"
1258,'Namespace' object has no attribute 'config',2015-01-08T05:07:37Z,2015-01-21T21:00:19Z,"c:b:tmux, t:bug",,,"Running on linux with the latest `master` commit under tmux 1.9.

Everything looks OK but on the left bottom side I see the session number > 'Namespace' obj > windows

On the right side I see 'Namespace' object has no attribute 'config'

How can I troubleshoot this?
"
1257,Apply some fixes for IPython bindings,2015-01-08T00:10:53Z,2015-01-08T00:28:46Z,"c:b:ipython, t:bug",,,
1256,[WIP] Add BAR support (Bar ain't recursive),2015-01-07T23:32:23Z,2015-01-25T09:53:24Z,"c:b:wm, t:enhancement",,,"Tiny renderer + i3 bindings. Don't merge yet, have some (hopefully) minor fixing left to do
"
1255,Add support for Byron Rakitzis’ rc shell reimplementation,2015-01-07T22:51:35Z,2015-01-08T01:31:05Z,"c:b:shell, t:enhancement",,,"Ref #1238
"
1254,Supply default_mode in zpython bindings,2015-01-07T18:29:40Z,2015-01-07T21:01:57Z,"c:b:shell, t:bug",,,
1253,Fix powerline-lint,2015-01-07T18:29:17Z,2015-01-07T21:01:03Z,"c:lint, t:bug",,,"Apparently powerline-lint was not bothering to check user configuration.
"
1252,Remove all exports from shell bindings,2015-01-07T16:15:00Z,2015-01-07T17:14:46Z,"c:b:shell, t:enhancement",,,"Bindings still use various variables, but they are no longer exported.

Ref #1239.
"
1251,"Update documentation to include listing on pypi as ""powerline-status"".",2015-01-06T23:50:13Z,2015-01-07T12:19:25Z,"c:documentation, t:bug",,,"Powerline is currently installable through pip via the name ""powerline-status"", but the docs still state that this is impossible. Could the installation instructions be updated to reflect this?
"
1250,Did the codes change for fancy symbols?,2015-01-06T20:55:34Z,2015-01-06T21:03:14Z,s:invalid,,,"I recently migrated from vim-powerline to powerline to work around a font issue on my linux machine.  It seems that between the two editions the codes for the fancy fonts has changed.  Which is fine on my linux box as I just created more with the scripts.  But this is not an option on windows for several reasons.  What I would really prefer is to simply continue to use the modified version of Consolas that I was already using.

Is there a way to overrided which symbols are used in Vim?  I'd like to simply redirect it to the old values.  Is that possible?
"
1249,Refactor overrides,2015-01-06T18:01:02Z,2015-01-07T15:36:13Z,"c:b:ipython, c:b:shell, c:b:vim, t:enhancement",,,"- [x] #1126: Do some renaming.
- [x] #1201: Use overrides from environment variables.
"
1248,renaming attr to attrs missed at least one,2015-01-06T16:35:01Z,2015-01-06T21:17:07Z,"c:b:tmux, t:bug",NameError,NameError: global name 'attr_to_tmux_attr' is not defined,"Traceback (most recent call last):
  File ""powerline/scripts/powerline-config"", line 22, in <module>
    args.function(pl, args)
  File ""powerline/powerline/commands/config.py"", line 15, in **call**
    self.function(_args, *_kwargs)
  File ""powerline/powerline/bindings/config.py"", line 139, in init_environment
    attrs = attr_to_tmux_attr(get_highlighting(group)[attr])
NameError: global name 'attr_to_tmux_attr' is not defined

attr_to_tmux_attr should probably be replaced with attrs_to_tmux_attrs if following the same pattern of renaming attr to attrs (or the defined function itself should be renamed to retain its singular?)
"
1247,Remove obsolete segments,2015-01-06T13:38:42Z,2015-01-06T17:34:41Z,"c:common segments, c:players, t:enhancement",,,"- [x] #1092 Remove powerline.segments.common.\* segments.
- [x] #1117 Remove `now_playing` segment.
"
1246,Create some incompatible consistency changes,2015-01-06T12:28:33Z,2015-01-06T13:43:24Z,"c:b:shell, c:b:tmux, c:b:vim, c:common segments, c:configuration, c:core, t:enhancement",,,"Will fix most issues for 2.0 milestone:
- [x] #1199 (configuration key renaming)
- [x] #1216 (highlight group names)
- [x] #1205 (“detect”/“auto” value rename)
- [x] #1124 (some environment variables rename)
- [x] #1125 (long option values change: underscores to dashes)
"
1245,Remove Control-P plugin support,2015-01-06T00:55:33Z,2015-01-06T11:55:32Z,"c:b:vim, t:bug",,,"If somebody needs to readd it he should make better code, specifically:
- Functions and variables necessary for supporting Control-P need to be defined 
  in a separate initialiazation function that is only called if Control-P was 
  found.
- Segments that show different information must be defined as separate segments 
  that may be put into configuration file.
- Segment functions must not know side they are on.
- Segment functions must not emit `priority`, it must go to configuration file.
- Segment functions must have proper documentation.
- Segment functions must not emit `width` and `align` keys.
- String `Loading...` or the equivalent must be overridable from configuration, 
  same for other interface strings (e.g. what is shown  when `regex` is true).
- Segment functions must have names that make it clear what they emit.

Closes #1244
"
1244,Control-P bindings are completely inappropriate,2015-01-05T20:27:36Z,2015-01-06T11:55:32Z,"c:b:vim, t:bug",,,"Specifically you cannot configure anything regarding layout, have no documentation, indescriptive function names, wrong location of `vim.command` definitions and are trying to push long in place of string somewhere.
"
1243,U+231a Glyph,2015-01-03T22:37:14Z,2015-01-04T02:17:53Z,"c:font, s:invalid",,,"I'm using powerline with tmux and URxvt, but the U+231a Glyph doesn't show (Watch symbol) for the time. After struggling a lot with the powerline font I found out that the Glyph is not available in the Liberation Mono font, and also all the other Patched powerline fonts. When using XFCE4-terminal it displays the watch, but apparently this is using some fallback font. Which font should work correctly for this?
"
1242,Dividers override doesn't work in vim,2014-12-31T00:32:37Z,2014-12-31T05:26:54Z,"c:b:vim, s:invalid, t:bug",,,"Install vim powerline plugin with Vundle:

``` vimscript
Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
```

add variable to override fancy symbols:

``` vimscript
let g:powerline_config_overrides = {""common"":{ ""dividers"": { ""left"": { ""hard"": ' ', ""soft"": ' ' }, ""right"": { ""hard"" : ' ', ""soft"": ' '}}}}
```

Overriding config doesn't help, still seeing broken glyphs in powerline.

I just want it to use spaces instead of fancy arrows.
"
1241,Local colorscheme for tmux doesn't work,2014-12-28T06:00:22Z,2014-12-28T06:06:28Z,"c:b:tmux, s:invalid, t:bug",,,"I am trying to make a new tmux colorscheme by copying the default one (in `powerline/config_files/colorschemes/tmux/default.json` to `~/.config/powerline/colorschemes/tmux/foo.json` and then setting the tmux colorscheme in `config.json` to `foo`.

This doesn't appear to work, as this is what I get when I reload tmux:

```
set option: status -> on
set option: status-utf8 -> on
set option: status-interval -> 2
set option: status-left-length -> 20
set option: status-right -> ""#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p ""#D""`)""
set option: status-right-length -> 150
set option: window-status-format -> ""#[]#I #[]#[default]#W ""
set option: window-status-current-format -> ""#[]#[]#I #[]#W #[]""
set option: status-left -> ""#[] #S #[]#(eval $POWERLINE_COMMAND tmux left)""
```

Powerline seems to be reading the file correctly, as it will complain when I remove `foo.json`, so I'm not sure if I'm missing another step here...
"
1240,Use status_delimiter as split character,2014-12-23T23:44:02Z,2014-12-24T23:55:02Z,"c:players, t:bug",,,"Newlines are not being used as a status delimiter in the applescript for the rdio player above, so don't use them.
"
1239,Remove unneded exports,2014-12-22T18:37:32Z,2015-01-07T17:14:47Z,"c:b:shell, t:enhancement",,,"Shell bindings export some environment variables like `$_POWERLINE_MODE`. Exporting them may be avoided by passing them as an argument to `$POWERLINE_COMMAND`. The need in exporting every exported variable should be evaluated, but removing them is not a compatible change.
"
1238,Add support for app-shells/rc,2014-12-20T19:48:57Z,2015-01-08T01:31:06Z,"c:b:shell, t:enhancement",,,"This is the reimplementation of the Plan 9 shell which may be found in main portage tree and in some other Linux distributions. Since the original Plan 9 shell does not have `prompt` function powerline cannot support it. Some notes:
1. Rc has equivalent for `$pipestatus` from zsh which is `$status`, but it may contain not only numeric statuses, but also signal names and `+core`: e.g.
   
   ```
   ; echo 'main() {puts(0);}' | tcc -run - ; echo $status
   ```
   
   will produce
   
   ```
   0 sigsegv+core
   ```
   
   or
   
   ```
   0 sigsegv
   ```
   
   . This provides information that makes sense to display, but it must be tested and powerline should be modified to work with this information.
2. `prompt` variable is a list where second item is a continuation prompt.
3. It should be explicitly stated that powerline is not compatible with Plan 9 rc.
"
1237,Store segment state,2014-12-19T05:19:56Z,2014-12-20T14:08:41Z,s:invalid,,,"This has probably been asked but I wanted to ask anyway. If I write a function how can I store the state of the segment between updates? I want to write something that takes a count, and then diffs it and find a delta between it and store that. How can I do this? I could write out to a file but id rather just do it in memory.
"
1236,Not working with Tmux 1.9a,2014-12-17T12:34:58Z,2015-05-10T14:42:55Z,"c:b:tmux, e:macos, s:invalid, t:bug",(note,(note: working fine with vim),"Hi,

I can't seem to get powerline to work with tmux 1.9a/iterm2.

I've followed the recommendations adding powerline-config to $PATH and I can trace that tmux can see the command correctly.

After a lot of tracing, what is weird is that running the config commands in terminal seems to produce results however tmux's run-shell does nothing.

If I try to run the run-shell command manually it gives me exit code 1 without any change to the status line.

At the moment all I can see is the default tmux green bar.

(note: working fine with vim)
"
1235,Allow --replace argument with --foreground argument,2014-12-13T21:11:23Z,2015-01-08T15:22:48Z,"c:daemon, t:enhancement",,,"It is not convenient that you cannot kill daemon and run it in foreground with one command.
"
1234,Tmux left segment broke,2014-12-12T22:34:14Z,2014-12-28T20:53:47Z,"c:b:tmux, s:duplicate, t:bug",,,"May be related to https://github.com/powerline/powerline/issues/1232, but with the updates in pyuv, the left segment in tmux no longer work.

![](https://raw.githubusercontent.com/mhartington/svg/master/Screen%20Shot%202014-12-12%20at%205.30.13%20PM.png)

Related PR: https://github.com/powerline/powerline/pull/1233
"
1233,Adapt to pyuv API changes,2014-12-12T08:52:48Z,2014-12-28T20:51:49Z,"c:watchers, t:bug",,,"Should fix #1232 
"
1232,pyuv updateds breaks powerline vim,2014-12-11T14:21:11Z,2014-12-28T20:51:49Z,"c:watchers, t:bug",TypeError,TypeError: __init__() takes exactly 1 argument (4 given),"https://github.com/saghul/pyuv/issues/182#issuecomment-66585910

pyuv was updated to fix an error on osx, and this fixed included a change to the API.

Opening a vim throws this error

```
2014-12-11 08:58:20,405:ERROR:vim:powerline:Failed to create renderer: __init__() takes exactly 1 argument (4 given)
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 733, in update_renderer
    self.create_renderer(**cr_kwargs)
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 471, in create_renderer
    self.config_loader.set_watcher(self.common_config['watcher'])
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/lib/config.py"", line 84, in set_watcher
    self.watcher.transfer_calls(watcher)
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/lib/config.py"", line 49, in transfer_calls
    getattr(watcher, attr)(*args, **kwargs)
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/lib/watcher/uv.py"", line 85, in watch
    pyuv.fs.UV_CHANGE | pyuv.fs.UV_RENAME
TypeError: __init__() takes exactly 1 argument (4 given)
Error detected while processing /Users/mhartington/.vimrc:
line  161:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/vim.py"", line 290, in setup
    return powerline.setup(*args, **kwargs)
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 784, in setup
    self.do_setup(*args, **kwargs)
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/vim.py"", line 146, in do_setup
    self.update_renderer()
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 733, in update_renderer
    self.create_renderer(**cr_kwargs)
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 471, in create_renderer
    self.config_loader.set_watcher(self.common_config['watcher'])
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/lib/config.py"", line 84, in set_watcher
    self.watcher.transfer_calls(watcher)
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/lib/config.py"", line 49, in transfer_calls
    getattr(watcher, attr)(*args, **kwargs)
  File ""/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/lib/watcher/uv.py"", line 85, in watch
    pyuv.fs.UV_CHANGE | pyuv.fs.UV_RENAME
TypeError: __init__() takes exactly 1 argument (4 given)
```

May not be limited to just the vim binding, but that was the first place I saw this error
"
1231,Some Vims that have vim.vvars do not accept unicode indexes,2014-12-09T16:17:53Z,2014-12-09T18:17:46Z,"c:b:vim, t:bug",,,"Ref #1225
"
1230,Improve integration tests,2014-12-09T15:36:46Z,2015-01-06T00:36:54Z,"c:tests, t:enhancement",,,"Ref #1148.
"
1229,Battery segment with tmux,2014-12-09T15:19:36Z,2014-12-09T16:13:21Z,"c:common segments, t:bug",,,"Hi, I'm using the latest powerline from the develop branch, with tmux. When using the battery segment, I'm getting the following error:

ERROR:tmux:battery:Exception while obtaining battery capacity getter: 'str' object has no attribute 'endswidth'

I've just tried commenting out the lines 390 and 391 from ""powerline/powerline/**init**.py"", but no luck at all.

I am using MacOS X Yosemite with python 2.7 (via macports)
"
1228,powerline-config doesn't work,2014-12-09T09:14:20Z,2014-12-09T16:08:13Z,"c:daemon, s:invalid, t:bug",,,"powerline-config fails to connect to the daemon. 'powerline-config tmux source' does:

socket(PF_LOCAL, SOCK_STREAM, 0)  = 5
connect(5, {sa_family=AF_LOCAL, sun_path=""/tmp/tmux-1000/default""}, 24) = -1 ENOENT (No such file or directory)

But the daemon doesn't create a unix domain socket under this path. It uses:

socket(PF_LOCAL, SOCK_STREAM, 0)        = 3
bind(3, {sa_family=AF_LOCAL, sun_path=@""powerline-ipc-1000""...}, 21) = 0
"
1227,Share functionality of common.env.CwdSegment with vim.file_directory,2014-12-09T08:49:52Z,,"c:b:vim, t:enhancement",,,"Would be nice if `vim.file_directory` used in tab/buffer line would support same functionality as `common.env.CwdSegments`, e.g. `dir_shortene_len` & `dir_limit_depth`.
I'm looking to fix it by myself right now, and will appreciate any opinion on how it should be done. 
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/6873548-share-functionality-of-common-env-cwdsegment-with-vim-file_directory?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1226,Honor CFLAGS,2014-12-09T08:47:32Z,2014-12-11T18:27:05Z,"c:installation, t:enhancement",,,"Hi,

distributions normally pass CFLAGS to the compiler. This should be supported in powerline too so e.g. debuginfo packages can be generated.
"
1225,TypeError: only string keys are allowed,2014-12-09T06:46:11Z,2014-12-09T18:17:47Z,"c:b:vim, t:bug",,,"Hello I encounter this problem:
with my vim version

> VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Sep 29 2014 18:36:18)
> Included patches: 1-931

---

> vim --version | grep +python
> +cryptv          +linebreak       +python          +viminfo

---

> Traceback (most recent call last):
>   File ""<string>"", line 9, in <module>
>   File ""/home/rugal/.vim/bundle/powerline/powerline/vim.py"", line 11, in <module>
>     from powerline.bindings.vim import vim_get_func, vim_getvar
>   File ""/home/rugal/.vim/bundle/powerline/powerline/bindings/vim/**init**.py"", line 161, in <module>
>     if hasattr(vim, 'vvars') and vim.vvars['version'] > 703:
> TypeError: only string keys are allowed
> An error occurred while importing powerline module.
> This could be caused by invalid sys.path setting,
> or by an incompatible Python version (powerline requires
> Python 2.6, 2.7 or 3.2 and later to work). Please consult
> the troubleshooting section in the documentation for
> possible solutions.
> Error detected while processing /home/rugal/.vim/bundle/powerline/powerline/bindings/vim/plugin/powerline.vim:
> line  157:
> Traceback (most recent call last):
>   File ""<string>"", line 53, in <module>
>   File ""<string>"", line 40, in powerline_troubleshoot
>   File ""/home/rugal/.vim/bundle/powerline/powerline/lint/**init**.py"", line 11, in <module>
>     from powerline.segments.vim import vim_modes
>   File ""/home/rugal/.vim/bundle/powerline/powerline/segments/vim/**init**.py"", line 16, in <module>
>     from powerline.bindings.vim import (vim_get_func, getbufvar, vim_getbufoption,
>   File ""/home/rugal/.vim/bundle/powerline/powerline/bindings/vim/**init**.py"", line 161, in <module>
>     if hasattr(vim, 'vvars') and vim.vvars['version'] > 703:
> TypeError: only string keys are allowed

---

And after execute this command

```
vim -u NONE -i NONE -S ~/.vim/bundle/powerline/powerline/bindings/vim/plugin/powerline.vim --cmd 'set ls=2' --cmd 'redir > /tmp/vim-messages'

cat  /tmp/vim-messages
```

> Traceback (most recent call last):
>   File ""<string>"", line 9, in <module>
>   File ""/home/rugal/.vim/bundle/powerline/powerline/vim.py"", line 11, in <module>
>     from powerline.bindings.vim import vim_get_func, vim_getvar
>   File ""/home/rugal/.vim/bundle/powerline/powerline/bindings/vim/**init**.py"", line 161, in <module>
>     if hasattr(vim, 'vvars') and vim.vvars['version'] > 703:
> TypeError: only string keys are allowed
> An error occurred while importing powerline module.
> This could be caused by invalid sys.path setting,
> or by an incompatible Python version (powerline requires
> Python 2.6, 2.7 or 3.2 and later to work). Please consult
> the troubleshooting section in the documentation for
> possible solutions.
> Error detected while processing /home/rugal/.vim/bundle/powerline/powerline/bindings/vim/plugin/powerline.vim:
> line  157:
> Traceback (most recent call last):
>   File ""<string>"", line 53, in <module>
>   File ""<string>"", line 40, in powerline_troubleshoot
>   File ""/home/rugal/.vim/bundle/powerline/powerline/lint/**init**.py"", line 11, in <module>
>     from powerline.segments.vim import vim_modes
>   File ""/home/rugal/.vim/bundle/powerline/powerline/segments/vim/**init**.py"", line 16, in <module>
>     from powerline.bindings.vim import (vim_get_func, getbufvar, vim_getbufoption,
>   File ""/home/rugal/.vim/bundle/powerline/powerline/bindings/vim/**init**.py"", line 161, in <module>
>     if hasattr(vim, 'vvars') and vim.vvars['version'] > 703:
> TypeError: only string keys are allowed
"
1224,Enable pypy3 tests,2014-12-08T05:40:59Z,2014-12-08T18:34:35Z,"c:tests, e:pypy3, t:enhancement",,,
1223,Update various URLs: powerline has moved to github.com/powerline,2014-12-07T13:18:16Z,2014-12-08T05:37:39Z,"c:documentation, t:enhancement",,,
1222,Add unicode-7.0 theme and some small theme fixes,2014-12-07T13:16:06Z,2014-12-08T05:37:35Z,"c:common segments, c:configuration, t:enhancement",,,
1221,Fix some issues in powerline.lib.unicode,2014-12-06T12:01:58Z,2014-12-06T12:57:42Z,"c:core, t:bug",,,
1220,Fix higher unicode characters,2014-12-06T11:40:37Z,2014-12-06T12:01:14Z,"c:lint, e:python-ucs2, t:bug",,,"Fixes powerline-lint when using characters above 0x10000.

Ref #1213.
"
1219,Use sockets in abstract namespace only if running on linux,2014-12-05T21:04:15Z,2014-12-06T12:05:47Z,"c:daemon, e:freebsd, t:bug",,,"Also adds fallback to shell client which uses `uname -o` in place of `ostype`.

Replaces #1215
"
1218,Fix tmux colors and alignment,2014-12-04T18:44:43Z,2014-12-05T20:18:24Z,"c:b:tmux, c:configuration, t:bug",,,"Ref #1214
"
1217,Add support for UCS-2 Python builds,2014-12-04T18:17:55Z,2014-12-05T20:46:40Z,"c:core, c:lint, e:python-ucs2, t:bug",,,"Ref #1213
"
1216,Make all identifiers consistent,2014-12-04T18:16:43Z,2015-01-06T13:43:24Z,"c:configuration, t:enhancement",,,"Currently there are highlight group identifiers like `cwd:background` and `ctrlp.background`. This is not consistent: all identifiers should use `:`, this should also be checked by `powerline-lint`.
- [x] Replace `gundo.background`, `ctrlp.background` and `gundo.name` with their equivalents that use colons.
- [x] Make linter check that no group names have dot in themselves.
- [x] Make linter check that no group names specified _in docstrings_ have dot in themselves.
"
1215,Fixed freebsd abstract socket problem,2014-12-04T09:12:47Z,2014-12-06T12:05:49Z,"c:daemon, e:freebsd, t:bug",,,"FreeBSD not supporting abstract UNIX socket namespace, so we should use filesystem instead.
Tested on FreeBSD 10.1 stable.
"
1214,Messed colors in tmux status line,2014-12-04T09:02:02Z,2015-05-10T14:26:36Z,"c:b:tmux, c:configuration, t:bug",,,"Hi,

After recent `git pull` my status line in tmux started to look messed in terms of colors.
Currently it looks like this 
![powerline-tmux-wrong-colors](https://cloud.githubusercontent.com/assets/102063/5295727/0bc6f184-7b9c-11e4-8f79-7ea5b094bea8.png)

Right status is ok, but left one and window list has problems with separators and backgrounds.
 I did a bisect and it started with those two commits:
`f3ba38e Move all configuration to powerline-base.conf`
`e6fc291 Get color configuration from variables exported by setcolors`

Before it looked ok: 
![powerline-tmux-correct-colors](https://cloud.githubusercontent.com/assets/102063/5295741/360d6b58-7b9c-11e4-887f-ccc73d6f1a99.png)

Also tried to remove my personal config for tmux (it just adds segments and changes date format) but without any improvement.
"
1213,Powerline incorrectly translates valid Unicode characters,2014-12-03T20:18:21Z,2014-12-05T20:46:40Z,"c:core, e:python-ucs2, t:bug",,,"_Preface:_ I am by no means a Unicode or character encoding expert. I only have a working knowledge of these topics, so I'll try to explain it as best I can.

**Operating System:** OS X Mavericks (10.9.5)
**Python:** 2.7.5 (system Python)
**Powerline:** 1.3 (specifically commit 7b895332245a21e820a329d6e3624e0686453ec8)
**Terminal:** iTerm2 Build 2.0.0.20141103
**Font:** Inconsolata for Powerline
**Shells:** Bash 4.3.30, Zsh 5.0.7

**Background:** I use [pyenv](https://github.com/yyuu/pyenv) and [rbenv](https://github.com/sstephenson/rbenv) to manage my Python and Ruby interpreters, respectively. Powerline works really well with this, allowing me to have indicators for versions of Python and Ruby currently in use (see [my segment](https://github.com/seanfisk/dotfiles/blob/master/dotfiles/config/powerline/powerline_sean_segments.py), soon to become an external Powerline plugin, hopefully). This code is not directly involved in the issue in my opinion, but I wanted to link to it just in case it might be important.

For these indicators, I use the Unicode [SNAKE](http://unicode-table.com/en/1F40D/) and [GEM STONE](http://unicode-table.com/en/1F48E/) to decorate the respective segment (with [this theme config](https://github.com/seanfisk/dotfiles/blob/master/dotfiles/config/powerline/themes/shell/sean.cjson#L46)). These characters are outside of the Basic Multilingual Plane, so they are represented using [surrogates](http://en.wikipedia.org/wiki/Universal_Character_Set_characters#Surrogates). Through Powerline 1.2, this was working fine, but the upgrade to 1.3 caused problems. However, it only broke the GEM STONE — SNAKE was fine.

**Issue:** I tracked the problem down to 7b895332245a21e820a329d6e3624e0686453ec8, which introduces code to translate the lone surrogates produced by [PEP 383](https://www.python.org/dev/peps/pep-0383)'s `surrogateescape`. Unfortunately, the second half of the GEM STONE surrogate pair (0xDC8E) falls into the range of lone surrogates produced by `surrogateescape` (0xDC80–0xDCFF) and is then translated, causing the character to be displayed improperly.

Powerline 1.2:

![Powerline 1.2 GEM STONE](https://www.evernote.com/shard/s226/sh/6ccfe44f-2b54-4455-9944-1829806fd637/7dbef108269beb8bb8a12ee323213eff/deep/0/powerline-1.2-gemstone.png)

Powerline 1.3:

![Powerline 1.3 GEM STONE](https://www.evernote.com/shard/s226/sh/11accd99-449f-43d1-85b7-c8a7cbe639a0/81558f4fe601187cdbc24ba2fe155fa9/deep/0/powerline-1.3-gemstone.png)

Quoting PEP 383:

> Data obtained from other sources may conflict with data produced by this PEP. Dealing with such conflicts is out of scope of the PEP.

The GEM STONE data comes from the JSON config file, but it is being treated as if it was generated by the `surrogateescape` API.

**Solution:** I believe the only correct solution to this problem is to run the translation only when the data comes from one of the system interfaces specified by PEP 383. Unfortunately, this breaks the formerly elegant ""one size fits all"" approach of translating these characters in the renderer. To make this work, they will likely have to be translated outside of the renderer.

I realize this is probably a major headache and am more than willing to participate in finding a solution. I wanted to get the issue out first so that it was known. Please let me know if any more clarification is needed.

P.S. Thanks for Powerline; it rules!
"
1212,Installation via AUR now working out of the box (KeyError: 'function'),2014-12-03T10:44:19Z,2014-12-03T21:48:54Z,"c:installation, s:invalid, t:bug","KeyError, ImportError","KeyError: u'function', ImportError: No module named plugin.ctrlp","As described in ArchLinux AUR package, I open this issue, because the installation is not functioning in zsh and vim. I think it is the same error, but for safety I post both.

Zsh error:

``` python
2014-12-03 11:38:25,341:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'mode', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:25,341:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'hostname'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:25,342:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'user'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:25,342:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'virtualenv'}: u'function'
Traceback (most recent call last):
2014-12-03 11:38:27,968:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'mode', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'hostname'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'user'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'virtualenv'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'args': {u'dir_limit_depth': 3}, u'name': u'cwd'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'jobnum', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'last_pipe_status', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,970:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'branch'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
```

Vim error

``` python
2014-12-03 11:38:25,341:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'mode', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:25,341:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'hostname'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:25,342:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'user'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:25,342:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'virtualenv'}: u'function'
Traceback (most recent call last):
2014-12-03 11:38:27,968:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'mode', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'hostname'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'user'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'virtualenv'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'args': {u'dir_limit_depth': 3}, u'name': u'cwd'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'jobnum', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,969:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'last_pipe_status', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:38:27,970:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'branch'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'

2014-12-03 11:40:08,856:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'mode', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:08,856:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'hostname'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:08,857:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'user'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:08,857:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'virtualenv'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:08,857:ERROR:shell:segment_generator:Failed to generate segment from {u'args': {u'dir_limit_depth': 3}, u'name': u'cwd'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:08,857:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'jobnum', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:08,857:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'last_pipe_status', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:08,857:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'branch'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
vim
2014-12-03 11:40:11,457:ERROR:vim:matcher_generator:Failed to import attr ctrlp from module powerline.matchers.plugin.ctrlp: No module named plugin.ctrlp
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 315, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.ctrlp
2014-12-03 11:40:11,459:ERROR:vim:matcher_generator:Failed to import attr gundo_preview from module powerline.matchers.plugin.gundo: No module named plugin.gundo
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 315, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.gundo
2014-12-03 11:40:11,463:ERROR:vim:matcher_generator:Failed to import attr nerdtree from module powerline.matchers.plugin.nerdtree: No module named plugin.nerdtree
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 315, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.nerdtree
2014-12-03 11:40:11,471:ERROR:vim:matcher_generator:Failed to import attr gundo from module powerline.matchers.plugin.gundo: No module named plugin.gundo
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 315, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.gundo
2014-12-03 11:40:11,497:ERROR:vim:segment_generator:Failed to generate segment from {u'name': u'mode', u'exclude_modes': [u'nc']}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,499:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 10, u'name': u'visual_range', u'exclude_modes': [u'nc']}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,500:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 10, u'name': u'paste_indicator', u'exclude_modes': [u'nc']}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,501:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 30, u'name': u'branch', u'exclude_modes': [u'nc']}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,503:ERROR:vim:segment_generator:Failed to generate segment from {u'after': u' ', u'name': u'readonly_indicator', u'draw_soft_divider': False}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,504:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 40, u'name': u'file_directory', u'draw_soft_divider': False}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,505:ERROR:vim:segment_generator:Failed to generate segment from {u'name': u'file_name', u'draw_soft_divider': False}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,507:ERROR:vim:segment_generator:Failed to generate segment from {u'name': u'file_vcs_status', u'draw_soft_divider': False, u'before': u' '}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,508:ERROR:vim:segment_generator:Failed to generate segment from {u'name': u'modified_indicator', u'before': u' '}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,509:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 50, u'module': u'powerline.segments.plugin.syntastic', u'exclude_modes': [u'nc'], u'name': u'syntastic'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,511:ERROR:vim:segment_generator:Failed to generate segment from {u'draw_soft_divider': False, u'priority': 50, u'module': u'powerline.segments.plugin.tagbar', u'exclude_modes': [u'nc'], u'name': u'current_tag'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,512:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 60, u'name': u'file_format', u'draw_soft_divider': False, u'exclude_modes': [u'nc']}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,514:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 60, u'name': u'file_encoding', u'exclude_modes': [u'nc']}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,515:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 60, u'name': u'file_type', u'exclude_modes': [u'nc']}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,517:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 50, u'width': 4, u'align': u'r', u'name': u'line_percent'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,518:ERROR:vim:segment_generator:Failed to generate segment from {u'width': 3, u'align': u'r', u'name': u'line_current', u'draw_soft_divider': False}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-12-03 11:40:11,519:ERROR:vim:segment_generator:Failed to generate segment from {u'name': u'virtcol_current', u'align': u'l', u'priority': 20, u'width': 3, u'draw_soft_divider': False, u'before': u':'}: u'function'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/usr/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
```

I don't know how to make scrollable container for this, so I sorry that its that long
"
1211,Replace usage of chr with unichr,2014-12-03T06:23:28Z,2014-12-05T20:46:41Z,"c:lint, t:bug",,,"`powerline-lint` was crashing for me under Python 2 on this line. I traced the issue back to the fact that I used Unicode escapes in my configuration files. `unichr` is used elsewhere, and so it looks like that is what was intended here. This fixes the issue.
"
1210,Only convert clementine title and album if they are true,2014-12-03T04:46:31Z,2014-12-03T05:26:40Z,"c:players, t:bug",,,"It appears that at least album may be None.

Fixes #1207
"
1209,clementine segment fails through ssh,2014-12-02T23:51:22Z,2014-12-03T04:38:16Z,"c:players, s:wontfix, t:bug",DBusException,DBusException: org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11,"The trace is pretty informative. The player segment can't connect to dbus through ssh sessions.

```
> powerline shell right
2014-12-02 13:44:45,039:ERROR:shell:player:Exception while computing segment: org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11
Traceback (most recent call last):
  File ""/home/user/.local/lib/python2.7/site-packages/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/user/.local/lib/python2.7/site-packages/powerline/segment.py"", line 383, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, **args)
  File ""/home/user/.local/lib/python2.7/site-packages/powerline/segments/common/players.py"", line 46, in __call__
    func_stats = self.get_player_status(**kwargs)
  File ""/home/user/.local/lib/python2.7/site-packages/powerline/segments/common/players.py"", line 372, in get_player_status
    iface_player='org.mpris.MediaPlayer2.Player',
  File ""/home/user/.local/lib/python2.7/site-packages/powerline/segments/common/players.py"", line 230, in _get_dbus_player_status
    bus = dbus.SessionBus()
  File ""/usr/lib/python2.7/dist-packages/dbus/_dbus.py"", line 211, in __new__
    mainloop=mainloop)
  File ""/usr/lib/python2.7/dist-packages/dbus/_dbus.py"", line 100, in __new__
    bus = BusConnection.__new__(subclass, bus_type, mainloop=mainloop)
  File ""/usr/lib/python2.7/dist-packages/dbus/bus.py"", line 122, in __new__
    bus = cls._new_for_bus(address_or_type, mainloop=mainloop)
DBusException: org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11
```
"
1208,lib: Remove wrong shebang from debug.py.,2014-12-02T19:39:46Z,2014-12-03T04:30:16Z,"c:core, t:bug",,,
1207,"If clementine album is empty, segment does not display",2014-12-02T09:09:59Z,2014-12-03T05:26:40Z,"c:players, t:bug",,,"I have the clementine player segment in my right side, and I noticed that if the album is empty, the whole right side does not display.
- Environment: Ubuntu 14.04 amd64, current updates

Right side JSON snippet:

```
    ""right"": [
        {
            ""function"": ""powerline.segments.shell.last_pipe_status"",
            ""priority"": 10
        },
        {
            ""function"": ""powerline.segments.common.vcs.branch"",
            ""priority"": 10
        },
        {
            ""function"": ""powerline.segments.common.players.clementine"",
            ""name"": ""player"",
            ""args"": {
                ""format"": ""{artist} - {title}""
            }
        },
        {
            ""function"": ""powerline.segments.common.bat.battery"",
            ""args"": {
                ""steps"": 20
            }
        }
    ]
```
"
1206,Add support for fbterm,2014-11-30T21:58:00Z,2014-12-06T14:08:41Z,"c:b:shell, t:enhancement",,,"No tests yet, also no tests for term_truecolor.
"
1205,Use “auto” value in internal_ip segment and not “detect”,2014-11-30T21:51:30Z,2015-01-06T13:43:24Z,"c:common segments, t:enhancement",,,"This is consistent with the existing `watcher` and `width` configuration options.
"
1204,Make it possible for linter to validate overrides,2014-11-30T21:49:03Z,,"c:lint, t:enhancement",,,"Currently the only two ways to validate overrides are “run and see what it throws” (usually it throws something that is hard to connect with the actual error, sometimes it does not throw at all) and “put override in user configuration and run linter” (which is error-prone and takes too much time).
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/6638589-make-it-possible-for-linter-to-validate-overrides?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1203,Add more precise caching for tagbar segment,2014-11-29T22:55:14Z,2014-11-30T00:13:41Z,"c:b:vim, t:enhancement",,,"Ref #700.
"
1202,Use dash hack for PyPy+IPython,2014-11-29T18:39:21Z,2014-11-29T21:37:40Z,"c:tests, e:pypy, t:bug",,,"Fixes #1051
Closes #919 (I hope so)
"
1201,Add overrides from environment variables,2014-11-29T17:41:13Z,2015-01-07T15:36:13Z,"c:configuration, t:enhancement",,,"Currently `powerline-config tmux setenv` is responsible for colors and dividers, but it lacks support for `--theme_option` or `--config`. I think it is needed to use some variable _other_ then `POWERLINE_COMMAND` to specify configuration overrides both to `powerline-config` and `powerline`. Possibilities:
1. Share code in `powerline/commands/*.py` and call both `POWERLINE_CONFIG_COMMAND` and `POWERLINE_COMMAND` like `$POWERLINE_…COMMAND $POWERLINE_COMMAND_ARGS`.
2. Use environment variables like those already used in zsh/zpython to specify configuration.
3. Use `$POWERLINE_COMMAND --setup` to set up tmux, not `$POWERLINE_CONFIG_COMMAND tmux setenv`.

I personally do not like the third variant and other variants are inconsistent with the current practices. Thus the suggestion:
- [x] Make `POWERLINE_COMMAND` and `POWERLINE_CONFIG_COMMAND` always point to the executable only (incompatible with tests and documentation), make sure that shells treat them as one argument. Ref #1124.
- [x] Add and use environment variable `POWERLINE_CONFIG_OVERRIDES`. If possible, make it colon-separated (with the respect for the nesting) array like this:
  
  ```
  export POWERLINE_CONFIG_OVERRIDES='common.term_truecolor=true:common.additional_escapes=tmux:ext.tmux={""top_theme"":""unicode""}'
  ```
  
  (note: colon between `top_theme` and `unicode` does not separate the values).
  
  Some solution for escaping colons may be accepted for performance reasons. It may also be practical to just ignore the problem since colons are inevitable only in dictionaries and dictionary entries with dictionaries themselves can already be defined (but not inside the lists in case overrides are used to override segments list).
  
  Another possibility: simply use not colon-separated list, but either semicolon-separated one or double-colon-separated. JSON does not use semicolon for anything and it may be escaped inside strings using `\x3b`.
- [x] Add and use environment variable `POWERLINE_THEME_OVERRIDES` with same parsing rules as above. Ref #1126.
- [x] Make zsh/zpython support the above two points, but leave it possible to have associative array instead.
- [x] Add and use `POWERLINE_CONFIG_PATHS` environment variable which is a colon-separated list. In zsh/zpython it may be a list like it currently is.
- [x] Define and follow what does empty entry in the above colon-separated variables mean. It should mean “no entry”, not “current directory (applicable for `POWERLINE_CONFIG_PATHS`)” or something like “drop previous configuration (applicable for `POWERLINE_…_OVERRIDES`)”.
- [x] Make `powerline-config` accept these overrides.
- [x] Add tests that make sure that in ipython and Vim these overrides are ignored. They have better facilities for defining overrides.
- [x] Fix tests.
- [x] Fix documentation.
"
1200,Obtain tmux colors and dividers from the configuration,2014-11-29T16:37:45Z,2014-11-29T17:15:20Z,"c:b:tmux, t:enhancement",,,"No support for `--theme_option` or `--config`: I think it is needed to use some variable _other_ then `POWERLINE_COMMAND` to specify configuration overrides both to `powerline-config` and `powerline`. Possibilities:
1. Share code in `powerline/commands/*.py` and call both `POWERLINE_CONFIG_COMMAND` and `POWERLINE_COMMAND` like `$POWERLINE_…COMMAND $POWERLINE_COMMAND_ARGS`.
2. Use environment variables like those already used in zsh/zpython to specify configuration.
3. Use `$POWERLINE_COMMAND --setup` to set up tmux, not `$POWERLINE_CONFIG_COMMAND tmux setenv`.
"
1199,Rename some keys in JSON files,2014-11-29T09:19:41Z,2015-01-06T13:43:24Z,"c:configuration, t:enhancement",,,"Some key names are misleading:
- [x] Key `highlight_group` in themes and : should be `highlight_groups`.
- [x] Key `attr` in colorschemes should be `attrs`.
"
1198,Fix shell unicode error when current directory name is not ASCII,2014-11-28T20:08:07Z,2014-11-28T20:16:55Z,"c:b:shell, t:bug",,,"Ref #1197.
"
1197,chdir fails with UnicodeDecodeError when dirname contains umlaut,2014-11-28T18:30:50Z,2014-11-28T20:17:26Z,"c:b:shell, t:bug",UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 20: ordinal not in range(128),"I just encountered this error:

``` bash
$ mkdir ö
$ cd ö

Traceback (most recent call last):
  File ""/usr/local/bin/powerline-render"", line 27, in <module>
    finish_args(args)
  File ""/usr/local/lib/python2.7/site-packages/powerline/commands/main.py"", line 27, in finish_args
    args.renderer_arg = mergeargs((parsedotval(v) for v in args.renderer_arg))
  File ""/usr/local/lib/python2.7/site-packages/powerline/commands/main.py"", line 14, in mergeargs
    for subval in argvalue:
  File ""/usr/local/lib/python2.7/site-packages/powerline/commands/main.py"", line 27, in <genexpr>
    args.renderer_arg = mergeargs((parsedotval(v) for v in args.renderer_arg))
  File ""/usr/local/lib/python2.7/site-packages/powerline/lib/__init__.py"", line 98, in parsedotval
    o, val = keyvaluesplit(s)
  File ""/usr/local/lib/python2.7/site-packages/powerline/lib/__init__.py"", line 78, in keyvaluesplit
    if '=' not in s:
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 20: ordinal not in range(128)
Traceback (most recent call last):
  File ""/usr/local/bin/powerline-render"", line 27, in <module>
    finish_args(args)
  File ""/usr/local/lib/python2.7/site-packages/powerline/commands/main.py"", line 27, in finish_args
    args.renderer_arg = mergeargs((parsedotval(v) for v in args.renderer_arg))
  File ""/usr/local/lib/python2.7/site-packages/powerline/commands/main.py"", line 14, in mergeargs
    for subval in argvalue:
  File ""/usr/local/lib/python2.7/site-packages/powerline/commands/main.py"", line 27, in <genexpr>
    args.renderer_arg = mergeargs((parsedotval(v) for v in args.renderer_arg))
  File ""/usr/local/lib/python2.7/site-packages/powerline/lib/__init__.py"", line 98, in parsedotval
    o, val = keyvaluesplit(s)
  File ""/usr/local/lib/python2.7/site-packages/powerline/lib/__init__.py"", line 78, in keyvaluesplit
    if '=' not in s:
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 20: ordinal not in range(128)
```

```
$ echo $SHELL
/bin/zsh

$ echo $OSTYPE
darwin14.0.0

$ echo $TERM
screen-256color

$ locale 
LANG=""de_DE.UTF-8""
LC_COLLATE=""de_DE.UTF-8""
LC_CTYPE=""de_DE.UTF-8""
LC_MESSAGES=""de_DE.UTF-8""
LC_MONETARY=""de_DE.UTF-8""
LC_NUMERIC=""de_DE.UTF-8""
LC_TIME=""de_DE.UTF-8""
LC_ALL=
```
"
1196,tmux integration not displaying correctly,2014-11-28T16:28:38Z,2014-11-28T17:08:56Z,"c:b:tmux, s:duplicate, t:bug",,,"I use powerline solely with tmux and since I've upgraded my homebrew packages and uninstalled/reinstalled powerline it's not working correctly anymore on OS  X terminal.

I'm getting the following:

![](http://i.imgur.com/2XO1oe5.png)

Without powerline I have the following:

![](http://i.imgur.com/MNQv4Oo.png)

Installation was `pip install powerline-status`.
"
1195,highlight groups field not being read properly,2014-11-28T11:04:27Z,2014-11-28T17:05:48Z,"c:configuration, s:invalid, t:bug",KeyError,"KeyError: u'Highlighting groups not found in colorscheme: c, w, d'","Using powerline in bash
Updated my copy of powerline today and got this error:

```
2014-11-28 18:03:04,706:ERROR:shell:Failed to set highlight group: u'Highlighting groups not found in colorscheme: c, w, d'
Traceback (most recent call last):
  File ""/home/ankur/.local/lib/python2.7/site-packages/powerline/segment.py"", line 147, in set_segment_highlighting
    segment.get('gradient_level')
  File ""/home/ankur/.local/lib/python2.7/site-packages/powerline/colorscheme.py"", line 105, in get_highlighting
    raise KeyError('Highlighting groups not found in colorscheme: ' + ', '.join(groups))
KeyError: u'Highlighting groups not found in colorscheme: c, w, d'
```

I have this in my config thats causing the problem :

```
## removed all segments that dont matter (I guess)
## you might recognize this from the config shared on the multiline issue thread
{
    ""segments"": {
        ""above"": [
            {
                ""left"": [
                    {
                        ""function"": ""powerline.segments.shell.cwd"",
                        ""priority"": 10
                    },
                    {
                        ""type"": ""string"",
                        ""highlight_group"": ""cwd"",
                        ""draw_soft_divider"": false,
                        ""draw_hard_divider"": false,
                        ""width"": ""auto""
                    }
                ],
                ""right"": [
                ]
            }
        ],
        ""left"": [
            {
                ""function"": ""user"",
                ""priority"": 30
            }
        ],
        ""right"": [
        ]
    }
}
```

Please note that everything except for the string segment is displayed properly.

So I tried to put some band-aid changing 

```
# line 140 in segments.py
        hl_groups = lambda hlgs: hlgs
```

to

```
        hl_groups = lambda hlgs: ''.join(hlgs)
```

Now the things that were being displayed propely start complaining (hostname, date, user, uptime). The funny thing is that the error is the same.

For now I have created a single letter group 'c' to avoid the error on cwd.

Thanks
"
1194,"[TMUX, SSH] Hostname segment not showing correctly",2014-11-28T00:38:44Z,2014-11-28T00:39:06Z,"c:b:shell, s:duplicate, t:bug",,,"I'm using Powerline with tmux and bash on my server - the bash instance inside tmux has a small problem with powerline, the hostname segment appears - but is blank and solid colored instead of containing what it should.
Here is a screencap of the issue:
![test](https://cloud.githubusercontent.com/assets/7988747/5222643/7ff8b42a-765b-11e4-8b36-b2c42d44946f.png)

Powerline is straight rom git, 1923.ef0e503
Tmux is 1.9_a-1
Bash is 4.3.030-1
python is 4.3.2-1
Running on ArchLinux 64-bit, kernel version 3.17.4-1-ck

Let me know if you need additional information.
"
1193,"[TMUX, SSH] Hostname segment not showing correctly",2014-11-28T00:36:20Z,2014-11-28T07:06:03Z,"c:b:shell, s:invalid, t:bug",,,"I'm using Powerline with tmux and bash on my server - the bash instance inside tmux has a small problem with powerline, the hostname segment appears - but is blank and solid colored instead of containing what it should.
Here is a screencap of the issue:
![test](https://cloud.githubusercontent.com/assets/7988747/5222643/7ff8b42a-765b-11e4-8b36-b2c42d44946f.png)

Powerline is straight rom git, 1923.ef0e503
Tmux is 1.9_a-1
Bash is 4.3.030-1
python is 4.3.2-1
Running on ArchLinux 64-bit, kernel version 3.17.4-1-ck

Let me know if you need additional information.
"
1192,"tmux: ""Broken"" Pane Title when Spawning New Shell",2014-11-27T10:04:49Z,2014-11-28T20:06:45Z,"c:b:tmux, s:invalid, t:bug",,,"## Brief Description

Under tmux with powerline, when spawning a new shell (via chroot, su, sh, etc.) the pane title is statically set to the name of the spawing process.

**Expected Behaviour**: Pane title behaves as if spawned shell were parent shell (i.e is set to `pwd` or currently executing program).
## Environment

Just in case it becomes relevant, I'm running on the following system:

```
$ uname -r
Linux bmw-mac 3.17.3-1-ARCH #1 SMP PREEMPT Fri Nov 14 23:13:48 CET 2014 x86_64 GNU/Linux
```

My powerline is at the following commit without any local modifications:

```
$ cd $HOME/.powerline; git rev-parse HEAD
92e9a9d72721764bc8dc10ff53ac89b7e806ec0c
```
## Reproduction
1. Start tmux, loading <local_powerline_repo>/powerline/bindings/tmux/powerline.conf
2. Once tmux is running with powerline, execute `bash`
3. Notice how the current pane is now titled ""bash"" not as `$PWD`.
4. Execute `sleep 5` (or any command) and notice how the title still remains set as ""bash"".
## Notes
- Yes, technically, the pane title is (correctly) set to the currently running process.
- We probably don't want to change the pane title for _every_ spawn of a spawn, only for ""shell-like"" processes.
- I'm willing to hack on some code with a bit of direction if necessary.
"
1191,it doesn't work after bundleInstall,2014-11-27T07:28:10Z,2014-11-27T07:33:40Z,"c:b:vim, s:invalid, t:bug",,,".vimrc
`
laststatus=2

g:Powerline_symbols='unicode'
`

use default Vim on iTerm2
en_US.UTF-8
Python 2.7.6
"
1190,Is this a corrupted symbol? ,2014-11-25T14:39:51Z,2014-11-25T16:23:14Z,"c:font, s:invalid, t:bug",,,"Hi,

I have been struggling with this for the past couple of hours thinking this was a misformed symbol and just now I realized that it may actually be the right one :s

Please check out how my tmux time divider shows, I was under the assumption that this was a bad character and when I finally followed the code I found out this is how it's configured, can someone please confirm this is supposed to be the time divider?

![screenshot - 11252014 - 08 39 05 am](https://cloud.githubusercontent.com/assets/3065393/5184624/8babb6e8-747e-11e4-9626-077d665548df.png)

Thanks!
"
1189,"[osx, zsh] {...}/powerline/bindings/zsh/powerline.zsh:192: no such file or directory: {...}/scripts/powerline-config",2014-11-23T14:28:46Z,2014-11-28T17:49:59Z,"c:b:shell, s:invalid, t:bug",,,"After installation by this [guide](https://powerline.readthedocs.org/en/latest/usage/shell-prompts.html#zsh-prompt) I have an error when open new terminal window:  

```
/Users/oluckyman/Library/Python/2.7/lib/python/site-packages/powerline/bindings/zsh/powerline.zsh:192: no such file or directory: /Users/oluckyman/Library/Python/2.7/lib/python/site-packages/scripts/powerline-config  
/Users/oluckyman/Library/Python/2.7/lib/python/site-packages/powerline/bindings/zsh/powerline.zsh:196: no such file or directory: /Users/oluckyman/Library/Python/2.7/lib/python/site-packages/scripts/powerline-config
```
"
1188,Support ZLE_RPROMPT_INDENT,2014-11-22T19:52:58Z,2014-11-22T20:05:19Z,"c:b:shell, t:enhancement",,,"Fixes #1145
"
1187,Tmux powerline not aligned ,2014-11-21T10:33:41Z,2014-11-21T23:59:41Z,"c:b:tmux, t:bug",,,"I am not sure if there is any fix for this, as I have searched on the internet and haven't found anything really specific. (I did find a issue here, but not sure if that was correctly fixed).

https://i.imgur.com/eREdr0u.png

How can I align the tmux powerline in the bottom and fix the left/right gap?

Cheers. 
"
1157,Can't change base background color (vim & tmux),2014-11-20T00:04:38Z,2014-11-20T20:12:46Z,"c:b:tmux, s:duplicate, t:bug",,,"This is the first time I've used powerline, so I'm probably just missing something.  I copied the config files to my user profile as the docs suggested and have looked through every file for defaults, vim-specific, and tmux-specific, but I can't seem to find an option for changing the base background color of the bars.  I use a light theme and the bar is always black.  I've also tried changing the definition of ""black"", which only affected the tmux session color.  I also tried the terminal color options in both Terminal.app and iTerm2.
"
1156,Sideeffect of adding powerline in PYTHONPATH,2014-11-18T18:11:12Z,2014-11-18T20:36:54Z,"c:installation, s:invalid, t:bug",,,"I've added  ""~/powerline / powerline"" to  my PYTHONPATH (for faster dev) but then when a python program calls the subprocess module, this one does ""import selectors"", which in my case fails because python imports:
""powerline / powerline / selectors / **init**.py"" instead of /usr/lib/python3.4/selectors.py .

I was wondering if the ""selectors"" folder could be renamed to something less controversial ?
"
1155,Virtualenv segment too low,2014-11-17T17:27:44Z,2014-11-30T00:16:32Z,"c:font, s:invalid, t:bug",,,"Not sure if this is a problem with my own configuration somehow or if this is an issue others are seeing.  I have attached an image showing the alignment of the virtualenv segment compared to the other segments.  Notice that the text in the virtualenv segment is lower than that of the other segments.
![powerline](https://cloud.githubusercontent.com/assets/58890/5074008/37abfeb4-6e4c-11e4-8850-cbeefff2184a.png)
kubuntu 14.10
konsole terminal
monospace normal 9 pt
"
1154,Quit working in Vim,2014-11-17T10:51:57Z,2014-11-18T20:28:00Z,"c:b:vim, s:invalid, t:bug",,,"Hi,

I had Powerline working in my bash, zsh, and fish shells just fine. They still work. But, upon updating to OS X 10.10 Yosemite, it no longer works in Vim or MacVim. It just says it can not open module site and bombs out. I did a clean install, and it still will not work. I am using the Inconsolata Font for Powerline. Any ideas?
"
1153,Powerline has overlapping elements on the right.,2014-11-14T23:15:21Z,2014-11-15T00:06:03Z,"c:font, s:invalid, t:bug",,,"As you can see by the following screenshot, elements on the right of powerline overlap, no matter how wide the window is.

![screen shot 2014-11-14 at 4 09 38 pm](https://cloud.githubusercontent.com/assets/6991406/5054933/d05e2352-6c18-11e4-9b0a-8ad46199481f.png)

Running:
Mac OS version 10.10 (14A389)
MacBook Air with 11.6-inch (1366 x 768) display
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Sep  9 2014 16:30:51)
Python 2.7.8

Please let me know if I can provide any other information.
"
1152,Update linux.rst,2014-11-13T07:21:23Z,2014-11-29T17:57:07Z,"c:documentation, t:enhancement",,,"Added explanation how to add the terminus powerline font on current ubunt-based distributions. (A config file prevents bitmap fonts from being imported otherwise).
"
1151,"pip ""editable"" install",2014-11-12T10:05:04Z,2014-11-12T20:48:21Z,"c:documentation, s:invalid, t:bug",,,"this typo made me read pip docs :)
"
1150,Powerline contains .virtualenv segment,2014-11-11T22:31:03Z,2014-11-12T20:52:34Z,"c:b:shell, s:invalid, t:bug",,,"My powerline contains a segment like this: ⓔ  .virtualenv. Is it possible to remove somehow?
"
1149,Bash: Right segments don't show,2014-11-10T22:53:07Z,2014-11-11T04:48:55Z,"c:b:shell, s:invalid, t:bug",,,"``` json

{
  ""segments"": {
    ""left"": [{
      ""function"": ""powerline.segments.shell.mode""
    }, {
      ""function"": ""powerline.segments.common.net.hostname"",
      ""priority"": 10
    }, {
      ""function"": ""powerline.segments.common.env.virtualenv"",
      ""priority"": 50
    }, {
      ""function"": ""powerline.segments.shell.cwd"",
      ""priority"": 10,
      ""args"": {
        ""dir_limit_depth"": 1
      }
    }, {
      ""function"": ""powerline.segments.shell.jobnum"",
      ""priority"": 20
    },{
      ""function"": ""powerline.segments.common.vcs.branch"",
      ""args"": {
        ""status_colors"": false
      }
    }
    ],
    ""right"": [{
      ""function"": ""powerline.segments.common.vcs.branch"",
      ""args"": {
        ""status_colors"": false
      }
    }]
  }
}

```

So in this example, the vcs.branch in the left segments will show, but the right segments do not. Any ideas?
"
1148,Perform integration tests with different binaries,2014-11-10T22:32:46Z,,"c:b:vim, c:tests, t:enhancement",,,"Currently only Vim installed in travis is tested. In place of it the following should be tested:
- [x] Most recent Vim with +python/dyn and +python3/dyn. Without any plugins including core ones.
- [x] Vim-7.0.112 with +python (no +python/dyn yet) with python-2.6 and python-2.7 (no +python3 as well). Without any plugins, including core ones.
- [x] All Vims from above with Command-T if possible.
- [ ] All Vims from above with capslock plugin if possible.
- [ ] All Vims from above with syntastic plugin if possible.
- [ ] All Vims from above with tagbar plugin if possible.
- [x] All Vims from above with NERDTree if possible.
- [x] All Vims from above with CtrlP plugin if possible.
- [ ] All Vims from above with all plugins from the above that can be enabled at once.
- [x] Zsh with libzpython module compiled for the tested Python version.
- [x] Most recent fish.
- [x] libuv+pyuv.
- [x] tmux-1.6
- [x] tmux-1.7
- [x] tmux-1.8
- [x] tmux-1.9

It is suggested to put precompiled binaries into the repository, in `test/binaries`. Updating process should be performed exclusively through github pull requests.

Additionally it would be good to have regular tests with the following Python versions:
- [x] UCS-2 python-2.6 version. Ref #1213.
- [x] UCS-2 python-2.7 version. Ref #1213.
- [ ] IronPython (mono).
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/5903403-perform-integration-tests-with-different-binaries?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1147,Use different fallback for old Vims,2014-11-10T21:56:54Z,2014-11-10T22:15:28Z,,,,"Reasoning: currently used fallback works well only if relatively recent patches 
are there: specifically the one that transforms Vim errors to Python exceptions.

This variant should work in any case, but it has a downside: it does not test 
whether function exists, it tests whether argument given to vim_func_exists 
denote some callable object (which may as well be global variable with the same 
name). When it comes to CapsLockStatusline I do not care much as I am using 
`vim.eval` to call it and not saving reference to this function somewhere.

Fixes #1146
"
1146,Entering insert mode causes E700: Unknown function: CapsLockStatusline,2014-11-10T19:55:28Z,2014-11-10T22:15:28Z,"c:b:vim, t:bug",,,"After latest update entering insert mode in a file causes this line to pop up over and over when attempting to type, rendering vim unusable.

```
Error detected while processing function PowerlinePyeval:
line    1:
E700: Unknown function: CapsLockStatusline
```

It seems to span from this commit https://github.com/ZyX-I/powerline/commit/8cf2a86672adc1bd3babd940c2e06df7d2042fbc
I do not have capslock-indicatior installed
"
1145,Support setups with ZLE_RPROMPT_INDENT set,2014-11-10T05:30:18Z,2014-11-22T20:05:19Z,"c:b:shell, t:enhancement",,,"Typically it is set to zero so that additional character that made me use `-  1` when stuffing terminal width from zsh to powerline is not needed. But it is needed to support any value, not just `0`.

Minimal zsh version for which this is applicable is 5.0.5.
"
1144,Add support for csv and capslock and Command-T vim plugins,2014-11-09T21:14:21Z,2014-11-09T22:19:08Z,"c:b:vim, t:enhancement",,,
1143,Gylphs detached from nearby boxes,2014-11-06T19:30:42Z,2014-11-06T22:32:39Z,"c:font, s:invalid, t:bug",,,"![powerline](https://cloud.githubusercontent.com/assets/2003748/4942354/1fd64902-65eb-11e4-9750-f0385cccb59d.png)

Noticed the triangle gylphs have some space in between them and the box they are meant to be attached to.  They also seem just slightly short for the statusline.  

Followed the setup here: http://askubuntu.com/questions/283908/how-can-i-install-and-use-powerline-plugin
"
1142,Support for Subversion,2014-11-06T14:39:31Z,,"c:VCS support, t:enhancement",,,"This adds a new VCS module called `svn.py` that uses [PySVN](http://pysvn.tigris.org) to gather information if the current working directory is part of a Subversion repository.

As there is no clear definition of a branch in Subversion, this module uses the difference between the actual (remote) repository root URL and the URL of the checked out copy as the branch name. If the Subversion repository follows the usual conventions, this would lead to names like `/trunk`, `/branch/feature/foo` or `/tag/1.0.1`. The currently checked our revision number is displayed after the branch name (as in `/trunk:r1234`). If the local copy was checked out from the remote repository root URL, the branch name will simply be `/`.
"
1141,Prompt not colorized in tmux,2014-11-04T23:26:22Z,2014-11-08T17:22:02Z,"c:b:tmux, s:invalid, t:bug",,,"The bash/zsh commandline prompt is not displaying colors in tmux, even though I managed to get the powerline itself working (with colors).

The prompt works fine in pure bash/zsh.

I am getting the proper output, only the colors are not displayed.

I have

```
set -g default-terminal ""xterm-256color""
```

in my .tmux.conf

I also tried setting ""screen-256color"" or running tmux with -2 option. Any ideas?
"
1140,Powerline text in command bar,2014-11-04T10:29:25Z,2014-11-05T08:19:17Z,"c:b:vim, s:invalid, t:bug",,,"Below the vim status line on the command bar I get : <powerline.lib.vcs.git.Repository object at 0x7f058539fb40>
I do not get any info there due to this message.
"
1139,tmux: Failed to obtain renderer both on the right ant left side,2014-11-04T09:17:44Z,2014-11-04T23:18:38Z,"c:b:tmux, s:invalid, t:bug",,,"I am in the process of setting up the powerline, the shell prompt and vim statusline are now working.

Moving to tmux, I am experiencing ""Failed to obtain renderer"" on both sides of the powerline.

My tmux.conf:

```
# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# Setup powerline
run-shell ""powerline-daemon -q""
source ""/usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf""
```

The powerline-render is on $PATH

```
$ which powerline-render
/usr/bin/powerline-render
```

And the powerline-lint outputs no errors.
"
1138,Right hand segements in tmux 1.9a seem to be missing,2014-10-30T09:37:05Z,2014-11-20T20:10:45Z,"c:b:tmux, t:bug",,,"I'm trying to set up powerline with tmux but I seem to missing all the right hand segements
![screenshot 2014-10-30 11 33 48](https://cloud.githubusercontent.com/assets/679634/4841221/3b13e004-6018-11e4-804e-16578eeebe23.png)
"
1137,tmux and vim seems to have problem with font,2014-10-28T10:07:09Z,2014-10-29T10:51:20Z,"c:b:tmux, c:font, s:invalid, t:bug",,,"I tried every methods, tried to uninstall and reinstall everything, i get always the same the same thing. Uncentered glyphs with every fonts, and tmux seems to have a strange behavior with powerline :

![screenshot from 2014-10-28 10 13 46](https://cloud.githubusercontent.com/assets/9361962/4806344/66b2976e-5e88-11e4-9b91-8fe5ab73ce7c.png)

But that work like a charm in gvim :
![screenshot from 2014-10-28 10 41 25](https://cloud.githubusercontent.com/assets/9361962/4806345/66b3b1c6-5e88-11e4-813d-a934a9f193ce.png)
"
1136,Missing highlight groups in solarized colorscheme for tmux (default),2014-10-27T16:38:59Z,2015-01-31T12:36:46Z,"c:configuration, t:bug",,,"When trying to use the `solarized` colorscheme with tmux, I am seeing the following error:

> ERROR:tmux:uptime:Failed to set highlight group: u'Highlighting groups not found in colorscheme: uptime'

The [solarized colorscheme definition](https://github.com/Lokaltog/powerline/blob/develop/powerline/config_files/colorschemes/solarized.json) appears to miss a lot of entries from the [default colorscheme](https://github.com/Lokaltog/powerline/blob/develop/powerline/config_files/colorschemes/default.json).

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/5554675-missing-highlight-groups-in-solarized-colorscheme-for-tmux-default?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1135,sys.path mangling in powerline-config does not work with python3,2014-10-27T15:00:13Z,2014-10-27T20:39:43Z,"c:core, e:python-3.4, s:invalid, t:bug",ImportError,ImportError: No module named 'powerline.bindings.config',"The sys.path mangling in powerline-config (https://github.com/Lokaltog/powerline/blob/master/scripts/powerline-config#L10-16) does not work with python3 (3.4.1):

```
% …/lib/powerline/scripts/powerline-config
Traceback (most recent call last):
  File ""…/lib/powerline/scripts/powerline-config"", line 11, in <module>
    import powerline.bindings.config as config
ImportError: No module named 'powerline.bindings.config'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""…/lib/powerline/scripts/powerline-config"", line 16, in <module>
    import powerline.bindings.config as config
ImportError: No module named 'powerline.bindings.config'
```

It works with python2 (2.7.8).

Maybe it's problematic to change `sys.path` during exception handling?

My intention is to use powerline(-config) without installing powerline, but through a Git submodule.
"
1134,Generate manual pages,2014-10-25T17:34:12Z,2014-10-25T18:41:04Z,"c:documentation, t:enhancement",,,"Ref #1131
Ref #1132
"
1133,Record git hash in dev version,2014-10-25T09:08:58Z,2014-10-25T10:53:07Z,"c:installation, t:enhancement",,,
1132,Add manpages for powerline and powerline-* shell commands. Fixes #1131.,2014-10-25T04:54:32Z,2014-10-25T08:55:21Z,"c:documentation, t:enhancement",,,
1131,Add manpages for powerline and powerline-* shell commands,2014-10-25T04:49:25Z,2014-10-25T18:41:05Z,"c:documentation, t:enhancement",,,"The commands `powerline`, `powerline-config`, `powerline-daemon` and `powerline-lint` should each have a corresponding manpage.
"
1130,Set POWERLINE_COMMAND to default value if undefined in tmux binding.,2014-10-25T04:11:54Z,2014-10-25T08:35:03Z,"c:b:tmux, s:invalid, t:bug",,,"Fixes invisible right segment in tmux, as reported in [Debian bug #766637](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=766637).
"
1129,Add reference to Debian package in documentation,2014-10-22T04:07:22Z,2014-10-25T18:56:13Z,"c:documentation, t:enhancement",,,"Powerline has been packaged for Debian for a while now, it would be great if the documentation was updated to reflect that. Version 1.2 was uploaded moments ago and should be available for the next release of Debian stable (jessie). For the current stable release (wheezy), the package has been backported.

https://packages.debian.org/sid/powerline
"
1128,Wired characters,2014-10-21T10:27:24Z,2014-10-22T06:53:52Z,"c:font, s:invalid, t:bug",,,"Not knowing how to search for solution of the visual bug I met, sorry if this is a duplicate question.

PS: I have installed powerline-fonts, but it's not working.

![image](https://cloud.githubusercontent.com/assets/3103501/4716598/0f1c890c-590a-11e4-8d4f-2ec17debbe6f.png)
"
1127,ImportError: cannot import name get_preferred_output_encoding,2014-10-21T03:11:17Z,2014-10-21T04:23:25Z,"c:b:shell, s:invalid, t:bug",ImportError,ImportError: cannot import name get_preferred_output_encoding,"I just updated powerline to the latest release (powerline-status, version: 1.2), and now it throws the following error in place of a shell prompt:

```
Traceback (most recent call last):
  File ""/usr/local/bin/powerline-render"", line 17, in <module>
    from powerline.lib.unicode import get_preferred_output_encoding
ImportError: cannot import name get_preferred_output_encoding
Traceback (most recent call last):
  File ""/usr/local/bin/powerline-render"", line 17, in <module>
    from powerline.lib.unicode import get_preferred_output_encoding
ImportError: cannot import name get_preferred_output_encoding
```

Installed using pip `pip install powerline-status`
This is in latest Homebrew zsh, 5.0.7
OS X Yosemite 

Any idea what happened? (I realize the config files were not backwards compatible so I removed them. There is no powerline folder in `~/.config`)

The strange thing is I updated to the latest powerline-status on another machine and it works fine. I can't find any differences between the two.

I can provide any further information needed.
"
1126,Inconsistent override variants,2014-10-18T20:46:01Z,2015-01-07T15:36:13Z,"c:b:ipython, c:b:shell, c:b:vim, t:enhancement",,,"Currently used override variants:

| Binding/type | Main configuration override | Theme override | Specifying config paths |
| --- | --- | --- | --- |
| Vim variables | g:powerline_config_overrides | g:powerline_theme_overrides__{theme_name} | g:powerline_config_paths |
| `powerline` options | -c/--config | -t/--theme_option THEME_NAME.… | -p/--config_path |
| shell vars (zpython) | POWERLINE_CONFIG | POWERLINE_THEME_CONFIG=( THEME_NAME … ) | POWERLINE_CONFIG_PATHS |
| Ipython option names | config_overrides | theme_overrides | paths |

Taking #1125 and #1124 into account this should look like this:

| Binding/type | Main configuration override | Theme override | Specifying config paths |
| --- | --- | --- | --- |
| Vim variables | g:powerline_config_overrides | g:powerline_theme_overrides={theme_name: …} | g:powerline_config_paths |
| `powerline` options | -c/--config-override | -t/--theme-override THEME_NAME.… | -p/--config-path |
| shell vars (zpython) | POWERLINE_CONFIG_OVERRIDES | POWERLINE_THEME_OVERRIDES=( THEME_NAME … ) | POWERLINE_CONFIG_PATHS |
| Ipython option names | config_overrides | theme_overrides | config_paths |

Specifically the following should be changed:
- [x] (Vim) `g:powerline_theme_overrides` should be a dictionary where keys 
    are theme names (like in zsh/zpython and IPython).
- [x] (`powerline`) command options use singular form because one override is 
    specified at a time. Note: all other methods support specifying more then 
    one override at a time, so this is a unique variant.
- [x] (`powerline`) `--config` changed to `--config-override` (like in vim and 
    ipython).
- [x] (`powerline`) `--theme-option` changed to `--theme-override` (like in 
    vim and ipython).
- [x] (`powerline`) `--config_path` changed to `--config-path` (#1125).
- [x] (zsh/zpython) `POWERLINE_CONFIG` changed to `POWERLINE_CONFIG_OVERRIDES` 
    (like in vim and ipython).
- [x] (zsh/zpython) `POWERLINE_THEME_CONFIG` changed to 
    `POWERLINE_THEME_OVERRIDES` (like in vim and ipython).
- [x] (ipython) `paths` renamed to `config_paths` (like in all other places).
- [x] docs/source/configuration/local.rst should be updated.
- [x] Tests (including vim and shell) should be updated.

Vim/IPython variant is preferred because “override(s)” better reflects the 
purpose and there is no consistency in theme overrides otherwise 
(`--theme_option` and `POWERLINE_THEME_CONFIG`).

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/5376318-inconsistent-override-variants?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1125,Replace underscores with dashes in long options,2014-10-18T20:17:22Z,2015-01-06T13:43:24Z,"c:b:shell, t:enhancement",,,"Underscores are _very_ uncommon among shell programs and are harder to type.

Commands with underscores:
- [x] `powerline-lint` (`--config_path`)
- [x] `powerline` (`--last_pipe_status`, `--config_path`, `--renderer_arg`, `--theme_option`)
- [x] `powerline-config` (`--config_path`)
"
1124,Inconsistent usage of POWERLINE_CONFIG and POWERLINE_CONFIG_COMMAND,2014-10-18T20:14:07Z,2015-01-06T13:43:24Z,"c:b:shell, t:bug",,,"In tmux bindings variable `$POWERLINE_CONFIG_COMMAND` is used to specify `powerline-config` location if needed. In shell bindings `$POWERLINE_CONFIG` is used, _unless_ you are using zsh with zpython in which case this variable is used _both_ for specifying `powerline-config` location and overrides for `$POWERLINE_CONFIG`.

Suggested resolution:
- [x] Do not use `POWERLINE_CONFIG` anywhere and use `POWERLINE_CONFIG_COMMAND` everywhere except zsh/zpython bindings instead:
  - [x] Rename it in tcsh bindings.
  - [x] Rename it in *sh bindings.
  - [x] Rename it in fish bindings.
  - [x] Rename it in bash bindings.
- [x] Use `POWERLINE_CONFIG_OVERRIDES` for overrides in zsh/zpython. (#1126)
- [x] Update documentation regarding zsh/zpython.
- [x] Update documentation regarding shell bindings.

Since this is backwards-incompatible change it has to be postponed until `2.0`.

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/5375787-inconsistent-usage-of-powerline_config-and-powerline_config_command?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1123,Include raw_response in error message in weather segment,2014-10-18T16:28:34Z,2014-10-18T17:38:06Z,"c:common segments, t:enhancement",,,"Closes #1112
Ref #1119
"
1122,Make “powerline-config” without arguments show proper message (python-3*),2014-10-18T16:03:45Z,2014-10-18T16:16:39Z,"c:core, e:python-3.3, e:python-3.4, t:bug",AttributeError,AttributeError: 'Namespace' object has no attribute 'function',"In Python-3\* it used to show the following:

```
Traceback (most recent call last):
File ""/usr/lib/python-exec/python3.3/powerline-config"", line 66, in <module>
    args.function(pl, args)
AttributeError: 'Namespace' object has no attribute 'function'
```

now it shows

```
usage: powerline-config [-h] {tmux,shell} ...
powerline-config: error: too few arguments
```

in both python-2.7 and -3.3.

Fixes #1120.
"
1121,Tmux status bar not displaying segments on Yosemite,2014-10-18T06:56:02Z,2014-10-18T19:54:45Z,"c:b:tmux, t:bug",,,"![image](https://cloud.githubusercontent.com/assets/1104602/4688806/5edf94a8-5693-11e4-8a36-bbc05edf5b33.png)

After upgrading to Yosemite, tmux status bar isn't showing properly (no segments are visible) and status bar has green background color. 

Running tmux 1.9a, have the following lines in tmux config.

``` bash
# Status bar customization
run-shell ""powerline-daemon -q""
source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
```
"
1120,powerline-config with no arguments fails on Python3: AttributeError: 'Namespace' object has no attribute 'function',2014-10-17T00:41:32Z,2014-10-18T16:16:39Z,"c:core, e:python-3.4, t:bug",AttributeError,AttributeError: 'Namespace' object has no attribute 'function',"```
% powerline-config
Traceback (most recent call last):
  File ""pyenv/3.4.1/bin/powerline-config"", line 66, in <module>
    args.function(pl, args)
AttributeError: 'Namespace' object has no attribute 'function'
```
"
1119,Weather segment sporadic errors.,2014-10-15T10:07:50Z,2015-05-10T14:41:38Z,"c:common segments, t:bug",,,"The weather segment sporadically throws the following error: 
`ERROR:tmux:WeatherSegment:Exception while computing state for None: u'condition'`

The relevant segment definition: 
`.config/powerline/themes/tmux/custom.json`:
...

``` JSON
      {
        ""function"": ""powerline.segments.common.wthr.weather"",
        ""args"": {
        ""interval"": 1000
        }
      }
```

...
Then after some time it updates the segment just fine. 

Also, on a tangent, how about a adding [forecast.io](https://developer.forecast.io/docs/v2) as a weather provider?
"
1118,Modified file flag (%m) more visible,2014-10-12T17:41:33Z,2014-10-12T18:10:06Z,"c:b:vim, s:invalid, t:enhancement",,,"Bonjour, 
Is it possible to put the ""modified file flag"" (%m) in red?
Usually I use the following trick without powerline:  set statusline+=%#Error#%m%#Statusline#
![red_flag](https://cloud.githubusercontent.com/assets/8534386/4606912/f5c8a5f0-5236-11e4-88c8-14a8e4d25bab.png)
Regards,
"
1117,Remove now_playing segment,2014-10-12T11:17:21Z,2015-01-06T17:34:41Z,"c:players, t:enhancement",,,"After #1116 it was deprecated.

Specifically what should be done:
- [x] Remove `now_playing` data from top-level themes.
- [x] Remove `now_playing` segment implementation from `powerline.segments.common.players`.
- [x] Remove `now_playing` highlight group from the list in `PlayerSegment.__call__` method.
- [x] Remove deprecation warning from `powerline.lint.imp`.

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/5235565-remove-now_playing-segment?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1116,Refactor now_playing segment,2014-10-12T11:16:44Z,2014-10-12T12:55:02Z,"c:players, t:enhancement",,,"Ref #445
"
1115,pip uninstall does not work,2014-10-12T04:30:29Z,2014-10-12T09:27:45Z,"c:installation, s:invalid, t:bug",,,"Unfortunately, powerline is not working out for me, and I would like to uninstall it. I installed it from this repo via pip, but when I try to `pip uninstall powerline`, I get:

```
Cannot uninstall requirement powerline, not installed
Storing debug log for failure in /Users/fonnescj/.pip/pip.log
```

The package installed without error, so its not clear why it does not uninstall.
"
1114,Specify $TERM in place of assuming it is set to something working,2014-10-11T20:41:19Z,2014-10-11T20:55:49Z,"c:tests, t:bug",,,"Ref #1104
"
1113,Catches uncaught exception in wthr segment Fixes #1112,2014-10-11T20:17:11Z,2014-10-11T20:38:33Z,"c:common segments, t:bug",,,"Fixes #1112
"
1112,Segment crashes on invalid input,2014-10-11T19:55:09Z,2014-10-18T17:38:06Z,"c:common segments, t:bug",,,"A little while back the Yahoo Weather site failed to return a result for my city, the request URL is [here](https://query.yahooapis.com/v1/public/yql?q=use+%22https%3A%2F%2Fraw.githubusercontent.com%2Fyql%2Fyql-tables%2Fmaster%2Fweather%2Fweather.bylocation.xml%22+as+we%3Bselect+%2A+from+we+where+location%3D%22Calgary%22+and+unit%3D%22c%22&format=json), and while the results are valid now, the query, for a little while returned the below.

```
{""query"":{""count"":1,""created"":""2014-10-08T05:02:53Z"",""lang"":""en-US"",""results"":{""weather"":{""xmlns"":""http://where.yahooapis.com/v1/schema.rng"",""rss"":{""version"":""2.0"",""geo"":""http://www.w3.org/2003/01/geo/wgs84_pos#"",""yweather"":""http://xml.weather.yahoo.com/ns/rss/1.0"",""channel"":{""title"":""Yahoo! Weather - Error"",""description"":""Yahoo! Weather Error"",""item"":{""title"":""City not found"",""description"":""Weather Data not Available at the moment""}}}}}}}
```

The weather website showed this page, as further evidence that the json data was being returned incorrectly.
![Screenshot](https://cloud.githubusercontent.com/assets/894797/4603961/4ca43464-5180-11e4-844a-a46548bb58c5.png)

The invalid input caused the wthr.py segment to throw an exception, rather than failing gracefully.
"
1111,virtualenv does not display under tmux 1.9a,2014-10-10T21:34:13Z,,"c:b:tmux, t:bug",,,"I can call this from the command line:

`powerline tmux right` and the string value of what should be there is indeed correct. I see the current virtualenv name in the console output.

However, if I go edit `powerline/segments/common/env.py`

and add this:

``` python
@requires_segment_info
def virtualenv(pl, segment_info):
    '''Return the name of the current Python virtualenv.'''

    with open('/Users/aventurella/powerline.log', 'a') as f:
        f.write(segment_info['environ'].get('VIRTUAL_ENV', 'NADDA') + '\n')

    return os.path.basename(segment_info['environ'].get('VIRTUAL_ENV', '')) or None
```

My log file just has 'NADDA' on every line. Unless I run `powerline tmux right` in that case the log file shows the right thing.

I'm trying to figure out what gives. My guess is powerline starts up not in a virtualenv and that's what it remembers. When I manually activate a virtualenv and run `powerline tmux right` it gets it because it's running in the same environment the command was run in.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/5218195-virtualenv-does-not-display-under-tmux-1-9a?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1110,iTerm2 Nightly supports 24bit color,2014-10-10T17:54:40Z,2014-10-10T19:49:20Z,"c:documentation, t:enhancement",,,"See: 
- https://code.google.com/p/iterm2/issues/detail?id=218
- https://github.com/gnachman/iTerm2/blob/master/tests/24-bit-color.sh

Let me know if you want me to adjust the way this is designated / worded. I wasn't sure the best way to indicate this in your chart. 
"
1109,-uno argument for branch status segment,2014-10-06T20:34:21Z,,"c:VCS support, t:bug",,,"For extremely large repositories where enumerating untracked files can take a while, it would be nice to have an option that uses `-uno` to get branch status (ignore untracked files). As it stands, I just can't use the dirty state option in my shell prompt or it can block for up to a minute.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/5122106-uno-argument-for-branch-status-segment?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1108,Python errors with VCS segment in bash,2014-10-06T14:52:40Z,2014-10-12T13:04:48Z,"c:watchers, e:macos, s:invalid, t:bug",,,"This could very well be an issue on my end, but I couldn't find any relative information about it.

I included the VCS segment for my shell, bash, and it throws an error when you try to include the status color argument.

``` json
            {
                ""function"": ""powerline.segments.common.vcs.branch"",
                ""priority"": 10,
                ""args"": {
                    ""status_colors"": true
                }
            }
```

With that included, when I navigate to a git repo, I get an error message that is repeated for about 2000 lines before it ""works""

``` bash
2014-10-06 10:47 Python[6256] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() => (null) (-21)
```
"
1107,Clean git repo being incorrectly reported as dirty by Powerline,2014-10-03T19:14:02Z,2014-10-03T19:44:05Z,"c:VCS support, t:bug",,,"I have one directory where Powerline is convinced the git repo is dirty. I double check and my git status indicates there is nothing to stage or commit. This only occurs for this one git repo. Is there a cahce of some kind that I can clear out so that Powerline reports the correct git status? I'm on OS X 10.9.5.
"
1106,Commands are echoed on tmux server start,2014-10-03T08:39:31Z,2014-10-03T09:14:14Z,"c:b:tmux, s:wontfix, t:bug",,,"Irritatingly, a `tmux` process is left running, and I have to hit `C-C` to actually reach the shell.

Example:

![](http://i57.tinypic.com/27yjpj.png)

Using Ubuntu 14.04 LTS with `fish` as default shell.

Contents of `~/.tmux.conf`:

```
source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

set-option -g mouse-select-pane on

bind K confirm kill-server
bind -n C-\ split-window -h
bind -n C-- split-window -v
bind -n M-pageup select-pane -t :.+
bind -n M-pagedown select-pane -t :.-
```

Contents of `~/.config/fish/config.fish`:

```
set -x TERM xterm-256color
set -x EDITOR emacsclient
set -x ALTERNATE_EDITOR emacs
set -x LC_TIME ""ja_JP.UTF-8""

# set PATH so it includes user's private bin if it exists
set -x PATH ""$HOME/.local/bin"" $PATH

function fish_prompt
        ~/powerline-shell/powerline-shell.py $status --shell bare ^/dev/null
end
```
"
1105,NERDTree matcher,2014-10-01T21:33:33Z,2014-10-06T04:42:42Z,"c:b:vim, t:bug",,,"NERD_TREE doesn't match the nerd tree window. NERD_tree works fine.
Has it changed recently? I couldn't find anything.
"
1104,Multiple tests fail when building 1.1 package for Debian,2014-10-01T13:42:25Z,2014-10-19T15:53:00Z,"c:installation, c:tests, s:invalid, t:bug",,,"I'm currently working on updating the Debian package to version 1.1 and having trouble with the tests. The package installs and works fine when I build it without them. When left enabled however, there are multiple errors and I'm not sure if and how I should attempt to repair them.

Here is the full build log : http://paste.debian.net/123980/

The packaging is published here : http://anonscm.debian.org/cgit/collab-maint/powerline.git
"
1103,No previously-included files matching '*.pyc',2014-10-01T00:59:56Z,2014-10-01T03:18:47Z,,,,"Hey there, so not to sure if this is an error on my part, but this error is coming up doing my install process

``` bash
pip install --user git+git://github.com/Lokaltog/powerline
Downloading/unpacking git+git://github.com/Lokaltog/powerline
  Cloning git://github.com/Lokaltog/powerline to /var/folders/3r/fhwfks751sl3wyx5518vm3500000gn/T/pip-2vrL16-build
  Running setup.py (path:/var/folders/3r/fhwfks751sl3wyx5518vm3500000gn/T/pip-2vrL16-build/setup.py) egg_info for package from git+git://github.com/Lokaltog/powerline

    warning: no previously-included files matching '*.pyc' found under directory 'powerline/bindings'
    warning: no previously-included files matching '*.pyo' found under directory 'powerline/bindings'
Installing collected packages: powerline-status
  Running setup.py install for powerline-status

    warning: no previously-included files matching '*.pyc' found under directory 'powerline/bindings'
    warning: no previously-included files matching '*.pyo' found under directory 'powerline/bindings'
    changing mode of build/scripts-2.7/powerline-lint from 644 to 755
    changing mode of build/scripts-2.7/powerline-daemon from 644 to 755
    changing mode of build/scripts-2.7/powerline-render from 644 to 755
    changing mode of build/scripts-2.7/powerline-config from 644 to 755
    changing mode of /Users/mhartington/Library/Python/2.7/bin/powerline-config to 755
    changing mode of /Users/mhartington/Library/Python/2.7/bin/powerline-daemon to 755
    changing mode of /Users/mhartington/Library/Python/2.7/bin/powerline-lint to 755
    changing mode of /Users/mhartington/Library/Python/2.7/bin/powerline-render to 755
Successfully installed powerline-status
Cleaning up...
```

Mainly, this one

```
warning: no previously-included files matching '*.pyc' found under directory 'powerline/bindings'
```

Not sure if this is something I should be worried about or what. Any ideas?
"
1102,powerline in console (after logging in to system without X auto start),2014-09-30T05:29:52Z,2014-09-30T12:52:17Z,"s:invalid, t:bug",,,"Hello,

I'm not entirely sure if what I am asking about is possible but I figured I may as well ask. If not please just delete this issue.

The question I am asking about is when switching to a system console (ctrl+alt+F1-F10) the Powerline fonts are not correctly showing up. Is there a way to enable this?

Here is an example of the problem.

![screenshot from 2014-09-30 01 24 23](https://cloud.githubusercontent.com/assets/596184/4453714/9d95af14-4862-11e4-9399-4c4066abee8a.jpg)

Thanks for your assistance,
ecool

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/4990585-powerline-in-console-after-logging-in-to-system-without-x-auto-start?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1101,KeyError: u'function' when running powerline,2014-09-29T09:09:16Z,2014-09-30T14:09:35Z,"c:b:shell, s:invalid, t:bug",KeyError,KeyError: u'function',"When i open the terminal i see the folowing errors:

2014-09-29 12:04:51,090:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'hostname'}: u'function'
Traceback (most recent call last):
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-09-29 12:04:51,090:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'user'}: u'function'
Traceback (most recent call last):
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-09-29 12:04:51,091:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'virtualenv'}: u'function'
Traceback (most recent call last):
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-09-29 12:04:51,091:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'branch'}: u'function'
Traceback (most recent call last):
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-09-29 12:04:51,091:ERROR:shell:segment_generator:Failed to generate segment from {u'args': {u'dir_limit_depth': 3}, u'name': u'cwd'}: u'function'
Traceback (most recent call last):
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
2014-09-29 12:04:51,091:ERROR:shell:segment_generator:Failed to generate segment from {u'name': u'last_status', u'module': u'powerline.segments.shell'}: u'function'
Traceback (most recent call last):
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 298, in get
    contents, _contents_func, module, function_name, name = get_segment_info(data, segment)
  File ""/home/keramidas/.local/lib/python2.7/site-packages/powerline/segment.py"", line 62, in get_function
    function_name = segment['function']
KeyError: u'function'
"
1100,[WIP] Add vcsinfo segments,2014-09-27T14:06:07Z,,"c:VCS support, t:enhancement",,,"TODO:
- [x] Add support for displaying mercurial bookmarks
- [ ] (partial: no pygit2) Add support for displaying Git abbreviations
- [x] Add tests for new functionality.
- [x] Add vcsinfo segment.
- [ ] Add vcsinfo segment tests.
- [ ] Optimize speed: cache values and only change them when some file changes, and possibly get some values from FS directly.

Closes #734
Closes #658
Fixes #966
Fixes #1098
"
1099,How to uninstall powerline,2014-09-26T22:42:49Z,2014-09-26T22:48:36Z,"c:b:vim, s:invalid, t:bug",NameError,NameError: name 'powerline' is not defined,"I've installed powerline for VIM but its causing weird refresh issues and I'd like to uninstall it. I used vundle to install it and used it to uninstall as well but I'm still getting the following message when I open files in Vim:

```
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name 'powerline' is not defined
```

I assume it's because of some Python package still existing somewhere but I couldn't find it with `pip list`. I've also looking into my `.vimrc` and there is no mention of Powerline anymore.

Thanks!

Mac OSX 10.9.4
"
1098,Support displaying hg's bookmark and  bookmark + branch,2014-09-26T21:38:46Z,,"c:VCS support, t:enhancement",,,"In addition to showing just mercurial's branch a lot of environments use bookmarks for different features.  It would be nice to support showing the current bookmark in the vcs segment.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/4853904-support-displaying-hg-s-bookmark-and-bookmark-branch?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1097,Segment tmux.attached_clients not working,2014-09-26T18:43:13Z,2014-09-27T14:05:52Z,"c:b:tmux, t:bug",,,"Adding the _tmux.attached_clients_ segment has no effect on the status bar. During debugging the issue it turned out that something is wrong with the call to tmux itself. 

Running powerline-daemon in foreground shows a lot of error like this:

```
tmux: unknown option -- F
usage: tmux [-28lquvV] [-c shell-command] [-f file] [-L socket-name]
            [-S socket-path] [command [flags]]
```
"
1096,Add a way to not mark repo as dirty when it only has untracked files,2014-09-25T20:32:22Z,2014-09-25T20:44:52Z,"c:common segments, t:enhancement",,,"Replaces #1080
"
1095,Version Conflict certifi 14.05.14,2014-09-25T19:23:11Z,2014-09-25T19:41:21Z,"c:installation, s:invalid, t:bug",,,"Attempting to install from git repo:

```
$ pip install git+git://github.com/Lokaltog/powerline
```

But getting a Version Conflict error. Is that correct?

```
pkg_resources.VersionConflict: (certifi 14.05.14 (/Users/hanleyhansen/venv/monetate/lib/python2.7/site-packages/certifi-14.05.14-py2.7.egg), Requirement.parse('certifi==1.0.1'))
```
"
1094,Ignoring virtual nics when interface is detect,2014-09-22T00:59:08Z,2014-09-22T03:42:36Z,"c:common segments, t:enhancement",,,
1093,Some test fixes,2014-09-21T11:51:22Z,2014-09-21T12:03:59Z,"c:tests, t:bug",,,"Ref #1087
"
1092,Remove all segments from powerline.segments.common,2014-09-21T11:00:35Z,2015-01-06T17:34:41Z,"c:common segments, t:enhancement",,,"See #1083.

Specifically this is what should be done:
- [x] Remove deprecation warning from powerline-lint (`powerline.lint.imp`).
- [x] Remove imports from `powerline.segments.common`.
"
1091,Split powerline.segments.common module,2014-09-20T22:10:48Z,2014-09-21T10:58:39Z,"c:common segments, t:enhancement",,,"Ref #1083 
"
1090,Improve documentation,2014-09-20T14:29:12Z,2014-09-20T16:10:26Z,"c:documentation, t:enhancement",,,
1089,Raise an exception when git is not found,2014-09-20T10:32:16Z,2014-09-20T10:48:59Z,"c:VCS support, t:bug",,,"Fixes #531 as such exceptions are ignored in powerline.lib.vcs.guess.
"
1088,Fix weather segment,2014-09-20T09:50:43Z,2014-09-20T10:11:50Z,"c:common segments, t:bug",,,"Problem: weather segment used to set its state (i.e. user location) once and 
remember it forever.
Second problem: Yahoo does not always recognize region codes in the request.

Ref #1081.
"
1087,In python-3* vim segment tests spam path joining errors,2014-09-19T20:54:04Z,2014-09-21T12:04:00Z,"c:VCS support, c:tests, t:bug",TypeError,"TypeError: startswith first arg must be str or a tuple of str, not bytes","From https://travis-ci.org/Lokaltog/powerline/jobs/35770989:

```
test_bash (__main__.TestConfig) ... ok
test_ipython (__main__.TestConfig) ... ok
test_tmux (__main__.TestConfig) ... ok
test_wm (__main__.TestConfig) ... 2014-09-19 20:42:23,722:WARNING:wm:EmailIMAPSegment:Username and password are not configured
2014-09-19 20:42:23,722:WARNING:wm:EmailIMAPSegment:Username and password are not configured
2014-09-19 20:42:23,722:WARNING:wm:EmailIMAPSegment:Username and password are not configured
2014-09-19 20:42:23,722:WARNING:wm:EmailIMAPSegment:Username and password are not configured
2014-09-19 20:42:23,722:WARNING:wm:EmailIMAPSegment:Username and password are not configured
2014-09-19 20:42:23,722:WARNING:wm:EmailIMAPSegment:Username and password are not configured
2014-09-19 20:42:23,722:WARNING:wm:EmailIMAPSegment:Username and password are not configured
ok
test_zsh (__main__.TestConfig) ... ok
test_vim (__main__.TestVimConfig) ... 2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
2014-09-19 20:42:24,239:ERROR:vim:file_vcs_status:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 80, in join
    if b.startswith(sep):
TypeError: startswith first arg must be str or a tuple of str, not bytes

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/travis/build/Lokaltog/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/git.py"", line 81, in status
    extra_ignore_files=tuple(join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 125, in get_file_status
    file_status_cache.update_maps(keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lib/vcs/__init__.py"", line 100, in update_maps
    ignore_files.add(os.path.join(parent, ignore_file_name))
  File ""/home/travis/virtualenv/python3.2.5/lib/python3.2/posixpath.py"", line 91, in join
    raise TypeError(""Can't mix strings and bytes in path components."")
TypeError: Can't mix strings and bytes in path components.
ok

----------------------------------------------------------------------
Ran 6 tests in 2.449s

OK
```
"
1086,Improve troubleshooting routines,2014-09-19T20:18:46Z,2014-09-19T20:54:22Z,"c:b:vim, c:lint, t:enhancement",,,"Makes `powerline_troubleshoot` from Vim run linter and also refactors `powerline.lint` module that was the largest file in the repository as indicated in #1083.
"
1085,"Even with powerline-daemon running, segments refresh too fast",2014-09-18T22:14:17Z,2014-10-07T19:45:06Z,"c:daemon, s:invalid, t:bug",,,"I got [forecast.io](http://developer.forecast.io) working to replace Yahoo (it's much more compact which is nice) since I was having issues with it (#1081)

However, I can't pull request it yet because it seems that even though I have confirmed multiple times that `powerline-daemon` is running, almost 25,000 requests have been made (screenshot [here](http://i.rxt.gd/wNHS)). It uses the same format as the Yahoo syntax, and Yahoo has the same issue. The difference between Forecast.io and Yahoo Weather (other then Forecast.io being superior IMHO) is that you have to pay for more than 1000 API requests per 24 hours for Forecast.io. This shouldn't be a problem as long as theres a sane update interval (something like every 2 minutes at a minimum, as there are 1440 minutes in a day), but in the current state it would cost almost $70 a month to have Forecast.io as a segment!

It looks like (according to #601) this should have been fixed by #822, but it wasn't.

Then it should have been fixed by 1d696d3d4c54707714180eaed93f196628d2ba2b, but I am running on code later than that date, and it isn't fixed.

In #962 it was reported that `POWERLINE_CONFIG= powerline-config tmux source` should fix the problem, but I tried and it didn't.
"
1084,"Tmux doesn't find ""powerline.conf""",2014-09-18T13:10:26Z,2014-09-18T18:49:36Z,"c:b:tmux, s:invalid, t:bug",,,"Then I startup Tmux, a string that says that ""~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf: No such file or directory"". But when I check, the powerline.conf exists there. Zsh has no problem to locate the file. Nothing wrong with the file's permissons.
"
1083,Split powerline.segments.common module,2014-09-17T18:30:48Z,2014-09-21T10:58:39Z,"c:common segments, t:enhancement",,,"It is way too large: second largest file in the repository (1469 lines, first place is 1721 lines and is taken by powerline.lint module).

Note: since there already is a release for backwards compatibility `powerline.segments.common` should import all the segments it used to import. This compatibility does not touch documentation or segment classes (the only one imported is `CwdSegment`).

_No new segments should be added to the `powerline.segments.common` after the refactoring._

Note to self: after opening PR raise a new issue with milestone “next major release” that will talk about removing segments from `powerline.segments.common`.
"
1082,powerline Upgrade Issues,2014-09-17T01:59:50Z,2014-09-17T04:39:07Z,"c:b:vim, s:invalid, t:bug",,,"I've been encountering various issues lately while trying to upgrade `powerline`, and it's starting to become rather frustrating to debug. I'm hoping someone can help me understand what might be going on.

First, I'll give some perspective on my environment and setup. I use primarily Ubuntu 13.10 and 14.04 and I have a `git` repository that tracks all my config files. `powerline` is configured as a submodule of this repository, and it's worked like a dream for quite some time now. Periodically, I'll update `powerline` by fetching and merging the latest from the `powerline` repository. My installation procedure after updating has always been:

```
cd ~/.beam_configs/generics/.powerline
sudo python setup.py install
```

Occasionally, I'll have conflicts or something so I'll just remove the `~/.beam_configs/generics/.powerline` directory and resync it with the latest (lazily purging any stale files). When I tried to upgrade recently it was much more painful than this, requiring some debugging to identify the specific commit after which I'm unable to get a clean installation of `powerline`.

After going through each commit since my last update, I was able to identify the commit that seems to break my installations. The commit that's giving me trouble is 4147654. I can checkout 5bd543a, install, and everything works without issue. When I checkout 4147654 and attempt reinstall, all my `powerline` applications begin to fail. For example, attempting to launch `vim` triggers this message:

```
/home/beam/.beam_configs/generics/.vimrc
Traceback (most recent call last):
  File ""<string>"", line 11, in <module>
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/__init__.py"", line 777, in setup
    self.do_setup(*args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/vim.py"", line 151, in do_setup
    bool(int(vim.eval(""has('gui_running') && argc() == 0"")))
error: invalid expression
An error occurred while importing powerline package.
This could be caused by invalid sys.path setting,
or by an incompatible Python version (powerline requires
Python 2.6, 2.7 or 3.2 and later to work). Please consult
the troubleshooting section in the documentation for
possible solutions.
It appears that you have two powerline versions installed:
one in /usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline, other in /home/beam/.beam_configs/generics/.powerline/powerline.
You should remove one of this. Check out troubleshooting section,
it contains some information about the alternatives.
Press ENTER or type command to continue
```

From here, I've tried all sorts of things to resolve the obvious error that ""It appears that you have two powerline versions installed"" without success.

This is likely an easy fix since this would seem to be a showstopper if it were a larger issue. Anybody have any tips on how I can resolve this issue with my setup?
"
1081,Weather segment broken,2014-09-17T01:00:39Z,2014-09-20T10:11:51Z,"c:common segments, t:bug",KeyError,KeyError: u'condition',"I work in San Francisco, California, USA and live in Oakland, California, USA. For the last few days, my weather hasn't been working correctly. The only _major_ changes i've made are:

1) Re-installed my Mac with Yosemite
2) Because of 1, I am on a later version of powerline (from Git)

I have Homebrew python correctly installed. I logged the traffic from Python (thanks Little Snitch!) and tried manually running the queries.

For `https://query.yahooapis.com/v1/public/yql?q=use ""https://raw.githubusercontent.com/yql/yql-tables/master/weather/weather.bylocation.xml"" as we;select * from we where location=""San Francisco, CA, US"" and unit=""c""&format=json`, (yes, the URL is decoded for readability) Yahoo returns:

```
{
    ""query"": {
        ""count"": 1,
        ""created"": ""2014-09-17T00:29:26Z"",
        ""lang"": ""en-US"",
        ""results"": {
            ""weather"": {
                ""xmlns"": ""http://where.yahooapis.com/v1/schema.rng"",
                ""rss"": {
                    ""version"": ""2.0"",
                    ""geo"": ""http://www.w3.org/2003/01/geo/wgs84_pos#"",
                    ""yweather"": ""http://xml.weather.yahoo.com/ns/rss/1.0"",
                    ""channel"": {
                        ""title"": ""Yahoo! Weather - Error"",
                        ""description"": ""Yahoo! Weather Error"",
                        ""item"": {
                            ""title"": ""City not found"",
                            ""description"": ""Invalid Input /forecastrss?w=&u=c""
                        }
                    }
                }
            }
        }
    }
}
```

I did check, I am using the commit/fix from #949 (`https://raw.githubusercontent.com/yql/yql-tables/master/weather/weather.bylocation.xml`). If I manually set a location_query to ""San Francisco,California,US"" everything works. However, manually setting location_query to ""San Francisco,CA,US"" (which is what the URL has in it) causes the following error. 

```
$ powerline-render tmux right

2014-09-16 17:35:38,418:ERROR:tmux:WeatherSegment:Exception while updating: u'condition'
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/site-packages/powerline/lib/threaded.py"", line 71, in set_update_value
    self.update_value = self.update(self.update_value)
  File ""/usr/local/lib/python2.7/site-packages/powerline/segments/common.py"", line 487, in update
    condition = response['query']['results']['weather']['rss']['channel']['item']['condition']
KeyError: u'condition'
```

I did also log the freegeoip.com request, which correctly returns a response. 

So, it's either:
1) A bug introduced by a version of powerline since my last (which I think I remember I got in early August)
2) Some change in the Yahoo setup
"
1080,Don't mark repo as dirty if only untracked files,2014-09-16T20:34:10Z,2014-09-25T20:44:52Z,"c:VCS support, t:enhancement",,,"This adds an option to branch segment, by default set to True
"
1079,Improve encoding support,2014-09-16T16:51:39Z,2014-09-17T04:12:49Z,"c:core, t:enhancement",,,"Ref #1078
"
1078,Git Error in Latest Merge,2014-09-15T23:22:22Z,2014-09-17T04:12:50Z,"c:VCS support, t:bug",,,"I am getting a python error when attempting to display the current branch in powerline due to the latest merge - 'fix-non-unicode-vim'.

Basically the branch segment does not appear, and I have the following output:

https://gist.github.com/amadeus/c625355ebfe17118d1e1
"
1077,Fix non-unicode strings and locales handling,2014-09-14T10:10:07Z,2014-09-14T16:07:49Z,"c:b:vim, t:bug",,,"Fixes #1071 and #1072.
"
1076,"[Archlinux] building fails with Aura, pacaur etc.",2014-09-13T17:44:53Z,2014-09-13T18:35:21Z,"c:installation, e:linux, s:invalid, t:bug",,,"When building the package on Arch, with an AUR helper, it fails with the following error:

> $ sudo aura -A python-powerline-git  
> aura >>= Determining dependencies...
> aura >>= AUR Packages:
> python-powerline-git
> 
> aura >>= Continue? [Y/n] Y
> aura: /var/cache/aura/pkgbuilds/python-powerline-git.pb: commitBuffer: invalid argument (invalid character)
"
1075,Add flags argument to vim/plugin/tagbar,2014-09-12T13:19:50Z,2014-09-16T16:06:58Z,"c:b:vim, t:enhancement",,,"Tagbar plugin supports 3 different formats for displaying a tag string.
A flags arguments was added to current_tag function to support this
feature.
"
1074,Add 'flags' argument to vim/plugin/tagbar,2014-09-12T13:04:15Z,2014-09-17T04:39:53Z,"c:b:vim, t:enhancement",,,"Tagbar supports printing of complete function signature (includes a class name before a function name), so the `flags` argument should be added to `tagbar.current_tag` function.
"
1073,Please fix installation of bindings and config files,2014-09-12T06:32:55Z,2014-09-12T07:23:11Z,"c:installation, e:linux, s:invalid, t:bug",,,"Hello,

I use powerline for tmux and package it for distributions. The problem is that the setup script installs bindings and vim files in the wrong directories. They are part of the python path and that's wrong.

I don't have time to fix that, so i open this bug here:

/usr/lib/python2.7/site-packages/powerline/bindings/vim/plugin
/usr/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim

should be

/usr/share/vim/vimfiles/plugin

Same for the other files. The spec file for powerline is here:

http://pkgs.fedoraproject.org/cgit/powerline.git/tree/powerline.spec

Here is the complete filelist ...

/etc/fonts/conf.d/10-powerline-symbols.conf
/etc/xdg/powerline
/etc/xdg/powerline/colors.json
/etc/xdg/powerline/colorschemes
/etc/xdg/powerline/colorschemes/default.json
/etc/xdg/powerline/colorschemes/ipython
/etc/xdg/powerline/colorschemes/ipython/default.json
/etc/xdg/powerline/colorschemes/shell
/etc/xdg/powerline/colorschemes/shell/**main**.json
/etc/xdg/powerline/colorschemes/shell/default.json
/etc/xdg/powerline/colorschemes/shell/solarized.json
/etc/xdg/powerline/colorschemes/solarized.json
/etc/xdg/powerline/colorschemes/vim
/etc/xdg/powerline/colorschemes/vim/**main**.json
/etc/xdg/powerline/colorschemes/vim/default.json
/etc/xdg/powerline/colorschemes/vim/solarized.json
/etc/xdg/powerline/colorschemes/vim/solarizedlight.json
/etc/xdg/powerline/config.json
/etc/xdg/powerline/themes
/etc/xdg/powerline/themes/ascii.json
/etc/xdg/powerline/themes/ipython
/etc/xdg/powerline/themes/ipython/in.json
/etc/xdg/powerline/themes/ipython/in2.json
/etc/xdg/powerline/themes/ipython/out.json
/etc/xdg/powerline/themes/ipython/rewrite.json
/etc/xdg/powerline/themes/powerline.json
/etc/xdg/powerline/themes/shell
/etc/xdg/powerline/themes/shell/**main**.json
/etc/xdg/powerline/themes/shell/continuation.json
/etc/xdg/powerline/themes/shell/default.json
/etc/xdg/powerline/themes/shell/default_leftonly.json
/etc/xdg/powerline/themes/shell/select.json
/etc/xdg/powerline/themes/tmux
/etc/xdg/powerline/themes/tmux/default.json
/etc/xdg/powerline/themes/unicode.json
/etc/xdg/powerline/themes/unicode_terminus.json
/etc/xdg/powerline/themes/unicode_terminus_condensed.json
/etc/xdg/powerline/themes/vim
/etc/xdg/powerline/themes/vim/**main**.json
/etc/xdg/powerline/themes/vim/cmdwin.json
/etc/xdg/powerline/themes/vim/default.json
/etc/xdg/powerline/themes/vim/help.json
/etc/xdg/powerline/themes/vim/plugin_ctrlp.json
/etc/xdg/powerline/themes/vim/plugin_gundo-preview.json
/etc/xdg/powerline/themes/vim/plugin_gundo.json
/etc/xdg/powerline/themes/vim/plugin_nerdtree.json
/etc/xdg/powerline/themes/vim/quickfix.json
/etc/xdg/powerline/themes/vim/tabline.json
/etc/xdg/powerline/themes/wm
/etc/xdg/powerline/themes/wm/default.json
/usr/bin/powerline
/usr/bin/powerline-config
/usr/bin/powerline-daemon
/usr/bin/powerline-lint
/usr/bin/powerline-render
/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg-info
/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg-info/PKG-INFO
/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg-info/SOURCES.txt
/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg-info/dependency_links.txt
/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg-info/not-zip-safe
/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg-info/requires.txt
/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg-info/top_level.txt
/usr/lib/python2.7/site-packages/powerline
/usr/lib/python2.7/site-packages/powerline/**init**.py
/usr/lib/python2.7/site-packages/powerline/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/bindings
/usr/lib/python2.7/site-packages/powerline/bindings/**init**.py
/usr/lib/python2.7/site-packages/powerline/bindings/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/awesome
/usr/lib/python2.7/site-packages/powerline/bindings/awesome/powerline-awesome.py
/usr/lib/python2.7/site-packages/powerline/bindings/awesome/powerline-awesome.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/awesome/powerline-awesome.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/awesome/powerline.lua
/usr/lib/python2.7/site-packages/powerline/bindings/bash
/usr/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh
/usr/lib/python2.7/site-packages/powerline/bindings/config.py
/usr/lib/python2.7/site-packages/powerline/bindings/config.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/config.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/fish
/usr/lib/python2.7/site-packages/powerline/bindings/fish/powerline-setup.fish
/usr/lib/python2.7/site-packages/powerline/bindings/i3
/usr/lib/python2.7/site-packages/powerline/bindings/i3/powerline-i3.py
/usr/lib/python2.7/site-packages/powerline/bindings/i3/powerline-i3.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/i3/powerline-i3.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/ipython
/usr/lib/python2.7/site-packages/powerline/bindings/ipython/**init**.py
/usr/lib/python2.7/site-packages/powerline/bindings/ipython/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/ipython/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/ipython/post_0_11.py
/usr/lib/python2.7/site-packages/powerline/bindings/ipython/post_0_11.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/ipython/post_0_11.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/ipython/pre_0_11.py
/usr/lib/python2.7/site-packages/powerline/bindings/ipython/pre_0_11.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/ipython/pre_0_11.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/qtile
/usr/lib/python2.7/site-packages/powerline/bindings/qtile/**init**.py
/usr/lib/python2.7/site-packages/powerline/bindings/qtile/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/qtile/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/qtile/widget.py
/usr/lib/python2.7/site-packages/powerline/bindings/qtile/widget.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/qtile/widget.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/shell
/usr/lib/python2.7/site-packages/powerline/bindings/shell/powerline.sh
/usr/lib/python2.7/site-packages/powerline/bindings/tcsh
/usr/lib/python2.7/site-packages/powerline/bindings/tcsh/powerline.tcsh
/usr/lib/python2.7/site-packages/powerline/bindings/tmux
/usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
/usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline_tmux_1.8.conf
/usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline_tmux_1.8_minus.conf
/usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline_tmux_1.8_plus.conf
/usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline_tmux_1.9_plus.conf
/usr/lib/python2.7/site-packages/powerline/bindings/vim
/usr/lib/python2.7/site-packages/powerline/bindings/vim/**init**.py
/usr/lib/python2.7/site-packages/powerline/bindings/vim/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/vim/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/vim/plugin
/usr/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim
/usr/lib/python2.7/site-packages/powerline/bindings/zsh
/usr/lib/python2.7/site-packages/powerline/bindings/zsh/**init**.py
/usr/lib/python2.7/site-packages/powerline/bindings/zsh/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/bindings/zsh/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
/usr/lib/python2.7/site-packages/powerline/colorscheme.py
/usr/lib/python2.7/site-packages/powerline/colorscheme.pyc
/usr/lib/python2.7/site-packages/powerline/colorscheme.pyo
/usr/lib/python2.7/site-packages/powerline/config.py
/usr/lib/python2.7/site-packages/powerline/config.pyc
/usr/lib/python2.7/site-packages/powerline/config.pyo
/usr/lib/python2.7/site-packages/powerline/config_files
/usr/lib/python2.7/site-packages/powerline/config_files/colors.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/default.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/ipython
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/ipython/default.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/shell
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/shell/**main**.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/shell/default.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/shell/solarized.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/solarized.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/vim
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/vim/**main**.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/vim/default.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/vim/solarized.json
/usr/lib/python2.7/site-packages/powerline/config_files/colorschemes/vim/solarizedlight.json
/usr/lib/python2.7/site-packages/powerline/config_files/config.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes
/usr/lib/python2.7/site-packages/powerline/config_files/themes/ascii.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/ipython
/usr/lib/python2.7/site-packages/powerline/config_files/themes/ipython/in.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/ipython/in2.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/ipython/out.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/ipython/rewrite.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/powerline.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/shell
/usr/lib/python2.7/site-packages/powerline/config_files/themes/shell/**main**.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/shell/continuation.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/shell/default.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/shell/default_leftonly.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/shell/select.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/tmux
/usr/lib/python2.7/site-packages/powerline/config_files/themes/tmux/default.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/unicode.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/unicode_terminus.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/unicode_terminus_condensed.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/**main**.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/cmdwin.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/default.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/help.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/plugin_ctrlp.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/plugin_gundo-preview.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/plugin_gundo.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/plugin_nerdtree.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/quickfix.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/vim/tabline.json
/usr/lib/python2.7/site-packages/powerline/config_files/themes/wm
/usr/lib/python2.7/site-packages/powerline/config_files/themes/wm/default.json
/usr/lib/python2.7/site-packages/powerline/ipython.py
/usr/lib/python2.7/site-packages/powerline/ipython.pyc
/usr/lib/python2.7/site-packages/powerline/ipython.pyo
/usr/lib/python2.7/site-packages/powerline/lib
/usr/lib/python2.7/site-packages/powerline/lib/**init**.py
/usr/lib/python2.7/site-packages/powerline/lib/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/lib/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/lib/config.py
/usr/lib/python2.7/site-packages/powerline/lib/config.pyc
/usr/lib/python2.7/site-packages/powerline/lib/config.pyo
/usr/lib/python2.7/site-packages/powerline/lib/file_watcher.py
/usr/lib/python2.7/site-packages/powerline/lib/file_watcher.pyc
/usr/lib/python2.7/site-packages/powerline/lib/file_watcher.pyo
/usr/lib/python2.7/site-packages/powerline/lib/humanize_bytes.py
/usr/lib/python2.7/site-packages/powerline/lib/humanize_bytes.pyc
/usr/lib/python2.7/site-packages/powerline/lib/humanize_bytes.pyo
/usr/lib/python2.7/site-packages/powerline/lib/inotify.py
/usr/lib/python2.7/site-packages/powerline/lib/inotify.pyc
/usr/lib/python2.7/site-packages/powerline/lib/inotify.pyo
/usr/lib/python2.7/site-packages/powerline/lib/memoize.py
/usr/lib/python2.7/site-packages/powerline/lib/memoize.pyc
/usr/lib/python2.7/site-packages/powerline/lib/memoize.pyo
/usr/lib/python2.7/site-packages/powerline/lib/monotonic.py
/usr/lib/python2.7/site-packages/powerline/lib/monotonic.pyc
/usr/lib/python2.7/site-packages/powerline/lib/monotonic.pyo
/usr/lib/python2.7/site-packages/powerline/lib/shell.py
/usr/lib/python2.7/site-packages/powerline/lib/shell.pyc
/usr/lib/python2.7/site-packages/powerline/lib/shell.pyo
/usr/lib/python2.7/site-packages/powerline/lib/threaded.py
/usr/lib/python2.7/site-packages/powerline/lib/threaded.pyc
/usr/lib/python2.7/site-packages/powerline/lib/threaded.pyo
/usr/lib/python2.7/site-packages/powerline/lib/tree_watcher.py
/usr/lib/python2.7/site-packages/powerline/lib/tree_watcher.pyc
/usr/lib/python2.7/site-packages/powerline/lib/tree_watcher.pyo
/usr/lib/python2.7/site-packages/powerline/lib/unicode.py
/usr/lib/python2.7/site-packages/powerline/lib/unicode.pyc
/usr/lib/python2.7/site-packages/powerline/lib/unicode.pyo
/usr/lib/python2.7/site-packages/powerline/lib/url.py
/usr/lib/python2.7/site-packages/powerline/lib/url.pyc
/usr/lib/python2.7/site-packages/powerline/lib/url.pyo
/usr/lib/python2.7/site-packages/powerline/lib/vcs
/usr/lib/python2.7/site-packages/powerline/lib/vcs/**init**.py
/usr/lib/python2.7/site-packages/powerline/lib/vcs/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/lib/vcs/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/lib/vcs/bzr.py
/usr/lib/python2.7/site-packages/powerline/lib/vcs/bzr.pyc
/usr/lib/python2.7/site-packages/powerline/lib/vcs/bzr.pyo
/usr/lib/python2.7/site-packages/powerline/lib/vcs/git.py
/usr/lib/python2.7/site-packages/powerline/lib/vcs/git.pyc
/usr/lib/python2.7/site-packages/powerline/lib/vcs/git.pyo
/usr/lib/python2.7/site-packages/powerline/lib/vcs/mercurial.py
/usr/lib/python2.7/site-packages/powerline/lib/vcs/mercurial.pyc
/usr/lib/python2.7/site-packages/powerline/lib/vcs/mercurial.pyo
/usr/lib/python2.7/site-packages/powerline/lint
/usr/lib/python2.7/site-packages/powerline/lint/**init**.py
/usr/lib/python2.7/site-packages/powerline/lint/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/lint/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/lint/inspect.py
/usr/lib/python2.7/site-packages/powerline/lint/inspect.pyc
/usr/lib/python2.7/site-packages/powerline/lint/inspect.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/**init**.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/composer.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/composer.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/composer.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/constructor.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/constructor.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/constructor.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/error.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/error.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/error.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/events.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/events.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/events.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/loader.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/loader.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/loader.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/markedvalue.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/markedvalue.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/markedvalue.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/nodes.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/nodes.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/nodes.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/parser.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/parser.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/parser.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/reader.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/reader.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/reader.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/resolver.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/resolver.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/resolver.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/scanner.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/scanner.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/scanner.pyo
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/tokens.py
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/tokens.pyc
/usr/lib/python2.7/site-packages/powerline/lint/markedjson/tokens.pyo
/usr/lib/python2.7/site-packages/powerline/matcher.py
/usr/lib/python2.7/site-packages/powerline/matcher.pyc
/usr/lib/python2.7/site-packages/powerline/matcher.pyo
/usr/lib/python2.7/site-packages/powerline/matchers
/usr/lib/python2.7/site-packages/powerline/matchers/**init**.py
/usr/lib/python2.7/site-packages/powerline/matchers/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/matchers/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/matchers/plugin
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/**init**.py
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/ctrlp.py
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/ctrlp.pyc
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/ctrlp.pyo
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/gundo.py
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/gundo.pyc
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/gundo.pyo
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/nerdtree.py
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/nerdtree.pyc
/usr/lib/python2.7/site-packages/powerline/matchers/plugin/nerdtree.pyo
/usr/lib/python2.7/site-packages/powerline/matchers/vim.py
/usr/lib/python2.7/site-packages/powerline/matchers/vim.pyc
/usr/lib/python2.7/site-packages/powerline/matchers/vim.pyo
/usr/lib/python2.7/site-packages/powerline/renderer.py
/usr/lib/python2.7/site-packages/powerline/renderer.pyc
/usr/lib/python2.7/site-packages/powerline/renderer.pyo
/usr/lib/python2.7/site-packages/powerline/renderers
/usr/lib/python2.7/site-packages/powerline/renderers/**init**.py
/usr/lib/python2.7/site-packages/powerline/renderers/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/bash_prompt.py
/usr/lib/python2.7/site-packages/powerline/renderers/bash_prompt.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/bash_prompt.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/i3bar.py
/usr/lib/python2.7/site-packages/powerline/renderers/i3bar.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/i3bar.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/ipython.py
/usr/lib/python2.7/site-packages/powerline/renderers/ipython.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/ipython.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/ipython_prompt.py
/usr/lib/python2.7/site-packages/powerline/renderers/ipython_prompt.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/ipython_prompt.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/ksh_prompt.py
/usr/lib/python2.7/site-packages/powerline/renderers/ksh_prompt.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/ksh_prompt.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/pango_markup.py
/usr/lib/python2.7/site-packages/powerline/renderers/pango_markup.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/pango_markup.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/shell.py
/usr/lib/python2.7/site-packages/powerline/renderers/shell.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/shell.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/tcsh_prompt.py
/usr/lib/python2.7/site-packages/powerline/renderers/tcsh_prompt.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/tcsh_prompt.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/tmux.py
/usr/lib/python2.7/site-packages/powerline/renderers/tmux.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/tmux.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/vim.py
/usr/lib/python2.7/site-packages/powerline/renderers/vim.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/vim.pyo
/usr/lib/python2.7/site-packages/powerline/renderers/zsh_prompt.py
/usr/lib/python2.7/site-packages/powerline/renderers/zsh_prompt.pyc
/usr/lib/python2.7/site-packages/powerline/renderers/zsh_prompt.pyo
/usr/lib/python2.7/site-packages/powerline/segment.py
/usr/lib/python2.7/site-packages/powerline/segment.pyc
/usr/lib/python2.7/site-packages/powerline/segment.pyo
/usr/lib/python2.7/site-packages/powerline/segments
/usr/lib/python2.7/site-packages/powerline/segments/**init**.py
/usr/lib/python2.7/site-packages/powerline/segments/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/segments/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/segments/common.py
/usr/lib/python2.7/site-packages/powerline/segments/common.pyc
/usr/lib/python2.7/site-packages/powerline/segments/common.pyo
/usr/lib/python2.7/site-packages/powerline/segments/i3wm.py
/usr/lib/python2.7/site-packages/powerline/segments/i3wm.pyc
/usr/lib/python2.7/site-packages/powerline/segments/i3wm.pyo
/usr/lib/python2.7/site-packages/powerline/segments/ipython.py
/usr/lib/python2.7/site-packages/powerline/segments/ipython.pyc
/usr/lib/python2.7/site-packages/powerline/segments/ipython.pyo
/usr/lib/python2.7/site-packages/powerline/segments/plugin
/usr/lib/python2.7/site-packages/powerline/segments/plugin/**init**.py
/usr/lib/python2.7/site-packages/powerline/segments/plugin/**init**.pyc
/usr/lib/python2.7/site-packages/powerline/segments/plugin/**init**.pyo
/usr/lib/python2.7/site-packages/powerline/segments/plugin/ctrlp.py
/usr/lib/python2.7/site-packages/powerline/segments/plugin/ctrlp.pyc
/usr/lib/python2.7/site-packages/powerline/segments/plugin/ctrlp.pyo
/usr/lib/python2.7/site-packages/powerline/segments/plugin/nerdtree.py
/usr/lib/python2.7/site-packages/powerline/segments/plugin/nerdtree.pyc
/usr/lib/python2.7/site-packages/powerline/segments/plugin/nerdtree.pyo
/usr/lib/python2.7/site-packages/powerline/segments/plugin/syntastic.py
/usr/lib/python2.7/site-packages/powerline/segments/plugin/syntastic.pyc
/usr/lib/python2.7/site-packages/powerline/segments/plugin/syntastic.pyo
/usr/lib/python2.7/site-packages/powerline/segments/plugin/tagbar.py
/usr/lib/python2.7/site-packages/powerline/segments/plugin/tagbar.pyc
/usr/lib/python2.7/site-packages/powerline/segments/plugin/tagbar.pyo
/usr/lib/python2.7/site-packages/powerline/segments/shell.py
/usr/lib/python2.7/site-packages/powerline/segments/shell.pyc
/usr/lib/python2.7/site-packages/powerline/segments/shell.pyo
/usr/lib/python2.7/site-packages/powerline/segments/vim.py
/usr/lib/python2.7/site-packages/powerline/segments/vim.pyc
/usr/lib/python2.7/site-packages/powerline/segments/vim.pyo
/usr/lib/python2.7/site-packages/powerline/shell.py
/usr/lib/python2.7/site-packages/powerline/shell.pyc
/usr/lib/python2.7/site-packages/powerline/shell.pyo
/usr/lib/python2.7/site-packages/powerline/theme.py
/usr/lib/python2.7/site-packages/powerline/theme.pyc
/usr/lib/python2.7/site-packages/powerline/theme.pyo
/usr/lib/python2.7/site-packages/powerline/vim.py
/usr/lib/python2.7/site-packages/powerline/vim.pyc
/usr/lib/python2.7/site-packages/powerline/vim.pyo
/usr/share/doc/packages/powerline
/usr/share/doc/packages/powerline/LICENSE
/usr/share/doc/packages/powerline/README.rst
/usr/share/fontconfig/conf.avail/10-powerline-symbols.conf
/usr/share/fonts/truetype
/usr/share/fonts/truetype/PowerlineSymbols.otf
"
1072,Non-unicode &encoding support in Vim is far from perfect,2014-09-09T17:56:57Z,2014-09-14T16:07:50Z,"c:b:vim, t:enhancement",,,"Tests:
1. Open file with name `$'\xFF'` with `LANG=C`: you will see an exception from `file_name` segment (specifically from `powerline_vim_strtrans_error` where it should not ever happen).
2. Run powerline in a directory which has git branch `$'\xFF'`. Powerline will only raise an exception and display zero in the status line.

Marking this as enhancement since AFAIR non-unicode locales is still somewhat unofficial (documentation has some references in troubleshooting about enabling unicode locales).

Ref #294.
"
1071,Invalid unicode filenames throw warnings from matchers,2014-09-09T17:42:55Z,2014-09-14T16:07:49Z,"c:b:vim, t:bug",,,"Steps to reproduce (assuming unicode locale):

```
vim -u NONE -i NONE -S powerline/bindings/vim/plugin/powerline.vim $'\xFF'
```

Result:

```
/home/zyx/.vam/powerline/powerline/matchers/vim/__init__.py:15: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  return name and os.path.basename(name) == '[Command Line]'
/home/zyx/.vam/powerline/powerline/matchers/vim/plugin/ctrlp.py:30: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  return name and os.path.basename(name) == 'ControlP'
/home/zyx/.vam/powerline/powerline/matchers/vim/plugin/gundo.py:9: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  return name and os.path.basename(name) == '__Gundo__'
/home/zyx/.vam/powerline/powerline/matchers/vim/plugin/gundo.py:14: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  return name and os.path.basename(name) == '__Gundo_Preview__'
```

. This should not happen.
"
1070,Include args.config_path in the key,2014-09-08T19:52:25Z,2014-09-08T20:06:50Z,"c:daemon, t:bug",,,"Consider the following script:

```
% powerline-daemon -s powerline-test
% powerline --socket powerline-test -p/dev/null shell left
Config file not found in search paths (/dev/null): config.json
% powerline --socket powerline-test shell left
Config file not found in search paths (/dev/null): config.json
```

Note the problem: second call to powerline does not use offending path, but it 
still emits the error “Config file not found in search paths”.
"
1069,Do not use _POWERLINE_SHORTENED_PATH or unset it shortly after using,2014-09-08T19:36:17Z,2014-09-08T20:22:33Z,"c:b:shell, t:bug",,,"Fixes #1068
"
1068,cwd segment breaks when re-entering a long directory,2014-09-08T11:58:58Z,2014-09-08T20:22:33Z,"c:b:shell, t:bug",,,"to reproduce, I need to:
cd /usr/local/share/ca-certificates
then the segment looks correct:  ⋯  local  share  ca-certificates 
but when doing that same cd command again this happens:  ~_POWERLINE_SHORTENED_PATH 
"
1067,Add proper errno attribute to exception raised by uv watcher,2014-09-07T19:22:25Z,2014-09-07T19:30:40Z,"c:watchers, t:bug",,,"Ref #1066
"
1066,OSError when editing new file in git repository with vim,2014-09-07T17:31:04Z,2014-09-07T19:30:41Z,"c:VCS support, t:bug",OSError,OSError: No such file or directory: /Users/luc/src/shell/newfile,"when I edit a new (non existing) file in a git repository I get the following error:

```
2014-09-07 19:23:26,033:ERROR:vim:file_vcs_status:Exception while computing segment: No such file or directory: /Users/luc/src/shell/newfile
Traceback (most recent call last):
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segments/vim/__init__.py"", line 521, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/vcs/git.py"", line 77, in status
    extra_ignore_files=tuple(os.path.join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/vcs/__init__.py"", line 151, in get_file_status
    changed ^= file_changed(keypath)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/watcher/uv.py"", line 130, in __call__
    self.watch(path)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/watcher/uv.py"", line 79, in watch
    raise OSError('No such file or directory: ' + path)
OSError: No such file or directory: /Users/luc/src/shell/newfile
```

To reproduce do the following:

``` sh
cd some/git/repository
vim newfile
```

I'm on 5f37ab7e3e94f2fd1846a76af0bdb66cc1a306ee.
"
1065,Fix some possible unicode errors,2014-09-07T16:58:53Z,2014-09-07T17:09:49Z,"c:b:shell, t:bug",,,"Ref #1064
"
1064,zsh TypeError: Type str doesn't support the buffer API,2014-09-07T16:04:17Z,2014-09-07T17:09:49Z,"c:b:shell, t:bug",TypeError,TypeError: Type str doesn't support the buffer API,"I just installed powerline via pip and compiled zpython.

If I now launch zsh I get the following error message:

```
2014-09-07 19:53:15,724:ERROR:shell:cwd:Exception while computing segment: Type str doesn't     support the buffer API
Traceback (most recent call last):
  File ""/home/kevin/.local/lib/python3.4/site-packages/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/home/kevin/.local/lib/python3.4/site-packages/powerline/segment.py"", line 381, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/home/kevin/.local/lib/python3.4/site-packages/powerline/segments/common.py"", line 121, in __call__
    cwd_split = cwd.split(os.sep)
TypeError: Type str doesn't support the buffer API
```

Only the username is displayed.
"
1063,Trying to run development branch with zsh,2014-09-06T15:41:39Z,2014-09-06T19:02:25Z,"c:installation, s:invalid, t:bug",pkg_resources.DistributionNotFound,pkg_resources.DistributionNotFound: Powerline==beta,"Hi, I have python 2.7 and 3.4 installed on my computer. I've cloned the repository, build and install powerline.

<pre>
% source /usr/localpython3 -c 'import powerline; print (powerline.__file__)'
/usr/local/lib/python3.4/dist-packages/powerline_status-dev-py3.4.egg/powerline/__init__.py
</pre>

First I run the daemon: 
% powerline-daemon
Then from urxvt+zsh shell I do:
% /lib/python3.4/dist-packages/powerline_status-dev-py3.4.egg/powerline/bindings/zsh/powerline.zsh
/lib/python3.4/dist-packages/powerline_status-dev-py3.4.egg/powerline/bindings/zsh/powerline.zsh

<pre>
Traceback (most recent call last):                                                                                                                                              
  File ""/usr/local/bin/powerline"", line 4, in <module>
    import pkg_resources
  File ""/usr/lib/python3/dist-packages/pkg_resources.py"", line 2749, in <module>
    working_set = WorkingSet._build_master()
  File ""/usr/lib/python3/dist-packages/pkg_resources.py"", line 444, in _build_master
    ws.require(__requires__)
  File ""/usr/lib/python3/dist-packages/pkg_resources.py"", line 725, in require
    needed = self.resolve(parse_requirements(requirements))
  File ""/usr/lib/python3/dist-packages/pkg_resources.py"", line 628, in resolve
    raise DistributionNotFound(req)
pkg_resources.DistributionNotFound: Powerline==beta
</pre>

Any idea as why ? 
"
1062,ReadTheDocs is not building release documentation,2014-09-05T19:01:30Z,2014-09-22T15:08:25Z,"c:documentation, t:bug",,,"Apparently it is not configured to do so. @Lokaltog I cannot do anything here, but RTD should build at least latest release (better if a number of recent releases) and development documentation.

There is also a mirror of documentation at `pythonhosted.org` referenced by PyPI just in case, but it does not seem to allow holding documentation for multiple versions.
"
1061,Replace g:powerline_config_path Vim variable with …_paths list,2014-09-05T18:12:03Z,2014-09-05T18:37:02Z,"c:b:vim, t:enhancement",,,"This is for consistency with other powerline bindings that now all do have a way 
to specify a list of paths.
"
1060,Clear up error message,2014-09-05T17:55:48Z,2014-09-05T18:14:55Z,"c:common segments, s:wontfix, t:bug",,,"After updating da8a5fc..e6cdafd on FreeBSD 10.0, the changed msg was displayed. It actually means the _python_-psutil package, leaving me confused for a bit.
"
1059,FreeBSD 10.0,2014-09-05T17:54:17Z,2014-09-05T18:16:39Z,"c:common segments, s:wontfix, t:bug",,,"Just updated powerline (da8a5fc..e6cdafd), now the right side in tmux shows this:

2014-09-05 19:44:41,222:WARNING:tmux:uptime:Unable to get uptime. You should install psutil package

On FreeBSD10.0, there is only a psutils (plural) pkg, and that is for manipulating postscript. What did work was installing the py27-psutil package. The error msg could be clearer here. Pull request coming...
"
1058,Improve tabline support,2014-09-05T15:40:21Z,2014-09-05T16:23:11Z,"c:b:vim, t:bug",,,"Ref #1046, #1049, #1047, #1048.
"
1057,Document powerline-status package,2014-09-04T14:15:45Z,2014-09-05T16:39:07Z,"c:documentation, t:enhancement",,,"Document the existence of [powerline-status PyPI package](https://pypi.python.org/pypi/powerline-status) and how to use it for installation.

Currently the only variant is using `pip install powerline-status==beta`. After the release requirement to specify `==beta` must be gone.
"
1056,Improve vim troubleshooting,2014-09-04T04:34:09Z,2014-09-04T04:42:04Z,"c:b:vim, t:bug",,,"Log should not write to `sys.stderr` because this action is transformed into exception by `:try`.
"
1055,Corrects alignment issue between inactive and active windows in tmux.,2014-09-03T01:31:22Z,2014-09-03T18:50:52Z,"c:b:tmux, t:bug",,,"Corrected the alignment between active/inactive windows in tmux bindings.

![image](https://cloud.githubusercontent.com/assets/384053/4128352/a67fb1b0-3309-11e4-8311-102b351c2474.png)

Adresses #1029 
"
1054,error: invalid expression,2014-09-03T01:02:55Z,2014-09-03T20:00:02Z,"c:b:vim, s:invalid, t:bug",,,"```
Traceback (most recent call last):
  File ""<string>"", line 11, in <module>
  File ""/home/collin/.config/vim/bundle/powerline/powerline/__init__.py"", line 778, in setup
    self.do_setup(*args, **kwargs)
  File ""/home/collin/.config/vim/bundle/powerline/powerline/vim.py"", line 150, in do_setup
    bool(int(vim.eval(""has('gui_running') && argc() == 0"")))
error: invalid expression
An error occurred while importing powerline package.
This could be caused by invalid sys.path setting,
or by an incompatible Python version (powerline requires
Python 2.6, 2.7 or 3.2 and later to work). Please consult
the troubleshooting section in the documentation for
possible solutions.
Press ENTER or type command to continue
```

Updated powerline to 77d311bdc81426ef90ed858006d3f749f43d10f9 (HEAD at time of this writing) and this error presents itself.

Reverting to 305fd7917bca64658c17b223895a8195e9b19c64, where I was before, removes the error.
"
1053,Some fixes for libuv-based watcher,2014-09-02T18:09:03Z,2014-09-02T18:22:43Z,"c:core, t:bug",,,"Ref #1052
"
1052,Error in default powerline config after update,2014-09-02T15:26:07Z,2014-09-02T18:22:44Z,"c:VCS support, t:bug","AttributeError, TypeError","AttributeError: 'UvFileWatcher' object has no attribute 'is_watched', TypeError: unsupported operand type(s) for ^=: 'NoneType' and 'bool'","I first reported a related error here #1050 but open this one at @ZyX-I's request.

This happens after the update from f5f85ab808cfbe5633774eddbb4e36a58d3ea8ac to ea3cd2c1c7b9ee016f1c5ba489addf9f52216892 (hence to d714fb0d88d6cbcacbbd72d7854ebe76aef9d6ff, where this was merged into develop). The default configuration (I did `rm -rf ~/.config/powerline`) produces the following error if I open a file in a git repository:

```
Messages maintainer: Bram Moolenaar <Bram@vim.org>
""README.rst"" 95 lines, 4199 characters
2014-09-02 17:16:12,750:ERROR:vim:branch:Exception while computing segment: 'UvFileWatcher' object has no attribute 'is_watched'
Traceback (most recent call last):
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segment.py"", line 316, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segments/vim/__init__.py"", line 498, in branch
    branch = repo.branch()
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/vcs/git.py"", line 88, in branch
    create_watcher=self.create_watcher,
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/vcs/__init__.py"", line 56, in get_branch_name
    is_watched = fw.is_watched(directory)
AttributeError: 'UvFileWatcher' object has no attribute 'is_watched'
2014-09-02 17:16:16,229:ERROR:vim:file_vcs_status:Exception while computing segment: unsupported operand type(s) for ^=: 'NoneType' and 'bool'
Traceback (most recent call last):
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segment.py"", line 316, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/vcs/git.py"", line 77, in status
    extra_ignore_files=tuple(os.path.join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/vcs/__init__.py"", line 151, in get_file_status
    changed ^= file_changed(keypath)
TypeError: unsupported operand type(s) for ^=: 'NoneType' and 'bool'
2014-09-02 17:16:17,335:ERROR:vim:file_vcs_status:Exception while computing segment: unsupported operand type(s) for ^=: 'NoneType' and 'NoneType'
Traceback (most recent call last):
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segment.py"", line 169, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segment.py"", line 316, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/segments/vim/__init__.py"", line 522, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/vcs/git.py"", line 77, in status
    extra_ignore_files=tuple(os.path.join(gitd, x) for x in ('logs/HEAD', 'info/exclude')),
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/lib/vcs/__init__.py"", line 151, in get_file_status
    changed ^= file_changed(keypath)
TypeError: unsupported operand type(s) for ^=: 'NoneType' and 'NoneType'
```

@ZyX-I  did give me some hints in the other thread but I have never configured anything about powerline and am a bit at loss about how to follow them.
"
1051,Powerline tests do not work in ipython when using pypy,2014-09-01T17:57:07Z,,"c:b:ipython, c:tests, e:pypy, t:bug",,,"Apparently it needs same hack dash uses:

```
> /home/travis/virtualenv/pypy-2.3.1/bin/ipython
--- tests/test_shells/ipython.ok 2014-08-31 20:26:31.906124510 +0000
+++ tests/shell/ipython.ipython.ipython.log 2014-08-31 20:29:50.949867248 +0000
@@ -1,14 +1,21 @@
-
- In [2] bool 42
- 2> bool(42)
+++ In [2] In [2] b In [2] bo In [2] boo In [2] bool In [2] bool In [2] bool 4 In [2] bool 42+ 2> bool(42)
Out[2] True
-
- In [3] bool 44
- 3> bool(44)
+++ In [3] In [3] b In [3] bo In [3] boo In [3] bool In [3] bool In [3] bool 4 In [3] bool 44+ 3> bool(44)
Out[3] True
-
- In [4] class Test(object):
- pass
-
-
- In [5] exit
+++ In [4] In [4] c In [4] cl In [4] cla In [4] clas In [4] class In [4] class In [4] class T In [4] class Te In [4] class Tes In [4] class Test In [4] class Test( In [4] class Test(o In [4] class Test(ob In [4] class Test(obj In [4] class Test(obje In [4] class Test(objec In [4] class Test(object In [4] class Test(object) In [4] class Test(object):++ p pa pas pass++ +++ In [5] In [5] e In [5] ex In [5] exi In [5] exit+\ No newline at end of file
```
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/4158785-powerline-tests-do-not-work-in-ipython-when-using-pypy?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1050,import(?) error after update apearently sys.path problems,2014-09-01T16:16:30Z,2014-09-01T17:41:25Z,"c:b:vim, s:invalid, t:bug",,,"I seem to get an import error after update from c5d15ac8a8ce83b770df66d737e86883ba4b9209 (still works) to c488b2da7b36b88ad943ff34d564860b75b257a0 :

```
Traceback (most recent call last):
  File ""<string>"", line 11, in <module>
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/__init__.py"", line 777, in setup
    self.do_setup(*args, **kwargs)
  File ""/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/vim.py"", line 151, in do_setup
    bool(int(vim.eval(""has('gui_running') && argc() == 0"")))
error: Vim:2014-09-01 17:55:10,445:ERROR:vim:segment_generator:Failed to generate segment from {u'name': u'mode', u'exclude_modes': [u'nc']}: u'function'
An error occurred while importing powerline package.
This could be caused by invalid sys.path setting,
or by an incompatible Python version (powerline requires
Python 2.6, 2.7 or 3.2 and later to work). Please consult
the troubleshooting section in the documentation for
possible solutions.
Check your installation: this script is symlinked somewhere
where powerline is not present: '/Users/luc/.homesick/repos/vim/bundle/powerline/powerline' != '/Users/luc/.homesick/repos/vim/bundle/powerline'.
Press ENTER or type command to continue
```

I'm using powerline in vim on Mac OSX with python2. 

What I did for troubleshooting:
1. some `git checkout HEAD^ && vim +q` to find the above commit ids
2. testing `:python import powerline as pl ; print (pl.__file__)`, it yields `/Users/luc/.homesick/repos/vim/bundle/powerline/powerline/__init__.pyc`
3. looking at `pip list` and `sudo find / -name powerline` did not bring up any other installations of powerline.
4. checking the installation instructions in the docs. I'm using Vundle with the command: `Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}` and the directory is really in my rtp: `:echo index(split(&rtp, ','), expand('~/.vim/bundle/powerline/powerline/bindings/vim/'))` says 37

Just in case you wonder: `~/.vim` is linked to `~/.homesick/repos/vim`.

I put this up here just that you know about it and maybe have a tip for me. In the worst case I can just go back to c5d15ac8a8ce83b770df66d737e86883ba4b9209.
"
1049,With large number of buffers E541 may be displayed in tabline,2014-09-01T05:01:11Z,2014-09-05T16:23:11Z,"c:b:vim, t:bug",,,"Here is what is shown with 224 buffers when switching to one of the first ones:

![E541 at the end of the tabline](http://img-fotki.yandex.ru/get/6737/9151298.5/0_ac6b7_50e9be86_orig.png)

Specifically the end:

![E541](http://img-fotki.yandex.ru/get/6745/9151298.5/0_ac6b8_4808fdc2_orig.png)

. Proposed solution: in renderer if next highlighting is the same as the previous one do not add highlighting group.
"
1048,When there are lots of buffers current one is not displayed,2014-09-01T04:57:01Z,2014-09-05T16:23:11Z,"c:b:vim, t:bug",,,"With 223 buffers from #1047 here is what is displayed:

![big list of buffers, current (184) buffer is missing, though center is near this buffer](http://img-fotki.yandex.ru/get/6830/9151298.5/0_ac6b6_fde735aa_orig.png)

: current buffer has number 184 and place for the number is near the center (it always is assuming it is not one of the first or last buffers, even when current buffer is another one).
"
1047,Tabline renders vim unusable with a lot of buffers,2014-09-01T04:51:46Z,2014-09-05T16:24:05Z,"c:b:vim, t:bug",,,"With 223 buffers present tabline makes vim unusable: any action that makes tabline redraw causes screen go blank.

Proposed solution: cache values related to buffer and drop caches on Vim autocommands in place of querying them each time.
"
1046,Tabline is partially rehighlighted when entering insert mode,2014-09-01T04:45:32Z,2014-09-05T16:23:11Z,"c:b:vim, t:bug",,,"Currently in insert mode tabline looks like this:

![Grey tab names and blue rest line](http://img-fotki.yandex.ru/get/6746/9151298.5/0_ac6b5_6d6ecba9_orig.png)

. It must be all blue instead.

Proposed solution: make listers modify segment highlight group by using some prefix (or a list of them). Should also drop segment-local modes support.
"
1045,Improve coding style,2014-08-31T19:02:33Z,2014-08-31T20:30:05Z,"c:b:ipython, c:b:shell, c:b:tmux, c:b:vim, c:b:wm, c:common segments, c:core, c:daemon, c:documentation, c:helpers, t:enhancement",,,"Mainly unified imports and stripped obsolete NOQA comments.
"
1044,Allow specifying interface order for internal_ip,2014-08-30T19:10:00Z,2014-08-30T20:28:33Z,"c:common segments, s:wontfix, t:enhancement",,,"At home, i'm on wifi (en0) but at work, I'm on ethernet (en6). It would be cool if I could give a comma separated string with interface names to check. If both are active, then display both. However, another possibly better option, would be to just show the IP from the first returned interface. That way, if I gave en6,en0 it would return the ethernet IP, and if that didn't exist, the wifi IP.
"
1043,Add segment.truncate and segment.expand attributes support,2014-08-30T14:21:25Z,2014-08-30T14:29:28Z,"c:core, t:enhancement",,,"Ref #154
Ref #161
"
1042,Remove filler segment type,2014-08-30T12:13:59Z,2014-08-30T12:19:01Z,"c:core, c:documentation, t:enhancement",,,"It was replaced with `""width"": ""auto""` and is not used anywhere. I do not even 
know whether it works.
"
1041,PyUv is missing events,2014-08-30T12:03:08Z,,"c:tests, c:watchers, t:bug",,,"Four possible results of running tests assuming 8d3376ce07a5e4035273d44da1bc77132576a866 is backed out (first three are errors):
- “The change to inotify/file2 was not detected” on line 84: most common
- “Spurious change detected” at line 82 (uncommon, usually fixed by sleeping
  before running test in do_test_for_change)
- “The change to inotify was not detected” in tree watcher test (e.g. from line
  131) (very rare)
- All OK.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/4132405-pyuv-is-missing-events?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
1040,Handle errors from Renderer._set_highlighting,2014-08-29T21:01:39Z,2014-08-29T21:56:48Z,"c:core, t:bug",,,"It is done by moving appropriate get_highlighting calls into segment.py: here
errors from contents_func are handled as well.

This is a “fix” for #480 that will make such failures cause segment to disappear
with better header which should show segment which caused the error.

Closes #480
"
1039,Refactor function segments,2014-08-29T18:57:10Z,2014-08-29T20:17:05Z,"c:configuration, c:core, t:enhancement",,,"Hopefully the last major configuration format change before release.

Fixes #1031
"
1038,Use non-unicode defaults in Python code,2014-08-29T16:48:32Z,2014-08-29T16:56:38Z,"c:b:vim, c:common segments, c:configuration, c:players, t:enhancement",,,"Reasons:
- In documentation unicode characters are shown as `\uxxxx`.
- All unicode characters are already in top-level themes.
- If defaults are removed documentation will be lacking examples.
"
1037,Add a way to provide different default values for third-party segments,2014-08-29T16:12:15Z,2014-08-29T16:24:28Z,"c:core, t:enhancement",,,"Fixes #1035
"
1036,Fix width used for tabline,2014-08-29T14:32:30Z,2014-08-29T15:10:13Z,"c:b:vim, t:bug",,,"Fixes #1033
"
1035,Add a way to extend top-level themes usable by third-party plugins,2014-08-29T06:58:53Z,2014-08-29T16:24:03Z,"c:core, t:enhancement",,,"This should be used to provide default string arguments to third-party segments. Should also provide an example of segment created using this technique.

Ref #590.
"
1034,Remove default arguments specified in top-level themes from segments,2014-08-29T06:54:48Z,2014-08-29T16:56:39Z,"c:b:shell, c:b:vim, c:common segments, c:configuration, c:players, t:enhancement",,,"Currently a number of strings is specified both as default function arguments and in top-level themes.
"
1033,Tabline has width of the current window,2014-08-29T06:26:07Z,2014-08-29T15:10:13Z,"c:b:vim, t:bug",,,"It should use &columns instead like it used to do until some refactoring.
"
1032,Refactor VCS tests,2014-08-28T20:28:52Z,2014-08-28T20:50:26Z,"c:tests, t:enhancement",,,"- Use SkipTests to skip tests in place of removing function from class.
- Move module setup/teardown to VCS class since it is the only thing that needs these functions.
- Test whether bazaar/mercurial is available using `__import__` calls.
"
1031,Refactor function segments,2014-08-28T04:21:20Z,2014-08-29T20:17:05Z,"c:configuration, c:core, t:enhancement",,,"Currently function segments use `name` as the name of the function and `module` as the place where module is located. This is inconsistent with other places where module is specified: e.g. when specifying matchers it looks like `{module}.{name}` or just `{name}` and is treaded depending on whether there is a dot in the name. In addition to this inconsistency there is no way to specify e.g. U+1F4C5 CALENDAR sign as the sign that precedes date in top-level theme. Thus the suggestion:

```
{
    ""name"": ""time"",
    ""function"": ""powerline.segments.common.date"",
    ""args"": {
        ""format"": ""%H:%M"",
        ""istime"": true
    }
}
```

where `powerline.segments.common.` part may be omitted if `powerline.segments.common` is the default module and specifying `name` may be omitted if it is OK to use usual `{module}.{function_name}` or `{function_name}` pair as possible names.
"
1030,Improve locales support,2014-08-27T18:39:55Z,2014-08-27T20:00:09Z,"c:b:shell, c:configuration, t:enhancement",,,
1029,tmux: gaps between sessions in status bar,2014-08-27T17:22:17Z,2015-05-10T14:44:36Z,"c:b:tmux, t:bug",,,"In tmux there are gaps between the session lists. Also, changing the active session moves the text around because of these gaps.

Attached screenshots showing the way the text moves around while toggling between sessions:
![tmux-status-1](https://cloud.githubusercontent.com/assets/50407/4064096/0fb3c208-2e0e-11e4-94e5-bfa37814f0ea.png)
![tmux-status-2](https://cloud.githubusercontent.com/assets/50407/4064097/0fb59f9c-2e0e-11e4-9da5-d2596b10fc5a.png)
"
1028,Line break after single or double quotation creates strange prompt,2014-08-27T08:44:24Z,2014-08-27T16:00:09Z,"c:b:shell, s:invalid, t:bug",,,"That's about it in the title. Currently I get empty prompt in bash.
"
1027,"NBSP is unconditionally used, even in ASCII theme",2014-08-26T17:32:18Z,2014-08-27T20:00:09Z,"c:core, t:bug",,,"When using ASCII theme regular spaces must not be replaced with NBSP because there is no NBSP in ASCII.
"
1026,Do not make daemon output zero byte,2014-08-26T17:14:44Z,2014-08-26T17:35:19Z,"c:daemon, t:enhancement",,,"This byte is useless and can be seen in zsh output (strange that it did not 
cause bugs so far, at least none I know about). It may have been needed if any 
client was supposed to hold connection with daemon for a few runs, but all 
current clients work in “request → output response → exit” fashion without 
caring about terminating newline and definitely without preserving connection to 
daemon accross runs.

@kovidgoyal Please reply if you had any specific reason to add this zero byte, I may revert this and modify clients instead.
"
1025,Fix some issues in Vim troubleshooting code,2014-08-26T16:20:55Z,2014-08-26T16:44:10Z,"c:b:vim, t:bug",,,"Ref #1024: issues did not cause that situation, but greatly reduced information available for debugging that issue.
"
1024,"vim.bindeval('function(""mode"")') error",2014-08-26T07:09:58Z,2014-08-26T16:19:08Z,"c:b:vim, s:invalid, t:bug",,,"I just bump into that a newly installed Powerline for VIM cannot work properly. I traced the code, and found that [line 15 in powerline/bindings/vim/**init**.py](https://github.com/Lokaltog/powerline/blob/develop/powerline/bindings/vim/__init__.py#L15) got an error. Anyone the same?
"
1023,Some '?' in bash prompt when powerline-daemon running in background.,2014-08-26T05:46:29Z,2014-08-27T20:00:09Z,"c:b:shell, c:daemon, s:invalid, t:bug",,,"Vim version: 7.4.408
powerline client: C version
bash version: GNU bash, version 4.3.22(1)-release (x86_64-unknown-linux-gnu)
python version: Python 2.7.8

![powerline](https://cloud.githubusercontent.com/assets/8500596/4040426/392ea1aa-2ce4-11e4-8f56-a5a8f27a33d9.png)
"
1022,Make client/powerline.sh work in osx,2014-08-25T23:32:36Z,2014-08-26T15:29:59Z,"c:daemon, e:macos, t:bug",,,"Hi, this makes the shell client work in osx.
It behaves the same way as the C client for the socket, it uses a filesystem socket.
It uses gnu env rather than the default BSD env which doesn't handle -0. It can be installed with `brew install coreutils`
Cheers
"
1021,Disable powerline vim tabline,2014-08-25T22:53:41Z,2014-08-26T03:42:01Z,"c:b:vim, s:invalid, t:bug",,,"I removed the line:

```
""__tabline__"": ""tabline""
```

in `powerline/config.json' but powerline tabline still shows up - refreshing Vim doesn't help either.
"
1020,Easier way to override dividers for vim,2014-08-25T22:49:10Z,2014-08-26T03:40:13Z,"c:b:vim, s:wontfix, t:bug",,,"Previously, I could do this:

```
if !has('gui_running')
  let g:powerline_config_overrides = {""common"":{ ""dividers"": { ""left"": { ""hard"": ' ' }, ""right"": { ""hard"" : ' '}}}}
endif
```

Now I can't anymore. There are no variables that allow me to override `powerline/themes/powerline.json`. I can create a new theme and override `powerline/config.json` to point to it, but it's not as clean.

Can we have another variable to override the file?
"
1019,Keep marks around in powerline-lint,2014-08-24T18:21:02Z,2014-08-24T20:56:00Z,"c:lint, c:tests, t:bug",,,"May make problems from #1017 easier to debug.

Ref #1017
"
1018,Use color names specific to solarized,2014-08-24T18:01:10Z,2014-08-24T18:09:28Z,"c:configuration, t:enhancement",,,"Replaces #444.
"
1017,Python-3.4 tests randomly throw errors when running __import__ in powerline-lint,2014-08-24T17:16:18Z,2014-08-27T04:13:43Z,"c:tests, t:bug","ImportError, AttributeError","ImportError: No module named 'powerline.segments.wm', AttributeError: 'str' object has no attribute 'mark'","Example log:

```
Traceback (most recent call last):
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 882, in import_segment
    func = getattr(__import__(str(module), fromlist=[str(name)]), str(name))
ImportError: No module named 'powerline.segments.wm'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""scripts/powerline-lint"", line 15, in <module>
    sys.exit(check(args.config_path, args.debug))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 1580, in check
    if top_theme_spec.match(config, context=(('', config),), data=data, echoerr=ee)[1]:
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 371, in match
    echoerr
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 401, in match
    echoerr
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 371, in match
    echoerr
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 360, in match
    proceed, hadproblem = self.match_checks(value, context_mark, data, context, echoerr)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 352, in match_checks
    proceed, chadproblem = getattr(self, check[0])(*(args + check[1:]))
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 145, in check_func
    proceed, echo, hadproblem = func(value, data, context, echoerr)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 1278, in <lambda>
    args=args_spec().func(lambda *args, **kwargs: check_args(get_all_possible_functions, *args, **kwargs)),
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 1178, in check_args
    for func in get_functions(data, context, new_echoerr):
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 1220, in get_all_possible_functions
    func = import_segment(name, data, context, echoerr, module=module)
  File ""/home/travis/build/Lokaltog/powerline/powerline/lint/__init__.py"", line 886, in import_segment
    problem_mark=module.mark)
AttributeError: 'str' object has no attribute 'mark'
Failed powerline-lint
```

. This started to happen some time after #1014.
"
1016,Add segment with count of clients attached to tmux,2014-08-24T17:09:10Z,2014-08-24T17:19:04Z,"a:segment, c:b:tmux, t:enhancement",,,"Replaces #662 
Fixes #661
"
1015,Sometimes happening network problems when trying to install bazaar,2014-08-24T16:24:50Z,2014-08-28T20:50:27Z,"c:tests, t:bug",,,"Example: https://travis-ci.org/Lokaltog/powerline/jobs/33425509. This is something like the third time I see this issue.
"
1014,Add support for zsh named directories,2014-08-24T15:56:55Z,2014-08-24T16:08:21Z,"a:segment, c:b:shell, t:enhancement",,,"Fixes #502
"
1013,Catch errors from tree_status,2014-08-24T13:45:23Z,2014-08-24T14:02:50Z,,,,"Fixes #341
"
1012,Add fish vi mode support,2014-08-24T13:12:34Z,2014-08-24T13:22:14Z,,,,"Replaces #879 
Fixes #878
"
1011,Improve Vim bindings,2014-08-24T09:34:50Z,2014-08-24T09:57:08Z,"c:b:vim, t:bug",,,"Support older Vim versions just in case and make troubleshooting actually work.
"
1010,Add internal_ip segment,2014-08-23T21:22:35Z,2014-08-23T21:32:43Z,"a:segment, c:common segments, t:enhancement",,,"Replaces #857
Fixes #826
"
1009,Improve Python 3 compatibility when using daemon and client,2014-08-23T00:34:13Z,2014-08-23T12:30:59Z,"c:daemon, t:bug",,,"Fixes #1008
"
1008,powerline-daemon: NameError: global name 'file' is not defined,2014-08-22T22:23:08Z,2014-08-23T12:30:59Z,"c:daemon, t:bug",NameError,NameError: global name 'file' is not defined,"Hi! When I'm trying to run powerline-daemon it terminates with error:

```
Traceback (most recent call last):                                                                                                                                                    
  File ""/usr/lib/python-exec/python3.3/powerline-daemon"", line 412, in <module>
    main()
  File ""/usr/lib/python-exec/python3.3/powerline-daemon"", line 406, in main
    daemonize()
  File ""/usr/lib/python-exec/python3.3/powerline-daemon"", line 277, in daemonize
    si = file(stdin, 'r')
NameError: global name 'file' is not defined
```

The same happens if switching to python-3.4. I found [this](https://github.com/Lokaltog/powerline/issues/627) issue thread where the same error is mentioned, and the solution was commited by @kovidgoyal to [his own repository](https://github.com/kovidgoyal/powerline-daemon/commit/3deb6988c8992d92ef43d9f03c7a725ac9836c20).

If I replace daemon with kovidgoyal's version, then I should also use powerline-client from that repo, right? If so, I'm a bit confused and need a little help: I don't understand what 'calls to powerline' in my configs should I replace with `powerline-client`. It doesn't seem to be a proper replacement for strings like `source /usr/share/powerline/tmux/powerline.conf`, `source /usr/share/zsh/site-contrib/powerline.zsh`, or `require(""powerline"") \n right_layout:add(powerline_widget)` in case of config for awesome. So, how exactly is powerline-client supposed to be used?
"
1007,Add tab_modified indicator,2014-08-22T05:08:04Z,2014-08-22T18:04:29Z,"a:segment, c:b:vim, t:enhancement",,,"Replaces #996.
"
1006,Fix Vim extension reloading when using .add_local_theme(),2014-08-21T20:45:01Z,2014-08-22T04:17:27Z,"c:b:vim, t:bug",,,
1005,Fix incorrect use of partial,2014-08-21T20:29:58Z,2014-08-25T15:41:56Z,"c:common segments, t:bug",,,"Fixes #1002
"
1004,Fix incorrect include/exclude_modes handling,2014-08-21T19:31:45Z,2014-08-21T19:52:37Z,"c:core, t:bug",,,"Fixes #1003
"
1003,include_modes for visual_range does not work,2014-08-21T05:58:43Z,2014-08-21T19:52:37Z,"c:b:vim, t:bug",,,"I'm using the default list:

```
            {
                ""name"": ""visual_range"",
                ""include_modes"": [""v"", ""V"", ""^V"", ""s"", ""S"", ""^S""],
                ""priority"": 10
            },
```

It does not show up no matter what. I tried adding all modes, and using `exclude_modes` instead but it still doesn't work.
"
1002,"TypeError: float() argument must be a string or a number, not 'functools.partial'",2014-08-21T02:17:24Z,2014-08-25T15:41:56Z,"c:common segments, t:bug",TypeError,"TypeError: float() argument must be a string or a number, not 'functools.partial'","```
❯❯❯ powerline tmux right
2014-08-20 22:15:25,042:ERROR:tmux:battery:Exception while computing segment: float() argument must be a string or a number, not 'functools.partial'
Traceback (most recent call last):
  File ""/usr/lib/python3.4/site-packages/powerline/segment.py"", line 112, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/usr/lib/python3.4/site-packages/powerline/segment.py"", line 243, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, **args)
  File ""/usr/lib/python3.4/site-packages/powerline/segments/common.py"", line 1279, in battery
    capacity = _get_capacity(pl)
  File ""/usr/lib/python3.4/site-packages/powerline/segments/common.py"", line 1250, in _get_capacity
    return _get_capacity(pl)
  File ""/usr/lib/python3.4/site-packages/powerline/segments/common.py"", line 1146, in <lambda>
    'Percentage'
TypeError: float() argument must be a string or a number, not 'functools.partial'
```

Any idea on how to get more about of this error?
"
1001,Do not use some features in old Vims as they cause a crash,2014-08-20T16:33:05Z,2014-08-20T17:38:58Z,"c:b:vim, t:bug",,,"Fixes #997
Closes #999
"
1000,Add powerline reloading support to IPython and zsh with libzpython,2014-08-19T18:13:05Z,2014-08-19T19:56:55Z,"c:b:ipython, c:b:shell, t:enhancement",,,
999,Fix a Vim SEGV crash,2014-08-19T03:59:11Z,2014-08-20T17:38:58Z,"c:b:vim, t:bug",,,
998,Fix a Vim SEGV crash,2014-08-19T03:56:59Z,2014-08-19T03:58:16Z,"c:b:vim, s:invalid, t:bug",,,
997,Vim crash with SEGV at launch,2014-08-18T22:22:56Z,2014-08-20T17:38:58Z,"c:b:vim, s:invalid, t:bug",,,"Vim 7.3.918 on Ubuntu 14.04 Trusty.
I did a git bisect and found that it's caused by this commit: 93c3b28.

I tinkered around with the change and fixed the crash by doing this:

``` diff
diff --git a/powerline/bindings/vim/__init__.py b/powerline/bindings/vim/__init__.py
index f3f9783..af16e5e 100644
--- a/powerline/bindings/vim/__init__.py
+++ b/powerline/bindings/vim/__init__.py
@@ -41,7 +41,7 @@ else:
        vim_get_func = VimFunc


-if hasattr(vim, 'bindeval'):
+if hasattr(vim, 'bindeval') and vim.vvars['version'] > 703:
        _vim_to_python_types = {
                getattr(vim, 'Dictionary', None) or type(vim.bindeval('{}')):
                        lambda value: dict(((key, _vim_to_python(value[key])) for key in value.keys())),
```
"
996,Add tab_modified_indicator to the vim segments,2014-08-18T15:36:35Z,2014-08-22T18:04:31Z,"a:segment, c:b:vim, t:enhancement",,,"This indicates in the tabline that any of the open buffers in a tab
page has unsaved modifications (like the default tabline do).
"
995,After powerline update: ImportError: No module named plugin.tagbar,2014-08-18T06:34:05Z,2014-08-18T10:51:53Z,"c:b:vim, s:invalid, t:bug",ImportError,ImportError: No module named plugin.ctrlp,"I just updated powerline and now everytime I start `vim` I get this error.

```
Error detected while processing /usr/local/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim:
line  123:
2014-08-18 09:32:18,607:ERROR:vim:matcher_generator:Failed to import attr ctrlp from module powerline.matchers.plugin.ctrlp: No module named plugin.ctrlp
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 296, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.ctrlp
2014-08-18 09:32:18,609:ERROR:vim:matcher_generator:Failed to import attr gundo_preview from module powerline.matchers.plugin.gundo: No module named plugin.gundo
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 296, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.gundo
2014-08-18 09:32:18,614:ERROR:vim:matcher_generator:Failed to import attr nerdtree from module powerline.matchers.plugin.nerdtree: No module named plugin.nerdtree
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 296, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.nerdtree
2014-08-18 09:32:18,622:ERROR:vim:matcher_generator:Failed to import attr gundo from module powerline.matchers.plugin.gundo: No module named plugin.gundo
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 296, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.gundo
2014-08-18 09:32:18,645:ERROR:vim:segment_generator:Failed to import attr syntastic from module powerline.segments.plugin.syntastic: No module named plugin.syntastic
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 296, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.syntastic
2014-08-18 09:32:18,645:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 50, u'module': u'powerline.segments.plugin.syntastic', u'exclude_modes': [u'nc'], u'name': u'syntastic'}: Failed to obtain segment function
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/segment.py"", line 180, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/segment.py"", line 61, in get_function
    raise ImportError('Failed to obtain segment function')
ImportError: Failed to obtain segment function
2014-08-18 09:32:18,665:ERROR:vim:segment_generator:Failed to import attr current_tag from module powerline.segments.plugin.tagbar: No module named plugin.tagbar
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 296, in get_module_attr
    return getattr(__import__(module, fromlist=(attr,)), attr)
ImportError: No module named plugin.tagbar
2014-08-18 09:32:18,665:ERROR:vim:segment_generator:Failed to generate segment from {u'draw_soft_divider': False, u'priority': 50, u'module': u'powerline.segments.plugin.tagbar', u'exclude_modes': [u'nc'], u'name': u'current_tag'}: Failed to obtain segment function
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/segment.py"", line 180, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/segment.py"", line 61, in get_function
    raise ImportError('Failed to obtain segment function')
ImportError: Failed to obtain segment function
```
"
994,Refactor watchers code,2014-08-16T10:47:53Z,2014-08-16T11:16:51Z,"c:core, t:enhancement",,,"Merging this should ease up rebasing #906 until I figure out how to fix it.
"
993,Some lister improvements,2014-08-16T08:59:31Z,2014-08-16T10:44:44Z,"c:b:vim, t:enhancement",,,"- [x] Move listers in a separate module
- [x] Add `show_unlisted` argument to buffers lister
- [x] Add listers documentation
- [x] Add lister creation documentation (#989)
- [x] Add buffer number to buffer lister
- [x] Add modified indicator to buffer lister
"
992,another workaround for _powerline_tmux_setenv() issue with bash-4.2.45,2014-08-16T03:25:07Z,2014-08-16T07:56:31Z,"c:b:shell, s:invalid, t:bug",,,"issue #372 had resurfaced.
"
991,4a8b81 broke prompt,2014-08-15T22:59:14Z,2014-08-16T07:55:21Z,"c:b:shell, s:invalid, t:bug",,,"Shell prompt shows nothing. Used bisect to determine the point which problem started.

https://github.com/Lokaltog/powerline/commit/4a8b81e68b85d378fc3c38631d3ba3b68466a410
"
990,Missing Powerline UTF-8 Symbols,2014-08-15T20:39:04Z,2014-08-16T11:27:35Z,"c:font, s:invalid, t:bug",,,"I installed powerline with the vundle plugin

https://github.com/gmarik/Vundle.vim

I read the font dispatcher readme, followed every step for linux but I still have this issue:

![powerline](https://cloud.githubusercontent.com/assets/1114549/3938604/bf4271bc-24bb-11e4-82d3-389f1abbba90.jpg)

I also put PowerlineSymbols.otf into ~/.fonts/, still no effect.

I am using Xubuntu 14.04 64 bit version, can anyone help me out?

Thanks in advance!
"
989,Document listers creation,2014-08-15T17:42:01Z,2014-08-16T10:44:46Z,"c:documentation, t:enhancement",,,"There is now an undocumented segment type: `segment_list` segment.
"
988,Add weather icons to top-level themes,2014-08-15T17:14:29Z,2014-08-15T17:37:27Z,"c:configuration, t:enhancement",,,
987,Fix powerline style,2014-08-15T16:57:02Z,2014-08-15T17:13:17Z,t:enhancement,,,"Specifically I searched for all lines that are more then one tab off compared to 
the previous line with

```
BufGrep /\(^\t\+\)\S.*\n\1\t\t\+/
```

and replaced them with something more appropriate. Most of time this resulted in 
a few more newlines, but there are cases when I used mixed tabs/spaces 
indentation+alignment.
"
986,Developer documentation and module layout refactoring,2014-08-15T16:06:13Z,2014-08-15T16:21:13Z,"c:core, c:documentation, t:enhancement",,,
985,"Check whether $COLUMNS is empty or zero, not only empty",2014-08-15T14:05:36Z,2014-08-15T14:28:51Z,"c:b:shell, t:bug",,,"Fixes #983
"
984,Call powerline.new_window early under certain conditions,2014-08-15T14:05:33Z,2014-08-15T14:20:54Z,"c:b:vim, t:bug",,,"Fixes #250 for the GUI.
"
983,fish: No prompt until manually calling `powerline-setup`,2014-08-15T09:36:38Z,2014-08-15T14:28:51Z,"c:b:shell, t:bug",,,"I added

```
# Powerline
set fish_function_path $fish_function_path ""/usr/local/lib/python2.7/site-packages/powerline/bindings/fish""
powerline-setup
```

as my last lines in `.config/fish/config.fish` but whenever I create a new terminal tab or window I get greeted with an empty prompt. I have to call powerline-setup myself to start.

I'm not sure if this is a fish/powerline/configuration issue but I hoped that you have some ideas on how to solve this problem.
- Running  fish 2.1.0
- Installed lokaltog/powerline via `pip`. 
"
982,docs: Fix building the docs without RTD theme.,2014-08-13T15:41:17Z,2014-08-13T15:46:42Z,"c:documentation, t:enhancement",,,"Fix building the docs without RTD theme. Take a look at the file, there is a if clause which sets the theme to rtd if found ...
"
981,Error launching tmux inside bash,2014-08-13T13:32:38Z,2014-08-13T14:48:44Z,"c:b:shell, s:invalid, t:bug",,,"When I launch tmux inside my bash session, the following error message is output:

```
usage: powerline-render [-h] [-r MODULE] [-w WIDTH] [--last_exit_code INT]
                        [--last_pipe_status LIST] [--jobnum INT]
                        [-c KEY.KEY=VALUE] [-t THEME.KEY.KEY=VALUE]
                        [-R KEY=VAL] [-p PATH]
                        ext [{left,right,above,aboveleft}]
powerline-render: error: argument --last_exit_code: invalid int value: ''
```

I'm unsure as to the cause of this issue. It started when I updated powerline this morning via `pip` to 7453e586 from this repository.

```
$ echo $BASH_VERSION
3.2.51(1)-release
```

```
$ tmux -V
tmux 1.9a
```
"
980,Vim tabline,2014-08-13T07:35:32Z,2014-08-13T16:24:04Z,"c:b:vim, s:invalid, t:bug",,,"The vim tabline does not display for me with the default config files. The statusline works fine. When I call `:%!pyeval('powerline.tabline()')` I get the error `zsh:1: unknown sort specifier`, and I'm not sure how to debug further. This is the one feature I really miss from vim-airline, so any ideas would be much appreciated.
"
979,Fix VimPowerline.add_local_theme,2014-08-12T16:47:52Z,2014-08-13T03:56:43Z,"c:b:vim, t:bug",,,"After #783 it started to fail as it made Theme require defining dividers in 
theme and add_local_theme did not merge in other themes (`__main__` and top).
"
978,Add support for PS2 and PS3 prompts outside of zsh,2014-08-12T04:04:38Z,2014-08-12T04:26:13Z,"c:b:shell, t:enhancement",,,
977,Exception while computing segment: player_spotify_apple_script() got an unexpected keyword argument 'state_symbol',2014-08-11T21:02:50Z,2014-08-12T04:10:38Z,"c:common segments, t:bug",TypeError,TypeError: player_spotify_apple_script() got an unexpected keyword argument 'state_symbol',"With this in my tmux/default.json:

``` json
{
    ""name"": ""now_playing"",
    ""args"": {
        ""player"": ""spotify_apple_script""
    }
}
```

if I run tmux, I don't get any output, even though Spotify is playing. If I run `powerline tmux right` I get the following error:

```
2014-08-11 14:00:08,084:ERROR:tmux:now_playing:Exception while computing segment: player_spotify_apple_script() got an unexpected keyword argument 'state_symbol'
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/site-packages/powerline/segment.py"", line 112, in process_segment
    contents = segment['contents_func'](pl, segment_info)
  File ""/usr/local/lib/python2.7/site-packages/powerline/segment.py"", line 243, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, **args)
  File ""/usr/local/lib/python2.7/site-packages/powerline/segments/common.py"", line 920, in __call__
    func_stats = player_func(state_symbol=state_symbols, **kwargs)
TypeError: player_spotify_apple_script() got an unexpected keyword argument 'state_symbol'
#[fg=colour233,bg=default,nobold,noitalics,nounderscore] #[fg=colour2,bg=colour233,nobold,noitalics,nounderscore] 2.3 #[fg=colour2,bg=colour233,nobold,noitalics,nounderscore]2.2 #[fg=colour2,bg=colour233,nobold,noitalics,nounderscore]2.2#[fg=colour252,bg=colour233,nobold,noitalics,nounderscore] #[fg=colour16,bg=colour252,bold,noitalics,nounderscore]  robert-trenchenys-macbook-pro.local
```

I tried removing the state_symbols from powerline.json, it isn't fixed.
"
976,970,2014-08-10T21:35:12Z,2014-08-10T21:35:23Z,s:invalid,,,
975,Add cursor_space and cursor_columns options,2014-08-10T16:52:47Z,2014-08-10T17:10:17Z,"c:b:ipython, c:b:shell, t:enhancement",,,"Ref #815
"
974,Shell tests improvements,2014-08-10T13:11:19Z,2014-08-10T13:20:27Z,"c:tests, t:enhancement",,,
973,Add components configuration option,2014-08-10T12:04:22Z,2014-08-10T12:44:09Z,"c:b:shell, c:b:vim, c:core, c:tests, t:enhancement",,,"As a part of this PR tests and shell bindings were greatly improved and fixed.

Ref #969
"
972,Don't show buffer if it's not listed,2014-08-09T11:11:47Z,2014-08-16T10:44:46Z,"c:b:vim, t:enhancement",,,"This prevents deleted or hidden buffers to show up
in buffers segment for single tab or current tab.

When working with lot of buffers and closing them on regular basis,
or when buffers where created by plugins (NERDTree for example)
I ended up with lots of entries in buffer line, although :buffers command
didn't show them.
"
971,"zsh plugin won't work with ""./setup.py develop""",2014-08-08T20:36:02Z,2014-08-09T11:32:44Z,"c:installation, s:invalid, t:bug",,,"I cannot use the plugin because it can't change the command ""powerline"" I think this is a setuptools related issue, but is really annnoying.
"
970,after the last pull I get this error,2014-08-08T20:34:28Z,2014-08-21T07:11:24Z,"c:b:shell, t:bug",KeyError,KeyError: 'aboveleft',"2014-08-08 16:17:51,460:ERROR:shell:powerline:Failed to render: 'aboveleft'  
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/**init**.py"", line 596, in render
    return self.renderer.render(_args, *_kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/renderers/zsh_prompt.py"", line 38, in render
    _args, *_kwargs
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/renderer.py"", line 227, in render
    for segment in segments
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/theme.py"", line 98, in get_segments
    for segment in self.segments[line][side]:
KeyError: 'aboveleft'
'aboveleft'  

I have removed the local configs and it's happening anyway
to fix it O just relplaced ""aboveleft"" with ""above"" before line 98 of theme.py
"
969,Make setting tabline optional,2014-08-08T14:22:26Z,2014-08-10T12:44:10Z,"c:b:vim, s:wontfix, t:enhancement",,,"`powerline` automatically sets the tabline. I think it would be better to have the user make the setting call.
"
968,Fix NowPlaying segment when comma in artist or title,2014-08-07T20:09:13Z,2014-08-09T11:26:30Z,"c:common segments, t:bug",ValueError,ValueError: invalid literal for int() with base 10: 'Patience',"With this theme configuration:

``` json
{
    ""name"": ""now_playing"",
    ""align"": ""r"",
    ""args"": {
        ""player"": ""spotify_apple_script"",
        ""format"": ""{artist} - {title}""
    }
}
```

An error will occur when there are commas in the artist or title (e.g. below for title ""Time, Patience, Everything""):

``` sh
2014-08-07 11:55:45,798:ERROR:shell:now_playing:Exception while computing segment: invalid literal for int() with base 10: 'Patience'
Traceback (most recent call last):
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/theme.py"", line 96, in get_segments
    contents = segment['contents_func'](self.pl, segment_info)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/segment.py"", line 102, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, **args)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/segments/common.py"", line 918, in __call__
    func_stats = player_func(**kwargs)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/segments/common.py"", line 1081, in player_spotify_apple_script
    'total': self._convert_seconds(int(spotify_status[4]))
ValueError: invalid literal for int() with base 10: 'Patience'
```

This commit fixes the issue by using a (very likely) unique delimiter to separate status fields.

It also moves the status length trimming to an optional call parameter. So to trim the now playing status to 40 characters max you would use the config:

``` json
{
    ""name"": ""now_playing"",
    ""align"": ""r"",
    ""args"": {
        ""player"": ""spotify_apple_script"",
        ""format"": ""{artist} - {title}"",
        ""trim"": 40
    }
}
```
"
967,Handle errors from write(),2014-08-06T18:15:39Z,2014-08-06T18:52:38Z,"c:daemon, t:bug",,,"Fixes #964
Replaces #965
"
966,Feature request: display last commit summary,2014-08-06T17:26:20Z,,"a:segment, c:VCS support, t:enhancement",,,"I think it would be great to see the last commit I made when working - would this be an easy thing to implement? I'm happy to do this myself with a couple of pointers.

Just from a quick glance, it seems that this would require making an abstraction in powerline.vcs and adding the actual functionality in the various vcs modules (git.py, bzr.py, etc.).
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/3592810-feature-request-display-last-commit-summary?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
965,Store write result in dummy variable. (should close #964),2014-08-06T17:20:02Z,2014-08-06T17:46:15Z,"c:daemon, t:bug",,,"GCC (version 4.8.1, Ubuntu) complains about an unused write()
result, even after a cast to void. There seems to be a long
story behind this (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25509).

As never checking any write() results seems a bit more drastic than
simply making a dummy variable, this commit stores the write()
result in a variable _unusued.
"
964,Installation on Linux fails due to ignored write() result,2014-08-06T17:18:32Z,2014-08-06T18:52:38Z,"c:daemon, c:installation, t:bug",,,"I'm cloning the git repository to install powerline (per the instructions [here](https://powerline.readthedocs.org/en/latest/installation/linux.html#installation-on-linux)). I get the following error output when I run `pip install` (EDIT: I meant to say _warning_ here, not _error_):

```
Downloading/unpacking git+git://github.com/Lokaltog/powerline
  Cloning git://github.com/Lokaltog/powerline to /tmp/pip-aPTBJK-build
  Running setup.py egg_info for package from git+git://github.com/Lokaltog/powerline
    client/powerline.c: In function ‘main’:
    client/powerline.c:123:4: warning: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Wunused-result]
        (void) write(STDOUT_FILENO, buf, (size_t) i);
        ^

Cleaning up...
```

It seems this may be related to gcc stripping the void cast as it processes `powerline.c` - [see this bug report](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25509).

It looks like this would simple enough to fix; I added an unused variable and this seems to allow installation to work [seamlessly](https://github.com/ejstronge/powerline/tree/no_wur).

Is this a problem on my end? Has anyone else had issues with installations from the git repository?
"
963,Add ipython shell tests,2014-08-06T13:18:36Z,2014-08-06T14:31:43Z,"c:tests, t:enhancement",,,
962,Weather segment persistence time,2014-08-06T10:46:42Z,2014-08-06T11:10:53Z,"c:core, s:invalid, t:enhancement",,,"Now that the daemon functionality is merged and running, could some way of ""caching/persisting"" fetched data of segments depending on external services be devised?

I would really love to see it applied, as for example, refreshing ""weather"" segment every two seconds or so is unneeded and excessive siphoning of resources.
"
961,Do not output \x01/\x02 symbols for non-prompts in ipython,2014-08-06T09:39:45Z,2014-08-06T11:09:23Z,"c:b:ipython, t:bug",,,"Should fix #664
"
960,powerline-daemon usage is outputted repeatedly when using tmux,2014-08-05T23:57:42Z,2014-08-06T00:27:21Z,"c:b:shell, s:invalid, t:bug",,,"After configuring `tmux` for Powerline and starting `tmux` from a `bash` shell (with powerline successfully enabled), the tmux status line is enabled correctly.  However, for every command that I execute in the tmux shell, the following is outputted:

```
> echo 'test'                                                                                                               
test
usage: powerline-daemon [-h] [-r MODULE] [-w WIDTH] [--last_exit_code INT]
                        [--last_pipe_status LIST] [--jobnum INT]
                        [-c KEY.KEY=VALUE] [-t THEME.KEY.KEY=VALUE]
                        [-R KEY=VAL] [-p PATH]
                        ext [{left,right,above,aboveleft}]
```

The unusual thing is that this argparse help doesn't appear to match that of `powerline-daemon` itself.  If I run the following command, still within tmux, I get the following output:

```
> powerline-daemon --help
usage: powerline-daemon [-h] [--quiet] [--kill | --foreground | --replace]

Daemon to improve the performance of powerline

optional arguments:
  -h, --help        show this help message and exit
  --quiet, -q       Without other options: do not complain about already
                    running powerline-daemon instance. Will still exit with 1.
                    With `--kill' and `--replace': do not show any messages.
                    With `--foreground': ignored. Does not silence exceptions
                    in any case.
  --kill, -k        Kill an already running instance
  --foreground, -f  Run in the foreground (dont daemonize)
  --replace, -r     Replace an already running instance
usage: powerline-daemon [-h] [-r MODULE] [-w WIDTH] [--last_exit_code INT]
                        [--last_pipe_status LIST] [--jobnum INT]
                        [-c KEY.KEY=VALUE] [-t THEME.KEY.KEY=VALUE]
                        [-R KEY=VAL] [-p PATH]
                        ext [{left,right,above,aboveleft}]
```

It seems as though the `powerline-daemon` might be being overridden somewhere as these argument outputs don't match.  Since the output continues to be displayed every time the prompt is shown, I presume this must be in the prompt display code somewhere.  The same issue doesn't occur in a standard bash shell outside of tmux.

My .tmux.conf looks like:

```
source ""~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf""
```

and nothing else.  My installation is via Vim's Bundle tool, and scripts installed via `pip install -e [path]` so there's only the one install of Powerline.  I'm on Ubuntu 14.04 with Python 2.7.6.
"
959,Fix weather segment display,2014-08-05T21:09:57Z,2014-08-05T22:16:49Z,"c:common segments, t:bug",,,"Most likely a change on GitHub/Yahoo servers made it crash, when
non-robot ready result page (was redirect there previously?) started to appear inside YQL processor.
Using ""raw.githubusercontent.com"" URL helps and weather icon is again visible.

Closes: Lokaltog/powerline#949

Signed-off-by: Aleksandrs Ļedovskis aleksandrs@ledovskis.lv
"
958,Implement theme hierarchy,2014-08-05T20:06:12Z,2014-08-06T09:04:50Z,"c:core, t:enhancement",,,"Ref #922
Ref #783

Not done yet: top-level themes without powerline or unicode characters.
"
957,Improve visual_range segment,2014-08-05T18:51:19Z,2014-08-05T19:16:05Z,"c:b:vim, t:enhancement",,,"This segment was completely not configurable. Specifically it unconditionally contained a unicode character.
"
956,Odd error after recent upgrade,2014-08-05T02:34:54Z,2014-08-05T08:03:07Z,"c:b:shell, s:invalid, t:bug",OSError,OSError: [Errno 2] No such file or directory,"Did a `git pull` this morning and now when I ssh login my .bashrc is throwing the following:

```
Traceback (most recent call last):
  File ""/usr/local/jcrotty/repos/git/powerline/client/powerline.py"", line 39, in <module>
    os.execvp('powerline-render', args)
  File ""/usr/lib64/python2.6/os.py"", line 344, in execvp
    _execvpe(file, args)
  File ""/usr/lib64/python2.6/os.py"", line 380, in _execvpe
    func(fullname, *argrest)
OSError: [Errno 2] No such file or directory
```

CentOS 6.5 with a very recent `yum update` running cleanly.
"
955,Do not use argparge for parsing environment,2014-08-03T23:08:42Z,2014-08-03T23:55:52Z,,,,"This PR changes protocol used to connect between powerline clients and powerline daemon to make powerline daemon work faster. I have only relative numbers from profiler though (2/3 of rendering process wasted for parsing socket input were replaced with 1/6), but this part has to be changed as early as possible because it touches used protocol.

Reason why I was looking at profiling at all: shell integration tests make tmux client they run in blink which should be caused by either constant `refresh -S`, powerline-daemon busy by processing shell tests or both. This change did not fix anything regarding the issue though, but I at least removed the most obvious performance problem (I knew the culprint before running the profiler, yet did not expect it to take 2/3 of time).
"
954,Add file_scheme segment,2014-08-03T19:57:42Z,2014-08-03T20:12:22Z,"a:segment, c:b:vim, t:enhancement",,,"Fixes #207
"
953,Make powerline --help more useful,2014-08-03T18:22:32Z,2014-08-03T18:47:41Z,"c:b:shell, c:documentation, t:enhancement",,,
952,Is it possible to use different themes for bash and zsh?,2014-08-03T16:05:23Z,2014-08-03T17:44:56Z,"c:b:shell, s:invalid, t:enhancement",,,"Current the two shells on the same machines share the same theme of powerline. Is it possible to use different themes for bash and zsh?
"
951,clear PROMPT_COMMAND before setup,2014-08-03T13:21:57Z,2014-08-03T13:29:17Z,"c:b:shell, t:enhancement",,,"This fixes the issue #946
"
950,Add buffer and window number segments,2014-08-03T09:25:56Z,2014-08-03T09:38:45Z,"a:segment, c:b:vim, t:enhancement",,,"Neither are shown by default.
"
949,Weather segment broken,2014-08-03T09:21:07Z,2014-08-05T22:17:22Z,"c:common segments, t:bug",,,"The weather segment appears to be broken, probably by a Yahoo weather api change. I have replaced it for myself with openweathermap.org, feel free to use the code if you like (note that it does not support weather gradients). 

https://github.com/kovidgoyal/powerline/commit/0f8d82c833d80cfc5119ef629b909b19d8bbd522
"
948,Add tabline support,2014-08-03T05:52:43Z,2014-08-03T09:24:26Z,"c:b:vim, c:core, t:enhancement",,,"It is strange nobody asked about tabline support so far, but asked for bufferline support.
"
947,Added line_count segment for vim.,2014-08-03T03:43:31Z,2014-08-03T06:40:01Z,"a:segment, c:b:vim, t:enhancement",,,"Added a line_count segment for vim. This allows showing line position in a current/max format, as opposed to just a percentage:

![line_count](https://cloud.githubusercontent.com/assets/384053/3789741/081c5608-1abe-11e4-975d-4e5460bcd570.png)

Resolves issue #556
"
946,powerline-render called twice,2014-08-02T23:40:30Z,2014-08-03T13:41:25Z,"c:b:shell, s:invalid, t:bug",,,"I'm using the latest repo.

In bash I was getting two calls to `_powerline_prompt`, in the first with the correct arguments to `powerline [...] --last_exit_code=0 --jobnum=2` and the second with `powerline [...] --last_exit_code= --jobnum=` which causes `powerline-render` to fail.

I fixed it for myself by adding a check in `_powerline_prompt` to see if $2 or $3 are empty, and know too little about the surrounding code to be able to provide a universal patch.
"
945,Update documentation,2014-08-02T23:30:20Z,2014-08-02T23:40:26Z,"c:documentation, t:enhancement",,,"Ref #769.
"
944,Add powerline-daemon,2014-08-02T17:09:33Z,2014-08-02T18:37:03Z,"c:b:shell, c:daemon, t:enhancement",,,
943,Add trailing whitespace segment,2014-08-02T14:22:01Z,2014-08-02T14:41:36Z,"a:segment, c:b:vim, t:enhancement",,,"Note: by default this segment is disabled. Until #923 it may only be enabled by 
copying the whole file and changing ""enabled"" to ""true"". After #923 it may be 
enabled by having `~/.config/powerline/themes/vim/default.json` with the 
following contents:

```
{
    ""segment_data"": {
        ""trailing_whitespace"": {
            ""enabled"": true
        }
    }
}
```

Fixes #388
"
942,tmux window list colours are off,2014-07-31T01:44:19Z,2014-08-04T20:17:11Z,"c:b:tmux, t:bug",,,"Window list colours are off on the status bar and the session name is not changing colours any more when I hit ctrl b. It was working great a couple months ago. I am using Ubuntu 14.04 Guake/Gnome Term.
![screenshot from 2014-07-30 20 33 11](https://cloud.githubusercontent.com/assets/6000297/3758967/2555d5e4-1854-11e4-82b2-a0c69b591769.png)
"
941,Error,2014-07-30T19:13:01Z,2014-07-30T20:39:24Z,"c:b:vim, s:invalid, t:bug",TypeError,TypeError: setup() got an unexpected keyword argument 'can_replace_pyeval',"After updating to the latest version I get the error:

```
Error detected while processing /home/frans/.vim/bundle/powerline/powerline/bindings/vim/plugin/powerline.vim: 
line  123: 
Traceback (most recent call last): 
File ""<string>"", line 1, in <module> 
TypeError: setup() got an unexpected keyword argument 'can_replace_pyeval'
```

This persists even if I declare the new variables in .vimrc:

```
let g:powerline_pycmd = 'py'
let g:powerline_pyeval = 'pyeval'
```

Perhaps I have misunderstood the new settings required after this change. I run on Ubuntu 12.04 so python 2.7 is still the default. 
"
940,Move powerline to the top of the window,2014-07-30T18:41:51Z,2014-07-30T18:57:09Z,"s:invalid, t:enhancement",,,"Is there any way to position powerline at the top of the window? I've read lots of the documentation and can figure out how to customize the contents of the powerline, but not the position. Thanks.
"
939,Command segment,2014-07-29T21:52:51Z,2014-07-30T16:31:23Z,s:invalid,,,"I would like a feature where I could display the output of a command, for example `git describe`, on the powerline. How could I do this?
"
938,Do not let powerline trigger loading wrong python,2014-07-29T10:50:14Z,2014-07-29T12:14:38Z,"c:b:vim, t:bug",,,"Used python version is controlled by `g:powerline_pycmd`. User configuration now 
has top priority: if `g:powerline_pyeval` is set powerline will not try to use 
`pyeval()` emulation in old Vim versions.

Closes #937 as WONTFIX
"
937,[BUG] Import powerline in powerline.vim,2014-07-29T07:03:42Z,2014-07-29T12:14:38Z,"c:b:vim, s:wontfix, t:bug",,,"OS: Arch Linux.
Vim version: 7.4.383 with `+python/dyn` and `+python3/dyn`
Powerline version: fresh git for python3
Overview problem:

```
An error occurred while importing powerline package.
This could be caused by invalid sys.path setting,
or by an incompatible Python version (powerline requires
Python 2.6, 2.7 or 3.2 and later to work). Please consult
the troubleshooting section in the documentation for
possible solutions.
```

This message i get when start vim, everytime.
I guess, problem in this [line](https://github.com/Lokaltog/powerline/blob/develop/powerline/bindings/vim/plugin/powerline.vim#L17), where select python2 if it availble, but aren't check availble python3 and availble powerline in python3, not in python2.
_Sorry my bad english :smile:_
"
936,Use pexpect-based tests for testing shells,2014-07-28T13:13:21Z,2014-08-23T20:09:50Z,"c:tests, t:bug",,,"May fix #931.
"
935,There's no fontpatcher.py,2014-07-27T22:20:03Z,2014-07-27T23:26:04Z,"c:documentation, t:bug",,,"The docs say that there's a font-patching script at `powerline/font/fontpatcher.py`, but there isn't. There doesn't seem to be anything of the sort anywhere in the project, as per `find` and `ack`.
"
934,Ignore IOErrors in ConfigLoader.update,2014-07-25T21:46:22Z,2014-07-25T21:58:40Z,"c:core, t:bug",,,"Fixes #932.
"
933,"""Some kind of error""",2014-07-25T20:09:24Z,2014-07-25T21:10:39Z,"c:core, t:bug",TypeError,TypeError: branch() keywords must be strings,"This is with the current version

```
2014-07-25 22:01:34,790:ERROR:vim:branch:Exception while computing segment:
branch() keywords must be strings
Traceback (most recent call last):
  File ""/Library/Python/2.6/site-packages/Powerline-beta-py2.6.egg/powerline/theme.py"", line 96, in get_segments
contents = segment['contents_func'](self.pl, segment_info)
  File ""/Library/Python/2.6/site-packages/Powerline-beta-py2.6.egg/powerline/segment.py"", line 100, in <lambda>
contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
TypeError: branch() keywords must be strings
2014-07-25 22:04:43,870:ERROR:vim:file_vcs_status:Exception while computing segment: file_vcs_status() keywords must be strings
Traceback (most recent call last):
    contents = segment['contents_func'](self.pl, segment_info)
  File ""/Library/Python/2.6/site-packages/Powerline-beta-py2.6.egg/powerline/segment.py"", line 100, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
TypeError: file_vcs_status() keywords must be strings
```

it then continues working normally
"
932,New colorscheme hierarchy raising unneeded exceptions,2014-07-24T20:31:52Z,2014-07-25T21:58:40Z,"c:core, t:bug",,,"With #770 (implemented in #921), `vi` is displaying some unnecessary errors when a colorscheme file is only in `~/.config/powerline/colorschemes/vim/` and not in `~/.config/powerline/colorschemes/`. It finds the colorscheme correctly, but complains along the way about it not being found.

My Versions:
- vim: 7.4 (Modified by Gentoo-7.4.273)
- powerline: 5f7fbda29ada28fd38cc910998509deae81bc380 (installed with [powerline-9999-r9.ebuild](https://github.com/leycec/raiagent/blob/master/app-misc/powerline/powerline-9999-r9.ebuild) on 24 July, 2014)
- python 2.7.6 (I also have 3.2.5 and 3.3.3, but vim is currently using 2.7.6)

With the config changes in #921 I made sure to get a clean config (as [documented here](http://powerline.readthedocs.org/en/latest/configuration.html#quick-setup-guide)):

```
mv ~/.config/powerline{,.bak}
mkdir ~/.config/powerline
cp -R /usr/lib/python2.7/site-packages/powerline/config_files/* ~/.config/powerline
```

Then I change my `~/.config/powerline/config.json` (snipped unrelated parts):

``` json
{
    ""common"": {...}
    ""ext"": {
        ...
        ""vim"": {
            ""colorscheme"": ""solarizedlight"",
            ""theme"": ""default"",
            ""local_themes"": {...}
        }
        ...
    }
}
```

At which point I get this traceback which is entirely unnecessary because the colorscheme _is_ correctly loaded. It's just not properly swallowing the errors when it can't find `colorscheme/<name>.json` when it's only available at `colorscheme/<ext>/<name>.json`:
![vi konsole_006](https://cloud.githubusercontent.com/assets/1558590/3694312/cca59c28-1370-11e4-8a9a-5c09d69fca3c.png)

To demonstrate that it is loading the powerline colorscheme correctly (despite the error) here's a screenshot of the solarized (not solarizedlight) theme. Note that this has a dark powerline whereas the previous screenshot had the light powerline:
![vi konsole_007](https://cloud.githubusercontent.com/assets/1558590/3694314/d169f43e-1370-11e4-8b81-461821a059ba.png)
"
931,Dash tests are not stable,2014-07-23T04:03:43Z,,"c:tests, t:bug",,,"Examples:
- https://travis-ci.org/Lokaltog/powerline/jobs/30598513
- https://travis-ci.org/Lokaltog/powerline/jobs/30598516
- https://travis-ci.org/Lokaltog/powerline/jobs/30598517

: three hits in one run.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/3275261-dash-tests-are-not-stable?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
930,Can't get status bar to display correctly (Image attached),2014-07-22T06:56:57Z,2014-07-22T22:08:12Z,"c:b:tmux, t:bug",,,"I think I tried almost everything I see online but no luck on getting my powerline to look correctly, can anyone please help?
- iTerm2 1.0.0.20140629 beta (OS 10.6+, Intel-only)
- Terminal Type reported: xterm-256color
- Changed the font on both ASCII and non-ASCII
- Set locale variables automatically: Checked
- In my ~/.tmux.conf I have: source ""/Users/myuser/Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf""
  
  $ locale
  LANG=""en_US.UTF-8""
  LC_COLLATE=""en_US.UTF-8""
  LC_CTYPE=""en_US.UTF-8""
  LC_MESSAGES=""en_US.UTF-8""
  LC_MONETARY=""en_US.UTF-8""
  LC_NUMERIC=""en_US.UTF-8""
  LC_TIME=""en_US.UTF-8""
  LC_ALL=""en_US.UTF-8""

![screen shot 2014-07-22 at 2 56 24 am](https://cloud.githubusercontent.com/assets/681278/3654597/572794d8-116d-11e4-80ed-c80d53a51513.png)

What am I missing?
"
929,Powerline display issue,2014-07-20T08:17:18Z,2014-07-20T08:57:05Z,"c:font, s:invalid, t:bug",,,"Everything was going fine, but after a restart it became like this. I assumed it as a font issue. So I reinstalled the font, but in vain.
![screenshot from 2014-07-20 14 10 14](https://cloud.githubusercontent.com/assets/3380056/3636866/f820d176-0fe5-11e4-9a1c-331034432aea.png)

The issue is common in zsh, bash, vim, tmux and everywhere I applied powerline.
"
928,"Add busybox, mksh and dash support",2014-07-19T20:24:36Z,2014-07-19T22:07:04Z,"c:b:shell, t:enhancement",,,
927,Do not define POWERLINE_COMMAND when not using prompt,2014-07-19T16:08:36Z,2014-07-19T16:19:58Z,"c:b:shell, t:enhancement",,,"To be consistent with fish and bash
"
926,Use `stty size` or zero as a fallback for $COLUMNS,2014-07-19T16:01:20Z,2014-07-19T16:06:44Z,"c:b:shell, t:bug",,,"Fixes #924
"
925,Can't get powerline to work on 10.9.4/Weard symbols,2014-07-15T19:04:57Z,2014-07-15T20:07:58Z,"c:font, e:macos, s:invalid, t:bug",,,"I can't get powerline to work. It shows me weard symbols which are looking like a square with an X in it.

OS: 10.9.4
MacPorts 2.3.1

I tried to follow these instructions. http://powerline.readthedocs.org/en/latest/installation/osx.html
1. sudo port select python python27-apple, had some trouble with it. For some reasons I wasn't able to install it. Port said that he was not able to find any section like python. I solved it by installing python2.7 and also py27-pip manually.

Now I can run it with the following result:
sudo port select python python27-apple
Selecting 'python27-apple' for 'python' succeeded. 'python27-apple' is now active.
1. pip install --user git+git://github.com/Lokaltog/powerline, pip is replaced with pip2.7 but seems to be working
2. I installed one of the fonts as described, it worked as expected
3. When adding powerline to my bash_profile I runned into this bug https://github.com/Lokaltog/powerline/issues/685 and solved it as described
4. I checked for the lates version of iTerm2 Build 1.0.0.20140629 
5. I fixed my locale by setting it all to UFT-8
   locale
   LANG=""de_DE.UTF-8""
   LC_COLLATE=""de_DE.UTF-8""
   LC_CTYPE=""de_DE.UTF-8""
   LC_MESSAGES=""de_DE.UTF-8""
   LC_MONETARY=""de_DE.UTF-8""
   LC_NUMERIC=""de_DE.UTF-8""
   LC_TIME=""de_DE.UTF-8""
   LC_ALL=""de_DE.UTF-8""
"
924,$COLUMNS not defined upon Cygwin startup,2014-07-14T02:53:08Z,2014-07-19T16:06:44Z,"c:b:shell, e:windows, t:bug",,,"I've installed `powerline` and configured it with Cygwin by adding this line to `~/.bashrc`:

``` bash
if [ -f /lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh ]; then
    source /lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh
fi
```

When I first start Cygwin, however, I initially get this error:

```
usage: powerline [-h] [-r MODULE] [-w WIDTH] [--last_exit_code INT]
                 [--last_pipe_status LIST] [--jobnum INT] [-c KEY.KEY=VALUE]
                 [-t THEME.KEY.KEY=VALUE] [-p PATH] [-R KEY=VAL]
                 ext [{left,right,above,aboveleft}]
powerline: error: argument -w/--width: expected one argument
```

However, executing any other command will cause `powerline` to work normally. I am assuming this is due to Cygwin defining `$COLUMNS` sometime after Cygwin is first started. Therefore, a workaround for [the offending line](https://github.com/Lokaltog/powerline/blob/develop/powerline/bindings/bash/powerline.sh#L35) in `bindings/bash/powerline.sh` is to change it to:

``` bash
if [ -z ""$COLUMNS"" ]; then
    $POWERLINE_COMMAND shell $1 -r bash_prompt --last_exit_code=$2 --jobnum=$3
else
    $POWERLINE_COMMAND shell $1 -w $COLUMNS -r bash_prompt --last_exit_code=$2 --jobnum=$3
fi
```
"
923,Implement configuration merging,2014-07-13T19:38:23Z,2014-08-05T10:05:23Z,"c:core, t:enhancement",,,"Ref #418.
"
922,[WIP] Configuration changes: TODO list,2014-07-12T10:41:26Z,2014-10-07T19:45:36Z,"c:configuration, c:core, t:enhancement",,,"This is a TODO list from #784:
- [x] #770: Colorscheme hierarhy.
- [x] #770: Group aliasing.
- [x] #770: Port colorschemes.
- [x] #770: Test new functionality.
- [x] #770: Update documentation.
- [x] #770: Support powerline-lint.
- [ ] #3: Add basic groups.
- [x] #418: Configuration merging.
- [x] #418: Test new functionality.
- [x] #418: Update documentation.
- [x] #418: Support powerline-lint.
- [x] #783: Themes hierarchy.
- [x] #783: Port themes.
- [x] #783: Create `unicode` theme.
- [x] #783: Create `ascii` theme.
- [x] #783: Test new functionality.
- [x] #783: Update documentation.
- [x] #783: Support powerline-lint.

Done: #921 for #770, #923 for #418, #958 for #783.
"
921,Implement colorschemes hierarchy,2014-07-12T10:27:37Z,2014-07-12T10:35:49Z,"c:configuration, c:core, t:enhancement",,,"Ref #770. Is a part of former #784.
"
920,Improve vim tests,2014-07-10T18:41:36Z,2014-07-10T19:30:53Z,"c:tests, t:enhancement",,,"This PR adds support for fallback `vim_getwinvar` and adds quickfix_title segment tests. Main aim is to get rid of lots of stack traces from travis build log.
"
919,Build sometimes failes due to SEGV in pypy,2014-07-10T17:52:00Z,2014-11-29T21:37:40Z,"c:tests, e:pypy, t:bug",,,"Currently only [one hit](https://travis-ci.org/Lokaltog/powerline/jobs/29623117) (tcsh shell tests). If it will fail too often I will have to disable PyPy tests.

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/3063654-build-sometimes-failes-due-to-segv-in-pypy?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
918,Fonts have spacing issues,2014-07-10T17:45:37Z,2014-07-10T18:38:39Z,"c:font, e:linux, t:bug",,,"I recently upgraded to Ubuntu 14.04 and tried to install Powerline.  If I use the default fonts for the terminal I don't get the fancy Powerline symbols, and when I use the Powerline fonts I get very uneven character spacing, sometimes characters overlap.

Default font:
![image](https://cloud.githubusercontent.com/assets/8127214/3542583/d4af0206-0858-11e4-9748-fa2de3180254.png)

Powerline Symbols Medium 12 font:
![image](https://cloud.githubusercontent.com/assets/8127214/3542593/e3d0ab68-0858-11e4-9056-5b2c0b0c4c51.png)
![image](https://cloud.githubusercontent.com/assets/8127214/3542683/d7b77220-0859-11e4-96bd-7036b79de707.png)
"
917,Refactor powerline to create loggers and use run_cmd in powerline-config,2014-07-10T17:17:52Z,2014-07-10T17:34:56Z,"c:b:tmux, c:core, t:enhancement",,,"This PRs refactors `powerline/__init__.py` to make it possible to create `PowerlineLogger` instances with user settings without creating `Powerline` instances. This ability is currently used only in `powerline-config` script in order to use `powerline.lib.shell.run_cmd`.
"
916,Pre-patched Anonymous Pro arrowheads are vertically misaligned on Retina with iTerm 2,2014-07-10T16:11:31Z,2014-08-25T04:04:17Z,"c:font, s:invalid, t:bug",,,"- **OS X version**: 10.9.4
- **Display**: 13"" Retina, 2560 x 1600
- **iTerm 2 version**: Build 1.0.0.20140629
- **Vim version**: 7.4.273

Before I tried messing with iTerm2 font configs:

![Before configuration](https://cloud.githubusercontent.com/assets/14329/3541197/1483e9fa-084a-11e4-8d2a-024fcdccf71b.png)

After jiggling the vertical character spacing:

![Vertical character spacing](https://cloud.githubusercontent.com/assets/14329/3541200/19834482-084a-11e4-8a64-3d3241cf8836.png)

The latter screenshot is damned close, but as you can see from the full-sized version (please don't go by the thumbnail), the right arrowhead after ""**NORMAL**"" is clearly too small, and zooming in or out with `⌘+` and `⌘-` exacerbates the problem.

![The offending pixels](https://cloud.githubusercontent.com/assets/14329/3541291/b6f5e026-084a-11e4-835a-a8fc76bfea74.png)

I find this inconsistency unbefitting of our craft, and thus it cannot be countenanced. I desire perfection as advertised on the tin:

![Perfection, or thereabouts](https://powerline.readthedocs.org/en/latest/_images/pl-truncate1.png)

Some other info:
- iTerm2 Options
  - Terminal Type reported: `xterm-256color`
  - Set locale variables automatically: Checked
  - Character encoding: UTF-8
- bash
  - $LANG: `en_US.UTF-8`
"
915,Default line_percent_gradient to (light|dark)_green_gray gradients,2014-07-10T14:56:47Z,2014-07-10T15:06:29Z,"c:b:vim, t:enhancement",,,"dark_green_gray gradient was generated with

```
tools/generate_gradients.py 70 247
```

. It is used for non-insert modes in the current window. light_green_gray
gradient was generated with

```
./tools/generate_gradients.py 148 250
```

. It is used for insert mode in the current window.
"
914,Improve battery segment colors,2014-07-10T14:47:12Z,2014-07-10T14:55:07Z,"c:common segments, t:enhancement",,,
913,Improve generate_gradients.py script,2014-07-10T14:16:39Z,2014-07-10T14:22:42Z,"c:helpers, t:enhancement",,,"Made it easier to copy-paste its output into colors.json and added a way to omit computing colours for terminal as it is very slow.
"
912,Fix buffer to string conversion in powerline-config,2014-07-10T12:55:47Z,2014-07-10T17:34:58Z,"c:b:tmux, t:bug",TypeError,TypeError: Type str doesn't support the buffer API,"I've just fixed an issue when tmux background was not displayed using user config.

``` shell
aegypius $> powerline-config tmux source                                                                                                                                                                                                   
Traceback (most recent call last):
  File ""/home/aegypius/.local/bin/powerline-config"", line 33, in <module>
    args.function(args)
  File ""/home/aegypius/.local/bin/powerline-config"", line 15, in <lambda>
    'source': (lambda args: config.source_tmux_files()),
  File ""/home/aegypius/.local/lib64/python3.3/site-packages/powerline/bindings/config.py"", line 107, in source_tmux_files
    version = get_tmux_version()
  File ""/home/aegypius/.local/lib64/python3.3/site-packages/powerline/bindings/config.py"", line 47, in get_tmux_version
    _, version_string = version_string.split(' ')
TypeError: Type str doesn't support the buffer API
```
"
911,No arrows in Gnome-terminal,2014-07-09T13:44:19Z,2014-07-12T10:49:29Z,"c:font, e:linux, s:invalid, t:bug",,,"Hello, i  try it all day long, and the result look like this ![Alt](http://goo.gl/0xI9da).
i use fontconfig to install font, but it seem to be the font problem.
thanks for any advise 
"
910,Add possibility to revert a defined gradient,2014-07-07T10:16:02Z,2014-07-10T14:55:08Z,"c:common segments, t:bug",,,"All of the gradients in `colors.json` follow the pattern ""calm color"" (0%) -> ""alert color"" (100%). For some segments, like battery charge, it rather makes sence to use reverted gradient, so that 100% is calm (green, white, etc) and 0% is alert (red, orange, etc). Instead of defining a new gradient by hand, it whould be nice to have a possibility to use an already defined gradient but reverted, and probably make it a config option for a segment. 
"
909,Enable pypy tests in .travis.yml,2014-07-06T18:49:58Z,2014-07-10T16:00:59Z,"c:tests, t:enhancement",,,"PyPy is only useful for daemon though.
"
908,Colors on powerlinebetween buffers,2014-07-04T18:05:30Z,2014-07-04T21:13:12Z,"c:b:vim, s:invalid, t:bug",,,"The powerline works correctly if I open one file. But if I open another file in the buffer, the colors on the powerline disappear.
"
907,Unable to modify to background of Powerline on tmux?,2014-06-29T14:50:15Z,2014-11-29T21:40:27Z,"c:b:tmux, t:enhancement",,,"Hi everyone,

I am having trouble changing the background of Powerline, particularly on the tmux's session name section. Here is the screenshot:

![screenshot from 2014-06-29 10 39 14](https://cloud.githubusercontent.com/assets/874795/3423536/5c93f4a8-ff9c-11e3-8a87-b634423a5987.png)

So those black spots in the tmux's session name background are not in sync with the whole background color of Powerline on tmux. Is this an issue with either tmux or Powerline or it's just me who doesn't know how to adjust it?

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/2877119-unable-to-modify-to-background-of-powerline-on-tmux?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
906,Add pyuv-based watcher,2014-06-28T22:09:31Z,2014-08-30T12:01:07Z,"c:core, t:enhancement",,,"Current tests are suffering from some race conditions: possible tests results are
- “The change to inotify/file2 was not detected” on line 84: most common
- “Spurious change detected” at line 82 (uncommon, usually fixed by sleeping 
  before running test in do_test_for_change)
- “The change to inotify was not detected” in tree watcher test (e.g. from line 
  131) (very rare)
- All OK (uncommon).
"
905,Fix support for .git git symlinks,2014-06-28T17:47:11Z,2014-06-28T18:20:39Z,"c:VCS support, t:bug",,,"By “.git git symlinks” I mean `.git` _files_ with content like `gitdir: {path}`.
"
904,Add watcher option,2014-06-28T16:22:32Z,2014-06-28T17:17:32Z,"c:core, t:enhancement",,,"Ref #818
"
903,Add patchable file powerline/config.py with system-dependent variables,2014-06-28T15:24:10Z,2014-06-28T15:30:04Z,"c:installation, t:bug",,,"For leycec/raiagent#8.
"
902,Improve battery support,2014-06-28T13:15:16Z,2014-08-06T09:10:55Z,"c:common segments, t:enhancement",,,"- Use dbus+UPower if available (code taken from kovidgoyal@7f73453 and
  refactored).
- Use any battery from /sys/class/power_supply: replace hardcoded BAT0/BAT1 with
  cycle.
- Use pmset.
- Use win32com.client with Win32_Battery object (code taken from an [SO
  question](http://stackoverflow.com/a/21083571/273566) and refactored).
- Use ctypes + GetSystemPowerStatus (from [the same question](http://stackoverflow.com/a/21083571/273566)).

Completely untested (only know that syntax is correct), will probably have to
hear replies from users to merge.

Closes #677.
Fixes #820.
"
901,tmux status bar not rendering properly,2014-06-28T00:27:02Z,2014-06-28T13:37:25Z,"c:b:tmux, t:bug",,,"It's like the default bar is there underneath and there is a weird space on the left for some reason.

I'm on Iterm2, zsh and I installed via pip from github today on OS X. Font is patched source code pro. Only thing in my tmux config is setting TERM to screen-256color.

![tmux](https://i.imgur.com/HObzApA.png)
"
900,invalid choice: 'aboveleft',2014-06-27T10:46:19Z,2014-06-30T16:51:13Z,"c:b:shell, s:invalid, t:bug",,,"Recent pull cause errors in powerline zsh

usage: powerline [-h] [-r MODULE] [-w WIDTH] [--last_exit_code INT]  
                 [--last_pipe_status LIST] [--jobnum INT] [-c KEY.KEY=VALUE]
                 [-t THEME.KEY.KEY=VALUE] [-p PATH] [-R KEY=VAL]
                 ext [{left,right}]
powerline: error: argument side: invalid choice: 'aboveleft' (choose from 'left', 'right')

I use Ubuntu 14.04, zsh 5.0.2 (x86_64-pc-linux-gnu), Python 2.7.6
"
899,"Set tmux PWD after PROMPT_COMMAND, do not require it at the start",2014-06-25T17:34:56Z,2014-06-25T17:40:50Z,"c:b:shell, t:bug",,,"Should fix failing bash bindings test
"
898,Fix inotify tree watcher bug,2014-06-25T17:19:40Z,2014-06-25T17:28:06Z,"c:core, t:bug",,,"Change made by @kovidgoyal. Comment:

Fix a bug in the inotify tree watcher that incorrectly marked a tree as 
unchanged if an ignored event happens after a non-ignored event. This allows an 
optimisation in the git backed to be used (ignoring changes to .git/index.lock).
## 

Not including actual commit as I do not think removing pygit2 backend is a good 
idea. Worse, removing pygit2 backend in the same commit fix is added is 
definitely bad idea.

Ref #874.
"
897,Shell: some refactoring and Windows hack,2014-06-25T17:08:31Z,2014-06-25T17:27:15Z,"c:core, t:bug",,,"Ref #36
Ref #498
"
896,Fix typo in VimRenderer.render,2014-06-25T15:29:36Z,2014-06-25T16:15:04Z,"c:b:vim, t:bug",,,"segment_info should have been initialized with self.segment_info, not updated: 
new values must have priority. Refactored the result so that static values are 
defined in VimRenderer.segment_info.
"
895,tmux: Segments don't seem to load,2014-06-25T00:04:56Z,2014-06-25T14:12:35Z,"c:b:tmux, s:invalid, t:bug",,,"Hi ! I'm using powerlien with Tmux 1.9a and default segments don't show at all.

You can see on my screenshot two tmux sessions nested the top-level one is my OSX 10.9.3 tmux 1.9a which works fine and the other one is my Debian 7 tmux which doesn't want to show the segments for some reasons..
![capture decran 2014-06-25 a 02 03 16](https://cloud.githubusercontent.com/assets/1409924/3380031/2390749a-fbfc-11e3-9c51-348e8ef8c80d.png)
"
894,Disable special glyphs,2014-06-23T22:41:26Z,2014-06-24T03:32:52Z,"c:core, s:duplicate, t:enhancement",,,"Would like to see a documented option to disable the special font glyphs in powerline entirely, and just display like the old vim-powerline default.

Some combinations of systems, finicky and complex X font servers, terminal emulators, etc appear to make the task of setting up the special fonts labor intensive, if not impossible. Have personally never been able to get patched fonts to work with rxvt-unicode, for example, despite many hours invested and numerous attempts. 

An option to disable this feature altogether would allow users to simply skip this potentially-problematic task if desired, and might reduce the number of people forced to continue using the deprecated vim-powerline.
"
893,Multiline prompt support,2014-06-23T16:56:19Z,2014-06-24T19:50:03Z,"c:b:shell, c:core, t:enhancement",,,"Fish shell is not supported because I do not know to support it: it is way too restrictive. Tcsh support required some research, but it is now ready. Depends on `stty size` output and `cut` command presence.

Tests are currently missing, and there are no multiline themes shipped.

Status:
- [x] Add multiline prompt support to powerline core.
- [x] Add multiline prompt support to lint checker.
- [x] Add necessary changes to zsh bindings.
- [x] Add necessary changes to bash bindings.
- [x] Add necessary changes to tcsh bindings.
- [x] Add necessary changes to fish bindings or document support status.
- [x] Update documentation.
- [x] Fix problems found by existing tests.
- [x] Add tests for new functionality.
- [ ] (subjectable) Add `powerline/config_files/themes/shell/default_multiline.json`.
- [ ] (related) Add tests for new shell theme sanity.

Ref #462.
"
892,Virtualenv information not displaying,2014-06-23T09:12:49Z,2014-06-24T18:59:36Z,"c:b:vim, c:common segments, s:invalid, t:bug",,,"I can't for the life of me figure out why powerline doesn't show any virtualenv info. I've tried two different methods:
1. load a virtualenv in a shell, THEN start up vim
2. use the vim-virtualenv plugin to activate/deactivate from within vim

I know the virtualenv has loaded properly as I've been able to run things from vim that depend upon it.

And I also know that the plugin is being loaded initially:

```
 33: /mnt/local/vhome/brian/dotfiles/vim/bundle/powerline/powerline/bindings/vim/plugin/powerline.vim
```

and  `:echo g:virtualenv_loaded` returns '1'. 

Where else can I start looking? 

Thanks,
"
891,Missing battery segment,2014-06-23T08:16:33Z,2014-07-01T08:55:00Z,"c:common segments, e:macos, t:bug",,,"After upgrading Python, ""battery"" segment is gone.
And the ""uptime"" segment was never there.

OS X (Mavericks), Python 2.7.7_2 (installed via homebrew) and had to reinstall Powerline after Python was upgraded (pip command without --user flag).
"
890,Fix zpython bindings,2014-06-15T07:10:49Z,2014-06-15T07:16:16Z,"c:b:shell, t:bug",,,"Zsh+zpython no longer correctly display pipestatus segment due to unknown reasons. This PR fixes this problem.
"
889,"Some glyphs don't work, some are tiny... don't know what to do.",2014-06-03T20:52:27Z,2014-10-10T07:50:33Z,"c:font, t:bug",,,"I've been at this literally all day, and I just don't know what to do.

I run Archlinux, and have installed [python-powerline-git](https://aur.archlinux.org/packages/python-powerline-git/).

My .Xresources is this:

`URxvt*font: xft:Terminus:pixelsize=12,xft:Inconsolata\ for\ Powerline:pixelsize=12`

and here is pictures of some powerlines:

My ZSH prompt 
![](http://i.imgur.com/nGtYtdV.png)

Tmux 
![](http://i.imgur.com/Wo50VYv.png)

Vim
![](http://i.imgur.com/UQLgy2B.png)
**EDIT: works now, what you see above is airline and not powerline. Removed airline and now it uses powerline**

GVim 
![](http://i.imgur.com/PilHfn1.png)
**EDIT: works now, what you see above is airline and not powerline. Removed airline and now it uses powerline**

Really tiny glyphs, and it is impossible to change the look or size of them... 
![](http://i.imgur.com/wbqgAdK.png)

And last, from here https://gist.github.com/agnoster/3712874 I copy pasted the ""echo"" command in a terminal;

`echo ""⮀ ± ⭠ ➦ ✔ ✘ ⚡""`

and this is what I get 
![](http://i.imgur.com/gr9Q2fO.png)

Anyone that can assist me here? I ran out of ideas..
"
888,Decode stdout in shell.run_cmd,2014-06-01T15:58:06Z,2014-06-01T17:51:28Z,"c:players, t:bug",,,"Closes #885
"
887,Handle the connection failure exception in weather segment to avoid glitching,2014-05-31T08:43:02Z,2014-06-01T10:12:50Z,"c:common segments, t:bug",URLError,URLError: <urlopen error [Errno 111] Connection refused>,"When the network goes down, weather update will fail to resolve the host and thus `urllib2` will throw an `URLError` exception:

```
2014-05-30 04:40:56,619:ERROR:tmux:WeatherSegment:Exception while updating: <urlopen error [Errno 111] Connection refused>
Traceback (most recent call last):
  File ""/home/ymf/.local/lib64/python2.7/site-packages/powerline/lib/threaded.py"", line 68, in set_update_value
    self.update_value = self.update(self.update_value)
  File ""/home/ymf/.local/lib64/python2.7/site-packages/powerline/segments/common.py"", line 380, in update
    raw_response = urllib_read(self.url)
  File ""/home/ymf/.local/lib64/python2.7/site-packages/powerline/lib/url.py"", line 14, in urllib_read
    return urlopen(url, timeout=10).read().decode('utf-8')
  File ""/usr/lib64/python2.7/urllib2.py"", line 127, in urlopen
    return _opener.open(url, data, timeout)
  File ""/usr/lib64/python2.7/urllib2.py"", line 404, in open
    response = self._open(req, data)
  File ""/usr/lib64/python2.7/urllib2.py"", line 422, in _open
    '_open', req)
  File ""/usr/lib64/python2.7/urllib2.py"", line 382, in _call_chain
    result = func(*args)
  File ""/usr/lib64/python2.7/urllib2.py"", line 1214, in http_open
    return self.do_open(httplib.HTTPConnection, req)
  File ""/usr/lib64/python2.7/urllib2.py"", line 1184, in do_open
    raise URLError(err)
URLError: <urlopen error [Errno 111] Connection refused>
```
"
886,Git branch status coloring is inconsistent,2014-05-28T18:25:46Z,2015-05-10T14:34:59Z,"c:VCS support, c:b:shell, t:bug",,,"Perhaps I'm missing something, but the color of the branch should revert to gray when clean. Sometimes this is the case and sometimes it's not and I'm not sure what info to provide you with aside from the screenshots below.

This screenshot shows powerline behaving improperly:
![screenshot 2014-05-28 14 22 26](https://cloud.githubusercontent.com/assets/897179/3108977/514208d0-e695-11e3-9d75-4706af71024b.png)

This screenshot shows powerline behaving correctly:
![screenshot 2014-05-28 14 22 46](https://cloud.githubusercontent.com/assets/897179/3108976/5141f1d8-e695-11e3-98e3-e6642b1759c3.png)
"
885,[tmux] Make the output string from mpc decode correctly,2014-05-27T04:45:30Z,2014-06-01T17:51:28Z,"c:players, t:bug",,,"When mpd is playing a song with a non-ascii name, `now_playing.split('\n')` will throw the following exception:

```
2014-05-26 08:16:55,651:ERROR:tmux:now_playing:Exception while computing segment: 'ascii' codec can't decode byte 0xc3 in position 57: ordinal not in range(128)
Traceback (most recent call last):
File ""/home/ymf/.local/lib64/python2.7/site-packages/powerline/theme.py"", line 75, in get_segments
 contents = segment['contents_func'](self.pl, segment_info)
    File ""/home/ymf/.local/lib64/python2.7/site-packages/powerline/segment.py"", line 96, in <lambda>
 contents_func = lambda pl, segment_info: _contents_func(pl=pl, **args)
    File ""/home/ymf/.local/lib64/python2.7/site-packages/powerline/segments/common.py"", line 917, in __call__
 func_stats = player_func(**kwargs)
 File ""/home/ymf/.local/lib64/python2.7/site-packages/powerline/segments/common.py"", line 982, in player_mpd
 now_playing = now_playing.split('\n')
 UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 57: ordinal not in range(128)
```

I guess this is related to locale settings, however, when I copy out the problematic code segment and test it separately in another python file, the error won't come up. Nevertheless, according to http://stackoverflow.com/questions/22267629/unicodedecodeerror-ascii-codec-cant-decode-byte-0xea-in-position-8-ordinal, here is a quick fix.
"
884,[tmux] Wrap the raise statement in _get_capacity,2014-05-27T01:40:58Z,2014-05-27T01:48:10Z,"c:common segments, t:bug",,,"Instead of raising an NotImplementedError right from the control flow, we shall wrap it with _get_capacity. 
"
883,Powerline crashes in zsh,2014-05-26T20:01:23Z,2014-05-27T01:41:49Z,"c:b:shell, t:bug",TypeError,TypeError: 'NoneType' object is not subscriptable,"Since the latest commit (pull request #882, commit e3bebcc5b55755ea4863b1ba028e64032949cb35), powerline crashes each time it is called in zsh on my machine. Powerline still works as expected in vim. Reverting the commit fixed the issue. 

I am running ArchLinux on a desktop machine (a battery is not present). The terminal emulator I use is rxvt-unicode.

This is the error log:

```
2014-05-26 21:58:36,463:ERROR:shell:segment_generator:Failed to generate segment from {'name': 'hostname'}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,466:ERROR:shell:segment_generator:Failed to generate segment from {'name': 'user'}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,468:ERROR:shell:segment_generator:Failed to generate segment from {'name': 'virtualenv'}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,470:ERROR:shell:segment_generator:Failed to generate segment from {'args': {'dir_limit_depth': 3}, 'name': 'cwd'}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,472:ERROR:shell:segment_generator:Failed to generate segment from {'name': 'branch'}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,472:ERROR:shell:powerline:Failed to render: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/__init__.py"", line 403, in render
    return self.renderer.render(*args, **kwargs)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/renderers/zsh_prompt.py"", line 38, in render
    *args, **kwargs
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/renderer.py"", line 209, in render
    segments = [self._get_highlighting(segment, mode) for segment in segments
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/renderer.py"", line 209, in <listcomp>
    segments = [self._get_highlighting(segment, mode) for segment in segments
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/theme.py"", line 72, in get_segments
    if segment['type'] == 'function':
TypeError: 'NoneType' object is not subscriptable
2014-05-26 21:58:36,563:ERROR:shell:segment_generator:Failed to generate segment from {'name': 'hostname'}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,565:ERROR:shell:segment_generator:Failed to generate segment from {'name': 'user'}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,567:ERROR:shell:segment_generator:Failed to generate segment from {'name': 'virtualenv'}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,569:ERROR:shell:segment_generator:Failed to generate segment from {'name': 'cwd', 'args': {'dir_limit_depth': 3}}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,570:ERROR:shell:segment_generator:Failed to generate segment from {'name': 'branch'}: 
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 78, in get
    contents, _contents_func, module = get_segment_info(data, segment)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segment.py"", line 28, in get_function
    return None, getattr(__import__(segment_module, fromlist=[segment['name']]), segment['name']), segment_module
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/segments/common.py"", line 1114, in <module>
    raise NotImplementedError
NotImplementedError
2014-05-26 21:58:36,570:ERROR:shell:powerline:Failed to render: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/__init__.py"", line 403, in render
    return self.renderer.render(*args, **kwargs)
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/renderers/zsh_prompt.py"", line 38, in render
    *args, **kwargs
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/renderer.py"", line 209, in render
    segments = [self._get_highlighting(segment, mode) for segment in segments
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/renderer.py"", line 209, in <listcomp>
    segments = [self._get_highlighting(segment, mode) for segment in segments
  File ""/home/evert/src/dotfiles/.vim/bundle/powerline/powerline/theme.py"", line 72, in get_segments
    if segment['type'] == 'function':
TypeError: 'NoneType' object is not subscriptable
```
"
882,[tmux] Make battery segment use BAT1 if BAT0 was not found,2014-05-26T05:25:38Z,2014-05-26T16:54:37Z,"c:b:tmux, t:bug",,,"In some linux distributions, the battery status may be presented in the file BAT1 instead of BAT0. Also, according to `battery.sh` in the old project ""tmux-poweline"", the same situation was considered.
"
881,change the installation doc,2014-05-25T08:40:15Z,2014-08-02T23:40:28Z,"c:documentation, s:invalid, t:question",,,"The installation mentions 
https://powerline.readthedocs.org/en/latest/installation/linux.html#installation-linux

Plugin installation
Install Python 3.2+ or Python 2.6+.

Install Powerline using the following command:

pip install --user git+git://github.com/Lokaltog/powerline

This did not work for me, but the following worked

pip install --user git+https://github.com/Lokaltog/powerline
"
880,[RFC] Powerline config script,2014-05-24T10:19:39Z,2014-06-25T17:58:04Z,"c:b:tmux, t:enhancement",,,"Adds powerline config script. Currently used only for version-specific tmux configuration sources, but there may be other applications:
- Shell configuration:
  - Use `eval $(powerline-config shell zsh)` for configuring shells.
  - Use `powerline-config shell zsh >> .zshrc` to make configuring shells easier and not suffer from delays due to python init/shutdown sequence (it is very fast on my system though). Not sure what is better to suggest in documentation.
- POWERLINE_COMMAND variable: there is lots of duplicate code, `powerline-config` may get rid of this via
  - `powerline-config tmux configure_command [arguments]` (will run `tmux set-environment -g POWERLINE_COMMAND …`),
  - `powerline-config print command` (will print executable name) and
  - `powerline-config shell zsh command [arguments]` (will echo `export POWERLINE_COMMAND=""{executable} arguments""` or `typeset -ga POWERLINE_COMMAND;POWERLINE_COMMAND=({executable} arguments)` depending on shell for use in `eval`).
  
  This is very subjectable: will really not get rid of this completely, but at least narrow down number of lines used due to absence of code used to choose powerline version (here it chooses `powerline-client` if available, in daemon branch AFAIR it should choose client implementation (there are fastest C variant, less fast socat-based shell variant and slowest python variant)).

Maybe it make sense to use `powerline-config` to replace some POWERLINE_… configuration variables  with `powerline-config show config.ext.ipython.tmux.colorscheme`-style calls. These calls also may be useful for debugging.

After #784 (specifically #418) it may make sense to use `powerline-config` to alter configuration.
"
879,Add fish shell's vi-mode support,2014-05-23T16:07:43Z,2014-08-24T13:22:15Z,"c:b:shell, t:enhancement",,,"- Add a _powerline_bind_mode function for fish_bind_mode variable, update _POWERLINE_MODE variable.
- Run _powerline_bind_mode at startup.
"
878,Add fish shell's vi-mode support,2014-05-23T15:56:00Z,2014-08-24T13:22:14Z,"c:b:shell, t:enhancement",,,"After [this pull request](https://github.com/fish-shell/fish-shell/pull/1218), fish shell now support vi-mode.
- The mode string is saved at $fish_bind_mode variable, which is **readable in --on-variable functions only**.
- The mode string are 'default', 'insert', 'visual', which is the same as zsh's mode string.

Reference:
https://github.com/fish-shell/fish-shell/issues/65
"
877,[RESOLVED] sections overlap with fontconfig or patched fonts,2014-05-20T04:27:47Z,2014-06-08T13:33:50Z,"c:font, t:bug",,,"what could be the reason for this ? how can i change it ?

tried both patched fonts or the recommended fontconfig method, both the same look

![check](http://i.imgur.com/zh0uDmA.jpg)
"
876,GIT Submodule Branch Label Wrong -> Display's Folder Name ... w/ fix,2014-05-19T05:15:42Z,2014-06-28T18:20:40Z,"c:VCS support, t:bug",,,"Hello, I have been looking for a way to fix a problem with GIT submodule labels w/ ZSH, and powerline. A fix was committed on April 23rd, for #654, which also 'closed' #655. And while there are no more 'errors' after that commit, when in the python3 (3.4.0, Arch Linux) context the label on the right most side displays the folder that the git submodule is in, rather than the current branch. Also in python2 (Debian, python 2.7.6) environment, the label is also incorrect. here is my proposed fix w/ problem:

The problem is that with the current version there is a ^J appended to the end of the path, before the HEAD file, where the HEAD holds the current branch. This causes problems and an exception to occur at line 19, branch_name_from_config_file, which will then yield returning the folder's name instead of the branch's name. I imagine you could use the current decode method vs just 'utf-8'.

Lines 34/35 (modified)

```
27 def git_directory(directory):¬
28 ▸       path = os.path.join(directory, '.git')¬
29 ▸       if os.path.isfile(path):¬
30 ▸       ▸       with open(path, 'rb') as f:¬
31 ▸       ▸       ▸       raw = f.read()¬
32 ▸       ▸       ▸       if not raw.startswith(b'gitdir: '):¬
33 ▸       ▸       ▸       ▸       raise IOError('invalid gitfile format')¬
34 ▸       ▸       ▸       #raw = raw[8:].decode(sys.getfilesystemencoding() or 'utf-8')¬ 
35 ▸       ▸       ▸       raw = raw.partition(b':')[2].strip().decode('utf-8')¬
36 ▸       ▸       ▸       if not raw:¬
37 ▸       ▸       ▸       ▸       raise IOError('no path in gitfile')¬
38 ▸       ▸       ▸       return os.path.abspath(os.path.join(directory, raw))¬
39 ▸       else:¬
40 ▸       ▸       return path¬
41 ¬
```

this seems to work for me in both python3 and python2 environments. and I have not run in to any problems.
"
875,tmux 1.9a hangs after installing powerline in virtualenv?,2014-05-19T03:44:20Z,2015-02-20T19:09:57Z,"c:b:tmux, s:invalid:foreign bug, t:bug",,,"centos 6.4 x64,  i don't have root privilege, but i have virutalenv and python2.7 installed,  after adding 

```
source '/home/xxx/Envs/myEnv27/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'
```

to `~/.tmux.conf`, tmux won't open, it just hangs there.  but tmux 1.6 works fine. how to troubleshoot ? thanks !

edit: i found that i have to goto the installation directory to run it, then it's working , what am i missing ?
i need to `cd ~/apps/tmux` then run `tmux` . like this :

```
cd ~/apps/tmux/bin ; ~/apps/tmux/bin/tmu
```

i compiled tmux with `./configure --enable-static` , is this related to my issue ?
"
874,Heads up on git vcs segment performance improvement,2014-05-15T04:48:01Z,2014-06-25T17:28:10Z,"c:VCS support, t:bug",,,"You might want to merge this commit: https://github.com/kovidgoyal/powerline/commit/a2b036e81fddd24e4197276a7aa7107946eb5e79

It contains a bug fix and a performance improvement that the bug fix enables.

I would do it myself, but I am really swamped at the moment and I dont have the time to ensure that all the tests on all the versions of python pass. 
"
873,Enable testing on Python 3.4,2014-05-12T03:22:58Z,2014-05-12T04:28:52Z,"c:tests, t:enhancement",,,"As per [this Travis CI blog post](http://blog.travis-ci.com/2014-04-28-upcoming-build-environment-updates/), testing on Python 3.4 is now supported.
"
872,tmux: Enhance version checking for tmux,2014-05-06T05:13:12Z,2014-06-25T17:58:06Z,"c:b:tmux, t:enhancement",,,"tmux configuration has become very fragmented between versions due to a
combination of new features and deprecation of older options. As such,
version checking for tmux became a requirement to allow maximum
functionality along with version-appropriate configuration. However,
wrapping nearly every line with `if-shell` is tedious and becomes
virtually unreadable.

This enhancement to tmux version-checking creates a logical
configuration file structure that reflects the development of tmux. As
additional configurations are added and tmux development continues, this
structure can be leveraged appropriately and extended as needed.

Rather than having multiple `if-shell` checks for the same version, each
version or version group with specific requirements can be checked only
once. This leads to simpler and fewer `if-shell` version checks. It also
reduces the ambiguity introduced by complex `if-shell` commands that
include an 'else' conditional.

A caveat to adding this enhancement is the additional requirement of the
end user to add a tmux variable definition (`POWERLINE_BINDINGS_DIR`) to
his/her `~/.tmux.conf` file. For existing tmux users leveraging
powerline, this may prove to be a slight one-time nuisance immediately
after upgrading. Without this definition, there is no way to determine
the location of the additional tmux powerline config files that have
been added with this enhancement. The docs have also been updated in
this commit to reflect this initial configuration requirement change.
Also added are some additional troubleshooting notes that point to
definition of this variable as a potential issue. Powerline will
continue to work without the definition of `POWERLINE_BINDINGS_DIR`, but
some of the functionality will be reduced and the appearance incomplete
(i.e. colors).

Ultimately, the caveat above is a small price to pay in exchange for a
framework that can be leveraged for proper version-appropriate
configuration of tmux going forward.
"
871,Add support for omitting VALUE,2014-05-04T09:02:15Z,2014-05-04T09:07:59Z,"c:core, t:enhancement",,,"This will remove error reported in #853, but not its cause
"
870,tmux version checking (Issue #869),2014-05-04T00:04:11Z,2014-05-04T07:52:32Z,"c:b:tmux, t:enhancement",,,"Add version checking functionality for the `tmux` powerline configuration file.

Also, leverage this functionality for two `tmux` features that cause undesired behavior on older `tmux` versions.
"
869,tmux version compatibility,2014-05-04T00:01:07Z,2014-05-04T07:53:08Z,"c:b:tmux, t:bug",,,"New features added by pull requests #863 and #864 that I submitted do not work properly on older tmux versions. Need version checking for these options and potentially others to avoid these types of conflicts going forward.

Proposed fix to follow as a pull request.
"
868,set tmux status background/window-status-formats from powerline,2014-05-03T22:20:53Z,2014-08-24T16:43:04Z,"c:b:tmux, t:enhancement",,,"Currently, the tmux-statusline background and formats are not set from powerline but from a separate .tmux.conf file. This means that the divider character is set separately, colors are set separately and the them can not really be configured all from powerline.

This solution is obviously very hacky and it sort of leaves the code looking worse. It does basically work, with one caveat. We have to constatly (in each call to render set the tmux attributes) This is bad both because it adds side effects to the call to tmux powerline and because it causes tmux to reset the current mouse selection for whatever reason. This could be alleviated a bit if we only set the attributes whenever config files change, but we would also need a way to set all of the attributes once at startup. This might involve adding a flag to the shell runner to force something like this that gets run once on tmux startup.

Anyway, I am happy to continue to try to bang this out, but I'm starting to feel like it might be too gross to merit inclusing.
"
867,Fix shutdown function being always None,2014-05-03T08:43:11Z,2014-05-03T09:06:22Z,"c:core, t:bug",,,"Problem reported by @IvanMalison
"
866,Refactor segment.py . Segments are now objects rather than just dicts.,2014-05-03T08:39:00Z,2014-08-24T16:38:27Z,"c:core, t:enhancement",,,"This is probably not quite ready (I want to write some tests and change the way segments are used) but everything seems to be working with this as a drop in replacement. I wanted to get your thoughts before I keep going because this is becoming a pretty large refactor.
"
865,Add dir-locals.el for using tabs in emacs' python-mode,2014-05-02T21:56:46Z,2014-05-04T08:11:07Z,"s:wontfix, t:enhancement",,,
864,tmux: Colorize the last active window FG,2014-05-01T22:52:37Z,2014-05-03T09:10:21Z,"c:b:tmux, t:enhancement",,,"Use a feature of tmux v1.8+ to change the FG color of the last active
window to blue. This uses the foo-{attr,bg,fg} format, which is
deprecated (although still available) starting with tmux v1.9 in favor
of the corresponding foo-style variable. However, tmux v1.9 is not yet
ubiquitous enough to move to the foo-style variables. For example, the
latest Ubuntu LTS (14.04) only has tmux v1.8 available in its
repositories, so the foo-{attr,bg,fg} variables prove to be more
'compatible' for now.

For future reference, here is the modification that should be made once
tmux v1.8 is deemed old enough to drop support for (or whenever the
deprecated foo-{attr,bg,fg} variables go away in the latest version of
tmux):

-set -g window-status-last-fg colour31
+set -g window-status-last-style fg=colour31

It might be appropriate to add version checking around some of these
types of options for maximum compatibility, but my initial attempt to
explore version checking in the tmux config file got extremely messy in
a hurry.

Example (window 3 last active):
![powerline_tmux_colorize_last_window](https://cloud.githubusercontent.com/assets/1715252/2858215/1c17052e-d183-11e3-9c47-168ca2d82715.png)
"
863,tmux: Change session block color if prefix pressed,2014-05-01T05:15:56Z,2014-05-03T09:10:49Z,"c:b:tmux, t:enhancement",,,"This modification to the tmux powerline binding allows the user to
easily identify when the prefix has been sent. When the prefix has
been sent, the session block changes from white to blue (matching the
color of the active window). This is accomplished using the conditional
functionality of tmux format strings and the 'client_prefix' format
variable. Unfortunately, the tmux parser fails to properly parse out
comma-separated format strings inside a format conditional, so those
have been split out into individual segments as well. Attempting to
re-combine the formats inside the conditionals will break this feature.

Standard session block:
![powerline_std_session_block_tmux](https://cloud.githubusercontent.com/assets/1715252/2849997/47014f68-d0ef-11e3-8a5f-3a19ad913c57.PNG)
Prefix active session block:
![powerline_prefix_active_session_block_tmux](https://cloud.githubusercontent.com/assets/1715252/2850073/0382d196-d0f2-11e3-80f5-3b97f4f37ea1.PNG)
"
862,Readme lacks installation instructions,2014-04-28T16:43:09Z,2015-05-19T18:22:10Z,"a:doc update, c:documentation, t:enhancement",,,"The way to install this script may be obvious to most people, however for those not familiar with python, the steps to install are a mystery. 

The readme file should include a line that shows how to install this plugin. 
"
861,What is the font?,2014-04-26T11:24:33Z,2014-05-04T08:41:24Z,"c:font, s:invalid, t:bug",,,"I tried to replicate your pwerline but I can't get the font right.
https://raw.github.com/Lokaltog/powerline/develop/docs/source/_static/img/pl-mode-visual.png
Sorry for the q here but I didn't find another way to ask.
thanks
"
860,The patched font didn't work on terminal,2014-04-22T10:26:42Z,2014-05-20T17:21:24Z,"c:font, t:bug",,,"The patched font didn't work on terminal.
-terminal used: (Konsole and gnome-terminal)
-font used: ubuntu_mono_derivative_powerline.ttf
-vim 7.4

![powerline-konsole-ubuntu_mono](https://cloud.githubusercontent.com/assets/5111497/2763744/4020a632-ca08-11e3-9a27-f58dc9da51ee.png)
![powerline-vim-ubuntu_mono](https://cloud.githubusercontent.com/assets/5111497/2763745/412ddcca-ca08-11e3-87e9-9b1539f73a76.png)

thanks
"
859,Using powerline with ipython 2 and 3,2014-04-14T08:40:58Z,2014-08-02T23:58:23Z,"c:installation, e:linux, s:invalid, t:enhancement",,,"I am on archlinux and have powerline installed with python2. Package for python(3) is in conflict so I cannot install both versions. Obviously, if I launch ipython2 it works, but not with ipython(3).
Is there a workaround to make it works with both versions?
"
858,tmux hostname segment and ssh.,2014-04-09T14:47:22Z,,"c:b:tmux, t:bug",,,"If I have the `""only_if_ssh""=true` option set for the hostname segment in the default tmux configuration, then I expect to see the hostname only if I am using ssh.  This is work as expected provided that there is no other tmux session running on the host. If I have a session already running, then the hostname does not show.

Steps:
- Log into your machine via the console.
- Starts tmux: hostnane does not show, as expected.
- Log into your machine via ssh.
- Start tmux: hostname does not show whereas was expecting it to show.

Bug?  Or am I doing something weird.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/1602778-tmux-hostname-segment-and-ssh?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
857,Added internal_ip segment,2014-04-07T04:25:25Z,2014-08-23T21:32:44Z,"a:segment, c:common segments, t:enhancement",,,"Closes #826
"
856,Allow background colors to be left unspecified,2014-04-04T14:16:52Z,2014-07-12T11:16:07Z,"c:configuration, c:core, t:enhancement",,,"Currently it appears that both `fg` and `bg` are required to be set when specifying a color.  It would nice to allow the `bg` color to be unspecified (or e.g., set to `None`or `""default""`). where it would then be set to the terminal default.
"
855,fix default mode display in zsh bindings,2014-04-04T11:17:25Z,2014-04-04T23:53:37Z,"c:b:shell, t:bug",,,"_POWERLINE_MODE is empty the first time _powerline_init_modes_support is called. This results in EMACS being displayed at the beginning of my prompt, even though that is my default mode. Since I don't think this is intended, this pull request fixes the ordering to make sure that the default mode has been retrieved.
"
854,PL#Statusline raises errors in vim.,2014-04-01T15:44:19Z,2014-04-01T15:47:56Z,s:invalid,,,"I ran into these errors when opening vim today.

```
E117: Unknown function: PL#Statusline
E15: Invalid expression: PL#Statusline(0,1)
```

It apparently only happens in our python projected managed with SVN.
If I open a file with vim directly from the folder (PWD=~/src/project/ourproject/) then this error appears, and will also appear if I open things backwards from here such as ~/.zshrc.

If I cd to ~ and open .zshrc, I have no issue.

I was thinking it had something to do with vcs segment?
"
853,String index issue,2014-04-01T13:55:25Z,2014-08-02T23:53:45Z,"c:b:tmux, t:bug",,,"A user reported a segfault with powerline downstream:

https://bugzilla.redhat.com/show_bug.cgi?id=1082823

Could you please take a look?
"
852,Mutt status_format theme,2014-04-01T12:39:34Z,2014-08-22T19:32:50Z,"s:invalid, s:wontfix, t:enhancement",,,"Are there any plans to create a mutt compatible `status_format` theme?
"
851,Fixed username lookup to be compatible with psutil 2.0,2014-03-30T12:27:57Z,2014-03-30T13:38:27Z,"c:common segments, s:duplicate, t:bug",,,"In psutil, all properties of the Process object were turned into methods.
See http://grodola.blogspot.com.au/search/label/psutil for more info.
"
850,powerline,2014-03-27T15:04:40Z,2014-03-28T11:26:31Z,"c:b:shell, s:invalid, t:bug",,,"I'm getting the following message when trying to configure Powerline with Bash on Ubuntu 13.10:

```
bash: /home/ME/.local/lib/python2.7/site-packages/powerline/bindings/bash/../../../scripts/powerline: No such file or directory
```
"
849,Allow to disable for certain use cases,2014-03-27T09:39:04Z,2014-05-04T09:29:35Z,"c:b:shell, t:enhancement",,,"I'm using an oh-my-zsh theme to get a powerline-esque command prompt. At the same time I'd like to use powerline for vim and tmux. The issue is that I need to source `bindings/zsh/powerline.zsh` for tmux to work (it needs the functions within), but there's a line in there that, when sourced, clobbers my zsh theme -- the `_powerline_setup_prompt` function. After commenting out the function call, the two can coexist.

I tried to modify `config.json` to set `shell: null` or `shell: {}`, but that causes errors. It'd be cool if we could disable parts on the fly with the json config.
"
848,Can't set cwd ellipsis in shell theme,2014-03-25T19:26:05Z,2014-09-26T04:24:10Z,"c:b:shell, t:bug",TypeError,TypeError: cwd() got an unexpected keyword argument 'ellipsis',"I'm trying to change the ellipsis character used in my powerline shell as described [here](http://powerline.readthedocs.org/en/latest/segments/common.html#powerline.segments.common.cwd).  My shell theme file looks like this:

``` json
{
    ""default_module"": ""powerline.segments.common"",
    ""segment_data"": {
        ""hostname"": {
            ""before"": "" "",
            ""args"": {
                ""only_if_ssh"": true
            }
        },
        ""virtualenv"": {
            ""before"": ""ⓔ  ""
        },
        ""branch"": {
            ""before"": "" ""
        }
    },
    ""segments"": {
        ""left"": [
            {
                ""module"": ""powerline.segments.shell"",
                ""name"": ""mode""
            },
            {
                ""name"": ""hostname"",
                ""args"": {
                    ""only_if_ssh"": true,
                    ""exclude_domain"": true
                }
            },
            {
                ""name"": ""user"",
                ""args"": {
                    ""hide_user"": ""cmv""
                }
            },
            {
                ""name"": ""virtualenv""
            },
            {
                ""name"": ""cwd"",
                ""args"": {
                    ""dir_limit_depth"": 1,
                    ""ellipsis"": ""..."",
                    ""use_path_separator"": false
                }
            },
            {
                ""name"": ""branch"",
                ""args"": {
                    ""status_colors"": true
                }
            }
        ]
    }
}
```

But the error that's thrown is:

```
2014-03-25 14:19:11,293:ERROR:shell:cwd:Exception while computing segment: cwd() got an unexpected keyword argument 'ellipsis'
Traceback (most recent call last):
  File ""/Users/cmv/Library/Python/2.7/lib/python/site-packages/powerline/theme.py"", line 75, in get_segments
    contents = segment['contents_func'](self.pl, segment_info)
  File ""/Users/cmv/Library/Python/2.7/lib/python/site-packages/powerline/segment.py"", line 86, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
TypeError: cwd() got an unexpected keyword argument 'ellipsis'
```

I'm on OS 10.9.2.
"
847,tmux powerline breaking zsh powerline,2014-03-25T02:52:02Z,2014-08-02T23:40:28Z,"c:b:tmux, t:bug",,,"I'm using zsh and tmux with powerline.  When I launch tmux from my zsh shell it breaks the zsh powerline prompt.

I've stripped down both the .zshrc and the .tmux.conf files to the bare minimum to ensure that this problem is not being caused by something else:

```
cat .zshrc
> source /usr/local/lib/python2.7/dist-packages/powerline/bindings/zsh/powerline.zsh

cat .tmux.conf
> set-option -g default-terminal ""screen-256color""
> source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf
```

I've attached a screenshot:
![-usr-bin-zsh_001](https://f.cloud.github.com/assets/831349/2507869/3827434c-b3c8-11e3-95b8-70e741703733.png)

Any ideas?
"
846,Oopen from Vim's explorer,2014-03-24T20:06:07Z,2014-03-31T09:08:46Z,"c:b:vim, s:invalid, t:bug",,,"If I try to open a file from Vim's explorer I get the following warning. Pressing enter is sufficient to move on.

![powerline bug](https://f.cloud.github.com/assets/2119355/2504616/9d608c5c-b38f-11e3-8be7-545172260fef.png)
"
845,Wrong cursor position with zsh after error,2014-03-18T02:51:20Z,2014-03-23T13:39:30Z,"c:b:shell, t:bug",,,"I'm using powerline with a [vagrant](http://www.vagrantup.com/) virtual machine running zsh on Ubuntu 12.04 with python 2.7.3.  My terminal emulator is PuTTY.

After a command that exits with an error, the exit status indicator is in the wrong place and the cursor is a few spaces to the left of where it should be.

I know it's something weird with this particular setup because I can't reproduce the problem anywhere else.

Any idea what might be wrong?

Thank you.

![img](https://farm4.staticflickr.com/3793/13233838023_8791914acb_o.png)
"
844,Issue with font patching,2014-03-17T04:05:20Z,2014-03-17T04:24:11Z,,,,"I am unable to find fontpatcher.py anywhere in my powerline installation, nor in this git repository. I am unsure whether I have missed something or the tool no longer exists.
"
843,Powerline configured but does not appear (and does not throw error),2014-03-17T03:16:43Z,2014-03-22T22:25:41Z,"c:b:shell, c:b:vim, s:invalid, t:bug",,,"Hi,
I have installed Powerline via
`$ pip install --user git+git://github.com/Lokaltog/powerline`
and configured both Vim and Zsh according to https://powerline.readthedocs.org/en/latest/overview.html#usage. However, even completely quitting iTerm2 and re-launching the app, powerline does not appear in zsh or vim. I am looking for advice on how to triage this.

System information:

`$ zsh --version`
`zsh 5.0.2 (x86_64-apple-darwin13.0)`

`$ vim --version | head -n1`
`VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Mar 16 2014 20:06:49)`
(via `brew install macvim --env-std --override-system-vim --enable-pythoninterp`)

`$ vim --version | grep +python`
`+cryptv          +linebreak       +python          +viminfo`

`$ python --version`
`Python 2.7.5`

iTerm > About iTerm:
`Build 1.0.0.20140112`

From `.vimrc`:
`source ~/Library/Python/2.7/lib/python/site-packages/powerline/bindings/vim/plugin/powerline.vim`

From `.zshrc`:
`. $HOME/Library/Python/2.7/lib/python/site-packages/powerline/bindings/zsh/powerline.zsh`
"
842,Powerline tries to run `site.py` if it exists in the `pwd`,2014-03-16T21:37:32Z,2014-03-17T19:20:57Z,"c:b:shell, c:b:vim, s:invalid, t:bug",,,"I've got a file `site.py` in a folder, and when I `cd` into that folder with powerline enabled, I get import errors: powerline is trying to execute that file. If I rename that file and remove the `pyc`, the error stops.

This also happens when I try to start Vim in that folder.
"
841,Do not allow unicode-related exceptions inside logger,2014-03-13T19:41:28Z,2014-03-14T21:33:25Z,,,,"Fixes #421
"
840,Review res fixes,2014-03-13T16:57:38Z,2014-03-13T17:12:12Z,"c:VCS support, c:common segments, c:core, c:tests, t:enhancement",,,"Fixes for issues mentioned in #819.
"
839,virtualenv/virtualenvwrapper errors,2014-03-13T16:22:19Z,2014-03-13T16:31:40Z,"c:b:shell, s:invalid, t:bug",,,"I'm using powerline on Ubuntu 14.04 with Python 3.3.5 & virtualenv/virtualenvwrapper.
My shell is zsh with oh-oh-myzsh using this theme: https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme

When I disable powerline, everything works as expected.

```
nfarrar@mshell: cd Documents/Projects/smudge
nfarrar@mshell: workon
> smudge

nfarrar@mshell: workon smudge
> deactivate:12: command not found: virtualenv_deactivate
> workon_cwd:30: command not found: deactivate

nfarrar@mshell: which python
> /home/nfarrar/.virtualenvs/smudge/bin/python
> /usr/bin/python

nfarrar@mshell: deactivate
> deactivate:12: command not found: virtualenv_deactivate

nfarrar@mshell: workon smudge
> workon_cwd:30: command not found: deactivate

nfarrar@mshell: which python
> /home/nfarrar/.virtualenvs/smudge/bin/python
```
"
838,New psutil fixes,2014-03-13T15:40:52Z,2014-03-13T16:32:39Z,,,,"Fixes for new psutil.
"
837,SOLVED: Failed to load on Max OS X 10.8.5,2014-03-13T01:48:51Z,2014-03-13T10:41:16Z,"c:installation, e:macos, t:bug",,,"Hi everyone,

I start mentioning that I'm not a python expert so it's a little bit difficult for me to figure out any further what's happening. I installed Powerline as recommended in the documentation but no matter what I do, after adding the documented lines to my _.vimrc_ file, this is the error I get: https://gist.github.com/MarcoDeBortoli/96b0bc919b3ed11522a5

I also had a look at the issue #39 but without succeed in my attempt.

However as @goldfish suggests in here #553 if you unlink brew-python it works. Unfortunately thought the restart iTerm solution doesn't work instead.

Any suggestion will be very much appreciated.

Thanks,
Debo

UPDATE: It turns out the problem appears only installing the brew package **_vim**_, installing **_macvim**_ instead solves the issue.
"
836,moved _powerline_prompt to front of $PROMPT_COMMAND in bash binding for ...,2014-03-12T21:48:46Z,2014-03-13T16:37:55Z,"c:b:shell, t:bug",,,"This change fixes errant behavior of the last_status segment in bash when $PROMPT_COMMAND already exists before the powerline.sh bash binding is sourced. On OS X for instance, $PROMPT_COMMAND is set to `update_terminal_cwd` by default.

Without this, last_status just gets the return code of the previous items in $PROMPT_COMMAND.
"
835,powerline fails to render with newest psutil (v2),2014-03-11T21:24:42Z,2014-03-13T16:32:40Z,"c:common segments, t:bug",TypeError,"TypeError: coercing to Unicode: need string or buffer, instancemethod found","at least that’s what i guess broke it, as it’s the only thing used by powerline that was changed on my system.

```
2014-03-11 22:22:21,677:ERROR:shell:powerline:Failed to render: coercing to Unicode: need string or buffer, instancemethod found                                                               
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 435, in render
    return self.renderer.render(*args, **kwargs)
  File ""/usr/lib/python2.7/site-packages/powerline/renderers/zsh_prompt.py"", line 38, in render
    *args, **kwargs
  File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 208, in render
    segments = [self._get_highlighting(segment, mode) for segment in segments
  File ""/usr/lib/python2.7/site-packages/powerline/theme.py"", line 120, in get_segments
    segment['contents'] = segment['before'] + u(segment['contents'] if segment['contents'] is not None else '') + segment['after']
  File ""/usr/lib/python2.7/site-packages/powerline/lib/unicode.py"", line 13, in u
    return unicode(s, 'utf-8')
TypeError: coercing to Unicode: need string or buffer, instancemethod found
coercing to Unicode: need string or buffer, instancemethod found
```
"
834,double post please ignore,2014-03-11T21:24:27Z,2014-03-11T21:32:14Z,,,,"double post please ignore
"
833,How to include git status output in bash prompt?,2014-03-11T12:29:10Z,,"c:VCS support, t:enhancement",,,"When using powerline-shell the bash prompt use to show if the git repo had uncommitted files and how many commits it was ahead etc..Can this be achieved readily by changing the config file if so what is to be changed?
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051115-how-to-include-git-status-output-in-bash-prompt?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
832,"Updated powerline, now my command line is a mess",2014-03-10T21:14:34Z,2014-03-13T15:37:21Z,"c:b:shell, s:duplicate, t:bug",TypeError,"TypeError: coercing to Unicode: need string or buffer, instancemethod found","I update `powerline` daily and today I get this after the update

```
2014-03-10 23:11:29,766:ERROR:shell:powerline:Failed to render: coercing to Unicode: need string or buffer, instancemethod found
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.py"", line 435, in render
    return self.renderer.render(*args, **kwargs)
  File ""/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/renderers/zsh_prompt.py"", line 38, in render
    *args, **kwargs
  File ""/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/renderer.py"", line 208, in render
    segments = [self._get_highlighting(segment, mode) for segment in segments
  File ""/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/theme.py"", line 120, in get_segments
    segment['contents'] = segment['before'] + u(segment['contents'] if segment['contents'] is not None else '') + segment['after']
  File ""/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/lib/unicode.py"", line 13, in u
    return unicode(s, 'utf-8')
TypeError: coercing to Unicode: need string or buffer, instancemethod found
coercing to Unicode: need string or buffer, instancemethod found
```
"
831,Glyph tables in help need patched font to display all glyphs,2014-03-04T20:37:48Z,2014-08-03T00:09:57Z,"c:documentation, t:bug",,,"Following refers to 

https://powerline.readthedocs.org/en/latest/fontpatching.html#glyph-table

The glyph table in the help needs the font the table is rendered to have the correct glyphs. Currently this fails:
1. On an ipad/mac no glyphs display at all (Safari and Chrome)
2. On my system only 6 of the 7 glyphs display because the glyph for  U+E0B0 is not in the resolved font 'Heuristica Regular system'.

As the page seems to be loading the PowerlineSymbols font, perhaps this could be resolved by just styling the glyphs to use that font. 
"
830,"powerline-symbols.conf, droid sans fonts and family",2014-03-04T20:20:25Z,2014-03-17T15:27:20Z,"c:font, t:enhancement",,,"Currently powerline-symbols.conf has one entry for droid sans which is:

```
<alias>
    <family>Droid Sans Mono</family>
    <prefer><family>PowerlineSymbols</family></prefer>
</alias>
```

 However when I query the slashed and dotted versions of the fonts I get:

```
 ➥  fc-query /usr/share/fonts/ttf-droid-monovar-ibx/DroidSansMonoDotted.ttf 
Pattern has 22 elts (size 32)
    family: ""Droid Sans Mono Dotted""(s)
...
➥  fc-query /usr/share/fonts/ttf-droid-monovar-ibx/DroidSansMonoSlashed.ttf 
Pattern has 22 elts (size 32)
    family: ""Droid Sans Mono Slashed""(s)
...
```

So the fonts aren't rendering properly, because fontconfig is not preferring the powerline symbols because the family is not correct.

Although its a bit unwieldy, perhaps we could update the file with seperate entries for the fonts, as below:

```
<alias>
    <family>Droid Sans Mono</family>
    <prefer><family>PowerlineSymbols</family></prefer>
</alias>
<alias>
    <family>Droid Sans Mono Slashed</family>
    <prefer><family>PowerlineSymbols</family></prefer>
</alias>
<alias>
    <family>Droid Sans Mono Dotted</family>
    <prefer><family>PowerlineSymbols</family></prefer>
</alias>
<alias>
    <family>DejaVu Sans Mono</family>
    <prefer><family>PowerlineSymbols</family></prefer>
</alias>
```
"
829,unable to use powerline exception while computing segment,2014-03-03T18:44:10Z,2014-03-13T17:14:48Z,"c:VCS support, c:b:vim, t:bug",,,"I just reinstalled my ubuntu 12.04 today, vim is 7.935.  
I use vundle for plugin manager.  
Have no other configuration apart from the common font specified in your guide docs.
when I startup vim, I got error message as below.

`
2014-03-04 02:39:46,540:ERROR:vim:branch:Exception while computing segment: only string keys are allowed
Press ENTER or type command to continue
Error detected while processing VimEnter Auto commands for ""*"":
Traceback (most recent call last):
Press ENTER or type command to continue
Error detected while processing VimEnter Auto commands for ""*"":
  File ""/home/rugal/.vim/bundle/powerline/powerline/theme.py"", line 75, in get_segments
Press ENTER or type command to continue
Error detected while processing VimEnter Auto commands for ""*"":
    contents = segment['contents_func'](self.pl, segment_info)
Press ENTER or type command to continue
Error detected while processing VimEnter Auto commands for ""*"":
  File ""/home/rugal/.vim/bundle/powerline/powerline/segment.py"", line 86, in <lambda>
Press ENTER or type command to continue
Error detected while processing VimEnter Auto commands for ""*"":
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
Press ENTER or type command to continue
Error detected while processing VimEnter Auto commands for ""*"":
  File ""/home/rugal/.vim/bundle/powerline/powerline/segments/vim.py"", line 383, in branch
Press ENTER or type command to continue
Error detected while processing VimEnter Auto commands for ""*"":
    skip = not (name and (not vim_getbufoption(segment_info, 'buftype')))
Press ENTER or type command to continue
Error detected while processing VimEnter Auto commands for ""*"":
  File ""/home/rugal/.vim/bundle/powerline/powerline/bindings/vim/__init__.py"", line 93, in vim_getbufoption
`

I use `powerline` for a very long time and I have no idea y this could happen, as I did not encounter this before. please help me!
"
828,date segment: support day of week,2014-03-02T21:12:17Z,2014-03-02T21:15:26Z,"c:common segments, s:invalid, t:enhancement",,,"Would be nice if the date segment could format the day as weekday. 
e.g.: Mon or Tue etc.
"
827,cpu segment shows wrong values,2014-03-02T21:08:57Z,2014-08-02T18:37:06Z,"c:common segments, t:bug",,,"the cpu segment shows wrong values
- on osx 10.7.5
- tmux theme
"
826,internal ip segment,2014-03-02T21:07:03Z,2014-08-23T21:32:43Z,"a:segment, c:common segments, t:enhancement",,,"Would be nice to have the internal ip as segment like the external ip
"
825,powerline and powerline-status in pip,2014-02-28T04:10:04Z,2014-02-28T07:11:50Z,"c:documentation, t:enhancement",,,"hi,
It is not issue, but is advice.

May you add some tips in README for install powerline with PIP?

I install powerline with command ""pip install powerline"", but it is another project. So I search it in PyPi and find the real name is powerline-status. 

It confuse me for long time... Why powerline don't show?  Where is error? 
"
824,For and while loops terminate with KeyError: 'continuation',2014-02-27T19:57:01Z,2014-03-03T17:11:26Z,"c:b:shell, t:bug",KeyError,KeyError: 'continuation',"Steps to reproduce:
1.  Load powerline shell
2.  Attempt to loop:

$ while true; do
2014-02-27 13:56:02,899:ERROR:shell:powerline:Failed to render: 'continuation'
Traceback (most recent call last):
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/**init**.py"", line 435, in render
    return self.renderer.render(_args, *_kwargs)
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/renderers/zsh_prompt.py"", line 38, in render
    _args, *_kwargs
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/renderer.py"", line 204, in render
    theme = self.get_theme(matcher_info)
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/renderers/zsh_prompt.py"", line 48, in get_theme
    match = self.local_themes[matcher_info]
KeyError: 'continuation'
2014-02-27 13:56:03,014:ERROR:shell:powerline:Failed to render: 'continuation'
Traceback (most recent call last):
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/**init**.py"", line 435, in render
    return self.renderer.render(_args, *_kwargs)
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/renderers/zsh_prompt.py"", line 38, in render
    _args, *_kwargs
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/renderer.py"", line 204, in render
    theme = self.get_theme(matcher_info)
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/renderers/zsh_prompt.py"", line 48, in get_theme
    match = self.local_themes[matcher_info]
KeyError: 'continuation'
"
823,Bad/partial powerline fonts in st and urxvt. No problem with gvim or lxterminal,2014-02-26T11:37:29Z,2014-04-30T09:04:31Z,"c:font, t:bug",,,"I really don't know how to solve the issue of powerline fonts not working properly in my system.

I use gentoo, with awesome as window manager and urxvt as the terminal emulator.

The problem / paradox is the following:

urxvt does not fully show the > and < separators:
![urxvt-inconsolata](https://f.cloud.github.com/assets/674675/2269495/be60c652-9eda-11e3-88d0-75331e19454f.png)

st neither does it:
![st-inconsolata](https://f.cloud.github.com/assets/674675/2269499/cb749bf2-9eda-11e3-97d4-d39a905b126b.png)

vim from inside each of the terminals is not working properly neither:
![vim_from_urxvt](https://f.cloud.github.com/assets/674675/2269500/d4c9e2b6-9eda-11e3-8b30-a6526860d635.png)
![vim_from_st](https://f.cloud.github.com/assets/674675/2269501/d99366a0-9eda-11e3-81ea-148898b7453a.png)

When I open a tmux session in each of the consoles, urxvt still gives trouble with everything:
![tmux_from_urxvt](https://f.cloud.github.com/assets/674675/2269506/e29bb220-9eda-11e3-9597-a39dfbd593ce.png)

but st only has problems with separators (but not with clocks, etc):
![tmux_from_st](https://f.cloud.github.com/assets/674675/2269511/ed336818-9eda-11e3-946b-4a66a54ba8cc.png)

In addition to st, I have also tried lxterminal, and it works perfectly out of the box:
![lxterminal](https://f.cloud.github.com/assets/674675/2269514/f7d2ea50-9eda-11e3-8e75-d1fe20d97424.png)

More? Yes. Gvim shows the font and the > and < separators properly
![gvim](https://f.cloud.github.com/assets/674675/2269517/feb3883e-9eda-11e3-9862-05502386fdaf.png)

So I am sure that there is something that escapes out of my mind. Why lxterminal works but not st and urxvt? Well probably it must be related to the font. Well, then, why st works partialy when a tmux session is working inside the emulator, but not urxvt?

I am using urxvt version 9.19 with unicode3 and xft compiled in. I have tried many specifications of different fonts (Meslo, with and without ""for powerline"" replacemenets, with different pixelsizes as suggested by https://github.com/Lokaltog/powerline/issues/453#issuecomment-16825527, obviously running `xrdb -merge .Xdefaults` each time), but with no luck or better results. The screenshots have been taken with the following fonts specifications:

```
URxvt*font: xft:Inconsolata,pixelsize=8,xft:Inconsolata for Powerline:pixelsize=8
URxvt*boldFont: xft:Inconsolata:bold:pixelsize=8,xft:Inconsolata for Powerline:bold:pixelsize=8
```

st with:

```
static char font[] = ""Inconsolata:pixelsize=12:antialias=false:autohint=false"";
```

As for the font installation method, I have tried both the Fontconfig (lxterminal and st should work with that method according to http://askubuntu.com/questions/283908/how-can-i-install-and-use-powerline-plugin/283909#283909) and the ""patched font"" version for ""urxvt"".

Thank you.
"
822,Some fixes for powerline.lib.threaded,2014-02-23T10:45:57Z,2014-02-26T04:28:45Z,,,,"Should fix #813 as well as other problems found when creating test suite.
"
821,Add non-linux filesystem watchers,2014-02-22T20:18:57Z,2014-08-30T12:01:08Z,"c:core, t:enhancement",,,"It seems that using [pyuv](https://pypi.python.org/pypi/pyuv/) is easier then using `PyQt` for this task I once tried to support.
"
820,Add support for battery on more systems,2014-02-22T11:10:43Z,2014-08-06T09:10:55Z,"c:common segments, t:enhancement",,,"When searching for generic solution already present in other module I found two other specific ones: [`acpi`](http://sourceforge.net/projects/acpiclient/) command-line utility and wmi module as shown in [this SO question](http://stackoverflow.com/questions/16380394/getting-battery-capacity-windows-with-python).
"
819,Some common segment issues,2014-02-22T11:05:48Z,2014-03-13T17:12:12Z,"c:common segments, t:bug",,,"This is the result of review for #816:
- `cwd` does not allow to configure string used in place of omitted directories. As it is uncommon unicode U+22EF MIDLINE HORIZONTAL ELLIPSIS `⋯` it means that to add `ascii` top theme from #783 it must be moved to cwd arguments.
- `date` is not referencing `istime` argument in documenation`
- `fuzzy_time` may make use of U+2019 for apostrophe in `o’clock`.
- `external_ip` documentation references suggested URIs not under documentation of argument that it is for.
- `battery` segment should probably be configured to use battery other then `BAT0`.
"
818,Missing attribute in VimPowerline class?,2014-02-22T07:07:52Z,2014-06-28T16:23:28Z,"c:core, t:bug",AttributeError,AttributeError: 'VimPowerline' object has no attribute 'renderer',"All of a sudden, this error has been lighting up my vim windows. It keeps recurring (like a loop) too so I can't even get into vim without deleting the plugin folder and restarting vim.

```
E858: Eval did not return a valid python object
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/mnt/local/vhome/brian/dotfiles/vim/bundle/powerline/powerline/vim.py"", line 145, in new_window
    return self.render(window, window_id, winnr)
  File ""/mnt/local/vhome/brian/dotfiles/vim/bundle/powerline/powerline/__init__.py"", line 372, in render
    return self.renderer.render(*args, **kwargs)
AttributeError: 'VimPowerline' object has no attribute 'renderer'
```
"
817,Tmux binding left dividers are not those from config.json,2014-02-22T01:30:20Z,2014-11-29T17:15:20Z,"c:b:tmux, t:bug",,,"When tmux is configured to use powerline, left dividers are hard coded in
""powerline / powerline / bindings / tmux / powerline.conf"" 
and do not rely on those in $HOME/.config/powerline/config.json

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/1977728-tmux-binding-left-dividers-are-not-those-from-config-json?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
816,Split data-gathering functions into separate package?,2014-02-21T11:03:20Z,2014-11-29T22:04:39Z,"c:common segments, s:wontfix, t:question",,,"I've been working a bit on a [window manager statusline concept](https://github.com/Lokaltog/wkline) with more focus on aesthetics and flexibility the last couple of days. I want to implement similar functionality as Powerline, but since wkline is based on a webkit view and HTML/CSS/JS to display the contents I won't have to rely on the ""segment"" concept, I can use templates instead.

I'm going to send system information, weather, etc. to the statusline from a python script. Instead of duplicating all the powerline segments that fetch this data, I suggest that we refactor all data-gathering to a separate package that can be used as a general package for retrieving system information for several projects.

An example:

``` python
def hostname(pl, segment_info, only_if_ssh=False, exclude_domain=False):
    '''Return the current hostname.

    :param bool only_if_ssh:
        only return the hostname if currently in an SSH session
    :param bool exclude_domain:
        return the hostname without domain if there is one
    '''
    if only_if_ssh and not segment_info['environ'].get('SSH_CLIENT'):
        return None
    if exclude_domain:
        return socket.gethostname().split('.')[0]
    return socket.gethostname()
```

This could be split and refactored into e.g. a `powerline-lib` package with a file that looks something like this:

``` python
def hostname(only_if_ssh=False, exclude_domain=False, ssh_client=None):
    '''Return the current hostname.

    :param bool only_if_ssh:
        only return the hostname if currently in an SSH session
    :param bool exclude_domain:
        return the hostname without domain if there is one
    '''
    if only_if_ssh and not ssh_client:
        return None
    if exclude_domain:
        return socket.gethostname().split('.')[0]
    return socket.gethostname()
```

And powerline could use this function like this:

``` python
import powerlinelib
def hostname(pl, segment_info, only_if_ssh=False, exclude_domain=False):
    return powerlinelib.hostname(only_if_ssh, exclude_domain, ssh_client=segment_info['environ'].get('SSH_CLIENT'))
```

I realize this will add a bit of code, but it would also allow other projects to easily use stuff we've written for powerline, and in the case of larger segments like media info, etc. this could save other projects from duplicating or re-inventing the wheel.

The idea is to decouple this completely from powerline, so a more generic name could  work better (`desktopinfo`, `systeminfo`, `infoutils`, something like that).

This could also isolate tests better since tests for info segments won't have to rely on powerline and segment info anymore and we could test only the raw return data (not sure if this is really a benefit?)

What do you guys think?

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/2051122-split-data-gathering-functions-into-separate-package?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
815,Add min_cursor_columns option,2014-02-21T04:20:54Z,2014-08-10T17:10:17Z,"c:b:shell, t:enhancement",,,"I remember this enhancement already discussed: make powerline be able to automatically leave some space for the user cursor in various shell implementations. I do not think this is doable without powerline-daemon so it depends on it being merged.

Proposed location: themes.
"
814,Add min_cursor_columns option,2014-02-20T17:52:52Z,2014-08-10T13:23:12Z,"c:b:shell, s:duplicate, t:enhancement",,,"I remember this enhancement already discussed: make powerline be able to automatically leave some space for the user cursor in various shell implementations. I do not think this is doable without powerline-daemon so it depends on it being merged.
"
813,email_imap_alert runs too slow on non-first runs,2014-02-20T17:50:52Z,2014-02-26T04:28:45Z,"c:common segments, t:bug",,,"From #367:

> It may be the `email_imap_alert` segment that screws this up. I tested and the weather segment appears to work even with `update_first = True`, but the email segment takes a while even on subsequent renderings:
> 
> ```
>  In[4]  s=monotonic() ; p.render() ; print (monotonic()-s)
> 1.0669466110011854
> 
>  In[5]  s=monotonic() ; p.render() ; print (monotonic()-s)
> 0.8750602299987804
> 
>  In[6]  s=monotonic() ; p.render() ; print (monotonic()-s)
> 0.8130072499989183
> ```

I confirmed that this problem persists: 6 seconds on first run, 0.1 - 0.4 on subsequent with email_imap_alert, 4/0.001-0.009 without. But that issue is not devoted to email_imap_alert problems and its topic was already resolved.
"
812,branch segment not working under ZSH,2014-02-20T12:26:26Z,,"c:VCS support, t:bug",,,"The line in `powerline.lib.vcs.__init__.py`...

`globals()[vcs] = getattr(__import__('powerline.lib.vcs', fromlist=[vcs]), vcs)`

results in the exception

`(<type 'exceptions.AttributeError'>, AttributeError(""'module' object has no attribute 'git'"",), <traceback object at 0x1081fd9e0>)`

This is using Mac, Homebrew zsh, Python 2.7.

Running the `debug()` manually works fine however.

Hacking the code and doing a `dir()` on the result of `__import__` shows only the members of `__init__.py` appearing, none of the git, bzr, mercurial stuff appears.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051125-branch-segment-not-working-under-zsh?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
811,Cursor positioning with fish bindings,2014-02-19T13:10:23Z,2014-02-19T21:27:06Z,"c:b:shell, t:bug",,,"I'm having some issues with a machine running Debian Jessie, and the Powerline fish bindings. The cursor position is all over the place, as is the positioning of the right-aligned information (git branch, return codes etc). This box has a fairly minimal install so I may just be missing some crucial package.

Screenshot below is from putty on windows, but the problem also occurs in urxvt and lxterminal on the machine itself. Running in a tmux session produces exactly the same behaviour. On all lines, where the text has printed is where the cursor was placed. Note that cd to a git directory removes part of the prompt, and that a returned error resets the cursor position.

![powerlinefishakasha](https://f.cloud.github.com/assets/2513484/2206698/1cfd6a72-9967-11e3-8656-5f642cf3e412.png)
"
810,Powerline is very slow on my server,2014-02-18T21:38:48Z,,"c:VCS support, t:bug",,,"When I am inside a git repository especially, it seems exceptionally slow.

I have narrowed it down to this bit that is filtering the segments:

https://github.com/Lokaltog/powerline/blob/84765838d538468b970fa679a8e5ba6a7860bcb5/powerline/renderer.py#L208-209

With this timing code:

``` python
print(""filtering segments"")
import time
start = time.clock()
# Handle excluded/included segments for the current mode
segments = [self._get_highlighting(segment, mode) for segment in segments
    if mode not in segment['exclude_modes'] and (not segment['include_modes'] or mode in segment['include_
print(""time.clock() - start"")
print(time.clock() - start)
print(""filtered segments"")
```

I can run the `powerline` command in the terminal and see that this is the block that is taking a long time (it pauses after printing out ""filtering segments"", then the rest prints out a few seconds later)

```
$ powerline shell left -r bash_prompt
filtering segments
time.clock() - start
3.45
filtered segments
```

Let me know if there is anything you'd like me to try!
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051126-powerline-is-very-slow-on-my-server?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
809,Add support for [R]PS2 and PS3 prompts,2014-02-16T17:14:01Z,2014-02-16T17:26:29Z,"c:b:shell, t:enhancement",,,"Fixes #771
"
808,Remove unrelated tips from documentation,2014-02-16T00:43:20Z,2014-08-02T23:40:28Z,"c:documentation, t:bug",,,"Powerline documentation contains “Fix terminal timeout when pressing escape” tip which does not seem related to powerline at all: there is [Vim tips wiki](http://vim.wikia.com/wiki/Vim_Tips_Wiki) for this.
"
807,Improved troubleshooting,2014-02-15T20:39:59Z,2014-02-15T20:43:04Z,"c:b:vim, t:enhancement",,,"This PR contains improved troubleshooting for vim bindings. It also makes powerline loadable with `set compatible`.
"
806,Shell fixes: TMUX support for su[do] and modes on old zsh,2014-02-15T16:46:12Z,2014-02-15T17:05:41Z,"c:b:shell, t:bug",,,"Contains fixes for #800 and #801.
"
805,Update email imap segment to allow ENV vars usage for credentials,2014-02-14T23:25:06Z,2014-02-15T15:27:15Z,"c:common segments, t:enhancement",,,"This pull request fixes the issue #804 

It allows the user to load its credentials from environment variables instead of the json file. Why ? Because I use almost the same dotfiles between my personal and my professional computers. So I had  to duplicate the whole powerline theme just for the email imap segment. 

I think a good alternative could be to load the credentials from the environment, if not defined in the json file. What do you think about that ?
"
804,imap checker credentials,2014-02-14T21:49:34Z,2014-02-15T18:02:44Z,"c:common segments, t:enhancement",,,"Hi,

I tried to use the email checker segment. It works well. But, there is a way to move my credentials outside of the json ? In an environment variable for example ?

If it's not possible yet, do you think it could be an approved feature ?

Have a good day,
Kevin
"
803,not all symbols are working properly,2014-02-14T13:31:57Z,2014-02-15T11:13:57Z,"c:font, t:bug",,,"I have been trying to install powerline for gnome-terminal.
It seems some characters works perfectly and some are not ... like the branch one
"
802,Update font patching documentation,2014-02-14T04:49:27Z,2014-02-14T04:52:52Z,,,,"Update reference to where fontpatcher.py is located
"
801,"TMUX reports ""failed to connect to server: Permission denied"" when switching user under Powerline/TMUX (w/ proposed fix)",2014-02-13T21:48:41Z,2014-02-15T17:05:43Z,"c:b:tmux, t:bug",,,"I have a problem with tmux throwing 6 ""failed to connect to server: Permission denied"" errors when ever I switch users. (and changing directories too I believe) At first I thought it was a socket thing (lsof -U | grep tmux) but it seems that the real problem occurs when .../bindings/zsh (or bash) executes

...powerline...tmux...setenv()

specifically the lines

tmux setenv -g TMUX_ ""$1""_ ...
tmux refresh -S

it seems that executing these commands with different users is throwing a permission error except for when root or the originating user does it. I could have a bad implementation, but I don't think that's the case. I want multiple users with powerline to be able to access the tmux session via 'su', with out throwing the error, as this is completely possible when not using powerline.
"
800,bindkey: too many arguments,2014-02-11T16:59:19Z,2014-02-15T17:05:43Z,"c:b:shell, t:bug",,,"this still works for me:
bb343765b0a04493572e61426c52311d30f035bb

doesn’t work anymore:
a4e8f36f3635c20283b53f72db1ba822f76f9025

(was merged 16 days ago)

it spills errors like this:

_powerline_precmd:bindkey:12: too many arguments for -l
_powerline_set_true_keymap_name:bindkey:2: too many arguments for -l
"
799,Fix foggy weather symbol.,2014-02-10T21:04:57Z,2014-08-15T17:37:28Z,"c:common segments, t:enhancement",,,"Use a better available ""Medium Shade"" unicode symbol instead of
esoteric ""Cuneiform Sign Uri3"", which is hardly available in many
standard fonts.
"
798,"Keygen: Error-reporting: If the XUL is opened without a key object, the window should show an error message",2014-02-10T20:45:16Z,2014-02-11T03:00:44Z,,,,
797,Keygen: Only the main identity is in the key. All the other *selected* identities are discarded.,2014-02-10T20:44:58Z,2014-02-11T03:00:44Z,,,,
796,Keygen: Using the Comment Field for the new key leads to an error message,2014-02-10T20:44:48Z,2014-02-11T03:00:44Z,,,,
795,"Keygen: When clicking on Abort, the key generation is not terminated but continues in the background",2014-02-10T20:44:19Z,2014-02-11T03:00:13Z,"s:invalid, t:bug",,,
794,'foggy' symbol in weather segment,2014-02-10T20:33:21Z,2014-09-26T18:26:47Z,"c:common segments, t:enhancement",,,"Apparently powerline weather segment uses quite esoteric Unicode symbol for 'foggy' weather condition. As of now it is ""Cuneiform Sign Uri3"" (see rendering http://www.marathon-studios.com/unicode/U12336/Cuneiform_Sign_Uri3). Is it really meant to be that way? Such symbol group (ancient sumer writing) is absent from most fonts, and thus I propose to substitute this symbol for something more ""traditional"".

My suggesttions:
1) U+2592 MEDIUM SHADE (http://www.fileformat.info/info/unicode/char/2592/index.htm)
2) U+1F301 FOGGY (http://www.fileformat.info/info/unicode/char/1f301/index.htm), might be better suited, but still a bit esoteric (can not be rendered on freshly installed Ubuntu 13.10).
"
793,solved: ZSH+CURSOR position shifts to the right w/ MASTER branch in GIT repository for ZSH.,2014-02-09T21:11:24Z,2014-02-12T05:01:32Z,"c:b:shell, t:bug",,,"There is a problem with powerline & zsh (console independent from what I can tell).

The problem is there is a space missing between the powerline_command (colored bar) and the cursor when ever I run zsh. This is not a problem when I am in a GIT folder however, as the cursor comes out 1 space in front in that case (probably has something to do with the git status/tree that pops up opposite the cursor).

This problem does not occur in bash + powerline, as there is a space in between the powerline_command and the prompt/cursor at all time.

This problem is really only a problem during tab completion and some commands because the cursor will set itself properly (most rearward position) upon tab completion leaving the character fixed between the powerline_command and input prompt.

example.
(tab completion shifts cursor right and leaves artifact (extra L)
 :: > directory >LLS -l  
where it would be 
:: > directory > LS -l 
in a git directory or bash

$PS1 = ""$($POWERLINE_COMMAND shell left -r zsh_prompt --last_exit_code=$? --last_pipe_status=""$pipestatus"" --jobnum=$_POWERLINE_JOBNUM)""
"
792,Improved battery segment:,2014-02-09T09:43:29Z,2014-02-09T09:48:32Z,"c:common segments, t:bug",,,"- Ignore `steps` if gamify is False.
- Add `full_heart` and `empty_heart` keywords.
- Document `format` keyword.
- Replace `draw_soft_divider` with `draw_inner_divider`.
"
791,Set battery percent display default steps to 100,2014-02-09T05:07:14Z,2014-02-09T09:29:43Z,"c:common segments, t:bug",,,"If gamify is true and steps is not defined then steps defaults to 5, if gamify is false and steps is not defined then it defaults to 100. Added some additional tests.
"
790,Fix travis CI build,2014-02-08T21:14:55Z,2014-02-08T21:31:44Z,"c:tests, t:bug",,,"Currently there are some errors.
"
789,convert file name to UTF-8 in common cwd segment,2014-02-08T18:42:58Z,2014-02-08T19:35:14Z,"c:common segments, t:bug",,,"Proposal to fix #788
"
788,cwd fails for non ASCII ,2014-02-08T17:06:17Z,2014-02-08T19:42:56Z,"c:common segments, t:bug",UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xcc in position 67: ordinal not in range(128),"When changing to a path containing a non ASCII character (an umlaut for example) powerline fails like this:

```
2014-02-08 17:59:04,964:ERROR:shell:cwd:Exception while computing segment: 'ascii' codec can't decode byte 0xcc in position 67: ordinal not in range(128)
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/theme.py"", line 87, in get_segments
    contents = segment['contents_func'](self.pl, segment_info)
  File ""/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/segment.py"", line 86, in <lambda>
    contents_func = lambda pl, segment_info: _contents_func(pl=pl, segment_info=segment_info, **args)
  File ""/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/segments/common.py"", line 105, in cwd
    cwd = re.sub('^' + re.escape(home), '~', cwd, 1)
  File ""/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/re.py"", line 157, in sub
    return _compile(pattern, flags).sub(repl, string, count)
UnicodeDecodeError: 'ascii' codec can't decode byte 0xcc in position 67: ordinal not in range(128)
```

Environment: Powerline for bash, bash 4.2.45, Mac OS X

Looks like #87 was a similar issue.
"
787,Added OSX battery support,2014-02-07T18:13:12Z,2014-02-08T22:23:42Z,"c:common segments, e:macos, t:enhancement",,,"Borrowed code from duckpunch/osx-powerline-battery to add battery support when using powerline on OSX.
"
786,Anyway to make this work with sudoedit?,2014-02-06T16:48:07Z,2014-08-03T09:41:18Z,"c:b:vim, e:linux, t:bug",,,"Keeps giving me the set the python path error when invoking with sudoedit. Should I just turn off? Can I modify the vimrc so it doesn't load the plugin when I'm using sudo? I set the path in /etc/profile, also tried in /etc/bash.bashrc. Neither worked. When I sudo into root and run vim, I don't get the error. I don't see the powerline either, maybe the last_status thing doesn't carry over?
"
785,fish support and a few better cmus support,2014-02-05T11:50:18Z,2014-02-05T13:59:10Z,"c:b:shell, c:players, t:enhancement",,,"After a few trying powerline with cmus, i figured out some tweaks that makes things a little faster, and also found a unicode bug while playing japanese songs.

The fish script is directly converted from bash version.
"
784,[WIP] Configuration changes,2014-02-04T18:19:40Z,2014-07-12T10:25:49Z,"c:core, t:enhancement",,,"TODO list:
- [x] #770: Colorscheme hierarhy.
- [x] #770: Group aliasing.
- [x] #770: Port colorschemes.
- [x] #770: Test new functionality.
- [x] #770: Update documentation.
- [x] #770: Support powerline-lint.
- [ ] #3: Add basic groups.
- [ ] #418: Configuration merging.
- [ ] #418: Test new functionality.
- [ ] #418: Update documentation.
- [ ] #418: Support powerline-lint.
- [ ] #783: Themes hierarchy.
- [ ] #783: Port themes.
- [ ] #783: Test new functionality.
- [ ] #783: Update documentation.
- [ ] #783: Support powerline-lint.
- [ ] Fix existing tests.
"
783,Revised themes,2014-02-04T18:14:42Z,2014-08-06T09:04:51Z,"c:core, t:enhancement",,,"Just like with themes I suggest to have themes hierarchy. Main reasons:
1. Make it easy to get rid of powerline fancy characters.
2. Some bit of deduplication.

Changes to `config.json`:
1. Move `common` dictionary keys to themes.
2. Add `default_top_theme` key with string value.
3. Add `ext/{ext}/top_theme` key with string value.

Hierarchy:
1. `themes/{top_theme}.json`. Contains `segment_data` key with strings, `dividers` and `spaces` keys moved from `config.json/common`. Themes available by default:
   1. `powerline.json` or `fancy.json`: uses symbols defined in powerline fonts.
   2. `unicode.json`: uses unicode symbols commonly found in fonts.
   3. `ascii.json`: uses only symbols from ASCII table.
   4. (optional) `powerline_compact.json` and/or `unicode_compact.json`: contains reduced number of spaces.
2. `themes/{ext}/__main__.json`. Contains keys for renderers like `term_truecolor`.
3. `themes/{ext}/{theme}.json`. Contains what is left: list of segments, some `segment_data` which does not fit in top-level theme (or maybe a zero level for this: I am talking about things like user/password for IMAP segment, `only_if_ssh` for hostname and `dir_limit_depth` for cwd segments?).
"
782,"Add i3 bindings, segments and renderer",2014-02-04T10:02:32Z,2014-02-09T12:46:35Z,"c:b:wm, t:enhancement",,,"I added a binding, a renderer and a segment for workspaces to work with the i3 window manager.
"
781,"Recreate args dictionary with str() arguments, use closures",2014-02-03T17:54:25Z,2014-02-03T17:59:09Z,"c:core, t:bug",,,"Fixes #776
"
780,Add cpu_load_percent colors to tmux,2014-01-31T10:51:09Z,2014-02-03T16:47:22Z,"c:b:tmux, t:enhancement",,,"Definitions for cpu_load_percent segment colors and gradient where missing
from default tmux color definitions, rendering this segment unusable for tmux
""out-of-the-box"".
"
779,Can't enable weather segment,2014-01-30T13:05:38Z,2014-01-30T13:44:56Z,"c:configuration, s:invalid, t:bug",,,"I'm trying to enable weather segment but with no success. I added this code

``` json
{
    ""name"": ""weather"",
    ""priority"": 50,
    ""args"": {
        ""unit"": ""F"",
        ""location_query"": ""oslo, norway""
    }
}
```

at the end of my theme file. When I start MacVim I get an error

Error detected while processing VimEnter Auto commands for ""*"":
2014-01-30 14:13:11,122:ERROR:vim:segment_generator:Failed to generate segment from {u'priority': 50, u'args': {u'location_query': u'oslo, norway', u'u
nit': u'F'}, u'name': u'weather'}: 'module' object has no attribute 'weather'

I've read powerline documentation but I'm still confused. Any help will be appreciated.
"
778,Port spotify mac script from tmux-powerline (revised),2014-01-30T05:15:31Z,2014-02-03T17:03:40Z,"c:players, t:enhancement",,,"I've modified @Xlator's PR https://github.com/Lokaltog/powerline/pull/699 with the modifications you recommended (removing color codes, moving the applescript methods out into it's own lib file, removing extra new lines after method).

I also got the segment working out of the box. I was having problems with it displaying (needed the color scheme definition).

Please review my code as I'm not a python developer. I have vim set up to remove trailing spaces and use two space indention. I noticed the contributing guidelines said tabs, so I took that into consideration when editing (double check me though).

I'm not familiar with flake8 or running test suites in python. My code is almost a direct copy of @Xlator's code with some minor changes/deletions so I think it's fine. I'd recommend setting up travis to run your test suite and other contributing tools/checks.

By the way, I tried getting the included spotify segment working but dbus is a pain on OS X. I got dbus, dbus-glib and dbus-python installed so that the script wouldn't complain the lib was missing but for some reason it would error at [`powerline/segements/common.py#L992`](https://github.com/Lokaltog/powerline/blob/a4e8f36f3/powerline/segments/common.py#L992). I didn't debug it any further though.
"
777,Fix test_config_reload race conditions,2014-01-30T04:59:17Z,2014-01-30T05:09:28Z,,,,"First attempt: just sleep more.

Ref #772.
"
776,Error at launch wiith gnome-terminal,2014-01-29T13:28:51Z,2014-02-03T17:59:09Z,"c:core, t:bug",TypeError,TypeError: hostname() keywords must be strings,"I have an error at start of gnome-terminal with powerline activated
gnome-terminal : 2.28.2
last version of powerline
python: 2.6.2

```
2014-01-29 12:15:20,725:WARNING:shell:mode:No or empty POWERLINE_MODE 
variable
2014-01-29 12:15:20,725:ERROR:shell:hostname:Exception while computing segment: hostname() keywords must be strings
Traceback (most recent call last):
  File ""/home/laurent/.local/lib/python2.6/site-packages/powerline/theme.py"", line 89, in get_segments
    contents = segment[str('contents_func')](pl=self.pl, segment_info=segment_info, **segment[str('args')])
TypeError: hostname() keywords must be strings
2014-01-29 12:15:20,726:ERROR:shell:cwd:Exception while computing segment: cwd() keywords must be strings
Traceback (most recent call last):
  File ""/home/laurent/.local/lib/python2.6/site-packages/powerline/theme.py"", line 89, in get_segments
    contents = segment[str('contents_func')](pl=self.pl, segment_info=segment_info, **segment[str('args')])
TypeError: cwd() keywords must be strings
```

I dont have error in vim
"
775,Fontpatcher location,2014-01-29T08:43:17Z,2014-01-29T09:05:50Z,,,,"Hello,

Im trying to find fontpatcher on the repo, searched in all folder and i can't find it. 
Is it deleted or ?
"
774,Powerline Vi-mode zsh issues,2014-01-29T06:36:52Z,2014-01-29T20:47:36Z,"c:b:shell, t:bug",,,"Powerline recently updated the zsh shell with vi-mode indicator. It looks nice, but it started throwing off a warning `No such shell function 'powerline_save_zle-keymap-select'`. 
Can anyone tell how can I get rid of it?
"
773,Add tcsh support,2014-01-26T19:59:21Z,2014-01-26T20:24:48Z,"c:b:shell, t:enhancement",,,"Ref #762
"
772,Builds sometimes fail due to race conflict in test_config_reload,2014-01-26T18:36:23Z,2014-08-15T17:39:08Z,"c:tests, t:bug",,,"Examples: https://travis-ci.org/Lokaltog/powerline/builds/17654457, https://travis-ci.org/Lokaltog/powerline/jobs/17654459.
"
771,Add support for prompts other then PS1,2014-01-26T17:14:26Z,2014-02-16T17:26:29Z,"c:b:shell, t:enhancement",,,"Like ipython zsh also has prompt that is used when shell needs more information to complete a command (e.g. when there is unmatched quote and it expects string to continue). It would be good to support this, though saving information about previous prompt width is not so easy (but it will look nicer if we had it). Prompt variables:
- PS2: continuation prompt.
- RPS2: like above, but on the right side.
- PS3: used in `select` loop
- SPROMPT: spelling correction prompt. Do not think we actually need this.
"
770,Revised colorschemes,2014-01-26T13:32:08Z,2014-07-12T10:35:50Z,"c:configuration, c:core, t:enhancement",,,"It appears that current colorscheme implementation contains too much copy-paste and make adding new segment much harder as they require to place definitions for it in all `colorschemes/*/*.json` files (for common segments).

I would suggest using thre-level colorscheme structure:
1. `colorschemes/*.json` for top level colorschemes which should contain almost all definitions,
2. `colorschemes/{ext}/main.json` for extension-specific aliases and
3. `colorschemes/{ext}/*.json` for extension+mode-specific definitions

(Listed in priority order: `colorschemes/*.json` is always overridden by `colorschemes/{ext}/*.json`.)

Colorschemes should be extended to be able to contain group aliases: if group looks not like `""foo"": {""fg"": ""color1"", …}`, but like `""foo"": ""bar""` then it is an alias for group `bar`. This is what will be mainly placed in `colorschemes/{ext}/main.json`: such aliases for extension-specific groups which are colorscheme-agnostic (at least this is exactly how I used to add new segments to various colorschemes).

`colorschemes/{ext}/*.json` are supposed to contain almost only `""mode_translations""` dictionary. `colorschemes/{ext}/main.json` **_must**_ contain only aliases (and possibly aliases in `mode_translations`), this will be checked by `powerline-lint`.

Color lookup will be the following sequence:
1. Get group definition from merged configuration for the current mode.
2. If 1. fails get it from main groups dictionary.
3. If obtained group definition is a string, go to 1.
4. For each color replace it according to the current mode if appropriate.

. Colorscheme lookup will like the following:
1. Find files `colorschemes/{name}.json` and `colorscheme/{ext}/{name}.json`.
2. If no files were found print a error message and show error message in place of prompt. If only one of the files was found it is OK.
3. Find file `colorschemes/{ext}/main.json`. It is OK if it was not found.
4. Merge found files with `mergedict` according to their priority.

Ref #221 for an example of issue that shows that this is needed. I will ref more similar open issues as I find them.
"
769,Documentation structure,2014-01-25T14:36:36Z,2014-08-02T23:40:27Z,"c:documentation, t:enhancement",,,"Part of the reason why the docs can be hard to navigate is that they may be grouped in a non-intuitive way. Examples are the common installation docs mixed with application-specific prompt configuration docs, and OS-specific installation docs with some common troubleshooting steps (see #767).

Here's a quick proposal to a new documentation structure:
- Overview: description of the plugin, similar to the current ""introduction""
- Installation
  - Linux
    - Requirements
    - Installation
  - OS X
    - Requirements
    - Installation
- Usage
  - Application support: update matrix to include stuff like qtile, awesome, etc.
  - Vim statusline
  - Shell prompts
    - bash
    - zsh
    - fish
  - Window manager widgets
    - awesome
    - qtile
  - Other
    - iPython prompt
    - tmux statusline
- Configuration and customization
  - Quick setup guide
  - All the other stuff from the config docs
  - Segment reference
    - Common segments
    - Vim segments
    - Shell segments
- Troubleshooting
  - Linux
  - OS X
- Tips & Tricks
- License and credits

Font patching docs will be moved to the powerline-fontpatcher repo and removed from these docs.
"
768,Add troubleshooting questions regarding updating,2014-01-25T09:06:43Z,2014-01-25T09:16:17Z,"c:documentation, t:enhancement",,,
767,Troubleshooting is too hard to locate,2014-01-25T09:02:01Z,2014-08-03T09:42:06Z,"c:documentation, t:bug",,,"Even knowing that troubleshooting is only available in some section it was hard for me to guess that it is located in installation section. Troubleshooting should be available as a separate TOC item and it would be much better if it was highlighted.
"
766,Official mirrors,2014-01-24T14:37:12Z,2014-02-18T07:23:34Z,t:enhancement,,,"**Should we maintain an official mirror of Powerline on e.g. Bitbucket?**

A couple of arguments I can think of in favor of doing this:
- Not everyone prefers github over e.g. bitbucket or gitorious.
- Recently github has been disabling repos and users who breach arbitrary terms and conditions (e.g. C+=/FSF). It could be beneficial to host the code on multiple sites in case github decides to disable this repo for some arbitrary reason.
- We could potentially get more contributions and a wider user base from people who use other sites to host their code and don't have a github profile.
- It could benefit the market/competition by contributing more traffic/users to github's  competitors (it's a drop in the ocean, but every drop counts)
- It doesn't require any extra effort to push to multiple repos as multiple urls can be added to a single git remote.
- If one of the sites that hosts the code goes down for some reason the code will be mirrored on other sites.

I can't think of many arguments against, other than the small effort of adding an extra repo to the git config, updating readmes, etc. It could also split the community and we'd have to ensure that we only have one issue tracker enabled across the repos.
"
765,bash error messages.,2014-01-24T06:24:06Z,2014-01-24T06:41:20Z,"c:b:shell, t:bug",,,"```
bash: PROMPT_COMMAND: line 1: syntax error near unexpected token `;;'
bash: PROMPT_COMMAND: line 1: `_powerline_prompt;; printf ""\033]0;%s@%s:%s\007"" ""${USER}"" ""${HOSTNAME%%.*}"" ""${PWD/#$HOME/~}""'

[herp@derp ~]$ less /etc/profile
bash: PROMPT_COMMAND: line 2: syntax error near unexpected token `;;'
bash: PROMPT_COMMAND: line 2: `_powerline_prompt;; printf ""\033]0;%s@%s:%s\007"" ""${USER}"" ""${HOSTNAME%%.*}"" ""${PWD/#$HOME/~}""'

[herp@derp ~]$ lesss /etc/bash.bashrc
bash: lesss: command not found
bash: PROMPT_COMMAND: line 3: syntax error near unexpected token `;;'
bash: PROMPT_COMMAND: line 3: `_powerline_prompt;; printf ""\033]0;%s@%s:%s\007"" ""${USER}"" ""${HOSTNAME%%.*}"" ""${PWD/#$HOME/~}""'

[herp@derp ~]$ less /etc/bash.bashrc
bash: PROMPT_COMMAND: line 4: syntax error near unexpected token `;;'
bash: PROMPT_COMMAND: line 4: `_powerline_prompt;; printf ""\033]0;%s@%s:%s\007"" ""${USER}"" ""${HOSTNAME%%.*}"" ""${PWD/#$HOME/~}""'
```

I keep getting these error messages, it started after relogging after I installed powerline. Powerline doesn't even activate.

I added this to my bashrc
`source /usr/lib/python3.3/site-packages/powerline/bindings/bash/powerline.sh`
I tried to replace it with the `. /usr/lib/etc/etc/` but it didn't work.
"
764,Use hasErrorsOrWarningsToDisplay for Syntastic,2014-01-23T18:56:26Z,2014-01-23T19:05:25Z,"c:b:vim, t:bug",,,"Reverts PR #759 based on feedback from @lcd047 in scrooloose/syntastic#950
"
763,Update documentation for VTE,2014-01-23T15:15:25Z,2014-08-02T23:40:27Z,"c:documentation, t:enhancement",,,"VTE library is not present in the table with terminal capabilities while it should be there and not vte-based xfce-terminal.

Also see [this](https://bugzilla.gnome.org/show_bug.cgi?id=704449) bug: VTE now has true color support, though in development branch only.
"
762,Add tcsh support,2014-01-23T15:11:13Z,2014-01-26T20:24:48Z,"c:b:shell, e:linux, t:enhancement",,,"According to [Ubuntu Popularity Contest](http://popcon.ubuntu.com/) tcsh is five times more popular (based on installations, nine times more popular based on votes) then fish.
"
761,Add powershell support,2014-01-23T12:03:00Z,,"c:b:shell, e:windows, t:enhancement",,,"Powershell has support for colored prompts. It also has some support for interacting with C# programs meaning that (with the help of IronPython) we can cope without powerline-daemon.

I have quickly looked at the issue, but have not gone any further then fixing `powerline.lib.monotonic` in IronPython (no ctypes available, at least not on Mono). Do not have enough knowledge to do this job though.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051140-add-powershell-support?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
760,different render between xterm and xfce terminal,2014-01-23T08:01:57Z,2014-01-23T08:11:55Z,"c:font, e:linux, t:bug",,,"Xfce-terminal
![vimxfceterminal](https://f.cloud.github.com/assets/6260996/1982724/ba1f36d2-8404-11e3-8fe6-63df19f251c0.png)
xterm
![vimxterm](https://f.cloud.github.com/assets/6260996/1982725/bf05e7e0-8404-11e3-9965-30e4ad6e4681.png)

They're both using the same font and says and settings and whatnot. 
This is my setting for xterm: 
xterm_faceName: Lucida Console:size=10:antialias=false
xterm_font: 7x13
It's not really that a big deal, but why do they render differently?
"
759,Fix Syntastic deprecation warning,2014-01-22T20:56:31Z,2014-01-23T03:08:00Z,,,,"`hasErrorsOrWarningsToDisplay` has been deprecated in Syntastic (https://github.com/scrooloose/syntastic/commit/d629be9)

This fixes the warning that appears when opening a new file:

```
syntastic: warning: function hasErrorsOrWarningsToDisplay() is deprecated, please use !isEmpty() instead
```
"
758,bash broken with the latest git version,2014-01-22T20:31:33Z,2014-01-23T03:37:27Z,"c:b:shell, s:duplicate, t:bug",,,"I'm on fedora 64bit. I installed powerline a while ago. Worked OK. 

Since today's update (not sure about particular change that caused the trouble) to the latest git version (no reinstall, just git pull), I'm not able to use my terminal at all, error says: 

```
usage: powerline [-h] [-r MODULE] [-w WIDTH] [--last_exit_code INT]
         [--last_pipe_status LIST] [-c KEY.KEY=VALUE]
         [-t THEME.KEY.KEY=VALUE] [-p PATH] [-R KEY=""VAL""]
         ext [{left,right}]
powerline: error: unrecognized arguments: --jobnum=0
```

where my .bashrc has:

```
. ~/.vim/bundle/powerline/powerline/bindings/bash/powerline.sh
export TERM=xterm-256color
```

However for powerline in gvim things work properly. 
"
757,Decode always to ensure that the raw value read is unicode,2014-01-22T18:03:37Z,2014-06-28T18:17:07Z,"c:VCS support, t:bug",,,"This was necessary to fix an error when using powerline with Python 3.3.
"
756,Changes to bash bindings do not work on Ubuntu 12.04,2014-01-21T13:47:55Z,2014-01-21T16:26:32Z,"c:b:shell, s:invalid, t:bug",,,"The current master generates an error when started in bash from /bindings/bash/powerline.sh

```
 powerline: error: unrecognized arguments: --jobnum=0
```

Reverting c6324af back (remove the ""-p"") does not solve the issue.
"
755,Clarification on custom / user config directory,2014-01-20T03:38:08Z,2014-01-20T08:03:28Z,"c:documentation, s:invalid, t:bug",,,"Hi,

According to your [configuration documentation](https://powerline.readthedocs.org/en/latest/configuration.html), it says:

```
The default configuration files are stored in the main package. User configuration files are stored in $XDG_CONFIG_HOME/powerline for Linux users, and in ~/.config/powerline for OS X users. This usually corresponds to ~/.config/powerline on both platforms.
```

This would mean that as a user, I'd expect I could just toss a copy of the config_files directory in `~/.config/powerline` and all would work out. But it doesn't :( Powerline doesn't seem to pick up on the config. It wasn't until I did the following (gross) hack that I was able to get tmux to pick up on my custom config:

```
export POWERLINE_COMMAND=""powerline -p ~/.config/powerline/config_files""
```

I'm using tmux with your latestt `develop` branch of code. Please let me know if I can contribute any more clarification.

Once I understand the intended behavior, I'd love to submit a pull request to expand on the documentation so others like myself that are new to the project aren't so confused.

Kindly,
Daniel
"
754,Improve bash bindings,2014-01-19T13:19:22Z,2014-01-19T13:31:49Z,"c:b:shell, c:documentation, t:enhancement",,,
753,Try to workaround problems with last line in travis,2014-01-17T21:59:19Z,2014-01-17T22:13:49Z,,,,"In the recent builds it appears truncated one way or the other.
"
752,When sourcing my .zshrc file Powerline disappears,2014-01-17T15:52:16Z,2014-01-26T12:59:43Z,"c:b:shell, t:bug",,,"When I source my zshrc file (`$ source ~/.zshrc`) my zsh shell reloads fine but Powerline goes away. The only way to get it back is to close the terminal window completely and open a new window. I'm using iTerm2. Is there anything I can add to my zshrc file or Powerline config so that I can reload zsh without having to close and reopen windows? Thanks.
"
751,A lowercase f for the unit caused the weather segment to silently fail. ...,2014-01-17T05:19:01Z,2014-01-17T16:56:20Z,,,,"...Putting in a capital F works correctly
"
750,New (fixed) segment showing position of current view,2014-01-15T09:36:02Z,2014-01-23T11:51:42Z,"a:segment, c:b:vim, t:enhancement",,,"Solves #539
Fixed version of #540 and #579
Works now for split windows and wrapped lines.
"
749,"Recursion in bash when run under tmux, if user has 'z' package installed with default settings.",2014-01-14T22:39:02Z,2014-02-04T18:21:37Z,"c:b:shell, t:bug",,,"If a user has the popular ['z'](https://github.com/rupa/z) application installed in it's default configuration, they may be unable to use powerline for both bash and tmux concurrently.

'z' modifies the prompt in a manner that causes tmux sessions to run out of stack space while recursively trying to set the bash prompt.  'z' appends a command to `$PROMPT_COMMAND`, which may cause `$POWERLINE_OLD_PROMPT_COMMAND` to become equal to `_powerline_prompt`, probably recursing at https://github.com/Lokaltog/powerline/blob/develop/powerline/bindings/bash/powerline.sh#L35.  I'm not sure, I didn't get too far into it.

The immediate effect of this issue is that when the user attempts to create a tmux session, tmux loads and appears to work, but then exits a few seconds later, before the bash prompt is displayed.  

A workaround is to disable z's prompt integration by setting the environment variable `$_Z_NO_PROMPT_COMMAND` in .bashrc.

While this clearly isn't a Powerline issue, I thought I'd report it anyway since 'z' is relatively popular.  If you want me to add something to the docs just let me know and I'll issue a PR.
"
748,Add optional parameter to common.user to hide username if it's an expected value ,2014-01-13T19:21:08Z,2014-01-14T19:40:46Z,,,,"This mimics some of the functionality @agnoster had in his zsh theme. It allows you to supply a username that you are normally or put that username in an environment variable and hide the common.user segment if it's that value.
"
747,More functional tests,2014-01-13T15:48:37Z,2014-01-13T20:32:11Z,,,,"Adds functional tests for plugin themes, `powerline.sh` and `powerline.zsh`.
"
746,Not all glyphs are correctly showing in tmux,2014-01-11T16:39:03Z,2014-11-29T18:21:27Z,"c:b:tmux, c:font, s:invalid, t:bug",,,"For some reason the powerline config for tmux isn't working properly with the glyphs on the right (arrow for uptime, clock for time, clock for date). 

Stuff works fine in the vim config, but not in tmux. I'm using tmux 1.8, with Putty on Windows (set to Consolas 10pt, UTF-8). I thought perhaps the fonts on the other repo are outdated and patched one myself but this didn't work either. 

I have tried several fonts, the only one that does show proper glyphs in tmux-powerline is: ""PowerlineSymbols"" but this font is not usable for anything else (text looks odd). Since its an otf font rather than ttf this might be the issue here.

I'd however like to stick with the default Consola(s) font and the powerline glyphs for both vim and tmux.

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/1781607-not-all-glyphs-are-correctly-showing-in-tmux?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
745,Update powerline.sh,2014-01-10T21:25:35Z,2014-01-10T21:55:55Z,,,,"I think this was a typo. broke my system.
"
744,Fix tests,2014-01-10T19:22:43Z,2014-01-10T19:42:41Z,,,,"Fixes tests broken by jobnum and powerline-lint complaining about missing groups in solarizedlight.
"
743,Add Args.jobnum property,2014-01-10T19:00:40Z,2014-01-10T19:00:58Z,,,,"Fixes #742
"
742,zsh: Exception while computing segment: 'Args' object has no attribute 'jobnum',2014-01-10T18:32:48Z,2014-01-10T19:00:58Z,t:bug,AttributeError,AttributeError: 'Args' object has no attribute 'jobnum',"With current master I get the following error in zsh 5.0.2 with zpython on Mac OS X 10.9.1:

```
2014-01-10 18:50:55,405:ERROR:shell:jobnum:Exception while computing segment: 'Args' object has no attribute 'jobnum'
Traceback (most recent call last):
  File ""/Users/felix/Library/Python/2.7/lib/python/site-packages/powerline/theme.py"", line 89, in get_segments
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
  File ""/Users/felix/Library/Python/2.7/lib/python/site-packages/powerline/segments/shell.py"", line 14, in jobnum
    jobnum = segment_info['args'].jobnum
AttributeError: 'Args' object has no attribute 'jobnum'
```

I suppressed it by using `getattr(segment_info['args'], 'jobnum', None)` instead of `segment_info['args'].jobnum`, but I'm not sure that's the right solution.
"
741,Warn user when patching TrueType collections,2014-01-03T15:18:50Z,2014-01-16T17:22:53Z,,,,"A TTC file typically contains several fonts of the same font family (e.g. Menlo.ttc contains Menlo, Menlo Bold, Menlo Italic & Menlo Bold Italic).
Apparently FontForge is only able to process the first font in a TTC, so the user is advised to split the collection into separate TTFs.
"
740,network_load spacing,2014-01-01T11:20:01Z,2014-01-10T18:22:26Z,,,,"There seems to be a spacing issue with the network load. As if there were two spaces after the down arrow (and a missing space between KiB/s and up arrow).

![tmux](https://f.cloud.github.com/assets/263378/1829565/8edd1e92-72d6-11e3-835a-730af535f612.png)

Thank you for creating great software!
"
739,'branch' segment reports user name when in non-vcs user directory.,2013-12-27T20:07:09Z,2014-01-17T17:43:07Z,"s:invalid, t:bug",,,"After enabling the `branch` segment in my bash prompt, I noticed that while in my home directory or any non-vsc subdirectory of my home directory this segment shows my user name. I feel that it should instead return `None` which as I understand it should remove that segment until it detects a change.

I tried following the code to figure out why my username was being returned instead of None but could not quite understand the issue. I think the problem might be in the `guess` function of the vcs library, but I am not certain.

Complicating this issue is that when I went to something outside of my home directory, no name is generated (as expected). As best I can tell, `branch` thinks that my entire home directory is controlled by some vcs with the branch name being my user name.

I checked manually and there are no vcs directories for git, hg, or svn in my home directory.
"
738,Doesn't work with tmux,2013-12-24T11:42:28Z,2014-06-25T18:00:06Z,"c:b:tmux, t:bug",,,"Hi,

I'm using Hombrew installed versions of Vim: `7.4` (more details from `vim --version` shown below) and tmux: `1.8` (more details again listed below).

When I run Vim, powerline works fine...

![screen shot 2013-12-24 at 11 36 35](https://f.cloud.github.com/assets/180050/1805745/bba794ae-6c8f-11e3-96a7-74f0faa598fb.png)

When I run vim inside of tmux it doesn't...

![screen shot 2013-12-24 at 11 37 36](https://f.cloud.github.com/assets/180050/1805747/dd1caee4-6c8f-11e3-87fe-26b54d1a2c15.png)

The interesting part is that all my other Vundle based plugins for Vim work fine, it's just Powerline that fails?

You can see my entire set-up here: https://github.com/Integralist/Fresh-Install/tree/master/Shell

Originally I thought the problem might have been caused by the fact that I symlink my dotfiles to my Dropbox folder, but I did a new set-up on a separate Mac and I don't symlink the dotfiles and the problem still persists.
## Vim Details

``` sh
❯ vim --version
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Oct 28 2013 09:57:58)
MacOS X (unix) version
Included patches: 1-52
Compiled by Homebrew
Huge version without GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         -gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
+clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   -perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      -python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      -lua             +rightleft       +windows
+diff            +menu            +ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        -mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
   system vimrc file: ""$VIM/vimrc""
     user vimrc file: ""$HOME/.vimrc""
 2nd user vimrc file: ""~/.vim/vimrc""
      user exrc file: ""$HOME/.exrc""
  fall-back for $VIM: ""/usr/local/share/vim""
Compilation: /usr/local/bin/gcc-4.2 -c -I. -Iproto -DHAVE_CONFIG_H   -F/usr/local/Frameworks -DMACOS_X_UNIX  -Os -w -pipe -march=core2 -msse4 -mmacosx-version-min=10.9 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
Linking: /usr/local/bin/gcc-4.2   -L. -L/usr/local/lib -F/usr/local/opt/python/Frameworks -L/usr/local/lib -F/usr/local/Frameworks -Wl,-headerpad_max_install_names -o vim        -lm  -lncurses -liconv -framework Cocoa    -framework Python   -lruby.2.0.0 -lobjc   
```
## Tmux Details

``` sh
❯ brew list tmux
/usr/local/Cellar/tmux/1.8/bin/tmux
/usr/local/Cellar/tmux/1.8/etc/bash_completion.d/tmux
/usr/local/Cellar/tmux/1.8/share/man/man1/tmux.1
/usr/local/Cellar/tmux/1.8/share/tmux/ (7 files)
```
"
737,added battery support for OSX,2013-12-24T00:24:07Z,2014-02-15T21:36:58Z,"c:common segments, e:macos, t:enhancement",,,"Added support for displaying `battery` segment on OS X using the `pmset -g batt` command.
"
736,Using with zsh.,2013-12-23T08:25:29Z,2014-01-10T18:23:46Z,,,,"I've git cloned the repo and `sourc`ed `powerline/bindings/zsh/powerlie.zsh` in my .zshrc but when it's time to render the prompt I get `zsh: command not found: powerline`. What am I missing?

Ideally I'd like to simply install this with antigen (plugin manager for zsh).
"
735,Use eclass git-2; eclass git received last rites,2013-12-20T01:26:44Z,2013-12-20T09:53:21Z,,,,"See: http://thread.gmane.org/gmane.linux.gentoo.devel/86980

The former eclass git has been superseded by the new eclass git-2.
For more information please refer to the discussion on the gentoo-dev mailing list http://thread.gmane.org/gmane.linux.gentoo.devel/87881/focus=87905.

Save for inheriting the old eclass, the ebuild is compatible with the new eclass.
I've digested it, and included the updated Manifest file in this commit.
The ebuild now works again; it successfully retrieves the source from GitHub, builds and installs cleanly.
"
734,Added support for git name-rev.,2013-12-19T00:52:15Z,2014-09-26T19:04:23Z,"c:common segments, t:enhancement",,,"This results in friendlier names when we do not have a branch checked
out. e.g. master~2.
In order to distinguish between checking out a branch and checking out a
commit corresponding to the branch (i.e. a detached head), we prefix
these names with hashes. Commit hashes use the same prefix for
consistency.
"
733,the arrows appear strangely (with screenshot),2013-12-18T12:53:11Z,2014-01-19T11:10:51Z,"c:font, t:bug",,,"Hi,

The arrows in my powerline appear a bit strangely (see a screenshot here: http://i.imgur.com/hSy3t0F.png ). Do you know how to fix it? I use Ubuntu 13.10.

Thanks,

Laszlo
"
732,Can't start bash,2013-12-18T00:56:11Z,2014-02-15T21:45:31Z,"c:b:shell, t:bug",,,"Hey guys, currently my tmux is not working with the bash. It always crashes with a `Segmentation fault`. I'm using ArchLinux and I just updated to the latest version of powerline. 

```
jax  ~  tmux -c bash
Segmentation fault (core dumped)
jax  ~  yaourt -Qs powerline
local/otf-source-code-pro-powerline-git 20130309-1
    Pre-patched and adjusted version for usage with the new Powerline plugin
local/powerline-fontpatcher-git 866.db80fc9-1
    OTF/TTF font patcher for Powerline symbols
local/powerline-fonts 861a3c6-1
    Patched fonts for Powerline users
local/python-powerline-git 866.db80fc9-1
    The ultimate statusline/prompt utility.
```

Any idea?

In my `.tmux.conf` I only have `source '/usr/share/tmux/powerline.conf'
`
In my `.bashrc` I do run: `source /usr/lib/python3.3/site-packages/powerline/bindings/bash/powerline.sh` what seems to work for single of them quite fine. 
"
731,U+2B80 not displaying,2013-12-16T06:00:06Z,2014-01-17T20:58:10Z,"c:font, s:invalid, t:bug",,,"Gentoo 13.0 amd64

I've patched my original DejaVuSansMono file using fontpatcher/fontforge

I've used fontconfig and the Powerline-symbols font file/config

I've used the patched ttf files

None display the U+2B60-U+whatever characters in gnome-terminal.  I've forced the dejavusansmono font to be used, as well.  Is there something I'm missing?
"
730,Patched font didn't works,2013-12-15T18:41:13Z,2014-08-16T15:35:14Z,"c:b:vim, c:font, e:macos, t:bug",,,"Hi,

I tried several fonts and unluckly no ones seems to works :(

Here my config : 
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Dec 10 2013 16:23:48)
MacOS X (unix) version
Included patches: 1-52
Compiled by Homebrew
Huge version without GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         -gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
+clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   -perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python/dyn      +viminfo
+cscope          +lispindent      +python3/dyn     +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      -lua             +rightleft       +windows
+diff            +menu            +ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        -mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
   system vimrc file: ""$VIM/vimrc""
     user vimrc file: ""$HOME/.vimrc""
 2nd user vimrc file: ""~/.vim/vimrc""
      user exrc file: ""$HOME/.exrc""
  fall-back for $VIM: ""/usr/local/share/vim""
Compilation: /usr/bin/clang -c -I. -Iproto -DHAVE_CONFIG_H   -F/usr/local/Frameworks -DMACOS_X_UNIX  -Os -w -pipe -march=native -mmacosx-version-min=10.9 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1
Linking: /usr/bin/clang   -L. -L/usr/local/lib -L/usr/local/lib -F/usr/local/Frameworks -Wl,-headerpad_max_install_names -o vim        -lm  -lncurses -liconv -framework Cocoa       -lruby.2.0.0 -lobjc

Powerline is installed by vundle and i puted the ""set rpc""  in my .vimrc. I tried pramagata, meslo and monaco :/

Somebody got an advice ? Thanks
"
729,Add Meslo fonts to the fontconfig file,2013-12-12T19:35:01Z,2014-01-22T04:18:05Z,"c:font, t:enhancement",,,"Allow to install powerline-fonts in Meslo via fontconfig.
"
728,Powerline creates .ropeproject folder even when g:pymode_rope is set to zero,2013-12-10T09:30:02Z,2014-01-30T22:38:38Z,"c:b:vim, t:bug",,,"As I use Jedi for autocompletion and introspection, this behavior is unexpected.
"
727,shell: add window title segment to update window title,2013-12-05T17:44:30Z,2014-01-17T17:37:58Z,"c:b:shell, s:wontfix, t:enhancement",,,"Currently, powerline doesn't write any escape sequence in PS1 to update window title. This could be a great segment to add.
"
726,vim doesnot preserve the cursor column number when move across lines( using j/k).,2013-12-03T09:32:36Z,2014-03-13T17:27:49Z,"c:b:vim, t:bug",,,"when move the cursor down in vim with powerline installed ( ""|"" is the cursor)

```
first line xxx|xxx
|
|third line, quite long
```

it should be

```
first line xxx|xxx
|
third line, qu|ite long
```
"
725,Handle non-printable characters properly,2013-12-01T11:45:02Z,2014-01-26T18:04:30Z,"c:b:shell, c:b:tmux, c:b:vim, c:font, t:bug",,,"Fixes #723
"
724,Don't show '//' when using path separator,2013-12-01T11:12:06Z,2014-01-23T14:44:37Z,"c:common segments, t:bug",,,"Currently, the cwd segment is showing //etc when we are in /etc and / when we are in the root file.
This small patch fix this
"
723,Special characters (like NL) are not displayed properly,2013-12-01T10:38:44Z,2014-01-26T18:04:30Z,"c:b:vim, t:bug",,,"Consider the following script

```
vim -u NORC -N --cmd 'set rtp=~/.vam/powerline-dev/powerline/bindings/vim ls=2 loadplugins' $'a  b\nc'
```

. This makes powerline statusline be displayed like this:

![after \n replaced with ^@, in order: unexpected grey gap before powerline arrow, unexpected black gap after, black gap before `unix`, missing `x` in `unix`, blackgap after `uni`, powerline arrow replaced with `x`, missing powerline arrow, red colored `²` in place of L/N, unexpected black gap in place of `%`, powerline arrow replaced with `%`, unexpected black gap; before \n: `NORMAL` replaced with `<ORMAL`](http://img-fotki.yandex.ru/get/9311/9151298.4/0_a296f_eb1ed4ca_orig.png)
"
722,Remove Gentoo ebuild and reference raiagent overlay,2013-12-01T10:24:24Z,2014-01-10T17:16:48Z,,,,"See #719 for more details.
"
721,Extended git status in zsh prompt,2013-11-26T15:16:42Z,,"c:b:shell, t:enhancement",,,"I like the way other zsh prompts include different symbols to indicate git statuses (see, e.g., https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme or https://github.com/sorin-ionescu/prezto).

Would it be possible to implement this in the powerline zsh theme instead of just switching colors for clean vs. dirty?
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051145-extended-git-status-in-zsh-prompt?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
720,tmux: Add marker to identify the previous window.,2013-11-24T17:45:25Z,2014-09-03T07:49:49Z,"c:b:tmux, t:enhancement",,,
719,"Gentoo overlay ""raiagent"" now provides powerline and friends",2013-11-24T03:33:50Z,2014-01-10T18:32:38Z,,,,"As requested at issue #69 (""Added Gentoo live ebuild""), Gentoo overlay [raiagent](https://github.com/leycec/raiagent) now provides a working [Powerline ebuild](https://github.com/leycec/raiagent/blob/master/app-misc/powerline/powerline-9999.ebuild) as well as working ebuilds for the [patched Powerline fonts](https://github.com/leycec/raiagent/blob/master/media-fonts/powerline-fonts/powerline-fonts-9999.ebuild) and [Powerline Symbols font](https://github.com/leycec/raiagent/blob/master/media-fonts/powerline-symbols/powerline-symbols-9999.ebuild).

There's quite a bit going on here! Let's start at the top.

As noted at issue #692 (""Gentoo ebuild is unusable""), the Gentoo ebuild at ""powerline/packages/gentoo/app-misc/powerline"" is a bit broken. While fixing the issue in question is trivial (i.e., by replacing the ""git"" in the inherit line with either ""git-r2"" or ""git-r3""), a number of other nontrivial issues remain – including:
- **No installation of patched Powerline fonts.** The original ebuild provides no means of installing the patched fonts. Since urxvt users _must_ use such fonts, this is unfortunate. The revised ebuild corrects this by conditionally depending on a new ebuild [media-fonts/powerline-fonts](https://github.com/leycec/raiagent/blob/master/media-fonts/powerline-fonts/powerline-fonts-9999.ebuild) providing all such fonts via conditional USE flags. (_See next issue._)
- **Forced installation of ""PowerlineSymbols.otf"".** The original ebuild unconditionally installs the fontconfig-based font. Since urxvt users _must_ instead use patched fonts, this is a bad idea. The revised ebuild moves the installation of ""PowerlineSymbols.otf"" to a new ebuild [media-fonts/powerline-symbols](https://github.com/leycec/raiagent/blob/master/media-fonts/powerline-symbols/powerline-symbols-9999.ebuild) and then conditionally depends on _either_ media-fonts/powerline-symbols or media-fonts/powerline-fonts.
- **Manual Vim plugin installation.** The original ebuild attempts to manually install a Vim plugin. Due to ownership, permissions, and path issues, this is a bad idea. The revised ebuild inherits eclass ""vim-plugin"" to safely automate such installation.
- **Dangerous KEYWORDS.** The original ebuild insists that Powerline runs under _literally every architecture known to man_, including many architectures unsupported by underlying dependencies. This is a bad idea. Like, **a really bad idea.** Generally speaking, only architectures that have actually been tested as working should be keyworded. The revised ebuild keywords the minimal set of architectures likely to run Powerline and all dependencies (which is probably still too many): ""~amd64 ~arm ~ppc ~ppc64 ~x86 ~x86-fbsd"". I have strong doubts about that last architecture – but, being punch-drunk with sleepiness, am happy to let that one slide.
- **Spurious USE flags.** The original ebuild declares but never uses USE flags ""git"" and ""ipython"". Naturally, the revised ebuild eliminates such discrepancies.
- **Improper elog() calls.** The original ebuild's src_install() phase unconditionally calls elog(). To reduce log chatter, elog() should generally only be called in the pkg_postinst() phase protected by an ""if ! has_version ${CATEGORY}/${PN}; then ... fi"" conditional. This prevents such messages from polluting the Portage log on every ebuild upgrade. The revised ebuild ensures this, as will as correcting misspellings and occasionally awkward grammar. (_Nice._)
- **Redundant ""rm"" statements.** The original ebuild's src_install() phase manually removes each non-Python file before distutils-based installation. While not necessarily a bad idea, this does make things a bit fragile. The revised ebuild automates this into a single ""find ... -delete"" statement. (_Nice._)
- **Missing ""metadata.xml"".** The original ebuild fails to provide the requisite ""metadata.xml"" file, documenting ebuild-specific USE flags and related metadata. Naturally, the revised ebuild provides this.

In sum, the Gentoo ebuild at ""powerline/packages/gentoo/app-misc/powerline"" isn't simply unusable; it's unsafe and, in its current form, unsuitable for inclusion in the Portage tree. While the revised ebuilds provided by [raiagent](https://github.com/leycec/raiagent) correct all (_or most, anyway!_) of these issues, I'm unconvinced that backporting their changes to your offline repository would be useful to end users. So, I probably won't file a pull request. Attempting to synchronize three ebuilds between two or more repositories is probably a lost cause. I hate lost causes. (That said, you're welcome to manually import them into your repository, if you like.)

If you feel uncomfortable sending pull requests to my repository (_fair enough!_), I'd be happy to help you establish a Gentoo overlay of your own. Until then, however, future Powerline ebuilds should probably be based on the [raiagent](https://github.com/leycec/raiagent) versions.

If you find the time, I have a few last requests:
1. **Updated installation instructions for Gentoo.** It'd be helpful if the [Linux-specific installation documentation](https://powerline.readthedocs.org/en/latest/installation/linux.html) could be updated to reference the working ebuilds at [raiagent](https://github.com/leycec/raiagent) rather than the non-working ebuild in the repository. Specifically, Gentoo Powerline users should now:
   1. Add overlay ""raiagent"".
   2. Unmask ~app-misc/powerline-9999 and either ~media-fonts/powerline-fonts-9999 _or_ ~media-fonts/powerline-symbols-9999.
   3. Set appropriate USE flags for app-misc/powerline (e.g., ""app-misc/powerline vim zsh"") and if applicable media-fonts/powerline-fonts (e.g., ""media-fonts/powerline-fonts dejavusansmono menlo"").
   4. Emerge ""powerline"".
   5. Cackle in glee.
2. **Dedicated github repository for ""PowerlineSymbols.otf"".** Since other vim plugins depend on the PowerlineSymbols font (namely [vim-airline](https://github.com/bling/vim-airline)), it'd be great if the files ""10-powerline-symbols.conf"" and ""PowerlineSymbols.otf"" could be split off into either the [existing ""Lokaltog/powerline-fonts"" repository](https://github.com/Lokaltog/powerline-fonts) (_easier_) or an entirely new repository – say, ""Lokaltog/powerline-symbols"" (_harder; not too fun_).

Thanks for the great work, Lokaltog! Take care.
"
718,Powerline crashes when switching git branches for the first time,2013-11-23T07:53:02Z,2014-06-29T00:09:39Z,"c:VCS support, c:b:vim, t:bug",OSError,OSError: [Errno 22] Invalid argument,"Whenever I switch a git branch in vim for the first time upon loading, I get the following errors.

Again, to clarify, that is opening any file in a git project in vim, then switching to any other branch in the git project, but only the very first time I switch to a branch.  Switching back to the same branch or any other does not result in this error and all following usage is error free.

```
Error detected while processing function PowerlinePyeval:
line    1:
2013-11-22 23:42:02,462:ERROR:vim:branch:Exception while computing segment: [Errno 22] Invalid argument
Error detected while processing function PowerlinePyeval:
line    1:
Traceback (most recent call last):
Error detected while processing function PowerlinePyeval:
line    1:
File ""/mntlcl/vhome/brian/dotfiles/vim/bundle/powerline/powerline/theme.py"", line 89, in get_segments
Error detected while processing function PowerlinePyeval:
line    1:
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
Error detected while processing function PowerlinePyeval:
line    1:
File ""/mntlcl/vhome/brian/dotfiles/vim/bundle/powerline/powerline/segments/vim.py"", line 302, in branch
Error detected while processing function PowerlinePyeval:
line    1:
    branch = repo.branch()
Error detected while processing function PowerlinePyeval:
line    1:
File ""/mntlcl/vhome/brian/dotfiles/vim/bundle/powerline/powerline/lib/vcs/git.py"", line 176, in branch
Error detected while processing function PowerlinePyeval:
line    1:
    return get_branch_name(self.directory)
Error detected while processing function PowerlinePyeval:
line    1:
File ""/mntlcl/vhome/brian/dotfiles/vim/bundle/powerline/powerline/lib/vcs/git.py"", line 25, in get_branch_name
Error detected while processing function PowerlinePyeval:
line    1:
    return _get_branch_name(base_dir, head, branch_name_from_config_file)
Error detected while processing function PowerlinePyeval:
line    1:
File ""/mntlcl/vhome/brian/dotfiles/vim/bundle/powerline/powerline/lib/vcs/__init__.py"", line 52, in get_branch_name
Error detected while processing function PowerlinePyeval:
line    1:
    file_watcher().unwatch(config_file)
Error detected while processing function PowerlinePyeval:
line    1:
File ""/mntlcl/vhome/brian/dotfiles/vim/bundle/powerline/powerline/lib/file_watcher.py"", line 69, in unwatch
Error detected while processing function PowerlinePyeval:
line    1:
    self.handle_error()
Error detected while processing function PowerlinePyeval:
line    1:
File ""/mntlcl/vhome/brian/dotfiles/vim/bundle/powerline/powerline/lib/inotify.py"", line 132, in handle_error
Error detected while processing function PowerlinePyeval:
line    1:
    raise OSError(eno, self.os.strerror(eno))
Error detected while processing function PowerlinePyeval:
line    1:
OSError: [Errno 22] Invalid argument
```
"
717,tmux - modification of left side; battery; date; LAN,2013-11-22T15:48:16Z,2014-11-29T17:15:20Z,"c:b:tmux, t:bug",,,"1. I am trying to modify the colors of the left side of the tmux status bar, i.e. the segment displaying the session name and the active window. I could not find definitions for these segments in the /colorschemes/tmux/default.json.
   Modifying the segment displaying the session name works with standard tmux commands, but I am not able to change the color of the active window.
2. Using the battery segment in tmux does not work for me, it just does not get displayed when I add it to the right side. What might be the cause of that?! (I am using Mac OS 10.8)
3. I was trying to use three date segments instead of the 2 standard ones to add the name of the day of the week like I have seen it in many screenhots (e.g., Fri < 2013-11-22 < 11:11), but when I add an additional date segment, no segment is displayed anymore on the right side.
4. Is it possible to add the LAN address like it seems to be possible with tmux-powerline?

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/2051147-tmux-modification-of-left-side-battery-date-lan?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
716,add Solarized Light colour theme for Vim,2013-11-21T13:26:30Z,2014-01-10T17:30:35Z,,,,"Hi, this commit adds the Solarized Light color theme for Vim, adapted from the dark version.
"
715,Reduce number of inotify watches,2013-11-20T19:53:08Z,2014-01-10T17:23:36Z,,,,"Pass run_once to ConfigLoader, make it respect run_once

It only respects run_once by using DummyWatcher instead of a watcher doing 
something potentially useful

Ref #711
"
714,Some fixes for daemon,2013-11-20T19:40:36Z,2014-01-23T14:47:53Z,"c:core, t:enhancement",,,"It makes it use `data_files` in `setup.py` and replaces tests for `powerline-client` with tests for `powerline` (should be useless though as it is always being installed). First is not the best fix as it does not work with `pip install -e`, only without `-e`.

I guess you should not merge this directly (for this violating gitflow), but instead pull+merge --ff-only.
"
713,Alignment issue on Terminator,2013-11-19T21:32:59Z,2014-11-29T22:00:28Z,"c:font, s:wontfix, t:bug",,,"Here's a picture of my problem:
http://i.imgur.com/LADCskw.png
I'm using Terminator on Arch Linux 64bit with Liberation Mono size 10 with the fontconfig method, and I'm getting some serious alignment issues.
Does anyone know how to fix this? No other fonts are working either (from what I tried)

Edit: I gave up and solved this issue by patching the Liberation Mono font myself. No idea how to get it working with the fontconfig method.

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/2051148-alignment-issue-on-terminator?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
712,Add jobnum segment,2013-11-18T21:04:44Z,2014-01-10T17:19:01Z,,,,"Replaces #596. Differences:
- Tests and metavar.
- Uses “jobnum” name in place of “jobs”.
- Does not use subshell for zsh. Also counts jobs correctly in zsh.
- Adds an option to force showing jobnum segment even if there are no jobs.
"
711,Powerline randomly crashes,2013-11-18T12:49:08Z,2014-01-10T19:08:56Z,"c:font, t:bug",AttributeError,AttributeError: 'NoneType' object has no attribute 'exception',"After a random time (from none to 5 min of use) the prompt dissapears and instead I get this error trace:

```
Traceback (most recent call last):
  File ""/usr/local/bin/powerline"", line 24, in <module>
    segment_info=segment_info,
  File ""/usr/local/lib/python2.7/dist-packages/powerline/__init__.py"", line 371, in render
    self.update_renderer()
  File ""/usr/local/lib/python2.7/dist-packages/powerline/__init__.py"", line 363, in update_renderer
    self.pl.exception('Failed to create renderer: {0}', str(e))
AttributeError: 'NoneType' object has no attribute 'exception'
```

Bash, vim and tmux prompts break. I'm currently using Elementary OS, wich is based on Ubuntu 12.04
![image](https://f.cloud.github.com/assets/3038962/1562730/6ef74c00-504f-11e3-84e2-757c60747786.png)

PS: I'm opening an issue because I don't think this belongs to stackoverflow. But I could be wrong, it's happened before. 
"
710,How to uninstall powerline from the system (or update it) ? ,2013-11-17T22:50:42Z,2013-11-18T11:09:21Z,,,,"I was trying to find some documentation on how to uninstall powerline but I couldn't have found it. 

I looked in https://powerline.readthedocs.org/en/latest/ but didn't find anything. 

Also is there a way to update it ?
"
709,Add support for modes to shell bindings,2013-11-16T21:36:38Z,2014-01-26T18:38:20Z,"c:b:shell, t:enhancement",,,"Ref #508. Only supports zsh.
"
708,Fix finish args typo,2013-11-16T21:28:16Z,2014-01-17T17:16:40Z,,,,"There is a copy-paste typo there that prevents `--theme_option` from working.
"
707,Update dependanceies for Arch packages.,2013-11-15T20:00:24Z,2014-01-17T17:55:05Z,,,,"Arch has changed packages from python-distribute to python-setuptools for python and python2.

References: 
https://www.archlinux.org/packages/extra/any/python2-setuptools/
https://www.archlinux.org/todo/replacement-of-distribute-dependency-in-favour-of-setuptools/
"
706,Better error handling,2013-11-14T02:24:20Z,2014-01-26T18:43:16Z,"c:core, t:enhancement",,,"A few more logging catch-all `except` blocks, also makes exception text appear in a status line in case exception cannot be ignored.
"
705,Vim: add segments: buffer_number and window_number,2013-11-14T00:53:26Z,2014-08-03T09:38:47Z,"a:segment, c:b:vim, t:enhancement",,,"This adds functions to return the buffer and window number, and adds it
to the default theme, in the form of ""BUFNR@WINNR"".
"
704,Handle exceptions in _load via self.exception,2013-11-14T00:53:12Z,2014-01-10T17:46:42Z,,,,"This improves the experience of e.g. a broken json file in Vim
dramatically: there is only a exception with a descriptive message at
startup, and not one on every statusline update.
"
703,"Vim: add window_title function, used in quickfix theme",2013-11-14T00:52:56Z,2014-02-03T18:34:52Z,"a:segment, c:b:vim, t:enhancement",,,"This is used to display the window title of the quickfix window. Both
Syntastic and Vim use this. See w:quickfix_title.
"
702,Can't load vim with last powerline's version,2013-11-13T15:54:41Z,2013-11-17T16:48:25Z,"c:b:vim, s:invalid, t:bug",AttributeError,AttributeError: 'VimPowerline' object has no attribute 'renderer',"I just updated powerline to the latest version with vim, and when I'm starting up vim, here are the errors i'm getting :

``` pythonconsole
Errors while trying to run autocommand VimEnter for ""*"" :
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/path/to/powerline/powerline/vim.py"", line 145, in new_window
    return self.render(window, window_id, winnr)
  File ""/path/to/powerline/powerline/__init__.py"", line 372, in render
    return self.renderer.render(*args, **kwargs)
AttributeError: 'VimPowerline' object has no attribute 'renderer'
```

(The trad is approximate for the first line). Here is my `vim --version`:

```
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Nov 13 2013 08:11:52)
Included : 1-91
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by buildd@
Big version without any UI
  Included functionnalities (+) or not (-) :
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         +gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
-clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   -perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      -python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      -lua             +rightleft       +windows
+diff            +menu            -ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        +mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
         system file : ""$VIM/vimrc""
     user file : ""$HOME/.vimrc""
      user exrc file : ""$HOME/.exrc""
               default $VIM : ""/usr/share/vim""
Compilation : gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
links : gcc   -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux  -lacl -lattr -lgpm -ldl    -L/usr/lib/python2.7/config-x86_64-linux-gnu -lpython2.7 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions      
```

I'm also using Python 2.7.4 as a default `python`, and Python 3.3.1 as the `python3`.

Any idea ? thanks for the great job though.
"
701,No glyphs in vim with st,2013-11-13T09:51:39Z,2014-11-29T23:01:18Z,"a:doc update, c:font, s:invalid, t:bug",/home/johannes/.fonts/DejaVuSansMono-Powerline.ttf,/home/johannes/.fonts/DejaVuSansMono-Powerline.ttf: DejaVu Sans Mono for Powerline:style=Book,"Hi,

I don't get any special glyphs in vim. Neither the fontconfig nor the patched font version works.

I use st (current git version) as terminal emulator and powerline is installed via vundle in vim 7.4. Fonts are recognized and used correctly, just the additional glyphs are missing (see picture). This is regardless of the used font. I tried DejaVu Sans Mono, Liberation Mono and Inconsolata. In gvim it's a bit better, but still not very good. Using tmux/not using tmux doesn't change anything.

The font line in st's config.h:

```
static char font[] = ""DejaVu Sans Mono:size=9:antialias=true:autohint=false"";
```

In st/tmux:
![powerline](https://f.cloud.github.com/assets/86228/1530204/97b25b96-4c47-11e3-8263-fd6ed085dcd1.png)

In gvim:
![powerline-gvim](https://f.cloud.github.com/assets/86228/1530281/e98235f8-4c48-11e3-9055-bf329c36b1d8.png)

The locales are set correctly:

```
$ locale
LANG=en_US.UTF-8
LC_CTYPE=""en_US.UTF-8""
LC_NUMERIC=""en_US.UTF-8""
LC_TIME=""en_US.UTF-8""
LC_COLLATE=""en_US.UTF-8""
LC_MONETARY=""en_US.UTF-8""
LC_MESSAGES=""en_US.UTF-8""
LC_PAPER=""en_US.UTF-8""
LC_NAME=""en_US.UTF-8""
LC_ADDRESS=""en_US.UTF-8""
LC_TELEPHONE=""en_US.UTF-8""
LC_MEASUREMENT=""en_US.UTF-8""
LC_IDENTIFICATION=""en_US.UTF-8""
LC_ALL=
```

fc-list recognizes the Powerline Symbols font:

```
$ fc-list | grep Powerline
/home/johannes/.fonts/PowerlineSymbols.otf: PowerlineSymbols:style=Medium
/home/johannes/.fonts/DejaVuSansMono-Powerline.ttf: DejaVu Sans Mono for Powerline:style=Book
```

What else can I do?

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/1128355-no-glyphs-in-vim-with-st?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
700,Delayed execution of segments (à la CursorHold),2013-11-13T02:38:35Z,2014-11-29T22:17:12Z,"c:core, s:wontfix, t:enhancement",,,"I think that some segments should not get called on each update.

For example, the tagbar plugin/segment finds out the current tag (function etc), and that is quite expensive, when it gets called hundred of times while scrolling a file.

Is it possible to have something similar to what Vim provides via the CursorHold/CursorHoldI events?

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/1128369-delayed-execution-of-segments-a-la-cursorhold?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
699,Port spotify mac script from tmux-powerline,2013-11-12T17:47:12Z,2014-01-30T13:56:35Z,"c:players, t:enhancement",,,"For those of us unable to get dbus running under Mac OS X (it seems to work, but only outside of tmux), I ported the Spotify Mac segment from tmux-powerline (https://github.com/erikw/tmux-powerline/blob/master/segments/np_spotify_mac.script).
"
698,gvim shows glyph-missing-symbol instead of nbsp,2013-11-06T18:51:07Z,2015-03-11T19:54:55Z,"c:font, s:invalid:foreign bug, t:bug",,,"I'm using stock anonymous pro with the powerline symbols font on arch 64 bit.
Gnome-terminal works fine.

gvim:
![gvim](https://f.cloud.github.com/assets/124298/1485391/3a37b9e4-4714-11e3-873a-4180e3a159f2.png)

with bigger font:
![gvim-20](https://f.cloud.github.com/assets/124298/1485396/42b790d0-4714-11e3-86fd-7262a0d8ce3a.png)

gnome-terminal with same font for comparison
![terminal](https://f.cloud.github.com/assets/124298/1485400/4987146c-4714-11e3-9898-d8feb0a1ba63.png)

Does anybody have an idea about this?
"
697,A few fixes to zsh bindings,2013-11-04T19:18:33Z,2014-01-10T17:20:34Z,,,,"- A fix for #672.
- Removed note about zpython branch.
"
696,Add powerline/bindings/fish/powerline.fish,2013-11-04T19:08:18Z,2014-01-23T14:36:58Z,"c:b:shell, t:enhancement",,,"Ref #532
"
695,Fix powerline-lint tests,2013-11-02T20:55:35Z,2014-01-10T17:17:17Z,,,,"Some notes on the commit:
1. As external_ip and email_imap_alert segments seem to be removed corresponding
   segment_data keys also were removed.
2. Various files that import vim module now have the usual workaround that sets
   vim local to dummy object on error.
3. Syntastic check was failing because it did not specify which highlighting
   groups it uses in documentation. I made it specify them and also moved format
   strings to keywords. Same for some other plugin-local themes.
4. powerline-lint script got --debug argument. Pretty useless currently though:
   it only makes it output traceback for ImportError when failing to import
   module to stderr.
5. Moved themes/vim/plugin/*.json to themes/vim/plugin_*.json.
6. Fixed powerline-lint that ignored problems from values.
7. Also removed ""default_module"" key that pointed to inexistent `powerline.segments.plugin.gundo`.
"
694,Fix weather geoip lookups,2013-11-01T05:58:05Z,2014-01-10T17:47:05Z,,,,"- _external_ip() isn't necessary with freegeoip.net as it does this for you when unspecified.
- region_name/country_name make Yahoo's weather API unhappy whereas region_code/country_code work for me (TX/US)
"
693,update to git-2 eclass,2013-11-01T04:02:59Z,2013-11-02T13:49:34Z,,,,"See #692.
"
692,Gentoo ebuild is unusable,2013-11-01T04:02:10Z,2014-01-17T18:02:22Z,t:bug,,,"The `git` eclass has been removed from portage a couple of days ago, so the ebuild should be updated to use the `git-2` eclass.
"
691,can't upgrade powerline,2013-10-31T14:04:28Z,2013-11-07T07:30:19Z,,SyntaxError,SyntaxError: keyword argument repeated,"I use ""pip install powerline --upgrade"" to upgrade powerline. But an error occurred.

---

```
Traceback (most recent call last):
  File ""< string >"", line 14, in < module >
  File ""setup.py"", line 27
    zip_safe = False,
SyntaxError: keyword argument repeated
Complete output from command python setup.py egg_info:
Traceback (most recent call last):
```

---

Did I use the wrong method to upgrade?
"
690,Vim: Powerline throws error about python object to vim value conversion,2013-10-30T21:52:48Z,2013-11-01T02:03:05Z,,,,"I followed the instructions on my Macbook Pro, Mavericks, and I can't edit any text with vim when using powerline. Vim starts, text shows, but these errors keep coming up every time I press enter:

```
Error detected while processing VimEnter Auto commands for ""*"":
E859: Failed to convert returned python object to vim value
Press ENTER or type command to continue
```

What to do?
"
689,fontpatcher.py failure,2013-10-30T14:29:20Z,2014-07-27T23:12:11Z,"c:font, t:bug",,,"Trying to patch the fonts myself (https://powerline.readthedocs.org/en/latest/fontpatching.html#linux), I get error:

```
~/.vim/bundle/powerline/font/fontpatcher.py Anonymice\ Powerline.ttf 
The glyph named mu is mapped to U+00B5.
But its name indicates it should be mapped to U+03BC.
The glyph named Omega is mapped to U+2126.
But its name indicates it should be mapped to U+03A9.
The glyph named Delta is mapped to U+2206.
But its name indicates it should be mapped to U+0394.
```

I'm running on: Fedora 17. How should I proceed?
"
688,powerline not working for tmux ,2013-10-30T11:50:39Z,2013-10-30T15:21:46Z,,,,"I'm using konsole + bash.

I was able to setup powerline in bash (following: https://powerline.readthedocs.org/en/latest/overview.html#bash-prompt), however it doesn't work for me for tmux statusline (following: https://powerline.readthedocs.org/en/latest/overview.html#tmux-statusline).

I added: 
    source ~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf

to my `tmux.conf`

however my tmux statusbar looks the old way.

when invoking the command in tmux:

```
source ~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf
```

I get following output:

```
bash: if-shell: Befehl nicht gefunden...
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-bash: set: -g: Ungültige Option
set: Gebrauch: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
bash: set-window-option: Befehl nicht gefunden...
bash: set-window-option: Befehl nicht gefunden...
bash: set-window-option: Befehl nicht gefunden...
bash: set-window-option: Befehl nicht gefunden...
bash: set-window-option: Befehl nicht gefunden...
```

So basically it can't find `if-shell` command, moreover has problems with `set -g` argument.

How should I proceed?
"
687,Issue loading Powerline within tmux on Mavericks,2013-10-29T14:18:28Z,2014-01-17T18:03:56Z,"c:b:vim, t:bug",,,"Hi,

I've recently switched over to Mavericks and I've noticed an issue where the powerline styles aren't being applied to Vim when I'm running Vim inside of a tmux session?

The following image shows what I mean...

![screen shot 2013-10-29 at 14 16 43](https://f.cloud.github.com/assets/180050/1428528/c48333ec-40a4-11e3-98b1-3847b7dc5350.png)

You can see my full dotfiles here: https://github.com/Integralist/Fresh-Install/tree/master/Shell

All other Vim related plugins work fine.

Hopefully someone can clarify how I can fix this please.
"
686,KeyboardInterrupt on very quick Ctrl-c Ctrl-c,2013-10-24T14:17:05Z,2014-01-17T18:05:28Z,"c:b:shell, s:wontfix, t:bug",,,"When pressing very quickly Ctrl-c Ctrl-c I get the following 

```
Traceback (most recent call last):                                                                                                                 File ""/home/user/.local/bin//powerline"", line 8, in <module>
    from powerline.shell import ShellPowerline, get_argparser, finish_args
  File ""/home/user/.local/lib/python2.7/site-packages/powerline/__init__.py"", line 9, in <module>
    from powerline.lib.config import ConfigLoader
  File ""/home/user/.local/lib/python2.7/site-packages/powerline/lib/__init__.py"", line 3, in <module>
    import json
  File ""/usr/lib/python2.7/json/__init__.py"", line 108, in <module>
    from .decoder import JSONDecoder
  File ""/usr/lib/python2.7/json/decoder.py"", line 7, in <module>
    from json import scanner
  File ""/usr/lib/python2.7/json/scanner.py"", line 5, in <module>
    from _json import make_scanner as c_make_scanner
KeyboardInterrupt
```
"
685,"OSX Mavericks: ""bash: powerline: command not found""",2013-10-24T13:54:13Z,2013-11-14T17:37:19Z,"c:b:shell, s:invalid, t:bug",,,"I upgraded to Mavericks last night, and the only thing that broke was powerline in bash. So I tried reinstalling it according to the instructions, but have been getting some errors.

It still works in vim, ipython, as expected.

However, bash gives me the error:

```
bash: powerline: command not found
```

I'm setting it up as instructed in the documentation by putting the following line into my .bash_profile:

```
. /Users/USERNAME/Library/Python/2.7/lib/python/site-packages/powerline/bindings/bash/powerline.sh
```

Any ideas on how to fix this?
"
684,[Archlinux] No powerline symbols in urxvt with tmux,2013-10-21T18:01:01Z,2014-11-29T21:45:30Z,"c:font, e:linux, s:invalid, t:bug",,,"Hello.

I've installed the powerline under archlinux using the recommended package that it is indicated in the documentation [1].

After the install I've added to my ~/.tmux.conf the fallowing line:
`source '/usr/share/tmux/powerline.conf'`
The required patched fond are installed from [2] and `fc-list` reports that it is aware of them.

I tried restarting X as instructed in to the documentation but the result is the same:
![2013-10-21_1329x70](https://f.cloud.github.com/assets/634205/1375031/d64cbe84-3a7a-11e3-9990-f944aeb39781.png)

How can I solve this?

Thank you.

[1]  https://aur.archlinux.org/packages/python-powerline-git/
[2]  https://aur.archlinux.org/packages/ttf-dejavusansmono-powerline-git/

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/1128833-archlinux-no-powerline-symbols-in-urxvt-with-tmux?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
683,Flag issue as enhancement or merge branch?,2013-10-16T14:48:36Z,2013-10-17T11:20:19Z,,,,"Hi, Im wondering if this somehow got lost or is already merged, because the issue still says its open.

https://github.com/Lokaltog/powerline/issues/508
"
682,Make clearer the naming conflict in PyPI (closes #681),2013-10-15T23:42:16Z,2014-01-10T17:35:32Z,,,,
681,Documentation could be clearer about pip naming issue,2013-10-15T23:40:16Z,2014-01-10T17:35:33Z,"c:documentation, t:enhancement",,,"The documentation could make clearer to the user that there is a naming conflict in PyPi, to prevent the confusion which certainly struck me and led me on a wild goose chase. :)
"
680,Virtualenv segment for Vim theme(s),2013-10-15T14:49:50Z,2014-08-24T16:04:40Z,"c:b:vim, s:wontfix, t:enhancement",,,"I would like to use the virtualenv segment in Vim, but failed to do so.

It appears that the information about virtualenv is provided via segments/common.py, but this is not used/available for Vim.
"
679,Avoid infinite recursion in `POWERLINE_OLD_PROMPT_COMMAND`,2013-10-15T10:24:08Z,2014-01-10T17:36:43Z,,,,"Fixes #678
"
678,Infinite recursion in bash login shell children when PROMPT_COMMAND != _powerline_prompt,2013-10-15T10:18:58Z,2014-01-10T17:36:43Z,,,,"See zimbatm/direnv#74 for `set -x` output and a further description of the symptoms.

The fix is to use a substring match to determine if `_powerline_prompt` exists in `PROMPT_COMMAND` when deciding whether to populate `POWERLINE_OLD_PROMPT_COMMAND`
"
677,A better battery segment,2013-10-15T10:15:08Z,2014-08-06T09:10:55Z,"a:segment, c:common segments, t:enhancement",,,"Uses the UPower service on linux to display the actual time remaining
before the battery finishes charging/discharging. Also hides itself
automatically if there is no battery or if the battery is fully charged
and on AC power. I haven't bothered with adding the segment to any
themes, as I have a custom theme setup in any case. If someone merges
it, it should probably be put into the tmux and wm themes at least
(replacing the current battery segment).
"
676,highlighting issues with vim's substitute command,2013-10-14T18:21:59Z,2014-01-29T14:29:27Z,"c:b:vim, t:bug",,,"When the confirmation flag is on for this command (i.e. %s/foo/bar/c), sometimes the highlighting of the matched text does not work.
"
675,Replace “inherit git” with “inherit git-2”,2013-10-14T14:49:56Z,2013-10-19T15:46:59Z,,,,"Eclass `git.eclass` was removed from portage tree. 
"
674,Fix deprecated git eclass,2013-10-13T15:13:55Z,2014-01-10T17:37:23Z,,,,"The git.eclass is not available anymore in favor of the newer git-2.eclass
I changed the ebuild so it would complile again.
"
673,E0A0 and E0B3 symbols don't show in urxvt,2013-10-12T12:22:59Z,2014-08-25T04:06:04Z,"c:font, s:invalid, t:bug",,,"![screenshot](https://dl.dropboxusercontent.com/u/15563529/2013-10-12-141017_1366x768_scrot.png)
I'm using urxvt compiled with `--enable-unicode3` (rxvt-unicode-patched from AUR) and self-patched DejaVu Sans Mono (same with DejaVu Sans Mono from the powerline-fonts repo).

Any idea?
"
672,Git Branch in tmux statusline always shows master,2013-10-09T06:09:30Z,2014-01-17T18:13:18Z,"c:b:tmux, t:bug",,,"I'm trying to add the current branch to the tmux statusline.

I added the following to colorschemes/tmux/default.json:

```
{
    ""name"": ""Default color scheme for terminal prompts"",
    ""groups"": {
        ""branch"": { ""fg"": ""gray61"", ""bg"": ""royalblue5"" }
    }
}
```

and added the following to themes/tmux/default.json:

```
{
    ""default_module"": ""powerline.segments.common"",
    ""segment_data"": {
        ""branch"": {
            ""before"": "" ""
        }
    },
    ""segments"": {
        ""right"": [
            {
                ""name"": ""branch""
            }
        ]
    }
}
```

This seems to work, except when I open up a new tmux pane, it always shows 'master' for the branch. When switching to a different directory, then statusline seems to update.

![1 __zsh_tmux_plugin_run_new-session_-s_tmux__tmux__and_using_apple_diagnostics](https://f.cloud.github.com/assets/196406/1295251/d0b49e3c-30a8-11e3-8265-fc8b3b3fe729.png)

Switching out of a directory, and back seems to update it properly:

![1 __zsh_tmux_plugin_run_new-session_-s_tmux__tmux__and_new_issue__lokaltog_powerline](https://f.cloud.github.com/assets/196406/1295257/1714c0a0-30a9-11e3-99ef-599f3a680e6f.png)

Any ideas why this would happen?
"
671,workaround for _powerline_tmux_setenv() issue with bash-4.2.45,2013-10-05T07:40:59Z,2014-01-10T17:38:12Z,,,,"fixes Issue #372
"
670,Powerline not working with janus setup,2013-10-02T18:48:57Z,2014-02-15T22:22:52Z,"c:b:vim, t:bug",,,"I can't seem to get this to work. I am using the janus .vimrc file.
"
669,Traceback on shutdown,2013-09-27T19:49:33Z,2014-01-17T18:17:56Z,"c:b:vim, s:duplicate, t:bug",AttributeError,AttributeError: 'VimPowerline' object has no attribute 'renderer',"When vim shuts down, I briefly get this traceback flashing on my screen:

```
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/home/andreas/pack/powerline/powerline/__init__.py"", line 379, in shutdown
    self.renderer.shutdown()
AttributeError: 'VimPowerline' object has no attribute 'renderer'
```

This is with vim 7.4.
"
668,The color of statusline losts when preview window is opened,2013-09-25T09:01:13Z,2014-01-26T14:25:45Z,"c:b:vim, s:duplicate, t:bug",,,"I use YouCompleteMe to do code completion. However, when preview window opens, there is no color in the status line. 

There are some screenshoots (github told me:Something went really wrong and we can't process that image.), I can only provide links, sorry.
Before I select an item:
https://dl.dropboxusercontent.com/u/22403480/before.png
When I select an item, the preview window opens:
https://dl.dropboxusercontent.com/u/22403480/select.png
When the completion is over, the preview window is closed. But there is still no color:
https://dl.dropboxusercontent.com/u/22403480/after.png

Environment: Ubuntu 12.04, vim 7.4
part of .vimrc:
set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim
set laststatus=2
set noshowmode  

Any solution?
"
667,Fix git branch name sometimes getting stuck with inotify,2013-09-25T04:59:44Z,2014-01-17T18:20:26Z,"a:segment, c:font, t:bug",,,"If you try to checkout the already current branch in git, git creates
HEAD.lock and renames it to HEAD. This causes the inode of HEAD to
change and so the inotify file watcher stops tracking HEAD.

The fix is to re-create the inotify watch when the file attributes
change. This is a bit of a performance penalty as most of the time the
attribute changes are simple last modified time/size changes, but since
inotify provides no way to know specifically when the inode has changed,
this is the best we can do.
"
666,Add repo status information in shell,2013-09-22T21:25:15Z,,"c:b:shell, t:enhancement",,,"I've seen that powerline in vim shows the repo status and such.

I think it could be a good idea that we could have something along the lines of:
- [Powerline-shell](https://github.com/milkbikis/powerline-shell) (lacks some graph characters like the branch, virtualenv, etc, but it tracks the status).
- [Agnoster's](https://gist.github.com/agnoster/3712874) zsh theme looks very cool with those characters regarding detached head and dirty working directory.

I see it lackluster comparing to the vim one.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/1129711-add-repo-status-information-in-shell?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
665,font family option,2013-09-16T04:41:29Z,2013-09-16T12:21:53Z,,,,"Is it possible to add option to powerline theme an option that will control the font of the status line? The goal is to have an independent option of vim `guifont`.
"
664,"when using with ipython, the out line is messy code",2013-09-12T12:39:22Z,2014-08-06T11:09:23Z,"c:b:ipython, t:bug",,,"see the pic
![qq20130912203842](https://f.cloud.github.com/assets/354768/1130488/4f21c814-1ba8-11e3-8017-a5377ee18831.png)
"
663,Documentation for now playing Segment,2013-09-11T07:58:07Z,,"c:documentation, t:enhancement",,,"Currently I can find no suitable documentation for setting up a now playing segment for tmux.  Could you provide Documentation as to how to do this. 
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/1129785-documentation-for-now-playing-segment?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
662,Show Count of Attached Tmux Sessions,2013-09-08T22:43:54Z,2014-08-24T17:19:07Z,"a:segment, c:b:tmux, t:enhancement",,,"- This segment displays the number of attached tmux clients to the
  currently running session.
- The minimum argument is used to specify a threshold for when the
  segment should be visible.

Ref #661
"
661,New Segment: Show Number of Attached Tmux Clients,2013-09-08T22:34:41Z,2014-08-24T17:19:04Z,"a:segment, c:b:tmux, t:enhancement",,,"I think it would be cool to have a segment that shows the number of attached clients to your active tmux session.
"
660,docs: st now supports 24-bit color,2013-09-08T14:25:18Z,2014-08-02T23:40:27Z,"c:documentation, t:enhancement",,,
659,Status_colors not working,2013-09-06T04:25:32Z,2014-01-26T14:23:40Z,"c:VCS support, e:macos, s:duplicate, t:bug",,,"Hi, I'm trying to turn on the ""branch"" feature, my powerline its working fine but I changed my shell/default.json adding ""status_colors"" field but when I enter in a folder under VCS my powerline don't show me the current status.

Mac OSX 10.8.4
Python 2.7

My default.json :

{
    ""default_module"": ""powerline.segments.common"",
    ""segment_data"": {
        ""hostname"": {
            ""before"": "" "",
            ""args"": {
                ""only_if_ssh"": true
            }
        },
        ""virtualenv"": {
            ""before"": ""ⓔ  ""
        },
        ""branch"": {
            ""before"": "" ""
        }
    },
    ""segments"": {
        ""left"": [
            {
                ""name"": ""hostname""
            },
            {
                ""name"": ""user""
            },
            {
                ""name"": ""virtualenv""
            },
            {
                ""name"": ""cwd"",
                ""args"": {
                    ""dir_limit_depth"": 3
                }
            }
        ],
        ""right"": [
            {
                ""module"": ""powerline.segments.shell"",
                ""name"": ""last_pipe_status""
            },
            {
                ""name"": ""branch"",
                ""args"": {
                    ""status_colors"": true
                }
            }
        ]
    }
}
"
658,"Add ""head"" segment",2013-09-05T09:43:41Z,2014-09-27T14:07:47Z,"a:segment, c:VCS support, t:enhancement",,,"Hi,

This is the first time I've used github's pull request thingy, hopefully I've got it right.

This adds a segment to display the abbreviated sha1 of the current HEAD. Currently its only implemented for git, I haven't looked at hg support yet and I don't know if it really maps to anything under svn. One thing that I haven't figured out is how to have the segment hide when in a detached HEAD state (currently you get the sha1 twice).
"
657,read only indicator,2013-09-02T06:48:38Z,2014-01-17T18:26:41Z,s:invalid,,,"How do i remove the read only indicator (special character) that is defined in:

https://github.com/Lokaltog/powerline/blob/develop/powerline/segments/vim.py#L137

@requires_segment_info
def readonly_indicator(pl, segment_info, text=''):
"
656,Trying to use powerline with vim-nox on Ubuntu precise64,2013-08-28T04:59:38Z,2014-01-17T18:28:06Z,"c:b:vim, t:bug",,,"As soon as I enable this line on .vimrc

```
set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/
```

and start vim it becomes unusable.

I have python 2.7 and vim-nox 7.3 with support for python. I started without making a copy of powerline json files in config_files, but I tried with a copy of them in ~/.config/powerline but still powerline break vim.

I'm not sure what should I do to make it work properly.

Error detected while processing function PowerlinePyeval:
line    1:
E716: Key not present in Dictionary: current().hasErrorsOrWarningsToDisplay()
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
E15: Invalid expression: g:SyntasticLoclist.current().hasErrorsOrWarningsToDisplay()
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
Traceback (most recent call last):
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
  File ""<string>"", line 1, in <module>
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
  File ""/home/vagrant/.local/lib/python2.7/site-packages/powerline/vim.py"", line 155, in pyeval
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
    **main**.**dict**)))
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
  File ""<string>"", line 1, in <module>
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
  File ""/home/vagrant/.local/lib/python2.7/site-packages/powerline/vim.py"", line 145, in new_window
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
    return self.render(window, window_id, winnr)
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
  File ""/home/vagrant/.local/lib/python2.7/site-packages/powerline/**init**.py"", line 372, in render
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
    return self.renderer.render(_args, *_kwargs)
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
  File ""/home/vagrant/.local/lib/python2.7/site-packages/powerline/renderers/vim.py"", line 93, in render
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
    matcher_info=segment_info,
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
  File ""/home/vagrant/.local/lib/python2.7/site-packages/powerline/renderer.py"", line 188, in render
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
    segments = [self._get_highlighting(segment, mode) for segment in segments
Press ENTER or type command to continue
Error detected while processing function PowerlinePyeval:
line    1:
  File ""/home/vagrant/.local/lib/python2.7/site-packages/powerline/theme.py"", line 89, in get_segments
"
655,Fixes #654,2013-08-27T20:45:06Z,2014-04-23T02:43:27Z,t:bug,,,"Hey this is my suggested fix for the issue I reported earlier.
Link to the issue: https://github.com/Lokaltog/powerline/issues/654
"
654,Latest AUR python 3 powerline package git submodule error,2013-08-27T20:37:17Z,2014-04-23T02:43:27Z,t:bug,TypeError,TypeError: Can't mix strings and bytes in path components.,"Hello,

So far I had been using python 2.7 powerline version. In ny new install I tried out the python 3.3 AUR package. All seemed to work fine except for git submodules.

This is the python stack trace I get whenever I `cd` into a subdirectory that is a git submodule:

```
2013-08-28 00:28:59,285:ERROR:shell:branch:Exception while computing segment: Can't mix strings and bytes in path components.
Traceback (most recent call last):
  File ""/usr/lib/python3.3/site-packages/powerline/theme.py"", line 89, in get_segments
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
  File ""/usr/lib/python3.3/site-packages/powerline/segments/common.py"", line 63, in branch
    branch = repo.branch()
  File ""/usr/lib/python3.3/site-packages/powerline/lib/vcs/git.py"", line 182, in branch
    return get_branch_name(self.directory)
  File ""/usr/lib/python3.3/site-packages/powerline/lib/vcs/git.py"", line 32, in get_branch_name
    head = os.path.join(git_directory(base_dir), 'HEAD')
  File ""/usr/lib/python3.3/site-packages/powerline/lib/vcs/git.py"", line 27, in git_directory
    return os.path.abspath(os.path.join(directory, raw))
  File ""/usr/lib/python3.3/posixpath.py"", line 92, in join
    ""components."") from None
TypeError: Can't mix strings and bytes in path components.
```

I am using zsh, python 3.3 and the latest arch: ""Linux archdesktop 3.10.9-1-ARCH""

After a bit of poking around, I fixed the issue locally.

I am not sure if it is a bug or I have misunderstood the way powerline works. I will make a pull request with the suggested fix and you can choose whether to implement it or not.
"
653,Unsplit arch linux packages,2013-08-27T17:50:59Z,2014-08-25T15:44:11Z,t:enhancement,,,"The hack currently done to deal with AUR's lack of ability to handle split packages breaks some AUR helpers that do not source the `PKGBUILD` such as `pacaur`.
"
652,"""_powerline_prompt: command not found""",2013-08-26T12:50:14Z,2014-01-17T18:40:50Z,"c:b:shell, t:bug",,,"I had everything setup and working fine. I did not change any configuration or update powerline but this error has started showing up every time I start a new shell (inside or outside tmux). It prints ""_powerline_prompt: command not found"" and doesn't print the prompt correctly or finish parsing my .bashhrc. However if I manually `source ~/.bashrc` it immediately starts working again for the duration of that shell.
"
651,Docs not clear regarding Vundle Installation,2013-08-25T17:26:48Z,2014-01-17T18:39:31Z,"a:doc update, c:documentation, s:invalid",,,"If powerline is installed via pip, and the vimscript

python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup

is put in the vimrc, copying the config files over to one's $HOME/.config directory and editing them works without any problems. The same holds true with installing via Vundle--however, the documentation is phrased in such a way that it seems to imply that the above vimscript is not necessary when installing via vundle. However, this is not true: If the above vimscript is not put in the vimrc after installation via vundle, vim freezes up with a series of errors when opened. 

I suggest rewriting the docs to make it clear that the vimscript above is necessary both when installing powerline with pip and via vundle.
"
650,Add light version of colorscheme solarized for vim and shell,2013-08-23T19:05:07Z,2014-02-15T22:53:19Z,"c:b:shell, c:b:vim, t:enhancement",,,"Ref #568

colors are named as suggested in #444

![screen shot 2013-08-23 at 21 03 46](https://f.cloud.github.com/assets/284690/1018338/c6a12fc4-0c26-11e3-9dd6-840f3d32a77b.png)
"
649,"issue when interacting with tools like fasd, and z",2013-08-22T20:48:54Z,2014-01-24T23:54:10Z,"c:b:shell, t:bug",,,"Hello, when one of these tools are loaded along with powerline on bashrc, they seem to work fine on a new shell, however upon issuing a command to source bashrc (or simply type bash) from this current shell, it will hang.
"
648,'ascii' codec can't decode byte 0xc3 in position 16: ordinal not in range(128),2013-08-22T17:51:10Z,2014-03-13T19:10:29Z,"c:VCS support, s:duplicate, t:bug",UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 16: ordinal not in range(128),"This morning I've updated my VIM plugins and powerline was one of those. I'm having an issue that I fear will happen frequently, to reproduce this is simple, for me, for example, when I open the [Auto Pairs source](https://github.com/jiangmiao/auto-pairs/blob/master/plugin/auto-pairs.vim) and search for the word ""auto"" (e.g. `/auto`) and keep asking for next occurrences by hitting ""n"", on the second occurrence I get:

```
2013-08-22 14:30:50,304:ERROR:vim:file_vcs_status:Exception while computing segment: 'ascii' codec can't decode byte 0xc3 in position 16: ordinal not in range(128)
Traceback (most recent call last):
  File ""/home/francisco/.vim/addons/powerline/powerline/theme.py"", line 89, in get_segments
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
  File ""/home/francisco/.vim/addons/powerline/powerline/segments/vim.py"", line 352, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/francisco/.vim/addons/powerline/powerline/lib/vcs/git.py"", line 179, in status
    return do_status(self.directory, path, self.do_status)
  File ""/home/francisco/.vim/addons/powerline/powerline/lib/vcs/git.py"", line 43, in do_status
    path, '.gitignore', func, extra_ignore_files=tuple(os.path.join(gitd, x) for x in ('logs/HEAD', 'info/exclude')))
  File ""/home/francisco/.vim/addons/powerline/powerline/lib/vcs/__init__.py"", line 153, in get_file_status
    changed ^= file_changed(ignf)
  File ""/home/francisco/.vim/addons/powerline/powerline/lib/file_watcher.py"", line 109, in __call__
    self.watch(path)
  File ""/home/francisco/.vim/addons/powerline/powerline/lib/file_watcher.py"", line 86, in watch
    self.handle_error()
  File ""/home/francisco/.vim/addons/powerline/powerline/lib/inotify.py"", line 137, in handle_error
    raise OSError(eno, self.os.strerror(eno) + extra)
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 16: ordinal not in range(128)
```
"
647,Made battery segment work on MacOSX,2013-08-20T22:52:32Z,2014-06-27T14:06:38Z,"c:common segments, e:macos, t:enhancement",,,"The battery segment were not working on my Macbook Pro because there are no ACPI, here is a working version using native apple tools
"
646,Proper concatenation of error info strings,2013-08-20T18:00:12Z,2013-08-27T08:22:28Z,"c:watchers, t:bug",,,"This patch fixes #645, please review.

Thanks in advance.
"
645,error message concatenation can fail on non-English locales,2013-08-20T17:56:55Z,2013-08-27T08:22:15Z,,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xe6 in position 0: ordinal not in range(128),"Commit 28c1c0df introduces informative error messages, but as the file has `from __future__ import unicode_literals` declared, the variable `extra` are given `unicode`s. As it's later appended to `os.strerror()`'s return value which is a `str`, `UnicodeDecodeError` can happen if the locale causes the latter function to return localized strings, which Python attempts to first decode into `unicode` as ASCII.

Steps to reproduce:
- Set locale to something producing non-ASCII error messages, such as `LANG=zh_CN.UTF-8` (make sure you generate the locale first)
- Open a file belonging to a Git repository with Vim.
- Scroll up or down a bit to trigger status update.

You may get something like this:

```
2013-08-21 01:51:40,628:ERROR:vim:file_vcs_status:Exception while computing segment: 'ascii' codec can't decode byte 0xe6 in position 0: ordinal not in range(128)
Traceback (most recent call last):
  File ""/home/xenon/.vim/bundle/powerline/powerline/theme.py"", line 89, in get_segments
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
  File ""/home/xenon/.vim/bundle/powerline/powerline/segments/vim.py"", line 352, in file_vcs_status
    status = repo.status(os.path.relpath(name, repo.directory))
  File ""/home/xenon/.vim/bundle/powerline/powerline/lib/vcs/git.py"", line 179, in status
    return do_status(self.directory, path, self.do_status)
  File ""/home/xenon/.vim/bundle/powerline/powerline/lib/vcs/git.py"", line 43, in do_status
    path, '.gitignore', func, extra_ignore_files=tuple(os.path.join(gitd, x) for x in ('logs/HEAD', 'info/exclude')))
  File ""/home/xenon/.vim/bundle/powerline/powerline/lib/vcs/__init__.py"", line 153, in get_file_status
    changed ^= file_changed(ignf)
  File ""/home/xenon/.vim/bundle/powerline/powerline/lib/file_watcher.py"", line 109, in __call__
    self.watch(path)
  File ""/home/xenon/.vim/bundle/powerline/powerline/lib/file_watcher.py"", line 86, in watch
    self.handle_error()
  File ""/home/xenon/.vim/bundle/powerline/powerline/lib/inotify.py"", line 137, in handle_error
    raise OSError(eno, self.os.strerror(eno) + extra)
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe6 in position 0: ordinal not in range(128)
```
"
644,fixed syntax error in vim solarized colorscheme,2013-08-20T17:48:46Z,2013-08-21T08:02:57Z,,,,
643,Add a Bitdeli Badge to README,2013-08-20T16:16:58Z,2013-08-20T16:17:49Z,,,,"Pull request made by @lokaltog at https://bitdeli.com
"
642,ignore trailing whitespace errors in .rst files,2013-08-20T13:42:32Z,2013-08-20T14:51:27Z,,,,"Use a .gitattributes file to tell git to not highlight trailing
whitespace as an error in .rst files when showing diffs.  A trailing
space is used on many lines in those files to indicate that the
paragraph continues onto the next line.
"
641,Option to suppress error in python-less vim,2013-08-20T13:42:00Z,2013-08-20T14:51:26Z,,,,"If the g:powerline_no_python_error variable is set don't issue an error
message even if vim doesn't have the required Python support.  This
allows a common set of configuration files to be used across systems
where some of the copies of vim don't meet the requirements.
"
640,More informative error message. Fixes #638,2013-08-20T03:59:53Z,2013-08-20T11:21:31Z,,,,
639,Syntastic error on sourcing .vimrc,2013-08-19T17:24:30Z,2013-08-20T11:18:49Z,"c:b:vim, s:invalid, t:bug",,,"Whenever I `:source $MYVIMRC` I get this annoying error, being thrown **recursively**, until I `ctrl-c` to make everything stop:

```
E121: Undefined variable: #warningmsg#
E15: Invalid expression: pyeval('powerline.new_window()')%#warningmsg#%{SyntasticStatuslineFlag()}%*
```

Using OSX ML, with a homebrewed python 2.5 & macvim (macvim was installed **after** python2.5). I'm using Syntastic of course.

Any idea?
"
638,"inotify problem, running on btrfs",2013-08-19T13:21:42Z,2013-08-20T11:21:29Z,,OSError,OSError: [Errno 28] No space left on device,"I get the following error.   I think this is caused by some problem with my Filesystem as I'm running on btrfs.  (Some kind of inodes issue?)

```
Traceback (most recent call last):                                                                                                                           
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 361, in update_renderer
    self.create_renderer(**create_renderer_kwargs)
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 156, in create_renderer
    config = self.load_main_config()
  File ""/usr/lib/python3.3/site-packages/powerline/shell.py"", line 24, in load_main_config
    r = super(ShellPowerline, self).load_main_config()
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 316, in load_main_config
    return self._load_config('config', 'main')
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 293, in _load_config
    self.config_loader.register(function, path)
  File ""/usr/lib/python3.3/site-packages/powerline/lib/config.py"", line 54, in register
    self.watcher.watch(path)
  File ""/usr/lib/python3.3/site-packages/powerline/lib/file_watcher.py"", line 91, in watch
    self.handle_error()
  File ""/usr/lib/python3.3/site-packages/powerline/lib/inotify.py"", line 134, in handle_error
    raise OSError(eno, self.os.strerror(eno))
OSError: [Errno 28] No space left on device

```
"
637,"tmux, zsh, powerline - tmux statusline blinking",2013-08-18T12:45:45Z,2013-08-20T11:16:37Z,"c:b:tmux, t:bug",,,"Hey,

I would like to request your help. I've installed powerline and added 
`source /usr/share/powerline/tmux/powerline.conf` to my `.tmux.conf`.
The statusline indeed changes, when i start xterm it shows - for a moment then hides for several seconds...then starts this again forever.

`Xterm(285) (256colors)
TERM=screen-256color
tmux 1.8
gentoo 3.8.13
zsh 5.0.2`

@Jackneill
"
636,bash prompt seems to have invalid escape sequence,2013-08-18T01:27:55Z,2013-08-28T04:50:38Z,,,,"<code>echo -e $(powerline shell left -r bash_prompt --last_exit_code=0)</code> saved to a file has the following output, with only ""cwd"" in the ""left"" ""segments"" in '~/.config/powerline/themes/shell/default_leftonly.json' (I ran the command from '/tmp'):

[^[Ptmux;^[^[[0;38;5;250;48;5;240m^[] / [^[Ptmux;^[^[[0;38;5;245;48;5;240;22m^[] [^[Ptmux;^[^[[0;38;5;252;48;5;240;1m^[]tmp [^[Ptmux;^[^[[0;38;5;240;49;22m^[] [^[Ptmux;^[^[[0m^[]

Sourcing '/usr/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh' gives the following prompt:

![powerline_bash](https://f.cloud.github.com/assets/2020374/981913/f85d748c-07a3-11e3-861f-c6b39638dce5.png)

Doing the above from within tmux gives:
[^[Ptmux;^[^[[0;38;5;250;48;5;240m^[] / [^[Ptmux;^[^[[0;38;5;245;48;5;240;22m^[] [^[Ptmux;^[^[[0;38;5;252;48;5;240;1m^[]tmp [^[Ptmux;^[^[[0;38;5;240;49;22m^[] [^[Ptmux;^[^[[0m^[]

but with a different prompt: 

![power_bash_2](https://f.cloud.github.com/assets/2020374/981919/b8d8cebe-07a4-11e3-8d6a-8c4271723301.png)

What should I do?

I have installed poweline from AUR (827.70e279a-1)
"
635,Handle gitfiles when retrieving branch name,2013-08-17T02:09:20Z,2013-08-20T14:51:26Z,,,,"Move code to parse a .git file from the do_status method to a new method
shared with get_branch_name so that branch name can be retreived from
repositories which use a .git file.

Closes #634.
"
634,Git branch detection broken in repositories using a gitfile,2013-08-16T21:40:32Z,2013-08-20T14:51:24Z,,,,"A little while ago I pulled the commits from the range a7daa50..70e279a into my working tree, and I've noticed that the git branch segment in vim is now incorrectly showing ""(no branch)"" for some of my repositories.

This repositories that exhibit the problem are ones where `.git` in the root of the tree isn't a directory, but is instead a file pointing to the actual location of the repository. Repositories like this have been created by `git submodule` starting with version 1.7.8.

I've bisected the problem and determined that it was introduced with commit 14bec211.

I'll attempt to create a fix for this, but I wouldn't mind if somebody else beats me to it.
"
633,It makes 'Esc' command hang,2013-08-16T14:51:44Z,2013-08-20T15:30:35Z,"c:b:vim, s:invalid, t:bug",,,"I've been having this issue, where  Escaping from insert mode from normal mode takes over a second, as if Esc was already binded to something.
When Esc is pressed twice, the switch to normal mode is instant.

So I went over my vimrc and disabled each plugin individually to figure out which one is causing the problem. Its the Lokaltog/vim-powerline.

I tried adding Lokaltog/powerline, but it doesn't seem to work. Heres my vimrc.
https://bitbucket.org/furion/dotfiles/src/e247126917f8a6ae919ac692d789495b594dc8fa/.vimrc?at=master

Am I doing something wrong, or can you reproduce the issue too? This is on Vim 7.3 and 7.4 on osx or arch linux, with tmux or without. 
"
632,Update OSX installation instructions,2013-08-15T17:22:10Z,2014-08-02T23:40:27Z,"c:documentation, t:enhancement",,,"If Python was installed via `brew` rather than `port`, the `--user` flag
causes installation errors as described in #631. Homebrew team
member @samueljohn mentions this in #552
"
631,Fails to install on Mac OS X 10.8.4 with Python 2.7.5,2013-08-15T16:49:22Z,2013-08-15T17:20:41Z,"c:installation, e:macos, t:bug",InstallationError,"InstallationError: Command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-KQ74Q7-record/install-record.txt --single-version-externally-managed --user failed with error code 1 in /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build","I'm using Python 2.7.5 and the latest version of pip installed via `brew`. Here's what happens when I try to follow the installation guide:

```
Downloading/unpacking git+git://github.com/Lokaltog/powerline
  Cloning git://github.com/Lokaltog/powerline to /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build
  Running setup.py egg_info for package from git+git://github.com/Lokaltog/powerline

Installing collected packages: Powerline
  Running setup.py install for Powerline
    error: can't combine user with prefix, exec_prefix/home, or install_(plat)base
    Complete output from command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-KQ74Q7-record/install-record.txt --single-version-externally-managed --user:
    running install

error: can't combine user with prefix, exec_prefix/home, or install_(plat)base

----------------------------------------
Cleaning up...
Command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-KQ74Q7-record/install-record.txt --single-version-externally-managed --user failed with error code 1 in /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build
Storing complete log in /Users/david/.pip/pip.log
~Code/dotfiles master!↑ % echo $PATH                                                                                                                                                 2.0.0-p247
./bin /Users/david/.rbenv/bin /Users/david/.rbenv/shims /usr/local/bin /usr/local/sbin /Users/david/.local/bin /usr/bin /bin /usr/sbin /sbin /usr/local/bin /usr/local/share/python /usr/local/share/npm/bin /usr/local/lib/python2.7/site-packages
```

And the contents of `pip.log`:

```
~Code/dotfiles master % cat /Users/david/.pip/pip.log
------------------------------------------------------------
/usr/local/bin/pip run on Thu Aug 15 09:54:21 2013
Downloading/unpacking git+git://github.com/Lokaltog/powerline

  Cloning git://github.com/Lokaltog/powerline to /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build

  Found command 'git' at '/usr/local/bin/git'
  Running command /usr/local/bin/git clone -q git://github.com/Lokaltog/powerline /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build
  Running setup.py egg_info for package from git+git://github.com/Lokaltog/powerline

    running egg_info
    creating pip-egg-info/Powerline.egg-info
    writing requirements to pip-egg-info/Powerline.egg-info/requires.txt
    writing pip-egg-info/Powerline.egg-info/PKG-INFO
    writing top-level names to pip-egg-info/Powerline.egg-info/top_level.txt
    writing dependency_links to pip-egg-info/Powerline.egg-info/dependency_links.txt
    writing manifest file 'pip-egg-info/Powerline.egg-info/SOURCES.txt'
    warning: manifest_maker: standard file '-c' not found


    reading manifest file 'pip-egg-info/Powerline.egg-info/SOURCES.txt'
    reading manifest template 'MANIFEST.in'
    writing manifest file 'pip-egg-info/Powerline.egg-info/SOURCES.txt'
  Source in /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build has version beta, which satisfies requirement Powerline==beta from git+git://github.com/Lokaltog/powerline
  skipping extra docs
Installing collected packages: Powerline

  Running setup.py install for Powerline

    Running command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-KQ74Q7-record/install-record.txt --single-version-externally-managed --user
    running install
    error: can't combine user with prefix, exec_prefix/home, or install_(plat)base

    Complete output from command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-KQ74Q7-record/install-record.txt --single-version-externally-managed --user:

    running install

error: can't combine user with prefix, exec_prefix/home, or install_(plat)base

----------------------------------------

Cleaning up...

  Removing temporary dir /private/var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip_build_david...
Command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-KQ74Q7-record/install-record.txt --single-version-externally-managed --user failed with error code 1 in /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build

Exception information:
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/site-packages/pip/basecommand.py"", line 134, in main
    status = self.run(options, args)
  File ""/usr/local/lib/python2.7/site-packages/pip/commands/install.py"", line 241, in run
    requirement_set.install(install_options, global_options, root=options.root_path)
  File ""/usr/local/lib/python2.7/site-packages/pip/req.py"", line 1298, in install
    requirement.install(install_options, global_options, *args, **kwargs)
  File ""/usr/local/lib/python2.7/site-packages/pip/req.py"", line 625, in install
    cwd=self.source_dir, filter_stdout=self._filter_install, show_stdout=False)
  File ""/usr/local/lib/python2.7/site-packages/pip/util.py"", line 670, in call_subprocess
    % (command_desc, proc.returncode, cwd))
InstallationError: Command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-KQ74Q7-record/install-record.txt --single-version-externally-managed --user failed with error code 1 in /var/folders/tt/0zgjrcdd4zn0pvfmmp4s9n600000gq/T/pip-NQ2nfE-build
```

Powerline used to be easy to install when it was just a vim plugin. Am I doing something wrong here?
"
630,Zsh's prompt displays tmux powerline's window name,2013-08-15T14:05:44Z,2013-10-11T20:44:46Z,,,,"More annoying then anything else. if i have powerline installed and running with tmux, tmux attempts to pick up the shell's dir and use it to name the window. If you do not run tmux ontop, you get artifacts from this in the prompt.

(Holding down enter)

```
λ fox@hackbook ~ → 
k~                                                                                                       


λ fox@hackbook ~ → 
k~                                                                                                       


λ fox@hackbook ~ → 
k~                                                                                                       
```

It gets annoying in situations like these also:

```
λ fox@hackbook ~ → python
kpythonPython 3.3.2 (default, May 21 2013, 15:40:45) 
[GCC 4.8.0 20130502 (prerelease)] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> 
```

In any other situation you see the given dir for 0.2 sec before the prompt gets placed ontop.

Any quick fix for this problem?
"
629,Better segment documentation needed,2013-08-15T07:36:05Z,2014-08-15T07:10:01Z,"c:documentation, s:duplicate, t:enhancement",,,"Making custom segments needs better documentation

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/1130569-better-segment-documentation-needed?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
628,Fix UnicodeDecodeError when both dir_limit_depth and dir_shorten_len are set,2013-08-13T08:10:39Z,2013-08-20T11:25:16Z,,,,"I accidentally had both set in my theme, and it causes a UniucodeDecodeError. The reason is that because of the dir_limit_depth is set, a unicode character is inserted into the segment contents. But when dir_shorten_len is set, only the first byte of the character is inserted. This causes a UnicodeDecodeError later in theme.py in the get_segments function.
"
627,Daemon usage instructions? Segmentation-fault with python2.7,2013-08-13T05:30:40Z,2014-01-17T19:35:02Z,"c:daemon, t:bug","NameError, ValueError","NameError: global name 'file' is not defined, ValueError: can't have unbuffered text I/O","Are there any instructions for use/requirements of the daemon. It seems that the documentation does not yet support the `feature/daemon` branch.

After I run `powerline-daemon`, I get a segmentation-fault when I run `powerline` with python2.7. Also, it seems to be incompatible with python3:

```
$ powerline-daemon
Traceback (most recent call last):
  File ""/opt/homebrew/bin/powerline-daemon"", line 7, in <module>
    exec(compile(open(__file__).read(), __file__, 'exec'))
  File "".../powerline/scripts/powerline-daemon"", line 395, in <module>
    main()
  File "".../powerline/scripts/powerline-daemon"", line 368, in main
    daemonize()
  File "".../powerline/scripts/powerline-daemon"", line 267, in daemonize
    si = file(stdin, 'r')
NameError: global name 'file' is not defined
```

I'm not as familiar yet with python3 as I should be, but I suspect `open` should be used, but I get this error: 

```
  File "".../powerline/scripts/powerline-daemon"", line 269, in daemonize
    se = open(stderr, 'a+', 0)
ValueError: can't have unbuffered text I/O
```

Also, I am not yet certain the differenced between `powerline-renderer` (appears to not use the socket) and `powerline` (attempts to use the socket, but fails).
"
626,Don't let the vcs detection cross mount point boundaries,2013-08-08T16:58:23Z,2013-08-20T11:26:30Z,,,,"Fixes issue #625.
"
625,VCS detection (incorrectly) crosses mount point boundaries,2013-08-08T12:29:14Z,2014-01-17T18:43:53Z,"c:VCS support, t:enhancement",,,"Most VCS clients, when looking for the .folder in the parent directories, do not cross mount point boundaries. You can be in a folder that powerline shows is a git repo, do a git status and it will not show any repo.

The solution is to add the following to the generate_directories in vcs/**init**.py:
        if os.path.ismount(path):
            break
"
624,Fix UnicodeDecodeError for setup.py bdist_rpm,2013-08-08T07:21:22Z,2013-08-20T11:22:54Z,,,,"Fixes #623

`python3.3 setup.py bdist_rpm` fails on Fedora 19 with or without this patch,
so someone should test if this works for Python3 or not. Nevertheless
`setup.py build` and `setup.py install` seem to work.
"
623,`python2.7 setup.py bdist_rpm` fails with UnicodeDecodeError:,2013-08-08T07:01:24Z,2014-01-17T18:44:48Z,t:bug,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 10: ordinal not in range(128),"```
[ciupicri@hermes powerline (develop)]$ python2.7 setup.py bdist_rpm
running bdist_rpm
Traceback (most recent call last):
  File ""setup.py"", line 40, in <module>
    test_suite='tests' if not old_python else None,
  File ""/usr/lib64/python2.7/distutils/core.py"", line 152, in setup
    dist.run_commands()
  File ""/usr/lib64/python2.7/distutils/dist.py"", line 953, in run_commands
    self.run_command(cmd)
  File ""/usr/lib64/python2.7/distutils/dist.py"", line 971, in run_command
    cmd_obj.ensure_finalized()
  File ""/usr/lib64/python2.7/distutils/cmd.py"", line 109, in ensure_finalized
    self.finalize_options()
  File ""/usr/lib64/python2.7/distutils/command/bdist_rpm.py"", line 218, in finalize_options
    self.finalize_package_data()
  File ""/usr/lib64/python2.7/distutils/command/bdist_rpm.py"", line 226, in finalize_package_data
    self.distribution.get_contact_email()))
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 10: ordinal not in range(128)
```

I'm using version 70e279afde42f90de7166361a88002f02b476937 on Fedora 19
x86_64.
"
622,Fix #621,2013-08-07T05:01:01Z,2013-08-20T11:30:54Z,,,,
621,tmxu + zsh = no go,2013-08-06T21:56:54Z,2013-08-20T11:30:41Z,,"KeyError, UnicodeDecodeError, AttributeError","KeyError: '/usr/lib/python3.3/site-packages/powerline/config_files/config.json', UnicodeDecodeError: 'ascii' codec can't decode byte 0xee in position 84: ordinal not in range(128), AttributeError: 'NoneType' object has no attribute 'exception'","I have an issue when attempting to start a tmux session with zsh inside gives me the following error. Using another shell inside tmux is fine though. Any help would be greatly appreciated.

Is there any additional information that I can provide?

```
  File ""/usr/lib/python3.3/site-packages/powerline/lib/config.py"", line 107, in load
    return deepcopy(self.loaded[path])
KeyError: '/usr/lib/python3.3/site-packages/powerline/config_files/config.json'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 361, in update_renderer
    self.create_renderer(**create_renderer_kwargs)
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 156, in create_renderer
    config = self.load_main_config()
  File ""/usr/lib/python3.3/site-packages/powerline/shell.py"", line 24, in load_main_config
    r = super(ShellPowerline, self).load_main_config()
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 316, in load_main_config
    return self._load_config('config', 'main')
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 294, in _load_config
    return self.config_loader.load(path)
  File ""/usr/lib/python3.3/site-packages/powerline/lib/config.py"", line 109, in load
    r = self._load(path)
  File ""/usr/lib/python3.3/site-packages/powerline/lib/config.py"", line 19, in load_json_config
    return load(config_file_fp)
  File ""/usr/lib/python3.3/json/__init__.py"", line 271, in load
    return loads(fp.read(),
  File ""/usr/lib/python3.3/encodings/ascii.py"", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xee in position 84: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/bin/powerline"", line 24, in <module>
    segment_info=segment_info,
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 371, in render
    self.update_renderer()
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 363, in update_renderer
    self.pl.exception('Failed to create renderer: {0}', str(e))
AttributeError: 'NoneType' object has no attribute 'exception'
Traceback (most recent call last):
  File ""/usr/lib/python3.3/site-packages/powerline/lib/config.py"", line 107, in load
    return deepcopy(self.loaded[path])
KeyError: '/usr/lib/python3.3/site-packages/powerline/config_files/config.json'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 361, in update_renderer
    self.create_renderer(**create_renderer_kwargs)
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 156, in create_renderer
    config = self.load_main_config()
  File ""/usr/lib/python3.3/site-packages/powerline/shell.py"", line 24, in load_main_config
    r = super(ShellPowerline, self).load_main_config()
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 316, in load_main_config
    return self._load_config('config', 'main')
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 294, in _load_config
    return self.config_loader.load(path)
  File ""/usr/lib/python3.3/site-packages/powerline/lib/config.py"", line 109, in load
    r = self._load(path)
  File ""/usr/lib/python3.3/site-packages/powerline/lib/config.py"", line 19, in load_json_config
    return load(config_file_fp)
  File ""/usr/lib/python3.3/json/__init__.py"", line 271, in load
    return loads(fp.read(),
  File ""/usr/lib/python3.3/encodings/ascii.py"", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xee in position 84: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/bin/powerline"", line 24, in <module>
    segment_info=segment_info,
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 371, in render
    self.update_renderer()
  File ""/usr/lib/python3.3/site-packages/powerline/__init__.py"", line 363, in update_renderer
    self.pl.exception('Failed to create renderer: {0}', str(e))
AttributeError: 'NoneType' object has no attribute 'exception'
```
"
620,How add segment?,2013-08-05T18:51:02Z,2014-08-22T19:27:23Z,"c:documentation, s:wontfix, t:enhancement",,,"Hi all!
Documentation don't explain how enable segments in config file. Can you show example?
"
619,lib.powerline.vcs.tree_status does not return branch_dirty,2013-08-04T20:43:10Z,2014-09-02T17:48:10Z,"c:VCS support, e:macos, t:bug",,,"I can't get the tree_status segment to work properly.  

I have the colors for branch, branch_dirty, and branch_clean set, I pass ""status_colors : true"" as an argument in my config, but I can't get the branch segment to light up when there's a dirty branch (untracked/modified files).
"
618,Powerline isn't shown,2013-08-03T10:33:36Z,2013-08-16T21:29:53Z,,,,"Hi,

I installed Powerline via Vundle:

```
 Bundle 'Lokaltog/powerline', {'rtp': '~/.vim/bundle/powerline/powerline/bindings/vim'}
 et g:Powerline_symbols = 'fancy'
```

After plugins installation via:
    :BundleInstall

And restarting Vim, Powerline isn't shown

By typing:
    :help Powerline
I got an error also.

What I'm missing?

Env:

OSX Mountain Lion

Thanks for help and time.
"
617,vim not showing git branch info,2013-08-03T08:23:40Z,2013-08-03T13:06:35Z,"c:VCS support, t:bug",,,"Vim doesn't shows the current branch info as shown in the screenshot. I'm sure that file is inside a git repository and I'm on the _master_ branch.

![screenshot showing no git branch info](https://f.cloud.github.com/assets/1515991/905337/417ea45a-fc15-11e2-88d9-adbd24f4d52f.png)
"
616,Init/teardown of Python is expensive,2013-08-02T16:18:07Z,2014-08-02T18:37:06Z,"c:b:shell, t:bug",,,"I played around a bit with the zsh prompt binding, and I noticed that e.g. hitting Ctrl+C on the shell prompt rapidly (as I often like to do to abandon the current entered command) can very easily generate Python tracebacks due to Python intecepting the signal (See #509).

Part of the issue there is the fact that there is enough time for this to even occur. It leads me to conclude that a Python process is in fact being loaded up _each time_ that shell prompt is rendered, which is IMO almost completely insane considering how heavyweight these language interpreters are these days. 

The good bit: Vim plugin should be free from this as it will use embedded Python. 

The bad: (I'll come back to edit once I confirm after testing) I suspect that the tmux binding will silently suffer from the same problem: It is likely to spool up and clean up after a Python process each and every time that tmux needs to update its status line, which will be very often. It will take about half a second to do this, resulting in a half second delay to update anything, not to mention thrashing computer resources. 

How can we address this? Perhaps there would need to be a powerline daemon. 

My main motivation for needing powerline is to get a more flexible tmux configuration. Tmux status line basically clears out to a blank line if you do not have enough space for either the left-status or right-status, which is aggravating as I often attempt to SSH in from mobile devices. 
"
615,not showing git branch,2013-08-01T17:48:57Z,2014-01-17T18:51:18Z,"c:b:shell, s:invalid, t:bug",,,"I'm using powerline in bash and it is not showing the git branch info and there is no docs about it... should it just work by default or should does it need configuration?

I tried without pygit2 and with it installed.

my git version is 1.8.1.2
"
614,bufferline integration,2013-08-01T01:59:06Z,2014-09-20T10:15:20Z,"c:b:vim, s:wontfix, t:enhancement",,,"Would be nice to have [vim-bufferline](https://github.com/bling/vim-bufferline) integration for powerline, similar to [airline](https://github.com/bling/vim-airline).
"
613,Proper mis-configuration handling,2013-07-31T01:41:41Z,2013-07-31T13:45:06Z,,AttributeError,AttributeError: 'VimPowerline' object has no attribute 'renderer',"I had a `json` configuration file, `~/config/powerline/config.json` which only contained:

``` json
{
  ""term_truecolor"": true
}
```

In a python console:

``` python
>>> json.load(open('config.json'))
{u'term_truecolor': True}
```

However, that configuration file made my vim unusable:

```
Executing VimEnter Auto commands for ""*""
autocommand :redrawstatus!

Error detected while processing function PowerlinePyeval:
line    1:
Traceback (most recent call last):
Error detected while processing function PowerlinePyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function PowerlinePyeval:
line    1:
  File ""/home/vampas/.Dotfiles/vim/bundle/powerline/powerline/vim.py"", line 155, in pyeval
Error detected while processing function PowerlinePyeval:
line    1:
    __main__.__dict__)))
Error detected while processing function PowerlinePyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function PowerlinePyeval:
line    1:
  File ""/home/vampas/.Dotfiles/vim/bundle/powerline/powerline/vim.py"", line 145, in new_window
Error detected while processing function PowerlinePyeval:
line    1:
    return self.render(window, window_id, winnr)
Error detected while processing function PowerlinePyeval:
line    1:
  File ""/home/vampas/.Dotfiles/vim/bundle/powerline/powerline/__init__.py"", line 372, in render
Error detected while processing function PowerlinePyeval:
line    1:
    return self.renderer.render(*args, **kwargs)
Error detected while processing function PowerlinePyeval:
line    1:
AttributeError: 'VimPowerline' object has no attribute 'renderer'
```

There's lots of similar output from vim, at every redraw.
"
612,Sudo vim - Disk space error,2013-07-29T14:14:35Z,2014-02-15T22:56:51Z,"c:b:vim, e:linux, t:bug",,,"When I run vim with powerline installed as my normal user it runs fine. When I sudo su to root it runs fine but when I'm on my normal user and I do sudo vim I get the following error:

```
ERROR:vim:Failed to create renderer: [Errno 28] No space left on device
Error detected while processing VimEnter Auto commands for ""*"":
Traceback (most recent call last):
Error detected while processing VimEnter Auto commands for ""*"":
  File ""/usr/local/lib/python2.7/dist-packages/powerline/__init__.py"", line 361, in update_rendererError detected while processing VimEnter Auto commands for ""*"":
    self.create_renderer(**create_renderer_kwargs)
Error detected while processing VimEnter Auto commands for ""*"":
  File ""/usr/local/lib/python2.7/dist-packages/powerline/__init__.py"", line 207, in create_renderer
Error detected while processing VimEnter Auto commands for ""*"":
    self.renderer_options['local_themes'] = self.get_local_themes(self.ext_config.get('local_themes'))
Error detected while processing VimEnter Auto commands for ""*"":
  File ""/usr/local/lib/python2.7/dist-packages/powerline/vim.py"", line 75, in get_local_themes
Error detected while processing VimEnter Auto commands for ""*"":
    for key, val in local_themes.items()))
Error detected while processing VimEnter Auto commands for ""*"":
  File ""/usr/local/lib/python2.7/dist-packages/powerline/vim.py"", line 75, in <genexpr>
Error detected while processing VimEnter Auto commands for ""*"":
    for key, val in local_themes.items()))
Error detected while processing VimEnter Auto commands for ""*"":
  File ""/usr/local/lib/python2.7/dist-packages/powerline/vim.py"", line 66, in load_theme_config
```

I don't have any .pyc files in my powerline repo and the result of df -i is

```
Filesystem                     Inodes    IUsed     IFree IUse% Mounted on
/dev/mapper/it12--0391-root  14991360   421921  14569439    3% /
none                           500539        1    500538    1% /sys/fs/cgroup
udev                           498075      516    497559    1% /dev
tmpfs                          500539      488    500051    1% /run
none                           500539        5    500534    1% /run/lock
none                           500539       13    500526    1% /run/shm
none                           500539       25    500514    1% /run/user
/dev/sda1                      124496      273    124223    1% /boot
```

So I shouldn't have any issue with running out of inodes. 
"
611,Battery indicator,2013-07-28T04:01:08Z,2014-02-15T23:02:55Z,"a:segment, c:common segments, t:enhancement",,,"Hi,
I just wanted to contribute by building a battery indicator for Powerline, so here it is:
https://github.com/xcambar/powerline-segment-battery

It doesn't show a percentage but a ""Zelda-like"" row of hearts indicating the level of battery.

This is my first Powerline segment and almost me very first lines of Python, so feel free to feedback if anything seems weird code-wise.

Thx!
"
610,ssh hostname disappeared after sudo,2013-07-25T07:52:50Z,2014-01-17T18:57:42Z,"c:b:shell, s:invalid, t:bug",,,"When I do ssh to some host, I see lock symbol, hostname and username (and it's ok). But after I do ""sudo -s"" there - prompt becomes just like in local computer (""root"" and path only). Is it possible to leave all segments on after sudo?
"
609,vim: empty config.json causes powerline to freak out,2013-07-24T05:44:13Z,2013-07-31T05:56:20Z,,,,"### Steps to reproduce:
1. Get Powerline set up with vim
2. `mkdir -p ~/.config/powerline`
3. `echo '{}' > ~/.config/powerline/config.json`
4. Watch the massive tracebacks
### What I expected:

Powerline would read in the default/shipped config.json and merge in my changes from `~/.config/powerline` (if any).
### Notes

I'm only interested in changing a few settings. I want the rest to remain stable with what powerline ships. i.e. I want Lokaltog and company to manage most of my config with one or two overrides.

This also makes experimentation easier as a new user.  Not to mention having to look up `vim -u /dev/null config.json` as a way to edit a file without using my (now broken) `.vimrc`.

Ciao!
"
608,Alternate branch symbol,2013-07-23T18:32:23Z,2014-08-15T06:33:53Z,"a:doc update, c:documentation, t:enhancement",,,"Just found an alternate branch symbol: `⎇` (U+2387, ALTERNATIVE KEY SYMBOL). Its appearance is not as good, but it may be useful to add it somewhere to documentation. It is present in some fonts on my system (not in terminus though; and konsole fails badly to display it when font is set to terminus).

---

Found in a topic [here](http://habrahabr.ru/post/187588/), in an example of [airline](https://github.com/bling/vim-airline) documentation.
"
607,It seems doesn't work on my vim with OS X.,2013-07-23T16:18:01Z,2014-01-17T18:58:51Z,"c:b:vim, s:invalid, t:bug",,,"I installed vim-powerline by vundle and set terminal fonts be the DejaVu from the ""powerline fonts"" package. It seems doesn't work.
![hehe](https://f.cloud.github.com/assets/2018237/842876/6170e60c-f3b3-11e2-84f8-47fa06bce742.png)
"
606,Problem with build,2013-07-21T06:01:04Z,2014-02-15T23:07:36Z,"c:installation, s:duplicate, t:bug",,,"My build of powerline has been failing off late... 
I install into the directory - `$HOME/.powerline`
With the commands --

```
cd ${HOME}/.powerline && ./setup.py build && ./setup.py install --user
```

And this is the build log

```
running build
running build_py
copying powerline/__init__.py -> build/lib/powerline
copying powerline/colorscheme.py -> build/lib/powerline
copying powerline/ipython.py -> build/lib/powerline
copying powerline/matcher.py -> build/lib/powerline
copying powerline/renderer.py -> build/lib/powerline
copying powerline/segment.py -> build/lib/powerline
copying powerline/shell.py -> build/lib/powerline
copying powerline/theme.py -> build/lib/powerline
copying powerline/vim.py -> build/lib/powerline
copying powerline/bindings/__init__.py -> build/lib/powerline/bindings
copying powerline/lib/__init__.py -> build/lib/powerline/lib
copying powerline/lib/config.py -> build/lib/powerline/lib
copying powerline/lib/file_watcher.py -> build/lib/powerline/lib
copying powerline/lib/humanize_bytes.py -> build/lib/powerline/lib
copying powerline/lib/inotify.py -> build/lib/powerline/lib
copying powerline/lib/memoize.py -> build/lib/powerline/lib
copying powerline/lib/monotonic.py -> build/lib/powerline/lib
copying powerline/lib/threaded.py -> build/lib/powerline/lib
copying powerline/lib/tree_watcher.py -> build/lib/powerline/lib
copying powerline/lib/url.py -> build/lib/powerline/lib
copying powerline/lint/__init__.py -> build/lib/powerline/lint
copying powerline/lint/inspect.py -> build/lib/powerline/lint
copying powerline/matchers/__init__.py -> build/lib/powerline/matchers
copying powerline/matchers/vim.py -> build/lib/powerline/matchers
copying powerline/renderers/__init__.py -> build/lib/powerline/renderers
copying powerline/renderers/bash_prompt.py -> build/lib/powerline/renderers
copying powerline/renderers/ipython.py -> build/lib/powerline/renderers
copying powerline/renderers/pango_markup.py -> build/lib/powerline/renderers
copying powerline/renderers/shell.py -> build/lib/powerline/renderers
copying powerline/renderers/tmux.py -> build/lib/powerline/renderers
copying powerline/renderers/vim.py -> build/lib/powerline/renderers
copying powerline/renderers/zsh_prompt.py -> build/lib/powerline/renderers
copying powerline/segments/__init__.py -> build/lib/powerline/segments
copying powerline/segments/common.py -> build/lib/powerline/segments
copying powerline/segments/ipython.py -> build/lib/powerline/segments
copying powerline/segments/shell.py -> build/lib/powerline/segments
copying powerline/segments/vim.py -> build/lib/powerline/segments
copying powerline/bindings/ipython/__init__.py -> build/lib/powerline/bindings/ipython
copying powerline/bindings/ipython/post_0_11.py -> build/lib/powerline/bindings/ipython
copying powerline/bindings/ipython/pre_0_11.py -> build/lib/powerline/bindings/ipython
copying powerline/bindings/qtile/__init__.py -> build/lib/powerline/bindings/qtile
copying powerline/bindings/qtile/widget.py -> build/lib/powerline/bindings/qtile
copying powerline/bindings/vim/__init__.py -> build/lib/powerline/bindings/vim
copying powerline/bindings/zsh/__init__.py -> build/lib/powerline/bindings/zsh
copying powerline/lib/vcs/__init__.py -> build/lib/powerline/lib/vcs
copying powerline/lib/vcs/bzr.py -> build/lib/powerline/lib/vcs
copying powerline/lib/vcs/git.py -> build/lib/powerline/lib/vcs
copying powerline/lib/vcs/mercurial.py -> build/lib/powerline/lib/vcs
copying powerline/lint/markedjson/__init__.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/composer.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/constructor.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/error.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/events.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/loader.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/markedvalue.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/nodes.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/parser.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/reader.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/resolver.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/scanner.py -> build/lib/powerline/lint/markedjson
copying powerline/lint/markedjson/tokens.py -> build/lib/powerline/lint/markedjson
running egg_info
writing requirements to Powerline.egg-info/requires.txt
writing Powerline.egg-info/PKG-INFO
writing top-level names to Powerline.egg-info/top_level.txt
writing dependency_links to Powerline.egg-info/dependency_links.txt
writing requirements to Powerline.egg-info/requires.txt
writing Powerline.egg-info/PKG-INFO
writing top-level names to Powerline.egg-info/top_level.txt
writing dependency_links to Powerline.egg-info/dependency_links.txt
reading manifest file 'Powerline.egg-info/SOURCES.txt'
reading manifest template 'MANIFEST.in'
writing manifest file 'Powerline.egg-info/SOURCES.txt'
copying powerline/config_files/colors.json -> build/lib/powerline/config_files
copying powerline/config_files/config.json -> build/lib/powerline/config_files
copying powerline/config_files/colorschemes/ipython/default.json -> build/lib/powerline/config_files/colorschemes/ipython
copying powerline/config_files/colorschemes/shell/default.json -> build/lib/powerline/config_files/colorschemes/shell
copying powerline/config_files/colorschemes/shell/solarized.json -> build/lib/powerline/config_files/colorschemes/shell
copying powerline/config_files/colorschemes/tmux/default.json -> build/lib/powerline/config_files/colorschemes/tmux
copying powerline/config_files/colorschemes/vim/default.json -> build/lib/powerline/config_files/colorschemes/vim
copying powerline/config_files/colorschemes/vim/solarized.json -> build/lib/powerline/config_files/colorschemes/vim
copying powerline/config_files/colorschemes/wm/default.json -> build/lib/powerline/config_files/colorschemes/wm
copying powerline/config_files/themes/ipython/in.json -> build/lib/powerline/config_files/themes/ipython
copying powerline/config_files/themes/ipython/in2.json -> build/lib/powerline/config_files/themes/ipython
copying powerline/config_files/themes/ipython/out.json -> build/lib/powerline/config_files/themes/ipython
copying powerline/config_files/themes/ipython/rewrite.json -> build/lib/powerline/config_files/themes/ipython
copying powerline/config_files/themes/shell/default.json -> build/lib/powerline/config_files/themes/shell
copying powerline/config_files/themes/shell/default_leftonly.json -> build/lib/powerline/config_files/themes/shell
copying powerline/config_files/themes/tmux/default.json -> build/lib/powerline/config_files/themes/tmux
copying powerline/config_files/themes/vim/cmdwin.json -> build/lib/powerline/config_files/themes/vim
copying powerline/config_files/themes/vim/default.json -> build/lib/powerline/config_files/themes/vim
copying powerline/config_files/themes/vim/help.json -> build/lib/powerline/config_files/themes/vim
copying powerline/config_files/themes/vim/quickfix.json -> build/lib/powerline/config_files/themes/vim
copying powerline/config_files/themes/wm/default.json -> build/lib/powerline/config_files/themes/wm
copying powerline/bindings/awesome/powerline-awesome.py -> build/lib/powerline/bindings/awesome
copying powerline/bindings/awesome/powerline.lua -> build/lib/powerline/bindings/awesome
copying powerline/bindings/bash/powerline.sh -> build/lib/powerline/bindings/bash
copying powerline/bindings/tmux/powerline.conf -> build/lib/powerline/bindings/tmux
copying powerline/bindings/vim/plugin/powerline.vim -> build/lib/powerline/bindings/vim/plugin
copying powerline/bindings/zsh/powerline.zsh -> build/lib/powerline/bindings/zsh
running build_scripts
copying and adjusting scripts/powerline -> build/scripts-2.7
copying and adjusting scripts/powerline-lint -> build/scripts-2.7
running install
error: can't combine user with prefix, exec_prefix/home, or install_(plat)base
```

Could you tell me what is wrong?
"
605,Fix #604,2013-07-20T13:16:06Z,2013-07-31T06:03:57Z,,,,"Fixes running setup on python 3.x on linux system with their default encoding set to something other than utf-8.
"
604,python-powerline-git not building,2013-07-18T09:35:17Z,2013-07-31T06:03:54Z,,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 40: ordinal not in range(128),"Running setup.py or installing from aur gives me this error:

Traceback (most recent call last):

<pre>
  File ""setup.py"", line 11, in <module>
    README = open(os.path.join(here, 'README.rst')).read()
  File ""/usr/lib/python3.3/encodings/ascii.py"", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 40: ordinal not in range(128)
</pre>

Position 40 in README.rst is obviously the ae ligature, but glancing at the code it seems like it should decode that just fine.
This issue does not occur with the python2 version (which is working fine atm).  I am happy to provide any additional data which might be needed.  Thanks for the great work!
"
603,Installation Issues with Vundle,2013-07-17T03:28:15Z,2013-07-28T00:04:52Z,"c:b:vim, s:invalid, t:bug",,,"I am having trouble getting powerline to run after I've installed it with Vundle. I added the following to my `.vimrc`

```
Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
```

and ran `BundleInstall`. Once installation completes (almost instantly), the powerline bar is added to the bottom of that buffer. However, as soon as I close that buffer, it disappears.

What am I doing wrong?
"
602,Error when installing in windows,2013-07-15T19:57:23Z,2014-02-15T21:24:57Z,"c:b:vim, e:windows, t:bug",,,"Copying latest git hub to say 
c:\program files\vim\vimfiles\powerline

and setting rtp to
set rtp+=c:\program files\vim\vimfiles\powerline\bindings\vim

Running this shows error 
Error detected while processing VimEnter Auto commands for ""*"";
E859 Failed to convert returned python object to vim value
"
601,Interval not working,2013-07-15T16:45:49Z,2014-03-14T21:31:00Z,"c:core, t:bug",,,"I have a ThreadedSegment with an interval of 60 and it appears to be running every couple of seconds rather than every 60 seconds.  Is there something else I need to configure to only run every minute?
"
600,Add powerline to Fedora repositories,2013-07-14T22:31:26Z,2014-08-15T17:22:42Z,t:enhancement,,,"Hi, I'm working on the introduction of powerline to the Fedora repositories. 
You can follow the review process here : https://bugzilla.redhat.com/show_bug.cgi?id=984321
"
599,Fix latest psutil breaking network segment,2013-07-14T09:37:16Z,2013-07-31T06:12:11Z,,,,
598,Powerline looks weird when using vim with tmux,2013-07-14T04:15:21Z,2014-03-14T21:46:46Z,"c:b:vim, t:bug",,,"I'm using Ubuntu 12.04 LTS, vim (janus distribution), bash (Gnome Terminal) and tmux. Powerline works fine when I use it without tmux but it doesn't work when using with tmux (I've enabled powerline, only for vim).  Sometimes it appears broken, some times nothing appears/lags and sometimes without any colors.

I also tried using Konsole (instead of default Gnome Terminal) but that doesn't work either.

Update1. Powerline works fine when I use screen instead of tmux, with vim.
Update2. I tried using other version of tmux but it it doesn't make any difference.
"
597,powerline-symbols sitting too high,2013-07-13T20:07:47Z,2013-07-31T06:17:24Z,,,,"Since I am on Arch Linux I followed the manual and installed Powerline-Symbols.otf and the fontconfig file.

It looked fine until I my terminal font to Inconsolata (non-patched). The symbols are a tiny bit too big or shifted, see attached image

![screen](https://f.cloud.github.com/assets/907766/793326/b604b978-ebf7-11e2-81ea-a286478e4669.png)

_Edit:_ 
Something similar with font Monospace, just at the bottom of the line
![screen](https://f.cloud.github.com/assets/907766/793332/49370d72-ebf8-11e2-8b81-77fbfd91bf76.png)
"
596,Show background jobs in bash and zsh,2013-07-13T04:43:24Z,2013-11-18T07:24:25Z,,,,"This is for #595
"
595,Add segment for background jobs,2013-07-13T04:39:05Z,2014-01-17T19:02:33Z,"a:segment, c:b:shell, t:enhancement",,,"It would be helpful to have the number of background jobs in the prompt somewhere, if there are background jobs.
"
594,"Installation error for OSX, (--user flag)",2013-07-11T15:39:21Z,2013-07-16T16:05:51Z,"c:installation, e:macos, t:bug",,,"Running OSX 10.8.4. I have powerline installed for vim and it's working fine.  When I try to install it for OSX I get the following error

```
    pip install --user git+git://github.com/Lokaltog/powerline
Downloading/unpacking git+git://github.com/Lokaltog/powerline
  Cloning git://github.com/Lokaltog/powerline to /var/folders/hn/1f42z2qn5z7f5r7fvbbymb9c0000gn/T/pip-N15MlS-build
  Running setup.py egg_info for package from git+git://github.com/Lokaltog/powerline

Installing collected packages: Powerline
  Running setup.py install for Powerline
    error: can't combine user with prefix, exec_prefix/home, or install_(plat)base
    Complete output from command /usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python -c ""import setuptools;__file__='/var/folders/hn/1f42z2qn5z7f5r7fvbbymb9c0000gn/T/pip-N15MlS-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/hn/1f42z2qn5z7f5r7fvbbymb9c0000gn/T/pip-eXWV8v-record/install-record.txt --single-version-externally-managed --user:
    running install

error: can't combine user with prefix, exec_prefix/home, or install_(plat)base

----------------------------------------
Command /usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python -c ""import setuptools;__file__='/var/folders/hn/1f42z2qn5z7f5r7fvbbymb9c0000gn/T/pip-N15MlS-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/hn/1f42z2qn5z7f5r7fvbbymb9c0000gn/T/pip-eXWV8v-record/install-record.txt --single-version-externally-managed --user failed with error code 1 in /var/folders/hn/1f42z2qn5z7f5r7fvbbymb9c0000gn/T/pip-N15MlS-build
Storing complete log in /Users/pfista/.pip/pip.log
```
"
593,Funny characters under Arch Linux terminal: Â timÂ î°Â ~Â î°Â ,2013-07-11T03:51:18Z,2013-07-31T06:22:19Z,"c:b:shell, s:invalid, t:bug",,,"I'm using the python2-powerline-git package from the AUR.
Tested in urxvt (with unicode 3) and Konsole in bash and zsh.

I've set my locale in /etc/locale to en_US UTF-8
What could I be doing wrong?
"
592,vim freezes when closing horizontal split with powerline and nerd-tree/command-t,2013-07-10T17:19:42Z,2015-05-02T12:28:31Z,"c:b:vim, t:bug",,,"Hey,

I use Powerline for vim, and I have quite a nasty bug when I use horizontal splits (which is all the time). Whenever I close one of the split, vim freezes: I am unable to enter any command or move, most of the time the drawing of the vim interface is broken (as if the horizontal split was not successfully closed), so I must kill the terminal instance.

If I use vim inside tmux, then vim still breaks but I can enter tmux commands and scroll for example, but the tmux window is otherwise unusable and I must kill it.

I use the latest version of powerline which I installed by cloning the git repository. I use pathogen for vim plugins.

I tested without any plugin and then with some of the ones I use everyday. I figured that it only breaks with the following plugins:
- command-t
- nerd-tree
- nerd-commenter

I use other vim plugins (ag, vim-rails, vim-surround, vim-fugitive, ...) and they don't cause any freeze when used with powerline.

**The plugins which break vim when used along with powerline do not cause any issue when used without powerline.**

The issue seems to appear also when I close vertical splits.

Any idea?

Thanks!
"
591,Selectively turn off divider between segment and next,2013-07-10T04:00:33Z,2013-07-31T06:19:49Z,,,,"Is there a way to turn off a segment having a divider following it?

```
 [p]  2.7 > ⓔ  newenv 
```

I want it to look like this

```
 [p]  2.7  ⓔ  jmpstrtz 
```
"
590,New Segment Development Docs still lacking,2013-07-10T03:51:31Z,2014-08-29T06:46:47Z,"c:documentation, t:enhancement",,,"There currently isn't enough documented with regards to how you make new segments in a 'plugin' style method. 

With much difficulty I have managed to make a new plugin, but I feel like I have tripped over getting it to work, not actually done what I intended to in structured fashion when I set out at the start of my coding.

For instance: 
- How do you theme a segment without forcing each user to manually edit their config to add new theming config info. I want to be able to bundle these up and share them, manual config editing makes this harder.
- Whats 'pl' do and why does it break things.

For instance:

```
@requires_segment_info
def pythonversion(segment_info):
```

works, while 

```
@requires_segment_info
def pythonversion(pl, segment_info):
```

does not work and throws an error about not being passed enough arguments. I copied a segment out of common.py and just changed the name of the segment, and it broke.

Those are just my personal symptoms, I think in general, the entire plugin/segments and doc thing needs major help to get new people making nice reusable modular segments, without needing to just put them inside powerline itself and be sending pull requests instead of publishing themselves.
"
589,Errors when running powerline.vim.setup(),2013-07-10T00:44:43Z,2014-03-14T21:36:43Z,"c:b:vim, t:bug",KeyError,KeyError: 'spaces',"I am using vim version 7.3.762 compiled with python3.3 support. Whenever I run powerline.vim.setup() any way, I get a large ammount of errors:

``` python
2013-07-09 20:34:47,879:ERROR:vim:Failed to construct renderer object: 'spaces'
Traceback (most recent call last):
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/powerkine/__init__.py"", line 243, in create_renderer
    renderer = Renderer(**self.renderer_options)
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/powerline/renderers/vim.py"", line 30, in __init__
    super(VimRenderer, self).__init__(*args, **kwargs)
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/power
line/renderer.py"", line 80, in __init__
    self.theme = Theme(theme_config=theme_config, **theme_kwargs)
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/powerline/theme.py"", line 34, in __init__
    self.spaces = theme_config.get('spaces', common_config['spaces'])
KeyError: 'spaces'

2013-07-09 20:36:53,085:ERROR:vim:Failed to create renderer: 'spaces'
Traceback (most recent call last):
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/powerline/__init__.py"", line 361, in update_renderer
    self.create_renderer(**create_renderer_kwargs)
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/powerline/__init__.py"", line 243, in create_renderer
    renderer = Renderer(**self.renderer_options)
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/powerline/renderers/vim.py"", line 30, in __init__
    super(VimRenderer, self).__init__(*args, **kwargs)
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/powerline/renderer.py"", line 80, in __init__
    self.theme = Theme(theme_config=theme_config, **theme_kwargs)
  File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/powerline/theme.py"", line 34, in __init__
    self.spaces = theme_config.get('spaces', common_config['spaces'])
KeyError: 'spaces'
```

And then I constantly get:

```
E860: Eval did not return a valid python 3 object
```

just like in #50. I've tried to do what ZyX-I said, but the file is no longer in that place, and the newest version doesn't contain the command ZyX-I says to change.

If there's anything else I can do to get more debugging output, I'll do it.
"
588,Installation issues,2013-07-09T18:05:10Z,2014-01-26T14:14:24Z,"c:installation, e:macos, t:bug",,,"Hello!

When I try to run the command to install Powerline using pip (pip install --user git+git://github.com/Lokaltog/powerline) it doesn't seem to actually install anything, and if I run ""pip freeze"" afterwards it doesn't list Powerline. 

Pip: 1.3.1 (/usr/local/bin/pip)
Python: 2.7.5 (/usr/local/bin/python)
OS X: 10.7.5

Do you guys have any idea what could be wrong?
"
587,Set different window name foreground based on activity and bell status.,2013-07-09T01:36:19Z,2013-07-31T12:31:20Z,,,,"Use `#[default]` to reset color settings on inactive window name, so it can be controlled by `*-fg` options.

Refs #248.

![screenshot on 2013-07-09 at 09 33 24](https://f.cloud.github.com/assets/35768/765702/e8dff902-e837-11e2-8183-91ef86c6407d.png)
"
586,Can't import vim_getvar,2013-07-07T12:43:20Z,2013-07-07T22:17:30Z,,ImportError,ImportError: cannot import name vim_getvar,"I've just done a BundleUpdate in vim and powerline now appears to be broken (it worked fine before).  The message I get is:

> An error occurred while importing the Powerline package. This could be caused by an invalid sys.path setting, or by an incompatible Python version (Powerline requires Python 2.6+ or 3.2+ to work). Please consult the troubleshooting section in the documentation for possible solutions.

I've done a little investigation and it appears to be an import error. If my terminal is in the powerline directory then I can do:

```
$ python
Python 2.7.4 (default, Apr 19 2013, 18:28:01)
[GCC 4.7.3] on linux2
>>> from powerline.bindings.vim import vim_getvar
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
ImportError: cannot import name vim_getvar
>>> from powerline.bindings import vim
>>> dir(vim)
['VimFunc', '__builtins__', '__doc__', '__file__', '__name__', '__package__', '__path__', 'getbufvar', 'json', 'vim', 'vim_get_func', 'vim_set_global_var']
```

Looking at the code it looks fine, so I'm a bit mystified as to what is going on.

I am at commit ID c1ae7f35987d6016c4053eee862cac8620dedfe5

I am using Ubuntu 13.04, python 2.7.4, vim 7.3 (patches 1-547) (the standard vim-gnome package from Ubuntu).
"
585,Cannot display custom glyphs,2013-07-06T11:08:50Z,2013-07-08T21:14:15Z,"c:font, t:bug",,,"Hi I'm on Arch Linux and installed python-powerline-git initially. However it didn't work (shows me 'wrong sys.path or incompatible python version'); so I switched to python2-powerline-git. Now vim does load up the powerline package but all the custom glyphs are displayed as squares.

Any help?
"
584,Mode segment doesn't respect exclude_modes / include_modes,2013-07-04T14:54:07Z,2014-01-17T19:19:26Z,"c:b:vim, t:enhancement",,,"I was trying to show the mode indicator for non-current buffers as well, but no matter which `exclude_modes` / `include_modes` setting I tried it still wasn't shown.

Looking at the code in `segments/vim.py`, `mode()` always returns `None` when mode is `nc`. Is there a reason for this?
"
583,Rendering problems with Inconsolata LGC font in gVim,2013-07-04T11:30:37Z,2014-08-25T03:59:56Z,"c:b:vim, c:font, s:invalid, t:bug",,,"Powerline symbols look stretched and shifted down when using Inconsolata LGC font. I'm using gVim. Font was patched manually using the manual. Same thing is observed in sakura terminal (it does support fontconfig, but using normal or patched font doesn't make any difference).

![Example in gVim](http://stonehenge-3.net.ru/powerline_problem.png)

System: Arch Linux, package python2-powerline-git.
"
582,Vim start up screen no longer shows with powerline sourced,2013-07-03T18:47:59Z,2014-01-17T22:30:01Z,"c:b:vim, s:duplicate, t:bug",,,"I've finally identified by bisection of all bundles installed using vundle, powerline makes vim start to a blank screen instead of the default start screen showing ""Vi Improved...""

It is a slight annoyance because it was peculiar and I've only noticed it recently but nothing intolerable. Not sure if we could get a fix for this.
"
581,inotify setup is slow (big repos / remote files (sshfs)),2013-07-03T13:28:35Z,,"c:VCS support, t:bug",,,"When using `status_coiors` for the branch segment, inotify is being setup for every single file.

This is slow for bigger repositories in general, but takes ""forever"" if there are many files/directories in a sshfs mounted directory.

It might be helpful to make this configurable and/or add a fallback to not use the inotify method in case it takes too long.

In this case, the files mounted via sshfs are not in the Git repository. It might make sense to skip any directories unknown to Git when setting up the watches.

While at it, it appears that the process of inotify initialization does not react to killing the Vim process (i.e. it requires ""kill -9"" to kill the hanging Vim instance).

This is an excerpt of the strace output:

```
    [pid 16089] inotify_add_watch(10, ""/mnt/union/example.com/shared/asset/000/066/366/66366_1BUXLU_1.jpg"", IN_MODIFY|IN_ATTRIB|IN_MOVED_FROM|IN_MOVED_TO|IN_CREATE|IN_DELETE|IN_DELETE_SELF|IN_MOVE_SELF|IN_ONLYDIR|IN_DONT_FOLLOW) = -1 ENOTDIR (Not a directory)
    [pid 16089] lstat(""/mnt"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
    [pid 16089] lstat(""/mnt/union"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
    [pid 16089] lstat(""/mnt/union/example.com"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
    [pid 16089] lstat(""/mnt/union/example.com/shared"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
    [pid 16089] lstat(""/mnt/union/example.com/shared/asset"", {st_mode=S_IFDIR|0775, st_size=40, ...}) = 0
    [pid 16089] lstat(""/mnt/union/example.com/shared/asset/000"", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0
    [pid 16089] lstat(""/mnt/union/example.com/shared/asset/000/066"", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0
    [pid 16089] lstat(""/mnt/union/example.com/shared/asset/000/066/391"", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0
```
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/1131767-inotify-setup-is-slow-big-repos-remote-files-sshfs?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
580,Dont log inotify missing error when using branch coloring,2013-07-03T04:10:37Z,2013-07-31T12:28:44Z,,,,"The error message about inotify being missing when branch coloring is
enabled was being logged for every directory and for every invocation
of powerline in a shell, without powerline-daemon. Dont log it, since
the log is printed to stderr when using powerline in a shell without
powerline-daemon. Also improve the error message on OS X. Fixes #578
"
579,Show the position of current view instead of current line,2013-07-02T08:55:56Z,2014-01-17T16:13:44Z,,,,"Ref #539

Like #540, but this time, no new segment is introduced. Instead, I renamed 'line_percent' to 'position' and it shows the percentage of the current view as default.
"
578,libc is too old error from lib/tree_watcher.py,2013-07-02T02:21:15Z,2013-07-03T04:41:45Z,,,,"I get an error from the (I assume) branch segment when I am in git repositories in zsh:

```
2013-07-02 09:13:36,902:WARNING:shell:branch:Failed to watch path: /path/to/repo with error: libc is too
```

I use Mac OX 10, 10.8.4, with system python. This started happening after I updated yesterday to the latest code.

https://github.com/Lokaltog/powerline/blob/develop/powerline/lib/tree_watcher.py#L106 is the line raising the exception.
"
577,powerline doing unwanted net connections,2013-07-01T18:56:07Z,2014-01-17T19:14:37Z,"c:b:tmux, s:invalid, t:bug",,,"Found this status line on my tmux session:

http://i.imgur.com/WsSQsVh.png

![screen shot 2013-07-01 at 12 46 02 pm](https://f.cloud.github.com/assets/157223/732356/d623378c-e280-11e2-9bb4-75eea2c433a3.png)

I happened first time today and I'm using powerline since a long time.

Then I found that is connecting to:
icanhazip.com
freegeoip.net
yts1.yql.vip.bf1.yahoo.com
...

can somebody tell me what is going on?

pasting my powerline config:

```
###
if-shell 'test -z ""$POWERLINE_COMMAND""' 'if-shell ""which powerline-client"" ""set-environment -g POWERLINE_COMMAND powerline-client"" ""set-environment -g POWERLINE_COMMAND powerline""'
set -g status on
set -g status-utf8 on
set -g status-interval 2
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]#(eval $POWERLINE_COMMAND tmux left)'
set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p ""#D""`)'
set -g status-right-length 150
set -g window-status-format ""#[fg=colour244,bg=colour234]#I #[fg=colour240] #[fg=colour249]#W ""
set -g window-status-current-format ""#[fg=colour234,bg=colour31]#[fg=colour117,b
```
"
576,Segments do not appear in tmux. `powerline tmux right` works,2013-07-01T15:27:51Z,2013-07-02T21:42:50Z,,,,"I have installed and everything is the defaults (except that I removed the imap segment). I am `source`ing the right file in my `.tmux.conf` and I have `source`d `.tmux.conf` in all of my running sessions. The segments do not appear despite the `powerline tmux right` command outputting the segments correctly. It is not a `.tmux.conf` error because if I change the `set -g status-right` line in the `source`d file to just print some arbitrary String, it works.

Any additional troubleshooting steps that I'm missing?
"
575,[vim] - Disable powerline for particular buffer,2013-06-30T13:56:21Z,2014-01-17T19:15:02Z,"c:b:vim, s:wontfix, t:enhancement",,,"Is it possible to disable powerline for particular buffer, defined by buffer name in config. 
This is needed for compatibility with other plugins, such as ctrlp, which are use status line too and powerline functionality is not needed in this buffers.
"
574,Possibility for adding segment without redefining whole theme,2013-06-30T10:29:58Z,2014-09-20T10:58:26Z,"c:core, s:wontfix, t:enhancement",,,"Is subj possible like in vim-powerline?
"
573,Add fontpatcher to arch packages.,2013-06-29T02:56:12Z,2013-07-31T13:31:37Z,,,,"I wanted to do some patching, and having it available with the main package made the most sense to me. Don't know a thing about gentoo ebuilds, so left that alone.
"
572,Clean up package function for python3,2013-06-28T15:48:40Z,2013-07-31T13:31:37Z,,,,"`|| return 1` is very old syntax and is no longer needed. And, the `install` command can handle directory creation and file installation in the same command which cuts a great deal of unnecessary commands out.

Also, remember, `msg2` in the package function will be printed during the making of the package, not during the installation. Thus, instead of `msg2` (as they really serve only as documentation), comments should be preferred.
"
571,Clean up package function for python2,2013-06-28T15:43:51Z,2013-07-31T13:31:37Z,,,,"`|| return 1` is very old syntax and is no longer needed. And, the `install` command can handle directory creation and file installation in the same command which cuts a great deal of unnecessary commands out.

Also, remember, msg2s in the package function will be printed during the making of the package, not during the installation. Thus, instead of msg2s (as this really would serve only as documentation), comments should be preferred.
"
570,Powerline looks strange when i split window.,2013-06-28T04:11:56Z,2013-06-28T12:19:10Z,,,,"Powerline looks strange when i split window.
![qq20130628-1](https://f.cloud.github.com/assets/1897198/720043/d8b8b024-dfa8-11e2-9dd3-375f87fcb970.png)
"
569,Support low values of line2byte,2013-06-27T15:25:10Z,2013-06-28T11:41:19Z,,,,"Fixes #567
"
568,[VIM] Add light version of colorscheme solarized,2013-06-27T13:48:10Z,2014-01-17T19:15:52Z,"c:b:vim, t:enhancement",,,"I'd like to use the solarized powerline colorscheme when background is set to light.

You only have to swap some colors:
- base00 with base0
- base01 with base1
- base02 with base2
- base03 with base3

Result:

``` viml
    [...]
    \ 'base3'          : [234, 0x002b36],
    \ 'base2'          : [235, 0x073642],
    \ 'base1'          : [240, 0x586e75],
    \ 'base0'          : [241, 0x657b83],
    \ 'base00'         : [244, 0x839496],
    \ 'base01'         : [245, 0x93a1a1],
    \ 'base02'         : [254, 0xeee8d5],
    \ 'base03'         : [230, 0xfdf6e3],
    [...]
```

I don't know how I can contribute.
"
567,detect file existence in file_size segment,2013-06-27T10:41:57Z,2013-06-28T11:41:17Z,,,,"I'm trying to put file_size in vim theme
It works well when the file exists but will give an error when the file is not exist
I hope file_size can detect file existence and show 'NA' or something like this instead of give an error
"
566,zsh powerline displays prompt incorrectly when sshed in and inside a git repository,2013-06-27T00:47:01Z,2013-06-28T21:52:35Z,,,,"When sshed into a machine using zsh with Powerline as the prompt, and when `cd`ed into a git repository, Powerline places the cursor and the right side git information at the wrong position. For example, in the following screenshot:

![powerline - badprompt](https://f.cloud.github.com/assets/780485/713256/560a11a0-dec1-11e2-812a-0935797f7f72.png)

I'm using the default Powerline segments and haven't customized anything. I've been able to reproduce on two Macs, both running Python 2.7.5 and zsh 5.0.2 with the zpython module. On both machines, Powerline looks fine when run locally. In addition, when sshed in to one of these machines, the prompt is fine in directories that _aren't_ git repositories.
"
565,Modify Unicode Symbol Matrix in Docs,2013-06-26T23:24:27Z,2014-01-17T19:20:14Z,"c:documentation, s:wontfix",,,"Powerline docs contain a chart of the new Unicode symbols. Please make it show old and new code points side by side. Many themers across github and blogs still use old code points and fonts. It took me days to find

https://github.com/Lokaltog/powerline/commit/53fbfe15fead8cc7598bcb4ee9714a221ab7e446

...and even that is not simple to translate into a migration table. A python or perl script to find/replace globally and recursively might be apropos. Also useful, https://aur.archlinux.org/packages/uniutils/
"
564,Add LilyTerm to Documentation Matrix,2013-06-26T21:59:30Z,2014-01-17T19:24:02Z,"c:documentation, s:wontfix, t:enhancement",,,"LilyTerm should appear in the matrix in the powerline documentation. It supports fontconfig and is a very nice, lightweight replacement for urxvt, which does not.
"
563,Dividers look bigger than status line,2013-06-26T16:28:47Z,2013-06-26T16:32:06Z,,,,"![screen shot 2013-06-26 at 10 16 17 am](https://f.cloud.github.com/assets/157223/710524/0de3cfb8-de7d-11e2-896e-2f07c6708088.png)

As can be seen in the screenshot, dividers look bigger than the status line, this is fixed if I use font size of 18 (too big).

All the fonts were downloaded from github patched fonts https://github.com/Lokaltog/powerline-fonts/

Using power line  Mon Jun 10 11:53:40 2013 +0200 version.

OSX: 10.8.4
iTerm2:Build 1.0.0.20130624
"
562,Segments do not appear in tmux. `powerline-tmux: command not found`,2013-06-24T16:37:08Z,2013-07-01T15:22:49Z,,,,"I just installed today following the documentation. I've added the `source` line to my .tmux.conf and the theme and fonts and everything show up ion my status bar, but it just shows the normal tmux stuff.

When searching it was mentioned that `powerline-tmux right` should output the right segments contents however this command is not found on my system which I assume is the root of the problem. What did I miss?
"
561,Install problem when try `python from ...`,2013-06-24T08:08:37Z,2014-01-17T19:24:22Z,"c:b:vim, t:bug",,,"```
~ pip install --user git+git://github.com/Lokaltog/powerline
Downloading/unpacking git+git://github.com/Lokaltog/powerline
  Cloning git://github.com/Lokaltog/powerline to /tmp/pip-cuoElK-build
  Running setup.py egg_info for package from git+git://github.com/Lokaltog/powerline

Cleaning up...
~ python from powerline.vim import setup as powerline_setup 
python: can't open file 'from': [Errno 2] No such file or directory
```

I'v following this document.
https://powerline.readthedocs.org/en/latest/overview.html#vim-statusline

```
Ubuntu 13.04 amd64
 ~ python --version
Python 2.7.4
```
"
560,Linux & Powerline & Fonts,2013-06-24T07:37:59Z,2013-06-28T12:24:52Z,,,,"I have a problem with configuring the font for vim-powerline... and yes I know it's deprecated. Hopefully there is still somebody who can give me a hint how to solve this...
Basically I did install those patched fonts and updated the font-cache and even restarted the system. I am using the patched Menlo font, but still my powerline seems broken as you can see in the following screenshot 

![screenshot](https://f.cloud.github.com/assets/598566/693931/bad6ca60-dca0-11e2-9b93-6437b4329069.png)
"
559,Support ~/ directories in powerline-lint,2013-06-22T16:33:24Z,2013-06-28T11:41:19Z,,,,"Ref #533.
"
558,In place of failure create new window ID in case of duplicate ID,2013-06-22T15:34:18Z,2013-06-28T11:41:19Z,,,,"Fixes #545
Fixes #537
"
557,strange issue when using powerline with tmux (Mac OSX),2013-06-22T13:15:26Z,2014-01-17T19:24:45Z,"c:b:tmux, t:bug",,,"![screen shot 2013-06-22 at 14 12 59](https://f.cloud.github.com/assets/488217/690823/64a04892-db3d-11e2-90c2-1325406c82c4.png)

So i have everything working fine with vim, but when using powerline with tmux on mac osx i seem to see this strange issue where the powerline status bars just continue to duplicate themselves.  Im totally clueless as to what might be causing this issue so im hoping you might be abel to shed some light :)

my tmux conf simply does

source '/path/to/tmux/powerline.conf'
"
556,display total lines,2013-06-21T02:10:11Z,2014-08-03T06:40:02Z,"a:segment, c:b:vim, t:enhancement",,,"I think totol lines is useful for many people. Maybe powerline could support it.
"
555,Problem with git repo branch segment not displaying colors properly,2013-06-20T08:43:09Z,2013-06-22T07:04:54Z,,,,"Hey all, not sure what's going on here and I'm not familiar with Python.

I'm assuming the branch segment's `status_colors` option is supposed to update based on whether the repo is clean or dirty?  Unfortunately that's not happening for me.  Either way I get the default branch colors.

Anything I can do to get you all more detailed information?  Debug logs etc?
"
554,Conditional settings?,2013-06-20T05:38:08Z,2013-06-22T13:46:30Z,,,,"Previously, setting variables in viml made it easy to create conditional settings for vim-powerline.

Now that powerline uses json, which supports no logic, how do we create certain settings for powerline conditionally?
"
553,"OSX, brew: Traceback, ImportError, Symbol not found: __PyInt_AsInt",2013-06-19T21:08:57Z,2013-06-19T22:32:43Z,,"ImportError, NameError","ImportError: dlopen(/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_ctypes.so, 2): Symbol not found: __PyInt_AsInt, NameError: name 'powerline_setup' is not defined","This is on OS X 10.8.4.  When trying to use powerline in vim with homebrew python 2.7.5 linked, the following traceback results:

```
goldfish:~ goldfish$ brew link python
Linking /usr/local/Cellar/python/2.7.5... 34 symlinks created
goldfish:~ goldfish$ vim
Error detected while processing /Users/goldfish/.vimrc:
line   70:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/Users/goldfish/Library/Python/2.7/lib/python/site-packages/powerline/__init__.py"", line 9, in <module>
    from powerline.lib.config import ConfigLoader
  File ""/Users/goldfish/Library/Python/2.7/lib/python/site-packages/powerline/lib/config.py"", line 3, in <module>
    from powerline.lib.threaded import MultiRunnedThread
  File ""/Users/goldfish/Library/Python/2.7/lib/python/site-packages/powerline/lib/threaded.py"", line 5, in <module>
    from powerline.lib.monotonic import monotonic
  File ""/Users/goldfish/Library/Python/2.7/lib/python/site-packages/powerline/lib/monotonic.py"", line 22, in <module>
    import ctypes
  File ""/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ctypes/__init__.py"", line 10, in <module>
    from _ctypes import Union, Structure, Array
ImportError: dlopen(/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_ctypes.so, 2): Symbol not found: __PyInt_AsInt
  Referenced from: /usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_ctypes.so
  Expected in: flat namespace
 in /usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_ctypes.so
line   71:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name 'powerline_setup' is not defined
line   72:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name 'powerline_setup' is not defined
Press ENTER or type command to continue
```

The relevant section of my `.vimrc`:

```
python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup
```

Using the system python (`brew unlink python`) works.
"
552,"Homebrew Python, Macvim: getting user scheme error (--user)",2013-06-19T00:21:12Z,2014-01-17T19:27:09Z,t:bug,InstallationError,"InstallationError: Command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-JsOX6p-record/install-record.txt --single-version-externally-managed --user failed with error code 1 in /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build","I'm using a Homebrew Python & Macvim, on OSX ML.
When trying to `pip install --user git+git://github.com/Lokaltog/powerline`, I get a user scheme related error:

```
------------------------------------------------------------
/usr/local/bin/pip run on Wed Jun 19 03:11:30 2013
Downloading/unpacking git+git://github.com/Lokaltog/powerline

  Cloning git://github.com/Lokaltog/powerline to /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build

  Found command 'git' at '/usr/local/bin/git'
  Running command /usr/local/bin/git clone -q git://github.com/Lokaltog/powerline /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build
  Running setup.py egg_info for package from git+git://github.com/Lokaltog/powerline

    running egg_info
    creating pip-egg-info/Powerline.egg-info
    writing requirements to pip-egg-info/Powerline.egg-info/requires.txt
    writing pip-egg-info/Powerline.egg-info/PKG-INFO
    writing top-level names to pip-egg-info/Powerline.egg-info/top_level.txt
    writing dependency_links to pip-egg-info/Powerline.egg-info/dependency_links.txt
    writing manifest file 'pip-egg-info/Powerline.egg-info/SOURCES.txt'
    warning: manifest_maker: standard file '-c' not found


    reading manifest file 'pip-egg-info/Powerline.egg-info/SOURCES.txt'
    reading manifest template 'MANIFEST.in'
    writing manifest file 'pip-egg-info/Powerline.egg-info/SOURCES.txt'
  Source in /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build has version beta, which satisfies requirement Powerline==beta from git+git://github.com/Lokaltog/powerline
  skipping extra docs
Installing collected packages: Powerline

  Running setup.py install for Powerline

    Running command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-JsOX6p-record/install-record.txt --single-version-externally-managed --user
    running install
    error: can't combine user with prefix, exec_prefix/home, or install_(plat)base

    Complete output from command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-JsOX6p-record/install-record.txt --single-version-externally-managed --user:

    running install

error: can't combine user with prefix, exec_prefix/home, or install_(plat)base

----------------------------------------

Command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-JsOX6p-record/install-record.txt --single-version-externally-managed --user failed with error code 1 in /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build

Exception information:
Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg/pip/basecommand.py"", line 139, in main
    status = self.run(options, args)
  File ""/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg/pip/commands/install.py"", line 271, in run
    requirement_set.install(install_options, global_options, root=options.root_path)
  File ""/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg/pip/req.py"", line 1185, in install
    requirement.install(install_options, global_options, *args, **kwargs)
  File ""/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg/pip/req.py"", line 592, in install
    cwd=self.source_dir, filter_stdout=self._filter_install, show_stdout=False)
  File ""/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg/pip/util.py"", line 662, in call_subprocess
    % (command_desc, proc.returncode, cwd))
InstallationError: Command /usr/local/opt/python/bin/python2.7 -c ""import setuptools;__file__='/var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))"" install --record /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-JsOX6p-record/install-record.txt --single-version-externally-managed --user failed with error code 1 in /var/folders/k9/39bn572j64785jmvr63tqm180000gn/T/pip-CeX1GF-build
```

Any idea how to fix this?
"
551,Change [DETACHED HEAD] message to a short hash of the detached head,2013-06-18T23:51:37Z,2013-06-28T11:51:03Z,,,,"Being on branch `[DETACHED HEAD]` doesn't offer much information. It's much more helpful to have a short hash of the detached head instead.
"
550,Vim hangs when a parent directory cannot be browsed,2013-06-18T21:54:27Z,2014-01-17T19:31:48Z,"s:invalid, t:bug",,,"My environment includes paths in _/home_ and _/net_, but those top-level directories cannot be browsed. Attempting to do so causes a program to hang indefinitely.

When Vim starts up, Powerline calls `powerline.lib.vcs.guess` to attempt to find a VCS folder somewhere in the parent directories. If my current directory is within _/home_ or _/net_, but is not managed by any VCS, then Vim hangs as it tries to determine whether there's a _.git_ folder.

For example, when my current directory is _/net/server/vol/exports_, an strace log of my Vim session ends with this:

``` strace
...
6968  stat(""/net/server/vol/exports/.git"", 0x7fff8e84cda0) = -1 ENOENT (No such file or directory)
6968  stat(""/net/server/vol/exports/.hg"", 0x7fff8e84cda0) = -1 ENOENT (No such file or directory)
6968  stat(""/net/server/vol/exports/.bzr"", 0x7fff8e84cda0) = -1 ENOENT (No such file or directory)
6968  stat(""/net/server/vol/.git"", 0x7fff8e84cda0) = -1 ENOENT (No such file or directory)
6968  stat(""/net/server/vol/.hg"", 0x7fff8e84cda0) = -1 ENOENT (No such file or directory)
6968  stat(""/net/server/vol/.bzr"", 0x7fff8e84cda0) = -1 ENOENT (No such file or directory)
6968  stat(""/net/server/.git"", 0x7fff8e84cda0) = -1 ENOENT (No such file or directory)
6968  stat(""/net/server/.hg"", 0x7fff8e84cda0) = -1 ENOENT (No such file or directory)
6968  stat(""/net/server/.bzr"", 0x7fff8e84cda0) = -1 ENOENT (No such file or directory)
6968  stat(""/net/.git"",  <unfinished ...>
```

I've tried defining a directory blacklist and changing `generate_directories` so it simply skips over anything on the list. Here's a sketch:

``` diff
  def generate_directories(path):
+         # TODO fetch this from config.json, or maybe
+         # equivalent to os.environ['GIT_CEILING_DIRECTORIES']
+         dirs_to_skip = ['/home', '/net']
          if os.path.isdir(path):
                  yield path
          while True:
                  old_path = path
                  path = os.path.dirname(path)
                  if path == old_path or not path:
                          break
+                 if path in dirs_to_skip:
+                         continue
                  yield path
```

It does the job for me, but it's obviously not suitable for general use.

An alternative to a blacklist might be for Powerline to honor something like the `GIT_DISCOVERY_ACROSS_FILESYSTEM` environment variable; unless it's set, Git won't traverse into a parent directory that's on a different file system than the current directory.
"
549,Performance issue when editing file over sshfs,2013-06-18T09:07:09Z,,"c:VCS support, c:b:vim, t:bug",,,"There is noticeable performance difference when editing a file over sshfs with or without powerline plugin.

To notice the difference press and hold one of the movement keys: h, j, k or l while editing file. The movement is much slower on sshfs, but only with powerline enabled.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/1132354-performance-issue-when-editing-file-over-sshfs?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
548,Fix 482,2013-06-14T08:16:47Z,2013-06-28T11:50:56Z,,,,"Remeber to apply this on top of the previous commit in this branch
"
547,Workaround Python import conflicts with sys.path inside Vim,2013-06-13T00:27:22Z,2014-01-10T17:52:37Z,,,,"After updating Vim to version 7.3.1163, Powerline refused to run its setup routine. 

`An error occurred while importing the Powerline package. This could be caused by an invalid sys.path setting, or by[...]`

Since my Powerline sources are not in any common Python package directory, loading depends on sys.path modification. Actually sys.path contains '_vim_path_' value. I don't know if it's new, but it seems to me that module lookup is not done inside subsequent items (directories).

`sys.path = ['/usr/lib64/python27.zip', '/usr/lib64/python2.7', '/usr/lib64/python2.7/plat-linux2', '/usr/lib64/python2.7/lib-tk', ..., '_vim_path_', '/home/covin/.vim/bundle/powerline']`

Prepending Powerline directory to sys.path fixes loading problem for me:

`sys.path = ['/home/covin/.vim/bundle/powerline', '/usr/lib64/python27.zip', ..., '_vim_path_']`
"
546,Powerline doesn't load - MacVim v7.3 Patches: 1-1169,2013-06-12T21:20:51Z,2014-01-17T19:36:10Z,"c:b:vim, s:duplicate, t:bug",,,"I often compile MacVim from source from [here](https://github.com/b4winckler/macvim/)

When I launch MacVim, Powerline doesn't load, and if I check `:messages` I see this:

```
An error occurred while importing the Powerline package. This could be caused by an invalid sys.path setting, or by an incompatible Python version (Powe
rline requires Python 2.6+ or 3.2+ to work). Please consult the troubleshooting section in the documentation for possible solutions. 
```

I have installed Powerline via Vundle, and here's the output of my `:version` command for reference:

```
:version
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Jun 12 2013 14:03:02)
MacOS X (unix) version
Included patches: 1-1168
Compiled by amadeus@amadeus.local
Huge version with MacVim GUI.  Features included (+) or not (-):
+arabic          +conceal         +extra_search    +jumplist        +mouseshape      +odbeditor       +scrollbind      +termresponse    +wildmenu
+autocmd         +cryptv          +farsi           +keymap          +mouse_dec       +path_extra      +signs           +textobjects     +windows
+balloon_eval    +cscope          +file_in_path    +langmap         -mouse_gpm       +perl            +smartindent     +title           +writebackup
+browse          +cursorbind      +find_in_path    +libcall         -mouse_jsbterm   +persistent_undo -sniff           +toolbar         -X11
++builtin_terms  +cursorshape     +float           +linebreak       +mouse_netterm   +postscript      +startuptime     +transparency    -xfontset
+byte_offset     +dialog_con_gui  +folding         +lispindent      +mouse_sgr       +printer         +statusline      +user_commands   +xim
+cindent         +diff            -footer          +listcmds        -mouse_sysmouse  +profile         -sun_workshop    +vertsplit       -xsmp
+clientserver    +digraphs        +fork()          +localmap        +mouse_urxvt     +python          +syntax          +virtualedit     -xterm_clipboard
+clipboard       +dnd             +fullscreen      -lua             +mouse_xterm     -python3         +tag_binary      +visual          -xterm_save
+cmdline_compl   -ebcdic          -gettext         +menu            +multi_byte      +quickfix        +tag_old_static  +visualextra
+cmdline_hist    +emacs_tags      -hangul_input    +mksession       +multi_lang      +reltime         -tag_any_white   +viminfo
+cmdline_info    +eval            +iconv           +modify_fname    -mzscheme        +rightleft       -tcl             +vreplace
+comments        +ex_extra        +insert_expand   +mouse           +netbeans_intg   +ruby            +terminfo        +wildignore
   system vimrc file: ""$VIM/vimrc""
     user vimrc file: ""$HOME/.vimrc""
      user exrc file: ""$HOME/.exrc""
  system gvimrc file: ""$VIM/gvimrc""
    user gvimrc file: ""$HOME/.gvimrc""
    system menu file: ""$VIMRUNTIME/menu.vim""
  fall-back for $VIM: ""/Applications/MacVim.app/Contents/Resources/vim""
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H -DFEAT_GUI_MACVIM -Wall -Wno-unknown-pragmas -pipe  -DMACOS_X_UNIX -no-cpp-precomp  -g -O2 -U_FORTIFY_SO
URCE -D_FORTIFY_SOURCE=1
Linking: gcc   -L. -L/usr/local/lib -L/Users/amadeus/.rvm/usr/lib  -L. -L/usr/local/lib -L/Users/amadeus/.rvm/usr/lib       -L/usr/local/lib -o Vim -fra
mework Cocoa -framework Carbon       -lncurses  -liconv -framework Cocoa   -fstack-protector -L/usr/local/lib  -L/System/Library/Perl/5.12/darwin-thread
-multi-2level/CORE -lperl -lm -lutil -lc -framework Python   -lruby-static -lobjc -L/Users/amadeus/.rvm/rubies/ruby-1.9.3-p385/lib
```

Also, FYI, everything is working fine with exactly the same configuration and settings with MacVim MacVim 7.3 Patches: 1-1148
"
545,error opening help when in file explorer - AssertionError: Non-unique window ID,2013-06-12T20:04:21Z,2013-06-28T11:41:17Z,,AssertionError,AssertionError: Non-unique window ID,"``` sh
% vim .
:h help<CR>
```

```
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/vim.py"", line 138
, in statusline
    window, window_id, winnr = self.win_idx(window_id) or (None, None, None)
  File ""/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/vim.py"", line 133
, in win_idx
    assert r is None, ""Non-unique window ID""
AssertionError: Non-unique window ID
E858: Eval did not return a valid python object
```
"
544,Fix infinite add_watches loop with symbolic links,2013-06-12T09:16:48Z,2013-06-28T11:54:19Z,,,,"Added a check to ensure that add_watches doesn't run on the same folder over and over again. This occurs at least when circular symbolic links are present.

Fix #543
"
543,Powerline hangs when there's a circular symbolic link inside a vc'd directory,2013-06-12T09:07:31Z,2013-06-28T11:54:18Z,,,,"Hi, I think I found a bug here.

To reproduce:
Underneath a version controlled directory create a soft link to the directory itself.

Powerline runs add_watches from lib/tree_watcher.py on this folder and either runs in an endless loop or hits the maximum recursion depth.

I ran into this problem because I have a git repo for ~ and in my wine folder there are symlinks back to ~.
I've created a fix.
"
542,Looking for an up-to-date fix for Powerline with MacVim,2013-06-11T19:54:52Z,2014-01-17T19:38:24Z,"c:b:vim, t:bug",,,"Alright. I have **MacVim** & **Python** installed via **Homebrew**, using the newest brewed MacVim from [Samuel John's solution](https://github.com/Lokaltog/powerline/issues/39#issuecomment-19252247) to fix MacVim's Python issue. MacVim is successfully using Python, but I can't seem to get Powerline to work. Whenever I launch MacVim, I get an error reading that the `sys.path` or version of Python is incorrect. 

What can I do to fix this? Let's get this working!

I am using Powerline with **Vundle**. Here is the exact error: 

``` bash
An error occurred while importing the Powerline package. This could be caused by an invalid sys.path setting, or by an incompatible Python version (Powerline requires Python 2.6+ or 3.2+ to work). Please consult the troubleshooting section in the documentation for possible solutions.
```
"
541,fix documented path to fontpatcher.py,2013-06-10T19:34:02Z,2013-06-28T11:56:02Z,,,,"fontpatcher.py is in the `font` directory, not `fontpatcher` directory.
"
540,New segment showing position of current view,2013-06-10T11:17:21Z,2014-01-17T19:39:28Z,,,,"Solves #539

The test I added is very basical, because… I think the code for testing should not be more complicated than the code actually tested.
"
539,Segment for displaying the current position of Vim's view in the file,2013-06-10T10:58:43Z,2014-01-23T11:52:00Z,"a:segment, c:b:vim, t:enhancement",,,"If the line_percent segment imitates the %p flag of Vim's original statusline, then what I want to have is %P. That is, show the relative position of the displayed text in the file as percentage or as string:

```
Top    first line is visible
Bot    last line is visible
All    first and last line are visible
45%    relative position in the file
```

I find this more useful than the relative position of the current line.
"
538,tmux Powerline on OSX,2013-06-09T22:32:36Z,2013-06-22T16:22:26Z,,,,"Has anybody got tmux powerline working on OSX, I have the python version working in vim and zsh. But it doesn't seem to be working in tmux.

Thanks
"
537,Non-unique window ID tracebacks in vim,2013-06-07T14:12:07Z,2013-06-28T11:41:17Z,,,,"I'm not exactly sure how to reproduce yet, but every so often I will start to get tracebacks with `Non-unique window ID` errors which then make my vim session entirely unusable.
"
536,Broken in Vim from commit 9f20fb1f3f1881da0979778f6d83a613a5f3a3a3,2013-06-06T10:55:48Z,2013-06-23T19:08:27Z,,,,"Powerline for Vim does not work for me anymore since commit 9f20fb1f3f1881da0979778f6d83a613a5f3a3a3.

Is there something new to do to configure Powerline?

I use this bindings in my .vimrc:

```
set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim
```

Thanks you for your help!
"
535,Question: Passing data into powerline from another app,2013-06-03T21:54:36Z,2014-01-17T19:43:32Z,s:invalid,,,"I'm trying to build a tmux segment that shows how many passing/failing tests for the current project I'm working.  I'm able to build a custom test reporter to send data somewhere, but I'm trying to figure out the best way to get the data in powerline.  

Some options I am considering:
- create a /tmp/results.json file and then have the powerline segment read the file at a given interval
- have the powerline segment run a tiny server and have the test runner post results to that
- have powerline execute the test runner (though I would have two runners running then because I'd need to see the full results as well)

Any thoughts?
"
534,Error detected while processing /vim/bundle/powerline/powerline/bindings/vim/plugin/powerline.vim,2013-06-03T18:02:43Z,2014-01-17T19:44:21Z,"c:b:vim, t:bug",vim.error,vim.error: NULL reference passed,"```
Error detected while processing ~/vim/bundle/powerline/powerline/bindings/vim/plugin/powerline.vim:
line   44:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""~/vim/bundle/powerline/powerline/vim.py"", line 175, in setup
    powerline = VimPowerline(pyeval)
  File ""~/vim/bundle/powerline/powerline/vim.py"", line 27, in __init__
    super(VimPowerline, self).__init__('vim')
  File ""~/vim/bundle/powerline/powerline/__init__.py"", line 113, in __init__
    config_paths = self.get_config_paths()
  File ""~/vim/bundle/powerline/powerline/vim.py"", line 79, in get_config_paths
    return [vim_getvar('powerline_config_path')]
  File ""~/vim/bundle/powerline/powerline/bindings/vim/__init__.py"", line 51, in vim_getvar
    return _vim_globals[str(varname)]
vim.error: NULL reference passed
```

Blank vimrc with no other pluggins in bundle still gives this issue. 

Am on Alloy's fork of MacVim 7.3 (65).

Reverting to Lokaltog/vim-powerline solves the issue. Seems to have been caused by an update to powerline in last couple of months as ran `BundleUpdate` a couple of weeks ago and prior to that probably in April?
"
533,Creating a 3rd party segment?,2013-06-03T16:29:04Z,2014-01-17T19:45:03Z,s:invalid,,,"First off, is there an irc room or google group to ask questions rather than creating an issue?

I'm trying to create a custom tmux segment that doesn't live in the common.py.  I've opened up my config.json and added the directory to my paths:
`""paths"": ""~/dotfiles/powerline-config/segments/""`

I created a file inside segments called test.py with a def called `testing`.

Then in my tmux/default.json I added in the right section

```
{
  ""module"": ""test"",
  ""name"": ""testing""
}
```

When I run `powerline tmux right` I get an error: `AttributeError: 'ShellPowerline' object has no attribute 'renderer'`

Any idea what I'm doing wrong?
"
532,fish support,2013-06-03T15:24:10Z,2014-01-26T14:11:13Z,"c:b:shell, t:enhancement",,,"Please add a [fish-shell](https://github.com/fish-shell/fish-shell/) binding like [powerline-shell](https://github.com/milkbikis/powerline-shell) has.
"
531,Exception while computing segment,2013-06-01T15:31:31Z,2014-09-20T10:48:59Z,"c:b:vim, e:windows, t:bug",WindowsError,WindowsError: [Error 2] The system cannot find the file specified,"Hi, possible bug here (or more likely, my mistake during installation). 
I tried to install powerline on Windows 7 with Vim 7.3. 
When i try open file which is located on one of paths listed here:
http://vimdoc.sourceforge.net/htmldoc/options.html#'rtp'
starting with:
autoload/  
colors/ 
compiler/
...
everything is awesome and troubleless. But when attempting to open file not in those folder, this error is printed:

```
2013-06-01 09:42:37,509:ERROR:vim:filevcs_status:Exception while computing segment: 
[Error 2] The system cannot find the file specified Traceback (most recent call last):
 File ""C:\Programs\Vim\vimfiles\bundle\powerline\powerline\theme.py"", 
line 89, in get_segments contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args']) 
File ""C:\Programs\Vim\vimfiles\bundle\powerline\powerline\segments\vim.py"", 
line 324, in file_vcs_status status = repo.status(os.path.relpath(name, repo.directory))
 File ""C:\Programs\Vim\vimfiles\bundle\powerline\powerline\lib\vcs\git.py"", 
line 169, in status return do_status(self.directory, path, self.do_status)
 File ""C:\Programs\Vim\vimfiles\bundle\powerline\powerline\lib\vcs\git.py"",
 line 40, in do_status path, '.gitignore', func, extra_ignore_files=(os.path.join(gitd, 'info/exclude'),)) 
File ""C:\Programs\Vim\vimfiles\bundle\powerline\powerline\lib\vcs\init.py"",
 line 111, in get_file_status file_status_cache[keypath] = ans = get_func(directory, file_path) 
File ""C:\Programs\Vim\vimfiles\bundle\powerline\powerline\lib\vcs\git.py"",
 line 145, in do_status return next(self._gitcmd(directory, 'status', '--porcelain', '--ignored', '--', path))[:2]
 File ""C:\Programs\Vim\vimfiles\bundle\powerline\powerline\lib\vcs\git.py"", 
line 127, in readlines p = Popen(cmd, shell=False, stdout=PIPE, stderr=PIPE, cwd=cwd) 
File ""C:\Python27\Lib\subprocess.py"", line 711, in __init_ errread, errwrite) 
File ""C:\Python27\Lib\subprocess.py"", line 948, in _execute_child startupinfo) 
WindowsError: [Error 2] The system cannot find the file specified
```

after pressing enough enters to skip it powerline seems to be OK. 
This my vimrc part regarding powerline: 

```
set cmdheight=50 ""because i want to see that error at once..
set rtp+=$VIM\\vimfiles\\bundle\\powerline\\powerline\\bindings\\vim
set laststatus=2 
set noshowmode 
```

Thanks for any advice, meantime i will use vimscript version, which is working and very awesome.
"
530,add player support for Rdio Mac app,2013-05-30T18:08:26Z,2014-08-24T16:18:52Z,"c:players, t:enhancement",,,"Added support for Rdio Mac app to player segment.
"
529,Fix committing with fugitive => stuck file status,2013-05-30T02:03:06Z,2013-06-02T13:43:49Z,,,,"Fixes #482 (I hope)
"
528,Feature/527 zsh bash relative path,2013-05-29T15:18:57Z,2014-01-10T17:55:11Z,,,,"This is for #527
"
527,Zsh and Bash should not require `powerline` to be in $PATH,2013-05-29T15:16:28Z,2014-01-10T17:58:17Z,,,,"If the Zsh and Bash scripts can use relative path, it wouldn't require powerline to be installed via pip, making it possible to just clone the repository and telling Zsh/Bash about it. Using relative path would also not prevent the case of installing via pip.

(I don't want to install powerline via pip so this is important to me, pull request coming.)
"
526,now_playing segment enhancement request,2013-05-27T20:39:58Z,2014-01-17T19:53:21Z,"s:invalid, t:enhancement",,,"I'm checking this new version of powerline, and has a lot of improvements, but should be useful to enhance the now_playing segment, for example, MoC (Music on Console) is missing in the list of possible music players.
"
525,vim: Unknown Function: Powerline,2013-05-27T15:36:17Z,2014-01-17T19:53:54Z,"c:b:vim, s:invalid, t:bug",,,"I updated powerline today (vim 7.3 patch 1-1005) and now when I open a file I get the following error. 

```
E117: Unknown Function: Powerline
E15: Invalid Expression: Powerline(1)
```

Does anyone know what this means?
"
524,Should we include segments for common vim plugins?,2013-05-27T11:50:39Z,2014-06-28T13:45:46Z,"c:b:vim, t:question",,,"Referring to PRs like #451, #470, which I haven't merged due to this issue being unresolved.

This has been discussed a couple of months back, and the consensus was to ask plugin authors to add and maintain their own segments instead of adding them to the main Powerline repo. Since Powerline isn't out of beta, I don't think it's a good idea to ask plugin authors to maintain segments just yet.

What do you guys think? Should we include and maintain segments for common vim plugins like Syntastic, NERDTree, etc. in the main Powerline repo? Should they be added to a powerline-contrib repo? Should we ask plugin authors to include and maintain Powerline segments in their repos?
"
523,Powerline breaks omnicomplete popup window sporadically when ssh'd into linux,2013-05-26T05:41:46Z,,"c:b:vim, e:linux, t:bug",,,"When ssh'd into my vagrant box, powerline causes the omnicomplete popup window to be hidden for certain entries.  As I scroll down with the down arrow, certain entries will make the popup window appear.  The same entries make the window disappear or come back.  I'm using jedi-vim but if I remove powerline, everything works just fine.

Strangely enough, this entire setup works fine on my OSX machine locally.  I'm using the exact same vimrc file in both areas.  

If this doesn't make sense, I can make a video of this happening as it is quite easily repeatable.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051152-powerline-breaks-omnicomplete-popup-window-sporadically-when-ssh-d-into-linux?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
522,Trace when ipython exits.,2013-05-24T14:53:13Z,2014-01-17T19:54:54Z,"c:b:ipython, t:bug",AttributeError,AttributeError: 'ConfigurableIpythonPowerline' object has no attribute 'renderer',"I am getting the following whenever I quit ipython with a `ctrl+C` or when I run a script with ipython...

``` python
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File ""/usr/lib64/python2.7/atexit.py"", line 24, in _run_exitfuncs
    func(*targs, **kargs)
  File ""/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.py"", line 2999, in atexit_operations
    self.hooks.shutdown_hook()
  File ""/usr/lib/python2.7/site-packages/IPython/core/hooks.py"", line 138, in __call__
    return cmd(*args, **kw)
  File ""/home/***/.local/lib/python2.7/site-packages/powerline/bindings/ipython/post_0_11.py"", line 54, in shutdown_hook
    powerline.shutdown()
  File ""/home/***/.local/lib/python2.7/site-packages/powerline/__init__.py"", line 379, in shutdown
    self.renderer.shutdown()
AttributeError: 'ConfigurableIpythonPowerline' object has no attribute 'renderer'
Error in sys.exitfunc:
Traceback (most recent call last):
  File ""/usr/lib64/python2.7/atexit.py"", line 24, in _run_exitfuncs
    func(*targs, **kargs)
  File ""/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.py"", line 2999, in atexit_operations
    self.hooks.shutdown_hook()
  File ""/usr/lib/python2.7/site-packages/IPython/core/hooks.py"", line 138, in __call__
    return cmd(*args, **kw)
  File ""/home/***/.local/lib/python2.7/site-packages/powerline/bindings/ipython/post_0_11.py"", line 54, in shutdown_hook
    powerline.shutdown()
  File ""/home/***/.local/lib/python2.7/site-packages/powerline/__init__.py"", line 379, in shutdown
    self.renderer.shutdown()
AttributeError: 'ConfigurableIpythonPowerline' object has no attribute 'renderer'
```
"
521,vim powerline question,2013-05-24T04:22:41Z,2014-01-17T19:55:46Z,"c:b:vim, t:bug",,,"This may be a dumb question, and if so I apologize. but I've got powerline working (I know the tmux version is working) I've added the line to my .vimrc and it's not giving any errors, but it's not doing anything either, there is no change to the display or look for vim? I'm assuming there is some default template (I know I can change it)?
"
520,Use powerline-client if possible,2013-05-24T03:21:49Z,2013-05-27T11:40:54Z,,,,"Subj. Checks for presence of `powerline-client` in `$PATH`, then uses it. Updated tmux, zsh and bash bindings. Check result can be overridden by setting `$POWERLINE_COMMAND` variable.
"
519,E859 error in gentoo,2013-05-24T01:10:44Z,2014-01-17T19:59:34Z,"c:b:vim, t:bug",,,"Getting the below error when trying to use powerline on gentoo.

E859: Failed to convert returned python object to vim value   61,1          Bot
E859: Failed to convert returned python object to vim value
Press ENTER or type command to continue
E859: Failed to convert returned python object to vim value
:.,.+858 Failed to convert returned python object to vim value
E492: Not an editor command: .,.+858 Failed to convert returned python object to
 vim value

Here is how I am calling powerline in my vimrc file

set rtp+=/home/jcostanzo/.vim/bundle/powerline/powerline/bindings/vim
set laststatus=0
"
518,Fix problems with merging vim.Dictionary,2013-05-23T14:25:05Z,2013-06-28T12:27:13Z,,,,"Also add tests

Fixes #516
"
517,Broken in Vim since 07a130ab25edc41d83470c374ccdab6be4ccad84,2013-05-23T09:15:21Z,2013-07-02T16:32:52Z,,AttributeError,AttributeError: 'VimPowerline' object has no attribute 'renderer',"Hi. This week I updated from the repository, and Powerline broke in my setup. I used git bisect, and the revision that starts to provoke it is 07a130ab25edc41d83470c374ccdab6be4ccad84.

At first I thout that it might be that my setup is not supported, since I don't liked the pip installation, and I like to use development versions and use git to sync machines to specific versions of everything, but I've tried to be more ""faithful"" to the docs, and the result is the same. What I've done is:
- Clone the repository (e.g. on ~/local/configs).
- Symlink the font directory to ~/.fonts and ~/.config/fontconfig so the font file and the configuration are seen.
- Add ~/local/configs/powerline/ to PYTHONPATH (although now I'm unsure that this is needed at all, or that is the proper directory, but I've tried with ~/locals/config/powerline/powerline as well; same thing).
- Add ~/local/configs/powerline/script to PATH.
- Put a symlink in (...)/bundle/powerline to (...)/powerline/bindings/vim.

This worked perfectly so far, till the mentioned commit. Then it gives tracebacks all the time, and I can hardly even read them. I've redirected :messages to a file, and this is what I get at startup:

Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/home/modpow/local/configs/powerline/powerline/vim.py"", line 145, in new_window
    return self.render(window, window_id, winnr)
  File ""/home/modpow/local/configs/powerline/powerline/**init**.py"", line 372, in render
    return self.renderer.render(_args, *_kwargs)
AttributeError: 'VimPowerline' object has no attribute 'renderer'
E858: Eval did not return a valid python object
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/home/modpow/local/configs/powerline/powerline/vim.py"", line 145, in new_window
    return self.render(window, window_id, winnr)
  File ""/home/modpow/local/configs/powerline/powerline/**init**.py"", line 372, in render
    return self.renderer.render(_args, *_kwargs)
AttributeError: 'VimPowerline' object has no attribute 'renderer'
E858: Eval did not return a valid python object
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/home/modpow/local/configs/powerline/powerline/vim.py"", line 145, in new_window
    return self.render(window, window_id, winnr)
  File ""/home/modpow/local/configs/powerline/powerline/**init**.py"", line 372, in render
    return self.renderer.render(_args, *_kwargs)
AttributeError: 'VimPowerline' object has no attribute 'renderer'
E858: Eval did not return a valid python object

Messages maintainer: Bram Moolenaar Bram@vim.org
Error detected while processing VimEnter Auto commands for ""_"":
Traceback (most recent call last):
Error detected while processing VimEnter Auto commands for ""_"":
  File ""<string>"", line 1, in <module>
Error detected while processing VimEnter Auto commands for ""_"":
  File ""/home/modpow/local/configs/powerline/powerline/vim.py"", line 145, in new_window
Error detected while processing VimEnter Auto commands for ""_"":
    return self.render(window, window_id, winnr)
Error detected while processing VimEnter Auto commands for ""_"":
  File ""/home/modpow/local/configs/powerline/powerline/**init**.py"", line 371, in render
Error detected while processing VimEnter Auto commands for ""_"":
    self.update_renderer()
Error detected while processing VimEnter Auto commands for ""_"":
  File ""/home/modpow/local/configs/powerline/powerline/**init**.py"", line 363, in update_renderer
Error detected while processing VimEnter Auto commands for ""_"":
    self.pl.exception('Failed to create renderer: {0}', str(e))
Error detected while processing VimEnter Auto commands for ""_"":
AttributeError: 'NoneType' object has no attribute 'exception'
Error detected while processing VimEnter Auto commands for ""_"":

I've also attempted to use the let rtp+=(...path...), but the results are the same.

Am I doing something wrong?

Thank you!
"
516,Vim local overrides cause python exceptions,2013-05-23T06:19:00Z,2013-06-28T12:27:12Z,,,,"When I try to change local setting for powerline by setting g:powerline_config_overrides to a dictionary, python throws an exception in the mergedicts() function in powerline/lib/**init**.py. The exception is ""'vim.dictionary' object is not iterable"". 
Does anyone know a current fix for this issue?

I set g:powerline_config_overrides as follows:

``` vimscript
let g:powerline_config_overrides = {}
let g:powerline_config_overrides.common = {}
let g:powerline_config_overrides.common.dividers = {}
let g:powerline_config_overrides.common.dividers.left = {'hard':' ','soft':' > '}
let g:powerline_config_overrides.common.dividers.right = {'hard':' ','soft':' < '}
```

My vim information is at https://gist.github.com/dedmons/5633032 an uses python 2.7.2

My current fix is to set g:powerline_config_overrides to a json dictionary string and in the powerline/vim.py _override_from() function, use json.loads().
"
515,Fix #417,2013-05-23T05:15:06Z,2013-05-27T11:40:54Z,,,,
514,By default do not require a patched font,2013-05-22T08:30:28Z,2014-08-15T06:39:42Z,"c:configuration, t:enhancement",,,"Currently it is quite cumbersome to install Powerline (compared to other VIM plugins) because you need a patched font. This gets even more difficult when you are using VIM on lots of machines and platforms.

In my opinion Powerline should not require a patched font by default. This is easy to accomplish - just use simple dividers by default - without requiring people to set this up by hand:
`let g:powerline_config_overrides={""common"": {""dividers"": {""left"": {""hard"": "" "", ""soft"": ""| ""}, ""right"": {""hard"": "" "", ""soft"": "" |""}}}}`
"
513,Add missing import,2013-05-21T20:10:21Z,2013-05-22T11:58:52Z,,,,"Also add tests

Fixes #511
"
512,Fallback from fancy,2013-05-21T17:02:00Z,2013-05-21T17:04:41Z,,,,"Hi.

I'm sorry to open this as an issue, since it's really a combination of lack of time and lack of effort yet put in by me, but I'm doing it anyways since I think it might be useful to document this somewhere.

I've always used the unicode glyphs since I have my dotfiles in VCS and when cloning to a new machine don't know of or haven't yet put together an automated way to deploy a patched font (or to use `fontconfig` which I see is another way) in a way that works on both OS X and Linux.

For me, I just use Powerline in Vim (I haven't yet figured out how to get the equivalent of `unicode` with this version of Powerline but I'd guess it's just some config options to select the glyphs now, or that it doesn't exist yet?) so I could just have an `if | elseif` chain that starts by looking for a font with `for Powerline` I guess.

I've taken a quick troll through the (new) docs, but maybe it'd be nice to have a section in the docs on how to set up a degrading Powerline that uses fancy when possible and falls back to the best it can when there isn't a fancy font around.

I'd obviously be willing to write one, as soon as I figure out how to best get that set up :).
"
511,Python Error on Startup,2013-05-21T16:07:51Z,2013-05-22T11:58:49Z,,NameError,NameError: name 'vim' is not defined,"I'm sorry if this has been addressed elsewhere.

I'm using Ubuntu 13.04. When trying start vim with either the `gvim` or `vim` command I get the following error message

```
Error detected while processing /home/edward/.local/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim:
line   43:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name 'vim' is not defined
Press ENTER or type command to continue
```

My vim version is:

```
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Apr  2 2013 09:18:16)
Included patches: 1-547
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by buildd@
Huge version with GTK2-GNOME GUI.  Features included (+) or not (-):
+arabic +autocmd +balloon_eval +browse ++builtin_terms +byte_offset +cindent +clientserver +clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments +conceal
+cryptv +cscope +cursorbind +cursorshape +dialog_con_gui +diff +digraphs +dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path +find_in_path +float
+folding -footer +fork() +gettext -hangul_input +iconv +insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent +listcmds +localmap +lua +menu +mksession
 +modify_fname +mouse +mouseshape +mouse_dec +mouse_gpm -mouse_jsbterm +mouse_netterm -mouse_sysmouse +mouse_xterm +mouse_urxvt +multi_byte +multi_lang -mzscheme
+netbeans_intg +path_extra +perl +persistent_undo +postscript +printer +profile +python -python3 +quickfix +reltime +rightleft +ruby +scrollbind +signs +smartindent
-sniff +startuptime +statusline -sun_workshop +syntax +tag_binary +tag_old_static -tag_any_white +tcl +terminfo +termresponse +textobjects +title +toolbar +user_commands
+vertsplit +virtualedit +visual +visualextra +viminfo +vreplace +wildignore +wildmenu +windows +writebackup +X11 -xfontset +xim +xsmp_interact +xterm_clipboard
-xterm_save
   system vimrc file: ""$VIM/vimrc""
     user vimrc file: ""$HOME/.vimrc""
      user exrc file: ""$HOME/.exrc""
  system gvimrc file: ""$VIM/gvimrc""
    user gvimrc file: ""$HOME/.gvimrc""
    system menu file: ""$VIMRUNTIME/menu.vim""
  fall-back for $VIM: ""/usr/share/vim""
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H -DFEAT_GUI_GTK  -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/i
nclude/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/us
r/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/harfbuzz   -pthread -DORBIT2=1 -D_REENTRANT -I/usr/include/libgnomeui-2.0 -I/usr/include
/libart-2.0 -I/usr/include/gconf/2 -I/usr/include/gnome-keyring-1 -I/usr/include/libgnome-2.0 -I/usr/include/libbonoboui-2.0 -I/usr/include/libgnomecanvas-2.0 -I/usr/inclu
de/gtk-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/gnome-vfs-2.0 -I/usr/lib/x86_64-linux-gnu/gnome-vfs-2.0/include -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu
/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/orbit-2.0 -I/usr/include/libbonobo-2.0 -I/usr/include/bonobo-activati
on-2.0 -I/usr/include/libxml2 -I/usr/include/pango-1.0 -I/usr/include/gail-1.0 -I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/atk-1.0 -I/usr/lib/x86_64-li
nux-gnu/gtk-2.0/include -I/usr/include/cairo -I/usr/include/gio-unix-2.0/ -I/usr/include/pixman-1 -I/usr/include/libpng12     -g -O2 -fstack-protector --param=ssp-buffer-s
ize=4 -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1     -I/usr/include/tcl8.5  -D_REENTRANT=1  -D_THREAD_SAFE=1  -D_LARGEFILE64_SOURCE=1
Linking: gcc   -L. -Wl,-Bsymbolic-functions -Wl,-z,relro -rdynamic -Wl,-export-dynamic  -Wl,-E  -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed -o vim   -lgtk-x11-2.
0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0     -lgnomeui-2 -
lSM -lICE -lbonoboui-2 -lgnomevfs-2 -lgnomecanvas-2 -lgnome-2 -lpopt -lbonobo-2 -lbonobo-activation -lORBit-2 -lart_lgpl_2 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0
-lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgconf-2 -lgthread-2.0 -lgmodule-2.0 -lgobject-2.0 -lglib-2.0   -lSM -lICE -l
Xpm -lXt -lX11 -lXdmcp -lSM -lICE -lm -ltinfo -lnsl  -lselinux  -lacl -lattr -lgpm -ldl  -L/usr/lib -llua5.1  -Wl,-E  -fstack-protector -L/usr/local/lib  -L/usr/lib/perl/5
.14/CORE -lperl -ldl -lm -lpthread -lcrypt -L/usr/lib/python2.7/config-x86_64-linux-gnu -L/usr/lib -lpthread -ldl  -lutil -lm  -lpython2.7 -Xlinker -export-dynamic -Wl,-O1
 -Wl,-Bsymbolic-functions  -L/usr/lib/x86_64-linux-gnu -ltcl8.5 -ldl -lpthread -lieee -lm -lruby-1.9.1 -lpthread -lrt -ldl -lcrypt -lm  -L/usr/lib
```

Powerline works fine in tmux and seems like it only has a problem with VIM. I have another computer also running Ubuntu 13.04 with the same VIM version and VIM configuration that Powerline works fine on. 

Please let me know if there's any more information from me you need. Thanks!
"
510,rxvt-unicode problems with virtualenv char (U+24D4),2013-05-21T14:04:55Z,2014-08-25T03:52:53Z,"c:font, t:bug",,,"All other symbols seem to work fine. This symbol does work under gnome-terminal
using the same font, DejaVu Sans Mono for Powerline from powerline-fonts repos.
I'm using rxvt-unicode-256 from ubuntu's repos which does have unicode3
enabled. Environment vars LANG and LC_\* are all set to pt_BR.UTF-8. I've tried
setting in .xresources (and .tmux.conf) both terminals, screen-256color and
rxvt-unicode-256 and the result is the same for this issue. What's wrong?
"
509,Trap Ctrl+C in bash/zsh,2013-05-21T11:23:13Z,2014-01-17T20:02:43Z,"c:b:shell, s:wontfix, t:enhancement",,,"It is common to use ctrl+c to stop a program in bash/zsh, while hitting ctrl+c for multiple times will not kill bash/zsh itself.
Powerline should emulate this behavior when using as bash/zsh prompt, so that hitting ctrl+c quickly would not brings KeyboardInterrupt from python.
"
508,ZSH vi-mode status segment,2013-05-20T20:01:53Z,2014-01-26T18:38:20Z,"c:b:shell, t:enhancement",,,"Any plans to make a segment for displaying the current mode when using zsh's vi-mode? Anyone made a prototype that could be fixed up?

~ Jonathan
"
507,Problems loading solarized colorschemes for vim and shell,2013-05-20T18:37:06Z,2013-05-20T20:02:40Z,,,,"My setup is based on rxvt-unicode-256color with xresources including solarized
xcolors. The default colorschemes work great for both shell and vim, but using
the solarized options on config.json won't get right colors. Also tried without
success removing the xcolors include from xresources. Am I missing a setting?
"
506,Powerline makes completion popup menu disappear.,2013-05-20T09:51:53Z,2013-11-03T12:41:02Z,,,,"I use the plugin [neocomplcache.vim](https://github.com/Shougo/neocomplcache.vim) for code autocompletion. After I install powerline (by adding `set rtp+={repository_root}/powerline/bindings/vim` to .vimrc), the completion popup menu created by [neocomplcache.vim](https://github.com/Shougo/neocomplcache.vim)  behaves strange.

For examples, when I type `#!/usr/bin/python` at the beginning of a python file, [neocomplcache.vim](https://github.com/Shougo/neocomplcache.vim)  will help me complete the path and the popup menu is always shown. However, after I install powerline, when I type `#!/u`, the popup menu is triggled (works well so far) and then I type `s`, this action makes the popup menu disappear until I type the next `/`.

I browsed the issues list and I think this issue may be similar with issue #286.

By the way, I use Vim 7.3.547 on Ubuntu 12.10 and If I install vim-powerline (the old version) instead of powerline, this issue doesn't appear.

Thanks for reading!
"
505,Segment for Remaining Battery Capacity,2013-05-20T03:02:51Z,2013-07-31T13:31:36Z,"a:segment, c:common segments, t:enhancement",,,"- Added a 'battery' segment function to powerline.segments.common.
  - Included tests for output of 'format', 'steps', and 'gamify' parameters.
  - Included an implementation of '_get_capacity()' for at least one linux.  However, I don't have a Mac or familiarity with other *nixes, so many other systems will throw a 'NotImplementedError'.
  - Included colors for tmux.

So, current patch is missing implementations for other operating systems and colors for using the segment in more contexts.

Edit: python 2.6 compatible and cleaned up commit history.

Ref: #504
"
504,Feature: New Segment for Remaining Battery Capacity,2013-05-20T02:48:39Z,2014-01-17T20:06:34Z,"a:segment, t:enhancement",,,"In the hopes that other powerliners-on-the-go can find it useful, I propose a segment that provides the remaining battery capacity, as a percentage that makes a series of discrete jumps from 100 down to 0 and back up again.  Nothing super fancy (well, maybe one piece of fanciness).

Bare bones segment config looks like this:

``` javascript
{
    ""name"": ""battery"",
    ""before"": ""♥ ""
}
```

You can play with the format and number of jumps:

``` javascript
{
    ""name"": ""battery"",
    ""args"": {
        ""format"": ""{:.3f}"",
        ""steps"": 7
    }
}
```

Finally, I understand some folks enjoy cute videogame hearts:

``` javascript
{
    ""name"": ""battery"",
    ""args"": {
        ""gamify"": true,
        ""steps"": 7
    }
}
```
"
503,Inconsolata angle brackets extend too high,2013-05-19T21:12:01Z,2013-05-21T08:16:21Z,,,,"I installed PowerlineSymbols.otf using the fontconfig method.

Everything seems to look fine in gvim:
![gvim](https://f.cloud.github.com/assets/1451525/523585/f1ba14dc-c0c7-11e2-9482-986b963d8ca4.png)

But in vim in a terminal (xfce4-terminal), the special ""angle brackets"" protrude above the top of the statusline:
![vim](https://f.cloud.github.com/assets/1451525/523588/10a5a8a2-c0c8-11e2-8335-768afea4bdd0.png)

I have used a font size of 20 to make the problem more obvious, but it's still quite easy to see at my normal font size of 13.

Please let me know if any other information would be helpful.
"
502,Powerline CWD segment should use %~ substitutions,2013-05-19T19:38:19Z,2014-08-24T16:08:21Z,"c:b:shell, t:enhancement",,,"Finally integrating powerline into zsh, but there's one huge feature I miss from standard zsh prompts: the ""%~"" expansion, which takes the PWD and substitutes named directories.

e.g. If I have a named directory ~rubydev, then the zsh prompt would automatically show that when I'm cd'ed into any subdir. This shortens my paths substantially and gives me a type of instant ""bookmarking system"".

The standard way to grab the path with substitutions is `print -P %~` if you are in zsh, then all substitutions listed by `hash -d` are made automatically. However, I load ""bookmarks"" into zsh with my zshrc, so the following isn't an option:

``` python
import os, system
cwd = subprocess.call('cd Development/Ruby && print -P %~',shell=True,executable=os.environ['SHELL'])
# should print ""~rbd/"" since I add it to the hash table,
# but just shows ""Development/Ruby"" because zshrc isn't loaded from just the binary.
```

The pertinent replacement would go on line 45 of renderer.py (if we assumed we were running zsh):

``` python
    segment_info = {
        'environ': os.environ,
        'getcwd': getattr(os, 'getcwdu', os.getcwd),
        'home': os.environ.get('HOME'),
    }
```

I could try to make zsh load up the zshrc, but that could take a long time to load for each prompt. Is there a way to ask the parent process (e.g. a zsh terminal) to run the command ""print -P %~"" and grab that result instead of PWD environ var?

~ Jonathan

**UPDATE**: I notice that the tmux powerline is correctly using the named directories, so maybe this is a simple fix? I also wrote a chpwd callback to populate an environment variable TSP with the contents of `print -P %~` -- I can use this in powerline, but it seems hackish and I haven't been able to modify the powerline source to make it work yet.
"
501,"Status bar blinking in tmux (But weather, ext ip and such are off)",2013-05-19T18:28:27Z,2014-01-17T20:07:25Z,"c:b:tmux, t:bug",,,"Hi guys,

When using tmux, if I change directory the status bar blinks. I'm using ZSH with the powerline bindings, and if I switch to /bin/bash, then change directories, the status bar does not blink anymore

Having the status bar blinking every time I switch directory is a bit annoying, any idea what would be doing this?
"
500,"Less viml, more fallbacks",2013-05-19T09:21:19Z,2013-05-21T08:14:00Z,,,,"Moved all necessary initialization to `powerline.vim` module, added support for new python interfaces.

Now you don’t need to locate `powerline.vim` file in case installed via `pip`.
"
499,Improved qtile widgets,2013-05-17T15:36:43Z,2014-01-17T20:08:56Z,"c:b:wm, t:enhancement",,,"FYI, here are some improved powerline based qtile widgets. They allow for both left and right powerlines in the qtile bar and they allow individual segments to be clicked on. This is what I use personally, feel free to add it to the qtile bindings if you like. 

``` python
#!/usr/bin/env python
# vim:fileencoding=utf-8
from __future__ import (unicode_literals, division, absolute_import,
                        print_function)

__copyright__ = '2013, Kovid Goyal <kovid at kovidgoyal.net>'

import re
import os
import subprocess

from libqtile import bar, hook
from libqtile.widget import base

from powerline import Powerline

core = Powerline(ext='wm', renderer_module='pango_markup')
basedir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


class PowerlineRight(base._TextBox):

    SIDE = 'right'

    def __init__(self, timeout=1, **config):
        base._TextBox.__init__(self, ' ', bar.CALCULATED, **config)
        self.timeout_add(timeout, self.update)  # redraw every timeout seconds

    def update(self):
        if not self.configured:
            return True
        self.text = core.render(side=self.SIDE, segment_info={'qtile': self.qtile, 'bar': self.bar})
        self.bar.draw()
        return True

    def cmd_update(self, text):
        self.update(text)

    def cmd_get(self):
        return self.text

    def _configure(self, qtile, bar):
        base._TextBox._configure(self, qtile, bar)
        self.layout = self.drawer.textlayout(
            self.text,
            self.foreground,
            self.font,
            self.fontsize,
            self.fontshadow,
            markup=True)

    def button_press(self, x, y, button):
        try:
            segment = self.get_clicked_segment(x)
        except:
            import traceback
            traceback.print_exc()
        else:
            if segment is not None:
                self.handle_click(segment, button)

    def handle_click(self, segment, button):
        p = subprocess.Popen
        name = segment['name']
        if name == 'date':
            p(['plasma-windowed', 'calendar'])
        elif name == 'weather':
            p(['plasma-windowed', 'calendar'])
        elif name in {'uptime', 'system_load'}:
            p(['ksysguard'])
        elif name == 'mail_status':
            m = os.path.join(basedir, 'mail.py')
            if button == 1:
                p([m, '-g'])
            else:
                p([m, '-f'])

    def get_clicked_segment(self, xpos):
        parts = []
        d = core.common_config['dividers'][self.SIDE]
        hard, soft = d['hard'].strip(), d['soft'].strip()
        for x in self.text.split(hard):
            subparts = x.split(soft)
            for y in subparts[:-1]:
                parts.append(y + soft)
            parts.append(subparts[-1] + hard)
        newwidth = width = 0
        segment_number = None
        for i, text in enumerate(parts):
            text = re.sub(r'</?span.*?>', '', text)
            newwidth += self.drawer.max_layout_size([text], self.font, self.fontsize)[0]
            if width <= xpos < newwidth:
                segment_number = i
                break
            width = newwidth

        if segment_number is not None:
            segment_number = max(0, segment_number - 1)  # The first part is a &nbsp; blank

            segments = core.renderer.theme.segments[self.SIDE]
            if segment_number < len(segments):
                return segments[segment_number]


class PowerlineLeft(base._TextBox):
    SIDE = 'left'

    def __init__(self, **config):
        base._TextBox.__init__(self, ' ', bar.CALCULATED, **config)

    def setup_hooks(self):
        def hook_response(*args, **kwargs):
            self.update()

        hook.subscribe.client_managed(hook_response)
        hook.subscribe.client_urgent_hint_changed(hook_response)
        hook.subscribe.client_killed(hook_response)
        hook.subscribe.setgroup(hook_response)
        hook.subscribe.group_window_add(hook_response)
        hook.subscribe.window_name_change(self.update)
        hook.subscribe.focus_change(self.update)
        hook.subscribe.float_change(self.update)

    def update(self):
        if not self.configured:
            return True
        self.text = core.render(side='left', segment_info={'qtile': self.qtile, 'bar': self.bar})
        self.bar.draw()
        return True

    def cmd_get(self):
        return self.text

    def cmd_update(self, text):
        self.update(text)

    def _configure(self, qtile, bar):
        base._TextBox._configure(self, qtile, bar)
        self.layout = self.drawer.textlayout(
            self.text,
            self.foreground,
            self.font,
            self.fontsize,
            self.fontshadow,
            markup=True)
        self.setup_hooks()
```

And the segment definitions to go with these:

``` python
@requires_segment_info
def current_group(pl, segment_info):
    for g in segment_info['qtile'].groups:
        if g.screen:
            return g.name


@requires_segment_info
def urgent_groups(pl, segment_info):
    ans = []
    for g in segment_info['qtile'].groups:
        urgent = bool([w for w in g.windows if w.urgent])
        if urgent:
            ans.append(g.name)
    if ans:
        return ', '.join(sorted(ans))


@requires_segment_info
def window_name(pl, segment_info):
    w = segment_info['bar'].screen.group.currentWindow
    state = ''
    name = getattr(w, 'name', None) or ' '
    if w is None:
        pass
    elif w.maximized:
        state = '[] '
    elif w.minimized:
        state = '_ '
    elif w.floating:
        state = 'V '
    if state:
        return [
            {'contents': state, 'highlight_group': 'window_state'},
            {'contents': name, 'highlight_group': 'window_name'}
        ]
    return name
```

```
```
"
498,Powerline + git + gVim on Windows 7,2013-05-15T13:31:34Z,2014-06-25T17:27:16Z,"c:VCS support, e:windows, t:bug",Note2,Note2: My git bin version is 1.7.9,"I have an issue I discovered lately. I have created a git repo for my project and since then, when leaving insert mode in vim, i get windows console appearing briefly on top of gvim. Sometimes it even switch focus to another application. If I remove the git repo, the problem disappear. I may try to look at it more deeply in the coming days. I share the problem in case it rings a bell to someone. I suspect some vim 'silent' directive missing somewhere when a git check is done?! pygit problem?

This new Powerline is awesome btw. I really enjoy how my bash prompt looks now on my Mac!

Note: Quick fix for now: I removed the files git.py in the folder powerline\lib\vcs
Note2: My git bin version is 1.7.9
"
497,ipython: AttributeError: 'ConfigurableIpythonPowerline' object has no attribute 'renderer',2013-05-14T12:11:44Z,2013-05-17T15:39:44Z,,"AttributeError, UnboundLocalError","AttributeError: 'ConfigurableIpythonPowerline' object has no attribute 'renderer', UnboundLocalError: local variable 'prompt' referenced before assignment","I am getting this errors when running ipython with 

```
c.InteractiveShellApp.extensions = [
    'powerline.bindings.ipython.post_0_11'
]

 AttributeError                            Traceback (most recent call last)
 /home/***/.local/lib/python2.7/site-packages/powerline/bindings/ipython/post_0_11.pyc in render(self, name, color, *args, **kwargs)
     25         def render(self, name, color=True, *args, **kwargs):
     26                 width = None if name == 'in' else self.width
---> 27                 res, res_nocolor = self.powerline.render(output_raw=True, width=width, matcher_info=name, segment_info=self.powerline_segment_info)
     28                 self.txtwidth = len(res_nocolor)
     29                 self.width = self.txtwidth

 /home/***/.local/lib/python2.7/site-packages/powerline/__init__.pyc in render(self, *args, **kwargs)
    370         '''
    371                 self.update_renderer()
--> 372                 return self.renderer.render(*args, **kwargs)
     373 
     374         def shutdown(self):

AttributeError: 'ConfigurableIpythonPowerline' object has no attribute 'renderer'
--------------------------------------------------------------------------- 
UnboundLocalError                         Traceback (most recent call last)
UnboundLocalError: local variable 'prompt' referenced before assignment
```
"
496,Fix #494,2013-05-14T09:05:02Z,2013-05-15T12:37:28Z,,,,"Fix #494 by ignoring directories for which we do not have execute permission. 
"
495,Fails to adapt to terminal width inside SSH session,2013-05-13T15:27:41Z,2013-05-19T03:04:27Z,,,,"Steps to reproduce:
- SSH into host with powerline installed
- Resize terminal
- Right prompt stays where it is
"
494,Lengthy error spew if .git directory is not readable,2013-05-13T12:54:48Z,2013-05-15T12:37:07Z,,,,"This is a common scenario with `etckeeper`.

```
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
2013-05-13 08:53:02,075:ERROR:vim:file_vcs_status:Exception while computing segment: [Errno 13] Keine Berechtigung
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
Traceback (most recent call last):
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
  File ""/home/andreas/pack/powerline/powerline/theme.py"", line 89, in get_segments
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
  File ""/home/andreas/pack/powerline/powerline/segments/vim.py"", line 347, in file_vcs_status
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
    status = repo.status(os.path.relpath(name, repo.directory))
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
  File ""/home/andreas/pack/powerline/powerline/lib/vcs/git.py"", line 169, in status
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
    return do_status(self.directory, path, self.do_status)
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
  File ""/home/andreas/pack/powerline/powerline/lib/vcs/git.py"", line 40, in do_status
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
    path, '.gitignore', func, extra_ignore_files=('.git/info/exclude',))
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
  File ""/home/andreas/pack/powerline/powerline/lib/vcs/__init__.py"", line 119, in get_file_status
Betätigen Sie die EINGABETASTE oder geben Sie einen Befehl ein
Fehler beim Ausführen von ""function Powerline"":
Zeile    3:
    changed = file_changed(dirstate_file)
[...]
```
"
493,Use with zpython: argument of type 'NoneType' is not iterable,2013-05-13T12:47:00Z,2013-05-21T08:13:58Z,,TypeError,TypeError: argument of type 'NoneType' is not iterable,"```
2013-05-13 08:44:32,492:ERROR:shell:Failed to create renderer: argument of type 'NoneType' is not iterable
Traceback (most recent call last):
  File ""/home/andreas/pack/powerline/powerline/__init__.py"", line 361, in update_renderer
    self.create_renderer(**create_renderer_kwargs)
  File ""/home/andreas/pack/powerline/powerline/__init__.py"", line 230, in create_renderer
    self.renderer_options['theme_config'] = self.load_theme_config(self.ext_config.get('theme', 'default'))
  File ""/home/andreas/pack/powerline/powerline/shell.py"", line 31, in load_theme_config
    if name in self.theme_option:
TypeError: argument of type 'NoneType' is not iterable
```

I looked at my `.config/powerline/themes/shell/default.json`, can't spot anything wrong. Also, it works without zpython.

```
{
        ""default_module"": ""powerline.segments.common"",
        ""segment_data"": {
                ""hostname"": {
                        ""before"": "" "",
                        ""args"": {
                                ""only_if_ssh"": true
                        }
                },
                ""virtualenv"": {
                        ""before"": ""ⓔ  ""
                },
                ""branch"": {
                        ""before"": "" ""
                }
        },
        ""segments"": {
                ""left"": [
                        {
                                ""name"": ""hostname""
                        },
                        {
                                ""name"": ""virtualenv""
                        },
                        {
                                ""name"": ""cwd"",
                                ""args"": {
                                        ""dir_limit_depth"": 3
                                }
                        }
                ],
                ""right"": [
                        {
                                ""module"": ""powerline.segments.shell"",
                                ""name"": ""last_pipe_status""
                        },
                        {
                                ""name"": ""branch"",
                                ""args"": {
                                        ""status_colors"": true
                                }
                        },
                        {
                                ""name"": ""user""
                        },
                        {
                                ""name"": ""hostname""
                        }
                ]
        }
}
```
"
492,Make docs match actual default.,2013-05-13T06:56:58Z,2013-05-21T08:14:00Z,,,,
491,Add Examples,2013-05-12T17:57:35Z,2014-02-15T23:13:02Z,"c:documentation, s:invalid, t:enhancement",,,"The documentation needs some examples to make powerline works. It just mention where to find them but it does'nt show any way to apply costumize those configs files.
"
490,VIM Errors on Quit,2013-05-12T12:15:08Z,2014-01-17T20:10:08Z,"c:b:vim, t:bug",AttributeError,AttributeError: 'VimPowerline' object has no attribute 'renderer',"The following error message appears every time VIM exits:

```
Error detected while processing VimLeavePre Auto commands for ""*"":
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 379, in shutdown
    self.renderer.shutdown()
AttributeError: 'VimPowerline' object has no attribute 'renderer'
```

The error appears regardless of which [python-powerline-git](https://aur.archlinux.org/packages/python-powerline-git/) AUR package (python2.7 or python3.3) is installed.
"
489,Fix vcs error when open files in git submodule,2013-05-11T02:42:46Z,2013-05-14T16:24:25Z,,,,"Fix the following error when the git dir is separated from the git work tree:

```
file_vcs_status:Exception while computing segment: [Errno 20] Not a directory: '/path/to/a-git-repo/.git/info/exclude'
```
"
488,custom matchers,2013-05-10T17:32:25Z,2014-01-17T20:12:01Z,"c:b:vim, s:invalid",,,"I wanna do something like this:

I've set in vim

``` VimL
let g:powerline_config_path =
     \ expand(""~/.vim/bundle/powerline-settings/"")
```

and I'd like to do something like this in `~/.vim/bundle/powerline-settings/matchers/my.py`

``` python

from __future__ import absolute_import

import os
from powerline.bindings.vim import getbufvar


def vundle(matcher_info):
    return str(getbufvar(matcher_info['bufnr'], '&buftype')) == 'vundle'
```

and in `~/.vim/bundle/powerline-settings/config.json`

``` json
        ""vim"": {
            ""colorscheme"": ""default"",
            ""theme"": ""default"",
            ""local_themes"": {
                ""cmdwin"": ""cmdwin"",
                ""help"": ""help"",
                ""quickfix"": ""quickfix"",
                ""modulename.vundle"": ""vundle""
            }
        },
```

The thing is that I dont know what should I put in place of `modulename` and how I should name the python file where I put the matcher.
"
487,Can not load powerline successly,2013-05-10T03:53:11Z,2014-01-17T20:12:44Z,"c:b:vim, t:bug",,,"My OS is Arch Linux so I install python-powerline-git via AUR firstly, but when I execute vim, it says:

> An error occurred while importing the Powerline package. This could be caused by an invalid sys.path setting, or by an incompatible Python version (Powerline requires Python 2.6+ or 3.2+ to work). Please consult the troubleshooting section in the documentation for possible solutions.
> 
> Press ENTER or type command to continue

No powerline in vim after press enter.

I removed python-powerline-git and try to install python2-powerline-git via AUR again, but no error and no powerline at all when execute vim.

Before remove python-powerline-git, I try tmux too, but there is no powerline still.

I had add necessary lines to their config already. These are my config about [vim](https://gist.github.com/5552272) and [tmux](https://gist.github.com/5552276).
"
486,error when exiting file explorer,2013-05-09T01:32:27Z,2013-05-21T08:13:58Z,,AttributeError,AttributeError: 'VimPowerline' object has no attribute 'renderer',"```
Error detected while processing VimLeavePre Auto commands for ""*"":
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/__init__.py"", lin
e 379, in shutdown
    self.renderer.shutdown()
AttributeError: 'VimPowerline' object has no attribute 'renderer'
```
"
485,Consolas font doesn't align,2013-05-08T18:17:50Z,2013-05-10T11:15:35Z,s:duplicate,,,"I am using the latest version of Powerline in Ubuntu. I have followed the instructions, and patches Consolas with the font patcher, but the arrows in the status bar does not align properly. They stick out at the top. 

Any solution to this problem?
"
484,Option To Define Configuration Directory,2013-05-07T18:55:26Z,2013-05-10T11:10:51Z,,,,"Using `POWERLINE_CONFIG_HOME` to define configuration directory.

I couldn't see how to add tests for this simple change so I did not. I will gladly add some if someone has suggestions on how to test this.

Ref #483
"
483,Option To Define Configuration Directory,2013-05-07T18:53:12Z,2013-05-10T11:10:54Z,,,,"I keep my dotfiles in a [homesick](https://github.com/technicalpickles/homesick) style repository. I want to keep my powerline configuration with me on whichever machine I use. In the current setup I have to define a `.config` folder in my dotfiles repo which gets symlinked into my home folder. The problem with this is that there are other things that are normally in `~/.config` that I do not track in my dotfiles repo. Furthermore the environment variable `XDG_CONFIG_HOME` is not a good choice for me because other applications respect this value and look for their own configurations there.

I would like to have a way to configure some other directory as the location of my powerline config. Perhaps `POWERLINE_CONFIG_HOME`
"
482,Vim Fugitive + Git Status Symbols,2013-05-06T20:45:18Z,2014-01-17T20:13:48Z,"c:b:vim, t:bug",,,"This should be pretty easy to recreate, and probably a very quick fix as well:

Launch vim that has both [Vim Fugitive](https://github.com/tpope/vim-fugitive) and Powerline installed.

In vim, perform the following

```
:!mkdir test
:cd test
:!git init
:edit file.txt
```

Add some text to the file, save it `:w` but don't close the buffer.

Then run:

```
:Gstatus
```

This will display the git status in a horizontal split. Move your vim cursor over your untracked `file.txt`.

Press `-` to stage the file. This will also properly update the Powerline git display to `A` as it should.

Then press `C` (`Shift + C`) to change the horizontal split into commit message mode.

Enter a commit message. Then

```
:wq
```

This will perform the commit and close the commit split, returning you to the `file.txt` buffer.

Sometimes during this time, Powerline will seem to crash? Or at the very least disappear, however, it will return which is good.

However, regardless of whether Powerline seems to disappear or not, the git `A` disply for the file.txt will not be removed. If I perform a

```
:bd
:edit file.txt
```

The `A` will still remain. However, if I re-save the file with `:w` then it will remove the `A` properly.
"
481,svn does not show.,2013-05-03T20:19:01Z,2013-05-06T13:54:29Z,,,,"When checkout a svn repository, I'm not able to see any info (branch, etc.) using the zsh prompt.  I'm not sure how to further troubleshoot.  Using default prompt and configs.
"
480,IndexError with grad_list via colorscheme.py,2013-05-03T14:05:09Z,2014-08-29T21:56:48Z,"c:b:vim, t:bug",IndexError,IndexError: list index out of range,"I have just received the following error while using `CTRL-Y` to copy characters from the line above.

This happens when copying a `>` character, and it seems like there is some interference with them xml-plugin (which determines if there is a tag to close automatically).

Hopefully the Traceback is enough to fix/workaround this, otherwise I can try providing a way to reproduce it.

```
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/home/user/.dotfiles/lib/powerline/powerline/__init__.py"", line 372, in render
    return self.renderer.render(*args, **kwargs)
  File ""/home/user/.dotfiles/lib/powerline/powerline/renderers/vim.py"", line 91, in render
    matcher_info=segment_info,
  File ""/home/user/.dotfiles/lib/powerline/powerline/renderer.py"", line 189, in render
    if mode not in segment['exclude_modes'] or (segment['include_modes'] and segment in segment['include_modes'])]
  File ""/home/user/.dotfiles/lib/powerline/powerline/renderer.py"", line 127, in _get_highlighting
    segment['highlight'] = self.colorscheme.get_highlighting(segment['highlight_group'], mode, segment.get('gradient_level'))
  File ""/home/user/.dotfiles/lib/powerline/powerline/colorscheme.py"", line 109, in get_highlighting
    'fg': pick_color(group_props['fg']),
  File ""/home/user/.dotfiles/lib/powerline/powerline/colorscheme.py"", line 106, in <lambda>
    pick_color = lambda gradient: self.get_gradient(gradient, gradient_level)
  File ""/home/user/.dotfiles/lib/powerline/powerline/colorscheme.py"", line 69, in get_gradient
    return tuple((pick_gradient_value(grad_list, gradient_level) for grad_list in self.gradients[gradient]))
  File ""/home/user/.dotfiles/lib/powerline/powerline/colorscheme.py"", line 69, in <genexpr>
    return tuple((pick_gradient_value(grad_list, gradient_level) for grad_list in self.gradients[gradient]))
  File ""/home/user/.dotfiles/lib/powerline/powerline/colorscheme.py"", line 29, in pick_gradient_value
    return grad_list[int(round(gradient_level * (len(grad_list) - 1) / 100))]
IndexError: list index out of range
E858: Eval did not return a valid python object
```

This appears to be similar to https://github.com/Lokaltog/powerline/pull/407 .
"
479,Makepkg/Pacman 4.1 Syntax,2013-05-03T09:13:21Z,2013-06-28T12:17:13Z,,,,"Includes the shiny new `pkgver()` function, pretty VCS source fetching (and the removal of the unneeded `build()` function, along with some general clean-ups.
"
478,Segment to Print Environment Variables,2013-05-02T12:47:48Z,2013-05-21T08:14:00Z,,,,"- Added segment function to powerline.segments.common.
  - Added test to check return values.
  - Added default colorschemes for everything but iPython.

Ref #477
"
477,Feature: New Segment For Printing Arbitrary Environment Variables,2013-05-02T12:41:20Z,2013-07-10T12:23:29Z,"a:segment, c:common segments, t:enhancement",,,"At my company, `ACME_CO`, when connecting to customers' systems we set some environment variables like `ACME_CO_CUSTOMER` that hold information about the customer in question that isn't generally stored anywhere else on their system. We want to configure our powerline shell prompt to print the value of one or more of these environment variables. The segment config would look something like:

``` json
{
    ""name"": ""environment"",
    ""args"": {
        ""variable"": ""ACME_CO_CUSTOMER""
    }
}
```
"
476,Some changes for powerline daemon,2013-05-02T11:35:18Z,2013-05-06T13:38:10Z,,,,"Moved `--config` and `--theme_option` arguments processing to a separate function, cherry-picked `deepcopy` from `powerline-reload` branch and partially fixed cwd segment in tmux.
"
475,very  slow with tagbar plugin ,2013-05-02T07:26:05Z,2013-05-02T07:54:43Z,s:wontfix,,,"Hi , thanks for this good plugin.

my problem is with powerlineand  tagbar installed , the vim became slow when swithing between buffers , loading files and etc.Meanwhile ,a cmd window appeared temporarily in Windows taskbar.
anyway to overcome it ? 
"
474,Make vcs segments *much* faster,2013-05-02T05:50:22Z,2013-05-06T13:33:59Z,,,,"Do not call vcs status unless the relevant files have changed.
Uses inotify, if available, otherwise falls back to stat() based
monitoring. Fixes #396
"
473,Reset emulate call:,2013-05-01T19:40:07Z,2013-05-06T15:20:25Z,,,,"- only emulate -L causes options to be restore after function call
- using setopt outside of functions does not reintroduce #342
"
472,Python Error at Vim Startup,2013-04-30T11:29:09Z,2014-08-16T15:51:46Z,"c:b:vim, t:bug",,,"Hello,
when im starting vim with powerline i get this error:

self.pl.exception('Failed to create renderer: {0}', str(e))

My vim --version:
http://pastebin.com/yisiPMkz
"
471,Zpython and Powerline type error,2013-04-29T21:50:45Z,2013-05-06T15:20:23Z,,,,"I'm using the latest versions of both powerline and ZyX-I's zpython branch of Zsh, but trying to load powerline gives me this error:

```
    Traceback (most recent call last):                                                                        
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 97, in __str__
        segment_info={'args': self.args, 'environ': environ}
      File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 372, in render
        return self.renderer.render(*args, **kwargs)
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 185, in render
        segments = theme.get_segments(side, self.get_segment_info(segment_info))
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 153, in get_segment_info
        if 'PWD' in r['environ']:
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 68, in __getitem__
        return string(zsh.getvalue(key))
    TypeError: must be string, not int
    zsh: Failed to create string object for parameter ZPYTHON_POWERLINE_PS1
    Traceback (most recent call last):
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 97, in __str__
        segment_info={'args': self.args, 'environ': environ}
      File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 372, in render
        return self.renderer.render(*args, **kwargs)
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 185, in render
        segments = theme.get_segments(side, self.get_segment_info(segment_info))
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 153, in get_segment_info
        if 'PWD' in r['environ']:
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 68, in __getitem__
        return string(zsh.getvalue(key))
    TypeError: must be string, not int
    zsh: Failed to create string object for parameter ZPYTHON_POWERLINE_RPS1
    Traceback (most recent call last):
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 97, in __str__
        segment_info={'args': self.args, 'environ': environ}
      File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 372, in render
        return self.renderer.render(*args, **kwargs)
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 185, in render
        segments = theme.get_segments(side, self.get_segment_info(segment_info))
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 153, in get_segment_info
        if 'PWD' in r['environ']:
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 68, in __getitem__
        return string(zsh.getvalue(key))
    TypeError: must be string, not int

    zle-line-init:10: Failed to create string object for parameter ZPYTHON_POWERLINE_PS1
    Traceback (most recent call last):
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 97, in __str__
        segment_info={'args': self.args, 'environ': environ}
      File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 372, in render
        return self.renderer.render(*args, **kwargs)
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 185, in render
        segments = theme.get_segments(side, self.get_segment_info(segment_info))
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 153, in get_segment_info
        if 'PWD' in r['environ']:
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 68, in __getitem__
        return string(zsh.getvalue(key))
    TypeError: must be string, not int
    zle-line-init:10: Failed to create string object for parameter ZPYTHON_POWERLINE_RPS1
    Traceback (most recent call last):
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 97, in __str__
        segment_info={'args': self.args, 'environ': environ}
      File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 372, in render
        return self.renderer.render(*args, **kwargs)
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 185, in render
        segments = theme.get_segments(side, self.get_segment_info(segment_info))
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 153, in get_segment_info
        if 'PWD' in r['environ']:
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 68, in __getitem__
        return string(zsh.getvalue(key))
    TypeError: must be string, not int
    zle-line-init:11: Failed to create string object for parameter ZPYTHON_POWERLINE_PS1
    Traceback (most recent call last):
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 97, in __str__
        segment_info={'args': self.args, 'environ': environ}
      File ""/usr/lib/python2.7/site-packages/powerline/__init__.py"", line 372, in render
        return self.renderer.render(*args, **kwargs)
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 185, in render
        segments = theme.get_segments(side, self.get_segment_info(segment_info))
      File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 153, in get_segment_info
        if 'PWD' in r['environ']:
      File ""/usr/lib/python2.7/site-packages/powerline/bindings/zsh/__init__.py"", line 68, in __getitem__
        return string(zsh.getvalue(key))
    TypeError: must be string, not int
```
"
470,Local theme for unite.vim and matcher for tagbar,2013-04-29T04:54:04Z,2014-01-10T18:08:51Z,,,,"### Added two local themes:

The major one is for `unite.vim`. The other one for `tagbar` is trivial.

It is quite nice if you use `unite.vim`

![unite normal](http://d.pr/i/RtLV+)
![unite insert](http://d.pr/i/OcyE+)

Two much mess to separate the commits because of the json alignment conflicts for each commits. Probably merge it after the previous commits about `ruby_version` and `syntastic`.
### Reference

https://github.com/Shougo/unite.vim/pull/188
"
469,Anyone knows how to make slight change of colortheme to a local theme (vim) ?,2013-04-27T18:22:49Z,2014-08-05T23:37:09Z,"c:core, s:wontfix, t:enhancement",,,"Thanks.
"
468,Clipping/alignment issue + Funny special character,2013-04-26T23:08:13Z,2014-08-25T03:54:23Z,"c:font, t:bug",,,"![Screen Shot 2013-04-26 at 3 39 31 PM](https://f.cloud.github.com/assets/310363/433291/deb36f82-aec5-11e2-8a8f-b722323684b6.png)

I'm having clipping/alignment issues with powerline in both the prompt and via tmux. There's also an odd circular special character that appears several times. I did a echo -n <char here> | hexdump and the returned code is e2 8c 9a.

I'm using the latest beta release of iTerm on a brand new MacBook Air. These problems persist regardless of the patched font I use.
"
467,cwd segment not working in tmux,2013-04-26T02:29:33Z,2014-06-25T16:42:53Z,"c:b:tmux, t:bug",,,"I dunno why, I have added the `cwd` segment, and the only thing I'm getting is the `~` sign.

I run `powerline tmux right` and the output it's okay (showing the cwd), but the status line in tmux doesn't change at all.

How can I continue debugging the issue?
"
466,Multiple issues with tmux over SSH,2013-04-24T15:13:15Z,2014-01-17T20:23:32Z,"c:b:tmux, t:bug",,,"I have Powerline set up on my client Ubuntu machine and it works well with the tmux, vim and bash plugins.  However, when I set it up on my Synology DS212+ NAS drive, I experienced several issues as shown in the screenshot below.

![Screenshot from 2013-04-24 15:45:04](https://f.cloud.github.com/assets/1826067/420379/966e5ab8-aced-11e2-8361-85ba4b76470c.png)

I'm running `tmux -2` (forcing 256 colours), and:
- All special characters are just underscores in the tmux status bar.  
- Also, the bash prompt has a huge space after it before the input cursor.
- The tmux status bar keeps disappearing (it does this locally on Ubuntu, in fairness, might need a separate issue)

When I'm not running in tmux, the bash prompt is fine, no huge space.  When I expand the terminal window, the status bar stops disappearing, although the right section flickers from time to time.
"
465,Vim: powerline is constantly collecting information (git-bisect result inside),2013-04-24T12:36:51Z,2014-01-17T20:25:56Z,t:bug,,,"The following commit makes Powerline constantly pull for information (e.g. the VCS info).

This can be seen by stracing the Vim process like this:
`sudo strace -f -p $(pgrep -n gvim) 2>&1 | grep bzr`

```
62e731314e404c3d107138a5a086159dfdf214f3 is the first bad commit
commit 62e731314e404c3d107138a5a086159dfdf214f3
Author: ZyX <kp-pav@ya.ru>
Date:   Wed Mar 13 22:38:56 2013 +0400

    Replace memoize with threading where applicable

    NOTE: Documentation now gets attached to *classes*, not actual segments. Hiding
          away classes (by changing their names to start with `_`) and/or doing

              self.__doc__ = self.__class__.__doc__

          does not work (hiding classes only hides documentation completely). I am
          not familiar with sphinx enough to say how this should be fixed.

    Ref #168

:040000 040000 0cc65497647e726ae7662e71d36c493d69322ebd 09883e46b6ad4f63fbc49da15e777222da4f4c4d M  powerline
:040000 040000 b20739eff273c5a77c48d5df6591092fffa7dd25 a31c2c812e8c173573a2484d5e79e5024b8b4dd0 M  tests
```

I am using Ubuntu 12.04.
"
464,Vim: segments for buffer and window number,2013-04-24T12:23:53Z,2014-09-20T10:20:50Z,"a:segment, c:b:vim, t:enhancement",,,"I would like to have segments for buffer and window numbers.

I have a patch which provides this, but am not sure if this is the right approach (and initially thought it was causing issues; reported in a new issue now).

Please consider adopting this functionality.

I am happy to wrap it up in a pull request.

```
diff --git a/powerline/config_files/colorschemes/vim/default.json b/powerline/config_files/colorschemes/vim/default.json
index 9116aa0..47134c9 100644
--- a/powerline/config_files/colorschemes/vim/default.json
+++ b/powerline/config_files/colorschemes/vim/default.json
@@ -28,7 +28,9 @@
        ""line_current_symbol"": { ""fg"": ""gray1"", ""bg"": ""gray10"" },
        ""virtcol_current_gradient"": { ""fg"": ""dark_GREEN_Orange_red"", ""bg"": ""gray10"" },
        ""col_current"": { ""fg"": ""gray6"", ""bg"": ""gray10"" },
-       ""modified_buffers"": { ""fg"": ""brightyellow"", ""bg"": ""gray2"" }
+       ""modified_buffers"": { ""fg"": ""brightyellow"", ""bg"": ""gray2"" },
+       ""buffer_number"": { ""fg"": ""gray8"", ""bg"": ""gray2"" },
+       ""window_number"": { ""fg"": ""gray8"", ""bg"": ""gray2"" }
    },
    ""mode_translations"": {
        ""nc"": {
diff --git a/powerline/config_files/themes/vim/default.json b/powerline/config_files/themes/vim/default.json
index 29d6a2a..f8280e7 100644
--- a/powerline/config_files/themes/vim/default.json
+++ b/powerline/config_files/themes/vim/default.json
@@ -37,6 +37,7 @@
            },
            {
                ""name"": ""file_directory"",
+               ""args"": { ""shorten_home"": true },
                ""priority"": 40,
                ""draw_soft_divider"": false
            },
@@ -102,6 +103,14 @@
                ""before"": "":"",
                ""width"": 3,
                ""align"": ""l""
+           },
+           {
+               ""name"": ""buffer_number"",
+               ""after"": ""@""
+           },
+           {
+               ""name"": ""window_number"",
+               ""draw_soft_divider"": false
            }
        ]
    }
diff --git a/powerline/segments/vim.py b/powerline/segments/vim.py
index 9e7a8b6..f710b20 100644
--- a/powerline/segments/vim.py
+++ b/powerline/segments/vim.py
@@ -23,6 +23,7 @@ vim_funcs = {
    'expand': vim_get_func('expand', rettype=str),
    'bufnr': vim_get_func('bufnr', rettype=int),
    'line2byte': vim_get_func('line2byte', rettype=int),
+   'winnr': vim_get_func('winnr')
 }

 vim_modes = {
@@ -307,6 +308,26 @@ def modified_buffers(pl, text='+ ', join_str=','):
        return text + join_str.join(buffer_mod)
    return None

+@requires_segment_info
+def buffer_number(segment_info, **kwargs):
+   '''Return the current buffer number.'''
+   return str(segment_info['bufnr'])
+
+@requires_segment_info
+def window_number(segment_info, **kwargs):
+   '''Return the current window number.'''
+   import re
+   m = re.search('\d+', repr(segment_info['window']))
+   if m:
+       return str(int(m.group(0))+1)
+   return '?'
+
+   return segment_info['window']
+   if arg is not None:
+       return vim_funcs['winnr'](arg)
+   else:
+       return vim_funcs['winnr']()
+

 class KwWindowThreadedSegment(KwThreadedSegment):
    def set_state(self, **kwargs):
```
"
463,Error in atexit._run_exitfuncs,2013-04-24T08:50:22Z,2013-04-26T22:24:52Z,,,,"When I start vim I get An error occurred while importing the Powerline package. This could be caused by an invalid sys.path setting, or by an incompatible Python version (Powerline requires Python 2.6+ or 3.2+ to work). Please consult the troubleshooting section in the documentation for possible solutions.

When I exit I can see
Error in atexit._run_exitfuncs:
                               object  : AttributeError(""'module' object has no attribute 'stderr'"",)
                                                                                                     type    : AttributeError
                                                                                                                             refcount: 1
                                                                                                                                        address : 0x2ad243815ad0
                                                                                                                                                                lost sys.stderr

vim version is
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Apr 24 2013 00:38:42)
Huge version without GUI.  Features included (+) or not (-):
+arabic +autocmd -balloon_eval -browse ++builtin_terms +byte_offset +cindent 
-clientserver -clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments 
+conceal +cryptv +cscope +cursorbind +cursorshape +dialog_con +diff +digraphs 
-dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path 
+find_in_path +float +folding -footer +fork() +gettext -hangul_input +iconv 
+insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent 
+listcmds +localmap -lua +menu +mksession +modify_fname +mouse -mouseshape 
+mouse_dec -mouse_gpm -mouse_jsbterm +mouse_netterm -mouse_sysmouse 
+mouse_xterm +multi_byte +multi_lang -mzscheme +netbeans_intg -osfiletype 
+path_extra -perl +persistent_undo +postscript +printer +profile -python 
+python3 +quickfix +reltime +rightleft -ruby +scrollbind +signs +smartindent 
-sniff +startuptime +statusline -sun_workshop +syntax +tag_binary 
+tag_old_static -tag_any_white -tcl +terminfo +termresponse +textobjects +title
 -toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo 
+vreplace +wildignore +wildmenu +windows +writebackup -X11 -xfontset -xim -xsmp
 -xterm_clipboard -xterm_save 
   system vimrc file: ""$VIM/vimrc""
     user vimrc file: ""$HOME/.vimrc""
      user exrc file: ""$HOME/.exrc""
  fall-back for $VIM: ""/home/joep/share/vim""
Compilation: 
gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -D_FORTIFY_SOURCE=1  
Linking: gcc   -L/usr/local/lib -o vim    -lncurses -lselinux       -L/home/joep/lib/python3.3/config-3.3m -lpython3.3m -lpthread -lutil -lm -Xlinker -export-dynamic 
"
462,multi-line shell,2013-04-24T00:24:32Z,2014-06-24T19:50:04Z,"c:b:shell, c:core, t:enhancement",,,"To achieve a two-line shell prompt I tried adding the following to ""segment_data"" for the shell configuration but it resulted in the triangle being placed on the next line.

```
    ""cwd"": {
        ""after"": ""\n""
    }
```

Result:

![Selection_029](https://f.cloud.github.com/assets/285352/417696/472ce258-ac75-11e2-9981-d7d80c82c198.png)
"
461,Override vim_mode in segments/vim.py from JSON,2013-04-23T20:24:19Z,2013-04-24T17:37:32Z,,,,"I'd like to override the mode indicators in powerline to look like ""I"" for insert mode, ""N"" for normal, ""V"" for visual line, etc. I found the spec in `segments/vim.py` in the powerline pip installation, but I'd like to be able to set these things from the JSON powerline theme instead of editing the file.

I couldn't find any docs on setting this; is this currently settable?
~ Jonathan
"
460,Updated Tips and Tricks.rst,2013-04-23T15:11:20Z,2014-08-02T23:40:28Z,"c:documentation, t:enhancement",,,"Added a short blurb on how to handle Source Code Pro fonts.
"
459,Feature detection in powerline.,2013-04-23T09:48:12Z,2014-01-17T20:27:30Z,"c:b:vim, t:enhancement",,,"I'd like to have a single vimrc file to copy onto multiple systems, so using json for powerline config doesn't seem to be practical. The reason being I'd like to detect if the system has a powerline font, and to enable or disable the ""fancy"" characters.

What I was gonna do is use `system('fc-list | grep -i powerline')` or something to detect if a patched font is installed, and then tell powerline to display the fancy chars or not. This is simple to do with vim-powerline, but I'm not quite sure how to do it automatically if powerline uses json files for config.
"
458,The :help powerline docs seem outdated.,2013-04-23T09:40:19Z,2013-05-06T13:57:04Z,s:wontfix,,,"For example, it talks about doing stuff like `let g:Powerline_symbols = 'unicode'` but nothing happens. Is that only for the old vim-powerline?

The new powerline uses json for settings... How do we make certain setting based on certain conditions then? e.g. I wanted to do `if has(""unix"")...`, etc, to set certain powerline settings.
"
457,Error detected while processing function Powerline,2013-04-23T06:57:14Z,2014-01-17T20:28:32Z,"c:b:vim, t:bug",,,"Hi,I'm a noob, these days I tried to install powerline on vim, but failed.

It show this error
![](http://i.imgur.com/2lPhR5l.png)

I read the document and issue #401 #384 but still can't understand. (Sorry for my poor comprehension)

Here are my steps:
1. I get error when try to use pip install --user git+git://github.com/Lokaltog/powerline
   so I download powerline and use""setup.py install"" to setup it into""C:/Python33/Lib/site-packages/Powerline-beta-py3.3.egg""
2. delete all .pyc in that folder
3. add vimrc
   
   set rtp+=C:/Python33/Lib/site-packages/Powerline-beta-py3.3.egg/powerline/bindings/vim
   
   set laststatus=2 
   
   set noshowmode

When I try to open vim ,it show the error

What's wrong with my steps?It will be great if anyone can help me,really thank you.

I'm using windows, python33 and vim 7.3.905 with bundle

it will show this when use

```
py import powerline as p; print p.__file__ 
```

C:/Python33/Lib/site-packages/Powerline-beta-py3.3.egg/powerline/**int**.py
"
456,Weird Phantom Vim Processes,2013-04-22T23:20:21Z,2014-01-17T20:29:55Z,"c:b:vim, t:bug",,,"I have been unable to reliably reproduce this, other than it only occurs when I have powerline enabled.

I have found an issue where after extended periods of time when using MacVim, then after closing it, the Vim process remains running in the background. The window closes normally, and everything seems fine.

I can even quit the MacVim app and these process are still running. I have to go into Activity Monitor and manually force quit them in order to get ride of them.

If I can find a way to reliably reproduce it, I will add to this issue.

Also, generally, when I use MacVim I am working in Git repos, if that's of any use.
"
455,"powerline in vim doesn't work, in tmux half of it works",2013-04-22T22:04:59Z,2013-04-23T07:55:43Z,,ImportError,ImportError: cannot import name get_argparser,"When trying to enable powerline in vim I get:
Error detected while processing function Powerline:
line    3: 
Traceback (most recent call last): 
Press ENTER or type command to continue

(It occurs if I go into help oder if I try to enable the status bar via ""set laststatus=2"")

In tmux the left part is working fine, the right doesn't show up. If I try: powerline tmux right I get: 

Traceback (most recent call last):
  File ""/usr/bin/powerline-python2.7"", line 12, in <module>
    from powerline.shell import ShellPowerline, get_argparser  # NOQA
ImportError: cannot import name get_argparser

Any hints on how to debug that? (I tried python 2.7 and python 3.2)
"
454,Use realpath() to allow powerline to be symlinked.,2013-04-22T17:53:36Z,2014-02-15T21:22:44Z,"a:segment, c:b:tmux, t:enhancement",,,"Just a small change to allow one to symlink the powerline script and not throw ImportErrors.
"
453,Still unable to see the >  and the < separators in my (terminal vim) and urxvt.,2013-04-22T17:44:04Z,2014-01-17T20:31:28Z,"c:font, t:bug",,,"I have ensured my rxvt-unicode is compiled with --enable-unicode3
This is the one:
https://aur.archlinux.org/packages/rxvt-unicode-patched/ 
here is the PKGBUILD:  https://aur.archlinux.org/packages/rx/rxvt-unicode-patched/PKGBUILD

as you can see, everything is enabled!

After looking at this https://powerline.readthedocs.org/en/latest/overview.html#terminal-emulator-requirements, I realized that fontconfig won't be supported so I dragged the patched fonts into the ~/.fonts

And that my vim has --with features - big, python2 and 3 support.

So I do see the powerline, but is missing something: 

http://i.imgur.com/TuqCIzt.png

And the same thing happened in my bash.  I have followed the tutorial in regards to putting in the updated fonts from here:  
https://github.com/Lokaltog/powerline-fonts/tree/master/SourceCodePro 

I put the Source Code Pro Medium into my ~/.fonts and ran fc-cache -vf ~/.fonts and even put ""PowerlineSymbols.otf in there.

After this, used the:
set encoding=utf-8 
set laststatus=2 
let g:Powerline_symbols = 'fancy'

Any ideas?
"
452,Powerline font rendering in PutTTY,2013-04-22T15:36:32Z,2014-08-25T04:01:45Z,"c:font, s:invalid, t:bug",,,"Some of the fonts don't seem to be patching properly. I'm using the latest powerline-fonts, and I even tried patching the original Droid Sans Mono with the latest fontpatcher. Here's what I currently see:

Anonymous Pro for Powerline:
![anonymous_pro](https://f.cloud.github.com/assets/260873/409919/bc76cf58-ab60-11e2-85b1-52d22a1dfa88.png)

Consolas:
![foo](https://f.cloud.github.com/assets/260873/409929/e4784022-ab60-11e2-940d-630bbe6bb7e0.png)

DejaVu Sans Mono for Powerline
![foo](https://f.cloud.github.com/assets/260873/409931/06156f48-ab61-11e2-846d-d72f2dc4c0f0.png)

Droid Sans Mono Dotted for Powerline
![foo](https://f.cloud.github.com/assets/260873/409937/31b7b3f4-ab61-11e2-90b1-2369a9d2cdf5.png)

Droid Sans Mono for Powerline
![foo](https://f.cloud.github.com/assets/260873/409945/5d2492fa-ab61-11e2-8292-6dfd8c0db456.png)

Droid Sans Mono Slashed for Powerline
![foo](https://f.cloud.github.com/assets/260873/409952/7fcac7c0-ab61-11e2-8d1b-4618fbdb32f5.png)

Inconsolata for Powerline
![foo](https://f.cloud.github.com/assets/260873/409960/b7521ffe-ab61-11e2-9146-c8b3eec2157c.png)

Liberation Mono for Powerline
![foo](https://f.cloud.github.com/assets/260873/409967/d6f305ee-ab61-11e2-9119-61235b8b0105.png)

Meslo (none of these would actually load in windows for me)

Source Code Pro for Powerline
![foo](https://f.cloud.github.com/assets/260873/409974/10dad732-ab62-11e2-9d91-e1adebe2058e.png)

Ubuntu Mono for Powerline
![foo](https://f.cloud.github.com/assets/260873/409982/46dc2872-ab62-11e2-934e-361020f6b86e.png)
"
451,Added Syntastic Segment,2013-04-22T10:43:32Z,2013-08-20T15:32:33Z,,,,"Add a new segment to the theme/vim/default.json with name 'syntastic_segment' and it will display the SyntasticStatuslineFlag from syntastic.
"
450,Vim modelines shouldn't include file encoding,2013-04-22T01:29:12Z,2013-04-22T10:13:55Z,s:invalid,,,"I was trying to use vim to hack in the powerline code, but I found that the files where being modified immediatly after opening them, after some trial and error I found that the modelines were the issue.

After reading a bit, you shouldn't use fileencoding in a modeline, because makes the [transformation twice](http://vim.wikia.com/wiki/How_to_make_fileencoding_work_in_the_modeline) making believe vim that the file is different.

So, maybe you can keep the expandtab option, but remove that one that could cause conflicts.

References:
- http://newsgroups.derkeiler.com/Archive/Comp/comp.editors/2009-02/msg00002.html
"
449,"problem with solarized colorscheme, virtcol indicator uses hard divider",2013-04-21T20:01:54Z,2014-02-15T22:52:47Z,"c:b:vim, t:bug",,,"Basically, this is the problem.
Here is powerline using the default colorscheme
![powerline-default](https://f.cloud.github.com/assets/2249516/406815/1e722638-aabe-11e2-98a3-4f399eeb8737.png)
and here it is using solarized
![powerline-solarized](https://f.cloud.github.com/assets/2249516/406816/233bdb78-aabe-11e2-9a62-0ae92529224d.png)
I haven't changed anything apart from the colorscheme.
"
448,Added missing pl argument,2013-04-20T20:41:16Z,2013-04-21T19:28:55Z,,,,"It is a problem with git automatic merging. For some reason git used to think there is no conflict here.
"
447,Weird errors when starting vim on OS X 10.6 - Works fine nonetheless,2013-04-20T05:42:02Z,2014-01-26T14:05:08Z,"c:b:vim, e:macos, t:bug",TypeError,TypeError: modified_indicator() keywords must be strings,"Hello everybody,

I have to hit the enter key eleven times before I can use vim (installed via the recommended  `brew install macvim --env-std --override-system-vim`. After this, everything looks good and works fine. Working on OS X 10.6.8.:

```
which python
/usr/local/bin/python

python --version
Python 2.7.3
```

I have this line in my `.vimrc`:

```
set rtp+=/Users/dennis/.dotfiles/powerline/bindings/vim
```

Here are the errors:

```
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
2013-04-20 07:20:50,613:ERROR:vim:modified_indicator:Exception while computing segment: modified_indica
tor() keywords must be strings
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
Traceback (most recent call last):
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
  File ""/Users/dennis/.local/lib/python2.6/site-packages/powerline/theme.py"", line 89, in get_segments
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
TypeError: modified_indicator() keywords must be strings
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
2013-04-20 07:20:55,907:ERROR:vim:line_percent:Exception while computing segment: line_percent() keywor
ds must be strings
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
Traceback (most recent call last):
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
  File ""/Users/dennis/.local/lib/python2.6/site-packages/powerline/theme.py"", line 89, in get_segments
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>58_pyeval:
line    1:
TypeError: line_percent() keywords must be strings
Press ENTER or type command to continue
```

After the last `ENTER` everything works just fine.

Any hints how to fix this error messages?

Regards

Dennis
"
446,Powerline rendering messed up in terminal and macvim,2013-04-19T03:47:08Z,2013-04-23T15:05:47Z,,,,"Hate to open up an issue, but I haven't found a solution or anything related to the issue.

See the attached image; the entire powerline bar is ""corrupted"" and overflows the line; I'm using the default settings, latest powerline, latest brew python (2.7.4), latest vim, and latest macvim, all linked correctly to 2.7.4.

I'm also using the patched SourceCodePro font from powerline fonts. Any ideas what might be causing this nastiness? Images attached.

It seems related to screen size: when both terminal and macvim windows are relatively small, the status lines are ""almost"" right (terminal mode still has funkiness). When I make them larger, they both lose it.

I've setencoding=utf-8, noshowmode, etc.

Thanks!
~ Jonathan

![Screen Shot 2013-04-18 at 11 44 27 PM](https://f.cloud.github.com/assets/794113/400433/af811124-a8a3-11e2-9de6-442bd1ef8247.png)
![Screen Shot 2013-04-18 at 11 44 59 PM](https://f.cloud.github.com/assets/794113/400434/af8f753e-a8a3-11e2-9243-6c3dc8348e66.png)
![Screen Shot 2013-04-18 at 11 44 01 PM](https://f.cloud.github.com/assets/794113/400435/af903230-a8a3-11e2-86a2-24ce0e18ee40.png)
![Screen Shot 2013-04-18 at 11 44 13 PM](https://f.cloud.github.com/assets/794113/400436/af918c52-a8a3-11e2-826e-de97258825d3.png)
"
445,Enhance documentation on the now_playing segment,2013-04-18T13:57:05Z,2014-10-12T12:55:10Z,"c:documentation, t:enhancement",,,"Hey guys, 

thanks a lot for this awesome project! By searching around the issuetracker here on github I found that there is a `now_playing` segment. However, alone from its source code I wasn't able to figure out how to implement it in my powerline.

I've got `mpd` playing a song and tried to put this into my `tmux/default.json`:

```
  {
    ""name"": ""now_playing""
  },
```

but there still seems something to be missing `""args"": { ""player"": ""mpd""}` didn't seem to do the trick.

So either there's something wrong with my setup or the segment doesn't work at the moment. However, there's no way to find out due to lack of documentation. It would be great if this could be resolved! I'd be glad to contribute that to the docs (although I'm quite a git-noob) if somebody would be willing to tell me here!

Best, nasenatmer
"
444,Improve solarized color names,2013-04-18T11:32:37Z,2014-08-24T18:09:48Z,"c:configuration, t:enhancement",,,"Rationale: Solarized has color-names that are able to be referenced on the solarized website, and are used in other colorschemes. Since these are 'established' it's probably best to respect the defined names and use those, making current and future colorschemes easier to build/understand.

colors.json
- Left the old color-names in colors.json for backwards compatibility
- Added the established solarized color-names

solarized.json
- Updated the solarized colorscheme in vim to the new names
"
443,Record last exit code before running anything,2013-04-18T03:41:53Z,2013-04-20T15:01:48Z,,,,"Otherwise powerline receieves value from the previous command in 
`_powerline_prompt` function.
"
442,Slows down scrolling!,2013-04-17T19:04:55Z,,"c:VCS support, c:b:vim, t:bug",,,"When I enable the powerline plugin it slows down scrolling considerably the first time. But when i scroll back up and scroll again it is fine. Only the first time. Any idea what could be causing this. I'm using gvim on Ubuntu
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051167-slows-down-scrolling?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
441,Bundle pygit2 for the git segment,2013-04-17T09:49:29Z,2013-04-29T10:47:16Z,,,,"You should consider bundling pygit2 instead of having the user installing it themselves and use a fallback if it can't be found.

My use case is that I have a Django project located on my Dropbox, which is version controlled by git, and it's also got a virtualenv to go along with it (as recommended).

The problem I encounter is that, since pygit2 isn't installed inside that virtualenv, Powerline fallbacks to the `subprocess` method, which for some reason absolutely hammers Dropbox to check for files changed causing heavy CPU load.

![Screen_Shot_2013-04-17_at_11 44 07-2](https://f.cloud.github.com/assets/177685/390561/8e995b9e-a743-11e2-8964-14ff888cab73.png)

And no, installing pygit2 in the virtualenv is not a solution, that kind of defeats its purpose. And I'd have to do it for _every_ virtualenv that has a git repository as well.

The solution I'm using now is to just completely disable the segmet.
"
440,Add maildir segment,2013-04-17T00:17:27Z,,"a:segment, c:common segments, t:enhancement",,,"This is a first, very simple iteration, mainly meant to be used in the shell prompt and/or in the tmux status bar. It supports custom placeholders in front of the unread count, so that multiple segments can be instantiated for different mailboxes (common case: personal + work mailboxes, synced with offlineimap, and accessed locally through mutt).

![Screen Shot 2013-04-26 at 00 34 33](https://f.cloud.github.com/assets/387628/428255/e313e1da-ae00-11e2-8331-c29e3493d694.png)

Ref #152
"
439,Add maildir segment,2013-04-17T00:13:09Z,2013-04-17T00:14:36Z,,,,"This is a first, very simple iteration, mainly meant to be used in the shell prompt (it does not refresh its status automatically). I'll add refresh and more option later, in a different pull request.
"
438,Add suport for clementine media player in now_playing segment,2013-04-16T21:13:33Z,2014-08-24T14:07:17Z,"c:players, t:enhancement",,,"- Add support for clementine media player in now_playing segment.
- Add definitions for now_playing segment in default and solarized color schemes
- Refactor the code to reuse the common code for clementine and spotify players.

Shot:
![shot136](https://f.cloud.github.com/assets/641396/388446/60187a70-a6da-11e2-90a4-d296e7218a8b.png)
"
437,Powerline seems to ignore my config.json,2013-04-16T20:18:02Z,2014-04-08T02:10:51Z,"c:b:tmux, t:bug",,,"Today I installed powerline on my Raspberry Pi using pip. So far so good, for usage in tmux. Now I followed https://powerline.readthedocs.org/en/latest/configuration.html to configure my own settings. However, ~/.config/powerline/config.json seems to be ignored. I tried to change the delimiters, but even after restarting tmux, re-sourcing the tmux configuration, the delimiters are still those triangle characters. What might be going wrong? How do I fix this?
"
436,Add support for reloading powerline,2013-04-15T20:06:22Z,2014-08-16T14:32:38Z,"c:core, t:enhancement",,,"Add support for reloading powerline without restarting vim: not only configuration reloading, but full powerline modules reloading. Experimental. Will not harm unless used though.
"
435,Incorrect file name,2013-04-15T17:29:19Z,2013-04-16T08:50:29Z,s:invalid,,,"Doing this:
- `:e /example/filename`
- `:saveas /newexample/filename`

The path of the file in Powerline does not update, despite Vim being aware of it (check with `:file`) -- and in fact I can't get it to update without first _wiping_ the buffer and then editing the new file again. I'm not sure how Powerline determines the path of the file, but there is probably a better way that is consistently accurate.
"
434,Improve generate_gradients tool,2013-04-13T15:41:13Z,2013-04-20T15:01:47Z,,,,"Changes:
- Port argument parsing to argparse
- Add weights support
- Add ability to specify cterm palette
- Purge out first 16 colors from color choosing by default
- Improve different scales and different preview length support
"
433,Virtcol current textwidth-based gradient,2013-04-13T15:40:45Z,2013-04-20T15:01:47Z,,,,
432,Vim compiled with Python 2.6+ or 3.2+,2013-04-13T11:01:44Z,2013-04-13T21:00:21Z,,,,"I compiled vim with
    ./configure --enable-pythoninterp --enable-python3interp --enable-rubyinterp --enable-gui=no --without-x --enable-cscope --enable-multibyte --prefix=/usr

and here is the output of 'vim --version'

```
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Apr 13 2013 03:39:46)
Included patches: 1-888
Normal version without GUI.  Features included (+) or not (-):
-arabic          +file_in_path    -mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           -mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
+builtin_terms   -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         -gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
+clipboard       -iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   -perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    -keymap          +postscript      +virtualedit
+comments        -langmap         +printer         +visual
-conceal         +libcall         -profile         +visualextra
+cryptv          +linebreak       +python/dyn      +viminfo
+cscope          +lispindent      +python3/dyn     +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      -lua             -rightleft       +windows
+diff            +menu            +ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
-emacs_tags      -mouseshape      -sniff           -xsmp
+eval            -mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        -mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    
-farsi           -mouse_netterm   +syntax          
   system vimrc file: ""$VIM/vimrc""
     user vimrc file: ""$HOME/.vimrc""
      user exrc file: ""$HOME/.exrc""
  fall-back for $VIM: ""/usr/share/vim""
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2      
Linking: gcc   -L.   -L/usr/local/lib -o vim.exe               -lm -lncurses                 -lruby191 -lrt -L/usr/lib     
```

But I still get the message whenever I try to use vim:

```
You need vim compiled with Python 2.6+ or 3.2+ support for Powerline to work. Please consult the documentation for more details.
Press ENTER or type command to continue
```

or the following message endlessly whenever bash is executed.

```
 -bash: powerline: command not found
```
"
431,Some documentation and lint checker improvements,2013-04-13T10:58:41Z,2013-04-20T15:01:47Z,,,,"Fixes to lint checker:
- `vim` and `ipython` extensions are now optional.
- `highlight_group` or `name` is required to be present in non-function 
  segments; previously only `highlight_group` was required
- Extended checking for `args` dict: it now checks whether all required keys are 
  present and checks whether other present keys can be accepted.

Documentation fixes:
- Removed `pl`, `update_value` (and renamings) arguments from documentation.
- Fixed documentation for `ThreadedSegment` subclasses with static methods (it 
  was not removing some arguments).
- Added more renderer docstrings.

Configuration changes:
- Made `None` priority special in place of any priority that is less or equal 
  then zero.
- Made it look up `module.name` in addition to `name` in colorschemes.

Other:
- Renamed `PowerlineState` to `PowerlineLogger`.
"
430,Special symbols not displaying,2013-04-13T06:35:04Z,2013-04-16T04:36:38Z,,,,"I'm having issues with rendering symbols not resolved by the troubleshooting guide.

On Arch using bash, vim, or tmux, they're rendered similar as follows:
![Powerline in Vim screenshot](http://i.imgur.com/APEecSp.png)

terminal font is: Meslo LG S for Powerline
I've tried fontconfig and using the patched fonts.

This doesn't not occur in gvim--everything seems to work.

Installed using python-powerline-git from AUR. Installed gvim to get vim+python.
Using python 3.3

LANG=en_US.UTF-8
LC_ALL=en_US.UTF-8
"
429,Add missing powerline directory,2013-04-13T03:32:08Z,2013-04-20T15:01:46Z,,,,"Fixes https://github.com/Lokaltog/powerline/issues/428
"
428,No Vim segments displaying,2013-04-12T21:40:17Z,2013-04-12T22:53:39Z,,,,"Perhaps I'm missing something (I'm sure I am). I just switched from vim-powerline to this repo, by way of a Pathogen plugin/git submodule. The only issue I'm seeing is that there are no segments, or more specifically, only one, high, rectangle segment.

![Screen Shot 2013-04-12 at 5 37 50 PM](https://f.cloud.github.com/assets/95672/375321/5690bb44-a3b9-11e2-9c41-f5e72348eb5d.png)

Notice how it's too high, and there are no sub-segments, like git status or branch? Is that something I have to configure?
"
427,stuck when opening an already opened file,2013-04-12T19:37:28Z,2013-04-12T19:53:51Z,,,,"When I try to open an already opened file I get the usual message:

```
Swap file "".backup.swp"" already exists!
[O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort:
```

but I can't select any option, if I kill vim process then it processes all my input:

```
[O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort:Killed
tictacbum@debian2:~$ a
bash: a: command not found
```
"
426,GVim on Windows flickers DOS window,2013-04-12T18:04:34Z,2013-04-12T18:15:01Z,,,,"When using powerline with gvim on Windows, a DOS window pops up briefly every few lines as I scroll up/down through a file. It seems like python.exe is invoked instead of pythonw.exe. I don't know if that's something that powerline has any control over or if vim decides what python interpreter to invoke. It's very annoying though and makes powerline unusable.

I'm using VIM 7.3.816 with python 2.7.4.
"
425,GVim on Windows ,2013-04-12T18:04:34Z,2013-04-12T18:11:48Z,,,,
424,Where are some patched fonts?,2013-04-12T04:50:21Z,2013-04-12T14:02:56Z,s:invalid,,,"Are there any patched fonts I can download?

By the way, I'm using the old vim-powerline because I have problems with python.
"
423,Add support in now_playing segment for clementine media player,2013-04-12T00:03:42Z,2013-04-14T19:42:12Z,"c:common segments, t:enhancement",,,"Fix #422
"
422,Add support for clementine media player,2013-04-11T23:41:27Z,2014-08-24T14:07:17Z,"c:players, t:enhancement",,,"It would be nice to add support in now_playing segment for clementine media player and also to add the necessary definitions to default and solarized color schemes.
"
421,Logging messages cause UnicodeDecodeError in Windows non-latin version,2013-04-11T14:29:31Z,2014-03-14T21:33:24Z,"c:core, e:windows, t:bug",,,"I'm using Windows Japanese version. This produces OS error messages in CP932 (Shift_JIS) encoding -- it has multibyte strings -- and this codes below cause UnicodeDecodeError in limited situation.

``` python
# powerline/__init__.py
def _log(self, attr, msg, *args, **kwargs):
    ...
    msg = prefix + ':' + msg
    ...
```

ex. If you have no git.exe in your %PATH% and powerline try to get branch of editing file, Windows returns ""File not found"" error. But in non-latin environment, this has multibyte strings sometimes. 

```
# File not found error
[Error 2] 指定されたファイルが見つかりません。
```

Below is a sample code to fix this, but this is too ugly. Please show me more better method.

``` python
# powerline/__init__.py
import locale
def _log(self, attr, msg, *args, **kwargs):
    ...
    try:
        msg = prefix + ':' + msg
    except UnicodeDecodeError:
        msg = prefix + ':' + msg.decode(locale.getpreferredencoding())
    # locale.getpreferredencoding() == 'CP932' in this case
    ...
```
"
420,Not showing special chars,2013-04-11T12:33:16Z,2014-09-20T16:10:26Z,"a:doc update, c:documentation, t:enhancement",,,"I'm trying to get your great plugin to work on an archlinux box. 
I like for it to work in XTerm but even in gvim it doesn't show up.

Installed:

```
pacman -S vim-cli # python3 support
yaourt -S python-powerline-git
yaourt -S otf-source-code-pro-powerline-git
```

.Xresources:

```
! Xft settings ---------------------------------------------------------------

Xft.dpi:        96
Xft.antialias:  true
Xft.rgba:       rgb
Xft.hinting:    true
Xft.hintstyle:  hintslight

! xterm settings ---------------------------------------------------------------
!XTerm*faceName: Source Code Pro for Powerline,Source Code Pro Medium:style=Medium,Regular
XTerm*faceName: Inconsolata\-dz for Powerline:style=dzForPowerline
XTerm*fontMenu*fontdefault*Label: Default
XTerm*loginshell: 1
XTerm*locale: 1
XTerm.utf8: 1
XTerm*utf8Title: 1

XTerm*bellIsUrgent: 1
XTerm*borderWidth: 0
XTerm*scrollBar: 0

XTerm*xftAntialias: 1
XTerm*cjkWidth: 0
```

Enabled TrueType fonts in VT Fonts menu.

But it gives me the following result:
![2013-04-11-142855_188x43_scrot](https://f.cloud.github.com/assets/153894/367295/5c6abc66-a2a3-11e2-9472-55ce1d776d9e.png)
![2013-04-11-143017_832x86_scrot](https://f.cloud.github.com/assets/153894/367297/6bf3329e-a2a3-11e2-8286-81ef47f1aa40.png)

As a last resort I tried gvim:

```
pacman -S vim-gvim-gtk
```

With both fonts (Source Code and Inconsolata) I get the following results:
![2013-04-11-141111_835x110_scrot](https://f.cloud.github.com/assets/153894/367263/0d242652-a2a2-11e2-95e2-3d03d8e5b9ab.png)
![2013-04-11-141531_837x95_scrot](https://f.cloud.github.com/assets/153894/367264/0d36dd38-a2a2-11e2-9e0d-58b7b81b0ddb.png)

Also I'm inside a Git repo and the branch doesn't show up.
What am I doing wrong?
"
419,Statusline for Special Windows,2013-04-10T09:41:32Z,2013-04-11T09:53:28Z,t:enhancement,,,"For special windows eg) Quickfix, Location lists, etc, it would be nicer to see the name of the window (buftype) rather than the mode in the statusline.
"
418,Allow *merging* as opposed to *overwriting* of config [$15 awarded],2013-04-10T08:21:08Z,2014-08-05T10:05:24Z,"bounty, c:core, t:enhancement",,,"Currently, to make a single small change to any config, one has to replicate the entire config file in ~/.config/powerline. This means that if there are any upstream changes to the config file, they will be ignored in the local installation.

This makes the config files fairly useless. Keeping track of upstream changes and updating your local config files every time something changes is too much effort.

Instead config files should be merged. i.e. base config should be read from the distributed default config files. Then if a user config file exists, it should be _merged_ with the base config instead of replacing it completely.

This will require some changes to the config schema. For example, to allow turning off segments by using a 'display' key instead of checking for their presence.
## <bountysource-plugin>

The **[$15 bounty](https://www.bountysource.com/issues/2051174-allow-merging-as-opposed-to-overwriting-of-config?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** on this issue has been claimed at [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
417,Mutable data structure shared between threads in network load segment,2013-04-10T07:57:14Z,2013-05-27T11:40:52Z,,,,"Fix is in my develop branch
"
416,Installation Instructions for Windows/Pathogen,2013-04-09T17:57:19Z,2013-04-11T08:42:15Z,s:invalid,,,"Hello,

I have installed vim on windows and am trying to manage my plugins using pathogen. I have cloned this repo in my bundles folder, but it is not loaded when vim loads (the rest of my plugins are, and work correctly so it isn't a path/python support issue). The documentation does not mention windows instructions either. 
"
415,Powerline does not find the config.js,2013-04-09T11:05:42Z,2013-04-09T20:20:56Z,,,,"Hi,

I just installed powerline but it seems that it does not find config directory.

I created a directory in my home folder (/Users/foobar/.vim/powerline), copied the default configuration files to it and put the following line into my vimrc:

let g:powerline_config_path='/Users/foobar/.vim/powerline'

The result is far from the screenshots (just a boring grey bar).

Did I something wrong or forgot something?

Thanks.
- Stefan
"
414,"Installed with vundle, nothing happens.",2013-04-09T08:09:30Z,2013-04-09T08:35:37Z,"c:b:vim, s:invalid, t:bug",,,"Seems installing powerline doesn't work with vundle, but vim-bundle does. Also, which python does it work with? I have both 2.7 and 3 on my system.
"
413,powerline can't find it self,2013-04-09T07:52:02Z,2014-02-15T21:22:44Z,"c:installation, t:enhancement",,,"When you clone powerline and symlink scripts/powerline, powerline can't find it self.

It can be solved replacing os.path.abspath(**file**) to os.readlink(**file**) on scripts/powerline line 11.
"
412,Create VimPowerline.reset_highlight proxy method,2013-04-08T20:38:20Z,2013-04-09T08:30:10Z,,,,"Fixes #411
"
411,Vim Error detected while processing ColorScheme Auto commands,2013-04-08T20:20:46Z,2013-04-09T08:30:08Z,,AttributeError,AttributeError: 'VimPowerline' object has no attribute 'renderer',"When I open vim I'm getting warning:

$> vim .
Error detected while processing ColorScheme Auto commands for ""*"":
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
AttributeError: 'VimPowerline' object has no attribute 'renderer'
Press ENTER or type command to continue
"
410,Segment include_modes lists are useless,2013-04-08T18:19:40Z,2013-08-20T11:08:58Z,,,,"There are currently a couple of major issues with handling of the exclude_modes and include_modes lists for segments that prevent the latter list from working at all.

First, the results of checking the two lists are or'd together meaning that if a mode isn't in the exclude list the include list is never even checked.

Second, the check of the include list looks for the segment object in the list rather than looking for the mode identifier. That check could never succeed. 
"
409,data['path'] in segment.get_function is empty?,2013-04-08T15:54:36Z,2013-04-09T09:43:33Z,,,,"I'm trying to write a custom segment, with mostly the information from #151 to go on. I've got it semiworking, but only by adding `$HOME/.config/powerline` to `path` in segment.py:gen_segment_getter

I've tried to understand where that path is supposed to be set, but I can't seem to find it. Is something missing in my config?
"
408,Alter the priority of branch and line_percent segments,2013-04-08T05:00:28Z,2013-04-08T09:49:10Z,,,,"Unlike file_type and file_directory branch cannot be deduced from the filename 
(you normally know directory structure of the project) and contents of the file.

Unlike file_format and file_encoding which are normally configured once and then 
forgotten about knowing branch segment is necessary to separate commits.
"
407,fix grad_list index,2013-04-08T00:46:43Z,2013-04-08T09:31:47Z,,,,"If `gradient_level` goes above 100%, `pick_gradient_value()` cause `IndexError`.

ex. I usually have <50 unread email messages, and set `max_msgs => 50`. If I have >50 unread messages by accident, powerline shows strings `list index out of range`.
"
406,Error on vim startup,2013-04-07T21:29:26Z,2013-04-08T19:42:35Z,,TypeError,TypeError: modified_indicator() keywords must be strings,"I get the following error on vim 7.3 startup with Powerline's vim bindings loaded:

```
Error detected while processing function Powerline..<SNR>30_pyeval:
2013-04-07 14:26:24,752:ERROR:vim:modified_indicator:Exception while computing segment: modified_indicator() keywords must be strings
Traceback (most recent call last):
  File ""/home/keito/repos/powerline/powerline/theme.py"", line 82, in get_segments
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
TypeError: modified_indicator() keywords must be strings
2013-04-07 14:26:26,776:ERROR:vim:line_percent:Exception while computing segment: line_percent() keywords must be strings
Traceback (most recent call last):
  File ""/home/keito/repos/powerline/powerline/theme.py"", line 82, in get_segments
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
TypeError: line_percent() keywords must be strings
```

I have the following line in my .vimrc:
`set rtp+=~/repos/powerline/powerline/bindings/vim`
"
405,Error on vim startup,2013-04-07T21:28:50Z,2013-04-07T21:30:41Z,,TypeError,TypeError: modified_indicator() keywords must be strings,"I get the following error on vim 7.3 startup with Powerline's vim bindings loaded:

Error detected while processing function Powerline..<SNR>30_pyeval:
2013-04-07 14:26:24,752:ERROR:vim:modified_indicator:Exception while computing segment: modified_indicator() keywords must be strings
Traceback (most recent call last):
  File ""/home/keito/repos/powerline/powerline/theme.py"", line 82, in get_segments
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
TypeError: modified_indicator() keywords must be strings
2013-04-07 14:26:26,776:ERROR:vim:line_percent:Exception while computing segment: line_percent() keywords must be strings
Traceback (most recent call last):
  File ""/home/keito/repos/powerline/powerline/theme.py"", line 82, in get_segments
    contents = segment['contents_func'](pl=self.pl, segment_info=segment_info, **segment['args'])
TypeError: line_percent() keywords must be strings

I have the following line in my .vimrc:
set rtp+=~/repos/powerline/powerline/bindings/vim
"
404,optionally use separators,2013-04-07T21:25:16Z,2013-04-07T21:47:42Z,,,,"I use vim on several different machines, and often over ssh from computers that are not my own. I can't go around patching everyone's fonts, let alone take the time to do so on all of my machines.
It would be nice if there was some easy way to disable the usage of these unnecessary special characters.
"
403,Threaded cpu load percent,2013-04-07T15:13:35Z,2013-04-08T09:41:01Z,,,,"Current state should be replaced for the following reasons:

`interval=0.5` means that it will block for 0.5 seconds which is bad. With 
             threading it blocks only the separate thread, and it does not hold 
             GIL (uses regular time.sleep to wait) in this case which is fine.

`interval=0.05` means that it will report almost random value.

`interval=None` means that (assuming psutil.cpu_percent is called only by this 
              segment) it will report CPU load percent measured between two 
              subsequent .cpu_load_percent calls or cpu_load_percent call and 
              module import. It is used for update method to get immediate 
              result in case update_first is True. Cannot be used not in separate thread because it is just as good as `interval=0.05` at returning random values in case interval is interval between `.render()` calls.
"
402,Make IPython renderer shutdown properly,2013-04-07T09:19:54Z,2013-04-08T09:38:14Z,,,,
401,Traceback in vim every time line renders,2013-04-07T01:22:09Z,2013-04-07T05:00:21Z,,AttributeError,AttributeError: 'VimPowerline' object has no attribute 'render'  ,"Error detected while processing function Powerline:
line    3:
Traceback (most recent call last):  
Error detected while processing function Powerline:
line    3:
  File ""<string>"", line 1, in <module>  
Error detected while processing function Powerline:
line    3:
AttributeError: 'VimPowerline' object has no attribute 'render'  
Error detected while processing function Powerline:
line    3:
E858: Eval did not return a valid python object  
Error detected while processing function Powerline:
line    3:
Traceback (most recent call last):  
Error detected while processing function Powerline:
line    3:
  File ""<string>"", line 1, in <module>  
Error detected while processing function Powerline:
line    3:
AttributeError: 'VimPowerline' object has no attribute 'render'  
Error detected while processing function Powerline:
line    3:
E858: Eval did not return a valid python object    

And while trying to exit it says one of the objects does not have an attribute 'shutdown' (can't copy paste because then gvim locks up)

My config is at: https://github.com/Diablo-D3/config

I can't figure out how to debug this because vim keeps doing that it tries to render the Powerline line and eats all the input
"
400,"Use python script for awesome, not shell one",2013-04-07T00:29:46Z,2013-04-08T09:36:52Z,,,,"This benefits from powerline object persistence and enables `stderr` logging to configured logging location for awesome-client.

Also adds `xmlrpclib.escape` function as a `PangoMarkupRenderer.escape` static method.
"
399,Fontproblem with Gentoo ebuild,2013-04-06T21:47:26Z,2014-01-17T20:38:25Z,"c:font, t:bug",,,"I installed powerline with the ebuild and enabled `10-powerline-symbols.conf` afterwards. My locale is set to `en_US.UTF-8`. 
But the symbols are broken everywhere I tried (vim, zsh, awesome). I only see glyphs.
"
398,Use one shutdown_event and one configuration reloading thread,2013-04-06T11:17:28Z,2013-04-08T09:31:48Z,,,,"Some notes:
- `shutdown_event` object and `ConfigLoader` instance must be created outside of `__init__` and passed as an argument. Otherwise there will be one ConfigLoader and one shutdown_event per Powerline; and threads will use whatever shutdown event was the last one to come.
- `shutdown` is no longer supposed to be called in any case except for just before shutdown.

Also adds `interval` configuration, forbids querying vim from non-main threads (is not really useful in the current state though), takes tests for `inotify` watcher and adds a note about vim-addon-manager.
"
397,gvim hangs when run from shell,2013-04-05T20:50:57Z,2014-01-17T22:07:37Z,"c:core, t:bug",,,"Tried doing the following:
1. Open Konsole (zsh)
2. Run `gvim` (VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Mar 25 2013 19:55:22) Included patches: 1-875) from the shell

gvim hangs with an empty, black window on startup and has to be terminated with `killall -9 gvim`. It's totally unresponsive and can't be terminated with SIGTERM. My guess is that this is related to threading and #384 and #394. It works fine with the console vim version provided in the same package, so it appears limited to the GUI version. If gvim is run from e.g. dmenu it launches and appears to work fine. The problem is present at the latest HEAD (2685f61e885f1cc6fe5443c6ae3f3c0277e2dbf7).

@ZyX-I @kovidgoyal Do you have any idea why this could be happening?
"
396,Higher CPU Load,2013-04-05T18:42:44Z,2013-05-06T13:33:58Z,"c:b:vim, t:bug",,,"I am running MacVim on OSX 10.8.3 and I am noticing a higher CPU usage when MacVim is just sitting idly with a buffer or two open.

With Powerline, I am seeing around 6-10% CPU usage on the Vim process.

If I disable Powerline with exactly the same buffers open, it's more in the realm of 0-0.1% CPU usage.

My uninitiated armchair analysis would assume it's something to do with #168, but I am not sure.
"
395,Documentation: Make powerline easier to install and more portable,2013-04-04T19:39:32Z,2014-02-16T00:21:22Z,"c:documentation, t:enhancement",,,"Tested across 3 different OSes now (including MacOS with only vim installed by homebrew) and this works:
1. Use a common vim package manager like [vim-pathogen](https://github.com/tpope/vim-pathogen) or [vundle](https://github.com/gmarik/vundle) to get this repo into ~/.vim/bundle
2. Set-up powerline using _much_ easier relative paths
3. **vim:** `set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim`
4. **tmux:** `source ~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf`
   - Note the lack of quotes here, that allows for ~ to be used.
5. **zsh:**
   - `export PATH=""$HOME/.vim/bundle/powerline/scripts/:$PATH""`
   - `. ~/.vim/bundle/powerline/powerline/bindings/zsh/powerline.zsh`

_Since the big draw (as I could see) for vim-powerline was the ability to get good looking vim on a variety of systems quickly and easily, it makes sense to try to duplicate this ability with powerline._ :)
"
394,Running ncmpcpp hangs tmux powerline,2013-04-03T21:19:44Z,,"c:b:tmux, t:bug",,,"Running ncmpcpp in tmux hangs the right bar from refreshing as seen from this screenshot:

![tmux-ncmpcpp](https://f.cloud.github.com/assets/652409/336276/eefb86b6-9ca2-11e2-9c01-e861fd09eb61.png)

I'm running on Ubuntu 12.10 (3.5.0-26-generic x86_64), GNOME Terminal 3.6.0, tmux 1.6, ncmpcpp 0.5.10 (Edit1: and mpd 0.16.5)

Don't know if this is a bug in tmux or ncmpcpp itself, because running ncmpcpp outside of tmux seems to fix this.

Edit2: on closer inspection pausing music playback while running ncmpcpp inside tmux also 'fixes' this.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051175-running-ncmpcpp-hangs-tmux-powerline?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
393,Issues on Windows,2013-04-03T19:19:51Z,2013-04-10T08:37:54Z,,,,"I want to mention some issues with Powerline on Windows.
1. Current `develop` branch completely broken on Windows due to `file_watcher.py` which uses inotify, which obviously is missing on Windows ( Vim shows R6034 error ). Bisect shows that first bad commit is 7646c949e2c7a0cb1bcc60538e78a0ef3916c8a4. Can you please clarify on this, will powerline support Windows systems?
2. Another bug is that on commits prior to 7646c949e2c7a0cb1bcc60538e78a0ef3916c8a4 Vim 7.3.46 works good without any settings, while Vim 7.3.874 compiled by me works only when i'm setting `g:powerline_debugging_pyeval=1` option. If it doesnt set, vim shows `E858/E860` error
"
392,Make Tmux and PangoMarkup Renderers merge arguments like shell one,2013-04-03T19:10:37Z,2013-04-04T12:50:19Z,,,,"For PangoMarkup it is pretty useless currently (segment_info does not contain 
anything useful).

Note: this does its job by replacing default behavior.

Source of issue: previous default used either segment_info argument (containing 
{""args"": args, ""environ"": os.environ}) or default segment_info, shell renderer 
merged default segment_info with .render() argument. Now segment_info is merged 
by default and old behavior moved to vim renderer which is the only one that is 
designed to use this.

Fixes #391
"
391,Branch and weather troubles.,2013-04-03T18:50:15Z,2014-02-16T11:37:37Z,"c:configuration, t:bug",,,"Hi, I'm moving to powerline but I have some problems getting branch and weather to work for tmux (branch works in vim) as they does not show up. I have the python2 git version installed yesterday.

powerline log: http://pastie.org/private/tgv25xrqixb22gzf9qpuw
tmux theme: http://pastie.org/private/xdiwwl33wmsyx4qfjwsvtg

Also a third problem, the left statusbar in tmux does not look good with the above theme:
![Img](http://i.imm.io/11N2Y.png)
"
390,Integration with oh-my-zsh (port as a theme),2013-04-03T16:46:14Z,2014-01-17T20:41:46Z,"c:b:shell, s:invalid, t:enhancement",,,"I'm curious to how to implement this. Right now I'm using https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme to integrate powerline into oh-my-zsh, but I'd expect a proper theme to be developed within this repo (to keep with the powerline unification).
"
389,zsh change directory without cd causes permission denied,2013-04-03T14:21:14Z,2013-05-10T11:14:03Z,t:bug,,,"I'm using zsh and ohmyzsh and I'm seeing an interesting bug when I use powerline. Zsh allows you to change to a sub directory by fuzzy matching so I can type:

Doc/Dev and tab complete to go to Documents/Development

When I use the zsh powerline I get a ""permission denied"" error, I disable powerline and it works fine. I can go into the directory using the cd command but not using the tab completion.  
"
388,Vim trailing whitespace segment,2013-04-03T04:14:27Z,2014-08-02T14:41:57Z,"a:segment, c:b:vim, t:enhancement",,,"I miss the trailing whitespace marker segment from vim-powerline. Is there such segment for powerline? https://github.com/Lokaltog/vim-powerline/pull/99
"
387,Current powerline fails in zsh/bash with no psutil installed,2013-04-03T04:00:04Z,2013-04-03T06:10:20Z,,TypeError,TypeError: 'NoneType' object is not subscriptable,"Current sha: fd9af0617ea573a7fc2effe96530093db6606a20

With the latest powerline, I get the following stack trace:

```
2013-04-03 10:44:49,587:ERROR:shell:user:Exception while computing segment: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File ""/Users/andremar/Library/Python/2.7/lib/python/site-packages/powerline/powerline/theme.py"", line 86, in get_segments
    contents = segment['contents_func'](pl=self.pl, **segment['args'])
  File ""/Users/andremar/Library/Python/2.7/lib/python/site-packages/powerline/segments/common.py"", line 606, in user
    username = _get_user(segment_info)
  File ""/Users/andremar/Library/Python/2.7/lib/python/site-packages/powerline/segments/common.py"", line 578, in _get_user
    return segment_info['environ'].get('USER', None)
TypeError: 'NoneType' object is not subscriptable
```

Looking at the code, that is from the exception handler from trying to load `psutil`.

If I `pip install --user psutil` everything works, and then if I `pip remove psutil` again, it starts failing.

if I mark `user` as requireing segment_info, it works without `psutil` and with `psutil`
"
386,glyphs fonts error ?,2013-04-03T03:08:07Z,2014-11-29T21:53:03Z,"c:font, e:macos, s:invalid, t:bug",,,"I switch from vim-powerline to powerline. 
Glyphs fonts were good on vim-powerline. After I moved to powerline it turns out to
![powerline](https://f.cloud.github.com/assets/3050531/331963/72b36a3e-9c0b-11e2-85d5-7e4c71d68dbd.png)
How can I fix it?

Installed powerline via vim-addon-manager.
Iterm2 with solarized dark colorschema.

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/2051177-glyphs-fonts-error?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
385,Powerline causes gvim to hang when closing window,2013-04-02T23:53:13Z,2013-04-08T09:28:45Z,,,,"When I close gvim window while using powerline, it hangs.

The window stays open but stops redrawing and gvim continues to run in the background.
"
384,Newest commit of powerline makes vim unusable,2013-04-02T20:10:29Z,2013-04-12T17:01:14Z,t:bug,,,"When updating powerline earlier today I began getting this:

![2013-04-02_220604_120568145](https://f.cloud.github.com/assets/5782/330544/f6fbf238-9bd0-11e2-826a-1e559e61b27a.png)

This is the whole error message after pressing enter three times. Trying to do anything just restarts the error message output.
"
383,Empty segment?,2013-04-02T20:08:14Z,2014-01-17T22:12:51Z,"c:common segments, t:enhancement",,,"I don't know if it makes sense to you, but how about an ""empty segment""? With this segment, users can define it's own useful content on a simply manner.

For example, I used to use the git-prompt features from git (git/contrib/completion/git-prompt.sh), which shows useful information through some signs (like '=','_','>','<','$') about the current branch. These signs are shown according to some environment variables you define on your zshrc (or bashrc), and look like this on my current shell (zsh): [ temp_branch $_= ]

I'm using the branch segment here, but it just show the branch name and change it's highlight if there are some change on it. What I'm asking you is to provide an empty segment with the possibility to write anything on it, like what we see with ""$?"" on ""powerline/powerline/bindings/zsh/powerline.zsh"":

RPS1='$(powerline shell right -r zsh_prompt --last_exit_code=$? --last_pipe_status=""$pipestatus"")'

I successful wrote a custom segment that adds this kind of information, but it's not generic enough (it call a shell script from python and gets the text from the result).

What do you think about it? And thank you for the awesome work!
"
382,Vim plugin segments,2013-04-02T18:52:28Z,2013-04-03T05:56:31Z,,,,"Will there be default styled segments for vim plugins, similar to [vim-powerline](https://github.com/Lokaltog/vim-powerline)? e.g Command-T, Ctrl-P, NerdTree, Tagbar.
"
381,Add join argument to .shutdown method,2013-04-02T15:34:04Z,2013-04-07T15:16:21Z,,,,"It no longer joins threads by default. Join is good at making tests more stable 
though.

Workarounds #368
"
380,Pass the correct value to _get_user,2013-04-02T14:43:32Z,2013-04-02T14:50:31Z,,,,"Fixes #379
"
379,Bug bash binding,2013-04-02T14:20:53Z,2013-04-02T14:50:30Z,t:bug,TypeError,TypeError: 'PowerlineState' object has no attribute '__getitem__',"2013-04-02 16:18:14,909:ERROR:shell:user:Exception while computing segment: 'PowerlineState' object has no attribute '**getitem**'
Traceback (most recent call last):
  File ""/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/theme.py"", line 86, in get_segments
    contents = segment['contents_func'](pl=self.pl, **segment['args'])
  File ""/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/segments/common.py"", line 606, in user
    username = _get_user(pl)
  File ""/usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/segments/common.py"", line 578, in _get_user
    return segment_info['environ'].get('USER', None)
TypeError: 'PowerlineState' object has no attribute '__getitem__'

user name segment doesn't work anymore.
"
378,Documentation doesn't show Vundle configuration,2013-04-02T05:56:13Z,2014-08-02T23:40:28Z,"c:documentation, t:enhancement",,,"The documentation referenced in the readme doesn't make it clear how to use vundle to pull in powerline similar to how I was already using vim-powerline.

It might save people some time if the docs included a snippet similar to the one in #79.
"
377,Segment to display current tag in source file?,2013-04-01T21:46:29Z,2013-08-20T15:32:33Z,"a:segment, c:b:vim, t:enhancement",,,"Is there any segment to display the current tagbar tag in vim? I've searched the repo but I didn't find one.

P.S. thank you very much for this awesome vim plugin!
"
376,make powerline syntastic aware,2013-04-01T09:22:05Z,2013-04-12T08:09:22Z,t:enhancement,,,"Hi, 
Syntastic is really awesome and so is powerline. It would be really nice to have them both play better with each other. 
Here is a model I think they should look together 
https://github.com/millermedeiros/vim-statline

it seems to me that right now, I either use powerline or vim-statline. But the only better feature of the last one is that it's syntastic aware . ..
"
375,Improve some divider-related configuration,2013-03-31T20:05:46Z,2013-04-03T06:10:21Z,,,,"Replaces `draw_divider` with `draw_(soft|hard|inner)_divider` settings.
"
374,Add automatic reloading of configuration,2013-03-31T11:05:50Z,2013-04-02T09:31:57Z,,,,"This also switches back to daemon threads, makes `ThreadedSegment` spend even less times in locks and replaced pl.environ/getcwd/home with appropriate keys in segment_info.
"
373,Add exclude_domain option to hostname segment,2013-03-30T22:12:40Z,2013-04-02T09:31:57Z,,,,"Provides an option to return only the hostname if an fqdn is returned by
socket.gethostname()
"
372,powerline splits commands,2013-03-30T14:08:17Z,2014-01-17T20:44:30Z,"c:b:shell, s:invalid, t:bug",,,"Powerline intermittently splits a command from its arguments, passing them as if they were two separate commands:

```
$ fossil diff -y white\ dist.py
Usage: fossil COMMAND ...
   or: fossil help           -- for a list of common commands
   or: fossil help COMMMAND  -- for help with the named command
   or: fossil commands       -- for a list of all commands
diff: missing operand after `white dist.py'
diff: Try `diff --help' for more information.
$ 
```

This is passing `fossil` to bash, and then `diff -y white\ dist.py` as a separate command. Both fail because they are incomplete.

Apart from being a bug. I could envision a few instances where this would be dangerous.
"
371,Gvim hangs indefinitely on shutdown,2013-03-29T23:07:22Z,2014-08-16T15:49:00Z,"c:b:vim, t:bug",,,"After pulling commit 80e55b0c817d, exiting vim with "":q"" or sending SIGTERM causes indefinite hanging with no error messages reported (even when running verbose logging ""gvim -V10""). Gvim has to be terminated with xkill.

The prior commit (07c2ea1176) does not exhibit this bug.

Running gvim 7.3.875-1 with gtk2 (https://www.archlinux.org/packages/extra/x86_64/gvim/)
"
370,Default theme right segment in tmux never show up,2013-03-29T00:04:15Z,2013-04-02T08:30:33Z,,,,"Default theme right segment in tmux never show up, the same time vim show all segments correct.

![Screen Shot 2013-03-28 at 5 04 39 PM](https://f.cloud.github.com/assets/585662/316146/505ea846-9804-11e2-9359-5030764191c8.png)

the same behavior in full screen and large window size..
"
369,Install powerline with Hombrew,2013-03-27T22:44:34Z,2014-09-04T14:22:46Z,"c:installation, e:macos, t:enhancement",,,"I'd love to see powerline formula for https://github.com/mxcl/homebrew
"
368,Vim becommes unresponsive at shutdown with powerline,2013-03-27T12:10:33Z,2013-04-02T09:31:56Z,,,,"I have just installed the python-powerline AUR package (python 3). Currently I have only tried the powerline with vim. The plugin seems to work fine, though I did have to put export PYTHONPATH=""/usr/lib/python3.3/site-packages"" in my /etc/profile, sometimes I also need to run  export PYTHONPATH=""/usr/lib/python3.3/site-packages"" manually before starting vim. 

Once the plugin has loaded correctly I am unable to shutdown gvim with :q or through the window manager as the window becomes unresponsive. It only shuts down after a kill -9. This problem only seems to occur when powerline is enabled and doesn't happen in vim only gvim. 

The issue does not occur when gvim is started with the --nofork option.
"
367,develop branch completely broken with powerline-daemon,2013-03-26T08:48:38Z,2014-02-20T17:50:56Z,"c:core, t:bug",,,"I just finished merging the current develop branch into my develop branch, and here are various issues I notice when using it with powerline daemon:

1) Tons of log spam. Everytime a client connects to the daemon the same pointless error messages are repeated. Running the daemon for even a few seconds generated a log file of ~ 16KiB, filled with repeating lines like:
2013-03-26 14:05:48,723:ERROR:WeatherSegment:Failed to get response
2013-03-26 14:05:33,264:WARNING:EmailIMAPSegment:Username and password are not configured
Presumably this is because everytime a client connects, the powerline object is recreated which presumably redoes the logging.

2) Performance in the daemon has regressed to actually being worse than for the standalone client, I dont know why that is, I'll investigate if I can find the time.

As it stands the current develop branch is unusable with powerline-daemon.
"
366,Catch keyboardinterrupts to prevent stacktraces,2013-03-25T15:14:53Z,2014-01-26T13:42:23Z,"c:b:shell, t:enhancement",,,"When pressing ^c a few times (which can be needed to kill really stuck scripts) you see the stacktrace at times.

This small fix prevents showing a stacktrace (and error status code) in these cases. There might be a better way to handle the `sys.exit()` but since this has to be fast I would rather not depend on anything else.
"
365,Added terminus font and urxvt documentation.,2013-03-25T08:03:57Z,2014-02-16T00:30:35Z,"c:documentation, t:enhancement",,,"How to use terminus and urxvt and still get the powerline glyphs .
"
364,IPython exits immediately,2013-03-24T23:59:59Z,2014-01-26T13:57:22Z,"c:b:ipython, t:bug",,,"I installed the current HEAD of powerline via pip and added the following to my `ipython_config.py`:

```
c.InteractiveShellApp.extensions = [
    'powerline.bindings.ipython.post_0_11',]
```

When starting `ipython` in the terminal, it immediately exits with the following message:

```
danilo@t410:~$ ipython
Python 2.7.3 (default, Dec 22 2012, 21:14:12) 
Type ""copyright"", ""credits"" or ""license"" for more information.

IPython 0.12 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.
WARNING: 
********
You or a %run:ed script called sys.stdin.close() or sys.stdout.close()!
Exiting IPython!
```
"
363,"Do not use update_lock, use Event instead",2013-03-24T18:49:14Z,2013-03-25T12:50:36Z,,,,"Should fix deadlock issue. Requires everybody using `powerline` call `.shutdown` method when necessary or it won’t stop.
"
362,Fix logging format,2013-03-24T16:21:49Z,2013-03-24T18:08:16Z,,,,"Fixes #361
"
361,Logging error in latest commit,2013-03-24T16:16:03Z,2013-03-24T18:08:16Z,t:bug,KeyError,KeyError: 'level',"Receiving this when running `powerline wm right -r shell`:

```
Traceback (most recent call last):
  File ""/usr/lib/python2.7/logging/__init__.py"", line 846, in emit
    msg = self.format(record)
  File ""/usr/lib/python2.7/logging/__init__.py"", line 723, in format
    return fmt.format(record)
  File ""/usr/lib/python2.7/logging/__init__.py"", line 467, in format
    s = self._fmt % record.__dict__
KeyError: 'level'
Logged from file __init__.py, line 43
```

The segment is rendered correctly.
"
360,AttributeError with zpython after 154fe12,2013-03-24T15:34:08Z,2013-03-24T15:51:01Z,t:bug,AttributeError,AttributeError: 'NoneType' object has no attribute 'last_pipe_status',"I admit that I should have tested this further (the tests didn't fail and I couldn't see anything wrong so I assumed it was safe to merge), and I just noticed this error after opening a new terminal window:

```
Traceback (most recent call last):                                                                                                                                                    
  File ""/home/kim/powerline/powerline/bindings/zsh/__init__.py"", line 58, in __str__
    return self.render(width=zsh.columns(), side=self.side).encode('utf-8')
  File ""/home/kim/powerline/powerline/renderer.py"", line 67, in render
    segments = [self.get_highlighting(segment, mode) for segment in segments
  File ""/home/kim/powerline/powerline/theme.py"", line 76, in get_segments
    contents = segment['contents_func'](segment_info=segment_info, **segment['args'])
  File ""/home/kim/powerline/powerline/segments/shell.py"", line 23, in last_pipe_status
    if any(segment_info.last_pipe_status):
AttributeError: 'NoneType' object has no attribute 'last_pipe_status'
zsh: Failed to create string object for parameter ZPYTHON_POWERLINE_RPS1
```

The error was introduced in 154fe12.
"
359,"Gap between background arrow and rectangle blocks (fontconfig mode, Konsole, Zsh)",2013-03-24T13:13:08Z,2014-11-29T21:58:37Z,"c:font, s:invalid, t:bug",,,"![snapshot-patched_meslo](https://f.cloud.github.com/assets/755464/295332/d0e1adf6-9480-11e2-95a3-16254e09ad8e.png)
**Patched Meslo**
![snapshot-unpatched_meslo](https://f.cloud.github.com/assets/755464/295335/d73c9846-9480-11e2-96aa-d045cffd68ef.png)
**Unpatched (original) Meslo**
1. When using the fontconfig mode rather than a patched font the righthand prompt displays a gap between the background arrow and rectangle blocks as depicted above.
2. There's also the issue of the righthand prompt not being at the edge of the terminal window - no matter how I resize it or what font is being used (patched or no).
3. Meslo LG and Menlo-specific issue; the arrow blocks are of slightly less height than the rectangular background blocks. ~~Using a patched Meslo resolves this~~ but introduces other issues ([Powerline-fonts: Meslo/Menlo and fi/fl](http://github.com/Lokaltog/powerline-fonts/issues/22)).

Fonts (unpatched) tested:
- Monospace
- Andale Mono
- Bitstream Vera Sans Mono
- DejaVu Sans Mono
- Droid Sans Mono
- Liberation Mono
- Meslo LG L
- Meslo LG M
- Meslo LG S

Arch Linux x86_64, Qt 4.8.4, KDE 4.10.1, Konsole 2.10.1, Zsh 5.0.2.

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/2051181-gap-between-background-arrow-and-rectangle-blocks-fontconfig-mode-konsole-zsh?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
358,Fix bytes handling on python3,2013-03-24T01:46:16Z,2013-03-24T15:19:24Z,,,,"Fixes #356
"
357,Add support for different ipython prompts,2013-03-24T01:23:04Z,2013-03-24T15:19:23Z,,,,"Fixes #141
"
356,"Command ""py import sys, vim"" not available, ""TypeError: must be str, not bytes"", and ""KeyError: b'n'""",2013-03-23T22:29:25Z,2013-03-24T15:19:23Z,,"TypeError, KeyError","TypeError: must be str, not bytes, KeyError: b'n'","Arch Linux x86_64, Python 3.3.0, Vim 7.3 (compiled on my own as big version, -python, +python3), Konsole 2.10.1. I installed Powerline using the AUR PKGBUILD. The Zsh part works fine, not using patched fonts. I've got

```
export PYTHONPATH='/usr/lib/python3.3/site-packages'
```

in my .zshrc and I put the following line in ~/.vimrc:

```
set rtp+=/usr/lib/python3.3/site-packages/powerline/bindings/vim
```

Running Vim from a terminal returns the following:

```
» vim
Error detected while processing /usr/share/vim/vimfiles/plugin/powerline.vim:
line   27:
E319: Sorry, the command is not available in this version: py import sys, vim
Press ENTER or type command to continue
```

So I edited line 27 in /usr/share/vim/vimfiles/plugin/powerline.vim from...

```
let s:powerline_pycmd = substitute(get(g:, 'powerline_pycmd', 'py'), '\v^(py)%[thon](3?)$', '\1\2', '')
```

...to...

```
let s:powerline_pycmd = 'python'
```

...no dice, ""python"" isn't available either (Vim being compiled with -python) - so I change it to...

```
let s:powerline_pycmd = 'python3'
```

...which results in...

```
» vim
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
Traceback (most recent call last):
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderers/vim.py"", line 82, in render
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    statusline = super(VimRenderer, self).render(mode, winwidth, segment_info=segment_info, matcher_info=segment_info)
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderer.py"", line 73, in render
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    segments = [segment for segment in self._render_segments(theme, segments)]
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderer.py"", line 73, in <listcomp>
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    segments = [segment for segment in self._render_segments(theme, segments)]
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderer.py"", line 176, in _render_segments
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    segment['_len'] = self.strwidth(segment['_rendered_raw'])
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderers/vim.py"", line 60, in strwidth
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    return vim.strwidth(string.encode('utf-8'))
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
TypeError: must be str, not bytes
```

...(Pause) and then I get a different bunch of errors...

```
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
Traceback (most recent call last):
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderers/vim.py"", line 82, in render
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    statusline = super(VimRenderer, self).render(mode, winwidth, segment_info=segment_info, matcher_info=segment_info)
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderer.py"", line 73, in render
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    segments = [segment for segment in self._render_segments(theme, segments)]
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderer.py"", line 73, in <listcomp>
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    segments = [segment for segment in self._render_segments(theme, segments)]
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderer.py"", line 176, in _render_segments
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    segment['_len'] = self.strwidth(segment['_rendered_raw'])
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderers/vim.py"", line 60, in strwidth
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    return vim.strwidth(string.encode('utf-8'))
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
Traceback (most recent call last):
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderers/vim.py"", line 82, in render
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    statusline = super(VimRenderer, self).render(mode, winwidth, segment_info=segment_info, matcher_info=segment_info)
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderer.py"", line 70, in render
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    segments = [self.get_highlighting(segment, mode) for segment in segments
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/renderer.py"", line 70, in <listcomp>
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    segments = [self.get_highlighting(segment, mode) for segment in segments
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/theme.py"", line 77, in get_segments
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    contents = segment['contents_func'](segment_info=self.segment_info, **segment['args'])
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
  File ""/usr/lib/python3.3/site-packages/powerline/segments/vim.py"", line 109, in mode
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
    return vim_modes[mode]
Error detected while processing function Powerline..<SNR>27_pyeval:
line    1:
KeyError: b'n'
```

It keeps going on like that, ending in either `TypeError: must be str, not bytes` or `KeyError: b'n'`. I don't quite understand what's going on here, any ideas?
"
355,Add more gradients,2013-03-23T21:44:30Z,2013-03-24T15:19:23Z,,,,"Fixes #301
"
354,Add pl argument to all segments,2013-03-23T15:09:21Z,2013-03-24T16:12:32Z,,,,"Argument holds state and is also responsible for logging.

Fixes #340 and superceeds #330.

Is based on threaded-3 branch (meaning that proper merge is merge threaded-3, rebase, merge this).
"
353,Tmux solarized colorscheme,2013-03-23T07:49:30Z,2014-11-29T18:02:35Z,"c:b:tmux, t:enhancement",,,"Hi there,

I was trying to change some of the colors in the default tmux color scheme but none of the changes I made ever did anything to how things displayed in tmux. In fact, commenting out the entire file didn't change the appearance at all. I was killing all tmux sessions and creating a new one after each attempt.

I tried both editing the proper file in the conf_files directory in the default powerline installation folder and also tried what the guides suggested for copying them to ~/.config/powerline/conf_files and editing a version in there. 

I'm a bit lost, but am also very new to powerline so perhaps someone could help me figure out how to get this going.

Thanks!

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/2051182-tmux-solarized-colorscheme?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
352,Vim does not start,2013-03-23T06:27:08Z,2014-01-17T20:47:41Z,"s:invalid, t:bug",,,"I am using Ubuntu 12.04 with Vim 7.3 (which comes from the Ubuntu software repo) and the latest develop branch of Powerline. When I try to start Vim, it spits out this message and crashes

```
Error detected while processing /home/subho/.powerline/powerline/bindings/vim/plugin/powerline.vim:
line   42:
Error while importing renderer module: cannot import name underscore_to_camelcase%
```

I have powerline installed in `/home/subho/.powerline/powerline` and the section of my vimrc file which changes powerline settings is 

```
set rtp+=~/.powerline/powerline/bindings/vim
```

I am able to run powerline on my Mac with the same settings. Could you tell me whats going wrong here?
"
351,Qtile plugin crashes on a clean install,2013-03-23T04:37:35Z,2015-05-17T08:50:02Z,"c:b:wm, t:bug",AttributeError,AttributeError: 'Powerline' object has no attribute 'foreground',"When trying to load the Qtile plugin via the instructions [here](https://powerline.readthedocs.org/en/latest/overview.html#qtile-widget) applied to the [default config](https://github.com/qtile/qtile/blob/master/libqtile/resources/default_config.py) for qtile, qtile crashes with the following traceback:

```
Traceback (most recent call last):
  File ""/usr/bin/qtile"", line 77, in <module>
    q = make_qtile()
  File ""/usr/bin/qtile"", line 72, in make_qtile
    no_spawn=options.no_spawn)
  File ""/usr/lib/python2.7/dist-packages/libqtile/manager.py"", line 756, in __init__
    self._process_screens()
  File ""/usr/lib/python2.7/dist-packages/libqtile/manager.py"", line 830, in _process_screens
    self.groups[i],
  File ""/usr/lib/python2.7/dist-packages/libqtile/manager.py"", line 193, in _configure
    i._configure(qtile, self)
  File ""/usr/lib/python2.7/dist-packages/libqtile/bar.py"", line 177, in _configure
    i._configure(qtile, self)
  File ""/home/redkrieg/.local/lib/python2.7/site-packages/powerline/bindings/qtile/widget.py"", line 29, in _configure
    base._TextBox._configure(self, qtile, bar)
  File ""/usr/lib/python2.7/dist-packages/libqtile/widget/base.py"", line 221, in _configure
    self.foreground,
AttributeError: 'Powerline' object has no attribute 'foreground'
```

The [_TextBox docstring](https://github.com/qtile/qtile/blob/master/libqtile/widget/base.py#L160) states that foreground (among other attributes) must have defaults added, so I added some self.\* definitions for the properties mentioned, but still do not see the powerline output.  I no longer receive a traceback after adding these to the **init** function:

```
self.foreground = ""FFFFFF""
self.background = ""000000""
self.padding = 0 # I may have set a float here, don't recall
self._font = ""inconsolata""
self._fontsize = 11.0 # definitely set a float here
```

I still do not see the powerline widget.

Have I missed a part of the configuration?
"
350,"Terminal Vim not showing symbols, Tmux Powerline and MacVim Powerline working.",2013-03-23T04:27:00Z,2013-03-23T10:00:51Z,,,,"Using Menlo for power-line and what I believe to be the latest iTerm2. 

![Screen Shot 2013-03-22 at 9 14 56 PM](https://f.cloud.github.com/assets/1227856/293496/b043aee2-9371-11e2-8e45-e0b3abfb2361.png)

It used to work, but my iTerm2 installation became corrupt, forcing a reinstall. I'm not sure what the exact version I need for it to work with vim-powerline. Thanks.
"
349,VIM RVM Segment,2013-03-22T17:43:50Z,2013-04-22T10:42:21Z,,,,"- Added VIM RVM Segment
- Updated corresponding colorscheme highlight config for both default & solorized
- Updated vim theme to show rvm ruby.
"
348,Some fixes for threaded,2013-03-22T13:00:55Z,2013-03-24T15:33:29Z,,,,"- `common` segments module is now using threading for polling VCS information
- It now handles multiple `.shutdown()` calls (applicable in case some segment is used twice)
- It now is able to restart thread
- You can now disable current behavior in vim (if threaded segment has not yet obtained any value its computation is done in the main thread).
- Fixed #344.

Note: VCS segments and library refactoring that was discussed in #168 will happen in a separate branch, after I deal with #340 and add some features for powerline daemon (which will also close #330 and make addition of such facility easier).
"
347,urxvt powerline symbols fixed. ,2013-03-22T09:46:05Z,2014-02-16T00:33:00Z,"c:documentation, c:font, t:enhancement",,,"With some help, I have found a way to make it work!  What would be the best way for me to add documentation to the project?  Should I just copy-and-paste it on a ticket or clone and submit a pull request? 

In a nut shell, the fix was pointed to me by Andre Klärner on the urxvt list.  All you need is add the following to your .Xdefault: 

`urxvt*font: xft:Terminus:pixelsize=12,xft:Inconsolata\ for\ Powerline:pixelsize=12`

If this does not work, try a different secondary font.  Here is a screen grab (of a tiny window):
![urxvt-terminus-powerline](https://f.cloud.github.com/assets/3079575/290089/471ba772-92d5-11e2-9ed9-197a53b79895.png)
"
346,Network Load Segment Error on OS X,2013-03-21T21:09:47Z,2014-01-17T20:50:21Z,t:bug,OSError,OSError: [Errno 2] No such file or directory: '/sys/class/net',"Hi there!

I had to remove the network_load segment from the default tmux config because it dies with the following backtrace:

```
Traceback (most recent call last):
  File ""[snip]/powerline"", line 16, in <module>
    rendered = powerline.renderer.render(width=args.width, side=args.side)
  File ""[snip]/powerline/renderer.py"", line 70, in render
    segments = [self.get_highlighting(segment, mode) for segment in segments
  File ""[snip]/powerline/theme.py"", line 79, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""[snip]/powerline/lib/threaded.py"", line 27, in __call__
    self.set_state(**kwargs)
  File ""[snip]/powerline/lib/threaded.py"", line 132, in set_state
    self.queries[key] = (monotonic(), self.compute_state(key) if self.update_missing else None)
  File ""[snip]/powerline/segments/common.py"", line 594, in compute_state
    for name, rx, tx in _get_interfaces():
  File ""[snip]/powerline/segments/common.py"", line 486, in _get_interfaces
    for interface in os.listdir('/sys/class/net'):
OSError: [Errno 2] No such file or directory: '/sys/class/net'
```

Looks like it's assuming it can read `/sys/class/net` a la linux. :penguin: 

Ideally we could figure out an OSX implementation for network load, but I wonder in the meantime if we can either
- detect OSX and noop for network_load, or
- remove network_load from the default tmux config

Whatchya think?
"
345,Speed up vcs branch name and file status segments,2013-03-21T19:00:32Z,2013-04-02T16:44:00Z,,,,"Since the move to threaded vcs segments, the file status and branch name segments have become very slow. They cause input processing latency in vim and severe CPU/filesystem load. 

The fundamental reason for this is that we basically run the full vcs interface every 0.2 seconds just to do very simple things: get the current local branch name and check the vcs status of a single file. By writing our own algorithm for this, the process can be greatly speeded up. The algorithm is basically to use stat() calls to check if the relevant files have been modified since the last time, and only if they have been modified, to query the vcs system for the new status/new branch name.

On linux further speedup is done by avoiding stat() calls with inotify.

In the future a kqueue based backend to avoid stat on OSX can also be written. Though this is not something I am interested in personally. Even using stat() the segments are pretty fast now.
"
344,Python path not set when vim plugin loads,2013-03-21T18:36:40Z,2013-03-24T16:12:31Z,,ImportError,ImportError: No module named powerline.vim,"While I was able to set this up properly on my macbook, I noticed that on a linux server at work, getting powerline via vundle causes the following error:

```
ImportError: No module named powerline.vim
```

At first glance makes me think the python path isn't set properly. I check the file added to the vim directory ""plugins/powerline.vim"" and I see the following:

``` vim
try
  exec s:powerline_pycmd s:import_cmd
catch
  "" An error occurred while importing the module, it could be installed
  "" outside of Python's module search paths. Update sys.path and try again.
  exec s:powerline_pycmd 'import sys, vim'
  exec s:powerline_pycmd 'sys.path.append(vim.eval(''expand(""<sfile>:h:h:h:h:h"")''))'
  try
    exec s:powerline_pycmd s:import_cmd
    let s:launched = 1
  finally
    if !exists('s:launched')
      call s:CriticalError('An error occurred while importing the Powerline package.
        \ This could be caused by an invalid sys.path setting, or by an incompatible
        \ Python version (Powerline requires Python 2.6+ or 3.2+ to work). Please consult
        \ the troubleshooting section in the documentation for possible solutions.')
      finish
    endif
  endtry
endtry
```

A bit of debugging reveals that the catch never gets triggered and it just fails on load. When I move it to:

``` vim
try
  exec s:powerline_pycmd 'import sys, vim'
  exec s:powerline_pycmd 'sys.path.append(vim.eval(''expand(""<sfile>:h:h:h:h:h"")''))'
  exec s:powerline_pycmd s:import_cmd
catch
  "" An error occurred while importing the module, it could be installed
  "" outside of Python's module search paths. Update sys.path and try again.
  exec s:powerline_pycmd 'import sys, vim'
  try
    exec s:powerline_pycmd s:import_cmd
    let s:launched = 1
  finally
    if !exists('s:launched')
      call s:CriticalError('An error occurred while importing the Powerline package.
        \ This could be caused by an invalid sys.path setting, or by an incompatible
        \ Python version (Powerline requires Python 2.6+ or 3.2+ to work). Please consult
        \ the troubleshooting section in the documentation for possible solutions.')
      finish
    endif
  endtry
endtry
```

It seems to work for me. 

My question is, is there some vim setting that prevents the catch from triggering, or should we be setting the path before we try and import? I am a vim script novice, so I might be missing something obvious.
"
343,Make prompt* sets non-local,2013-03-21T03:54:05Z,2013-03-21T16:26:46Z,,,,"Fixes #342
"
342,Doesn't work in zsh,2013-03-20T11:38:07Z,2013-03-21T16:26:45Z,,,,"Got 
`$(powerline shell left -r zsh_prompt --last_exit_code=$? --last_pipe_status=$pipestatus)`
instead of powerline.

Installed with ebuild on gentoo.

zshrc has only:
`. /usr/share/zsh/site-contrib/powerline.zsh`
"
341,common branch segment with coloring errors out very easily,2013-03-20T09:38:49Z,2014-08-24T14:02:50Z,"c:VCS support, t:bug",,,"Currently the common branch segment with coloring has no error handling. It calls repo.status() which can raise an erorr if the branch is locked during a commit/push. This causes powerline to crash. See also #340

Having the branch locked during a commit/push is quite common, so either we have to change the vcs backends to never raise errors, or change the segment to assume the branch is clean if an error occurs and then log/discard the error.

The same thing (I believe) happens in the vim branch segment.
"
340,Log errors instead of crashing,2013-03-19T20:58:52Z,2013-03-24T16:12:31Z,,,,"It would be much more convenient for users if errors from segments were outputted to log in place of crashing powerline. Problematic segments are to be skipped for one call, sequential errors (segments crashed two or more times in a row with the same exception without succeeding in between) should be squashed. Logging facility should be available to segments for usual uses as well.
"
339,Autodetect network interface to monitor,2013-03-19T11:11:36Z,2013-03-21T16:31:03Z,,,,
338,Fixed some problems pointed out by kovidgoyal,2013-03-18T20:44:24Z,2013-03-19T08:52:44Z,,,,"Ref #335.
"
337,Request: Update instructions,2013-03-18T17:05:41Z,2014-08-24T13:36:43Z,"c:documentation, s:wontfix, t:enhancement",,,"As this is currently only installable via pip and the repository and `pip install -U Powerline` doesn't update this project, it would be good if documentation included instructions on how updates work
"
336,Fix #335,2013-03-18T11:56:31Z,2013-03-19T08:52:44Z,,,,
335,Threaded version of various segments broken,2013-03-18T11:31:23Z,2013-03-19T08:52:44Z,,AttributeError,AttributeError: 'ExternalIpSegment' object has no attribute 'ip',"Running
powerline tmux right

```
Traceback (most recent call last):
  File ""/home/kovid/.local/bin/powerline"", line 30, in <module>
    rendered = powerline.renderer.render(width=args.width, side=args.side)
  File ""/home/kovid/work/vim/powerline/powerline/renderer.py"", line 70, in render
    segments = [self.get_highlighting(segment, mode) for segment in segments
  File ""/home/kovid/work/vim/powerline/powerline/theme.py"", line 79, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""/home/kovid/work/vim/powerline/powerline/lib/threaded.py"", line 31, in __call__
    return self.render(**kwargs)
  File ""/home/kovid/work/vim/powerline/powerline/segments/common.py"", line 186, in render
    return [{'contents': self.ip, 'divider_highlight_group': 'background:divider'}]
AttributeError: 'ExternalIpSegment' object has no attribute 'ip'
```

In addition, the network load segment appears to be always returning None. Apparently because render_one is always passed idata=None, which is likely because of some locking issues with self.queries, but I dont have the time to track them down.
"
334,Threaded segments,2013-03-17T08:15:45Z,2013-03-18T07:26:26Z,,,,"Adds threaded segments as requested in #168.

TODO:
- [x] Fix documentation issues: `ThreadedSegment` class instances are not documented as functions. The question is [here](http://stackoverflow.com/questions/15454551/documenting-class-instance-as-a-function), but I guess I already knew the answer: I will have to write sphinx extension.
- [x] Finally add tests that are currently marked as TODO.
- [x] Fix #295, it is becoming worth now.
"
333,Handle bzr repo with shelves correctly,2013-03-16T19:14:17Z,2013-03-18T07:29:27Z,,,,
332,system load segment returns non-normalized values,2013-03-16T06:39:24Z,2013-03-24T15:19:22Z,,,,"The documentation for the system load segment claims it returns normalized values, it does not. I dont know which is the desired behavior. Also, caching cpu_count() is probably a good idea, given that the number of cpus in a system does not change.
"
331,Make it possible to use executables for lib.vcs,2013-03-15T15:54:58Z,,"c:VCS support, t:enhancement",,,"This way we are avoiding GIL: while system is spending time waiting for input other threads are normally running. This should be configurable; and it should be possible to prefer executable regardless of packages installed. It also provides a way to test both variants (currently we were testing only `pygit2` on my system and only git executable in travis).

Alternative: use multiprocessing for such segments. Workers must be spawned before any threads were created. Applicable only for powerline server, for embedded we cannot be sure we are not having problems (if you run `python setup.py test` in new `threaded` branch you will see that there are much more `TypeError`s like reported in #295; I am currently up to not using `setup.py test` anymore and use `python2.6` variant always instead).

Ref #168.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051186-make-it-possible-to-use-executables-for-lib-vcs?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
330,Use $PWD for cwd before attempting getcwd() .,2013-03-15T05:57:59Z,2013-03-24T16:12:32Z,,,,"os.getcwd() follows symlinks and hence is not the same path as
returned from $PWD, which is more commonly used in the shell
prompt.
"
329,Make vim Visual Block mode orange in Solarized colourscheme.,2013-03-14T23:56:03Z,2013-03-15T13:28:06Z,,,,"This makes it consistent with the styles of the other visual modes. Reference issue #147.
"
328,Make git.Repository.status() also return None,2013-03-14T16:06:37Z,2013-03-15T13:27:27Z,,,,"Fixes #326
"
327,Fix #324 by only using locally stored bzr branch nickname,2013-03-14T14:57:46Z,2013-03-15T13:28:20Z,,,,
326,vcs branch coloring breaks if repo returns None from status,2013-03-14T13:22:41Z,2013-03-15T13:27:25Z,,,,"Here's a patch to fix it

```
diff --git a/powerline/segments/common.py b/powerline/segments/common.py
index 413bf91..553cbcc 100644
--- a/powerline/segments/common.py
+++ b/powerline/segments/common.py
@@ -54,9 +54,10 @@ def branch(status_colors=True):
    if repo:
        branch = repo.branch()
        if status_colors:
+           status = repo.status() or ''
            return [{
                'contents': branch,
-               'highlight_group': ['branch_dirty' if repo.status().strip() else 'branch_clean', 'branch'],
+               'highlight_group': ['branch_dirty' if status.strip() else 'branch_clean', 'branch'],
                }]
        else:
            return branch
```

I'm not sure if this is the approach you want to use to fix it. Or you want to have the vcs always return a non None value. Currently, bzr returns None if it cannot access the repo because it is locaked by another process.
"
325,Add status_colors argument to branch segments,2013-03-13T10:47:17Z,2013-03-13T12:56:28Z,,,,"As usual, somebody needs to review colors.

Closes #206
"
324,Vim is very slow on large bzr repository.,2013-03-13T09:11:54Z,2013-03-15T13:27:25Z,,,,"A little of an odd on to reproduce I am afraid.  

I updated to the latest vim (7.3.854 (2010 Aug 15, compiled Mar 13 2013 08:16:33)) and the latest powerline this morning.  When editing any files in a large bzr repository, gvim/vim scrawl to a slow halt: it takes a few seconds for any change (including moving the cursor) to happen.  Removing powerline from my ~/.vimrc, and the lag goes away.

This must be a fairly recent change since it was working fine a few days ago. 

Apologies for the hard to reproduce bug. 
"
323,"Add parameters to disable shortening, some other small stuff",2013-03-12T21:04:59Z,2013-03-15T13:27:26Z,,,,"Changes:
- Added parameter to disable shortening in vim `file_directory` segment
- Added more dynamic configuration checks
- Removed `underscore_to_camelcase`

(this is that `temp` branch with a stuff I was unsure how to present + fix for #322).
"
322,[enhancement] Add file_directory Segment Option to Expand Working Directory,2013-03-12T18:51:22Z,2013-03-15T13:27:25Z,,,,"This is an enhancement request.

I'm hoping an option could be added to the `file_directory` segment for vim that would allow expansion of the working directory. It seems like this would be a rather simple addition that would have a powerful impact on my workflow (I tend to get lost in large trees where I move around with cscope).

Some examples (left side as it is now, right side with the described expansion option enabled):
`./.vimrc` -> `~/.vimrc`
`./fstab` -> `/etc/fstab`

I'm not sure if this is useful to others or not, but I'm a fan of the `autochdir` feature of vim, which effectively renders the file_directory segment useless (it is always just `.`). 

I would think even users who don't use `autochdir` could benefit because enabling the option in their template would mean `.` would always be expanded, making it easier to keep up with the working directory.

I know this isn't a natively-supported feature of vim, but why would I be using powerline if I didn't want new, awesome features like it already provides? ;)

Keep up the great work! Thanks.
"
321,Fix git branch colored output,2013-03-12T17:02:03Z,2013-03-13T09:57:30Z,,,,
320,Arch Linux: Install fonts to OTF/ instead of TTF/,2013-03-12T11:39:20Z,2013-03-13T13:10:39Z,t:bug,,,"PKGBUILDs need to be updated.
"
319,fc-cache isn't adding patched font.,2013-03-12T00:45:35Z,2013-03-12T14:42:47Z,,,,"I downloaded DejaVu Sans Mono for Powerline (https://github.com/Lokaltog/powerline-fonts/tree/master/DejaVuSansMono), placed it in `~/.fonts`, and ran `fc-cache -vf ~/.fonts` and the font isn't getting added (output says 0 fonts added and `fc-list | grep Powerline` doesn't show anything).  I've tried installing it in /usr/share/fonts/OTF as well, no luck.  This is on Arch Linux.
"
318,Git segment problems.,2013-03-11T21:58:19Z,2013-03-13T10:13:02Z,,,,"The git segment causes problems both in zsh and in vim.

http://i.imgur.com/0y2x3Ti.png
Vim is perfectly fine until the window is small enough to make the git segment hidden.
The same goes for zsh, everything is fine until I'm not in a git repo folder.

(using xfce4-terminal, it's the same in uxterm and urxvt, even in gVim)
"
317,Divider symbols not appearing in urxvt,2013-03-11T20:53:09Z,2013-03-11T21:03:12Z,"s:invalid, s:wontfix",,,"I'm using Arch Linux.  I have gvim and rxvt-unicode installed from Arch repos.  gvim has `--with-features=huge` (not sure if this is the same as big) and rxvt-unicode has `--enable-unicode3`.  I have powerline installed from the AUR.  PowerlineSymbols aren't rendering (boxes).  

My font config in .Xresources:

```
URxvt*.font: xft:dejavu sans mono:size=10:antialias=true,\
xft:sazamani mincho:size=10:antialias=true,\
xft:ar pl ukai cn:size=10:antialias=true
```

I tried adding also

```
xft:powerlinesymbols
```

to my .Xresources font config.  Restarted X, reloaded .Xresources, still doesn't work.
"
316,Add an option to shorten uptime segment by showing only most relevant info,2013-03-11T05:34:22Z,2013-04-02T16:44:21Z,,,,
315,Added powerline-lint script,2013-03-10T19:43:59Z,2013-03-11T15:25:20Z,,,,"Some other changes:
- renamed `term_24bit_colors` to `term_truecolor`
- removed unused `colors` key

`powerline-lint` does not check `args` dictionary: need to answer whether we are avoding this check at all, put more data to documentation, add `segment_func.check_args` method or whatever else.

Fixes #278
"
314,Modelines on top of every Python file?,2013-03-10T19:05:53Z,2013-03-11T07:22:35Z,t:question,,,"As you guys know this project has some coding standards that deviate from PEP8, the most notable one being that the project uses tabs for indentation and spaces for alignment. This has been brought up as an issue several times, and I understand that this makes it a bit of a hassle to contribute if you use vim's default indentation settings.

I'm personally a fan of having project-specific vim files instead of including a modeline in every single Python file, and I never use modelines myself (disabled). @kovidgoyal suggested that we should include a modeline in Python files since we're using non-standard indentation, to make it easier to contribute to the project.

Before changing every Python script and adding a modeline to the top I'd like to get some feedback on this issue. Which would you prefer:
1. Don't have any project settings in any files (no vimrc and no modelines), like it is today
2. Have modelines in every Python file
3. Have a project-specific vimrc file in the repo root
4. Both 2 and 3
"
313,Refactor argparse creation so that it is re-useable in the daemon,2013-03-10T17:04:50Z,2013-03-11T06:53:53Z,,,,
312,"Fixed set statusline location, readded fix from #243",2013-03-10T13:20:48Z,2013-03-11T06:17:05Z,,,,"Ref #303
"
311,Improved ebuild,2013-03-10T11:40:30Z,2013-03-11T14:54:37Z,,,,"Added support for FEATURE=tests, fixed license, removed tests package, added USE=git (just to record minimal git version).
"
310,"Improved ambiwidth handling, readded additional_escapes",2013-03-10T09:09:58Z,2013-03-12T12:13:40Z,,,,"Fixes #307

Note: when merging with powerline-lint branch term_24bit_colors added to two 
more places needs to be renamed.
"
309,Improve performance of powerline daemon by avoid unnecessary filesystem access,2013-03-10T08:16:48Z,2013-03-23T12:27:03Z,,,,
308,Fix network monitor performance,2013-03-10T07:39:25Z,2013-03-18T05:17:10Z,,,,
307,mode name  was truncated when editing unicode filename,2013-03-10T05:04:29Z,2013-03-12T12:13:32Z,,,,"$ vim -u NONE -N -S powerline/bindings/vim/plugin/powerline.vim --cmd 'set ls=2' --cmd 'redrawstatus' 你好

![Selection_001](https://f.cloud.github.com/assets/348936/240680/9787ad2c-893f-11e2-8eb8-6407dcd364a3.jpg)

$ vim -u NONE -N -S powerline/bindings/vim/plugin/powerline.vim --cmd 'set ls=2' --cmd 'redrawstatus' hello

![Selection_002](https://f.cloud.github.com/assets/348936/240681/9d09f82c-893f-11e2-97fb-28ac7984a16f.jpg)
"
306,Add XDG_CONFIG_DIRS to config_paths for system-wide install,2013-03-09T16:41:44Z,2013-03-11T07:26:35Z,,,,"As per title, add all dirs in `$XDG_CONFIG_DIRS` env to config_paths (ie - `/etc/xdg/powerline`).
"
305,TTF output and style preservation,2013-03-09T08:21:42Z,2013-03-11T07:25:52Z,,,,"So, I tried using the Ubuntu Mono OTF fonts from [Lokaltog/powerline-fonts](/Lokaltog/powerline-fonts) but the look terrible.  I think hinting information or something is lost in the conversion.  So, I've modified the font patcher to output either OTF or TTF based on the input format.  As a bonus, it's also faster.

The second commit here fixes styles, which get broken by appending `ForPowerline` to fonts with style suffixes in the fontname, ie - `UbuntuMono-Bold`.  Instead of simply appending `ForPowerline`, which results in a style of `BoldForPowerline`, it inserts it before any style information, ie - `UbuntuMonoForPowerline-Bold`, which preserves the correct style of `Bold`.
"
304,Added tip for weird statusbar blankness on start,2013-03-08T23:34:50Z,2013-03-11T06:16:09Z,,,,
303,Multiple problems getting powerline to work OSX 10.8.2,2013-03-08T17:30:12Z,2013-03-08T18:59:10Z,t:bug,,,"Okay, so I installed powerline today and have battled many hours to get it to work.
My system:

```
OS X 10.8.2
zsh 5.0.2
iTerm2 1.0.0.20130302
vim 7.3.854
```

Steps:
- `brew install python`
- `pip install --upgrade distribute`
- `pip install --upgrade pip`
- `pip install --user git+git://github.com/Lokaltog/powerline`
- Added powerline to vimrc
- Installed [Menlo for Powerline](https://gist.github.com/sjl/1627888)

The icons were a mess so I tried Menlo from powerline-fonts (which just messed all my letters up)
I stumbled upon [agnoster.zsh-theme](https://gist.github.com/andschwa/5027672) which I tried for my terminal and it worked, but still if I sourced powerline.zsh the icons were jumbled.
And in vim the icons still were jumbled.

I tried patching the font myself but that didn't seem to have any effect either.

And now after a few restarts of iTerm my vim tells me:

```
'import sitecustomize' failed; use -v for traceback
An error occured while importing the Powerline package. This could be caused by an invalid sys.path setting, or by an incompatible Python version (Powerline requires Python 2.6+ or 3.2+ to work). Please consult the troubleshooting section in the documentation for possible solutions.
Press ENTER or type command to continue
```

So in vim I ran this:

```
python import sys; print(sys.path)
['/usr/local/lib/python2.7/site-packages', '/Users/timosand/dotfiles', '/Users/timosand/Library/Python/2.7/lib/python/site-packages', '/Library/Python/2.7/site-packages', '/usr/local/lib/python2.7/site
-packages/gtk-2.0', '/usr/local/lib/python2.7/site-packages']
```

Now I'm just stumped at what is actually going on here :S
"
302,Move fontpatcher to powerline-fontpatcher repo,2013-03-08T17:11:27Z,2014-08-03T09:45:35Z,"c:font, t:enhancement",,,"The fontpatcher should be available as a separate package so it can be maintained independently of the main Powerline codebase (and also be installed as a script). The [powerline-fontpatcher](https://github.com/Lokaltog/powerline-fontpatcher) repo has been created for this purpose.

Refs #300.
"
301,Make more segments use gradients,2013-03-08T16:41:01Z,2013-03-24T15:19:22Z,t:enhancement,,,"Candidates: `system_load` (and purge out `system_load_good/bad/ugly`), `network_load` (only in case user has defined border values), `cpu_load_percent`, `email_alert` (unsure, definitely only in case user has defined border values).
"
300,No fontpatcher on pip installed powerline on OSX,2013-03-08T16:16:27Z,2014-07-27T23:26:05Z,"c:installation, t:bug",,,"So yeah, I'm having trouble with my font ([Menlo for Powerline](https://gist.github.com/sjl/1627888)) so I thought I'd patch it myself. Only problem is that the pip installed package doesn't seem to include the fontpatcher.
Is this intended behaviour?
"
299,Add an Open Source license.,2013-03-08T13:44:05Z,2013-03-11T14:54:31Z,t:enhancement,,,"Hi, 
could you please add a license to powerline? (assuming you want to let other people use it ;) )
A LICENSE or LICENSE.txt file in the repository root would do.
I would suggest GPLv2 or v3.

Thanks!
"
298,Unable to import powerline package on Arch,2013-03-08T12:50:12Z,2014-09-20T10:10:31Z,"a:doc update, c:documentation, e:linux, t:bug",,,"Users report having to add `PYTHONPATH=/usr/lib/python3.3/site-packages` to their /etc/profile to get Powerline working on Arch Linux.
"
297,"Added tip, fixes Powerline losing color if autosourcing .vimrc",2013-03-07T15:43:57Z,2014-01-17T22:19:16Z,"c:b:shell, c:documentation, t:enhancement",,,"This fixes issues like #194
This is what I do in my .vimrc right now, and it seems to be working fine.
"
296,Compatibility problem with vim-gitgutter (de-colourizes),2013-03-07T14:33:10Z,2013-03-07T14:55:31Z,"c:b:vim, s:duplicate, s:invalid, t:bug",,,"Powerline and [vim-gitgutter](https://github.com/airblade/vim-gitgutter/) don't seem to play very well together.  [Issue 41 of vim-gitgutter](https://github.com/airblade/vim-gitgutter/issues/41) describes the problem I have encountered with these two plugins.
"
295,Python3 tests partly fail due to None globals in multiprocessing,2013-03-05T16:53:01Z,2013-03-18T07:26:26Z,t:bug,,,"I am speaking about those messages in build log:

> ```
> Error in atexit._run_exitfuncs:
> 
> TypeError: 'NoneType' object is not callable
> ```

They do not currently make build fail, but this is something that should be taken care of before release. Python 2.7 builds also sometimes have this problem (it is how I did get information about None and multiprocessing: in python 2.7 full traceback is printed, not just error messages). Python 2.6 builds do not have this problem because the way unit tests are run is different, and it uses different testing framework. The whole thing looks much like unittest or python bug, but even in this case it should be narrowed down  before passing further.
"
294,Breaks in vim when setting LC_ALL=C,2013-03-05T13:27:56Z,2013-03-05T15:33:44Z,"c:b:vim, t:bug",,,"When I start vim with my current locale everything works as expected

```
LANG=en_US.utf8
LC_CTYPE=en_US.utf8
LC_NUMERIC=en_US.utf8
LC_TIME=fr_FR.utf8
LC_COLLATE=en_US.utf8
LC_MONETARY=fr_FR.utf8
LC_MESSAGES=en_US.utf8
LC_PAPER=fr_FR.utf8
LC_NAME=fr_FR.utf8
LC_ADDRESS=fr_FR.utf8
LC_TELEPHONE=fr_FR.utf8
LC_MEASUREMENT=fr_FR.utf8
LC_IDENTIFICATION=fr_FR.utf8
LC_ALL=
```

But if I start vim with

```
LC_ALL=C vim
```

Powerline breaks with the following error

```
Error detected while processing function Powerline:
line    3:
E859: Failed to convert returned python object to vim value
```

and vim becomes unusable.
"
293,[Doc] Add tips/troubleshooting for fontconfig (So the glyphs show properly),2013-03-05T09:26:36Z,,"a:doc update, c:documentation, t:enhancement",,,"Perhaps add tips/troubleshooting to handle issues like the below to the documentation? I'm not entirely sure how to fix it.

![screen](https://f.cloud.github.com/assets/37370/220608/ab990ef4-8576-11e2-8a7d-5122ce21934c.png)
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051189-doc-add-tips-troubleshooting-for-fontconfig-so-the-glyphs-show-properly?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
292,KeyError: 'spaces',2013-03-05T08:16:29Z,2013-03-05T12:11:12Z,s:wontfix,KeyError,KeyError: 'spaces',"Update this morning and I got this trace back:

; vim --cmd ""let g:powerline_debugging_pyeval=1""
Error detected while processing /home/**_/.local/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim:
line   42:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/home/**_/.local/lib/python2.7/site-packages/powerline/vim.py"", line 28, in **init**
    super(VimPowerline, self).**init**('vim')
  File ""/home/**_/.local/lib/python2.7/site-packages/powerline/**init**.py"", line 71, in **init**
    self.renderer = Renderer(theme_config, local_themes, theme_kwargs, colorscheme, *_options)
  File ""/home/**_/.local/lib/python2.7/site-packages/powerline/renderers/vim.py"", line 24, in **init**
    super(VimRenderer, self).**init**(_args, **kwargs)
  File ""/home/**_/.local/lib/python2.7/site-packages/powerline/renderer.py"", line 16, in **init**
    self.theme = Theme(theme_config=theme_config, *_theme_kwargs)
  File ""/home/***/.local/lib/python2.7/site-packages/powerline/theme.py"", line 29, in **init**
    self.spaces = theme_config.get('spaces', common_config['spaces'])
KeyError: 'spaces'
Press ENTER or type command to continue
"
291,Fix Arch Linux PKGBUILDs,2013-03-04T15:37:28Z,2013-03-08T17:04:20Z,t:bug,,,"A couple of issues have been reported on the arch packages:
- [x] Add `powerline-git` to `replaces` in python2-powerline-git
- [x] Add note about `export PYTHONPATH=/usr/lib/python3.3/site-packages` to installation instructions
- [x] Remove pkgbase
- [x] Update python versions in dependency lists
"
290,"ebuild fails with ""Package installs 'tests' package, file collisions likely.""",2013-03-04T15:29:18Z,2013-03-04T15:29:50Z,s:duplicate,,,"Hi!
The current ebuild fails for me with:

```
* ERROR: app-misc/powerline-9999 failed (install phase):
*   Package installs 'tests' package, file collisions likely.
```

Gentoo recently updated these policies in the distutils-r1 eclass.
see: http://comments.gmane.org/gmane.linux.gentoo.python/378
"
289,"ebuild fails with ""Package installs 'tests' package, file collisions likely.""",2013-03-04T15:29:02Z,2013-03-11T14:54:31Z,t:bug,,,"Hi!
The current ebuild fails for me with:

```
* ERROR: app-misc/powerline-9999 failed (install phase):
*   Package installs 'tests' package, file collisions likely.
```

Gentoo recently updated these policies in the distutils-r1 eclass.
see: http://comments.gmane.org/gmane.linux.gentoo.python/378

Edit: Forgot to add this:
use flags: 

```
 [ebuild  N    *] app-misc/powerline-9999::x-portage  USE=""X vim -awesome -bash -doc -ipython -tmux -zsh"" PYTHON_TARGETS=""python2_7 python3_2 -python2_6 (-python3_3)"" 
```

and my [logs/emerge --info](https://gist.github.com/initysteppa/5093350)
"
288,Mercurial tests fail sometimes,2013-03-04T13:48:43Z,2014-01-30T13:53:16Z,"c:VCS support, t:bug",AssertionError,AssertionError: None == None,"`test_mercurial` appears to fail when run in a virtualenv (I'm using tox):

```
Traceback (most recent call last):
  File ""/home/kim/powerline/tests/test_lib.py"", line 69, in test_mercurial
    self.assertNotEqual(repo, None)
AssertionError: None == None
```

This does not happen for me when running `python2 setup.py test`, possibly because I have mercurial bindings in my global site-packages. It also suddenly failed for no reason on travis in be62815, an entirely unrelated change. When running tests in a virtualenv on commit cb87cfb this now fails as well, even though travis built it successfully yesterday.
"
287,Note to contributors: Commit/PR guidelines,2013-03-03T20:36:53Z,2014-08-15T16:21:14Z,"a:doc update, c:documentation, t:enhancement",,,"Now that we have tests and travis enabled in the repo it's time to start utilizing a branching method for each feature or bug request that is going to be merged. This is already mentioned in a footnote in the docs, but here's a couple of guidelines I think would make sense to use to get a consistent commit history:
- Git commit messages should follow [Tim Pope's notes about commit messages](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html). In particular, the first line should be written in the imperative and be descriptive of the changes.
- I think we should use [git flow](http://nvie.com/posts/a-successful-git-branching-model/) for all future development. I've usually just merged and rebased commits onto develop until now because of periods with heavy development, but it's probably time to start using this branching model actively now. I also think all (or most) feature and hotfix branches should refer to an existing issue in the branch name, e.g. `feature/123-fix-unicode-issues`.
- All contributions should pass `flake8 --ignore=W191,E501,E121,E122,E123,E128` tests. An exception to this rule is if flake8 makes the code less readable, like the weather conditions dict.

Please let me know what you guys think and if you have any complaints or suggestions regarding this issue.
"
286,Incompatible with jedi-vim,2013-03-03T19:56:32Z,2014-06-28T17:16:55Z,"c:b:vim, s:invalid, t:bug",,,"It seems that powerline is incompatible with [jedi-vim](https://github.com/davidhalter/jedi-vim). In particular, selecting from jedi-vim's completion popup is broken while powerline is enabled.
"
285,Tests,2013-03-03T17:04:37Z,2013-03-03T20:08:06Z,,,,"Added tests. Not finished, but no longer fails thus ready to merge: no tests is worse then partial coverage.

Other non-tests stuff:
- Python 3.2 and 2.6 support.
- Fixed weather segment (by the way how did it happen no one complained about it not working?).
- Some documentation improvements.

After merge please enable travis for your repository.
"
284,Fixed unicode() input handling.,2013-03-03T16:53:25Z,2013-03-03T17:05:15Z,,,,"For example we can get an integer from mail segment(a number of mails in the inbox). In this case unicode() fails with TypeError.
"
283,Fixed email_imap_alert: it no longer returns an integer too,2013-03-03T11:02:06Z,2013-03-03T20:07:33Z,,,,"Fixes #279
"
282,Strange bug with prompt,2013-03-01T17:13:41Z,,"c:b:shell, e:macos, t:bug",,,"![Screen Shot 2013-03-01 at 17 03 10](https://f.cloud.github.com/assets/31504/210461/f4944dea-8291-11e2-9eab-cbe804cbe3f7.png)

Sometimes, after an error in a previous command, any subsequent commands do not appear on the prompt. In the screenshot you can see that i have issued two commands. The first one is:

```
ping google
```

however, when typing the command it does not appear on the terminal.

I'm running the latest development version on iterm2 and tmux. This happens on a single pane within tmux
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051192-strange-bug-with-prompt?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
281,Powerline does not work with non-utf filenames,2013-02-28T18:04:52Z,2014-01-26T18:04:33Z,"a:segment, c:b:vim, t:bug",,,"Just do

```
:e `=""\xFF""`
```

and you will see a bunch of errors.

Note: `vim.current.buffer.name` does not work in python 3 in this case. Thus `u()` function and `file_name`/`file_directory` segments are to be cared about. Suggestions:
1. Use equivalent of vim `strtrans()` in `u()` on `except UnicodeDecodeError` clause (to be added) in `else` clause.
2. Make `file_*` fall back to `bufname()` function and to `strtrans(bufname())` in `vim.eval` in case it is not possible (older interface has no option to return such strings, raising `UnicodeDecodeError`).
"
280,Vim plugin not loading,2013-02-28T15:54:13Z,2013-02-28T21:19:39Z,,,,"Hi, I'm new to powerline and I've been trying to get it to work but no success.

I'm using [Janus](https://github.com/carlhuda/janus) with the addition of [jedi-vim](https://github.com/davidhalter/jedi-vim) and following the installation instructions, cloned powerline's repo into ~/.janus. Then I added `set rtp +=/home/gabe/.janus/powerline/bindings/vim` to both `~/.vimrc.before` (and then `~/.vimrc.after` when it wasn't working).

When I open vim, if I run `:set rtp`, powerline's path is there but powerline itself isn't showing up. I looked around and apparently before there was a `source_plugin.vim` that isn't in my repo, and I've seen some people hinting that I have to manually `:source` my `powerline.vim` file, which actually made powerline show up.

So my question is: is powerline supposed to show up automatically after I add the path to `rtp`, and it's bugging out on me, or am I supposed to source it by hand and it's not on the docs (as far as I looked)?

Thanks
"
279,"u(): TypeError: coercing to Unicode: need string or buffer, int found",2013-02-28T10:17:42Z,2013-03-03T20:07:17Z,,TypeError,"TypeError: coercing to Unicode: need string or buffer, int found","Commit 83f4236 (to fix issue #271) introduces an error:

```
TypeError: coercing to Unicode: need string or buffer, int found
```

This is because the `unicode()` call has been replaced with `unicode(..., 'utf-8')` and that bails out for non-string parameters.

I am not sure, if ""s"" should be casted to string (via `str()`), or if the call to `u()` should make sure that only strings are passed.
"
278,Add powerline-lint: configuration checker script,2013-02-27T03:38:39Z,2013-03-11T15:25:19Z,t:enhancement,,,"Would be convenient to have static checker reporting various errors, also usable in automated tests.
"
277,Rework powerline.lib.vcs.*.Repository.status(),2013-02-26T21:12:44Z,,"c:VCS support, t:enhancement",,,"Rework output of `repo.status(file)`: make it output an iterable of statuses, each is a pair of (standard meaning or `[A-Z][a-z]+` non-standard meaning, character). First value will be used for highlighting and symbols. Second for displaying only. “Standard meaning” is one of “added”, “modified”, “removed”, “missing”, “unknown”, “clean”, “conflicted”, “ignored”, “locked”.

Putting my suggestion from closed #218 here. Should also make `repo.status()` output data in similar fashion for consistency.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051193-rework-powerline-lib-vcs-repository-status?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
276,Use exit_fail hl group for last_status segment,2013-02-26T21:07:43Z,2013-02-28T13:06:43Z,,,,"Fixes #270
"
275,Also use hl_iter in exception message,2013-02-26T20:59:21Z,2013-02-28T13:07:07Z,,,,"Ref #270
"
274,Do not throw away python stack trace,2013-02-26T20:24:36Z,2013-02-26T20:29:55Z,,,,"Errors when loading powerline fails are almost never giving any useful 
information for debugging.
"
273,Replace unicode() with u() in theme.py,2013-02-26T20:15:34Z,2013-02-26T20:16:47Z,,,,"Fixes #271
"
272,new error when launching vim,2013-02-26T19:33:47Z,2013-02-27T04:45:20Z,,,,"I've had a new error show up when I launch vim today, after updating vim & powerline this morning. I've fought with this all morning, now having moved from hombrew-vim to MacVim HEAD from source.

```
An error occured while importing the Powerline package. This could be caused by an invalid sys.path setting, or by an incompatible Python version (Powerline requires Python 2.7 or 3.3+ to work). Please consult the troubleshooting section in the documentation for possible solutions.
Press ENTER or type command to continue
```

``` python
:py import sys; print sys.path
```

gives me:

```
['/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.2.1-py2.7.eg
g', '/usr/local/lib/python2.7/site-packages/pip-1.2.1-py2.7.egg', '/usr/local/Cellar/python/2.7.3/Frameworks/Python.fram
ework/Versions/2.7/lib/python27.zip', '/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/pytho
n2.7', '/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin', '/usr/local/
Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac', '/usr/local/Cellar/python/2.7.3/Fr
ameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages', '/usr/local/Cellar/python/2.7.3/Frame
works/Python.framework/Versions/2.7/lib/python2.7/lib-tk', '/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/V
ersions/2.7/lib/python2.7/lib-old', '/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2
.7/lib-dynload', '/Users/willkd9/Library/Python/2.7/lib/python/site-packages', '/usr/local/Cellar/python/2.7.3/Framework
s/Python.framework/Versions/2.7/lib/python2.7/site-packages', '/Library/Python/2.7/site-packages', '/usr/local/lib/pytho
n2.7/site-packages', '/Users/willkd9/dotfiles/vim/bundle/powerline']
```

``` python
:py import powerline as pl;print pl.__file__
```

gives me:

```
/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/__init__.pyc
```

I've had trouble getting (mac)vim to compile against the homebrew python, but I think it's working now.

```
otool -L ~/Applications/MacVim.app/Contents/MacOS/Vim | grep Python
```

gives me the homebrew Python:

```
/usr/local/opt/python/Frameworks/Python.framework/Versions/2.7/Python (compatibility version 2.7.0, current version 2.7.0)
```

OS is 10.8.2.
"
271,Powerline breaks with UTF-8 filenames in vim,2013-02-26T12:56:50Z,2013-02-26T20:16:47Z,t:bug,,,
270,The 'last_status' segment is causing a KeyError to be raised when used,2013-02-26T12:45:37Z,2013-02-28T13:06:41Z,t:bug,KeyError,"KeyError: u'Highlighting groups not found in colorscheme: l, a, s, t, _, s, t, a, t, u, s'","Only started when I upgraded powerline today after not more than 3 days of running it which has to mean that if it's indeed an bug, it has to have been introduced lately (if that at all helps).

The error raised is ""Highlighting groups not found in colorscheme: l, a, s, t, _, s, t, a, t, u, s"", very similar to one reported #165.

It can be reproduced by using enabling the `default_leftonly` shell theme, then by invoking something that returns a non-zero status.

Issue will happen on both colorschemes. Running iTerm 1.0.0.20130223-nightly, zsh 5.0.2, Python 2.7.3 on OS X 10.8.2.

Stack trace below:

```
Traceback (most recent call last):
  File ""/usr/local/share/python/powerline"", line 30, in <module>
    rendered = powerline.renderer.render(width=args.width, side=args.side)
  File ""/usr/local/lib/python2.7/site-packages/powerline/renderer.py"", line 55, in render
    if mode not in segment['exclude_modes'] or (segment['include_modes'] and segment in segment['include_modes'])]
  File ""/usr/local/lib/python2.7/site-packages/powerline/renderer.py"", line 31, in get_highlighting
    segment['highlight'] = self.colorscheme.get_highlighting(segment['highlight_group'], mode, segment.get('gradient_level'))
  File ""/usr/local/lib/python2.7/site-packages/powerline/colorscheme.py"", line 101, in get_highlighting
    raise KeyError('Highlighting groups not found in colorscheme: ' + ', '.join(groups))
KeyError: u'Highlighting groups not found in colorscheme: l, a, s, t, _, s, t, a, t, u, s'
Traceback (most recent call last):
  File ""/usr/local/share/python/powerline"", line 30, in <module>
    rendered = powerline.renderer.render(width=args.width, side=args.side)
  File ""/usr/local/lib/python2.7/site-packages/powerline/renderer.py"", line 55, in render
    if mode not in segment['exclude_modes'] or (segment['include_modes'] and segment in segment['include_modes'])]
  File ""/usr/local/lib/python2.7/site-packages/powerline/renderer.py"", line 31, in get_highlighting
    segment['highlight'] = self.colorscheme.get_highlighting(segment['highlight_group'], mode, segment.get('gradient_level'))
  File ""/usr/local/lib/python2.7/site-packages/powerline/colorscheme.py"", line 101, in get_highlighting
    raise KeyError('Highlighting groups not found in colorscheme: ' + ', '.join(groups))
KeyError: u'Highlighting groups not found in colorscheme: l, a, s, t, _, s, t, a, t, u, s'
```
"
269,Added ambiwidth problems information to troubleshooting section,2013-02-26T03:39:56Z,2013-02-26T20:18:06Z,,,,
268,Weird lookin' status bar in CLI vim on OS X,2013-02-26T01:26:19Z,2013-02-26T02:25:37Z,,,,"Here's the messed up status bar:

![Messed Up Statusbar](http://f.cl.ly/items/283W25260j0u1T1t3f3Y/powerline-fucked-up.PNG)

And the more you play with vim, the more messed up it becomes. Everything looks and works fine in MacVim (different executable).

Here's most of my version info junk:

![Version Info Junk](http://f.cl.ly/items/0P2p0r3V2k1k3o1i2d2Q/powerline-versions.PNG)
"
267,starting up the GUI from within vim terminal version,2013-02-25T20:12:30Z,2013-02-27T01:37:35Z,,,,"There is a :gui command on some terminal version vim. Terminal version  vim and gvim are all okay, but powerline has problem when using "":gui"".

use "":help :gui"" to see more details.

steps to reproduce:

$ vim
:gui

vim version: 7.3, Include patches 1-831

./configure --prefix=$HOME/local  --with-features=huge --disable-xsmp --disable-xsmp-interact --disable-selinux --disable-luainterp  --enable-perlinterp  --enable-pythoninterp --enable-rubyinterp --enable-cscope --enable-netbeans --enable-multibyte  --enable-xim  --disable-hangulinput --enable-gui=gtk2 --enable-fontset CFLAGS=""-xHOST -O3 -ipo -no-prec-div"" CXXFLAGS=""-xHOST -O3 -ipo -no-prec-div"" CC=icc CXX=icpc

fedora 18

![Screenshot from 2013-02-26 04:04:57](https://f.cloud.github.com/assets/348936/193504/b6208f50-7f86-11e2-9f7e-f47dacda59d0.png)
"
266,Vim – Terminal timeout tip/trick interferes with other mappings,2013-02-25T19:35:06Z,2014-08-02T23:40:28Z,"c:documentation, t:enhancement",,,"The autocommand group on the “Tips & Tricks” page to _“Fix terminal timeout when pressing escape”_ ([found here](http://git.io/v_w_5Q)) causes some mappings not to work.

For example, these don't work when the snippet is included in my vimrc:

```
inoremap jk <Esc>
inoremap jj <Esc>
```

Cheers,
Matt
"
265,Add bzr support,2013-02-25T17:29:08Z,2013-03-11T06:11:22Z,,,,"Adds support for the bzr vcs, using the bzrlib python library.
"
264,add_divider_highlight_group doesn't work with list return values,2013-02-25T13:58:03Z,2013-02-25T15:11:26Z,t:bug,,,"Segments like the weather segment displays a stringified contents list (i.e. `[{'highlight_group': [...]...}]`) instead of the actual contents because `add_divider_highlight_group` doesn't take into account that the return value from functions can be either a contents string or a list of segments.
"
263,Mouse scroll wheel crashes gvim with powerline on windows (problems with resize also),2013-02-25T09:39:07Z,2014-01-17T22:24:55Z,"c:b:vim, e:windows, s:invalid, t:bug",,,"Hi,

I installed powerline using vundle. I am using gvim for windows (7.3.798 compiled from source by me using mingw32 / tdm-gcc). Everything went fine, python works, powerline shows, it looks extremely nice. But some issues:
- attempt to use mouse scroll crashes gvim
- double click on the window title bar maximizes the window all seems ok, another double click (restore size) works fine too
- click on the maximize button: window content disappears, nothing works (this also happens when resizing the window with the mouse)

I should mention that console vim appears to be unaffected.

Vim version:

``` :version
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Feb  6 2013 01:54:32)
MS-Windows 32-bit GUI version
Included patches: 1-798
Compiled by bburlacu@bburlacu-PC
Big version with GUI.  Features included (+) or not (-):
+arabic +autocmd +balloon_eval +browse ++builtin_terms +byte_offset +cindent +clientserver +clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments +conceal +cryptv
 +cscope +cursorbind +cursorshape +dialog_con_gui +diff +digraphs -dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path +find_in_path +float +folding
 -footer +gettext/dyn -hangul_input +iconv/dyn +insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent +listcmds +localmap -lua +menu +mksession 
+modify_fname +mouse +mouseshape +multi_byte_ime/dyn +multi_lang -mzscheme +netbeans_intg -ole +path_extra -perl +persistent_undo -postscript +printer -profile +python/dyn
 -python3 +quickfix +reltime +rightleft -ruby +scrollbind +signs +smartindent -sniff +startuptime +statusline -sun_workshop +syntax +tag_binary +tag_old_static 
-tag_any_white -tcl -tgetent -termresponse +textobjects +title +toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo +vreplace +wildignore 
+wildmenu +windows +writebackup -xfontset -xim -xterm_save -xpm_w32 
   system vimrc file: ""$VIM\vimrc""
     user vimrc file: ""$HOME\_vimrc""
 2nd user vimrc file: ""$VIM\_vimrc""
      user exrc file: ""$HOME\_exrc""
  2nd user exrc file: ""$VIM\_exrc""
  system gvimrc file: ""$VIM\gvimrc""
    user gvimrc file: ""$HOME\_gvimrc""
2nd user gvimrc file: ""$VIM\_gvimrc""
    system menu file: ""$VIMRUNTIME\menu.vim""
Compilation: gcc -Iproto -DWIN32 -DWINVER=0x0500 -D_WIN32_WINNT=0x0500 -DHAVE_PATHDEF -DFEAT_big -DHAVE_GETTEXT -DHAVE_LOCALE_H -DDYNAMIC_GETTEXT -DFEAT_CSCOPE -DFEAT_NETBEANS_INTG -DFEAT_GUI_W32 -DFEAT_CLIPBOARD -DFEAT_MBYTE -DFEAT_MBYTE_IME -DDYNAMIC_IME -DDYNAMIC_ICONV -pipe -w -march=native -Wall -DFEAT_PYTHON  -DDYNAMIC_PYTHON -O3 -fomit-frame-pointer -freg-struct-return -s
Linking: gcc -Iproto -DWIN32 -DWINVER=0x0500 -D_WIN32_WINNT=0x0500 -DHAVE_PATHDEF -DFEAT_big -DHAVE_GETTEXT -DHAVE_LOCALE_H -DDYNAMIC_GETTEXT -DFEAT_CSCOPE -DFEAT_NETBEANS_INTG -DFEAT_GUI_W32 -DFEAT_CLIPBOARD -DFEAT_MBYTE -DFEAT_MBYTE_IME -DDYNAMIC_IME -DDYNAMIC_ICONV -pipe -w -march=native -Wall -DFEAT_PYTHON  -DDYNAMIC_PYTHON -O3 -fomit-frame-pointer -freg-struct-return -s -mwindows -o gvim.exe -lkernel32 -luser32 -lgdi32 -ladvapi32 -lcomdlg32 -lcomctl32 -lversion -lwsock32 -lole32 -luuid      
```
"
262,Use oldlace for visual mode foreground in vim,2013-02-25T07:07:49Z,2013-02-25T13:33:13Z,,,,"This seems to be the color that was intended.  #261 is fixed by this.
"
261,Visual mode broken when using vim solarized color scheme,2013-02-25T06:42:26Z,2013-02-25T13:33:13Z,,KeyError,KeyError: u'beige',"If I set the vim color scheme to ""solarized"" and type `v` in normal mode I receive Python errors.  It looks like the color ""beige"" isn't defined.

```
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
Traceback (most recent call last):
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
  File ""/home/trey/.local/lib/python2.7/site-packages/powerline/renderers/vim.py"", line 47, in render
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
    statusline = super(VimRenderer, self).render(mode, winwidth, segment_info=segment_info, matcher_info=segment_info)
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
  File ""/home/trey/.local/lib/python2.7/site-packages/powerline/renderer.py"", line 55, in render
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
    if mode not in segment['exclude_modes'] or (segment['include_modes'] and segment in segment['include_modes'])]
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
  File ""/home/trey/.local/lib/python2.7/site-packages/powerline/renderer.py"", line 31, in get_highlighting
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
    segment['highlight'] = self.colorscheme.get_highlighting(segment['highlight_group'], mode, segment.get('gradient_level'))
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
  File ""/home/trey/.local/lib/python2.7/site-packages/powerline/colorscheme.py"", line 109, in get_highlighting
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
    'fg': pick_color(group_props['fg']),
Press ENTER or type command to continue
Error detected while processing function Powerline..<SNR>23_pyeval:
line    1:
KeyError: u'beige'
```
"
260,make VBlock orange,2013-02-24T19:32:15Z,2013-02-24T21:27:25Z,,,,"Fixes #147
"
259,Move translation of modes into renderers/vim.py,2013-02-24T11:30:33Z,2013-02-24T19:18:44Z,,,,"Fixes #147
"
258,Indicating visual activity,2013-02-23T04:12:41Z,2013-02-24T22:20:20Z,"s:invalid, t:bug",,,"Hey previously I was using the following configuration in my tmux conf :

```
setw -g monitor-activity on
set -g visual-activity on
```

This is quite useful as it monitors tmux windows for any activity and visually indicates the same by highlighting the tmux tab in the statusline.

Currently this breaks since the highlighting since highlighting doesn't have the special characters:

![Screenshot from 2013-02-23 09:39:20](https://f.cloud.github.com/assets/88258/187586/d9015528-7d6e-11e2-92f1-683f6517099b.png)

Do you already support this feature somehow ? Do you have any plans ?
"
257,Netrw colors like NERDTree,2013-02-22T15:29:18Z,2013-02-22T15:41:58Z,,,,"I think netrw should have the same colors of the NERDTree plugin. That's possible?
"
256,"No longer using uuid, using incremented number instead",2013-02-22T14:22:02Z,2013-02-22T14:32:19Z,,,,"Fixes #180
"
255,Powerline Symbols not showing up,2013-02-22T13:36:12Z,2013-02-22T20:27:06Z,,,,"I have tried everything I could find in the docs and everywhere else on the net, I have just not been able to get the symbols along with the segments inside of tmux. See attached screenshot for reference :
![Screenshot from 2013-02-22 18:51:51](https://f.cloud.github.com/assets/88258/184929/d632261e-7cf2-11e2-86d8-06c738d26986.png)

`powerline tmux right` returns the correct stuff and I see the symbols in the terminal, I am using the patched font, mind you I have this up and running in vim.

I have tried tmux inside gnome-terminal and also under guake. Please help!
"
254,Problem with MacVim,2013-02-22T10:30:38Z,2014-01-17T22:26:40Z,"c:installation, s:invalid, t:bug",,,"I am trying to use powerline with MacVim (from homebrew). I had successfully got it working about a month (or more) ago. However I just pulled the latest changes a few days ago and I get this error - 

```
Error detected while processing function Powerline:
line    3:
E858: Eval did not return a valid python object

```

I have cloned powerline to `~/.powerline` and run `./setup.py build && ./setup.py install --user` (on the master branch)
And the relevant portions of my vimrc file are -

```
""Powerline {
    set rtp+=~/.powerline/powerline/bindings/vim
    set laststatus=2 "" Always display the statusline in all windows
    set noshowmode
    if has('gui_running')
        if has(""gui_gtk2"")
            set guifont=Monaco\ for\ Powerline\ 10
        else
                set guifont=Monaco\ for\ Powerline:h12
        endif
    else
        set t_Co=256
    endif
""}
```

However, I am also using the very same steps on my Linux box, and it seems to be working fine.
"
253,Missing vim segment for rvm,2013-02-22T05:31:02Z,2013-03-22T17:08:19Z,t:enhancement,,,"Hi Lokaltog,

inspite of my initial gripes with the update considering it is not a drop in plugin for vim as a submodule, I am quite happy with how things are at the moment.

Except for 1 thing. Earlier, powerline used to show me %{rvm#statusline()} in the powerline, which tells me the current ruby version being used, however it does not show it anymore.

How can I configure / fix this ? I will have a look at the code to try and figure it out but wanted your help if you already knew about this.
"
252,1 advice and 2 issues,2013-02-22T05:13:49Z,2014-07-12T10:35:10Z,"c:common segments, c:configuration, s:invalid, t:bug",,,"Advice:
Don't add network module into config as default.
It have no content on right in tmux when I firstly installed Powerline because my network is down. So I think the Powerline has some bugs, don't fit me. Please remove network module from default configuration.

Issue:
- I add ""user"" module into my tmux, but it raise error. I find it is not in groups in colorschemess/tmux/default.json.  
- Powerline are not working with python2.6. It  have one issue on ""segments/common.py"". All are right after fix it.

It is my fix below:

```

diff --git a/powerline/config_files/colorschemes/tmux/default.json b/powerline/config_files/colors
index d701c78..3c16b52 100644
--- a/powerline/config_files/colorschemes/tmux/default.json
+++ b/powerline/config_files/colorschemes/tmux/default.json
@@ -41,6 +41,7 @@
                ""time:divider"": { ""fg"": ""gray5"", ""bg"": ""gray2"" },
                ""email_alert"": { ""fg"": ""white"", ""bg"": ""brightred"", ""attr"": [""bold""] },
                ""hostname"": { ""fg"": ""black"", ""bg"": ""gray10"", ""attr"": [""bold""] },
+               ""user"": { ""fg"": ""black"", ""bg"": ""gray10"", ""attr"": [""bold""] },
                ""weather"": { ""fg"": ""gray8"", ""bg"": ""gray0"" },
                ""weather_temp_cold"": { ""fg"": ""weather_temp_cold"", ""bg"": ""gray0"" },
                ""weather_temp_hot"": { ""fg"": ""weather_temp_hot"", ""bg"": ""gray0"" },
diff --git a/powerline/segments/common.py b/powerline/segments/common.py
index 6f458d0..9f2f7fc 100644
--- a/powerline/segments/common.py
+++ b/powerline/segments/common.py
@@ -548,7 +548,7 @@ class NowPlayingSegment(object):
                ignore_levels = ('tag', 'set',)
                now_playing = {token[0] if token[0] not in ignore_levels else token[1]:
                        ' '.join(token[1:]) if token[0] not in ignore_levels else
-                       ' '.join(token[2:]) for token in [line.split(' ') for line in now_playing_
+                       ' '.join(token[2:] for token in [line.split(' ') for line in now_playing_s
                state = self._convert_state(now_playing.get('status'))
                return {
                        'state': state,
```
"
251,"Vim: When scrolling Omnicomplete popup, color flickers.",2013-02-21T23:23:09Z,,"c:b:vim, t:bug",,,"When an omnicompletion is opened or you move in the menu, the bar quickly changes between insert and normal mode, which produces an annoying flickering.
It only happens in the window where the popup is open and its preview window.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051196-vim-when-scrolling-omnicomplete-popup-color-flickers?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
250,powerline makes vim's inital start-up screen vanish,2013-02-21T23:04:51Z,2014-08-15T14:20:54Z,"c:b:vim, t:bug",,,"The page that vim shows when starting, shows briefly (along with a 0 in the statusline, #243) and then, powerline shows up and this screen vanishes.
Probably has to do powerline redrawing the screen.
It's not really that important, but I actually kind of liked seeing that screen...
"
249,powerline makes vim's inital start-up screen vanish,2013-02-21T23:04:28Z,2013-02-21T23:12:21Z,,,,"The page that vim shows when starting, shows briefly (along with a 0 in the statusline, #243) and then, powerline shows up and this screen vanishes.
Probably has to do powerline redrawing the screen.
It's not really that important, but I actually kind of liked that screen...
"
248,Can't set options for ^V (visual block) vim mode in colorschemes,2013-02-21T22:47:58Z,2013-02-21T23:29:36Z,s:duplicate,,,"In the mode sections of the colorshemes, I just can't match the visual block mode.
I tried ""^V"", ""^v"", even ""^V"" (that is, the actual control character), but I nothing worked.
Am I doing something wrong, or is it a bug?
"
247,50_pyeval,2013-02-21T18:04:10Z,2013-02-22T14:46:56Z,,,,"Hello, my configurator:
###### vim --version

```
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled May  4 2012 04:22:36)
Included patches: 1-429
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by buildd@
Huge version with GTK2-GNOME GUI.  Features included (+) or not (-):
+python, etc...
```

It stopped working when I downloaded that commit: ""b347d53b6d9f6cede4fab7ba6ae5f2af8d077c27""

Powerline worked at this commit: [ea56f4c26b136418b19aa921d2940812e0d83a7c](https://github.com/Lokaltog/powerline/commit/ea56f4c26b136418b19aa921d2940812e0d83a7c)
###### Screens

![Powerline part1](http://img844.imageshack.us/img844/443/binbash005.png)
![Powerline part2](http://img339.imageshack.us/img339/3949/binbash006.png)
"
246,Strange behaviour with several splits open (some of them from shell),2013-02-21T16:11:04Z,2013-02-21T16:19:04Z,s:duplicate,,,"Hi!

First of all, thanks! It's a pretty cool enhancement for vim :)

The problem is this:
1. I open a file with mvim (yes, MacVim): `mvim X`
2. On MacVim I open 2 more splits: `vsplit Y` & `vsplit Z`
3. What I get is the following image:

![Screen Shot 2013-02-21 at 16 05 50](https://f.cloud.github.com/assets/205176/180911/51ac0d9e-7c41-11e2-9ed1-cf05edeccca5.png)

When I am on Z the other 2 splits are not showing the proper information. If I click on them the powerline is ok.

Another strange thing is for example, if I am in insert mode in X (blue powerline) and I move to Z, Z moves from grey color to blue color, but X continue being blue too.
"
245,error loading powerline in vim,2013-02-21T04:48:13Z,2013-02-21T06:54:11Z,,,,"```
Error detected while processing function PowerlineNew..Powerline:
line    3:
E858: Eval did not return a valid python object
```

I get this error twice, have to hit Enter a total of three times, and powerline no longer loads. This seems to be related to code changes in recent days, but I have no idea which changes might have caused this.

I recently switched from pathogen to vundle, and I switched from the vim-fugitive statusline to powerline. It was all working until I sync'd my powerline repo.

I am not sure what info would be helpful to debug this, so ...

```
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Feb 18 2013 10:07:26)
MacOS X (unix) version
Included patches: 1-822
Compiled by willkd9@DNVCOML-6GJDKQ4
Huge version without GUI.  Features included (+) or not (-):
+arabic +autocmd -balloon_eval -browse ++builtin_terms +byte_offset +cindent -clientserver +clipboard +cmdline_compl
+cmdline_hist +cmdline_info +comments +conceal +cryptv -cscope +cursorbind +cursorshape +dialog_con +diff +digraphs
-dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path +find_in_path +float +folding -footer
+fork() -gettext -hangul_input +iconv +insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent
+listcmds +localmap -lua +menu +mksession +modify_fname +mouse -mouseshape +mouse_dec -mouse_gpm -mouse_jsbterm
+mouse_netterm +mouse_sgr -mouse_sysmouse +mouse_urxvt +mouse_xterm +multi_byte +multi_lang -mzscheme +netbeans_intg
+path_extra -perl +persistent_undo +postscript +printer +profile +python -python3 +quickfix +reltime +rightleft -ruby
+scrollbind +signs +smartindent -sniff +startuptime +statusline -sun_workshop +syntax +tag_binary +tag_old_static
-tag_any_white -tcl +terminfo +termresponse +textobjects +title -toolbar +user_commands +vertsplit +virtualedit +visual
 +visualextra +viminfo +vreplace +wildignore +wildmenu +windows +writebackup -X11 -xfontset -xim -xsmp -xterm_clipboard
 -xterm_save
   system vimrc file: ""$VIM/vimrc""
     user vimrc file: ""$HOME/.vimrc""
      user exrc file: ""$HOME/.exrc""
  fall-back for $VIM: ""/usr/local/share/vim""
Compilation:
gcc -c -I. -Iproto -DHAVE_CONFIG_H   -DMACOS_X_UNIX -no-cpp-precomp  -g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1
Linking: gcc   -L/usr/local/lib -o vim        -lm -lncurses  -liconv -framework Cocoa    -framework Python
```

my ~/.vim/bundles.vim

```
set nocompatible                  "" Must come first because it changes other options.

set modelines=0                   "" prevent some security exploits
set nomodeline

filetype off                      "" required for vundle to load properly
set rtp+=~/.vim/vundlebundle/
call vundle#rc()
let g:vundle_default_git_proto = 'git'

"" load bundles, vundle first
Bundle 'gmarik/vundle'
"" core
Bundle 'ciaranm/securemodelines'
Bundle 'kien/ctrlp.vim'
"" possibly as good / better than ctrlp with faster startup time, but doesn't
"" load correctly :(
"" Bundle 'lycosaexplorer'
Bundle 'tomtom/tcomment_vim'
Bundle 'tpope/vim-vividchalk'
Bundle 'tpope/vim-fugitive'
"" langs
Bundle 'fsouza/go.vim'
Bundle 'rogerz/vim-json'
Bundle 'cakebaker/scss-syntax.vim'
Bundle 'groenewege/vim-less'
Bundle 'kchmck/vim-coffee-script'
Bundle 'tpope/vim-markdown'
Bundle 'jimenezrick/vimerl'
Bundle 'kelan/gyp.vim'
Bundle 'rodjek/vim-puppet'
Bundle 'mikelue/vim-maven-plugin'
"" other
Bundle 'tpope/vim-endwise'
Bundle 'tpope/vim-unimpaired'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-ragtag'
Bundle 'reinh/vim-makegreen'
"" Bundle 'Valloric/YouCompleteMe'
Bundle 'scrooloose/nerdtree'
"" Bundle 'tristen/vim-sparkup'
Bundle 'majutsushi/tagbar'
"" deprecated in favor of SirVer/ultisnips
"" Bundle 'garbas/vim-snipmate'
"" ultisnips breaks <c-k> key map for digraphs
"" Bundle 'SirVer/ultisnips'
Bundle 'ervandew/supertab'
"" b0rk'd on install, but seems to work after that
Bundle 'scrooloose/syntastic'
Bundle 'othree/xml.vim'
"" loading from vim-scripts repo
Bundle 'closetag.vim'
Bundle 'a.vim'

filetype plugin indent on         "" Turn on file type detection.
                                  "" also required for vundle to load properly
```

my .vimrc

```
"" Vundle and bundles configuration
source ~/.vim/bundles.vim

"" powerline features
set rtp+=~/dev/git/powerline/powerline/bindings/vim
set noshowmode

syntax enable                     "" turn on syntax highlighting

runtime macros/matchit.vim        "" Load the matchit plugin.

set encoding=utf-8                "" flexible encoding

"" set showcmd                       "" Display incomplete commands.
"" set showmode                      "" Display the mode you're in.

set backspace=indent,eol,start    "" Intuitive backspacing.

set hidden                        "" Handle multiple buffers better.

set wildmenu                      "" Enhanced command line completion.
set wildmode=list:longest         "" Complete files like a shell.
"" common ignores, useful for ctrlp
set wildignore+=*/tmp/*,*.so,*.dylib,*.o,*.swp,*.class,*.zip,*.gz,*.bz2,\.DS_Store,*.jar,*.war,*.ear,*.exe,*.dll,*.pyc,*.beam

set ignorecase                    "" Case-insensitive searching.
set smartcase                     "" But case-sensitive if expression contains a capital letter.

"" set number                        "" Show line numbers.
"" set relativenumber                "" line numbers are distance from current line rather than absolute
"" set ruler                         "" Show cursor position.
set ttyfast                       "" no idea what this does (yet)

set incsearch                     "" Highlight matches as you type.
set hlsearch                      "" Highlight matches.

"" set wrap                        "" Turn on line wrapping.
set nowrap                        "" turn off line wrap
set scrolloff=3                   "" Show 3 lines of context around the cursor.

set title                         "" Set the terminal's title

set visualbell                    "" No beeping.

set nobackup                      "" Don't make a backup before overwriting a file.
set nowritebackup                 "" And again.
"" set directory=$HOME/.vim/tmp//,.  "" Keep swap files in one location

"" recommended not to touch this?
"" set tabstop=2                     "" Global tab width.
set softtabstop=2                 "" related to above.
set shiftwidth=2                  "" also related.
set expandtab                     "" use spaces instead of tabs

set foldenable                    "" turn on folding
set foldmethod=syntax             "" fold by file type syntax rules
set foldcolumn=1                  "" one column folding info
set foldlevelstart=99             "" all folds expanded on buffer open

colorscheme vividchalk
""set background=dark
""colorscheme solarized

"" add bottom scrollbar and autoselect
"" set guioptions=gmrabLtT

set laststatus=2
"" set statusline=%<%f\%h%m%r%=%-20.(line=%l\ \ col=%c%V\ \ totlin=%L%)\ \ \%h%m%r%=%-40(bytval=0x%B,%n%Y%)\%P
"" set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\%{fugitive#statusline()}%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\%l,%c-%v\ %)%P


"" creates <FILENAME>.un~ containing undo infor
"" set undofile

let mapleader = "",""

set showmatch

"" disable arrow keys
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

"" diable help key which is right next to ESC key
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

"" mapping to create vertical split and switch to it
nnoremap <leader>w <C-w>v<C-w>l


"" TextMate-style invisible character display
"" not friendly on linux console so only have toggle by default
"" set list
nmap <leader>l :set list!<CR>
set listchars=tab:▸\ ,trail:·,eol:¬,nbsp:_

"" TextMate-style 'save on lost focus'
au FocusLost * :wa

"" start NERDTree on startup
"" autocmd vimenter * NERDTree
"" toggle NERDTree with F2
map <F2> :NERDTreeToggle<CR>

"" toggle Tagbar
nmap <F8> :TagbarToggle<CR>

"" Uncomment to use FuzzyFinder
"" if has('ruby')
  "" map <Leader>p :FuzzyFinderTextMate<CR>
"" endif

"" Automatic fold settings for specific file types.
autocmd FileType ruby setlocal foldmethod=syntax
"" assuming css files have the closing curly on last line not new line
autocmd FileType css setlocal foldmethod=indent shiftwidth=2 softtabstop=2
"" use 4 spaces in Java
autocmd FileType java setlocal sw=4 sts=4
"" two spaces, fold by indent for CoffeeScript
autocmd FileType coffee setlocal fdm=indent sw=2 sts=2
"" compile to .js on save
au BufWritePost *.coffee silent CoffeeMake!
"" may Leader-r to run coffeescript code in buffer
autocmd FileType coffee map <Leader>r :CoffeeRun<CR>
"" turn on coffeescript watch window
autocmd FileType coffee map <Leader>v :CoffeeCompile watch vert<CR>
"" turn off coffeescript watch window (need to kill other buffer window)
autocmd FileType coffee map <Leader>u :CoffeeCompile unwatch<CR>
"" xml formatter
autocmd FileType xml,xslt nnoremap <buffer> <Leader>x   :% !xmllint --format % <CR>


"" au filetype html,xml,xsl,eruby source ~/.vim/closetag.vim
autocmd BufNewFile,BufRead COMMIT_EDITMSG set filetype=gitcommit

"" map ronn files to markdown
au BufNewFile,BufRead *.ronn set filetype=markdown sw=2 sts=2

"" For the MakeGreen plugin and Ruby RSpec. Uncomment to use.
autocmd BufNewFile,BufRead *_spec.rb compiler rspec

"" format JSON
if has('python')
  map <Leader>j !python -m json.tool<CR>
endif

"" tagbar settings
"" let g:tagbar_autoclose = 1
let g:tagbar_autofocus = 1

"" ctrlp settings
let g:ctrlp_dotfiles = 0
let g:ctrlp_match_window_bottom = 0

"" syntastic settings
let g:syntastic_python_checkers=['flake8']

"" maven settings
if !hasmapto(""maven#switch-unittest-file"", ""in"")
  imap <silent> <F6> maven#switch-unittest-file
  nmap <silent> <F6> maven#switch-unittest-file
endif
if !hasmapto(""maven#run-unittest"", ""in"")
  imap <silent> <F5> maven#run-unittest
  nmap <silent> <F5> maven#run-unittest
endif
```
"
244,Make powerline look like old powerline,2013-02-20T23:53:13Z,2013-02-21T00:00:39Z,,,,"It's not exactly clear through the documentation on how to make a good looking powerline config without using the patched fonts. Is there a way to config powerline to look more like the following image rather than how it currently looks?
![Screen Shot 2013-02-20 at 5 52 39 PM](https://f.cloud.github.com/assets/342554/178435/a3844e62-7bb8-11e2-9da3-aa07d0aa1beb.png)
"
243,Fixed &stl reset to global value when new file is loaded,2013-02-20T17:03:44Z,2013-02-21T18:27:37Z,,,,"Fixes #241
Ref #240
"
242,Better PEP8 compliance,2013-02-20T11:41:19Z,2013-02-20T12:48:33Z,,,,"[PEP8](http://www.python.org/dev/peps/pep-0008/)

Note that most of the errors relate to using tabs instead of (4) spaces:

> For new projects, spaces-only are strongly recommended over tabs.

Also these are just guidelines, it's ultimately your project:

> A style guide is about consistency. Consistency with this style guide is important. Consistency within a project is more important. Consistency within one module or function is most important.
> 
> But most importantly: know when to be inconsistent -- sometimes the style guide just doesn't apply. When in doubt, use your best judgment. Look at other examples and decide what looks best.

I open this issue mostly because my Vim (with Syntastic) pukes all over your code :/

![Screen Shot 2013-02-20 at 12 38 38 ](https://f.cloud.github.com/assets/177685/175627/29da2d4a-7b52-11e2-846d-e954232ae757.png)

```
$ flake8 . | cut -d ':' -f 4 | sed -E 's/ \(.+\)//' | sort | uniq -c

   1  E101 indentation contains mixed spaces and tabs
  56  E121 continuation line indentation is not a multiple of four
  61  E122 continuation line missing indentation or outdented
  35  E123 closing bracket does not match indentation of opening bracket's line
  18  E128 continuation line under-indented for visual indent
  34  E202 whitespace before ')'
   2  E203 whitespace before '
  48  E261 at least two spaces before inline comment
  10  E262 inline comment should start with '# '
   1  E302 expected 2 blank lines, found 0
   2  E302 expected 2 blank lines, found 1
 144  E501 line too long
   1  E502 the backslash is redundant between brackets
1835  W191 indentation contains tabs
   1  W291 trailing whitespace
```
"
241,Vim: Powerline stays active in two windows,2013-02-20T10:08:02Z,2013-02-21T18:27:29Z,t:bug,,,"Sometimes Powerline is active in two vim windows at the same time. There are several ways to make this happen.

**Variant A**
- Open vim
- Open a vertical split window (`:vsplit` or `CTRL-W_v`)
- Load some file in the left window (e.g. `:edit ~/.vimrc`)
- Switch to the right window (`CTRL-W_l`)

**Variant B**
- Open vim
- Open a vertical split window (`:vsplit` or `CTRL-W_v`)
- Load some file (e.g. `:edit ~/.vimrc`)
- Make the left window the only one (`:only` or `CTRL-W_o`)
- _Everything is OK up to here_
- Open a vertical split window again (`:vsplit` or `CTRL-W_v`)

In Variant B the Powerline of the right window does not only stay active, but also (periodically) updates with the information of the left window.

This happens in other situations as well. I noticed it a couple of times while working with vim. These are the only cases that I really tried to track down precisely. In general having more than one window that shows the same buffer tends to confuse Powerline, but it's not restricted to that.

Also note that while I could reproduce this behaviour most of the time, sometimes it does not happen. I tried to choose examples that _work_ most of the time.

I guess that issue #240 might be caused by the same bug.
"
240,Vim: Issues with the quickfix window,2013-02-20T09:52:20Z,2013-02-21T18:39:27Z,t:bug,,,"When using more than one window and the quickfix window Powerline displays the status bar of the quickfix window in one of the windows.

Steps to reproduce:
- Open vim
- Load some file (e.g. `:edit ~/.vimrc`)
- Open a vertical split window (`:vsplit` or `CTRL-W_v`)
- Open the quickfix window (`:copen`)

The status bar of the right window then stays _active_ and displays the content of the quickfix window (for instance filetype ""qf""). The status bar is correct if the window has the focus, but gets the wrong content when the quickfix window is entered again (just cycle through the windows, then the change is obvious).

I just noticed that this does not happen every time, however I just discovered another bug, that might well be the cause for this behaviour. I'll open a separate issue and reference it here.
"
239,Fixed problem with wrong window ID or winnr after some window operations,2013-02-19T20:28:41Z,2013-02-20T06:35:28Z,,,,"Removed autocommands as well. Powerline() function is now responsible both for 
displaying powerline and for updating statuslines. No “cmdwin events not 
triggered” workaround nonsense anymore.

Fixes #237
Fixes #236
Fixes #222
Fixes #232
"
238,Handle non-existant CWDs gracefully,2013-02-19T20:21:09Z,2013-02-20T06:39:18Z,,OSError,OSError: [Errno 2] No such file or directory,"This fixes the scenario when user changes directory somewhere into a Mercurial repo, removes the last file there, Mercurial nukes the entire file and powerline spams exceptions.

Instead of spamming exceptions and causing confusion, this change makes powerline output [not found] as current working directory. I believe that this is strictly better, RFC though :-)

This is the exception that gets raised and is never handled:

```
Traceback (most recent call last):
  File ""/home/mpreisle/.local/bin/powerline"", line 37, in <module>
    rendered = powerline.renderer.render(width=args.width, side=args.side)
  File ""/home/mpreisle/.local/lib/python2.7/site-packages/powerline/renderer.py"", line 45, in render
    segments = [segment for segment in segments\
  File ""/home/mpreisle/.local/lib/python2.7/site-packages/powerline/theme.py"", line 66, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""/home/mpreisle/.local/lib/python2.7/site-packages/powerline/segments/common.py"", line 55, in cwd
    cwd = os.getcwdu()
OSError: [Errno 2] No such file or directory
```
"
237,Vim: Using :only crashes powerline,2013-02-19T18:59:31Z,2013-02-20T06:35:11Z,,IndexError,IndexError: no such window,"If there are multiple windows in vim and the `:only` command is used in a window other than the top-left one powerline crashes.

Steps to reproduce:
- Open vim
- Open a vertical split window (`:vsplit` or `CTRL-W_v`)
- Switch to the right window (`CTRL-w_l`)
- Make this the only window (`:only` or `CTRL-W_o`)

The error also occurs for other window configurations, this is just the simplest example. Curiously closing the left window (with the same result as making the right the only one) is no problem.

The error message is

```
Error detected while processing function Powerline..<SNR>16_pyeval:
line    1:
Traceback (most recent call last):
Error detected while processing function Powerline..<SNR>16_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>16_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>16_pyeval:
line    1:
  File ""~/.vim/bundle/powerline/powerline/renderers/vim.py"", line 36, in render
Error detected while processing function Powerline..<SNR>16_pyeval:
line    1:
    'window': vim.windows[winnr - 1],
Error detected while processing function Powerline..<SNR>16_pyeval:
line    1:
IndexError: no such window
```

Using `:only` to close vimdiff is a common usage pattern in vim-fugitive, so I guess that #222 is really caused by the error described here.
"
236,IndexError: no such window when using buffergator plugin,2013-02-19T13:59:50Z,2013-02-20T06:35:11Z,s:duplicate,,,"I use the buffergator plugin for vim (https://github.com/jeetsukumaran/vim-buffergator). When I close the buffergator window with ""q"" I get the following error:

```
Error detected while processing function Powerline..<SNR>68_pyeval:                                                     

Traceback (most recent call last):                                                                                      
  File ""<string>"", line 1, in <module>                                                                                  
  File ""/home/kai/.local/lib/python2.7/site-packages/powerline/renderers/vim.py"", line 36, in render                    
    'window': vim.windows[winnr - 1],     
    IndexError: no such window                                                                   
```
"
235,Still getting R6034 errors in Windows 8 64-bit,2013-02-18T22:13:17Z,2015-08-03T04:05:34Z,"c:VCS support, e:windows, t:bug",,,"I followed the directions in the closed issue with a similar problem and built pygit2 and libgit2, both as 32-bit libraries to work with my 32-bit version of vim and python.  I have tested pygit2 by making git repositories within python.  After the startup error, I get the non-fancy version of powerline on my statusline, however when going into a git directory, vim crashes outright. 

This is the startup error:

Microsoft Visual C++ Runtime Library

Runtime Error!

Program: C:\Program Files (x86)\vim\vim73\gvim.exe

R6034

An application has made an attempt to load the C runtime library incorrectly.
Please contact the application's support team for more information.
"
234,Reworked config,2013-02-18T19:52:04Z,2013-02-24T21:25:00Z,,,,"Changes:
- Removed useless Segment and Matcher classes that were used solely for their .get() method.
- Added ability to specify some segment keys in top theme. Ref #3 (it is the problem I expressed in comment there: segments will be inconsistent in themes added by `add_local_theme`).
- Added ability to override configuration options (via vim variables or command-line keys). Ref #231.
- Reworked top-level Powerline class: moved a big bunch of capabilities out of it, moving them to child classes. Ref #141 (I think that calling matcher just to check strings for equality while we can use `__getitem__` is weird, thus making it possible to override `get_local_themes` in upcoming IpythonPowerline subclass. More changes are needed though to support #141).

TODO:
- [x] Split colorschemes into color definition file (one for all colorschemes, defined in `config.json`/`common`) and colorscheme itself.
- [x] Gradients should be special things: defined in new color definition file, in a gradients dictionary.
- [x] Ignore `highlight_group` key for function segments completely. #215
- [x] Do something with `divider_highlight_group`. #215
- [x] Add ipython overrides.
- [x] Remove non-colors from color definition file.
"
233,WIP: Reworked config,2013-02-18T16:25:07Z,2013-02-18T18:39:16Z,,,,"Changes:
- Removed useless Segment and Matcher classes that were used solely for their .get() method.
- Added ability to specify some segment keys in top theme. Ref #3 (it is the problem I expressed in comment there: segments will be inconsistent in themes added by `add_local_theme`).
- Added ability to override configuration options (via vim variables or command-line keys). Ref #231.
- Reworked top-level Powerline class: moved a big bunch of capabilities out of it, moving them to child classes. Ref #141 (I think that calling matcher just to check strings for equality while we can use `__getitem__` is weird, thus making it possible to override `get_local_themes` in upcoming IpythonPowerline subclass. More changes are needed though to support #141).

More testing is needed, overrides should be added at least to ipython (to anything that may be launched in different terminals on one system. Ipython, vim, shells may. Awesome may not thus it does not need overrides). To make overrides more usable all non-ASCII symbols should be moved to `segment_data` key of the default theme.
"
232,Bizarre Syntastic Error,2013-02-18T07:35:38Z,2013-02-20T06:35:11Z,t:bug,,,"I am getting a difficult to reproduce Syntastic error.

I have Syntastic setup to validate on save, and after doing so, if it finds any issues, it pops up the loclist.

Often times, a ton of errors can be generated by one simple syntax error. If I correct that mistake, and save again (meaning there are no longer any errors that Syntastic finds) it will remove the loclist and I continue editing as normal.

However, sometimes on that save that has no more Syntastic checked errors, I get a very bizarre error that then causes Powerline to 'crash'. Moving to a different buffer and returning will fix powerline. I have attached an image with the output I get from Powerline.

![herpderp2](https://f.cloud.github.com/assets/83376/166400/c3bc2370-799d-11e2-911e-c8d14fa3aa8a.png)

As stated earlier, it seems like SOMETIMES it happens, sometimes it doesn't, leading me to believe there could be a race condition in there somewhere? 
"
231,Allow for separate dividers in MacVim and terminal vim,2013-02-17T20:50:43Z,2013-02-18T18:39:15Z,,,,"In the old Powerline I had the following in my .vimrc:

```
if has('gui_running')                                                          
    let g:Powerline_symbols = 'fancy'                                          
else                                                                           
    let g:Powerline_symbols = 'compatible'                                     
end                                                                            
```

This was great because my Terminal doesn't have a patched font (as there's no prebuilt patched Monaco and I can't get fontforge to install). MacVim does use a patched font though.

Unfortunately in the new Powerline I don't see any way to replicate this functionality. The dividers are now controlled by a JSON file that doesn't know if I'm in MacVim or terminal vim.
"
230,Powerline loses colors,2013-02-17T12:35:35Z,2014-08-02T23:40:28Z,"c:b:vim, t:bug",,,"Hello there,

After some time without updating I've run BundleUpdate today and to my surprise Powerline stopped having colors like so: ![black-n-white-powerline](https://f.cloud.github.com/assets/2212681/164924/543ba61e-78fe-11e2-95d9-38b54d606734.png)

I could get the colors by sourcing my vimrc but once I edited a new file or saved one the colors would disappear. It's all white on black.

I have no idea what might be causing this.

I use jellybeans colorscheme if that might be relevant.

Here is my vimrc: http://pastebin.com/kr9AuYgJ
"
229,Vim segfault at launch (since commit ),2013-02-16T12:47:27Z,2013-02-18T08:00:53Z,,,,"Since few days, on my Mageia, vim segfault when I launch it.

```
[shad@azrael ~]$ vim 
Vim : Signal mortel SEGV intercepté
Vim : Fini.
Erreur de segmentation
```

If I comment the line:

``` vim
set rtp+=/home/shad/extern/powerline/powerline/bindings/vim
```

it works fine.
I tried to rewind the git history and as soon as I go before the commit 
SHA: 8b8de32be90f69a992bbff818c6898893393aa4e (Improve vim plugin loading)
vim launch without problems.

On my Mageia, these vim packages are installed
vim-common-7.3.762-4.mga3 (x86_64)
vim-enhanced-7.3.762-4.mga3 (x86_64)
"
228,Fixed icon_names for unknown weather code,2013-02-15T22:12:58Z,2013-02-18T07:58:40Z,,,,
227,Use git status --ignored,2013-02-15T22:06:42Z,2013-02-18T18:39:16Z,,,,"Requires more recent git (at least 1.7.2).
"
226,Made spaces around the divider configurable,2013-02-15T21:49:00Z,2013-02-18T07:58:14Z,,,,"Fixes #225
"
225,Is there a way to reduce the segment to just the arrow?,2013-02-15T21:10:54Z,2013-02-18T07:58:02Z,,,,"![screenshot-20130215 220710](https://f.cloud.github.com/assets/40204/162320/1231c668-77b4-11e2-8ea3-9df32b17b3b0.png)
![screenshot-20130215 220719](https://f.cloud.github.com/assets/40204/162322/157c084c-77b4-11e2-99ad-4a68481f6e02.png)

The second (lighter) space seems to be removable and not part of the arrow, is there a way to remove it without having to change the renderer?

EDIT: it's like there's an additional `after` containing the space, setting the `after` to `""""` doesn't fix that either, it would be nice if there was a way to tell it to ignore that space too.
"
224,Ease E858/E860 errors debugging,2013-02-15T17:08:08Z,2013-02-18T07:58:02Z,,,,"Added an option that makes obtaining stack trace not require patching `powerline.vim` or vim itself.
"
223,Purge cache on BufWrite,2013-02-15T16:15:37Z,2013-02-18T07:58:23Z,,,,"Instead of much simpler solution define an API that may be used for anybody
willing to add cache purging on events with a few keystrokes
"
222,"""E858: Eval did not return a valid python object"" when closing fugitive diff",2013-02-15T15:42:26Z,2013-02-20T06:35:11Z,,,,"I am getting an error when closing a fugitive diff view:

```
Error detected while processing function Powerline:
line    1:
E858: Eval did not return a valid python object
Press ENTER or type command to continue
```

This is the function I am using: https://github.com/blueyed/dotfiles/blob/master/vimrc#L1070

I am using df7d0f2, with any local changes stashed. (is there a powerline cache still, like before?)

I am not sure, if this is related, but after some other errors related to autocommands, I am getting ""0"" echoed.

The full output in `:messages` is:

```
Error detected while processing function Powerline:
line    1:
E858: Eval did not return a valid python object
Error detected while processing FocusGained Auto commands for ""*"":
E523: Not allowed here: checktime
Error detected while processing FocusGained Auto commands for ""*"":
E523: Not allowed here: checktime
Error detected while processing FocusGained Auto commands for ""*"":
E523: Not allowed here: checktime
```
"
221,"Vim: include ""repository_status"" by default",2013-02-15T12:12:06Z,2014-08-24T13:32:28Z,"c:b:vim, t:enhancement",,,"I have tried adding the following in themes/vim/default.json, but it did not work (eval warnings/errors). It's likely that a definition in colorschemes is required for that?!

```
        {
            ""name"": ""repository_status"",
            ""priority"": 60
        },
```

It would be nice to see (by default?), if there are changes in the index and/or if the working directory is dirty.
"
220,Remove 'before' key from file_vcs_status segment,2013-02-15T04:37:09Z,2013-02-15T12:08:10Z,,,,"Fixes #219
"
219,`before` key applies to all subsegments,2013-02-15T04:27:41Z,2013-02-15T12:05:58Z,,,,"It led to having hardcoded `'before'` key into `file_vcs_status` segment code.
"
218,Add options to file_vcs_status,2013-02-14T21:24:54Z,2013-02-15T17:37:38Z,,,,"Added an option to set the string to prepend to the status group and a way to replace the characters being shown in the status (to use some nice unicode symbols).
"
217,file_vcs_status: forced space before it,2013-02-14T18:46:01Z,2013-02-15T12:14:19Z,,,,"Is there a reason to force the before of the vcs_status? I'd like to have the separator and the space just looks odd before it, but it can't be overridden in the theme.
"
216,"Weird issue when entering insert mode (can't reproduce, happens randomly)",2013-02-14T00:06:21Z,2013-02-14T15:22:50Z,,,,"```
Error detected while processing InsertEnter Auto commands for ""*"":
E121: Undefined variable: w:m1

Error detected while processing InsertEnter Auto commands for ""*"":
E116: Invalid arguments for function matchdelete
```
"
215,Inconsistent handling of “highlight_group” key,2013-02-13T19:55:48Z,2013-02-24T21:24:53Z,t:enhancement,,,"For function segments this key may or may not work depending on what segment function returns. This is definitely inconsistent that you may not rely on segment being highlighted with highlight listed in this key. I can suggest the following ways to fix this:
- Ignore this key for function segments completely. This requires least effort to implement.
- If this key is present ignore whatever highlighting segment function returns. It makes this key retain its meaning for function segments and is more consistent with other types of segments.
- Switch the type: from list to dictionary that maps whatever highlight segment function returns (assuming it returned default value if it returned nothing regarding highlight) to whatever user wants to see. It is the only way that really allows user to fully customize colors. Can be merged with the second idea, likely with switching name to `highlight_map`.

I would vote for the first one since I currently saw no reason to add another dimension of customizability. But I am assuming here that current situation (I currently do not see any need in having two different segments with the same highlighting: like `last_status` and `last_pipe_status` or aurum `branch`/`status` and powerline `branch`/`status`) retains.
"
214,Problem with patching Droid Sans Mono Slashed for Powerline,2013-02-13T19:17:39Z,2014-07-27T23:16:52Z,"c:font, t:bug",,,"Hi

I was trying to fix my fav font, but it looks like patched font has a problem with equal sign.
Problem appears when font size is smaller than 13 pt (find the cursor)

_Font size 11_
![font_size_11pt](https://f.cloud.github.com/assets/324215/154109/59703a50-7610-11e2-8b94-2026914dc7a0.png)

_Font size 13_
![font_size_13pt](https://f.cloud.github.com/assets/324215/154110/597446ea-7610-11e2-9ddd-7759aeb4988c.png)

Second thing, no patched font is sharpest

_Origin font_
![DroidSansMonoSlashed](https://f.cloud.github.com/assets/324215/154131/177048a6-7611-11e2-8aba-9b3f2195d9a7.png)

Env:
- macvim Custom Version 7.3 (66) (installed via brew)
- python2.7 Python 2.7.3 (default, Feb 12 2013, 07:06:42)
- fontforge --version fontforge 20120731, libfontforge 20120731
- os x 10.8.2
- origin font http://www.cosmix.org/software/files/DroidSansMonoSlashed.zip
"
213,Powerline bar disappears when sourcing .vimrc and leaves me with a plain statusline,2013-02-13T11:57:51Z,2014-08-02T23:40:28Z,"c:b:vim, s:invalid, t:bug",,,"Before:
![powline_ok](https://f.cloud.github.com/assets/3307295/152715/dfe096da-75d3-11e2-8b93-079398d1e209.png)

After:
![powline_notok](https://f.cloud.github.com/assets/3307295/152719/f52c664a-75d3-11e2-821e-2136dfb97ca4.png)

[My .vimrc](https://github.com/ironhouzi/vimrc/blob/master/.vimrc)
[Output of vim --version](http://pastebin.com/Sc9yceYs)
[My installed plugins](http://pastebin.com/aPUXLgbZ)
"
212,Reworked weather segment,2013-02-13T05:18:54Z,2013-02-13T07:20:37Z,,,,"Allows more precise icon selection and purges out unicode characters from 
configuration

Note: windy icon needs reworking, I used a trigram for it

Fixes #203

And, please, don’t remove alignment. I do not know why your lint tool thinks it is bad, but it would be hard to understand and edit both dictionary and, especially, big tuple without it. It also will not look good.
"
211,Powerline disappears when I source my .vimrc file within vim.,2013-02-13T01:25:27Z,2013-02-13T07:27:56Z,,,,"Running Slackware 14 x86_64 and graphical vim. Apart from this, Powerline seems to be working very well. Please let me know what info you might want to have in order to understand what might be going on.

Edit: this also happens in console vim as well.
"
210,Reworked memoize,2013-02-12T20:00:14Z,2013-02-15T12:07:00Z,,,,"- Removed func.**name** from key (memoize class is not a singletone thus _cache 
  is always new for next decorated function).
- Removed *args: segments are not receiveing any non-keyword arguments so no 
  need to bother with *args at all.
- Replaced additional_cache_key with cache_key: all functions that formerly used 
  additional_cache_key appear not to need initial arguments as cache keys. It 
  also simplifies the code.

Ref #205
Fixes #208
"
209,Split gentoo folder into separate repo & include as submodule. ,2013-02-12T12:27:12Z,2014-01-17T22:33:35Z,t:enhancement,,,"For those of us maintaining our Overlays in git. If you split the gentoo folder so that you have a repo containing just ""app-shells/powerline/*"" then anyone maintaining a Git backed overlay can just add the ebuild via a submodule while keeping track with the current head version. 
"
208,Poor interaction with fugitive,2013-02-12T12:24:46Z,2013-02-15T12:05:58Z,t:bug,IndexError,IndexError: no such window,"I get the following when closing a window that was created with `:Gdiff`. I know fugitive does some magical stuff when closing such a window, so it may not be powerline's ""fault"" that this happens, but here's the bug report nonetheless. :)

The cleaned-up message is:

```
Error detected while processing function Powerline..<SNR>60_pyeval:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""<string>"", line 1, in <module>
  File ""/home/b/.local/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/renderers/vim.py"", line 36, in render
    'window': vim.windows[winnr - 1],
IndexError: no such window
```

As reported by vim:

```
Error detected while processing function Powerline..<SNR>60_pyeval:
line    1:
Traceback (most recent call last):
Error detected while processing function Powerline..<SNR>60_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>60_pyeval:
line    1:
  File ""<string>"", line 1, in <module>
Error detected while processing function Powerline..<SNR>60_pyeval:
line    1:
  File ""/home/b/.local/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/renderers/vim.py"", line 36, in render
Error detected while processing function Powerline..<SNR>60_pyeval:
line    1:
    'window': vim.windows[winnr - 1],
Error detected while processing function Powerline..<SNR>60_pyeval:
line    1:
IndexError: no such window
```
"
207,Feature suggestion: Retain uri elements when truncating filenames,2013-02-12T12:09:37Z,2014-08-03T20:12:22Z,"a:segment, c:b:vim, t:enhancement",,,"The motivating example is fugitive revisions:

![image](https://f.cloud.github.com/assets/538538/148660/7831701c-750c-11e2-8d2d-876028b42b68.png)

Knowing that the buffer was ""special"" in some way would be nice.

This would also be good for netrw:

![image](https://f.cloud.github.com/assets/538538/148659/61da5fa4-750c-11e2-997a-7101f46e0212.png)

Now that I'm thinking about it, it could be a standalone powerline-thingy rather than a part of the filename. I.e. 

```
fugitive  .muttrc
```

rather than, say,

```
fugitive://.../.muttrc 
```
"
206,Color branch based on repo state,2013-02-12T00:13:23Z,2013-03-13T12:56:26Z,,,,"Color the branch in the shell if the repo is modified red and green if not.

This pull will allow the user to customize the branch color in a number of ways.
- Color just the branch symbol

![modified](http://f.cl.ly/items/1X3P1a1W3C2x0a3f3t3n/Screen%20Shot%202013-02-12%20at%201.02.10%20AM.png)

![unmodified](http://f.cl.ly/items/2E0n413c3D021F2u381B/Screen%20Shot%202013-02-12%20at%201.02.55%20AM.png)

``` json
{
    ""module"": ""powerline.segments.shell"",
    ""name"": ""branch_status"",
    ""before"": "" "",
    ""args"": {
      ""with_branch_name"": false
        }
},
{
    ""name"": ""branch"",
    ""draw_divider"": false
}
```
- Color the branch name also

![modified](http://f.cl.ly/items/2l3u1K1I1e1z0Y2D2h1n/Screen%20Shot%202013-02-12%20at%201.04.47%20AM.png)

![unmodified](http://f.cl.ly/items/0J1y1e3C2K120d3y080u/Screen%20Shot%202013-02-12%20at%201.06.37%20AM.png)

``` json
{
    ""module"": ""powerline.segments.shell"",
    ""name"": ""branch_status"",
    ""before"": "" "",
    ""args"": {
      ""with_branch_name"": true
        }
}
```

since `with_branch_name` is optional you can also just do

``` json
{
    ""module"": ""powerline.segments.shell"",
    ""name"": ""branch_status"",
    ""before"": "" ""
}
```
"
205,Remove non-current window caching,2013-02-11T18:13:19Z,2013-02-15T12:07:43Z,,,,"API changes done:
- memoize additional_key function now accepts all function arguments
- get_theme now receives matcher_info
- render now receives segment_info and matcher_info, but segments and themes 
  were removed
- due to very different ways of obtaining column information col_current 
  splitted back to col_current and virtcol_current. The former should be false 
  in case of horizontal scrollbind (when &scrollopt contains hor)
- added requires_segment_info decorator for convenience

Other changes:
- removed all vim function calls that were possible to remove
- removed direct vim.eval calls

Ref #202
"
204,MacVim: New colorscheme borks Powerline colors highlight,2013-02-11T17:17:26Z,2013-02-11T20:22:39Z,,,,"In MacVim (haven't tried on GVim), when I set a new colorscheme, powerline turns into the text BG color with powerline characters in text fg colors No other colors are seen.
Running this on OSX Lion, python2.7 from MacPorts, MacVim from the MacVim website.
![Screen Shot 2013-02-11 at 11 19 12 AM](https://f.cloud.github.com/assets/1553566/145725/5ca60fb2-746f-11e2-8a22-94e014a86651.png)
"
203,Weather condition icons are hard to understand and write,2013-02-11T15:44:38Z,2013-02-13T07:20:13Z,t:enhancement,,,"There should be no UTF characters in JSON configuration as they are harder to write then ASCII ones. In addition, some used icons are hard to understand and I would prefer having a way to customize them (that as well _must_ result in having name => character mapping somewhere so that it would be easier to guess), possibly replacing with text.
"
202,Feature suggestion: use %M instead of literal '+' in non-selected vim windows,2013-02-11T12:35:45Z,2013-02-12T09:47:54Z,t:bug,,,"I know part of the reason for the python port is to minimize the need for % interpolations, but:

I often have two windows open on the same buffer. It is slightly disconcerting to see the buffer-modified flag in one window, but not in the other.

Rather than refresh windows on every single event (redo and undo?!), maybe it would be better to just use %M?
"
201,"gVim (windows) loses focus, crashes",2013-02-11T11:35:02Z,2013-02-11T12:10:25Z,s:duplicate,**NOTE**,**NOTE**: Powerline is invoked through `set rtp+=` instead of using vundle.,"First screenshot:

![ScreenClip](https://f.cloud.github.com/assets/1770521/144830/657f936a-743d-11e2-9c21-d0cb58d67e15.png)

I lose focus every so often. The console window is calling `git` and I wonder why?

Then there's this when I `:e $MYVIMRC`:

![ScreenClip 1 ](https://f.cloud.github.com/assets/1770521/144851/910ea83a-743e-11e2-8229-17bef29ff90d.png)

Reverting to `vim-powerline` solves both problems.
Font is patched `Consolas` (for old `vim-powerline`, doesn't seem to work for new one)

I use:
- gVim 7.3 (with vundle)
- python 2.7.3
- git version 1.8.0.msysgit.0

**NOTE**: Powerline is invoked through `set rtp+=` instead of using vundle.
"
200,Some small changes,2013-02-11T04:44:11Z,2013-02-11T06:16:31Z,,,,"Merged into one PR as they all will produce merge conflicts:
- Purged out constants from classes and lowercased TERM_24BIT option as it is not a constant
- Added support for italic and underline attributes in shell renderer
- Added a way to specify renderer options on command-line
- Added tmux_escape option

Note: the latter may not fix #199 because it may produces gap in place of a border character:

![Gap between ... and directory name](http://img-fotki.yandex.ru/get/6439/9151298.2/0_93b4c_5d9a317f_orig.png)
"
199,Add a way to override configuration options,2013-02-10T17:53:57Z,2013-02-11T06:16:16Z,,,,"Tmux strips unknown escape sequences instead of pass them over to terminal and it does not know about 24-bit color sequences. I think that adding a way to override configuration from the command-line and using special Powerline argument is how this problem should be solved.
"
198,Fixed gentoo ebuild,2013-02-10T08:59:46Z,2013-02-10T12:57:00Z,,,,"Fixed location of powerline.vim file, added more USE flags.
"
197,Clear highlight groups on ColorScheme event,2013-02-10T07:15:54Z,2013-02-10T12:57:26Z,,,,"Closes #196
Fixes #153
Fixes #194
"
196,Highlight groups disappear when switching colorschemes,2013-02-09T23:34:07Z,2013-02-10T12:56:32Z,,,,"It is standard practice for colorschemes to execute `hi clear` -- see $VIMRUNTIME/colors/README.txt.

That means that loading a new colorscheme with `:colorscheme` clears out the Powerline-specific highlighting groups!

I suggest adding a ColorScheme autocmd that reinstates those groups.
"
195,Faster way to check if a git branch is dirty,2013-02-09T20:34:47Z,2014-01-17T22:36:27Z,"c:VCS support, t:bug",,,"I saw this on the .ohmyzsh twitter feed, this could net a performance increase.

https://gist.github.com/sindresorhus/3898739

From what I can tell powerline uses  git status --porcelain which seems to be the second slowest option.
"
194,Colors breaking when .vimrc is sourced.,2013-02-09T20:22:50Z,2013-02-10T12:56:33Z,,,,"When I source my .vimrc, the colors on the powerline disappear. the only way to fix it seems to be to close and reload vim.
![Untitled](https://f.cloud.github.com/assets/2764343/142499/7411af28-72f6-11e2-8291-d4415ddb0382.png)
"
193,Use escape_hl_* variables for prompts deriving from ShellRenderer,2013-02-09T18:24:36Z,2013-02-10T12:57:45Z,,,,"This is faster then super() calls and also more convenient.
Fixes #142 just as well
"
192,Don’t mess with hl()+contents,2013-02-09T18:13:34Z,2013-02-10T13:00:06Z,,,,"What does hl() mean? It looks like “highlight an empty string”, but is actually 
“reset highlight style”. In addition if you are writing “hl()” function for new 
renderer you need to care about “contents” variable (in two places!: None for 
super() call and (contents or u'') after super() call) though function is 
actually doing nothing with it. It is just inconvenient.
"
191,Added auto_rewrite for pre_0_11; fixed position of non-text markers,2013-02-09T17:48:30Z,2013-02-10T12:56:53Z,,,,"Fixes #142
"
190,Incorrect rendering of characters until e/enew,2013-02-09T16:45:05Z,2014-01-23T18:44:41Z,"c:b:vim, c:font, t:bug",,,"[This](https://dl.dropbox.com/u/36785145/Screenshot%20from%202013-02-09%2011%3A39%3A24.png) is what my vim/gvim (it has the same result regardless) looks like on opening.
[This](https://dl.dropbox.com/u/36785145/Screenshot%20from%202013-02-09%2011%3A39%3A33.png) is what it looks like after running e or enew.

I'm not especially complaining, it's not too terribly much of an inconvenience, but I feel like it could eventually become a little too annoying to have to reopen every file to get the characters to render correctly. Can anyone suggest a way to fix this? I've followed the documentation and my system uses UTF-8 only. And as you can see, I've included my vimrc in the pictures. Powerline is working 100% correctly for my zsh shell as a side note.
"
189,Buffer name behavior in vim,2013-02-07T21:28:52Z,2013-02-10T20:46:58Z,t:bug,,,"I searched around in issues to find anything, but didn't succeed. When I have multiple files and splits open in vim, only the name of the active buffer is displayed in powerline in all splits, not just the respective buffer name in each powerline within the splits. It'd be much better to have whatever the buffer is.

Otherwise, really enjoying the new powerline! :)
"
188,Added note about zpython branch,2013-02-07T17:59:03Z,2013-02-08T13:45:16Z,,,,"TODO: to be removed after (if) zsh maintainers accept the patch
Ref #104
"
187,ZSH command not found: powerline,2013-02-07T15:29:50Z,2013-02-07T15:46:00Z,s:invalid,,,"source /home/yaro/.local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
zsh: command not found: powerline  
zsh: command not found: powerline
editor-info:23: command not found: powerline
editor-info:23: command not found: powerline

It works fine in vim, but not in zsh.

I used:
pip install --user git+git://github.com/Lokaltog/powerline
to install it.
"
186,"Bash Powerline not showing git branch info, but vi is working correctly.",2013-02-07T01:39:03Z,2013-02-07T10:25:48Z,"c:b:shell, s:invalid:configuration error, t:bug",,,"![Screen Shot 2013-02-06 at 5 35 17 PM](https://f.cloud.github.com/assets/1153820/134213/ab25f820-70c6-11e2-95cf-d6284069d9c4.png)
but if I do vi set.py I do see git branch info
![Screen Shot 2013-02-06 at 5 36 12 PM](https://f.cloud.github.com/assets/1153820/134217/cc68cfee-70c6-11e2-926f-2f78a0107ea8.png)

in my vimrc i have the following
. /Users/felix/Personalization/powerline/powerline/bindings/bash/powerline.sh

running iterm2 1.0.0.20130204-nightly on OSX 10.8.2

also if someone can tell me how to add server info to my prompt that would be great. 
"
185,Proper upgrading instructions?,2013-02-06T13:14:14Z,2013-02-08T13:48:18Z,,,,"Might be useful to document how to upgrade the plugin. I'm not sure if I'm doing it correctly. Do I have to pass the `--upgrade` switch to pip?

`pip install --upgrade --user git+git://github.com/Lokaltog/powerline` ?
"
184,Powerline conks out after opening the command-line-window in vim,2013-02-06T11:40:46Z,2013-02-06T12:26:14Z,t:bug,,,":he cmdwin

Steps to duplicate:
1. Start vim
2. Open the cmdline window with `q:`
3. Close the cmdline window by executing a command or `<C-c>`
4. Notice that powerline is now frozen in time
"
183,"""Segment"" or ""widget""",2013-02-06T07:43:03Z,2013-02-06T17:51:42Z,t:question,,,"This is a bit late, I know, but I've gotten the impression that ""widgets"" could be more descriptive for what is currently called ""segments"" in the plugin. What do you guys think?
"
182,Create Tips & Tricks section in the docs,2013-02-06T07:38:34Z,2013-02-07T11:33:04Z,"c:documentation, t:enhancement",,,"This section can include stuff like the fast-escape fix for vim, useful configuration options, etc.
"
181,Create proper support for Vundle and Pathogen,2013-02-06T07:37:23Z,2013-02-07T11:14:55Z,t:enhancement,,,"The community [seems to agree](http://www.reddit.com/r/vim/comments/17xgtj/powerline_statusline_plugin_python_port_request/) that vundle/pathogen support is essential for the plugin, so we should find a good way of including official support for plugin managers.
"
180,"MacVim, Python and Homebrew",2013-02-06T07:18:10Z,2013-02-22T14:32:12Z,"c:b:vim, e:macos, t:bug",,,"I've recently installed Powerline for Vim and I kept getting an error during start-up """"E858: Eval did not return a valid python object"", which is basically the same problem as reported in issue #50. After digging a bit, it looked like there was a problem when doing ""import random"" for a Homebrew-based Python.

Because I haven't dabbled with Python more than the generic ""hello, world"" program, I removed Python from Homebrew and installed Powerline for the Mac OS X Python:

```
brew remove python
sudo easy_install pip
sudo pip install powerline
```

After that, everything worked.

Maybe this might help somebody else or a solution might be found and added to the documentation.
"
179,Properly escape color codes in bash,2013-02-06T04:35:21Z,2013-02-06T08:16:54Z,,,,"Closes #177
"
178,Fix IMAP segment,2013-02-06T04:17:48Z,2013-02-06T08:16:54Z,,,,"I needed these changes to get the imap email segment working. I was getting AttributeError's in several places before. This works fine with gmail (which is the default) on 3 of my accounts. Also I return just the unread_count vs the hash. Not sure the best practice there but it seemed overkill to hard code the highlight group.
"
177,Escape powerline output to avoid wrapping in console,2013-02-06T04:13:45Z,2013-02-06T04:38:13Z,,,,"Not sure if this is the best way but it is the only way I could get it to work. I use tmux and have a lot of smaller terminals which were behaving fairly ugly when using powerline due to it not escaping non-printing characters.
"
176,Escape powerline output to avoid wrapping in console,2013-02-06T04:05:25Z,2013-02-06T04:14:24Z,,,,"Not sure if this is the best way but it is the only way I could get it to work. I use tmux and have a lot of smaller terminals which were behaving fairly ugly when using powerline due to it not escaping non-printing characters.
"
175,'tmux right' causes a ValueError,2013-02-05T20:23:33Z,2013-02-07T12:48:56Z,t:bug,ValueError,ValueError: math domain error,"To reproduce,
1. Install powerline with pip
2. Run ""powerline tmux right""

The following occurs:

```
$ powerline tmux right
Traceback (most recent call last):
  File ""/home/b/.local/bin/powerline"", line 25, in <module>
    rendered = powerline.renderer.render(width=args.width, side=args.side)
  File ""/home/b/.local/lib/python2.7/site-packages/powerline/renderer.py"", line 48, in render
    segments = [segment for segment in segments\
  File ""/home/b/.local/lib/python2.7/site-packages/powerline/theme.py"", line 57, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""/home/b/.local/lib/python2.7/site-packages/powerline/segments/common.py"", line 226, in network_load
    rx_diff=humanize_bytes((b2[0] - b1[0]) / measure_interval, suffix, binary_prefix).rjust(8),
  File ""/home/b/.local/lib/python2.7/site-packages/powerline/lib/humanize_bytes.py"", line 15, in humanize_bytes
    exponent = min(int(log(num, div)), len(unit_list) - 1)
ValueError: math domain error
```
"
174,"Fixed repo.status() functions, added repository_status vim segment",2013-02-05T19:56:36Z,2013-02-06T08:18:36Z,,,,"Note: colors for repository_status segment are missing
Ref #173
"
173,Dirty project indicator,2013-02-05T18:41:52Z,2013-02-08T15:22:18Z,,,,"I use `vim-powerline` plugin to customize the vim status line. As of now, the status line displays a `+` when the current buffer is modified. When I switch to an un-modified buffer I can no longer tell if there is a modified buffer in the project. Currently, I use the `:files` or `:buffers` command to locate the modified buffers.

Is it possible to customize the status line to display an indicator when there is a modified file in the buffers(even when the buffer is not current).
"
172,encode location_query with UTF-8,2013-02-05T16:52:06Z,2013-02-06T08:16:54Z,,,,"……so names with non-ASCII characters will properly be queried.
"
171,Network load should use wlan,2013-02-05T14:05:04Z,2013-02-11T12:46:00Z,,,,"This is more an enhancement than a bug.
In Tmux the network load segment (seems to) always get data from the lan network. Problem arises cause I'm always using wifi.
An option to switch which network to get info from would be useful.
"
170,Weather info makes tmux blink,2013-02-05T13:44:00Z,2014-08-02T18:37:06Z,"c:common segments, t:bug",,,"As the title suggests, I had to remove the weather segment from the default config for tmux. When it was still enabled, tmux would turn into a black line for five or so seconds and return to normal without showing it.

By the way, the seldom moments weather was shown, it was right. :+1: 
"
169,Make a possibility to define all special chars in config file,2013-02-05T12:26:54Z,2013-02-05T12:36:56Z,s:invalid,,,"divider special chars can be set in config.json
readonly special char can be set in powerline/segments/vim.py
branch special char can be set in theme

I think that making a one place for all of them (and eventually some kind of overriding in theme) could be nice to have.

P.S.:
also having a place for COLNUM/CHARNUM, some percentage signs etc should be there too.
"
168,Multithreading support,2013-02-05T10:54:07Z,2014-08-15T07:13:13Z,"c:core, t:enhancement",,,"IO heavy segments like the segments that use HTTP requests can delay segment rendering quite a bit because they don't run simultaneously. By implementing multithreading this can be avoided for stuff like the WM and tmux statuslines. [aurum appears to have implemented this](https://bitbucket.org/ZyX_I/aurum/src/1289ad6a4df5258b33f0e05663df9c2f049c6beb/python/aurum/repeatedcmd.py?at=default), maybe a similar solution could work here.
"
167,Zsh does not know `powerline` command.,2013-02-04T18:56:52Z,2013-02-04T19:33:25Z,,,,"Hi!

I wanted to see what zsh prompt would look like with Powerline so I tried to install it according to [_zsh prompt_ section in the documentation](http://lokaltog.github.com/powerline/overview.html#zsh-prompt).

I look where the file is located and there it is:

```
-rw-r--r--  1 adrien  staff  823 Feb  4 19:34 /Users/adrien/.vim/bundle/powerline/powerline/bindings/zsh/powerline.zsh
```

But when I source my `.zshrc` file, after adding the following:

```
source $HOME/.vim/bundle/powerline/powerline/bindings/zsh/powerline.zsh
```

I got a warning telling me that `zsh: command not found: powerline`. And it tells me that twice actually.

Any idea about what I am doing wrong?
"
166,"No Fancy Symbols, No Cool Colors.",2013-02-04T18:51:05Z,2013-02-06T10:44:23Z,,,,"Hi!

I attempted to pass to the new Powerline version but it seems I met some trouble.

Here is what I got:

![Powerline statusbar shot](https://f.cloud.github.com/assets/394860/124712/adeb1a4e-6efb-11e2-87c7-2b81cf6836dc.png)

I went through the [documentation to install Powerline on Vim](http://lokaltog.github.com/powerline/overview.html#requirements). I went through the [Troubleshooting section](http://lokaltog.github.com/powerline/installation/osx.html#troubleshooting) and specifically the question ""[I can’t see any fancy symbols, what’s wrong?](http://lokaltog.github.com/powerline/installation/osx.html#i-can-t-see-any-fancy-symbols-what-s-wrong)"".

So my iTerm2 version is `1.0.0.20130122`. I think its recent enough according to the [revision mentioned](https://github.com/gnachman/iTerm2/commit/8e3ad6dabf83c60b8cf4a3e3327c596401744af6) in the answer.

My locale seems well-defined:

```
adrien in ~  ○ locale
LANG=""en_US.UTF-8""
LC_COLLATE=""en_US.UTF-8""
LC_CTYPE=""en_US.UTF-8""
LC_MESSAGES=""en_US.UTF-8""
LC_MONETARY=""en_US.UTF-8""
LC_NUMERIC=""en_US.UTF-8""
LC_TIME=""en_US.UTF-8""
LC_ALL=""en_US.UTF-8""
```

```
adrien in ~  ○ python --version
Python 2.7.3
```

```
adrien in ~  ○ vim --version | grep python
+path_extra +perl +persistent_undo +postscript +printer +profile +python
-python3 +quickfix +reltime +rightleft +ruby +scrollbind +signs +smartindent
```

So I'm kinda lost now…
"
165,`KeyError: 'Highlighting groups not found in colorscheme: exit_fail'`,2013-02-04T18:45:31Z,2013-02-05T12:49:11Z,t:bug,,,"The following error is thrown from time to time. I can't tell whether there is a pattern, but it might be whenever a result wants to have my attention (for example a merge conflict on git or a failed unit test).

I hope this traceback helps.

```
Traceback (most recent call last):
  File ""/usr/local/bin/powerline"", line 5, in <module>
    pkg_resources.run_script('Powerline==beta', 'powerline')
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py"", line 489, in run_script
    both `group` and `name` are yielded (in distribution order).
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py"", line 1207, in run_script
    if sys.version_info <= (3,):
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/EGG-INFO/scripts/powerline"", line 25, in <module>
    rendered = powerline.renderer.render(width=args.width, side=args.side)
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/renderer.py"", line 48, in render
    segments = [segment for segment in segments\
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/theme.py"", line 73, in get_segments
    segment = self.add_highlight(segment)
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/theme.py"", line 36, in add_highlight
    segment['highlight'] = self.colorscheme.get_group_highlighting(segment['highlight_group'])
  File ""/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/colorscheme.py"", line 60, in get_group_highlighting
    raise KeyError('Highlighting groups not found in colorscheme: {0}'.format(group))
```

I use:
- `solarized` color scheme
- zsh 5.0.2 (x86_64-apple-darwin12.2.0)
- iTerm2 Build 1.0.0.20130203-nightly
"
164,Fix “'NoneType' object is not iterable” error,2013-02-03T20:19:45Z,2013-02-04T12:04:42Z,,,,"Fixes #158
"
163,Zsh/zpython,2013-02-03T20:05:47Z,2013-02-05T11:11:04Z,,,,"Zsh/zpython module seems to be finished, the only thing left is to include it into zsh.
"
162,cmus support for NowPlayingSegment class,2013-02-01T19:03:52Z,2013-02-01T21:35:34Z,,,,"I've added a method to use cmus-remote in the NowPlayingSegment class. On my system I could not get now_playing to load until I added now_playing to colorschemes/tmux/default.json so I included that as well.
"
161,Allow truncation of long segments,2013-02-01T18:03:17Z,2014-08-30T14:29:28Z,"c:core, t:enhancement",,,"A config variable to truncate long segments (such as the now_playing segment) to save on space would be handy.
"
160,E860: Eval did not return a valid python 3 object,2013-02-01T17:57:29Z,2013-02-13T07:29:01Z,t:bug,,,"Google isn't much help, I run:
`gvim -V20error.log anyfile.txt -u NONE --cmd ""python3 from powerline.bindings.vim import source_plugin; source_plugin()""`

then in gvim, when I run :set laststatus=2 it gives me:
`Error detected while processing function Powerline:
Line 1:
E860: Eval did not return a valid python 3 object`

in the error.log at the point of error, I get:

```
continuing in VimEnter Auto commands for ""*""

line 0:  endif
autocommand au! LoadBufferMenu

line 0: au! LoadBufferMenu

calling function Powerline(1, 1)

line 1: ^Ireturn s:pyeval('powerline.renderer.render('. a:winnr .', '. a:current .')')
                                                                                      Error detected while processing function Powerline:
line    1:
E860: Eval did not return a valid python 3 object
function Powerline returning #0
```

On windows 7 32bit, vim 7.797, Python 3
"
159,Don’t hardcode cache persistence,2013-02-01T13:49:31Z,2014-02-16T00:48:16Z,"c:core, t:enhancement",,,"With possibility of using common segments in a wide range of renderers hardcoding `persistent` `@memoize` argument is silly. For example, it is completely unneeded if you use zsh/zpython module: in this case powerline is not unloaded and thus cache is not flashed. I guess things like `powerline.segments.common.email_imap_alert` can also be used from vim, there is no need in file cache there as well.
"
158,Segment Issue on Diff Buffer Delete,2013-01-31T22:59:40Z,2013-02-04T12:04:41Z,t:bug,,,"See attached screenshots.

I create a split diff view here: [left is old file, right is new file]
![before](https://f.cloud.github.com/assets/83376/116453/a4c874a2-6bf9-11e2-950f-e2384b294859.png)

To get out of this, I run a :bd on the left buffer, and the resulting right buffer looks like this after it resizes to full width:
![after](https://f.cloud.github.com/assets/83376/116462/ceecf938-6bf9-11e2-993a-7fd14a51c7d3.png)
"
157,Refactor complex segments into classes,2013-01-31T20:19:54Z,2013-08-20T15:36:31Z,t:enhancement,,,"Complex segments should be refactored into classes (particularly those that use multiple backends, or support multiple programs).

I can do this sometime later this week.
"
156,Improve handling of missing/wrong Python dependencies,2013-01-31T15:50:21Z,2013-02-07T11:14:55Z,t:bug,"ImportError, NameError","ImportError: No module named importlib, NameError: name 'Powerline' is not defined","I am getting the following error with Python 2.6 on startup:

```
Error detected while processing /root/.dotfiles/lib/powerline/powerline/bindings/vim/powerline.vim:
line   10:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/root/.dotfiles/lib/powerline/powerline/core.py"", line 3, in <module>
    import importlib
ImportError: No module named importlib
line   11:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
NameError: name 'Powerline' is not defined
```

While that would be ""ok"" (but could look nicer / human-friendly), there's an additional error after e.g. opening a new window:

```
Error detected while processing function <SNR>89_UpdateWindows..Powerline..<SNR>89_pyeval:
line    1:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""<string>"", line 1, in <module>
NameError: name 'powerline' is not defined
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""<string>"", line 1, in <module>
NameError: name 'powerline' is not defined
```
"
155,Rhythmbox player for NowPlayingSegment Class,2013-01-31T12:31:28Z,2013-01-31T13:24:53Z,,,,"Implemented support for Rhythmbox in NowPlayingSegment Class. On another note, PEP8 suggests using spaces for indentation which is violated throughout the project afaik (personal preference perhaps?)
"
154,Create progress bar/bar graph segments,2013-01-31T07:28:52Z,2014-08-30T14:29:28Z,"c:core, t:enhancement",,,"This could be added as a separate segment type, and would probably only be returned by segment functions as part of the return array. The graph could have different renderers, with text being the default (a `▕▉▉▉▉▉░░░▏]` or `[#####    ]` style graph), and window managers, dzen, etc. with proper graph support could have a renderer that outputs the necessary code for this. Bar graphs could also be added for CPU usage history and stuff like that, the default text renderer could have output using Unicode block elements (`U+2581`-`U+2588`): `▕▁█▂▄▅▆▃▇▏`.

The syntax could be something like this:

``` json
[
    {
        ""type"": ""graph"",
        ""format"": ""progressbar"",
        ""width"": 10,
        ""min"": 0,
        ""max"": 100,
        ""value"": 75,
        ""highlight_group"": [""volume_level""]
    },
    {
        ""type"": ""graph"",
        ""format"": ""bar"",
        ""width"": 10,
        // Optional min/max thresholds, otherwise calculated automatically
        ""values"": [10, 20, 30, 40, 50],
        ""highlight_group"": [""cpu_usage""]
    }
]
```
"
153,Alternating light and dark background in vim break powerline colors.,2013-01-31T03:39:52Z,2013-02-10T12:56:32Z,t:bug,,,"Using gvim, when I switch background color using `set background=light` or `dark`, backgrounds colors dissapear from powerline.

Alternating between dark and light is normal when using solarized.

![2013-01-31-003808_680x494_scrot](https://f.cloud.github.com/assets/735314/113451/d2c1dbac-6b57-11e2-8d6e-95640ee4fc90.png)
"
152,Maildir/Mbox support,2013-01-30T23:36:52Z,2015-12-17T16:19:57Z,"c:common segments, t:enhancement",,,"It'd be nice if the Mail segment supported Maildir and Mbox formats (and multiple checks, not just one account).  This helps for those of us that sync our mail for Mutt.
"
151,Not work custom segment in ~/.config/powerline/segments/,2013-01-30T22:20:08Z,2013-02-05T11:17:25Z,,ImportError,ImportError: No module named my,"if I write in file `~/.config/powerline/themes/vim/my.json` this

``` json
...
{
    ""name"": ""elapsedtime"",
        ""module"": ""powerline.segments.my"",
    ""priority"": 60,
    ""rjust"": 4
},
...
```

and then create file `~/.config/powerline/segments/my.py` with content

``` python
# -*- coding: utf-8 -*-

from __future__ import absolute_import

import vim

def elapsedtime():
  try:
    return vim.eval('TimeKeeper_GetCurrentJobString()')
  except vim.error:
    return None
```

I have got errors

```
Error detected while processing /Users/khmelevskii/.vim/bundle/powerline/powerline/bindings/vim/powerline.vim:
line   11:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/Users/khmelevskii/.vim/bundle/powerline/powerline/core.py"", line 50, in __init__
    term_24bit_colors=self.config.get('term_24bit_colors', False))
  File ""/Users/khmelevskii/.vim/bundle/powerline/powerline/renderers/vim.py"", line 21, in __init__
    super(VimRenderer, self).__init__(*args, **kwargs)
  File ""/Users/khmelevskii/.vim/bundle/powerline/powerline/renderer.py"", line 15, in __init__
    self.theme = Theme(theme_config=theme_config, **theme_kwargs)
  File ""/Users/khmelevskii/.vim/bundle/powerline/powerline/theme.py"", line 28, in __init__
    self.segments[side].extend((get_segment(segment, side) for segment in theme_config['segments'].get(side, [])))
  File ""/Users/khmelevskii/.vim/bundle/powerline/powerline/theme.py"", line 28, in <genexpr>
    self.segments[side].extend((get_segment(segment, side) for segment in theme_config['segments'].get(side, [])))
  File ""/Users/khmelevskii/.vim/bundle/powerline/powerline/segment.py"", line 36, in get
    contents, contents_func, key = get_segment_info(segment)
  File ""/Users/khmelevskii/.vim/bundle/powerline/powerline/segment.py"", line 18, in get_function
    return None, getattr(import_module(segment_module), segment['name']), '{0}.{1}'.format(segment_module, segment['name'])
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/importlib/__init__.py"", line 37, in import_module
    __import__(name)
ImportError: No module named my
```

if I copy `~/.config/powerline/segments/my.py` into `~/.vim/bundle/powerline/powerline/segments/` everything works fine.

what am I doing wrong?
"
150,tmux right side of powerline not showing up,2013-01-30T19:46:59Z,2014-11-29T18:07:12Z,"c:b:tmux, t:bug",,,"Hi,

I'm using powerline under Ubuntu and Arch and I'm having problems with the right hand side in tmux. In Arch the weather segment was crashing, and removing it from my configuration fixed my problem. However in Ubuntu it's still not showing up.

I've tried running:

``` bash
powerline tmux right
```

And the output seems ok, no errors. How can I debug this to find out the source of the problem?

<bountysource-plugin>

---

Want to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/1544313-tmux-right-side-of-powerline-not-showing-up?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
149,Issues starting Powerline,2013-01-30T16:55:03Z,2013-01-30T16:58:36Z,,,,"Hi, hope I am not doing something really stupid, but I can't seem to use vim powerline.

I added the line to my vimrc:
python from powerline.bindings.vim import source_plugin; source_plugin()

when starting vim I get the following errors:

Error detected while processing function <SNR>12_UpdateWindows..Powerline:
line    1:
E858: Eval did not return a valid python object
E858: Eval did not return a valid python object

I just cloned powerline again compiled and installed.

My python version is 7.3.2 and my vim version is 7.3.792.
"
148,powerline-tmux turns black after few keystrokes,2013-01-30T14:51:45Z,2013-01-30T16:14:14Z,s:invalid,,,"I've reinstalled powerline using latest commit 7022b47ed984d11474b1aa5721099620cc20956c and now tmux will turn into a black bar after I start typing. When it starts it shows the left prompt as expected.

I had to remove `""colorscheme"": ""default""` or `""theme"": ""default""` from the `tmux` section in config.json. Removing any of those two lines fixes the issue.

I'm using zsh 5 on Ubuntu 12.10 and powerline was installed under a python2.7 directory.
"
147,VBlock Green instead of Orange,2013-01-29T22:17:02Z,2013-02-24T19:18:43Z,t:bug,,,"I assume this is an issue related to how the mode is defined, and visual block is a sort of Ctrl + V hybrid. I saw the commit referenced in #80 but it doesn't seem to correct the visual block problem?
"
146,Rhythmbox segment for tmux,2013-01-29T19:10:34Z,2013-01-31T09:39:04Z,,,,"Added a segment to preview the currently playing song in Rhythmbox using `rhythmbox-client` (provided by default in Ubuntu 12.10). Also includes support for custom formatting of track (execute `man rhythmbox-client` for all formatting options)
"
145,i3,2013-01-29T02:47:16Z,2014-02-16T00:48:56Z,"c:b:wm, t:enhancement",,,"A render module for i3 would be useful. i3 just uses ANSI escape codes to render colors.  I'll give it a try this weekend.
"
144,Python 2.6 Support,2013-01-28T23:44:23Z,2013-01-29T11:09:43Z,,,,"Powerline should actually work with python 2.6 as long as argparse is installed for it. At least I have no problems with it on debian squeeze with python-argparse installed. So while perhaps not officially supported, I wanted to record somewhere that one can get it to work without patching to use optparse.
"
143,fix uptime when using psutil,2013-01-28T21:15:30Z,2013-01-29T11:03:40Z,,,,"for some reason, the days was always zero in the uptime when utilizing psutil, so I made some modifications and days are now showing up for me.

Should have said psutil in commit message.
"
142,Both powerlines (pre 0.11 and post 0.11) clear powerline prompts on <C-u>,2013-01-28T18:00:45Z,2013-02-10T12:56:32Z,t:bug,,,"When pressing <C-u> and there is some typed text powerline prompt is no longer displayed and cursor switches to the first column.
"
141,"Add support for other ipython prompts (in2, out, rewrite)",2013-01-28T17:52:58Z,2013-03-24T15:19:22Z,t:enhancement,,,"Subj. They are not much needed (they definitely should not display any data, except for perhaps, output number in out), especially in2, except for the colors: they should be overridden to comply with in prompt. Guess the only thing that can be done here is using custom matchers.
"
140,"""ImportError: No module named ext.vim"" on Mac OS 10.6 with python 2.7",2013-01-28T15:33:22Z,2013-01-28T15:48:59Z,,ImportError,ImportError: No module named ext.vim,"I have python 2.7 installed with MacPorts on Mac OS Snow Leopard. When i install Powerline with

``` shell
pip install --user git+git://github.com/Lokaltog/powerline
```

and try to use it in Vim, i get

```
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
ImportError: No module named ext.vim
```

I cannot apply the troubleshooting recommendation as i do not event have python27-apple.

By the way, the Powerline was working for me a week ago (with occasional ""crashes"" in some files), but then i reinstalled some ports, and also reinstalled the Powerline, and now it gives this ImportError.
"
139,fonts not displaying correctly,2013-01-28T14:26:09Z,2013-01-28T14:28:44Z,,,,"The old powerline shows the fonts correctly so they seem to be setup the right way.
I'm running on redhat enterprise (sigh..) that I connect to from my mac via iTerm. iTerm already has the patched fonts set.
"
138,right hand side of tmux not rendering,2013-01-27T05:27:43Z,2013-01-27T16:42:21Z,,,,"I just downloaded and installed the newest package from the AUR. Here is the error I get when I run `powerline-tmux right:`

> Traceback (most recent call last):
>  File ""/usr/bin/powerline-tmux"", line 21, in <module>
>    rendered = powerline.renderer.render(side=args.side)
>  File ""/usr/lib/python2.7/site-packages/powerline/renderer.py"", line 48, in render
>    segments = [segment for segment in segments\
>  File ""/usr/lib/python2.7/site-packages/powerline/theme.py"", line 44, in
> get_segments
>   contents = segment['contents_func'](**segment['args'])
>  File ""/usr/lib/python2.7/site-packages/powerline/lib/memoize.py"", line 31, in
> decorated_function
>    self._cache = pickle.load(fileobj)
> ValueError: unsupported pickle protocol: 3
"
137,Tmux doesn't automatically truncate,2013-01-26T16:55:13Z,2015-05-23T13:43:23Z,"c:b:tmux, t:enhancement",,,"Not sure how possible this is with tmux themes, but tmux doesn't currently automatically truncate like vim does.

I'm use a tiling window manager, and with two tmux sessions side by side the status bar is nearly useless. With 3 of them the status bar stops producing any information at all.

![2013-01-26-115343_1679x98_scrot](https://f.cloud.github.com/assets/980/99966/05735558-67d9-11e2-9670-7128569765d8.png)

![2013-01-26-115407_1679x99_scrot](https://f.cloud.github.com/assets/980/99968/14a9ecbc-67d9-11e2-923f-f3cc7e927b15.png)
"
136,Make weather configurable in tmux,2013-01-26T16:50:59Z,2013-01-27T16:32:06Z,s:invalid,,,"It would be nice if could tell the weather module my zip code, as well as pick between Celsius and Fahrenheit. GeoIP data for my IP address for example is almost an entire state away. 
"
135,Do not require highlight_group to be set for segments whose group is in …,2013-01-26T15:00:24Z,2013-01-28T05:58:15Z,,,,"Do not require highlight_group to be set for segments whose group is in any case overridden by the function output
"
134,Status segments,2013-01-26T14:59:38Z,2013-01-28T05:58:08Z,,,,"Note: it would be better if you review colors in colorscheme. I am very unsure that they are the best ones.

Note 2: segment_info is to be used somewhere else as well: precisely, to provide data for ipython segments.
"
133,"install success, but in vim an gvim, there's something was wrong ~",2013-01-26T10:40:49Z,2013-01-28T05:59:37Z,"a:doc update, c:documentation",,,"install with pip or install sudo with pip was both success, in terminal run bash prompt is great, but in vim(gnome-terminal) and gvim, it's looks like this:
![01](https://f.cloud.github.com/assets/804292/99646/50546024-67a4-11e2-8af8-4aca8d43047f.png)
or this: 
![02](https://f.cloud.github.com/assets/804292/99647/589b63f4-67a4-11e2-9e77-7e02850347f9.png)

my os is ubuntu 12.10.

thank you for your help.
"
132,Right-hand-side segments not showing in tmux,2013-01-25T21:34:55Z,2013-01-26T14:13:01Z,,,,"Any idea what's causing this?

![Screenshot from 2013-01-25 22:29:59](https://f.cloud.github.com/assets/22498/98844/850bab92-6736-11e2-9a66-c5d20d3259a7.png)

The right-side of the tmux powerline seems to be missing. It doesn't appear if I make the window bigger either.

Installed powerline from git just today.

Here's my tmux powerline theme:

```
{
    ""default_module"": ""powerline.segments.common"",
    ""segments"": {
        ""right"": [
            {
                ""name"": ""hostname""
            }
        ]
    }
}
```

I get the same problem with the default tmux theme anyway.
"
131,zsh virtualenv indicator is wrong after launching tmux,2013-01-25T21:06:27Z,2014-07-10T19:40:09Z,"c:common segments, t:bug",,,"Activate a virtualenv. Poweline's virtualenv segment appears in your shell prompt. Now run tmux. You're now in a new shell inside tmux, the new shell does not have any virtualenv activated, but powerline's virtualenv segment remains in your shell prompt.
"
130,"Removed placeholder, now using escaping instead",2013-01-25T18:26:04Z,2013-01-28T05:58:01Z,,,,"It would be bad idea to override render() method in case we need to escape something

Also pushed some other fixes (including security fix) to this branch
"
129,Create installation scripts,2013-01-25T16:39:16Z,2014-01-19T09:49:03Z,"c:installation, t:enhancement",,,"Installation could be much easier with an installation script. The script could detect the OS, copy the fonts, update font cache, etc. the same way the [package installation scripts](https://github.com/Lokaltog/powerline/blob/develop/packages/archlinux/python-powerline-git/PKGBUILD) do it now.

The script could also detect whether the user is running brew or macports (which I've been told is two different ways of handling custom packages in OS X) and install the proper Python/vim versions automatically.
"
128,powerline-tmux right crash under ubuntu 12.10,2013-01-25T16:27:53Z,2013-01-25T16:31:56Z,,KeyError,KeyError: 'condition',"when I try to run ""powerline-tmux right"" under ubuntu 12.10 I got this error:

Traceback (most recent call last):
  File ""/home/shad/extern/powerline/scripts/powerline-tmux"", line 21, in <module>
    rendered = powerline.renderer.render(side=args.side)
  File ""/home/shad/extern/powerline/powerline/renderer.py"", line 48, in render
    segments = [segment for segment in segments\
  File ""/home/shad/extern/powerline/powerline/theme.py"", line 44, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""/home/shad/extern/powerline/powerline/lib/memoize.py"", line 37, in decorated_function
    'result': func(_args, *_kwargs),
  File ""/home/shad/extern/powerline/powerline/segments/common.py"", line 143, in weather
    condition = response['query']['results']['weather']['rss']['channel']['item']['condition']
KeyError: 'condition'

powerline is up to date,
powerline works fine in vim
powerline-prompt works fine.
"
127,Remove PERCENT_PLACEHOLDER from vim renderer,2013-01-25T13:21:42Z,2013-01-25T13:30:39Z,,,,"Instead of using some unicode character that might or might not be used,
just use ""%%"" instead of ""%"" in theme files.
This probably needs to be documented somewhere, however the old solution
needed an explanation anyway.
"
126,Replace old line number character,2013-01-25T12:40:35Z,2013-01-25T12:42:11Z,,,,"themes/vim/help.json still used the line number character from
vim-powerline.
"
125,error occurs when using guake in ubuntu 12.04,2013-01-25T07:16:10Z,2013-01-28T06:00:10Z,t:bug,IOError,IOError: [Errno 4] 中斷的系統呼叫,"It happens when I open the settings of guake, or let it idle for a while.

Error message:

處理 function Powerline..<SNR>35_pyeval 時發生錯誤:
行    1:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""<string>"", line 1, in <module>
  File ""/home/davidwangs/.vim/bundle/powerline/powerline/renderers/vim.py"", line 37, in render
    segments = [segment for segment in theme.get_segments()]
  File ""/home/davidwangs/.vim/bundle/powerline/powerline/theme.py"", line 44, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""/home/davidwangs/.vim/bundle/powerline/powerline/lib/memoize.py"", line 37, in decorated_function
    'result': func(_args, *_kwargs),
  File ""/home/davidwangs/.vim/bundle/powerline/powerline/segments/vim.py"", line 165, in file_vcs_status
    status = repo.status(os.path.relpath(vim.current.buffer.name, repo.directory))
  File ""/home/davidwangs/.vim/bundle/powerline/powerline/lib/vcs/git.py"", line 110, in status
    return next(self._gitcmd('status', '--porcelain', '--', path))[:2]
  File ""/home/davidwangs/.vim/bundle/powerline/powerline/lib/vcs/git.py"", line 95, in readlines
    for line in p.stdout:
IOError: [Errno 4] 中斷的系統呼叫
"
124,Porting solarized support,2013-01-24T20:52:40Z,2013-01-25T10:42:30Z,t:question,,,"I'm looking to port the Solarized colorscheme and theme to this version of Powerline, but am having some trouble translating the old syntax to the new.

Assuming it's not already something being worked on, is there a guide on getting something like this done?
"
123,Added ipython prompt support,2013-01-24T18:37:15Z,2013-01-28T05:57:51Z,,,,
122,Right part of powerline is not showing up in tmux and display is messed up in bash,2013-01-24T17:49:45Z,2013-02-06T19:32:43Z,t:bug,,,"Tested with Terminal.app and iTerm2
dotfiles mainly from mathiasbynens/dotfiles (I suspect it might be a setting from there but i have no idea what).

It seems like the right part is drawn behind the left part, as if escape codes were screwed.
Any idea ? Many thanks
"
121,Improve documentation on urxvt,2013-01-24T13:38:01Z,2013-01-24T16:37:04Z,"a:doc update, c:documentation",,,"Update: There is a mention on [Font patching](http://lokaltog.github.com/powerline/fontpatching.html). Maybe add a link to it in the installation section. :smile:

Update 2: urxvt is compiled with unicode3 in ubuntu but even so unpatched fonts won't work with it.

rxvt-unicode does not seem to honour fontconfig configurations so normal (unpatched) fonts do not use powerlinesymbols as fallback. See screenshot using regular Ubuntu Mono on the left.

![urxvt](https://f.cloud.github.com/assets/735314/91606/a9490b6c-65a6-11e2-804f-3d97c8a590f1.png)

Patched fonts (such as those from https://github.com/Lokaltog/powerline-fonts) work as expected.

My proposal is to update documentation to include an explanation on how urxvt is an expection and that patched fonts are needed. This would prevent users' frustation while trying to make new powerline work with rxvt. This seem to also apply to xterm.

Note: This is not only my case. See also [Fontconfig fallback fonts are not used](http://comments.gmane.org/gmane.comp.terminal-emulators.rxvt-unicode.general/1102) on a rxvt mailing list and [Applications without fontconfig support](http://archtr.org/wiki/index.php/Yazıtipi_yapılandırması#Applications_without_fontconfig_support). 
"
120,error when installing on OSX,2013-01-24T13:00:09Z,2013-01-24T13:50:28Z,s:duplicate,,,"I just installed latest brew pytnon and macvim.

```
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Jan 24 2013 14:31:09)
MacOS X (unix) version
Included patches: 1-754
Compiled by vitaly@pulse-7.local
Huge version with MacVim GUI.  Features included (+) or not (-):
+arabic +autocmd +balloon_eval +browse ++builtin_terms +byte_offset +cindent +clientserver +clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments +conceal +cryptv -cscope +cursorbind +cursorshape +dialog_con_gui +diff +digraphs +dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path
+find_in_path +float +folding -footer +fork() +fullscreen -gettext -hangul_input +iconv +insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent +listcmds +localmap -lua +menu +mksession +modify_fname +mouse +mouseshape +mouse_dec -mouse_gpm -mouse_jsbterm +mouse_netterm +mouse_sgr -mouse_sysmouse
+mouse_urxvt +mouse_xterm +multi_byte +multi_lang -mzscheme +netbeans_intg +odbeditor +path_extra +perl +persistent_undo +postscript +printer +profile +python -python3 +quickfix +reltime +rightleft +ruby +scrollbind +signs +smartindent -sniff +startuptime +statusline -sun_workshop +syntax +tag_binary
+tag_old_static -tag_any_white +tcl +terminfo +termresponse +textobjects +title +toolbar +transparency +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo +vreplace +wildignore +wildmenu +windows +writebackup -X11 -xfontset +xim -xsmp -xterm_clipboard -xterm_save     
```

When I try this `python from powerline.bindings.vim import source_plugin; source_plugin()` I get the following error (attaching a screenshot since I can't capture it as a text):

![Screen Shot 2013-01-24 at 2 41 20 PM](https://f.cloud.github.com/assets/4193/93479/f759d1cc-6625-11e2-8c52-4e2ac1c6c1f0.png)
"
119,vim powerline error,2013-01-24T10:44:49Z,2013-01-24T11:18:08Z,s:duplicate,AttributeError,AttributeError: 'NoneType' object has no attribute 'startswith',"when I star vim in this way ( not figure out which file to edit):

 I found this error:

```

处理 function <SNR>14_UpdateWindows..Powerlin输入  :help version7<Enter>   查看版本信息
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""<string>"", line 1, in <module>
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/renderers/vim.py"", line 37, in render
    segments = [segment for segment in theme.get_segments()]
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/theme.py"", line 44, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/segments/vim.py"", line 84, in file_directory
0                                                                                                                                       
AttributeError: 'NoneType' object has no attribute 'startswith'
```

but if I edit some file:

```
vim somefile
```

there is no error
"
118,Add the file_size segment,2013-01-24T09:30:18Z,2013-01-24T11:36:21Z,,,,"Added the following functions to segments/vim.py:
- file_size();
- _to_human(size[, precision]).

The first one retrieves the file size, the second one is an helper function to format the size as a human readable string.

---

I think this is a basic segment (probably more informative than the file format one, sometimes).
Obviously the segment should be added in the color scheme and in the theme config file for it to be visible.
"
117,file_directory broken when vim is opened without filename,2013-01-24T08:02:44Z,2013-01-24T11:18:08Z,,"Error, AttributeError","Error:, AttributeError: 'NoneType' object has no attribute 'startswith'","If you start vim without specifying a file name, the error mentioned below occurs.

This is caused by this commit:

0d2056ab049aeab2946790b44103680e9d7129db vim: file_directory: shorten /home/foo/ to ~foo

Apparently, vim_get_func('expand') returns Null in this case, causing ""startswith"" to fail.

Error:

Error detected while processing functtype  :q<Enter>               to exit         pyeval:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""<string>"", line 1, in <module>
  File ""powerline/renderers/vim.py"", line 37, in render
    segments = [segment for segment in theme.get_segments()]
  File ""powerline/theme.py"", line 44, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""powerline/segments/vim.py"", line 84, in file_directory
0
AttributeError: 'NoneType' object has no attribute 'startswith'
"
116,How can i rewrite vim function to python in segments/vim.py,2013-01-23T23:32:37Z,2013-01-24T06:48:16Z,t:question,,,"Before now i have vim function for print elapsed time in powerline

``` viml
function! Powerline#Functions#timekeeper#GetElapsedTime() "" {{{
    if ! exists('g:TimeKeeperPlugin') || g:TimeKeeperDefaultProject == 'default'
        return ''
    endif

  return TimeKeeper_GetCurrentJobString()
endfunction "" }}}
```

how i must rewrite this function in python segments/vim.py?
"
115,vim: file_directory: shorten /home/foo/ to ~foo,2013-01-23T22:47:40Z,2013-01-24T16:22:19Z,,,,"Replace ""/home/foo/"" with ""~foo"" (foo's home, not current user's).
This shortens paths like /home/www-data/foo/.
"
114,tmux is using different colorscheme,2013-01-23T19:34:27Z,2013-01-23T20:41:21Z,s:invalid,,,"Using xfce4-terminal on Xubuntu 12.10, colors look different when using a normal zsh session and when running a tmux session. Also bold fonts dissapear. Font in both cases is Monospace 10.

![powerline](https://f.cloud.github.com/assets/735314/91191/af6ee5f6-6593-11e2-8b29-4a0eb103ada2.png)
"
113,Add support for Ubuntu Mono,2013-01-23T19:06:57Z,2013-01-24T06:22:45Z,,,,"Added Ubuntu Mono to the list of fonts that should use powerline fontconfig
"
112,Can't show the arrow even if I use the patched DejaVu_Sans_Mono_for_Powerline.otf font.,2013-01-23T16:35:23Z,2013-01-24T06:51:23Z,s:invalid,,,"I use urxvt-unicode with enable-unicode3, and I follow the instructions:
Download https://github.com/Lokaltog/powerline-fonts/blob/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20for%20Powerline.otf
copy the font to ~/.fonts
run  fc-cache -vf
and modify the ~/.Xdefaults
URxvt.font:xft:DejaVu_Sans_Mono_for_Powerline.otf:size=13 
(I renamed the downloaded otf-font to this name)

and Boom! reboot the computer.(restart x)
Vim still show the block....cant's any arrow...

And I run gnome-terminal, It's OK! can see the LN and the fat arrow...

So could you please help me with this problem? Thank you!

Arch 
vim-version:7.3.754 with +python
"
111,Powerline doesn't play well with vim ctrlp,2013-01-23T14:59:05Z,2013-01-24T06:49:30Z,"s:duplicate, s:invalid",,,"Hi there, when I launch ctrlp in MacVim the status bar isn't styled with powerline. I'm having a similar issue with NERDTree where when I first launch the plugin the status bar is unstyled, but once I move focus to another split the status corrects itself.

![](http://erichynds.com/i/abbff1.png)
"
110,Not showing anything in VIM,2013-01-23T06:25:19Z,2013-01-23T11:51:16Z,,,,"Hello,

I just installed powerline and when I load it from the `.vimrc` and open up vim, it seems like nothing happens. There's no error, I tried with both ways, `source` and `python from` but there's no statusline.

I'm using Debian Linux on x86_64.
"
109,Powerline for tmux files,2013-01-23T06:00:36Z,2013-01-23T06:40:31Z,,,,"I installed powerline with pip. pip install git+git://github.com/Lokaltog/powerline
The documentation says to have 
source '{path}/powerline/bindings/tmux/powerline.conf' in .tmux.conf

But on my system 'locate powerline' gives all results inside directory
/usr/local/lib/python2.7/dist-packages/powerline

But there is no powerline.conf file! the only binding is of vim

so having a .tmux.conf with
source '/usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf' does nothing.
"
108,weather temperature not utf encoded,2013-01-23T05:42:06Z,2013-01-23T06:25:10Z,,,,"I'm getting an error on OSX from the weather segment. I think line 155 in powerline / powerline / segments / common.py needs to be utf-8 encoded.

'contents': '{0}°{1}'.format(condition['temp'], unit.upper()),

to

'contents': u'{0}°{1}'.format(condition['temp'], unit.upper()),
"
107,Double width symbols when using putty in windows,2013-01-23T04:57:59Z,2013-01-23T06:43:50Z,"s:invalid, t:bug",,,"I used the fontpatcher.py to patch Monaco in Linux. But the letters became thicker than origin. So I decided to add the 7 new symbols to Monaco manually by using FontCreator. Now I can use the font on putty, and I can see the symbols. But the width of new symbols are double size and the arrows separate from background. Is that a limitation by using terminal in Windows? Please refer to images. The arrows are not in the right position because they are double-width.

Monaco manually add symbols, blank in the right side of arrows
![origin](https://f.cloud.github.com/assets/2617514/89021/672b2da2-6518-11e2-9a66-d3e890738c02.jpg)

Monaco patched by fontpatcher.py, thinner blank in both side of arrows
![patch](https://f.cloud.github.com/assets/2617514/89024/77c202da-6518-11e2-84f9-3922b38a3be7.jpg)

Thank you.
"
106,Create documentation how customize powerline segments,2013-01-23T00:52:01Z,2013-01-23T15:37:46Z,t:question,,,"I edited `powerline/config_files/themes/vim/default.json`, but nothing changed, why? How i add segment with my function? In old powerline i just writed code

``` viml
let g:Powerline#Themes#default#theme = Pl#Theme#Create(
    \ Pl#Theme#Buffer(''
        \ , 'paste_indicator'
        \ , 'mode_indicator'
        \ , 'fugitive:branch'
        \ , 'hgrev:branch'
        \ , 'fileinfo'
        \ , 'syntastic:errors'
        \ , Pl#Segment#Truncate()
        \ , 'tagbar:currenttag'
        \ , 'timekeeper:elapsedtime' "" !!!add my function in power line
        \ , Pl#Segment#Split()
        \ , 'rvm:string'
        \ , 'virtualenv:statusline'
        \ , 'scrollpercent'
        \ , 'lineinfo'
    \ ),
    ...
```
"
105,Powerline delayed load in NERDTree and Tagbar?,2013-01-22T23:31:39Z,2013-01-23T06:41:19Z,s:invalid,,,"Hi, I just migrated from old powerline. When I open NerdTree window using :NERDTreeToggle, powerline didn't show up first, it used the default status line format. But when I moved the focus out of the NERDTree window then moved back, powerline showed up. The same is in Tagbar. 
It seems that powerline is loaded very early and the status line format is then overridden by NERDTree's format. This happens very quickly, but I can still see it.
AFAIK, the issue won't occur in help and Gundo windows.
"
104,Shell prompt has very notable delay,2013-01-22T20:06:19Z,2013-02-07T12:16:09Z,t:enhancement,,,"Subj. I can now suggest two things: first, use one call for both PS1 and RPS1 (with `eval` used to get the result back). It will get rid of the delay between times when PS1 and RPS1 is shown, but won’t get rid of the issue.

Second, make script not evaluated each time prompt is shown. If nothing useful is suggested [here](http://stackoverflow.com/questions/14465542/how-can-i-capture-output-of-background-process) or I fail to invent better idea I will probably write a PR with something based on `zsh/zpty` (overkill, but I see no better options). Bash users will have to invent something on their own.

Though I already though about another idea: writing zsh/zpython C module that will provide commands similar to `python`/`python3` in vim (meaning that python is initialized once module is loaded).

Note: `time` shows the following for PS1 side:

```
0,07s user 0,01s system 93% cpu 0,086 total
```

. I guess “notable delay” consists almost solely of python initialization and I notice it even is `PS1` is simple `python -c 'print ""abc""'` (0,02s user 0,00s system 91% cpu 0,026 total).
"
103,CtrlP Theme,2013-01-22T19:35:44Z,2013-01-22T20:42:07Z,t:enhancement,,,"I'm struggling to parse the docs on how to make a theme for CtrlP.

Perhaps the docs could be improved to have a section on how to theme various aspects from the ground up?

Maybe I'm just stupid, but it would be nice to get CtrlP back to it's former glory days from the vim-powerline project.

Cheers
"
102,"Follow the installation's document, but Nothing happened.",2013-01-22T19:09:01Z,2013-01-22T20:53:16Z,s:invalid,,,"Hi, guys.
I followed this:
http://lokaltog.github.com/powerline/overview.html#installation
and It's OK. The powerline can be found in my python-path.

then I do this:
http://lokaltog.github.com/powerline/overview.html#usage
and it's also OK. No errors reported.

Now I have two lines below in my vimrc:
python from powerline.bindings.vim import source_plugin; source_plugin()
source /usr/lib/python2.7/site-packages/powerline/bindings/vim/plugin/source_plugin.vim

vim starts OK, no errors.

But it don't show the powerline statusbar in vim.
The vim's statusbar is also old style.

OS:Arch Linux
Python Version:2.7.3
Vim Version:7.3.754(with +python)

Please help, Thank you!
"
101,"Added USE=zsh, renamed prompt.* to powerline.*",2013-01-22T17:02:47Z,2013-01-22T17:41:53Z,,,,
100,Symbols not displayed when ssh'ing into Ubuntu12.04 from OSX10.8,2013-01-22T16:09:14Z,2013-01-22T16:11:31Z,"c:font, s:invalid, t:bug",,,"Hi, 

my development server is an AWS instance running Ubuntu 12.04. I followed the instructions to set up fallback fonts. Currently I have the `PowerlineSymbols.otf` file in the `~/.fonts/` directory and `10-powerline-symbols.conf` in `~/.fonts.conf.d`.
After running `fc-cache -vf ~/.fonts` this is the response i get:

![Screen Shot 2013-01-22 at 16 01 35](https://f.cloud.github.com/assets/485553/86847/152221c0-64ad-11e2-8fb7-8f46f21b32d8.png)

when I ssh in from OSX (Terminal.app, default font is Monaco for Powerline) and open vim this is what the powerline looks like:

![Screen Shot 2013-01-22 at 15 56 51](https://f.cloud.github.com/assets/485553/86852/29cc44de-64ad-11e2-9695-7c91a084a9e8.png)

this is the relevant `.vimrc` i have:

```
python from powerline.bindings.vim import source_plugin; source_plugin()
let g:Powerline_symbols = 'fancy'
```

I tried restarting my ssh but nothing changed. The weird thing is that I have [powerline-shell](https://github.com/milkbikis/powerline-shell) installed and that powerline seems to work fine (when I ssh from OSX, still broken when I use [Prompt](http://panic.com/prompt/) from iPad).

Any help in sorting out the issue would be appreciated.
"
99,Improved support for USE=vim,2013-01-22T16:06:19Z,2013-01-22T16:16:50Z,,,,"- Made it install powerline.vim into `/usr/share/vim/vimfiles/plugin`.
- Made `powerline.vim` be disableable and work without any configuration (python 2 is obvious default as vim eclass does not support python 3).
- Made configuration variable changes be ignored until resourcing with `g:powerline_loaded` unset.
"
98,Zsh prompt in Arch Linux Package,2013-01-22T16:03:16Z,2013-01-22T16:08:38Z,"c:b:shell, s:invalid, t:bug",,,"I have installed the Arch Linux specific package and I have set zsh to use powerline for its prompt, but it is having some weird behavior. 
When I go into a git repo the arrow does not go in the same direction as the other arrows. 
![2013-01-22_1366x768_scrot_edited](https://f.cloud.github.com/assets/1142964/86854/370ed1f2-64ad-11e2-994b-d343e15635d0.png)
"
97,No module named ext.vim,2013-01-22T01:43:09Z,2013-01-22T07:14:54Z,s:invalid,,,"I'm using pathogen and the helper from the old repo. I'm on ubuntu 12.10 using gvim. 

I've installed the powerline module via pip globally. 

I've verified that the directory containing the powerline module is in the path in python inside gvim.

When running gvim, I get the python module not installed error. When I print the actual error, I get:

No module named ext.vim

Any idea why that is? I didn't find any references to this when googling. Only references to No module named vim and No module named powerline.ext.vim.
"
96,no arrows in XTerm and Gvim,2013-01-22T01:01:22Z,2013-01-22T07:17:40Z,s:invalid,,,"Hello,
I am not able to get in the powerline the arrows ( see http://i.imgur.com/ZahvF.png ). I used XTerm and Gvim and did following steps:

```
 $ wget -cO ~/.fontconfig/10-powerline-symbols.conf https://github.com/Lokaltog/powerline/raw/develop/font/10-powerline-symbols.conf
$ cp ~/.vim/bundle/powerline-fonts/DejaVuSansMono/DejaVu\ Sans\ Mono\ for\ Powerline.otf ~/.fonts
$ fc-cache -vf ~/.fonts
$ sudo eselect fontconfig enable ~/.fontconfig/10-powerline-symbols.conf

$ echo $LANG
en_US.UTF-8
```

Thank you in advance.
"
95,"Error ""ImportError: No module named bindings.vim"" ",2013-01-21T23:58:17Z,2013-01-22T16:35:54Z,t:bug,ImportError,ImportError: No module named bindings.vim,"Error detected while processing /Users/khmelevskii/.vim/bundle/powerline/powerline/bindings/vim/plugin/source_plugin.vim:
line   13:
Traceback (most recent call last):
  File ""<string>"", line 3, in <module>
ImportError: No module named bindings.vim

Install with Vundle
"
94,Ascii error? with zsh,2013-01-21T23:53:29Z,2013-01-22T07:05:57Z,,UnicodeEncodeError,UnicodeEncodeError: 'ascii' codec can't encode character u'\ue0b0' in position 50: ordinal not in range(128),"Hello,

followed your instructions and put in my .zshrc:
setopt prompt_subst
export PS1='$(/usr/bin/powerline-prompt)' 

but when opening terminal, got this error:

Traceback (most recent call last):  
  File ""/usr/bin/powerline-prompt"", line 25, in <module>
    print(pl.renderer.render(None, segments=segments))
UnicodeEncodeError: 'ascii' codec can't encode character u'\ue0b0' in position 50: ordinal not in range(128)

Whereas, simply entering powerline-prompt in my terminal prompts the good result. I'm a total zsh newbie therefore can't understand the difference between $(x) and x. 

It could be my .zshrc either, if you have a simple one that works, you could maybe provide it to me in order to test.

Regards,
"
93,Error when opening vim with no file as an argument,2013-01-21T20:34:24Z,2013-01-21T21:09:47Z,,AttributeError,AttributeError: 'NoneType' object has no attribute 'decode',"I get the following error when opening vim without specifying a file as an argument.
I am using the version of vim that is in Debian unstable with all features enabled.

I also compiled the latest vim from source to test and received the same error. 

Everything functions normally when specifying a file as an argument.

```
Error detected while processing function <SNR>23_UpdateWindows..Powerline..<SNR>23_pyeval:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""<string>"", line 1, in <module>
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/renderers/vim.py"", line 37, in render
    segments = [segment for segment in theme.get_segments()]
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/theme.py"", line 33, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/segments/vim.py"", line 89, in file_name
    file_name = vim_funcs['expand']('%:~:.:t').decode('utf-8')
AttributeError: 'NoneType' object has no attribute 'decode'
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""<string>"", line 1, in <module>
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/renderers/vim.py"", line 37, in render
    segments = [segment for segment in theme.get_segments()]
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/theme.py"", line 33, in get_segments
    contents = segment['contents_func'](**segment['args'])
  File ""/usr/local/lib/python2.7/dist-packages/Powerline-beta-py2.7.egg/powerline/segments/vim.py"", line 89, in file_name
    file_name = vim_funcs['expand']('%:~:.:t').decode('utf-8')
AttributeError: 'NoneType' object has no attribute 'decode'
```
"
92,Write unit tests,2013-01-21T20:10:04Z,2013-08-20T15:35:29Z,t:enhancement,,,"We should create unit tests that test all the common segments, functions, etc. This is becoming increasingly more important as the project now supports both Python 2.7 and 3.3. I'd like to use py.test as that's the testing framework I've used earlier, but I'm open to other suggestions.
"
91,Monofur and rxvt-unicode,2013-01-21T18:38:18Z,2013-01-21T18:39:50Z,,,,"I have patched monofur (following the font patching instructions) and my rxvt-unicode was compiled with --enable-unicode3 yet I don't see the powerline arrows.

If I open a different terminal emulator it works, so it looks like the font _is_ patched and installed correctly.
"
90,Create bash/zsh files that can be sourced to enable the prompt,2013-01-21T16:42:36Z,2013-01-22T12:47:12Z,t:enhancement,,,"We could create shell files in `bindings/{bash,zsh}/prompt.sh` (or even a global `bindings/shell/prompt.sh` that decides which prompt to display based on the contents of `$0`). These files would contain the code needed to enable the correct prompt, and possibly more code like the [pwd code in tmux-powerline](https://github.com/erikw/tmux-powerline) which pushes the current pwd to tmux before rendering the prompt:

``` bash
PS1=""$PS1""'$([ -n ""$TMUX"" ] && tmux setenv TMUXPWD_$(tmux display -p ""#D"" | tr -d %) ""$PWD"")'
```

These files could then be sourced in the user's zshrc/bashrc instead of manually having to insert a whole code block from the docs that could be changed later if any bugs are discovered with it.

To make it even easier - if it's added to the script folder the user would just have to insert this to get the prompt, which would be ideal:

``` bash
. powerline-prompt
```
"
89,Allow soft segment divider color to be customized,2013-01-21T16:27:38Z,2013-01-22T10:27:35Z,t:enhancement,,,"Currently the soft segment divider gets its fg color from the adjacent segment, which can look odd if the adjacent segment has an intense fg color. The soft segments should usually have a faded color and would look much better if it was a bit closer to the background color.

The soft divider color group name could be determined automatically by appending `:soft_divider` or something to the current group name, with the group name as a fallback (i.e. the colorscheme parser would look for `file_name:soft_divider` when determining the soft divider color, and fall back to the `file_name` highlighting group if the former doesn't exist).
"
88,Allow segment functions to return a list of segments,2013-01-21T16:21:26Z,2013-01-22T10:00:43Z,t:enhancement,,,"This could be very useful for things like the VCS segment (each flag could have a different highlighting group), but it could also be used for stuff like a gradient progress bar or a combined file segment for vim that returns the file path along with differently highlighted flags, etc.

I'm thinking that the segment functions could return a list in these cases, with a similar syntax to the current way they can return a dict:

``` python
return [{
    'contents': added_flag,
    'highlight': ['vcs_flag_A', 'vcs_flag'],
    },
    {
    'contents': modified_flag,
    'highlight': ['vcs_flag_M', 'vcs_flag'],
    }]
```

To begin with these segments could be added to the statusline without any dividers if that makes the implementation easier. Do you guys have any other ideas regarding this?
"
87,powerline doesnt work when non ASCII path or filename,2013-01-21T12:47:17Z,2013-01-21T16:55:30Z,t:bug,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 1: ordinal not in range(128),"When I try to edit a file with a name or a path a non ASCII character (ie: tést.txt or tést/bla.txt), vim display an error message then launch without the powerline:
## ""vim pés/bla.txt"" give me:

""pés/bla.txt"" 0L, 0C
Error detected while processing function <SNR>14_UpdateWindows..Powerline..<SNR>14_pyeval:
line    1:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""<string>"", line 1, in <module>
  File ""/home/shad/extern/powerline/powerline/renderers/vim.py"", line 37, in render
    segments = [segment for segment in theme.get_segments()]
  File ""/home/shad/extern/powerline/powerline/theme.py"", line 45, in get_segments
0  
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 1: ordinal not in range(128)
## Press ENTER or type command to continue
"
86,font patching does not work,2013-01-21T10:58:19Z,2013-01-21T16:58:21Z,t:bug,,,"Hi,

I followed the font patching guide:

```
$ ls -al /etc/fonts/conf.d/10-powerline-symbols.conf 
lrwxrwxrwx 1 root root 46 Jan 21 11:14 /etc/fonts/conf.d/10-powerline-symbols.conf -> ../conf.avail.custom/10-powerline-symbols.conf

$ ls -al ~/.fonts/PowerlineSymbols.otf 
-rw-r--r-- 1 root root 2,3K Jan 21 11:15 /root/.fonts/PowerlineSymbols.otf

$ fc-cache -vf ~/.fonts
/root/.fonts: caching, new cache contents: 1 fonts, 0 dirs
/var/cache/fontconfig: cleaning cache directory
/root/.fontconfig: not cleaning non-existent cache directory
fc-cache: succeeded
```

Then I tried with the Dejavu Mono and there are arrow symbols but also some invalid characters between:
![Powerline_brokenFont](https://f.cloud.github.com/assets/3286728/82726/3b976e72-63b9-11e2-9ccf-c419d823a162.png)
I would prefer using the font Terminus, so I just added Terminus to 10-powerline-symbols.conf but the result was the same. Maybe you could even offer a ready-patched Terminus font?

Best regards,
Massimo
"
85,Resizing window error ,2013-01-20T21:10:03Z,2013-01-21T08:41:44Z,,,,"Powerline works fine within a certain width. Sizing the window bigger causes into strange symbols all over the line. I followed the font installation instruction at the homepage by downloading all necessary files and placing them into the right folder, but it doesnt solve the problem, neither changing the font.

Font: Source Code Pro / Source Code Pro for Powerline
OS: Linux Mint Nadja MATE
dotfiles are in my repo

![vim](https://f.cloud.github.com/assets/1760563/81603/13da4a28-6344-11e2-8094-369c772ba228.png)
"
84,"""Terminal"" or ""shell""?",2013-01-20T18:59:18Z,2013-01-22T12:38:07Z,t:question,,,"This is kind of a minor issue/question, but what would be the most precise naming of the current `terminal` extension (particularily after the recent directory restructuring)? The renderer classes work by rendering color escape sequences to the terminal emulator, while the prompts are part of the shell.

Maybe this should be split up renderers into a separate `BashRenderer`/`ZshRenderer` and a common `shell` theme since the contents are going to be pretty much the same between the shells. What would make the most sense here?
"
83,Make decisions based on script arguments,2013-01-20T16:45:41Z,2013-01-22T12:34:18Z,t:enhancement,,,"It does not make much sense examining `$SHELL` variable to deduce which prompt was meant. With #82 it makes sense to have `powerline-zsh` and `powerline-bash` in place of `powerline-prompt`, and even without I see no reason why users can’t just use `PS1='$(powerline-prompt $0)'`: both zsh and bash correctly return `zsh` and `bash` for `$0` respectively.

For tmux there is another benefit: you can put length of the statusline segments into the call (in any case it is fixed and set up in `tmux.conf`, this will just duplicate this). If length is absent then current behavior stands. // Dynamic resizing of these parts is possible: just trap `WINCH` in shell  launched from tmux, though seeing internal support on the tmux side would be much better. But if you use such dynamic resizing of statusline then updating is just as easy as adding two new sets.
"
82,Support zsh RPS1 prompt,2013-01-20T16:36:43Z,2013-01-22T12:34:18Z,t:enhancement,,,"It would be natural if segments used for `""right""` side will be used for `RPS1` prompt (zsh only!). In order to combine this with automatic removal of not fitting segments it would be better if for zsh documentation suggested using triple PS1 set to some variable, RPS1 set to some other variable and `precmd` hook updating both by outputting string that is then being evalled.
"
81,Support 24-bit color in terminal,2013-01-20T16:21:29Z,2013-01-25T09:09:11Z,t:enhancement,,,"There is ISO-8613-3 standard for 24-bit color in terminals: `\e[38;2;{R};{G};{B}m` (foreground, 48 for background) ({R},{G},{B} are decimal integers from 0 to 255). Currently it is fully supported only* by konsole and partially** in xterm. On Windows there is support for this in ConEmu. I am working on supporting this in vim (it will use guifg/guibg attributes in terminal). [Working version](https://bitbucket.org/ZyX_I/vim), bookmark 24-bit-xterm. Does not work if you try to compile with gui support enabled.

Issue is not urgent, but nice-to-have. I will probably look at it later as it should be easy to add.

\* Checked all terminals that have at least one stable version in Gentoo main portage tree.

** Uses nearest color from 8-bit palette.
"
80,Fixed problems in mode segment,2013-01-20T15:26:29Z,2013-01-20T18:43:36Z,,,,"- It was impossible to configure visual block and select block mode strings:
  JSON strings can contain neither raw control characters nor escape sequences 
  for them
- It was impossible to override only some of the strings:
  missing key generates KeyError exception, not IndexError
"
79,Add Pathogen/Vundle support,2013-01-20T06:00:57Z,2013-01-21T09:14:33Z,,,,"This commit enables use of

``` viml
Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
```

, which would be more convenience for `Vundle` user.
"
78,Some documentation additions,2013-01-19T23:15:39Z,2013-01-20T18:43:47Z,,,,"- Added notes about where common and extension-specific configuration is located
- Added common.paths config.json option description
- Fixed user-defined segments location found in segments section
- Fixed Themes/segments/module reference text

Ref #44
"
77,Moved configuration files into separate directory,2013-01-19T22:50:47Z,2013-01-20T18:43:52Z,,,,"Ref #72
"
76,Added “default_module” key,2013-01-19T22:24:42Z,2013-01-20T18:43:58Z,,,,"This version has per-theme “default_module” key.
"
75,Fixed highlighting when there are only 2 segments in theme,2013-01-19T22:20:14Z,2013-01-20T18:44:07Z,,,,"Here are two fixes:
- defaultdict makes it not throw KeyErrors.
- Replacing (False, False) with False makes it not throw vim.error (no color
  ctermbg=False)

Please check whether it breaks other renderers, I checked only vim.
"
74,Restructure extension directories?,2013-01-19T16:32:09Z,2013-01-20T18:14:54Z,"c:core, t:question",,,"As of 65e358dee20ea07286ddb13c56d207952b6b7fbd some segments have been moved into a common module to emphasize that they can be used by any extension. This doesn't really work with the current module naming scheme with a separate `ext` directory for each extension. I suggest that we restructure the extension directories somewhat.

This is the current structure:

```
powerline/
    matchers.py
    renderer.py
    segments.py
    ext/
        common/
            segments.py
        terminal/
            renderer.py
        tmux/
            renderer.py
        vim/
            bindings.py
            matchers.py
            renderer.py
            segments.py
```

This doesn't work too well with ""common"" modules like the terminal/tmux segments. They're located in the ext directory to match the current structure, even though ""common"" isn't really an extension.

I suggest that we move to a structure like this instead, as it would better allow common segments, common bindings, etc.:

```
powerline/
    bindings/
        vim.py
    matcher.py
    matchers/
        vim.py
    renderer.py
    renderers/
        terminal.py
        tmux.py
        vim.py
    segment.py
    segments/
        common.py
        vim.py
```

I'm not quite sure where we should put stuff like `powerline.vim` and `source_plugin.vim` though.

I'd like some feedback on this because I honestly don't know if this would be a change for the better or worse. Any other suggestions to structuring this stuff would also be great.
"
73,Can't see symbols in vim but present in tmux,2013-01-19T16:10:57Z,2013-01-19T18:01:42Z,,,,"Hey

I've recently switched computers and have installed the new version

After a bunch of head scratching though I just can't seem to get symbols displaying correctly in vim even though tmux seems to work correctly. I've also tested the zsh prompt which again shows the ? symbols

![Screen Shot 2013-01-19 at 16 06 18](https://f.cloud.github.com/assets/38786/80392/d4c8eb92-6252-11e2-9534-98148181e714.png)

I'm running OSX 10.8.2 with a patched font (Inconsolata). Running iTerm 2

Any help/suggestions greatly received!

/Matt
"
72,An ASCII version?,2013-01-19T15:12:47Z,2013-01-22T13:28:10Z,"c:configuration, t:enhancement",,,"`powerline` looks very cool. However, it would look weird on machines without the special font (e.g., log in remotely to my own machine with `powerline` from other road machines). Should we provide a simple ASCII look, and some mechanism to switch between the two?
"
71,Made it respect .git files,2013-01-19T13:26:46Z,2013-01-19T16:05:31Z,,,,"Fixes #67
"
70,Raise TypeError only if it is segment type that has problems,2013-01-19T12:50:57Z,2013-01-19T16:05:51Z,,,,"It raised TypeError also when module did not have required function
"
69,Added Gentoo live ebuild,2013-01-19T12:35:20Z,2013-01-19T16:06:00Z,,,,"Still needed to push this ebuild to some overlay or main tree; otherwise it requires more effort to use.

Note: this does not use Makefile found in docs/ directory using sphinx directly (though archlinux PKGBUILD seems to ignore it anyway, with the docs themselves).

Can you tell what for there is docutils dependency in `setup.py`? I see no direct references, and sphinx already depends on docutils. I have added this dependency to the ebuild, but it should probably be removed.
"
68,IPv6 issue in weather segment in tmux extension,2013-01-19T06:22:48Z,2013-01-19T16:04:03Z,t:bug,,,"`external_ip()` gets IP address from icanhazip.com, which will return IPv6 address if applicable.  This would cause an error in `weather()` since freegeoip.net doesn't support IPv6 address.  Using myip.dnsdynamic.org can avoid this issue.
"
67,Git submodule branches not showing correctly,2013-01-19T04:23:38Z,2013-01-19T16:04:03Z,t:bug,,,"Seems the terminal powerline git code isn't pulling the correct branch if the repo is a submodule. The structure is:

main project (master branch)
  -->submodule (development branch)

If you are in the submodule set to the development branch it's showing the active branch as ""master"" when it should be ""development"".
"
66,Vim segfaults when I load powerline in my .vimrc - runs fine when it's commented out (gdb dump included),2013-01-18T16:37:10Z,2013-01-19T02:15:40Z,,,,"I know you already closed a previous bug submission that was similar to mine.

Please have a look at the [gdb dump](http://pastebin.com/yZGQ9n7x) which clearly shows that the fault originates in a python call. 

I installed powerline with the pip method as described in the docs.
As far as I know, nothing else in my vim setup is running python besides powerline.

After vim is launched from the terminal and segfaults, all mouse clicks outputs garbage to my tty and the text marker is also gone, until I restart the tty session.

I am using vim 7.3 compiled with python support as you can see in my [output of vim --version](http://pastebin.com/yBmXFdqF) and I have python 2.7.3.

If there's anything else I can do or provide, please let me know. Powerline is such a great plugin. I would really like to do what I can to see that powerline matures into a rock solid and amazing piece of software. If the problem lies anywhere else but the powerline plugin, I sincerely apoligize for wasting your time, but I will also be thankful for taking your project seriously by ensuring that every possible bug is thoroughly examined.
"
65,Custom fonts are not supporting transparency on iTerm2,2013-01-18T10:31:04Z,2013-01-18T15:53:51Z,,,,"http://d.pr/i/vtt0
"
64,Font issues when increasing vertical spacing on iTerm2,2013-01-18T10:27:52Z,2013-01-18T10:31:15Z,"s:wontfix, t:bug",,,"http://d.pr/i/rRtx
"
63,symbols are and method names are missing,2013-01-18T09:29:40Z,2013-01-21T16:51:17Z,,,,"Hi,
Why symbols are and method names are missing in powerline ( see http://i.imgur.com/ZahvF.png ) ? 

```
easy_install --prefix=/home/mictadlo/apps/pymodules -UZ pyflakes
easy_install --prefix=/home/mictadlo/apps/pymodules -UZ rope
easy_install --prefix=/home/mictadlo/apps/pymodules -UZ ropemode
easy_install --prefix=/home/mictadlo/apps/pymodules -UZ ipython
easy_install --prefix=/home/mictadlo/apps/pymodules -UZ pylint
easy_install --prefix=/home/mictadlo/apps/pymodules -UZ pep8
easy_install --prefix=/home/mictadlo/apps/pymodules -UZ flake8

mkdir -p ~/.vim/colors && cd ~/.vim/colors 
wget -O wombat256mod.vim http://www.vim.org/scripts/download_script.php?src_id=13400
mkdir -p ~/.vim/autoload ~/.vim/bundle
curl -so ~/.vim/autoload/pathogen.vim https://raw.github.com/tpope/vim-pathogen/HEAD/autoload/pathogen.vim

cd ~/.vim/
git init
git submodule add https://github.com/klen/python-mode.git bundle/python-mode
git submodule add https://github.com/Lokaltog/powerline.git bundle/powerline
git submodule add https://github.com/kien/ctrlp.vim.git bundle/ctrlp.vim
git submodule add https://github.com/ivanov/vim-ipython bundle/vim-ipython      #videos avaible
git submodule add https://github.com/majutsushi/tagbar bundle/tagbar
git submodule add https://github.com/vim-scripts/indentpython.vim bundle/indentpython
git submodule add https://github.com/scrooloose/nerdtree bundle/nerdtree
git submodule add https://github.com/scrooloose/nerdcommenter bundle/nerdcommenter
git submodule add https://github.com/vim-scripts/mru.vim bundle/mru.vim
git submodule add https://github.com/tpope/vim-surround.git bundle/vim-surround #?
git submodule add https://github.com/ervandew/supertab.git bundle/supertab
git submodule add https://github.com/sjl/gundo.vim.git bundle/gundo.vim
git submodule add https://github.com/alfredodeza/pytest.vim.git bundle/pytest.vim
git submodule add https://github.com/reinh/vim-makegreen bundle/vim-makegreen
git submodule add https://github.com/rstacruz/sparkup.git bundle/sparkup
git submodule init
git submodule update
git submodule foreach git submodule init
git submodule foreach git submodule update
rm -rf .git .gitmodules

mkdir -p ~/.vim/ftplugin 
wget -O ~/.vim/ftplugin/python_editing.vim http://www.vim.org/scripts/download_script.php?src_id=5492
```

I use the following .vimrc:

```
"" Sample .vimrc file by Martin Brochhaus
"" Presented at PyCon APAC 2012


"" ============================================
"" Note to myself:
"" DO NOT USE <C-z> FOR SAVING WHEN PRESENTING!
"" ============================================


"" Automatic reloading of .vimrc
autocmd! bufwritepost .vimrc source %


"" Better copy & paste
"" When you want to paste large blocks of code into vim, press F2 before you
"" paste. At the bottom you should see ``-- INSERT (paste) --``.

set pastetoggle=<F2>
set clipboard=unnamed


"" Mouse and backspace
set mouse=a  "" on OSX press ALT and click
"""" set bs=2     "" make backspace behave like normal again


"" Rebind <Leader> key
"" I like to have it here becuase it is easier to reach than the default and
"" it is next to ``m`` and ``n`` which I use for navigating between tabs.
let mapleader = "",""


"" Bind nohl
"" Removes highlight of your last search
"" ``<C>`` stands for ``CTRL`` and therefore ``<C-n>`` stands for ``CTRL+n``
noremap <C-n> :nohl<CR>
vnoremap <C-n> :nohl<CR>
inoremap <C-n> :nohl<CR>


"" Quicksave command
"""" noremap <C-Z> :update<CR>
"""" vnoremap <C-Z> <C-C>:update<CR>
"""" inoremap <C-Z> <C-O>:update<CR>


"" Quick quit command
"""" noremap <Leader>e :quit<CR>  "" Quit current window
"""" noremap <Leader>E :qa!<CR>   "" Quit all windows


"" bind Ctrl+<movement> keys to move around the windows, instead of using Ctrl+w + <movement>
"" Every unnecessary keystroke that can be saved is good for your health :)
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h


"" easier moving between tabs
map <Leader>n <esc>:tabprevious<CR>
map <Leader>m <esc>:tabnext<CR>


"" map sort function to a key
vnoremap <Leader>s :sort<CR>


"" easier moving of code blocks
"" Try to go into visual mode (v), thenselect several lines of code here and
"" then press ``>`` several times.
vnoremap < <gv  "" better indentation
vnoremap > >gv  "" better indentation


"" Show whitespace
"" MUST be inserted BEFORE the colorscheme command
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
au InsertLeave * match ExtraWhitespace /\s\+$/


"" Color scheme
"" mkdir -p ~/.vim/colors && cd ~/.vim/colors
"" wget -O wombat256mod.vim http://www.vim.org/scripts/download_script.php?src_id=13400
set t_Co=256
color wombat256mod


"" Enable syntax highlighting
"" You need to reload this file for the change to apply
filetype off
filetype plugin indent on
syntax on


"" Showing line numbers and length
set number  "" show line numbers
set tw=79   "" width of document (used by gd)
set nowrap  "" don't automatically wrap on load
set fo-=t   "" don't automatically wrap text when typing
set colorcolumn=80
highlight ColorColumn ctermbg=233


"" easier formatting of paragraphs
vmap Q gq
nmap Q gqap


"" Useful settings
set history=700
set undolevels=700


"" Real programmers don't use TABs but spaces
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set expandtab


"" Make search case insensitive
set hlsearch
set incsearch
set ignorecase
set smartcase


"" Disable stupid backup and swap files - they trigger too many events
"" for file system watchers
set nobackup
set nowritebackup
set noswapfile


"" Setup Pathogen to manage your plugins
"" mkdir -p ~/.vim/autoload ~/.vim/bundle
"" curl -so ~/.vim/autoload/pathogen.vim https://raw.github.com/tpope/vim-pathogen/HEAD/autoload/pathogen.vim
"" Now you can install any plugin into a .vim/bundle/plugin-name/ folder
call pathogen#infect()


"" ============================================================================
"" Python IDE Setup
"" ============================================================================


"" Settings for vim-powerline
"" cd ~/.vim/bundle
"" git clone git://github.com/Lokaltog/vim-powerline.git
source ~/.vim/bundle/powerline/powerline/ext/vim/source_plugin.vim
let g:Powerline_symbols = 'fancy'
set laststatus=2


"" Settings for ctrlp
"" cd ~/.vim/bundle
"" git clone https://github.com/kien/ctrlp.vim.git
let g:ctrlp_max_height = 30
set wildignore+=*.pyc
set wildignore+=*_build/*
set wildignore+=*/coverage/*


"" Settings for python-mode
"" cd ~/.vim/bundle
"" git clone https://github.com/klen/python-mode
map <Leader>g :call RopeGotoDefinition()<CR>
let ropevim_enable_shortcuts = 1
let g:pymode_rope_goto_def_newwin = ""vnew""
let g:pymode_rope_extended_complete = 1
let g:pymode_breakpoint = 0
let g:pymode_syntax = 1
let g:pymode_syntax_builtin_objs = 0
let g:pymode_syntax_builtin_funcs = 0
map <Leader>b Oimport ipdb; ipdb.set_trace() # BREAKPOINT<C-c>

"" Better navigating through omnicomplete option list
"" See http://stackoverflow.com/questions/2170023/how-to-map-keys-for-popup-menu-in-vim
"""" set completeopt=longest,menuone
function! OmniPopup(action)
if pumvisible()
    if a:action == 'j'
    return ""\<C-N>""
    elseif a:action == 'k'
    return ""\<C-P>""
    endif
endif
return a:action
endfunction

inoremap <silent><C-j> <C-R>=OmniPopup('j')<CR>
inoremap <silent><C-k> <C-R>=OmniPopup('k')<CR>


"" Python folding
"" mkdir -p ~/.vim/ftplugin
"" wget -O ~/.vim/ftplugin/python_editing.vim http://www.vim.org/scripts/download_script.php?src_id=5492
set nofoldenable

"" SuperTab plugin can be used to avoid needing to press Ctrl-X then Ctrl-O to invoke the popup completion menu. 
let g:SuperTabDefaultCompletionType = ""context""

"" Now we just enable the menu and pydoc preview to get the most useful 
"" information out of the code completion
set completeopt=menuone,longest,preview
```

What could cause that?

Thank you in advance.
"
62,Update docs/source/overview.rst,2013-01-18T03:57:41Z,2013-01-18T06:59:06Z,,,,"Updated the --user option for non root installs using pip
"
61,installation instructions using pip may need some updating,2013-01-18T03:52:50Z,2013-01-18T06:58:09Z,"a:doc update, c:installation, t:bug",,,"For the user installation option using pip, I had to use this pip command (debian squeeze, pip version 0.7.2)

pip install --install-option=""--user"" https://github.com/Lokaltog/powerline/tarball/develop
"
60,Request for feedback: Patched fonts may be unnecessary for many users,2013-01-17T20:44:21Z,2013-01-22T10:31:49Z,"c:font, t:question",,,"After moving the glyphs to the private use area I've done some testing and on my system and it appears that I don't actually have to have a patched font for the custom glyphs to work anymore. The glyphs look nice in all the coding fonts I've tried.

I've added a font file with only the patched symbols in it in 2cfd01ec73ab7ffc628db98ef11e43285246a572 (located in `powerline/fontpatcher/PowerlineSymbols.otf`), and I'd like users on different systems to try this and see which systems this workaround works on.

**EDIT: Please try [these instructions](http://lokaltog.github.com/powerline/overview.html#font-installation) instead!**

---

Steps to reproduce (for Linux users, but probably quite similar for OSX users):
1. Uninstall _all_ fonts that may have Powerline glyphs in them.
2. Copy `PowerlineSymbols.otf` to `~/.fonts`.
3. Run `fc-cache -vf ~/.fonts`
4. Close all gvim instances and terminal emulators that's going to use Powerline.
5. Start vim/gvim and select any coding font you want.

My system is running Arch Linux and vim in the Xfce Terminal. Let me know which systems and fonts you're using, and feel free to provide screenshots of how it looks.

Thanks!
"
59,Vim Startup Error R6034,2013-01-17T17:49:47Z,2013-01-17T17:51:41Z,s:duplicate,,,"When I use the .vimrc command:

`python from powerline.ext.vim import source_plugin; source_plugin()`

It gives me a runtime error from Microsoft Visual C++ Library.  Vim then starts up and the powerline looks great, but anytime it refreshes, like I click my mouse somewhere I want to edit, two command windows breifly show up and close.  I am on Windows 7 32bit
"
58,Custom font not working for iTerm2,2013-01-17T16:19:12Z,2013-01-17T16:20:05Z,"s:wontfix, t:bug",,,"In terminal, I get funny colored characters: http://d.pr/i/KFFv

But in iTerm2 they are displayed as question marks (I've tried two different modified fonts): http://d.pr/i/AUy4

OS X 10.8.2, iTerm2 1.0.0.20120724, zsh 5.0.2 (x86_64-apple-darwin12.2.1)
"
57,Color leak in ZSH,2013-01-17T16:15:26Z,2013-01-17T16:25:21Z,,,,"`zsh 5.0.2 (x86_64-apple-darwin12.2.1)`, no `.zshrc`

I set `PS1` by:

```
setopt prompt_subst
export PS1=\`~/.dotfiles/libs/powerline/scripts/powerline-prompt\`
```

I invoke `ls -G` (to enable colors for ls), and I get following output: http://d.pr/i/AUy4

As you can see, color 'leaks' from the prompt into my input and beginning of `ls -G` command output, until it's replaced by another color.
"
56,prompt not loading properly in zsh,2013-01-17T15:35:11Z,2013-01-17T16:07:43Z,"c:b:shell, t:bug",,,"```
Adams-MacBook-Pro% export PS1=`~/.dotfiles/libs/powerline/scripts/powerline-prompt`
zsh: not an identifier: %{^[[38;5;31;48;5;240;22m%}?
```

```
zsh --version
zsh 5.0.2 (x86_64-apple-darwin12.2.1)
```
"
55,turn off nag prompt?,2013-01-17T10:16:01Z,2013-01-17T10:28:49Z,s:wontfix,,,"Is it possible to disable the nag prompt about upgrading to the plugin?

At the moment, being an admin, I'm installing on to a lot of machines each week & I carry the old Powerline plugin in my vimrc & use vundle to install my plugins when I pull in my dotfiles from Github for every machine.

I like the look of the new plugin but I'm just going over the process of installing it first on my Macbook Pro & it's quite an involved process so I'd rather leave it for a couple of weeks before I upgrade (I've got to check it against CentOS 5.8, 5.9 & 6.3, Debian Squeeze & Wheezy, Fedora 17, 18 & Rawhide, Lubuntu 12.10, OS X Snow Leopard & Ubuntu Precise & Quantal & I haven't got the time at the moment).

Any help appreciated...
"
54,Error when installed use vundle,2013-01-17T10:04:39Z,2013-01-21T16:50:10Z,,,,"I try install new powerline by us `vundle`, and put this line in my `.vimrc`:

`source {path}/powerline/ext/vim/source_plugin.vim`.

But I got this error during vim startup, `E858 Eval not return a valid python object`.

Anyone can help me figure this out?
"
53,Possibly better installation instruction for developers,2013-01-17T09:51:51Z,2013-01-22T13:25:41Z,"a:doc update, c:documentation, t:enhancement",,,"Right now, the documentation explains how to use `pip` to install the develop tarball. The following is probably the best method because it will allow users to fiddle with it and then commit it for pull-requests. I don't know if you want this in documentation or not, but it is helpful, so I add it here:

```
mkdir ~/.pip
cd ~/.pip
pip install -e git+https://github.com/Lokaltog/powerline.git@develop#egg=powerline
```

This creates a directory `~/.pip/src/powerline` which is also a git repository for development purposes. It can be edited and it affects powerline instantaneously.
"
52,WANTED: Package maintainers,2013-01-16T15:49:03Z,,"c:installation, t:question",,,"Since Powerline is intended to be installed as a Python package and not cloned into .vim as the previous version, it would be much more convenient to have Powerline in each distro's package tree (it's currently available on the AUR for Arch Linux users) so it can be updated automatically as a part of upgrading the user's system.

It would be awesome if any users of other distros or OSX could provide and maintain packages for Powerline when it's released. Please post links to the packages in this issue so I can add them to the docs.
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051211-wanted-package-maintainers?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
51,Improve default tmux theme,2013-01-16T15:29:23Z,2013-01-22T15:39:56Z,t:enhancement,,,"I think [sjl's tmux theme](https://github.com/sjl/dotfiles/blob/master/tmux/tmux.conf) looks great and could be a nice base for an improved tmux theme. The tmux theme should also support cropping of segments.
"
50,"vim - error during startup - ""E858: Eval did not return a valid python object""",2013-01-15T18:20:58Z,2013-01-15T19:25:45Z,"s:duplicate, s:wontfix, t:bug",,,"```
Executing BufWinEnter Auto commands for ""*""
autocommand call s:UpdateWindows()

Error detected while processing function <SNR>10_UpdateWindows:
line    2:
E858: Eval did not return a valid python object
Executing BufEnter Auto commands for ""*""
autocommand call s:UpdateWindows()
```
"
49,Patching Consolas font in OSX,2013-01-13T07:17:31Z,2013-01-21T16:47:57Z,,,,"After hours of struggling, I have been unable to get the Consolas font working with powerline in OSX. Ive tried downloading the pre-patched fonts as well as using fontpatcher to patch them myself. So far, no dice. The closest I could get was using fontpatcher on the already pre-patched fonts which results in working italicized fonts but not for bold nor for regular.
"
48,Improved loading from Vim,2013-01-13T07:16:11Z,2013-01-13T17:14:15Z,,,,"Works nicely with pathogen.
No need to run python commands or source from vimrc.
"
47,Font patching happens in-place on OSX,2013-01-11T17:51:57Z,2013-01-21T16:49:00Z,t:bug,,,"I was surprised to find that fontpatcher.py patches the font in-place. This is not what I expected from the docs.

IMHO there should be a big red warning somewhere, so people do not (like I did) run this directly on system fonts. At bare minimum the OSX documentation should be updated to remove the post-patching install instructions that seem pretty redundant.
"
46,OSX font patching brew docs out of date,2013-01-11T17:47:35Z,2013-01-17T09:04:45Z,"c:documentation, e:macos, t:bug",Error,Error: GCC could not be found,"The instructions for setting up fontforge say to do the following:

```
brew install --use-gcc fontforge
```

However, this throws the following error:

```
Error: GCC could not be found
```

Turns out you should just not use the `--use-gcc` flag.

References:
- [Brew Issue #11457](https://github.com/mxcl/homebrew/issues/11457)
- [Brew PR #10714](https://github.com/mxcl/homebrew/pull/10714)

---

Also of note is the following Caveat in the fontforge Formula:

```
To use the Python extension with non-homebrew Python, you need to amend your
PYTHONPATH like so:
  export PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH
```

Just running the export before calling fontforge seems to work ok.
"
45,Colorscheme namespacing,2013-01-11T11:29:31Z,2013-01-21T16:43:49Z,"c:core, t:question",,,"Currently colorschemes will be a complete mess unless highlighting groups can be namespaced. Some highlighting groups are entirely extension-specific and should not be available for other extensions. This will also allow different extensions to highlight functions with the same function name differently.

Namespacing could be done by having another dict in the colorscheme json files:

```
""groups"": {
    ""gradient1"": { ... } <-- available for all extensions
    ...
},
""extension_groups"": {
    ""vim"": {
        ""modified_indicator"": { ... } <-- only available in vim
        ...
    }
}
```

What do you guys think?
"
44,Add more tmux segments,2013-01-10T20:53:05Z,2013-01-16T07:32:29Z,,,,"I've added some new tmux segments that I've found useful, inspired by [tmux-powerline](https://github.com/erikw/tmux-powerline).

Included are segments for user name, external IP, uptime, system load, weather, and dates/times.

Note: this relies on Lokaltog/powerline#41 to cache the results of weather/external IP, since they're too costly to refresh every time.

Here's what they look like:
![Screenshot from 2013-01-10 15:52:07](https://f.cloud.github.com/assets/77758/58169/9e6ad82c-5b67-11e2-999c-a4043c61f0aa.png)
"
43,Add better tmux examples,2013-01-10T19:41:39Z,2013-01-16T07:32:29Z,,,,"The current tmux example script/configuration only allows Powerline to configure the left side. These changes make the example `pl.py` script able to output segments for both sides, as well as making the script slightly more extensible. I've used this script to get Powerline looking much like [tmux-powerline](https://github.com/erikw/tmux-powerline) (with a few custom segments).

![enhanced tmux config](https://f.cloud.github.com/assets/77758/57901/1cb245d6-5b5d-11e2-8ac1-1975b41e6918.png)
"
42,guifont and guifontwide,2013-01-10T17:49:14Z,2013-01-11T07:50:09Z,"s:wontfix, t:bug",,,"OS: Windows 7
Version: 7.3 path 1-754

set guifont=Inconsolata\ for\ Powerline:h12:cANSI
set guifontwide=YaHei_Consolas_Hybrid
YaHei_Consolas_Hybrid not path
can't see the fancy symbols
vim-powerline no problem

set guifont=Inconsolata\ for\ Powerline:h12:cANSI
set guifontwide=
OK
"
41,Added file persistence to memoize decorator,2013-01-10T17:47:32Z,2013-01-16T07:32:28Z,,,,"(apologies for duplicate pull requests -- wanted to make a specialized branch)

The memoize decorator that's used to cache segments doesn't work with tmux since the caching mechanism stores results in memory, which is erased after the script has been evaluated.

My solution adds a ""filename"" argument to the memoize decorator, which should contain an absolute path to a file that will hold the pickled cache. Might want to change this to always put the file in the tmpdir.
"
40,when set ambiwidth=double,2013-01-10T17:39:26Z,2013-01-11T07:43:29Z,"s:wontfix, t:bug",,,"when set ambiwidth=double

![Capture_2013-01-11_01 35 49](https://f.cloud.github.com/assets/1782086/57524/96915920-5b4c-11e2-8129-9b096fe27068.png)
"
39,Mac OSX 10.8.2 (Fails to load properly),2013-01-10T08:16:51Z,2013-01-17T09:04:45Z,"c:documentation, e:macos, t:bug",ImportError,ImportError: No module named powerline.ext.vim,"In Mac OSX 10.8.2 im unable to get powerline to work, it bails everytime vim lauches with the following error:

Error detected while processing /Users/wbroach/.vimrc:
line    1:
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
ImportError: No module named powerline.ext.vim

I can verify that the module is in fact installed:

Python 2.7.2 (default, Jun 20 2012, 16:23:33) 
[GCC 4.2.1 Compatible Apple Clang 4.0 (tags/Apple/clang-418.0.60)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.

> > > import powerline.ext.vim
> > > dir(powerline)
> > > ['**builtins**', '**doc**', '**file**', '**name**', '**package**', '**path**', 'ext']

It can be found in the following location on my system:

/Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/ext/vim/powerline.vim
/Library/Python/2.7/site-packages/powerline/ext/vim/powerline.vim

Im using just a plain blank .vimrc with just one line, shown below:

python from powerline.ext.vim import source_plugin; source_plugin()

My sys specs are as follows:

VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Aug 16 2012 15:12:57)
Python 2.7.2 (default, Jun 20 2012, 16:23:33) 

I can verify that vim is in fact using the correct python version that the module is installed to

in vim:

:python import sys
:python print(sys.version)
2.7.2 (default, Jun 20 2012, 16:23:33)
[GCC 4.2.1 Compatible Apple Clang 4.0 (tags/Apple/clang-418.0.60)]
Press ENTER or type command to continue

Please advise
"
38,Added file persistence to memoize decorator,2013-01-10T06:27:05Z,2013-01-10T17:47:40Z,,,,"The memoize decorator that's used to cache segments doesn't work with tmux since the caching mechanism stores results in memory, which is erased after the script has been evaluated.

My solution adds a ""filename"" argument to the memoize decorator, which should contain an absolute path to a file that will hold the pickled cache. Might want to change this to always put the file in the tmpdir.
"
37,Powerline errors out after recent commit,2013-01-09T23:17:10Z,2013-01-11T08:08:30Z,"s:wontfix, t:bug",,,"Due to this commit: 8d584d0

I now get the following error when launching MacVim

![big](https://f.cloud.github.com/assets/83376/55082/9f2fd240-5ab2-11e2-85b3-b2da59433586.png)

I have the plugin installed via Vundle, I assume this is still a valid way to install the plugin?

I source it via:

```
source ~/.vim/bundle/powerline/powerline/ext/vim/source_plugin.vim
```

//Edit: I sourced the wrong commit
"
36,Powerline on Windows opens several cmd windows on git managed files,2013-01-08T19:04:14Z,2013-01-09T12:19:00Z,"c:VCS support, c:b:vim, e:windows, t:bug",,,"I’m running gVim 7.3 (patches 1-754) on Windows.

Powerline is running fine in all aspects:
- Shows every included segment correctly
- No error messages

There is just one major problem:
Every time I work on a file inside a git repository, it flashes 2 cmd windows invoking git and almost immediatly disappearing.
This happens every time I click inside the window, or move the cursor.
The windows also steal the focus of vim, so working on a file is impossible.
"
35,Merge configuration files,2013-01-08T14:06:32Z,2013-01-21T16:47:22Z,t:enhancement,,,"Currently user config files have to include all configuration options to work properly because the plugin only loads config files from one location. By merging user config files with the provided defaults, users will be able to override single options without including all the other config options.
"
34,setup.py syntax error,2013-01-07T21:40:02Z,2013-01-07T23:21:51Z,,SyntaxError,SyntaxError: keyword argument repeated,"Hello,

I think in last version posted to pipy, there's a glitch in the setup file. It looks like you put two times the zip_safe in the setup.py file.

```
Downloading/unpacking powerline
  Downloading powerline-0.2.4.zip (79kB): 79kB downloaded
  Running setup.py egg_info for package powerline
    Traceback (most recent call last):
      File ""<string>"", line 16, in <module>
      File ""/var/folders/pm/pmEvZQRMFJ8H9Sfw2IZGgU+++TM/-Tmp-/pip-build/powerline/setup.py"", line 27
        zip_safe = False,
    SyntaxError: keyword argument repeated
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File ""<string>"", line 16, in <module>

  File ""/var/folders/pm/pmEvZQRMFJ8H9Sfw2IZGgU+++TM/-Tmp-/pip-build/powerline/setup.py"", line 27

    zip_safe = False,

SyntaxError: keyword argument repeated

----------------------------------------
Command python setup.py egg_info failed with error code 1 in /var/folders/pm/pmEvZQRMFJ8H9Sfw2IZGgU+++TM/-Tmp-/pip-build/powerline
```

here's a little patch, if that helps:

```
diff --git a/setup.py b/setup.py.patched
index 41b8b12..048d2f9 100644
--- a/setup.py
+++ b/setup.py.a
@@ -24,7 +24,6 @@ setup(
                        'templates/data/images/*'
                ]
        },
-   zip_safe = False,

        install_requires = [
                'setuptools>=0.6b1',
```

HTH
"
33,Feature request: rbenv support,2013-01-06T01:27:28Z,2013-01-07T07:14:25Z,,,,"In the previous version of vim-powerline there was RVM support. It would be great if there was support for rbenv in the new one.
"
32,Don’t raise an exception when encountered untracked file,2013-01-05T14:20:44Z,2013-01-07T07:22:58Z,,,,
31,Added additional_key to memoization function,2013-01-05T14:20:18Z,2013-01-07T07:22:52Z,,,,"Fixes #29
"
30,Never use time.time() to measure time intervals,2013-01-05T13:25:52Z,2013-01-05T13:47:42Z,,,,"This function is to be used to get local time only: nobody can say whether ntpd 
won’t adjust it next second, ntpdate will shift it by a few centuries or any 
such thing. There is time.clock() for measuring time intervals.
"
29,Memoization only work on per-session basis,2013-01-05T11:12:52Z,2013-01-07T07:22:28Z,,,,"It is completely unsatisfactory for file_vcs_status segment: when switching between files I get information for file I have switched from. Neither it is good for branch segment: I constantly look for code in other projects as an example or even reference.
"
28,Recreate git.Repository() on each call,2013-01-04T18:19:54Z,2013-01-07T07:22:46Z,,,,"It appears that pygit2 has similar to mercurial’s issue with statuses (they are 
not updated) and needs to be regenerated on each call as well. Implies to index 
statuses only though, that is why I used to think pygit2 does not have this 
problem.
"
27,Unable to Get Working on iTerm2 ,2013-01-03T23:03:51Z,2013-01-17T09:04:45Z,"c:font, t:bug",,,"I've been unable to get Powerline working properly using vim in iTerm2.

It works fine in MacVim, and in the standard Mac OSX Terminal application.

It appears as if the patched font is not being used as I get question mark characters.  However, I've used the same font with both Terminal and MacVim without issue... 

I've tried downloading several patched fonts from other people, and patched my own (Monaco and Consolas) with no improvement.

Screenshot:
![Screen Shot 2013-01-03 at 5 55 54 PM](https://f.cloud.github.com/assets/495522/42041/c5b0b6be-55f8-11e2-88b5-3d9bd048895c.png)

Anyone else experienced anything similar?

I'm using iTerm2 Build 1.0.0.20120203 with Vim 7.3p762 on OSX 10.8.2.

Any suggestions would be appreciated!
"
26,"Added file_vcs_status segment, using powerline.vcs instead of fugitive",2013-01-02T23:35:48Z,2013-01-04T13:53:34Z,,,,"Using pure-python implementation allows to use the same code in the terminal 
segments (not implemented currently). It also should be more effective. Git 
module is able to use pygit2 instead of command-line git which is much faster. 
Mercurial module assumes that mercurial is always accessible as a python module.

Code for repository (not file) status is untested. It exists solely for terminal 
segments.
"
25,Added virtcol_current segment. Also made it default,2013-01-02T21:24:11Z,2013-01-03T06:33:59Z,,,,"I doubt anybody here ever wanted to see byte offset. When it comes to 
a questions like alignment, forced text width and so on only virtual columns 
matter. It would be good to optionally take concealed characters into account, 
but vim does not provide a way to do so (well, except recent screencol() added 
solely for testing which would be hard, but not impossible, to adapt to such 
needs).
"
24,Use shorter and more readable form of :source,2013-01-02T20:39:45Z,2013-01-02T20:42:01Z,,,,
23,“pl” is too short name not to be likely claimed by anybody else,2013-01-02T20:36:00Z,2013-01-02T20:42:12Z,,,,"Don’t put such names in global scope, it is completely possible that “pl” will 
be claimed by some other plugin as well. There is no local scope for each .vim 
file in vim-python interface.
"
22,Changed code to use vim_get_func('fnameescape').,2013-01-02T20:22:40Z,2013-01-02T20:42:06Z,,,,"Previous version had problems with paths containing backslashes and/or double 
quotes.
"
21,Add Pathogen/Vundle support,2012-12-30T18:03:53Z,2013-01-02T08:12:40Z,,,,
20,Is it possible to change chars used for separators?,2012-12-29T17:38:49Z,2012-12-29T22:35:48Z,,,,"Hi,

It would be nice if there would be a way to override chars used for separators. That will allow to avoid font patching and use own separators, e.g. ""|"" instead of less-than arrow and so on. Something similar to vim's `set listchars=...`
"
19,Purge out :echoe,2012-12-21T19:03:55Z,2013-01-02T07:15:46Z,,,,"`:echoe` is unstable: unless it is already in `:try`…`:catch` block
you never know for sure whether or not it will break execution.
Thus the only valid use for `:echoe` is

```
try
    echoe 'Msg'
endtry
```

: rough equivalent to `:throw` (throws, but with different message).
As this is probably not the thing you want to do
I changed it to use `:echomsg`.
"
18,a lot of errors whyle `rake update` with Vundle,2012-12-21T09:00:41Z,2012-12-21T09:04:04Z,"s:invalid, s:wontfix",,,"[Vundle](https://github.com/gmarik/vundle) plugin has a rake task to update installed plugins - `rake update`. Rake task outputs a lot of errors:

```
Updating Bundles
Error detected while processing /home/saks/.vim/bundle/powerline/powerline/ext/vim/powerline.vim:
line    1:
E319: Sorry, the command is not available in this version: python import sys, vim, os
line    2:
E319: Sorry, the command is not available in this version: python sys.path.append(vim.eval('expand(""<sfile>:h:h:h:h"")'))
line    3:
E319: Sorry, the command is not available in this version: python import uuid
line    4:
E319: Sorry, the command is not available in this version: python from powerline.core import Powerline
line    5:
E319: Sorry, the command is not available in this version: python pl = Powerline('vim')
line   10:
E319: Sorry, the command is not available in this version: ^Ipython import json
Error detected while processing /home/saks/.vimrc:
line  329:
E319: Sorry, the command is not available in this version: python from powerline.ext.vim import source_plugin; source_plugin()
```
"
17,Documentation improvements,2012-12-20T14:57:16Z,2013-01-21T16:46:37Z,"c:documentation, t:question",,,"I've written most of the [documentation](http://lokaltog.github.com/powerline/), but I'd like some comments on stuff that can be improved, and if anything is missing from the docs. I'm not a native English speaker either, so I'm sure much of the grammar in the docs can be improved.

Please let me know if you have any comments, and feel free to open a pull request with corrections or improvements to the docs.
"
16,fancy symbols are not aligned properly,2012-12-20T09:38:41Z,2012-12-20T11:04:08Z,s:duplicate,,,"![screenshot1](https://f.cloud.github.com/assets/99110/24091/efa73e50-4a88-11e2-84a6-fd43be50b7ae.png)
![screenshot2](https://f.cloud.github.com/assets/99110/24094/f3e9339c-4a88-11e2-881c-6632549176a3.png)
"
15,Purge out the requirement to use sudo,2012-12-19T04:36:56Z,2012-12-19T12:06:42Z,,,,"There is no need in regenerating font cache in _all_ directories. 
Make documentation suggest to regenerate just `~/.fonts` cache 
which actually changed.
"
14,Font patching causes misaligned glyphs,2012-12-18T20:04:25Z,2013-01-21T16:46:17Z,t:bug,,,"So I attempted to patch Source Code Pro myself, and was able to do it successfully, however, it doesn't seem to have actually worked properly. See attached fonts.

https://dl.dropbox.com/u/18782/font-examples.zip

It's as if the triangles don't properly align.
"
13,Added installation instructions to README,2012-12-18T16:05:49Z,2012-12-18T16:19:13Z,,,,
12,Non-current windows use the theme of the current window,2012-12-17T10:42:44Z,2012-12-17T12:28:02Z,t:bug,,,"This is probably related to #11 in some way, and it can be reproduced in a similar fashion: Open vim, create a couple of vertical splits and then run `:help` in one of the windows. Navigate between the windows and you'll notice that whenever the help window is focused, the other non-current windows will use its theme (in this case the file path and column segment is removed).
"
11,vim: Non-current windows use wrong info after switching between split windows,2012-12-15T16:37:48Z,2012-12-17T10:32:31Z,t:bug,,,"For some reason non-current windows use the info of the last window added(?) after switching between split windows. Reproducable by following these steps:
1. Open vim
2. Open a random file, e.g. your vimrc
3. Do a `:vsplit`
4. Open another file or a blank file with `:enew`
5. Switch to the other split window

The non-current window is now displaying all the information from the original buffer (the first random file), and not the correct information for the buffer that is present in that window.

This bug may be caused by the ""randomization"" of window numbers when switching between split numbers, and the [looping through windows](https://github.com/Lokaltog/powerline/blob/f074c1fb297095c5665d9c93f0c5b674c22e8b92/plugin/vim/powerline.vim#L27-37) where the `w:powerline` window variable is set. I've tried connecting the window data with the buffer number (i.e. storing data in `w:powerline[bufnr]`) but with no luck.
"
10,Added local theme support (mainly for buffer-local themes),2012-12-14T14:20:04Z,2012-12-14T16:00:26Z,,,,
9,"Don’t change windows using windo, use setwinvar() instead",2012-12-13T17:15:47Z,2012-12-13T17:19:41Z,,,,"I don’t really like the idea of changing windows which is likely to alter previous window marker (unsure though).
"
8,"Python 2, Python 3, or both?",2012-12-10T11:26:43Z,2013-01-21T19:45:41Z,t:question,,,"Because this plugin depends so much on correct Unicode handling, I'm very uncertain about this issue. I haven't written Python 2-specific code for quite a while before this project, so I fear that my lack of experience with Python 2's quirky Unicode handling may result in weird bugs in the future (it already has occured in this project).

Also, I think it's more responsible to write new code specifically for Python 3, to increase the adoption rate of this version of Python. It's been 4 years since its release, so I'm a bit reluctant to write new code for Python 2 in general.

My impression is that vim is rarely compiled with Python 3 support, which would require users to compile vim manually. I'm not really sure if this even is an issue. Does Homebrew for OS X provide precompiled binaries, or do users need to compile vim on their system anyways? Is it fair to require Linux users to compile vim manually with Python 3 support? In my experience this is quite a bit of hassle on systems like Ubuntu.

I'd like some input on this issue. I'd like to see this version of Powerline gain at least the same user base as the pure vimscript version, but a hurdle like this could certainly limit adoption of the new version. On the other hand, most vim users are developers, so do they even care if they have to compile vim manually?
"
7,What about simplifying the core lib with oo?,2012-12-05T08:38:22Z,2013-01-04T14:08:05Z,"c:core, t:question",,,"I was looking through the library and I think there are some highly complex portions of the code such as a function-generator for the core powerline-renderer (yikes). I would like to hear some opinions on restructuring this code a more object-oriented approach. This could simplify the library (making it easier to manage and maintain) as well as allow for plugins/themes that extend these classes and allow for further customization if the core library doesn't give exactly what they want.

What do you think about the following classes

```
Theme: (Takes in json file or whatever and generates left-right lists of Segments)
Powerline ( Takes Theme and ""format"")
Renderer: (takes a segment and produces a string representation based on ""format"")
                 TmuxRenderer: specific for format=""tmux""
                 VimRenderer: ... ""vim""
                 TerminalRenderer: ... ""terminal
Segment: takes key-word-arguments from Theme
```

If you agree with this, I'd be glad to take a crack at it to see what you think. Of course, the theme syntax hasn't been settled yet, so it would be a bit difficult to start without putting `**kwargs` everywhere (not a good idea, I think). Any other thoughts or ideas with regards to abstracting the core powerline lib?
"
6,Current status,2012-12-04T22:04:14Z,2012-12-05T13:57:25Z,t:question,,,"Hi, my name is Eduan.

I am very interested in this descendant of the original, but I'm not sure of it's status.

Is it useable? Is it in alpha? Beta? What is it's current status.

Thanks for your attention.
"
5,Perform checks for common issues when plugin is loaded,2012-12-04T18:34:29Z,2013-01-22T13:32:12Z,t:enhancement,,,"When Powerline is loaded it could do a couple of basic checks to see if the environment is properly configured to use UTF-8 and other issues, and report potential problems to the user. The checks that could be done include:
- Check the `LANG` and `LC_*` environment variables to see if they're configured with an UTF-8 charset and automatically fallback to the fallback symbols if the charset is incorrectly configured
- Check vim's `encoding` option
- Check (and set?) vim's `laststatus` option
- Check `$TERM` to see if the terminal supports 256 colors and optionally display an error message or notice
- Since the new plugin is Python based, it could possibly check if the font that is configured is patched, and automatically select whether to use fancy symbols or fallback symbols
- Check if the plugin is run in a tmux environment , and whether it's configured with the proper `default-terminal` setting
"
4,Unicode code points and new glyphs,2012-11-28T07:13:39Z,2013-01-04T14:10:28Z,t:question,,,"As discussed in Lokaltog/vim-powerline#128, all the glyphs are going to be moved to the Private Use Area for this version of Powerline. This also gives us the opportunity to include some new glyphs in this version. I'm thinking about a pencil shaped icon (file modified) and a window shaped icon (like two overlapping windows) for buffer number segments.

Since this project is going to be used for tmux and shell prompts as well, do you have any other ideas to new glyphs that we could include?
"
3,Plugin API,2012-11-26T07:05:44Z,,"c:configuration, t:question",,,"As proposed by @ZyX-I in Lokaltog/vim-powerline#193, we should allow plugin authors to define the statuslines for their plugins in their own repos as opposed to including just the ""top"" plugins in the main Powerline code base. The proposed syntax was:

``` json
{
    ""allow_plugin_subthemes"": 1,
    ""config_dirs"": [""/full/path/to/dir"", ""~/.powerline""],
    ""vim"": {""theme"": {""default"": ""my"", ""nerdtree"": ""nerdtree""}, ""colorscheme"": ""my""}
}
```

A nice touch here is that the user can allow or disallow plugins to take control of the statusline. Another solution could be to have a config directive like `""disallow_plugin_themes"": [""nerdtree"", ""...""]` for disabling single plugins instead.

There are a couple of issues I see with plugin authors writing their own segments and themes:
1. Now that segments are written in Python, we would have to require plugin authors to potentially learn Python to write segments, instead of just using vimscript.
2. Python modules work quite differently from vimscript and autoloading. How would we resolve the path and module issues for all the different vim configurations and bundle setups out there? Lookup plugins with a `powerline.json` file in their main folder and cache the paths, and later load them into Powerline? How would we do segment imports?
3. We need to have a solid and tested API from the beginning, because once plugin authors start to use it it would be a lot of work updating it. We could include a version tag in the JSON files to be able to update the API more easily.

What do you think about these issues?
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/2051212-plugin-api?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F283196&utm_medium=issues&utm_source=github).
</bountysource-plugin>
"
2,Theme syntax,2012-11-23T17:45:15Z,2013-01-04T14:09:13Z,t:question,,,"With the recent changes the suggested theme syntax in Lokaltog/vim-powerline#193 won't work as expected anymore. This is caused partially by the getwinvar/setwinvar workarounds (data has to be cached in a window dict), and by the possibility of having dynamic segments that are evaluated and able to change properties like colors and attributes for each statusline redraw.

An example of this dynamic behavior is the [gradient cursor percentage segment](https://github.com/Lokaltog/powerline/blob/addb7ccf7306e21a8b89e56617bd944abd0705b2/examples/vim/powerline.py#L105-106) from the vim example. Another example is the dynamic [removal of the divider between the filename and the modified indicator](https://github.com/Lokaltog/powerline/blob/addb7ccf7306e21a8b89e56617bd944abd0705b2/examples/vim/powerline.py#L161) if the modified indicator isn't empty.

If we decide to use JSON as the theme syntax, it may not be possible at all to have this kind of dynamic evaluation. The proposed JSON syntax will only allow passing arguments to the segment functions, but not actually change segment properties based on the current state of the window/buffer.

@ZyX-I What do you think we should do about this? Should we define themes in Python to allow this dynamic behavior, or should we stick to JSON? Do you have any suggestions to how we could use JSON and still have the possibility of dynamically changing segments?
"
1,Avoid invoking vim parser as much as possible in case vim is recent enough,2012-11-17T10:13:00Z,2012-11-17T11:04:53Z,,,,
