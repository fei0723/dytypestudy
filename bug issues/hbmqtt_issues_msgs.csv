ID,Title,Created At,Closed At,Issues,Errors,Messages,Body
103,Losing subscription when reconnecting,2017-12-07T06:06:52Z,2017-12-08T06:11:20Z,,,,I noticed that the client loses the subscriptions when reconnecting. Is there some configuration to keep the subscriptions? Or is there a way to capture reconnection attempts so that I can make the client resubscribe to the topics once connected again? TY
102,Document Last Will and Testament implementation?,2017-11-25T15:44:20Z,,,,,"I thought the Last Will and Testament feature of MQTT ( https://www.hivemq.com/blog/mqtt-essentials-part-9-last-will-and-testament ) was not supported by hbmqtt since it wasn't noted in http://hbmqtt.readthedocs.io/en/latest/references/mqttclient.html?highlight=will#reference as part of the allowed keys in the config.

However at the footer of the HBMQTT client implementation the clause ```if ""will"" in self.config:``` suggests that there is in fact support. 

It would be really useful to have an example showing how to configure the last will on connection if it is supported, or a note that there is no support. I have struggled to see anything with searches for ""testament"", ""will"", ""last will""."
101,TLS connections can be established by default with system certificate…,2017-11-23T08:44:18Z,2017-11-25T13:26:11Z,,,,"…s to publish domains (for example to 'mqtts://iot.eclipse.org') - the client only requires cafiles if the broker provides self signed certificates

The fix removes the exception thrown through missing cafiles."
100,fixed Test 'test_client_connect_clean_session_false' ,2017-11-14T18:02:41Z,2017-11-17T15:09:25Z,,,,"By adding a additional variable 'client_id_is_random' the Test 'test_client_connect_clean_session_false' is fixed.  This variable allows to notice if a client_id is generated by the broker( It is allowed for clients to connects with no or empty client_id). 
In this case a it is not possible for clients to use old sessions and the broker disallows a connection. (He can't identify old sessions based on the random client_id)"
99,fixed Test 'test_decode_fail_miss_clientId',2017-11-12T18:16:49Z,2017-11-21T10:20:13Z,,,,By default the broker creates a random client_id if the connection doesn't provides a client_id by itself. The test 'test_decode_fail_miss_clientId' validates a random client_id if no client_id is a given.
98,Fix occasional exception while processing another exception.,2017-11-05T07:27:06Z,2017-11-05T09:29:23Z,,,,
97,Automatically get SSL certificate using client,2017-11-01T01:48:40Z,2017-11-01T08:23:43Z,,,,"Is it possible to instruct hbmqtt to automatically download the certificate for an SSL-enabled server, assuming that the certificate is correctly signed?"
96,Fix issue #95 Randomly incomplete topic name in consuming from MQTT t…,2017-10-30T16:36:48Z,2017-10-30T20:33:57Z,,,,…opic.
95,MQTT Client: Randomly incomplete topic name and broken packet.data,2017-10-30T16:15:33Z,2017-10-30T23:06:50Z,,,,"Consuming data from MQTT topics (around 120), I get randomly messages, which have topic name shortened and packet.data are broken, as part of the missing topic name is prepended to them.

This problem appears only sometime and there it is not deterministic, it fails on different topics. I have to run the process 3 times and it mostly fails once.

Debugging the messages we have found, that topic names are shortened and the packet.data has tail of the missing topic name prepended to it."
94,Properly cancelling task during pending MQTT subscription,2017-10-28T22:13:44Z,,,	RuntimeError,"	RuntimeError: Event loop is closed","I am trying to create a task, which consumes data from MQTT topics and does some processing. As this is long term running process, it runs in `while True` loop and I want to cancel the task properly by sending `task.cancel()`.

However, the `cancel()` results in exceptions thrown from within `RuntimeError: 'Event loop is closed.')""`

Here is the code which is adapted from project examples:


	import logging
	import asyncio

	from hbmqtt.client import MQTTClient, ClientException
	from hbmqtt.mqtt.constants import QOS_1, QOS_2

	logger = logging.getLogger(__file__)
	logging.basicConfig(level=logging.DEBUG)


	async def reader_coro(mqtt_url, loop):
	    C = MQTTClient(loop=loop)
	    try:
		await C.connect(mqtt_url)
		await C.subscribe([
			('$SYS/broker/uptime', QOS_1),
			('$SYS/broker/load/#', QOS_2),
		    ])
		while True:
		    message = await C.deliver_message()
		    packet = message.publish_packet
		    topic_name = packet.variable_header.topic_name
		    data = packet.payload.data
		    print(f""TOPIC: {topic_name} MESSAGE: {data}"")
	    except asyncio.CancelledError:
		await C.unsubscribe(['$SYS/broker/uptime', '$SYS/broker/load/#'])
		await C.disconnect()
		logger.debug(""DISCONNECTED======================"")
	    except ClientException as ce:
		logger.exception(""Client exception: %s"" % ce)


	if __name__ == '__main__':
	    mqtt_url = 'mqtt://test.mosquitto.org/'
	    loop = asyncio.get_event_loop()
	    reader = loop.create_task(reader_coro(mqtt_url, loop))
	    try:
		loop.run_until_complete(reader)
	    except KeyboardInterrupt:
		logger.debug(""KEYBOARD INTERRUPT=================="")
		reader.cancel()
		logger.debug(""READER CANCELLED=================="")
		loop.run_until_complete(reader)
		logger.debug(""FINISHED LOOP=================="")
	    finally:
		loop.close()


When run, after Ctrl-C it prints out:

	DEBUG:hbmqtt.client:Waiting message delivery
	DEBUG:hbmqtt.mqtt.protocol.handler:0 message(s) available for delivery
	^CDEBUG:sub.py:KEYBOARD INTERRUPT==================
	DEBUG:sub.py:READER CANCELLED==================
	DEBUG:hbmqtt.client.plugins.packet_logger_plugin:hbmqtt/IyM^`78qi35Ns?ke -out-> UnsubscribePacket(ts=2017
	-10-29 00:11:05.438820, fixed=MQTTFixedHeader(length=42, flags=0x2), variable=PacketIdVariableHeader(pack
	et_id=2), payload=<hbmqtt.mqtt.unsubscribe.UnubscribePayload object at 0x7f40d879ea48>)
	DEBUG:hbmqtt.client.plugins.packet_logger_plugin:hbmqtt/IyM^`78qi35Ns?ke <-in-- UnsubackPacket(ts=2017-10
	-29 00:11:05.476021, fixed=MQTTFixedHeader(length=2, flags=0x0), variable=PacketIdVariableHeader(packet_i
	d=2), payload=None)
	DEBUG:hbmqtt.mqtt.protocol.handler:Stopping 0 puback waiters
	DEBUG:hbmqtt.mqtt.protocol.handler:Stopping 0 pucomp waiters
	DEBUG:hbmqtt.mqtt.protocol.handler:Stopping 0 purec waiters
	DEBUG:hbmqtt.mqtt.protocol.handler:Stopping 0 purel waiters
	DEBUG:hbmqtt.mqtt.protocol.handler:waiting for tasks to be stopped
	DEBUG:hbmqtt.client.plugins.packet_logger_plugin:hbmqtt/IyM^`78qi35Ns?ke -out-> DisconnectPacket(ts=2017-
	10-29 00:11:05.477688, fixed=MQTTFixedHeader(length=0, flags=0x0), variable=None, payload=None)
	DEBUG:hbmqtt.mqtt.protocol.handler:Task cancelled, reader loop ending
	DEBUG:hbmqtt.mqtt.protocol.handler:Broker closed connection
	DEBUG:hbmqtt.mqtt.protocol.handler:hbmqtt/IyM^`78qi35Ns?ke Reader coro stopped
	DEBUG:hbmqtt.mqtt.protocol.handler:Stopping 0 puback waiters
	DEBUG:hbmqtt.mqtt.protocol.handler:Stopping 0 pucomp waiters
	DEBUG:hbmqtt.mqtt.protocol.handler:Stopping 0 purec waiters
	DEBUG:hbmqtt.mqtt.protocol.handler:Stopping 0 purel waiters
	DEBUG:hbmqtt.mqtt.protocol.handler:waiting for tasks to be stopped
	DEBUG:hbmqtt.mqtt.protocol.handler:closing writer
	DEBUG:transitions.core:Initiating transition from state connected to state disconnected...
	DEBUG:transitions.core:Exiting state connected. Processing callbacks...
	INFO:transitions.core:Exited state connected
	DEBUG:transitions.core:Entering state disconnected. Processing callbacks...
	INFO:transitions.core:Entered state disconnected
	DEBUG:sub.py:DISCONNECTED======================
	DEBUG:sub.py:FINISHED LOOP==================
	Exception ignored in: <generator object ProtocolHandler.mqtt_deliver_next_message at 0x7f40d87807d8>
	Traceback (most recent call last):
	  File ""/home/javl/devel/tis/dpo-tis-pns-pump/.tox/py36/lib/python3.6/site-packages/hbmqtt/mqtt/protocol/
	handler.py"", line 466, in mqtt_deliver_next_message
	    message = yield from self.session.delivered_message_queue.get()
	  File ""/home/javl/.pyenv/versions/3.6.1/lib/python3.6/asyncio/queues.py"", line 169, in get
	    getter.cancel()  # Just in case getter is not done yet.
	  File ""/home/javl/.pyenv/versions/3.6.1/lib/python3.6/asyncio/base_events.py"", line 573, in call_soon
	    self._check_closed()
	  File ""/home/javl/.pyenv/versions/3.6.1/lib/python3.6/asyncio/base_events.py"", line 357, in _check_close
	d
	    raise RuntimeError('Event loop is closed')
	RuntimeError: Event loop is closed
	ERROR:asyncio:Task was destroyed but it is pending!
	task: <Task pending coro=<ProtocolHandler.mqtt_deliver_next_message() done, defined at /home/javl/devel/t
	is/dpo-tis-pns-pump/.tox/py36/lib/python3.6/site-packages/hbmqtt/mqtt/protocol/handler.py:461> wait_for=<
	Future cancelled> cb=[_wait.<locals>._on_completion() at /home/javl/.pyenv/versions/3.6.1/lib/python3.6/a
	syncio/tasks.py:374]>
	$

Is there proper way of stopping pending subscription without such problems?
"
93,hbmqtt_sub is missing option `-v` (verbose) to print topic names,2017-10-27T17:41:46Z,,,,,"The command `hbmqtt_sub` seem to closely resemble `mosquitto_sub` command.

Anyway, the `hbmqtt_sub` is missing an option `-v` for verbose output, which is prepending topic name and a space (or tab) before printing message content.

This feature (having topic prepended) allows scriptping, where `cut` command can split the topic name, perform some scripting etc.

Consider adding the `-v` option."
92,Update quickstart.rst,2017-10-25T19:18:14Z,2017-10-25T20:00:58Z,,,,"This package seems to only install with pip3, not pip"
91,fixed #78,2017-10-23T14:05:42Z,2017-11-10T13:22:42Z,,,,fixed Error in zero length client id when using 3.1.1 #78
90,Fix the Client doc,2017-10-18T17:03:22Z,2017-10-18T19:20:16Z,,,,
89,How to know if client is connected?,2017-10-14T16:58:06Z,,,,,"I'm using hbmqtt v0.9.0.
My program, as an MQTT client, sometimes gets ""Disconnected from broker"" log and no longer receive new data from Mosquitto broker. I'm using default config (with auto-reconnect).

I have questions:

- Does ""auto-reconnect"" work when connection is lost, while waiting for message in `deliver_message()`?
- Anyway to check if client is connected, so that I can call `reconnect()` and subscribe again?"
88,version 0.9.1,2017-10-14T05:08:42Z,2017-10-14T07:07:04Z,,,,"Hello,

Is version 0.9.1 a real release? It looks like it can only be installed from PyPI on OSX... Maybe something went wrong with the upload?

Regards"
87,Add __slots__ attribute to the most used classes,2017-10-10T14:19:16Z,2017-10-10T19:31:43Z,,,,"This would be insignificant for most cases but it's still something cool to add :)
(~20% memory savings and a bit of CPU)"
86,How do I specify an IPv6 address in the Broker config?,2017-08-22T19:59:34Z,,,,,"I've tried the following code:

    import asyncio
    from hbmqtt.broker import Broker

    async def broker():
        broker = Broker(
            config=dict(
                listeners=dict(
                    default=dict(
                        type='tcp',
                        bind='[::]:1884'))))

        await broker.start()

    if __name__ == '__main__':
        asyncio.get_event_loop().run_until_complete(broker())
        asyncio.get_event_loop().run_forever()

But I get the following error:

    Broker startup failed: too many values to unpack (expected 2)
    Traceback (most recent call last):
      File ""/Users/michi/Desktop/mqtt/venv/lib/python3.5/site-packages/hbmqtt/broker.py"", line 257, in start
        address, s_port = listener['bind']
    ValueError: too many values to unpack (expected 2)

The issue is obviously that the parser for the IP-address-and-port config field does not handle strings with more than 1 colon in them. I'm not sure what the best solution would be. I can come up with these strategies:

 - Implement parsing of the syntax I used in the example above (probably by relying on `urllib.parse.urlparse()`).
 - Deprecate the mini-syntax for that config variable and instead pass a tuple with the IP address and port as separate items.

I'm happy to provide a pull request for the first strategy. I'm not sure about the second as it involves adding documentation and updating examples."
85,Make flake8 usable,2017-08-06T23:27:51Z,2017-08-31T18:49:41Z,,,,"This PR starts out by ignoring all current flake8 warnings, then continues to fix a set of warnings in each commit. The hope is to make this at all possible to review and merge.

In the end, only warnings about too long lines and comments not starting with ""# "" are ignored. Everything is free for all other flake8 warnings, making flake8 a very useful tool to catch bugs early."
84,Run test on all supported Python versions,2017-08-06T23:20:33Z,2017-08-31T18:50:00Z,,,,"This modifies the Tox and Travis CI setup to run tests on all supported Python versions locally with `tox` and at Travis CI.

As the `requirements.txt` contained the same set of dependencies as `setup.py`, which is used by both Tox and Travis through Tox, it was redundant and was removed.

See commit messages for details."
83,Include all files in the PyPI releases,2017-07-26T13:11:19Z,2017-08-05T19:26:58Z,,,,"- Included tests, examples, etc in MANIFEST.in.
- Made git ignore files that should not be included in the package.
- Added tox test environment which runs check-manifest to validate the
  MANIFEST.in file.

Downstreams like Debian prefer the PyPI packages to include everything
from the Git repo, especially changelogs and test suites. To make the
installation with pip as lightweight as possible, it is encouraged to
build and upload Python wheels in addition to the sdist tarball.

The test suite currently included in the PyPI release is incomplete and thus
fails when building the Debian package. With this PR merged and released
the Debian package should be able to run the test suite automatically when
built."
82,Support transitions >= 0.5.0,2017-07-26T12:51:25Z,2017-08-06T06:57:00Z,,,,"transitions 0.5.0 replaced `MachineError` with `ValueError` and `AttributeError` for exceptions raised when transitioning the state machine. `MachineError` is still available in transitions 0.5.0, so we catch both `MachineError` and the relevant new exception to work with both old and new versions of transitions."
81,Fix warnings about deprecated stdlib methods,2017-07-26T12:19:35Z,2017-08-05T19:25:30Z,,,,"Both `logging.warning()` and `unittest.TestCase.assertEqual()` has been present in the stdlib since long before Python 3.4, so they are safe to use."
80,hbmqtt do not support the latest transitions.,2017-07-24T04:17:38Z,,,,,"after upgrate transitions to 0.5.3, met a error.
`Warning (from warnings module):
  File ""C:\Python36\lib\asyncio\base_events.py"", line 510
    source=self)
ResourceWarning: unclosed event loop <_WindowsSelectorEventLoop running=False closed=False debug=False>
Traceback (most recent call last):
  File ""C:\Users\jf\Desktop\mqtt_subscriber.py"", line 38, in <module>
    loop.run_until_complete(uptime_coro())
  File ""C:\Python36\lib\asyncio\base_events.py"", line 467, in run_until_complete
    return future.result()
  File ""C:\Users\jf\Desktop\mqtt_subscriber.py"", line 11, in uptime_coro
    C = MQTTClient()
  File ""C:\Python36\lib\site-packages\hbmqtt\client.py"", line 112, in __init__
    self.plugins_manager = PluginManager('hbmqtt.client.plugins', context)
  File ""C:\Python36\lib\site-packages\hbmqtt\plugins\manager.py"", line 55, in __init__
    self._load_plugins(namespace)
  File ""C:\Python36\lib\site-packages\hbmqtt\plugins\manager.py"", line 66, in _load_plugins
    plugin = self._load_plugin(ep)
  File ""C:\Python36\lib\site-packages\hbmqtt\plugins\manager.py"", line 73, in _load_plugin
    plugin = ep.load(require=True)
  File ""C:\Python36\lib\site-packages\pkg_resources\__init__.py"", line 2304, in load
    self.require(*args, **kwargs)
  File ""C:\Python36\lib\site-packages\pkg_resources\__init__.py"", line 2327, in require
    items = working_set.resolve(reqs, env, installer, extras=self.extras)
  File ""C:\Python36\lib\site-packages\pkg_resources\__init__.py"", line 862, in resolve
    raise VersionConflict(dist, req).with_context(dependent_req)
pkg_resources.VersionConflict: (transitions 0.5.3 (c:\python36\lib\site-packages), Requirement.parse('transitions==0.2.5'))`"
79,Fix delicious exception so it is properly eaten,2017-07-07T00:37:42Z,2017-07-07T19:25:38Z,,,,
78,Error in zero length client id when using 3.1.1,2017-07-04T14:06:32Z,2017-11-10T13:22:43Z,,,,"We ran into a issue over at https://github.com/home-assistant/home-assistant/issues/8315 where users were getting errors after upgrading the mqtt client.  I did a bit of digging on the subject and I think there is a bug in hbmqtt's implementation of version 3.1.1 of the MQTT protocol.  It appears that 3.1.1 allows for clients to send a zero length client id to the server, and according to the spec:

> A Server MAY allow a Client to supply a ClientId that has a length of zero bytes, however if it does so the Server MUST treat this as a special case and assign a unique ClientId to that Client. It MUST then process the CONNECT packet as if the Client had provided that unique ClientId

It appears when getting the handler in the broker [[1]](https://github.com/beerfactory/hbmqtt/blob/master/hbmqtt/broker.py#L747) it checks if client_id is True, but it's a zero length string, so the function returns None.

I think there are two options here, refuse zero length client ids, or generate a random_id and store that for later use."
77,ValueError: list.remove(x): x not in list,2017-06-28T11:43:13Z,,,ValueError,"ValueError: list.remove(x): x not in list","Python 3.43
File ""hbmqtt\plugins\manager.py"", line 142, in clean_fired_events
    self._fired_events.remove(task)
ValueError: list.remove(x): x not in list

The error is caused because of the except treat as ""KeyError"" and not ""ValueError"""
76,a guide to tell you how to write your own plugin?,2017-06-13T09:18:51Z,,,,,"a guide to tell you how to write your own plugin?

How is the performance?"
75,Exception in publish,2017-05-26T06:00:33Z,2017-06-02T19:18:04Z,,struct.error,"struct.error: 'H' format requires 0 <= number <= 65535","After publishing 2**16 or 65535 messages, the client throws an exception in the publish method when trying to publish the 65536th message. It seems that the pack_id counter is converted into a bytearray or bytes object using the pack function from the struct module with the parameter ""H"". This certainly leads to an exception as numbers >= 65535 cannot be represented by 2 bytes. As a quick fix for me, I tried to manually reset the packed_id counter. However, from time to time this lead to an message id clash.

I have attached the trace back
    await tsdb_clt.publish(OPENTSB_DATA_TOPIC, dict_to_msg(msg), qos=QOS_1)
  File ""C:\Python36\lib\site-packages\hbmqtt\client.py"", line 72, in wrapper
    return (yield from func(self, *args, **kwargs))
  File ""C:\Python36\lib\site-packages\hbmqtt\client.py"", line 273, in publish
    return (yield from self._handler.mqtt_publish(topic, message, app_qos, app_retain))
  File ""C:\Python36\lib\site-packages\hbmqtt\mqtt\protocol\handler.py"", line 186, in mqtt_publish
    yield from self._handle_message_flow(message)
  File ""C:\Python36\lib\site-packages\hbmqtt\mqtt\protocol\handler.py"", line 201, in _handle_message_flow
    yield from self._handle_qos1_message_flow(app_message)
  File ""C:\Python36\lib\site-packages\hbmqtt\mqtt\protocol\handler.py"", line 254, in _handle_qos1_message_flow
    yield from self._send_packet(publish_packet)
  File ""C:\Python36\lib\site-packages\hbmqtt\mqtt\protocol\handler.py"", line 444, in _send_packet
    yield from packet.to_stream(self.writer)
  File ""C:\Python36\lib\site-packages\hbmqtt\mqtt\packet.py"", line 191, in to_stream
    writer.write(self.to_bytes())
  File ""C:\Python36\lib\site-packages\hbmqtt\mqtt\packet.py"", line 197, in to_bytes
    variable_header_bytes = self.variable_header.to_bytes()
  File ""C:\Python36\lib\site-packages\hbmqtt\mqtt\publish.py"", line 24, in to_bytes
    out.extend(int_to_bytes(self.packet_id, 2))
  File ""C:\Python36\lib\site-packages\hbmqtt\codecs.py"", line 41, in int_to_bytes
    return pack(fmt, int_value)
struct.error: 'H' format requires 0 <= number <= 65535
"
74,asyncio.base_futures.InvalidStateError: invalid state,2017-05-16T13:24:32Z,2017-06-02T19:37:15Z,,,,"Hi everybody,

i have the problem that in case of a complete disconnect of the subscriber client  from the broker i got the exception :  ( usage/case :  Broker disconnect the Client/subscriber without errors in client code ) 

**Task exception was never retrieved
future: <Task finished coro=<MQTTClient.handle_connection_close() done, defined at C:\..\AppData\Local\Programs\Python\Python36\lib\site-packages\hbmqtt\client.py:431> exception=InvalidStateError('invalid state',)>**

In the function **handle_connection_close(self)** at row 431 in client.py is the method call : 

self.client_tasks.popleft().set_exception(ClientException(""Connection lost""))  --> row 454 and 458

The method set_exception could throw these exception if the future where we can get from the client_tasks ( deque ) is already done. See discription following link :

https://docs.python.org/3/library/asyncio-task.html#asyncio.Future.set_exception


For example the following code could solve the problem ( only for showing ; ) ):  


**while self.client_tasks:                                                                                                                                  
____ try:
________ self.client_tasks.popleft().set_exception(ClientException(""Connection lost""))
____ except asyncio.base_futures.InvalidStateError:
________ self.logger.warning(""Task already done !"")**      




Is it possible to fix that in client.py code ? To get a bit more background, i try to handle all exceptions from that case --> Broker shutdown and disconnect the Client/Subscribers/Publisher. Because of that i have to cancel some Tasks. The Exception occurs after the asyncio loop is stopped/closed and the main program is done.

Thanks  : ) 

"
73,does not support mosquitto client ?,2017-05-12T04:04:22Z,2017-05-12T06:54:05Z,,,,does not support mosquitto client ?
72,map plugins before subscribe and deliver,2017-05-10T12:13:59Z,,,,,"1. map plugins before subscribe and deliver
2. use the result to control the access of subscribe and deliver
3. add acl plugin example"
71,hbmqtt.broker.BrokerException: Listener config not found invalid: 'listeners',2017-05-08T10:55:58Z,,,,,"Hi

Trying to run the broker as described in http://hbmqtt.readthedocs.io/en/latest/references/broker.html but always getting the error ""hbmqtt.broker.BrokerException: Listener config not found invalid: 'listeners'"" 

Using Python 3.6 Anaconda on an lubuntu 14.4.

Any help appreciated. :)"
70,Remove plugin manager _fired_events listcomp,2017-05-05T15:49:41Z,2017-06-02T15:08:28Z,,,,"The plugin-manager's `_fired_events` list composition was taking lots of cpu resource when subscribing to a lot of topics at once. This PR should fix this particular case and update the list over time instead of at each fired event.
(btw the only place using this list, `PluginManager.close()`, seems to never get called)"
69,Add license file to release tarball,2017-04-06T12:09:45Z,2017-06-02T15:04:06Z,,,,
68,Run tests for python 3.6-dev and nightly as well,2017-03-30T08:38:10Z,2017-03-30T12:01:56Z,,,,
67,Fixes Issue #66 - asyncio Methods not Called with self._loop,2017-03-13T07:31:01Z,2017-03-30T12:31:52Z,,,,
66,asyncio Methods not Called with self._loop,2017-03-12T17:09:45Z,2017-04-05T14:38:21Z,,,,"Originally found by @royra

The are two ocassions where asyncio methods are called without self._loop which causes the methods to use the default asyncio loop [here](https://github.com/beerfactory/hbmqtt/blob/master/hbmqtt/client.py#L107) and [here](https://github.com/beerfactory/hbmqtt/blob/master/hbmqtt/mqtt/protocol/handler.py#L156)

I will try to issue a pull request soon."
65,Add Python 3.6 to the testing,2017-03-08T15:27:43Z,2017-03-08T20:36:27Z,,,,
64,ACL support for clients,2017-01-09T21:51:17Z,,,,,"I would need to be able to control what topics a client can publish to and subscribe to.

Any plan for that?."
63,Typo,2017-01-09T21:34:40Z,2017-01-10T12:14:55Z,,,,
62,Memory leak using websocket protocol,2016-12-14T11:22:23Z,,,,,"I encountered a memory leak using the websocket protocol `ws://` in the `WebSocketsReader.read()` method because the method `self._protocol.recv()` is blocking until a websocket message is received.
I believe this websockets library should be used with a single recv loop, otherwise you might end up stacking coroutines blocking at `recv`.
I was not able to fix it right now but the problem is definitely there. Any chance you could look into it ?"
61,How can i load external plugin?,2016-12-05T18:40:06Z,2016-12-06T02:46:48Z,,,,"Hi, 
I would like to run an authentication plugin. I read in the documentation that has the **entry_points** in **setup.py** but is there a simpler way?"
60,HBMQTTException and ClientException deriving from BaseException instead of Exception,2016-11-30T10:29:25Z,2017-06-02T19:42:13Z,,,,"Hi,

I notice that **HBMQTTException** and **ClientException** both are deriving from **BaseException**. Although the [doc](https://docs.python.org/3/library/asyncio-dev.html#detect-exceptions-never-consumed) says asyncio emits a log when seeing unconsumed exceptions. However, **BaseException** would also abort the whole event loop while other tasks are running just fine.

Is there a way to solve this problem? Or may I suggest to change them to derive from **Exception** instead?

"
59,release PluginManager._fired_events if they are done,2016-11-17T04:36:34Z,2016-11-17T09:32:30Z,,,,"_fire_events are only released when a plugin is closed. A long-running application will see memory usage keep growing.

I'd propose to release _fire_events that are done whenever more events are going to be added."
58,Switch : and @ in URL examples,2016-11-12T19:47:35Z,2016-11-12T20:20:26Z,,,,"I think the : and @ tokens are backwards in two of the examples.

This patch should correct the order."
57,missing import in example client_subscribe.py,2016-11-07T08:29:16Z,2016-11-07T10:41:36Z,,,,"file: hbmqtt/samples/client_subscribe.py
ClientException is not imported and raises an error if the exception gets thrown.

Fix:
change line 4 to
```python
from hbmqtt.client import MQTTClient, ConnectException, ClientException
```"
56,[Question] Can I store a posts to a certain topic in a text file ? ,2016-11-07T07:48:29Z,2017-05-07T14:36:25Z,,,,"Is it possible to generate a file on a server where each line is written by posting to a certain topic in hbmqtt?

In other words:  the brocker would listen to a specific topic and store the published data in a given text file.

How to do this? "
55,deliver_message hangs using mosquitto on websockets,2016-10-03T11:44:08Z,2016-10-04T07:52:00Z,,,,"Using a simple mosquitto broker on the `websockets` protocol, the method `deliver_message` seems to hang for a long time when sending big messages (we use hbmqtt to publish JSON payloads). The longer the message is, the longer the method `.recv()` in the WebsocketReader will hang.
Is it a known issue ?
Changing the protocol to `mqtt` works like a charm so it does not appear to be a broker problem.
"
54,"after client publish 20000 message,the broker's menory occupied high and not release",2016-09-26T03:55:05Z,,,,,
53,disables verification of the server hostname in the server certificate,2016-09-22T08:46:38Z,2016-09-26T21:19:49Z,,,,"This allows a client to disable verification of the server hostname in the server certificate.
It's the same as '--insecure' option provided by mosquitto_sub.

To use it, in **default_client.yaml**:

> check_hostname: false
"
52,MQTT errors with Home-Assistant,2016-09-08T01:45:03Z,2016-09-12T19:01:50Z,,"KeyError, hbmqtt.broker.BrokerException","KeyError: 'listeners', hbmqtt.broker.BrokerException: Listener config not found invalid: 'listeners'","I am trying to add HBMQTT to [Home-Assistant](https://home-assistant.io). I used the default config as indicated [here](https://home-assistant.io/components/mqtt/):

```
mqtt:
  embedded:
```

I get the following error:

```
homeassistant.bootstrap: Invalid config for [mqtt]: expected dict for dictionary value @ data['mqtt']['embedded']. Got None
```

@balloob suggested adding `{}` after `embedded`, so I modified the config to:

```
mqtt:
  embedded: {}
```

Now, I get the following errors:

```
16-09-07 21:33:57 homeassistant.components.mqtt.server: Error initializing MQTT server
Traceback (most recent call last):
  File ""/home/hass/.homeassistant/deps/hbmqtt/broker.py"", line 184, in _build_listeners_config
    listeners_config = broker_config['listeners']
KeyError: 'listeners'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/srv/hass/hass_venv/lib/python3.4/site-packages/homeassistant/components/mqtt/server.py"", line 53, in start
    loop.run_until_complete(start_server)
  File ""/usr/lib/python3.4/asyncio/base_events.py"", line 271, in run_until_complete
    self.run_forever()
  File ""/usr/lib/python3.4/asyncio/base_events.py"", line 244, in run_forever
    self._run_once()
  File ""/usr/lib/python3.4/asyncio/base_events.py"", line 1081, in _run_once
    handle._run()
  File ""/usr/lib/python3.4/asyncio/events.py"", line 120, in _run
    self._callback(*self._args)
  File ""/usr/lib/python3.4/asyncio/tasks.py"", line 237, in _step
    result = next(coro)
  File ""/srv/hass/hass_venv/lib/python3.4/site-packages/homeassistant/components/mqtt/server.py"", line 23, in broker_coro
    broker = Broker(config, loop)
  File ""/home/hass/.homeassistant/deps/hbmqtt/broker.py"", line 156, in __init__
    self._build_listeners_config(self.config)
  File ""/home/hass/.homeassistant/deps/hbmqtt/broker.py"", line 191, in _build_listeners_config
    raise BrokerException(""Listener config not found invalid: %s"" % ke)
hbmqtt.broker.BrokerException: Listener config not found invalid: 'listeners'
16-09-07 21:33:57 homeassistant.components.mqtt: Unable to start broker and auto-configure MQTT.
16-09-07 21:33:57 homeassistant.bootstrap: component mqtt failed to initialize
16-09-07 21:33:57 asyncio: Task exception was never retrieved
future: <Task finished coro=<broker_coro() done, defined at /srv/hass/hass_venv/lib/python3.4/site-packages/homeassistant/components/mqtt/server.py:19> exception=BrokerException(""Listener config not found invalid: 'listeners'"",)>
Traceback (most recent call last):
  File ""/home/hass/.homeassistant/deps/hbmqtt/broker.py"", line 184, in _build_listeners_config
    listeners_config = broker_config['listeners']
KeyError: 'listeners'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/srv/hass/hass_venv/lib/python3.4/site-packages/homeassistant/components/mqtt/server.py"", line 53, in start
    loop.run_until_complete(start_server)
  File ""/usr/lib/python3.4/asyncio/base_events.py"", line 271, in run_until_complete
    self.run_forever()
  File ""/usr/lib/python3.4/asyncio/base_events.py"", line 244, in run_forever
    self._run_once()
  File ""/usr/lib/python3.4/asyncio/base_events.py"", line 1081, in _run_once
    handle._run()
  File ""/usr/lib/python3.4/asyncio/events.py"", line 120, in _run
    self._callback(*self._args)
  File ""/usr/lib/python3.4/asyncio/tasks.py"", line 237, in _step
    result = next(coro)
  File ""/srv/hass/hass_venv/lib/python3.4/site-packages/homeassistant/components/mqtt/server.py"", line 23, in broker_coro
    broker = Broker(config, loop)
  File ""/home/hass/.homeassistant/deps/hbmqtt/broker.py"", line 156, in __init__
    self._build_listeners_config(self.config)
  File ""/home/hass/.homeassistant/deps/hbmqtt/broker.py"", line 191, in _build_listeners_config
    raise BrokerException(""Listener config not found invalid: %s"" % ke)
hbmqtt.broker.BrokerException: Listener config not found invalid: 'listeners'
```
"
51,error message from tests ,2016-09-07T08:29:48Z,2016-09-07T13:31:22Z,,RuntimeError,RuntimeError: Event loop is closed,"Running hbmqtt tests there are a lot of error messages, for example:

pytest -s test_client.py::MQTTClientTest::test_ping
============================================================================================ test session starts ============================================================================================
platform linux -- Python 3.4.3, pytest-3.0.2, py-1.4.31, pluggy-0 

========================================================================================= 1 passed in 0.11 seconds ==========================================================================================
[2016-09-07 10:14:43,964] asyncio {base_events.py:1008} ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<stream_connected() running at /home/adona/dev/hbmqtt/hbmqtt/broker.py:336> wait_for=<Future pending cb=[Task._wakeup()]>>
[2016-09-07 10:14:43,964] asyncio {base_events.py:1008} ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<wait_disconnect() running at /home/adona/dev/hbmqtt/hbmqtt/mqtt/protocol/broker_handler.py:44> wait_for=<Future pending cb=[Task._wakeup()]> cb=[_wait.<locals>._on_completion() at /usr/lib/python3.4/asyncio/tasks.py:399]>
[2016-09-07 10:14:43,964] asyncio {base_events.py:1008} ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<get_next_pending_subscription() running at /home/adona/dev/hbmqtt/hbmqtt/mqtt/protocol/broker_handler.py:89> wait_for=<Future pending cb=[Task._wakeup()]> cb=[_wait.<locals>._on_completion() at /usr/lib/python3.4/asyncio/tasks.py:399]>
[2016-09-07 10:14:43,964] asyncio {base_events.py:1008} ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<get_next_pending_unsubscription() running at /home/adona/dev/hbmqtt/hbmqtt/mqtt/protocol/broker_handler.py:94> wait_for=<Future pending cb=[Task._wakeup()]> cb=[_wait.<locals>._on_completion() at /usr/lib/python3.4/asyncio/tasks.py:399]>
[2016-09-07 10:14:43,964] asyncio {base_events.py:1008} ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<mqtt_deliver_next_message() running at /home/adona/dev/hbmqtt/hbmqtt/mqtt/protocol/handler.py:462> wait_for=<Future pending cb=[Task._wakeup()]> cb=[_wait.<locals>._on_completion() at /usr/lib/python3.4/asyncio/tasks.py:399]>
Exception ignored in: [2016-09-07 10:14:43,965] asyncio {base_events.py:1008} ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<_reader_loop() running at /home/adona/dev/hbmqtt/hbmqtt/mqtt/protocol/handler.py:373> wait_for=<Future finished result=None>>
[2016-09-07 10:14:43,965] hbmqtt.mqtt.protocol.handler {handler.py:432} WARNING - BrokerProtocolHandler Unhandled exception in reader coro: GeneratorExit()
[2016-09-07 10:14:43,965] hbmqtt.mqtt.protocol.handler {broker_handler.py:55} DEBUG - Client disconnecting
[2016-09-07 10:14:43,965] hbmqtt.mqtt.protocol.handler {broker_handler.py:57} DEBUG - Setting waiter result to None
Exception ignored in: <generator object _reader_loop at 0x7fd424ec1288>
Traceback (most recent call last):
  File ""/home/adona/dev/hbmqtt/hbmqtt/mqtt/protocol/handler.py"", line 436, in _reader_loop
    yield from self.handle_connection_closed()
  File ""/home/adona/dev/hbmqtt/hbmqtt/mqtt/protocol/broker_handler.py"", line 62, in handle_connection_closed
    yield from self.handle_disconnect(None)
  File ""/usr/lib/python3.4/asyncio/coroutines.py"", line 141, in coro
    res = func(_args, *_kw)
  File ""/home/adona/dev/hbmqtt/hbmqtt/mqtt/protocol/broker_handler.py"", line 58, in handle_disconnect
    self._disconnect_waiter.set_result(disconnect)
  File ""/usr/lib/python3.4/asyncio/futures.py"", line 339, in set_result
    self._schedule_callbacks()
  File ""/usr/lib/python3.4/asyncio/futures.py"", line 243, in _schedule_callbacks
    self._loop.call_soon(callback, self)
  File ""/usr/lib/python3.4/asyncio/base_events.py"", line 427, in call_soon
    handle = self._call_soon(callback, args)
  File ""/usr/lib/python3.4/asyncio/base_events.py"", line 436, in _call_soon
    self._check_closed()
  File ""/usr/lib/python3.4/asyncio/base_events.py"", line 265, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed

How to fix that?
greetings
Attilio
"
50,The documentation does not include imports.,2016-07-31T16:03:15Z,2016-07-31T16:30:40Z,,,,"It's very hard to follow the documentation because the examples don't show where the imports come from. To run an example, I have to look through the docs and see where each name is imported from. Please add imports to the doc examples.
"
49,non wheel packages,2016-07-31T01:55:09Z,2016-11-27T19:57:27Z,,,,"pypi only contains .whl packages making non-wheel installations impossible.  Please consider uploading source distributions as well. thanks
"
48,cleanup broker reference,2016-07-30T19:23:21Z,2016-07-30T19:37:33Z,,,,"two simple changes
- the example code is not working as the `broker_coro` is referenced as `test_coro`
- the config tries to bind several listeners on the same port which results in errors
"
47,"accept boolean as config argument for ""ssl""",2016-07-30T19:20:27Z,2016-07-30T19:37:21Z,,,,"the config flag ""ssl"" must be a string (on / off).  I like to suggest it should also accept a boolean.

The example uses a yaml config.  Since parsing ""on"" [0] in yaml returns a boolean using the example config results in an error.

[0] http://yaml.org/type/bool.html
"
46,Fix typo in docs,2016-07-16T14:46:43Z,2016-07-16T19:24:00Z,,,,
45,hbmqtt accepts malformed packets but treats them as NOOP,2016-07-15T12:11:31Z,,,,,"MQTT brokers and clients must close the network connection in case of protocol violation according to 

> Unless stated otherwise, if either the Server or Client encounters a protocol violation, it MUST close the Network Connection on which it received that Control Packet which caused the protocol violation [MQTT-4.8.0-1]

However, I have noticed that hbmqtt handles malformed packets or illegally sent packets in some cases by keeping the network connection open but ignoring all other subsequently received packets.  In other cases, illegally sent packets are ignored but normal operation is continued. 

Here are a few example with corresponding specification statements:
-  Subscriptions with QoS = 3 are acknowledged but treated as NOOP, i.e. a connection still persists afterwards, but messages published to the corresponding topic are not forwarded to subscribers with QoS 3. This violates: 

> The Server MUST treat a SUBSCRIBE packet as malformed and close the Network Connection if any of Reserved bits in the payload are non-zero, or QoS is not 0,1 or 2 [MQTT-3-8.3-4].
- The same holds for publishing with QoS = 3 which violates:

> A PUBLISH Packet MUST NOT have both QoS bits set to 1. If a Server or Client receives a PUBLISH Packet which has both QoS bits set to 1 it MUST close the Network Connection [MQTT-3.3.1-4].
- If a packet other than CONNECT is sent as first packet, hbmqtt enters a state where all packets are ignored, but the network connection is kept open. This violates:

> [MQTT-3.1.0-1] After a Network Connection is established by a Client to a Server, the first Packet
> sent from the Client to the Server MUST be a CONNECT Packet.

and [MQTT-4.8.0-1] cited above.
- If a CONNECT packet is sent while being connected, it is ignored and normal operation is continued which is a violation of: 

> A Client can only send the CONNECT Packet once over a Network Connection. The Server MUST
> process a second CONNECT Packet sent from a Client as a protocol violation and disconnect the Client [MQTT-3.1.0-2].
- Another error that is debatable is the following:
  hbmqtt treats PUBLISH packets with the DUP-flag set to true and QoS = 0 as NOOP as well, i.e. neither the published message is forwarded to subscribed clients, nor is the network connection closed. Strictly speaking, this violates

> The DUP flag MUST be set to 0 for all QoS 0 messages [MQTT-3.3.1-2]

and [MQTT-4.8.0-1] cited above.

Hence, the network connection should probably be closed. However, I have looked at four other implementations which all simply ignore the DUP-flag and forward the message. This is probably better suited to the needs of users although it somehow violates the specification. 
"
44,Single-level wildcards match more than one level,2016-06-13T06:31:59Z,,,,,"This issue is related to issue #41.
There is another problem, which existed before and which persists with the fix of issue #41. The single-level wildcards denoted by + should not match more than one level, but the replacement-regex allows matching strings as well as level-separators `/`, so I guess `replace('+', '[/\$\s\w\d]+')` should be changed to something like `replace('+', '[^/\$\s\w\d]+')`, i.e. it should only match characters unequal to a `/`. 
I should note that I did not evaluate this fix thoroughly either. I just checked with some string and did not test special cases like zero length topic names.

However, by doing so, issue #41 would still persist I think if wildcards are used. Since the regex would partially match, by subscribing to `a/+/b`, one would also receive messages published for `a/something/b/anotherthing`.
"
43,Server crash under heavy load,2016-06-10T13:41:51Z,,component: broker,,,"Hi Folks,

I am evaluating hbmqtt for the kind of video streaming scenario where I am publishing mjpeg (sequence of jpegs) with 30-60 FPS rate. For test purposes I have created the following publisher using paho client: https://github.com/veter-team/mechspeak/blob/master/src/publish2.py . It publishes all jpeg files found in the directory specified by the frames_dir variable at the beginning of the file. Subscribers are simple web-applications also written with paho js client. They receive jpegs and displays it on the canvas. Relevant sources are:
https://github.com/veter-team/mechspeak/blob/master/www/videoobserver.html
https://github.com/veter-team/mechspeak/blob/master/www/js/utility.js

I was running the following configurations:
1. hbmqtt and publish2.py running on raspberry pi 2 connected to the network over Ethernet. Three web-subscribers (browser windows) running on other machine in the same local network.
2. hbmqtt and publish2.py running in Ubuntu 16.04 LTE virtual machine (the VM itself is running on Windows). Three web-subscribers running on the same machine but outside of the VM (i.e. natively on Windows).

Publishing rate can be adjusted by editing the sleep interval here:
https://github.com/veter-team/mechspeak/blob/master/src/publish2.py#L38

Running the test on RPi with approx. 30 FPS or in the VM with approx. 60FPS will result in hbmqtt server crash after about 10 seconds of operation. Please see attached file for my configuration file and logs generated by hbmqtt.

[crash_info.txt](https://github.com/beerfactory/hbmqtt/files/309069/crash_info.txt)
"
42,Broker startup failed: an integer is required (got type str),2016-06-10T12:45:01Z,,,"TypeError, hbmqtt.broker.BrokerException","TypeError: an integer is required (got type str), hbmqtt.broker.BrokerException: Broker instance can't be started: an integer is required (got type str)","Python 3.5.1+ (default, Mar 30 2016, 22:46:26)
Ubuntu 16.04 LTS
hbmqtt Installed either with pip3 or from latest github sources.

Attempt to run hbmqtt causes the error below. It seams like casting port to int, i.e. int(port), in broker.py at lines 256 and 263 fixes this issue. However, I did not check if there are any other places where similar problem may occur.

[2016-06-10 14:35:13,583] :: ERROR - Broker startup failed: an integer is required (got type str)
Traceback (most recent call last):
  File ""/usr/local/lib/python3.5/dist-packages/hbmqtt/broker.py"", line 258, in start
    loop=self._loop)
  File ""/usr/lib/python3.5/asyncio/streams.py"", line 116, in start_server
    return (yield from loop.create_server(factory, host, port, **kwds))
  File ""/usr/lib/python3.5/asyncio/base_events.py"", line 949, in create_server
    sock.bind(sa)
TypeError: an integer is required (got type str)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/local/bin/hbmqtt"", line 11, in <module>
    sys.exit(main())
  File ""/usr/local/lib/python3.5/dist-packages/scripts/broker_script.py"", line 72, in main
    loop.run_until_complete(broker.start())
  File ""/usr/lib/python3.5/asyncio/base_events.py"", line 361, in run_until_complete
    self.run_forever()
  File ""/usr/lib/python3.5/asyncio/base_events.py"", line 331, in run_forever
    self._run_once()
  File ""/usr/lib/python3.5/asyncio/base_events.py"", line 1298, in _run_once
    handle._run()
  File ""/usr/lib/python3.5/asyncio/events.py"", line 125, in _run
    self._callback(*self._args)
  File ""/usr/lib/python3.5/asyncio/tasks.py"", line 308, in _wakeup
    self._step()
  File ""/usr/lib/python3.5/asyncio/tasks.py"", line 240, in _step
    result = coro.send(None)
  File ""/usr/local/lib/python3.5/dist-packages/hbmqtt/broker.py"", line 280, in start
    raise BrokerException(""Broker instance can't be started: %s"" % e)
hbmqtt.broker.BrokerException: Broker instance can't be started: an integer is required (got type str)
"
41,Hierarchical topics not handled correctly,2016-05-31T13:40:47Z,2016-05-31T19:56:54Z,"bug, component: broker",,,"Hierarchical topics are not handled correctly. More concretely, if I subscribe to a topic at a high level in the hierarchy I will also receive messages published at a lower level. 

I tested the following simple example:
1. Connect with Client C1 and receive `ConnAck` 
2. Subscribe with C1 to topic ""my_topic"" and receive `SubAck` 
3. Publish message `""my_message""` with C1 and QoS 1 to `""my_topic/other_topic""` and receive `PubAck` and additionally a `Publish`-message for `""my_topic/other_topic""` with message  `""my_message""`

Thus, the subscription to `""my_topic""` works like a subscription to `""my_topic/#""`. I would interpret this as a violation of the MQTT-standard and I also checked with emqtt and mosquitto, which would not send a `Publish` in response to the last step.

A quick fix would be to change Line 623 from
`match_pattern = re.compile(a_filter.replace('#', '.*').replace('$', '\$').replace('+', '[/\$\s\w\d]+'))`
to
`match_pattern = re.compile(""^""+a_filter.replace('#', '.*').replace('$', '\$').replace('+', '[/\$\s\w\d]+')+""$"")`

However, I am neither a Python-expert nor did I test the fix thoroughly.
"
40,get_message timeout,2016-05-23T09:24:44Z,2016-05-31T19:40:19Z,"bug, component: client",asyncio.futures.InvalidStateError,asyncio.futures.InvalidStateError: Exception is not set.,"Should the use of the timeout parameter generate the following on a timeout?
Traceback (most recent call last):
 ...
    message = await self.C.deliver_message(timeout=3)
  File ""py3\lib\site-packages\hbmqtt\client.py"", line 337, in deliver_message
    if deliver_task.exception():
  File ""c:\python35\Lib\asyncio\futures.py"", line 288, in exception
    raise InvalidStateError('Exception is not set.')
asyncio.futures.InvalidStateError: Exception is not set.
"
39,Constant session doesn't exist warnings,2016-05-19T13:04:10Z,2016-05-19T19:17:58Z,,,,"For each transmission of my mqtt client I see this message (with different IDs) in my logs:
`hbmqtt.broker: Delete session : session paho/AD96ADC1E3EF4820F0 doesn't exist`
For the client I use `paho.mqtt.publish.single`. The transmission of data is working fine.

Can I simply ignore the message? Do I need to look into the code of broker? Do I need to change parameters on the client?
"
38,mqtt over websockets from browser,2016-05-16T17:03:42Z,2016-05-31T15:39:17Z,,,,"Hello,

I cannot connect a mqtt client (in the browser, using mqtt.js) from the browser to the hbmqtt broker. 

The broker prints:

> INFO :: websockets.protocol :: Failing the WebSocket connection: 1006 

The browser prints:

> WebSocket connection to 'ws://127.0.0.1:8888/' failed: Error during WebSocket handshake: Sent non-empty 'Sec-WebSocket-Protocol' header but no response was received

Is this broker incompatible with a browser mqtt over web sockets client?

Thanks in advance,

Vasco Santos
"
37,$SYS/broker duplicated in $SYS/broker topics,2016-05-06T12:58:00Z,2016-05-07T05:16:42Z,"bug, component: broker",,,"Ran:

`hbmqtt_sub --url mqtt://<broker_address>:<broker_port> -t '$SYS/#' -d`

Got back a lot of stuff like:

`[2016-05-06 05:47:36,762] :: DEBUG - hbmqtt_sub/<client_id> <-in-- PublishPacket(ts=2016-05-06 05:47:36.761783, fixed=MQTTFixedHeader(length=45, flags=0x0), variable=PublishVariableHeader(topic=$SYS/broker/$SYS/broker/load/bytes/sent, packet_id=None), payload=PublishPayload(data=""bytearray(b'1993')""))`

When I ran it all through a Regular Expression filter, I got:

[            [0] => topic=$SYS/broker/$SYS/broker/load/bytes/received,
            [1] => topic=$SYS/broker/$SYS/broker/load/bytes/sent,
            [2] => topic=$SYS/broker/$SYS/broker/messages/received,
            [3] => topic=$SYS/broker/$SYS/broker/messages/sent,
            [4] => topic=$SYS/broker/$SYS/broker/time,
            [5] => topic=$SYS/broker/$SYS/broker/uptime,
            [6] => topic=$SYS/broker/$SYS/broker/uptime/formated,
            [7] => topic=$SYS/broker/$SYS/broker/clients/connected,
            [8] => topic=$SYS/broker/$SYS/broker/clients/disconnected,
            [9] => topic=$SYS/broker/$SYS/broker/clients/maximum,
            [10] => topic=$SYS/broker/$SYS/broker/clients/total,
            [11] => topic=$SYS/broker/$SYS/broker/messages/inflight,
            [12] => topic=$SYS/broker/$SYS/broker/messages/inflight/in,
            [13] => topic=$SYS/broker/$SYS/broker/messages/inflight/out,
            [14] => topic=$SYS/broker/$SYS/broker/messages/inflight/stored,
            [15] => topic=$SYS/broker/$SYS/broker/messages/publish/received,
            [16] => topic=$SYS/broker/$SYS/broker/messages/publish/sent,
            [17] => topic=$SYS/broker/$SYS/broker/messages/retained/count,
            [18] => topic=$SYS/broker/$SYS/broker/messages/subscriptions/count,](url)

i.e. the **$SYS/broker** is being repeated in the Topic, to become **$SYS/broker/$SYS/broker**.

I'm assuming this isn't correct.  

I've upgraded to 0.7, but the client is reporting 0.6.3 when I connect.

Thanks!
    ...Andrew
"
36,configuration file issue: fails to find 'bind' on default,2016-04-26T19:42:57Z,2016-05-04T19:33:02Z,"bug, component: broker","KeyError, hbmqtt.broker.BrokerException","KeyError: 'bind', hbmqtt.broker.BrokerException: Broker instance can't be started: 'bind'","Using basically the default configuration file with IP addresses added, I get an error when I try to use it:

[hbmqtt.conf.txt](https://github.com/beerfactory/hbmqtt/files/237318/hbmqtt.conf.txt)

`[2016-04-26 12:33:33,739] :: ERROR - Broker startup failed: 'bind'
Traceback (most recent call last):
  File ""/home/acoile/hbmqtt/lib/python3.5/site-packages/hbmqtt/broker.py"", line 248, in *_start
    address, port = listener['bind'].split(':')
KeyError: 'bind'
*_
During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""bin/hbmqtt"", line 11, in <module>
    sys.exit(main())
  File ""/home/acoile/hbmqtt/lib/python3.5/site-packages/scripts/broker_script.py"", line 72, in main
    loop.run_until_complete(broker.start())
  File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 325, in run_until_complete
    self.run_forever()
  File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 295, in run_forever
    self._run_once()
  File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 1254, in _run_once
    handle._run()
  File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/events.py"", line 125, in _run
    self._callback(*self._args)
  File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py"", line 239, in _step
    result = coro.send(None)
  File ""/home/acoile/hbmqtt/lib/python3.5/site-packages/hbmqtt/broker.py"", line 276, in start
    raise BrokerException(""Broker instance can't be started: %s"" % e)
hbmqtt.broker.BrokerException: Broker instance can't be started: 'bind'
[2016-04-26 12:33:33,751] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<coro() running at /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/coroutines.py:204>>`

It appears to be because there is no '**bind: x.y.z.t:p**' entry for listener:default:

Shouldn't it be applying _listeners:default:_ from hbmqtt's default configuration, then _listeners:default:_ from this configuration, and then adding the specific items in each _listeners:_ section, and just processing those sections? In other words, the defaults are items to be integrated into the configuration for each _listeners:_, not something that should be processed on their own.

Thanks for any help you can provide.
"
35,hbmqtt does not fetch exception when zero length payload is sent,2016-04-05T06:47:51Z,2016-05-04T20:43:21Z,"bug, component: broker",KeyError,KeyError: 'MQTTClient',"```
[2016-04-05 08:46:57,759] :: INFO - Listener 'default' bind to 0.0.0.0:1883 (max_connecionts=-1)
[2016-04-05 08:47:07,140] :: INFO - Listener 'default': 1 connections acquired
[2016-04-05 08:47:07,140] :: INFO - Connection from 127.0.0.1:60542 on listener 'default'
[2016-04-05 08:47:08,131] :: ERROR - Task exception was never retrieved
future: <Task finished coro=<stream_connected() done, defined at /usr/local/lib/python3.5/site-packages/hbmqtt/broker.py:319> exception=KeyError('MQTTClient',)>
Traceback (most recent call last):
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py"", line 239, in _step
    result = coro.send(value)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/broker.py"", line 321, in stream_connected
    yield from self.client_connected(listener_name, StreamReaderAdapter(reader), StreamWriterAdapter(writer))
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/broker.py"", line 466, in client_connected
    self.retain_message(client_session, app_message.topic, app_message.data, app_message.qos)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/broker.py"", line 543, in retain_message
    del self._retained_messages[topic_name]
KeyError: 'MQTTClient'
^C[20
```
"
34,hbmqtt does not react correctly to illegal protocol levels,2016-04-05T06:43:35Z,2016-04-10T21:05:47Z,component: broker,AttributeError,AttributeError: 'ConnectVariableHeader' object has no attribute 'protocol_level',"> [MQTT-3.1.2-2]
> The Server MUST respond to the CONNECT Packet with a CONNACK return code 0x01 (unacceptable protocol level) and then disconnect the Client if the Protocol Level is not supported by the Server.
> 
> [MQTT-3.2.2-5]
> If a server sends a CONNACK packet containing a non-zero return code it MUST then close the Network Connection.

```
[2016-04-05 08:40:20,721] :: INFO - Connection from 127.0.0.1:60442 on listener 'default'
[2016-04-05 08:40:20,723] :: ERROR - Task exception was never retrieved
future: <Task finished coro=<stream_connected() done, defined at /usr/local/lib/python3.5/site-packages/hbmqtt/broker.py:319> exception=AttributeError(""'ConnectVariableHeader' object has no attribute 'protocol_level'"",)>
Traceback (most recent call last):
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py"", line 239, in _step
    result = coro.send(value)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/broker.py"", line 321, in stream_connected
    yield from self.client_connected(listener_name, StreamReaderAdapter(reader), StreamWriterAdapter(writer))
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/broker.py"", line 336, in client_connected
    handler, client_session = yield from BrokerProtocolHandler.init_from_connect(reader, writer, self.plugins_manager, loop=self._loop)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/broker_handler.py"", line 147, in init_from_connect
    connect.variable_header.protocol_level)
AttributeError: 'ConnectVariableHeader' object has no attribute 'protocol_level'
```
"
33,hbmqtt seems to interpret will flag in CONNECT as reserved,2016-04-05T06:38:54Z,2016-05-04T20:55:57Z,,,,"``````
[2016-04-05 08:33:03,302] :: WARNING - MQTTClient296651 Received reserved packet, which is forbidden: closing connection```

``````
"
32,hbmqtt does not reject zero clientId with cleansession = 0,2016-04-05T06:36:54Z,2016-04-10T21:02:30Z,"component: broker, component: client",,,"> [MQTT-3.1.3-8]
> If the Client supplies a zero-byte ClientId with CleanSession set to 0, the Server MUST respond to the CONNECT Packet with a CONNACK return code 0x02 (Identifier rejected) and then close the Network Connection.
> 
> [MQTT-3.1.3-9]
> If the Server rejects the ClientId it MUST respond to the CONNECT Packet with a CONNACK return code 0x02 (Identifier rejected) and then close the Network Connection.
"
31,hbmqtt does not check connect flags,2016-04-05T06:30:57Z,2016-04-10T21:10:16Z,component: broker,,,"> [MQTT-3.1.2-22]
> If the User Name Flag is set to 0, the Password Flag MUST be set to 0.
"
30,hbmqtt accepts SUBSCRIBE topic filters with + not alone on a level,2016-04-05T06:00:44Z,2016-04-10T20:32:20Z,,,,"> [MQTT-4.7.1-3]
> The single-level wildcard can be used at any level in the Topic Filter, including first and last levels. Where it is used it MUST occupy an entire level of the filter.
"
29,hbmqtt accepts UTF8 topic strings with illegal characters in PUBLISH,2016-04-05T05:53:33Z,,enhancement,,,"> [MQTT-1.5.3-1]
> The character data in a UTF-8 encoded string MUST be well-formed UTF-8 as defined by the Unicode specification [Unicode] and restated in RFC 3629 [RFC3629]. In particular this data MUST NOT include encodings of code points between U+D800 and U+DFFF. If a Server or Client receives a Control Packet containing ill-formed UTF-8 it MUST close the Network Connection.
> 
> [MQTT-1.5.3-2]
> A UTF-8 encoded string MUST NOT include an encoding of the null character U+0000. If a receiver (Server or Client) receives a Control Packet containing U+0000 it MUST close the Network Connection.
> 
> [MQTT-1.5.3-3]
> A UTF-8 encoded sequence 0xEF 0xBB 0xBF is always to be interpreted to mean U+FEFF (""ZERO WIDTH NO-BREAK SPACE"") wherever it appears in a string and MUST NOT be skipped over or stripped off by a packet receiver.
"
28,hbmqtt matches $SYS/# topics with #,2016-04-05T05:45:18Z,2016-04-10T20:06:42Z,,,,"> [MQTT-4.7.2-1]
> The Server MUST NOT match Topic Filters starting with a wildcard character (# or +) with Topic Names beginning with a $ character.
"
27,hbmqtt accepts PUBLISH with empty topic,2016-04-05T05:25:29Z,2016-04-10T20:17:34Z,,,,"> [MQTT-4.7.3-1]
> All Topic Names and Topic Filters MUST be at least one character long.
"
26,hbmqtt accepts PUBLISH with '#' in topic,2016-04-05T05:23:56Z,2016-04-10T20:15:56Z,,,,"> [MQTT-3.3.2-2]
> The Topic Name in the PUBLISH Packet MUST NOT contain wildcard characters.
"
25,hbmqtt accepts PUBLISH with '+' in topic,2016-04-05T05:23:20Z,2016-04-10T20:15:23Z,,,,"> [MQTT-3.3.2-2]
> The Topic Name in the PUBLISH Packet MUST NOT contain wildcard characters.
"
24,Broker disconnects when receiving messages > 256 kB,2016-04-05T05:22:31Z,2016-04-10T13:34:23Z,,,,"```
[2016-04-05 07:09:02,990] :: INFO - Listener 'default' bind to 0.0.0.0:1883 (max_connecionts=-1)
[2016-04-05 07:09:36,077] :: INFO - Listener 'default': 1 connections acquired
[2016-04-05 07:09:36,077] :: INFO - Connection from 127.0.0.1:59001 on listener 'default'
[2016-04-05 07:09:36,079] :: WARNING - Delete session : session MQTTClient70625 doesn't exist
[2016-04-05 07:09:54,155] :: WARNING - Received PUBREL for unknown pending message with Id: 26471
[2016-04-05 07:09:54,158] :: WARNING - Received PUBREL for unknown pending message with Id: 26471
[2016-04-05 07:09:54,160] :: WARNING - Received PUBREL for unknown pending message with Id: 26471
[2016-04-05 07:09:54,160] :: WARNING - Received PUBREL for unknown pending message with Id: 26471
[2016-04-05 07:09:54,161] :: WARNING - Received PUBREL for unknown pending message with Id: 25090
[2016-04-05 07:09:54,162] :: WARNING - MQTTClient70625 Received reserved packet, which is forbidden: closing connection
[2016-04-05 07:09:54,165] :: INFO - Listener 'default': 0 connections acquired
```
"
23,Crash broker if PUBLISH with dup=1 repeated,2016-04-05T04:52:05Z,2016-05-04T20:36:07Z,component: broker,"hbmqtt.errors.HBMQTTException, RuntimeError","hbmqtt.errors.HBMQTTException: Can't add PUBREL waiter, a waiter already exists for message Id '2', RuntimeError: Event loop is closed","This error is reported based on running an MQTTv311 compliance test against the hbmqtt:

> [MQTT-3.3.1-1]
> The DUP flag MUST be set to 1 by the Client or Server when it attempts to re- deliver a PUBLISH Packet.

```
[2016-04-05 06:44:39,596] :: INFO - Listener 'default': 1 connections acquired
[2016-04-05 06:44:40,605] :: INFO - Listener 'default': 2 connections acquired
[2016-04-05 06:44:40,606] :: INFO - Connection from 127.0.0.1:58478 on listener 'default'
[2016-04-05 06:44:40,607] :: WARNING - Delete session : session MQTTClient601540 doesn't exist
[2016-04-05 06:44:42,612] :: INFO - Listener 'default': 1 connections acquired
[2016-04-05 06:44:43,619] :: INFO - Listener 'default': 2 connections acquired
[2016-04-05 06:44:43,619] :: INFO - Connection from 127.0.0.1:58479 on listener 'default'
[2016-04-05 06:44:43,621] :: WARNING - Delete session : session MQTTClient615657 doesn't exist
[2016-04-05 06:45:04,629] :: WARNING - Can't add PUBREL waiter, a waiter already exists for message Id '2'
Traceback (most recent call last):
  File ""/usr/local/bin/hbmqtt"", line 11, in <module>
    sys.exit(main())
  File ""/usr/local/lib/python3.5/site-packages/scripts/broker_script.py"", line 73, in main
    loop.run_forever()
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 301, in run_forever
    self._run_once()
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 1198, in _run_once
    handle._run()
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/events.py"", line 125, in _run
    self._callback(*self._args)
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py"", line 239, in _step
    result = coro.send(value)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py"", line 559, in handle_publish
    yield from self._handle_message_flow(incoming_message)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py"", line 203, in _handle_message_flow
    yield from self._handle_qos2_message_flow(app_message)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py"", line 339, in _handle_qos2_message_flow
    raise HBMQTTException(message)
hbmqtt.errors.HBMQTTException: Can't add PUBREL waiter, a waiter already exists for message Id '2'
[2016-04-05 06:45:04,690] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<coro() running at /usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/coroutines.py:198>>
[2016-04-05 06:45:04,690] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<coro() running at /usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/coroutines.py:198>>
[2016-04-05 06:45:04,700] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<Broker._broadcast_loop() running at /usr/local/lib/python3.5/site-packages/hbmqtt/broker.py:624> wait_for=<Future pending cb=[Task._wakeup()]>>
[2016-04-05 06:45:04,701] :: ERROR - Task exception was never retrieved
future: <Task finished coro=<ProtocolHandler.handle_publish() done, defined at /usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py:552> exception=HBMQTTException(""Can't add PUBREL waiter, a waiter already exists for message Id '2'"",)>
Traceback (most recent call last):
  File ""/usr/local/bin/hbmqtt"", line 11, in <module>
    sys.exit(main())
  File ""/usr/local/lib/python3.5/site-packages/scripts/broker_script.py"", line 73, in main
    loop.run_forever()
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 301, in run_forever
    self._run_once()
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 1198, in _run_once
    handle._run()
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/events.py"", line 125, in _run
    self._callback(*self._args)
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py"", line 239, in _step
    result = coro.send(value)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py"", line 559, in handle_publish
    yield from self._handle_message_flow(incoming_message)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py"", line 203, in _handle_message_flow
    yield from self._handle_qos2_message_flow(app_message)
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py"", line 339, in _handle_qos2_message_flow
    raise HBMQTTException(message)
hbmqtt.errors.HBMQTTException: Can't add PUBREL waiter, a waiter already exists for message Id '2'
[2016-04-05 06:45:04,704] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<ProtocolHandler._reader_loop() running at /usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py:369> wait_for=<Future pending cb=[Task._wakeup()]>>
[2016-04-05 06:45:04,704] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<MQTTFixedHeader.from_stream() running at /usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/packet.py:69> cb=[_release_waiter(<Future pendi...sk._wakeup()]>)() at /usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py:336]>
[2016-04-05 06:45:04,704] :: WARNING - BrokerProtocolHandler Unhandled exception in reader coro: GeneratorExit()
Exception ignored in: <generator object ProtocolHandler._reader_loop at 0x1106600a0>
Traceback (most recent call last):
  File ""/usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py"", line 431, in _reader_loop
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py"", line 214, in cancel
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py"", line 227, in cancel
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py"", line 242, in _schedule_callbacks
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 453, in call_soon
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 462, in _call_soon
  File ""/usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py"", line 289, in _check_closed
RuntimeError: Event loop is closed
[2016-04-05 06:45:04,705] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<ProtocolHandler.handle_publish() running at /usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py:559> wait_for=<Future cancelled>>
[2016-04-05 06:45:04,705] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<BrokerProtocolHandler.wait_disconnect() running at /usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/broker_handler.py:44> wait_for=<Future pending cb=[Task._wakeup()]> cb=[_wait.<locals>._on_completion() at /usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py:400]>
[2016-04-05 06:45:04,706] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<BrokerProtocolHandler.get_next_pending_unsubscription() running at /usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/broker_handler.py:94> wait_for=<Future pending cb=[Task._wakeup()]> cb=[_wait.<locals>._on_completion() at /usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py:400]>
[2016-04-05 06:45:04,706] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<BrokerProtocolHandler.get_next_pending_subscription() running at /usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/broker_handler.py:89> wait_for=<Future pending cb=[Task._wakeup()]> cb=[_wait.<locals>._on_completion() at /usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py:400]>
[2016-04-05 06:45:04,706] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<ProtocolHandler.mqtt_deliver_next_message() running at /usr/local/lib/python3.5/site-packages/hbmqtt/mqtt/protocol/handler.py:457> wait_for=<Future pending cb=[Task._wakeup()]> cb=[_wait.<locals>._on_completion() at /usr/local/Cellar/python3/3.5.0/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py:400]>
[2016-04-05 06:45:04,707] :: ERROR - Task was destroyed but it is pending!
task: <Task pending coro=<stream_connected() running at /usr/local/lib/python3.5/site-packages/hbmqtt/broker.py:321> wait_for=<Future pending cb=[Task._wakeup()]>>
```
"
22,Passed in event loop is not always respected,2016-03-08T00:32:52Z,2016-03-09T07:52:53Z,"bug, component: broker, component: client",,,"The broker allows an event loop to be passed in but this currently raises an error. From a quick search I found two places that need to be made aware of the to be used event loop:
- [`Session.__init__()`](https://github.com/beerfactory/hbmqtt/blob/82985b6f1ca81ca724215bd82ad00ab8fa54e74a/hbmqtt/session.py#L114-L117)
- [`Broker.__init__()`](https://github.com/beerfactory/hbmqtt/blob/6906e7ebe28e4ec2f0b7ea7be5605c7839ef1689/hbmqtt/broker.py#L168)
"
21,Add subprotocol headers for ws connection as defined by the mqtt spec…,2016-03-04T21:58:09Z,2016-03-06T20:33:31Z,,,,"…ification v3.1.1 chapter 6:

''The WebSocket Sub Protocol name selected and returned by the server MUST be “mqtt” [MQTT-6.0.0-4].""
"
20,Websockets aren't working,2016-03-03T22:31:57Z,2016-03-04T20:36:23Z,"bug, component: broker",,,"When connecting a client to the mqtt broker over a websocket I get the following error:

`:: WARNING :: hbmqtt.broker :: [MQTT-3.1.0-1] (client @=192.168.0.101:53088): Can't read first packet an CONNECT: No more data`

Reproduce:
Start hbmqtt broker
Connect e.g. by using this webclient: http://www.hivemq.com/demos/websocket-client/

This might be related to the following modification in websockets:
http://websockets.readthedocs.org/en/stable/changelog.html?highlight=legacy_recv
but even when using legacy websockets package I get the same behavior.

Thanks for publishing this here on github, I very much like this python mqtt broker
"
19,Exceptions on each message received,2016-02-04T15:48:43Z,2016-02-05T13:47:22Z,"bug, component: broker",,,"> [2016-02-04 15:43:13,171] :: ERROR - Task exception was never retrieved
> future: <Task finished coro=<stream_connected() done, defined at /.../hbmqtt/broker.py:318> exception=ConnectionResetError('Connection lost',)>
> Traceback (most recent call last):
>   File ""/usr/lib/python3.5/asyncio/tasks.py"", line 239, in _step
>     result = coro.send(None)
>   File ""/.../hbmqtt/broker.py"", line 320, in stream_connected
>     yield from self.client_connected(listener_name, StreamReaderAdapter(reader), StreamWriterAdapter(writer))
>   File ""/.../hbmqtt/broker.py"", line 427, in client_connected
>     yield from writer.close()
>   File ""/.../hbmqtt/adapters.py"", line 168, in close
>     yield from self._writer.drain()
>   File ""/usr/lib/python3.5/asyncio/streams.py"", line 313, in drain
>     yield from self._protocol._drain_helper()
>   File ""/usr/lib/python3.5/asyncio/streams.py"", line 194, in _drain_helper
>     raise ConnectionResetError('Connection lost')
> ConnectionResetError: Connection lost

And after closing the server:

> Exception ignored in: <generator object BrokerProtocolHandler.get_next_pending_subscription at 0x7f3aef258780>
> Traceback (most recent call last):
>   File ""/.../hbmqtt/mqtt/protocol/broker_handler.py"", line 89, in get_next_pending_subscription
>   File ""/usr/lib/python3.5/asyncio/queues.py"", line 170, in get
>   File ""/usr/lib/python3.5/asyncio/futures.py"", line 227, in cancel
>   File ""/usr/lib/python3.5/asyncio/futures.py"", line 242, in _schedule_callbacks
>   File ""/usr/lib/python3.5/asyncio/base_events.py"", line 447, in call_soon
>   File ""/usr/lib/python3.5/asyncio/base_events.py"", line 456, in _call_soon
>   File ""/usr/lib/python3.5/asyncio/base_events.py"", line 284, in _check_closed
> RuntimeError: Event loop is closed
"
18,Master,2015-11-13T21:18:53Z,2015-11-13T21:19:18Z,,,,
17,Implement persistence in broker,2015-11-13T19:51:43Z,,"component: broker, Feature request, help wanted",,,"Currently, all sessions data managed by a broker are stored in memory. This is a limit for serious use. 
HBMQTT broker should be able to persist sessions data (while offline).
Implementation should be based on the plugin system which would allow to use different persistence engine.
"
16,Install default yaml files in scripts directory,2015-11-11T09:51:07Z,2015-11-12T08:07:41Z,,,,"I found that when installing the hbmqtt package using setup.py, the auto created scripts hbmqtt, hbmqtt_pub & hbmqtt_sub throw an error that the default yaml filesdo not exist in the scripts directory. This small change to the setup.py will copy default_broker.yaml & default_client.yaml to the python env scripts directory.
"
15,Document rewrite,2015-11-03T20:48:29Z,2015-11-13T21:19:41Z,Task,,,"Rewrite existing documentation on wiki to sphynx-doc
"
14,Implement client authentication,2015-11-03T20:46:28Z,2015-11-03T20:47:36Z,"component: broker, enhancement",,,
13,Integrate a plugin manager,2015-11-03T20:44:10Z,2015-11-03T20:44:20Z,component: broker,,,
12,Move $SYS tree management into a plugin,2015-11-03T20:43:23Z,2015-11-03T20:47:36Z,"component: broker, enhancement",,,
11,Provide startup scripts,2015-11-03T20:43:01Z,2015-11-03T20:47:36Z,"component: broker, component: client, enhancement",,,"Provide startup scripts for broker, subscribe client and publish client.
"
10,Improve client test coverage,2015-11-03T20:42:14Z,2015-11-03T20:47:36Z,"component: client, Task",,,
9,Improve broker test coverage,2015-11-03T20:37:40Z,2015-11-03T20:47:36Z,"component: broker, Task",,,
8,Providing username and/or password in URI raises InvalidURI when using websocket,2015-11-03T20:37:05Z,2015-11-03T20:47:36Z,"bug, component: client",,,
7,Support message delivery retry,2015-11-03T20:36:31Z,2015-11-03T20:47:36Z,"component: broker, component: client",,,
6,Allow offline mqtt methods calls,2015-11-03T20:33:55Z,2015-11-03T20:47:36Z,component: client,,,
5,Allow broker to have only one default listener,2015-11-03T20:31:26Z,2015-11-03T20:47:36Z,component: broker,,,
4,Make message broadcasting asynchronous to message delivery by sessions,2015-11-03T20:27:21Z,2015-11-03T20:27:28Z,,,,
3,Fix ping issue,2015-11-02T12:49:10Z,2015-11-02T22:53:44Z,,,,"While testing hbmqtt with the `test.mosquitto.org` public server and my own local installation of the Mosquitto broker showed that the hbmqtt `MQTTClient` would consistently disconnect and then reconnect. 

This problem appears to be caused by the `_ping_task` attribute never being cleared. This prevents any further Ping messages being sent, which eventually triggers a disconnection and then a subsequent reconnect.

The modification in this pull request resolves the problem, which leaves the client connected to the server and sending a ping message at the keep alive interval.
"
2,Merge branch 'release/0.2',2015-07-07T20:11:30Z,2015-07-07T20:12:14Z,,,,
1,Add a Gitter chat badge to readme.md,2015-06-30T15:58:01Z,2015-06-30T15:59:19Z,,,,"### beerfactory/hbmqtt now has a Chat Room on Gitter

@njouanin has just created a chat room. You can visit it here: [https://gitter.im/beerfactory/hbmqtt](https://gitter.im/beerfactory/hbmqtt?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).

This pull-request adds this badge to your readme.md:

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/beerfactory/hbmqtt?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)

If my aim is a little off, please [let me know](https://github.com/gitterHQ/readme-badger/issues).

Happy chatting.

PS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.
"
