ID,Title,Created At,Closed At,Issues,Errors,Messages,Body
982,there is an error  when i monitor the twitter account?,2017-12-25T06:38:20Z,,,AttributeError,AttributeError: 'NoneType' object has no attribute 'strip',"Connected to a tweet stream!
Traceback (most recent call last):
  File ""twittermonitor.py"", line 187, in <module>
    stream.filter(follow=users)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 445, in filter
    self._start(async)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 294, in _run
    raise exception
AttributeError: 'NoneType' object has no attribute 'strip'"
981,How to filter only tweets from original user with  `stream.filter(follow=['12345'])`,2017-12-24T08:42:04Z,,,,,"it looks like `stream.filter(follow=['12345'])` includes tweets at someone and RT, what's the way to get tweets solely from that user?"
980, actual problems / Help !,2017-12-24T06:58:29Z,,,UnicodeEncodeError,"UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 55: character maps to <undefined>","--- Logging error ---
Traceback (most recent call last):
  File ""C:\Program Files\Python36-32\lib\logging\__init__.py"", line 989, in emit
    stream.write(msg)
  File ""C:\Program Files\Python36-32\lib\encodings\cp1252.py"", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 55: character maps to <undefined>
Call stack:
  File ""<string>"", line 1, in <module>
  File ""C:\Program Files\Python36-32\lib\idlelib\run.py"", line 142, in main
    ret = method(*args, **kwargs)
  File ""C:\Program Files\Python36-32\lib\idlelib\run.py"", line 460, in runcode
    exec(code, self.locals)
  File ""D:\LuckyBot-master\LuckyBot-master\src\luckyBot.py"", line 290, in <module>
    main()
  File ""D:\LuckyBot-master\LuckyBot-master\src\luckyBot.py"", line 272, in main
    newContestTweets = getContestTweets()
  File ""D:\LuckyBot-master\LuckyBot-master\src\luckyBot.py"", line 160, in getContestTweets
    logger.info(""Added following tweet to list: "" + tweet_text)
Unable to print the message and arguments - possible formatting error.
Use the traceback above to help find the error.

the bot works but pulls those errors and ends up pausing only

"
979,tweet.text does not  display the URL to the tweet itself.,2017-12-22T15:28:22Z,2017-12-23T02:00:16Z,,,,"```
print tweet.text
``` 

in someone's blog write "" The result show tweets, and followed by the URL to the tweet itself “

but when i run it, only show tweets, these is no URL followed by the tweet text，except tweet include media。

is anyone know why ?
and how to get  the  URL of the tweet itself  ?"
978,Help please,2017-12-20T20:23:41Z,,,AttributeError,"AttributeError: module 'tweepy' has no attribute 'OAuthHandler'","I have this error when executing luckyBot.py

Traceback (most recent call last):
  File ""D:\BOT\LuckyBot-master\LuckyBot-master\src\luckyBot.py"", line 30, in <module>
    auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
AttributeError: module 'tweepy' has no attribute 'OAuthHandler'

Tengo las key(token,api) bien "
977,Memory usage fix,2017-12-15T18:57:40Z,2017-12-15T18:58:34Z,,,,
976,Match class name to SearchResult to SearchResults,2017-12-12T11:41:01Z,,,,,"Class name is missing an `s`, this trips up GitHub's search.

Class definition:
https://github.com/tweepy/tweepy/blob/cd46550b3ef068857f5de9c37bbdd0a72acb7462/tweepy/models.py#L268"
975,Doesn't Refollow a User after Unfollowing,2017-12-11T18:46:15Z,2017-12-12T17:17:55Z,,,,"Directly after programmatically following a user and then unfollowing them on the web app, when I re-run the script it doesn't follow the user anymore.

`lebron = api.get_user('KingJames')`
`api.create_friendship('{}/{}/{}'.format(lebron.id, lebron.screen_name, lebron.user_id))`"
974,how to get Full text using tweepy,2017-12-09T10:08:07Z,,,,,i'm using [This](https://github.com/agalea91/twitter_search) script to get tweets. But the problem is that it is not giving full Text. what changes i need to make in this script to get full text ?
973,Remove duplicate streaming API in TOC of docs,2017-12-08T01:47:24Z,,,,,
972,Step 2: Creating a Stream Instruction Typo,2017-12-07T17:38:53Z,,,,,"Step 2: Creating a Stream
We need an api to stream. See Authentication Tutorial to learn how to get an api object. Once we have an api and a status listener we can create our stream object:

```
myStreamListener = MyStreamListener()
myStream = tweepy.Stream(auth = api.auth, listener=myStreamListener())
```
line 2 should be `listener=MyStreamListener()`"
971,Documentation Improvement,2017-12-06T10:54:35Z,,,,,* Document configuration API method
970,Update .gitignore,2017-12-03T02:37:36Z,,,,,"Update .gitignore by using https://www.gitignore.io/api/vim%2Cpython
This is useful to us because when I use virtual environments, I don't have to use git add in every files.
Also, there are many companies use gitignore.io https://github.com/joeblau/gitignore.io#companies.
I think this will good for this repo.

Thanks."
969,Non complete results,2017-11-29T08:58:21Z,,,,,When i use Tweepy to search Tweets it get for me some number much smaller than real results can be seen in search of Twitter itself. I use cursors but it get me for example 122 tweets while there are a lot of tweets in reality. What is the problem?
968,api search parameter from invalid syntax,2017-11-24T02:15:53Z,2017-11-25T06:32:16Z,,SyntaxError,"SyntaxError: invalid syntax","per the api.search docstring, the parameters allowed are:

```
:allowed_param:'q', 'lang', 'locale', 'since_id', 'geocode',
 'max_id', 'since', 'until', 'result_type', 'count',
  'include_entities', 'from', 'to', 'source'
```

yet from is a python reserved word, so when I call api.search with from as a kwarg, python throws a SyntaxError


```
api.search(q=""BREAKING: "", from='ap')


File ""<ipython-input-18-f62b69f5cbc8>"", line 1
    api.search(q=""BREAKING: "", from='ap')
                                  ^
SyntaxError: invalid syntax
```

Query in the advanced search on twitter website:

""BREAKING:"" from:ap

How can I replicate this via tweepy?  


"
967,Tweets are being truncated to 140 symbols,2017-11-19T10:54:21Z,,,,,"Hi!

I am using tweepy to search tweets and I've just faced a problem that the tweets are being truncated to 140 symbols. Is there a way to change the behaviour or add a parameter to `api.search()` method?"
966,Unicode error  'charmap' codec can't encode character '\u2019',2017-11-13T16:17:43Z,,,,,"Hello !! Hope someone could help me. 

I tried to fetch the public tweets on my personal account. It could return results,but just a few. Then  a UnicodeEncodeError also returned. Is there any superman could tell me how to solve the problem? 

Thank you very much.
![_20171113170320](https://user-images.githubusercontent.com/33632179/32735953-8790af0e-c896-11e7-9f79-71e620acc2f5.png)



"
965,'Must be authenticated' error when calling rate_limit_status() with app-only authentication.,2017-11-12T06:58:40Z,,,"""tweepy.error.TweepError","""tweepy.error.TweepError: Must be authenticated.""","app_auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
api = tweepy.API(app_auth)
api.rate_limit_status()

""tweepy.error.TweepError: Must be authenticated.""

whereas the following will work:

app_auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
api = tweepy.API(app_auth)
statuses = api.statuses_lookup(request_ids)
"
964,best way get all followers of a user,2017-11-11T14:41:11Z,,,,,"Hey,
So i've been trying to get a list of all followers of a user who has less than 600 followers.
but anytime i check the length of followers after the loop stops, i get <=320 instead of 600. 
Any help?

https://gist.github.com/gwuah/acabb5c59b2b883dd082c54feb174678"
963,‘Module’ object is not callable,2017-11-11T10:43:24Z,,,TypeError,"TypeError: 'module' object is not callable`","Having this problem with tweepy
`Traceback (most recent call last):
  File ""/private/var/mobile/Containers/Shared/AppGroup/92292B95-D1E2-43B1-BC1C-1324446DF6EB/Pythonista3/Documents/my_scripts/Other/mining demo.py"", line 25, in <module>
    auth = OAuthHandler(consumer_key, consumer_secret)
  File ""/private/var/mobile/Containers/Shared/AppGroup/92292B95-D1E2-43B1-BC1C-1324446DF6EB/Pythonista3/Documents/site-packages/tweepy/auth.py"", line 49, in __init__
    callback_uri=self.callback)
TypeError: 'module' object is not callable`

Line 25 is 
`auth = OAuthHandler(consumer_key, consumer_secret)`"
962,Streaming documentation,2017-11-09T00:10:49Z,2017-11-09T17:42:03Z,,,,"Twitter appears to have taken down the documentation for the Stream API down: https://dev.twitter.com/streaming/overview (linked from http://tweepy.readthedocs.io/en/v3.5.0/streaming_how_to.html) Looking at Twitter's API docs I can't seem to find any sort of documentation on a push API. Given this, what is the future status of the Tweepy streaming component?"
961,Cannot convert emoji when streaming tweets,2017-11-02T06:24:08Z,2017-11-19T04:49:56Z,,,,"I am trying to get tweets from streaming but whenever an emoji comes in, the stream stops. I've tried to encode(utf-8) but however it does not display the emoji but writes something like \xf0\x9f\x99\x83' 

Can someone help me please. I'm new to this. Really urgent!! "
960,report_spam returns error code 34 ,2017-11-01T17:53:13Z,,,,,"api.report_spam(""twitter"") returns
`Error reporting: [{'code': 34, 'message': 'Sorry, that page does not exist'}]
`

I have tried the following:

```
api.report_spam(""twitter"")
api.report_spam(""@twitter"")
api.report_spam(id=""twitter"")
api.report_spam(id=""@twitter"")
```"
959,PageIterator: Change initial page number to 1 and handled duplicates,2017-10-28T19:46:53Z,,,,,Initialized self.current_page to 1 instead of 0 and handled duplicates from previous pages to return unique results and to determine the stop iteration criteria (Refer issue [958](https://github.com/tweepy/tweepy/issues/958)).
958,cursor .pages() with api.search_users returning same page again and again,2017-10-27T16:11:00Z,,,,,"```
auth = tweepy.OAuthHandler(consumer_token, consumer_secret)
auth.set_access_token(access_token, access_secret)
api = tweepy.API(auth)
user_objs = []
name = ""jacqueline farkas""
id_strs = {}
page_no = 0
try:
    for page in tweepy.Cursor(api.search_users, name).pages(3):
        dup_count = 0
        print(""*******  Page"", str(page_no))
        print(""Length of page"", len(page))
        user_objs.extend(page)
        for user_obj in page:
            id_str = user_obj._json['id_str']
            if id_str in id_strs:
                # print(""Duplicate for:"", id_str, ""from page number:"", id_strs[id_str])
                dup_count += 1
            else:
                # print(id_str)
                id_strs[id_str] = page_no
        time.sleep(1)
        print(""Duplicates in page"", str(page_no), str(dup_count))
        page_no += 1
except Exception as ex:
    print(ex)```

With the above code, I am trying to get the search results for users using tweepy(Python 3.5.2, tweepy 3.5.0) cursor. The results are being duplicated with the pages parameter being passed. Is it the right way to query the search_users using the tweepy cursor? I am getting results for the above code with the following pattern:

`1. for low search results(name = ""jacqueline farkas"") (There are actually 9 results returned for manual search on twitter website):

    *******  Page 0
    Length of page 2
    Duplicates in page 0 0
    *******  Page 1
    Length of page 2
    Duplicates in page 1 2
    *******  Page 2
    Length of page 2
    Duplicates in page 2 2
    *******  Page 3
    Length of page 2
    Duplicates in page 3 2

2. for high search results (name = ""jon snow"")

    *******  Page 0
    Length of page 20
    Duplicates in page 0 0
    *******  Page 1
    Length of page 20
    Duplicates in page 1 20
    *******  Page 2
    Length of page 20
    Duplicates in page 2 0
    *******  Page 3
    Length of page 20
    Duplicates in page 3 0

3. With no limit on pages specified (.pages()), the same page is being repeated and never stops. Do I have to change the page somewhere everytime i loop over the cursor?`


"
957,406 error in Streaming API when filtering on follow,2017-10-24T12:07:45Z,2017-10-24T12:20:17Z,,,,"I am getting 406 error code when doing
stream.filter(follow=['rajesh9458'])
However  stream.filter(track=['diwali'])   works"
956,Installing,2017-10-23T14:53:59Z,,,ImportError,"ImportError: No module named pip.req","When I use the following to download tweepy:

git clone https://github.com/tweepy/tweepy.git
cd tweepy
python setup.py install

I get the following error message after entering ""python setup.py install"":

Traceback (most recent call last):
  File ""setup.py"", line 5, in <module>
    from pip.req import parse_requirements
ImportError: No module named pip.req

What should I do to complete the install?"
955,Remove broken downloads badge,2017-10-23T09:20:12Z,,,,,"See https://github.com/badges/shields/issues/716.

Also fix a typo."
954,"tweepy.error.TweepError: [{u'message': u'Bad Authentication data.', u'code': 215}]",2017-10-22T19:29:34Z,,,,,"Hello.
I get this error - ""tweepy.error.TweepError: [{u'message': u'Bad Authentication data.', u'code': 215}]"". I would be really grateful for helping me at fixing that issue."
953,The cache module adds duplicate entries !,2017-10-22T03:27:43Z,,,pymongo.errors.DuplicateKeyError,"pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: local.tweepy_cache index: _id_ dup key: my key","I use Pymongo cache and in the line 416 of cache.py that manage the store we have
`python
self.col.insert({'created': now, '_id': key, 'value': blob})` It seems it doesn't check correctly if the entry doesn't exist because then I get the error

pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: local.tweepy_cache index: _id_ dup key: my key

So either the line 414 can handles the pymongo.errors.DuplicateKeyError with a pass or either fix the checking in the method execute() of the binder.py"
952,verify_credentials api,2017-10-21T14:12:52Z,,,,,"Hi,

is possibile set an optional parameters, **include_email**?

Thanks"
951,maximum recursion depth exceeded while calling a Python object,2017-10-19T07:31:42Z,2017-10-19T08:47:09Z,,tweepy.error.TweepError,"tweepy.error.TweepError: maximum recursion depth exceeded while calling a Python object","i use tweepy in a flask app , today i had this error all the time and never seen it though  it was working before 
Python: 3.6.2
Tweepy: 3.5.0
oauthlib: 2.0.5

```
Traceback (most recent call last):
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask/app.py"", line 1985, in wsgi_app
    response = self.handle_exception(e)
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask_cors/extension.py"", line 161, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask/app.py"", line 1540, in handle_exception
    reraise(exc_type, exc_value, tb)
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask/app.py"", line 1982, in wsgi_app
    response = self.full_dispatch_request()
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask/app.py"", line 1614, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask_cors/extension.py"", line 161, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask/app.py"", line 1517, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask/_compat.py"", line 33, in reraise
    raise value
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask/app.py"", line 1612, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/flask/app.py"", line 1598, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/home/ahmed/Projects/BookTips/Twitips/server/app/auth.py"", line 18, in auth_request_token
    url = auth.get_authorization_url()
  File ""/home/ahmed/.virtualenvs/Twitips/lib/python3.6/site-packages/tweepy/auth.py"", line 91, in get_authorization_url
    raise TweepError(e)
tweepy.error.TweepError: maximum recursion depth exceeded while calling a Python object
```"
950,api.update_status: 'str' object has no attribute 'apply_auth',2017-10-17T18:50:31Z,2017-10-17T21:02:33Z,,AttributeError,AttributeError: 'str' object has no attribute 'apply_auth'```,"Unexpected error when using api.update_status
[code](https://github.com/wormmoon/randomweatherbot/blob/master/bot.py)

Error:
```Traceback (most recent call last):
  File ""bot.py"", line 144, in <module>
    api.update_status(status=tweet)
  File ""build/bdist.macosx-10.12-intel/egg/tweepy/api.py"", line 194, in update_status
  File ""build/bdist.macosx-10.12-intel/egg/tweepy/binder.py"", line 250, in _call
  File ""build/bdist.macosx-10.12-intel/egg/tweepy/binder.py"", line 177, in execute
AttributeError: 'str' object has no attribute 'apply_auth'```"
949,`search` method doesn't return data about limit headers,2017-10-17T17:40:12Z,,,,,"When using `search` there are some interesting HTTP headers about the remaining limit for your requests, as documented [here](https://developer.twitter.com/en/docs/basics/rate-limiting).

It would be very useful to have access to this information."
948,on_error doesn't return enough information,2017-10-17T15:06:43Z,,,,,"I had to get inside of streaming.py and add a couple of prints to find out what was going wrong with my code. Would be better to have on_error(self, status_code, reason=None, text=None) and pass the response reason and text on to make debugging easier."
947,Updating print statements for python3,2017-10-17T14:49:25Z,,,,,
946,api.get_status Method miss Get Reply Count and Get Quote Count,2017-10-16T21:35:18Z,,,,,"This method is not presenting a bug, but require an update. Thank you a lot."
945,Add tweet_mode enabled to live stream,2017-10-16T00:49:21Z,,,,,"Is it possible to try and enable tweet_mode=‘enabled’ for the livestream functionality?

I.e this would generate tweets under ”full_text” not ”text”

Justification for this: due to twitters new tweet functionality, some tweets pulled will be truncated "
944,Exception after large Search API request,2017-10-16T00:43:44Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: Failed to send request: ","After running a Tweepy cursor on the Search API for around 1300 pages, I receive the following exception:

-------------------------------------------------------------------------------------------------------
Tweepy request failed.
Traceback (most recent call last):
  File ""C:\Users\...\venv\lib\site-packages\tweepy\binder.py"", line 190, in execute
    proxies=self.api.proxy)
  File ""C:\Users\...\venv\lib\site-packages\requests\sessions.py"", line 508, in request
    resp = self.send(prep, **send_kwargs)
  File ""C:\Users\...\venv\lib\site-packages\requests\sessions.py"", line 658, in send
    r.content
  File ""C:\Users\...\venv\lib\site-packages\requests\models.py"", line 823, in content
    self._content = bytes().join(self.iter_content(CONTENT_CHUNK_SIZE)) or bytes()
MemoryError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""C:/Users/.../collect_tweets.py"", line 36, in get_latest_tweets
    result_type='recent').pages():
  File ""C:\Users\...\venv\lib\site-packages\tweepy\cursor.py"", line 49, in __next__
    return self.next()
  File ""C:\Users\...\venv\lib\site-packages\tweepy\cursor.py"", line 108, in next
    data = self.method(max_id=self.max_id, parser=RawParser(), *self.args, **self.kargs)
  File ""C:\Users\...\venv\lib\site-packages\tweepy\binder.py"", line 250, in _call
    return method.execute()
  File ""C:\Users\...\venv\lib\site-packages\tweepy\binder.py"", line 192, in execute
    six.reraise(TweepError, TweepError('Failed to send request: %s' % e), sys.exc_info()[2])
  File ""C:\Users\...\venv\lib\site-packages\six.py"", line 692, in reraise
    raise value.with_traceback(tb)
  File ""C:\Users\...\venv\lib\site-packages\tweepy\binder.py"", line 190, in execute
    proxies=self.api.proxy)
  File ""C:\Users\...\venv\lib\site-packages\requests\sessions.py"", line 508, in request
    resp = self.send(prep, **send_kwargs)
  File ""C:\Users\...\venv\lib\site-packages\requests\sessions.py"", line 658, in send
    r.content
  File ""C:\Users\...\venv\lib\site-packages\requests\models.py"", line 823, in content
    self._content = bytes().join(self.iter_content(CONTENT_CHUNK_SIZE)) or bytes()
tweepy.error.TweepError: Failed to send request: 

Process finished with exit code 0

---------------------------------------------------------------------------------------------------


Would anyone be able to tell me what's going on? I'm not even sure where to look."
943,[Request] Provide human-readable logging for already existing status error,2017-10-13T19:28:04Z,2017-10-13T21:52:02Z,,tweepy.error.TweepError,"tweepy.error.TweepError: [{u'message': u'Status is a duplicate.', u'code': 187}]","Hello, 

nice effort!

For an already existing status, the response I get from the API, is like below:

```
Traceback (most recent call last):
  File ""tweet.py"", line 36, in <module>
    main()
  File ""tweet.py"", line 32, in main
    status = api.update_status(status=tweet) 
  File ""/usr/local/lib/python2.7/site-packages/tweepy/api.py"", line 194, in update_status
    )(post_data=post_data, *args, **kwargs)
  File ""/usr/local/lib/python2.7/site-packages/tweepy/binder.py"", line 245, in _call
    return method.execute()
  File ""/usr/local/lib/python2.7/site-packages/tweepy/binder.py"", line 229, in execute
    raise TweepError(error_msg, resp, api_code=api_error_code)
tweepy.error.TweepError: [{u'message': u'Status is a duplicate.', u'code': 187}]
```

Couldn't we just replace the default API's response with a more human friendly error message? Like ""You have already posted this tweet"".

Regards,
Thodoris Bais"
942,Fix for line.strip() when line is None,2017-10-12T16:20:58Z,,,,,A fix for issue [#576](https://github.com/tweepy/tweepy/issues/576) that was closed but never seemed to be fixed.
941,Add currenly missing parameter to Api.search method ---- result_type,2017-10-06T19:21:35Z,,,,,"https://developer.twitter.com/en/docs/tweets/search/api-reference/get-search-tweets

`result_type` = Specifies what type of search results you would prefer to receive. The current default is “mixed.” 

Does anybody think it is possible to add this ? Would PR be accepted ?
Thanks."
940,Tweepy no longer supports DMs,2017-10-05T19:38:52Z,,,TweepError,"TweepError: [{u'message': u'There was an error sending your message: DM commands are no longer allowed!.', u'code': 151}]","Hello All --

I use tweepy to update myself via twitter DM on status of computer processing done for my work.

Since last Friday, I now get message. Is this a tweepy problem OR is this a problem with my Twitter account? Any advice would be welcome. Solutions welcome too..

AMD 

Traceback (most recent call last):
  File ""C:\CODE\notification.py"", line 52, in <module>
    api.update_status(status = updateMessage)
  File ""build\bdist.win32\egg\tweepy\api.py"", line 194, in update_status
    )(post_data=post_data, *args, **kwargs)
  File ""build\bdist.win32\egg\tweepy\binder.py"", line 245, in _call
    return method.execute()
  File ""build\bdist.win32\egg\tweepy\binder.py"", line 229, in execute
    raise TweepError(error_msg, resp, api_code=api_error_code)
TweepError: [{u'message': u'There was an error sending your message: DM commands are no longer allowed!.', u'code': 151}]"
939,"Added possibility to compare `eq` and `ne` between users, using the unique `id`s.",2017-10-05T07:12:17Z,,,,,"The code is copied from `Status`, with only the _type_ changed in `instanceof` from `Status` to `User`."
938,Time when one account started to follow another account,2017-10-03T09:07:58Z,,,,,"Hi, I was wondering is it possible to get the exact time when one account started to follow another.
api.show_friendship shows only details around connection, but no time."
937,Tweepy crashing during large runs on laptop. ,2017-10-02T15:25:59Z,,,"ConnectionResetError, urllib3.exceptions.ProtocolError, requests.exceptions.ConnectionError, tweepy.error.TweepError","ConnectionResetError: [Errno 54] Connection reset by peer, urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')), requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')), tweepy.error.TweepError: Failed to send request: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))","Ive gotten the same error about 6 times now after running the code for a long time. Im constantly able to get to large amount of requests (Was able to pull down 45000 followers before it crashed).  It will just always crash the same way. 

Traceback (most recent call last):
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 601, in urlopen
    chunked=chunked)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 387, in _make_request
    six.raise_from(e, None)
  File ""<string>"", line 2, in raise_from
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 383, in _make_request
    httplib_response = conn.getresponse()
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py"", line 1331, in getresponse
    response.begin()
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py"", line 297, in begin
    version, status, reason = self._read_status()
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py"", line 258, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), ""iso-8859-1"")
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/socket.py"", line 586, in readinto
    return self._sock.recv_into(b)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py"", line 1002, in recv_into
    return self.read(nbytes, buffer)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py"", line 865, in read
    return self._sslobj.read(len, buffer)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py"", line 625, in read
    v = self._sslobj.read(len, buffer)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/requests/adapters.py"", line 440, in send
    timeout=timeout
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 639, in urlopen
    _stacktrace=sys.exc_info()[2])
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/util/retry.py"", line 357, in increment
    raise six.reraise(type(error), error, _stacktrace)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/packages/six.py"", line 685, in reraise
    raise value.with_traceback(tb)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 601, in urlopen
    chunked=chunked)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 387, in _make_request
    six.raise_from(e, None)
  File ""<string>"", line 2, in raise_from
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 383, in _make_request
    httplib_response = conn.getresponse()
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py"", line 1331, in getresponse
    response.begin()
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py"", line 297, in begin
    version, status, reason = self._read_status()
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py"", line 258, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), ""iso-8859-1"")
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/socket.py"", line 586, in readinto
    return self._sock.recv_into(b)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py"", line 1002, in recv_into
    return self.read(nbytes, buffer)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py"", line 865, in read
    return self._sslobj.read(len, buffer)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py"", line 625, in read
    v = self._sslobj.read(len, buffer)
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/binder.py"", line 190, in execute
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/requests/sessions.py"", line 508, in request
    resp = self.send(prep, **send_kwargs)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/requests/sessions.py"", line 618, in send
    r = adapter.send(request, **kwargs)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/requests/adapters.py"", line 490, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/Users/zacharyrothberg/PycharmProjects/twitterbotffs/MainBot.py"", line 30, in <module>
    for user in starter.pages():
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/cursor.py"", line 49, in __next__
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/cursor.py"", line 75, in next
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/binder.py"", line 250, in _call
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/binder.py"", line 192, in execute
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/six.py"", line 692, in reraise
    raise value.with_traceback(tb)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/binder.py"", line 190, in execute
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/requests/sessions.py"", line 508, in request
    resp = self.send(prep, **send_kwargs)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/requests/sessions.py"", line 618, in send
    r = adapter.send(request, **kwargs)
  File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/requests/adapters.py"", line 490, in send
    raise ConnectionError(err, request=request)
tweepy.error.TweepError: Failed to send request: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))
"
936,Not Work Tweepy on Python,2017-09-29T19:11:46Z,,,,,"Yesterday I worked in python it was good, but today not working I don't what happened"
935,Tweepy not getting full text,2017-09-27T21:37:16Z,,,,,"Hey guys, just a heads up that currently the library is not getting the new tweets. According to the following example:

https://developer.twitter.com/en/docs/tweets/tweet-updates#chars280

Notice that currently tweepy is retrieving only 140 chars and then adding ""..."" at the end. Any of you guys now if there is any easy fix for that? Or is this a problem from Twitter?
"
934,Video upload bug fix,2017-09-27T14:31:25Z,2017-09-27T16:28:34Z,,,,
933,Close session avoiding memory leaks,2017-09-25T10:35:58Z,2017-09-25T12:33:58Z,,,,
931,allow cursor parameter for block_ids method (fixes #930),2017-09-21T18:49:45Z,,,,,See #930 for explanation.
930,blocks_ids does not support cursor pagination,2017-09-21T18:46:24Z,,,,,"API.blocks_ids() does not allow cursor pagination, but according to [the API documentation](https://dev.twitter.com/rest/reference/get/followers/ids) the API endpoint uses curser pagination and only returns the first 5000 items if the cursor parameter is omitted."
929,Video upload (take 2),2017-09-21T15:53:25Z,,,,,"This is a more up to date version of https://github.com/tweepy/tweepy/pull/672 originally crafted by @Choko256 and @fitnr.

The original description from the previous PR:
> As I mentioned in #655, this is an alternate way of adding video upload. The media_upload method gets a conditional, with smaller images routed to 'normal' upload, and larger images and videos chunked upload. I also moved upload limits to a class variable, to make them easier to change if the need arises.

> This also fixes from unicode errors as flagged by @jeremylow."
928,Requested Issue Fix: Rename property method ResultSet.max_id,2017-09-18T22:23:27Z,,,,,"-As per issue request, updated property method ResultSet.max_id to ResultSet.min_id to clarify its functionality"
927,Doc to Tweepy?,2017-09-12T14:52:45Z,2017-10-04T08:50:22Z,,,,"Is the tweepy documentation incomplete? In some surveys, having problems with tweepy, I found solutions in forums with other methods and functions used for research that are not included in the documentation. For example, additional search parameters .. query = ""word1 OR word2"", etc.
"
926,Allow tweet_mode=extended in statuses_lookup,2017-09-11T22:44:35Z,,,,,In response to #840 
925,API.lists_all() returns only 100 lists,2017-08-31T15:22:28Z,,,,,"I guess it is caused by Twitter API pagination, but how to get 101'th and 102'th lists?
Tweepy docs are not covering API.lists_all():
http://docs.tweepy.org/en/v3.5.0/api.html#API.lists"
924,Please merge `Removed unicode() in filter_level for py3k supprt` into v3.5.0,2017-08-28T12:57:41Z,,,,,"Within using streaming API of `tweepy` in python3.6.2, This bug https://github.com/tweepy/tweepy/issues/782 happened. After checking the source code, I found the master got a correct implementation: https://github.com/tweepy/tweepy/blob/c8e473ed7b939e09a485d0eaa2390554f009a56b/tweepy/streaming.py#L447
but the v3.5.0 didn't : 
https://github.com/tweepy/tweepy/blob/920f5c49c059c4ea7f16c7c4f070c484161525c3/tweepy/streaming.py#L442

So with using pip3 https://pypi.python.org/pypi/tweepy, it's a bug which I can not bypass."
923,Can We Stream live video from tweepy?,2017-08-26T08:33:22Z,2017-09-23T08:27:04Z,,,,i want to make project that can stream live video on twitter can this library do that?
922,Please cut a 3.6.1 bugfix release?,2017-08-25T12:32:24Z,,,,,"There are a few useful bugfixes that have been merged to master since the 3.6.0 release was made on Mar 3 2016. It would be nice to be able to use them without having to make a fork.

Bumping the version in `tweepy/__init__.py` would be enough for our use-case (doesn't look like you've pushed 3.6.0 to pypi yet either, but for anyone who maintains their own cheeseshop that's okay)."
921,Add documentation for lookup_users,2017-08-25T00:41:33Z,,,,,
919,Muting user,2017-08-15T11:04:14Z,,,,,When can we expect muting to be integrated into the API wrapper?
918,Can anyone confirm the languages parameter only works on the filter stream?,2017-08-10T11:10:15Z,,,,,"In the Streaming request parameter [documentation](https://dev.twitter.com/streaming/overview/request-parameters#filter_level) it says that

> This parameter may be used on all streaming endpoints, unless explicitly noted.

for the `languages` and the `locations` parameter.

However, tweepy only uses it on the filter stream, because thats the only endpoint where these two parameters are explicitly documented again in the [endpoint documentation](https://dev.twitter.com/streaming/reference/post/statuses/filter).

Before I do any testing myself: Can anyone confirm that the `languages` and `locations` parameters have no effect on i.e. the user stream?
"
917,Tweepy - userstream method to monitor my own timeline not working any more,2017-08-02T11:00:02Z,,,,,"Hi,

I would be very nice if somebody could help me with the following problem: 

Already some time ago I wrote an application which relies on streaming my own timeline via tweepy into a `neo4j` database. I used the  `stream.userstream(_with='followings)` and until some days ago everything worked perfectly. Now suddenly it doesn't yield any data anymore. The stream just stays silent. No error messages, just nothing. The `stream.filter()` however still works without problem, so it should neither depend on my internet connection nor on any rate limits. What could be the problem?

The only theory I have is, that the 2700 users I follow might be a bit too much. This is the only change I made I can think of: I added approximately 100 users in the last couple of days.

Edit: I forgot to write: I am using Python 3 (3.5 before, now I updated to Python 3.62 as I read online that this problem might have to do with the Python version). If I leave away `_with='followings`it seems to work, but not as before. I am not getting all the tweets in my timeline. "
916,Direct message image attachment,2017-08-02T10:08:05Z,,,,,"Twitter has added the feature of attaching images to Direct Messages.
How do I use it with the TweePy 3.5"
915,api.search()  How to use filters like images and links. ,2017-08-02T09:56:01Z,,,,,"I want to search only those tweets that contain an image. The twitter documentation mentions use of operators as filters 
Link: https://dev.twitter.com/rest/public/search

If I use twitter search through browser the filter operators works. so if i search for ""puppy filter: images"" I get results with tweets containing text puppy and every tweet has an image.
The search url for API HTTP request is 
Link: https://twitter.com/search?src=typd&q=puppy%20filter%3Aimages

Please suggest any solution. I want to search for relevant tweets because of the rate limit rather than downloading a whole bunch and then filtering json file. "
914,User activity within the streaming API,2017-07-31T07:48:16Z,,,,,"Hello everyone, 

First of all, great work with Tweepy, that's an impressive project. 
Second of all, I'd like to know if that would be possible to have the full user activity in the streaming API? 
I'd like to track a specific user id and retrieve tweets (already possible), likes, follows and so on. I've been trying to do so for couple of hours and I didn't succeed. 

Cheers,"
913,`ResultSet.max_id` should be `min_id`,2017-07-28T17:03:01Z,,,,,"It's misleading (possibly confusing) that `ResultSet.max_id` actually returns the **_minimum_** ID number in the set, not the maximum.

According to [lines 22-23 of the currently most recent `tweepy/models.py`](https://github.com/tweepy/tweepy/blob/e79447854d85ebc29dce58bc40496296745dda82/tweepy/models.py#L22-L23):

```python
        # Max_id is always set to the *smallest* id, minus one, in the set
        return (min(ids) - 1) if ids else None
```

Please change the name of this property method to `ResultSet.min_id` instead."
912,Exception in thread Thread-1:,2017-07-26T17:39:21Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: Expecting length, unexpected value found","how about this error: 
Exception in thread Thread-1:
Traceback (most recent call last):
  File ""C:\Users\khairy\AppData\Local\Programs\Python\Python35\lib\threading.py"", line 914, in _bootstrap_inner
    self.run()
  File ""C:\Users\khairy\AppData\Local\Programs\Python\Python35\lib\threading.py"", line 862, in run
    self._target(*self._args, **self._kwargs)
  File ""C:\Users\khairy\AppData\Local\Programs\Python\Python35\lib\site-packages\tweepy-3.6.0-py3.5.egg\tweepy\streaming.py"", line 297, in _run
    six.reraise(*exc_info)
  File ""C:\Users\khairy\AppData\Local\Programs\Python\Python35\lib\site-packages\six-1.10.0-py3.5.egg\six.py"", line 686, in reraise
    raise value
  File ""C:\Users\khairy\AppData\Local\Programs\Python\Python35\lib\site-packages\tweepy-3.6.0-py3.5.egg\tweepy\streaming.py"", line 266, in _run
    self._read_loop(resp)
  File ""C:\Users\khairy\AppData\Local\Programs\Python\Python35\lib\site-packages\tweepy-3.6.0-py3.5.egg\tweepy\streaming.py"", line 323, in _read_loop
    raise TweepError('Expecting length, unexpected value found')
tweepy.error.TweepError: Expecting length, unexpected value found"
911,exception on streaming,2017-07-21T13:34:53Z,2017-12-03T19:45:45Z,,TypeError,"TypeError: the JSON object must be str, bytes or bytearr","`File ""/home/ali/.pyenv/versions/3.6.1/lib/python3.6/si
te-packages/tweepy/streaming.py"", line 50, in on_data   
    data = json.loads(raw_data)                         
  File ""/home/ali/.pyenv/versions/3.6.1/lib/python3.6/js
on/__init__.py"", line 348, in loads                     
    'not {!r}'.format(s.__class__.__name__))            
TypeError: the JSON object must be str, bytes or bytearr
ay, not 'NoneType'`"
910,get tweet impression,2017-07-17T15:05:54Z,,,,,"HI all. i wanna using tweepy api in my project . now i faced with new problem.
how can get impression of each tweet with tweepy?
i couldn't find suitable api for this."
909,Adding params to user_timeline,2017-07-14T18:00:29Z,,,,,See reference https://dev.twitter.com/rest/reference/get/statuses/user_timeline
908,"requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))",2017-07-14T17:36:43Z,,,requests.packages.urllib3.exceptions.ProtocolError,"requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))","I updated my streaming.py file like https://github.com/feinsteinben/tweepy/commit/a349d52545b9cbe07eb7471bae9b31436449b9f6?diff=split to fix the IncompleteRead exceptions but now this error is comming. Help!

I am getting this error:

Traceback (most recent call last):
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/http/client.py"", line 583, in _readinto_chunked
    n = self._safe_readinto(mvb)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/http/client.py"", line 630, in _safe_readinto
    raise IncompleteRead(bytes(mvb[0:total_bytes]), len(b))
http.client.IncompleteRead: IncompleteRead(0 bytes read, 512 more expected)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/requests/packages/urllib3/response.py"", line 302, in _error_catcher
    yield
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/requests/packages/urllib3/response.py"", line 384, in read
    data = self._fp.read(amt)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/http/client.py"", line 449, in read
    n = self.readinto(b)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/http/client.py"", line 483, in readinto
    return self._readinto_chunked(b)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/http/client.py"", line 594, in _readinto_chunked
    raise IncompleteRead(bytes(b[0:total_bytes]))
http.client.IncompleteRead: IncompleteRead(0 bytes read)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""Tweepy Terminal.py"", line 50, in <module>
    twitterStream.filter(track=[""book""])
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/tweepy/streaming.py"", line 458, in filter
    self._start(async)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/tweepy/streaming.py"", line 372, in _start
    self._run()
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/tweepy/streaming.py"", line 305, in _run
    six.reraise(*exc_info)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/six.py"", line 686, in reraise
    raise value
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/tweepy/streaming.py"", line 273, in _run
    self._read_loop(resp)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/tweepy/streaming.py"", line 324, in _read_loop
    line = buf.read_line().strip()
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/tweepy/streaming.py"", line 186, in read_line
    self._buffer += self._stream.read(self._chunk_size)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/requests/packages/urllib3/response.py"", line 401, in read
    raise IncompleteRead(self._fp_bytes_read, self.length_remaining)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/contextlib.py"", line 100, in __exit__
    self.gen.throw(type, value, traceback)
  File ""/home/scarlet/anaconda3/envs/my_env/lib/python3.6/site-packages/requests/packages/urllib3/response.py"", line 320, in _error_catcher
    raise ProtocolError('Connection broken: %r' % e, e)
requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))
"
907,Unfollowing people not following me ... script not working,2017-07-12T11:15:23Z,,,,,"So, I have been at this for days and it seems that there is no way to unfollow people who are not following me..
```python
twitter_handle = ""MyTwitterName"" 

friends_ids = api.friends_ids(api.me().id)

for follower in tweepy.Cursor(api.followers, id=twitter_handler).items():
    if follower.id not in friends_ids:
        api.destroy_friendship(follower)
```


I have tried many variations of the above script bit it does not work. "
906,Failed to send request: 'str' object has no attribute 'decode' on Ubuntu 16.04,2017-07-05T10:51:18Z,,,,,"The code attached below generates an error on Ubuntu 16.04 LTS with python3 default package installed (python3 --version returns 3.5.2). 

The error message is: 
«Failed to send request: 'str' object has no attribute 'decode'»

The code works fine on Ubuntu 17.04 and Fedora 25 (both python3 --version returning 3.5.3). The code also runs on Ubuntu 16.04 LTS with self-compiled from source python 3.6.1.
Also, the code has been running ok for over a year on Ubuntu 16.04 LTS - it only fails since mid June 2017.
Not sure where the issue is, probably in Ubuntu package for python or in python version 3.5.2.

```
from datetime import datetime,date,time,timezone
import tweepy as twitter


def sendToTwitter():
        consumer_key='...'
        consumer_secret='...'
        access_token_key='...'
        access_token_secret='..'
        #connect to the twitter api
        message = ""tweet test""
        print(""trying to send the tweet..."")
        try:
                auth = twitter.OAuthHandler(consumer_key, consumer_secret)
                auth.set_access_token(access_token_key, access_token_secret)
                api = twitter.API(auth)
                status = api.update_status(status=message)
                print(""tweet sent"")
        except Exception as e:
                        print(""error while tweeting. reason : "" + str(e))
        return
sendToTwitter()
```"
905,Bad Authentication Data code: 215,2017-07-03T19:11:42Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: [{u'message': u'Bad Authentication data.', u'code': 215}]","Script fails and output is :

`Traceback (most recent call last):
  File ""senti.py"", line 34, in <module>
    print(api.me().name)
  File ""/usr/lib/python2.7/site-packages/tweepy/api.py"", line 338, in me
    return self.get_user(screen_name=self.auth.get_username())
  File ""/usr/lib/python2.7/site-packages/tweepy/auth.py"", line 134, in get_username
    user = api.verify_credentials()
  File ""/usr/lib/python2.7/site-packages/tweepy/api.py"", line 631, in verify_credentials
    )(**kargs)
  File ""/usr/lib/python2.7/site-packages/tweepy/binder.py"", line 245, in _call
    return method.execute()
  File ""/usr/lib/python2.7/site-packages/tweepy/binder.py"", line 229, in execute
    raise TweepError(error_msg, resp, api_code=api_error_code)
tweepy.error.TweepError: [{u'message': u'Bad Authentication data.', u'code': 215}]
`"
904,Added missing return keyword,2017-07-02T00:55:28Z,,,,,Return keywords were missing in `update_profile_background_image` method and `update_profile_banner` method.
903,"change streaming example method to ""file.write(data)"" then long time the RAM will be used up, computer stops working ",2017-06-29T07:15:01Z,,,,,"I use this example streaming code.https://github.com/tweepy/tweepy/blob/master/examples/streaming.py

then
in my work, i write the data to a file like this:

    def on_data(self, data):
        with open('data.txt', 'a')as f:
           
            f.write(data+'\n')
        return True

then after two days, the computer cannot work, because the ram has been used up.

Has anyone ever encountered this problem why the RAM can be used up.
Because I want to collect the tweets for a long time, but the RAM will be used up in two days,
I have to reset my computer to collect tweets.

Thanks for your viewing .Looking for your kindly solutions."
902,Tweepy got TypeError: argument of type 'int' is not iterable,2017-06-22T16:52:31Z,,,,,"Hi !

I am experiencing an issue with the Tweepy function `search` and `search_users`: When I launch my little piece of code below:

    auth = tweepy.auth.OAuthHandler(creds[""consumer_key""], creds[""consumer_secret""])
    auth.secure = True
    auth.set_access_token(creds[""access_token""], creds[""access_token_secret""])
    
    api = tweepy.API(auth, wait_on_rate_limit=True,wait_on_rate_limit_notify=True,retry_count=10,retry_delay=5,retry_errors=5)
    #The error is the same for 'search_users & 'search'
    res = api.search_users(q=""Hello"",count=10)
    res = api.search(q=""Hello"",count=10)

It gives me the following error:

    Traceback (most recent call last):
    File ""/projects/twitter/twitter/common/search.py"", line 9, in searchUser
    res = api.search_users(q=""Hello"",count=10)
    File ""/projects/twitter/lib/python3.5/site-packages/tweepy-3.6.0-py3.5.egg/tweepy/binder.py"", line 250, in _call
    File ""/projects/twitter/lib/python3.5/site-packages/tweepy-3.6.0-py3.5.egg/tweepy/binder.py"", line 214, in execute
    
    TypeError: argument of type 'int' is not iterable

Note: I am currently using `virtualenv`, but I don't think the issue is related to.

Note 2: The issue is the same on Tweepy versions `3.2`, `3.5` & `3.6`

Note 3: I've removed the count argument just in case, without any change

Is this an issue or I did something wrong ?

Already raised a Stackoverflow for info: https://stackoverflow.com/questions/44209542/tweepy-got-typeerror-argument-of-type-int-is-not-iterable"
901,unable to send media on DM,2017-06-20T17:54:10Z,,,,,"So I successfully uploaded media using tweepy, and made a new method in API object to send media as an attachment in DM.
This is the method:
@property
    def send_media(self):
        """""" :reference: https://dev.twitter.com/rest/reference/post/direct_messages/new
            :allowed_param:'user', 'screen_name', 'user_id', 'text'
        """"""
        return bind_api(
            api=self,
            path='/direct_messages/new.json',
            method='POST',
            payload_type='media',
            allowed_param=['user', 'screen_name', 'user_id', 'text','type','media_id'],
            require_auth=True
        )
    
I call this : 
api.send_media(user_id =status.direct_message['sender_id'], text =response, attachment={'type':'media','media_id': mediaID})


after sending message i get this response in my terminal.

Media(_api=, recipient_id_str=u'2956391868', sender={u'follow_request_sent': False, u'has_extended_profile': False, u'profile_use_background_image': True, u'default_profile_image': False, u'id': 106111046, u'profile_background_image_url_https': u'https://abs.twimg.com/images/themes/theme15/bg.png', u'verified': False, u'translator_type': u'none', u'profile_text_color': u'333333', u'profile_image_url_https': u'https://pbs.twimg.com/profile_images/839688948360216576/95sFtYJs_normal.jpg', u'profile_sidebar_fill_color': u'C0DFEC', u'entities': {u'description': {u'urls': []}}, u'followers_count': 38, u'profile_sidebar_border_color': u'A8C7F7', u'id_str': u'106111046', u'profile_background_color'.......

Whats wrong?"
900,How do I set up a webhook using Tweepy,2017-06-19T17:19:15Z,2017-06-20T17:47:11Z,,,,I am looking to build a chat bot and to receive real time requests whenever a DM is received I need to set up a web hook
899,Get Tweepy.Cursor cursor position,2017-06-17T17:27:54Z,,,,,"Hi, I wonder if there is a way to grab the current cursor position when using tweepy.Cursor,
I can start from a cursor position by passing that argument, but I don't know how to get the current position. 

`for page in tweepy.Cursor(api.followers_ids,id=uset_id,cursor=1568044909443443455).pages():
      something(page)`

The thing is that sometimes I got this exception:

> 'Connection aborted.', ConnectionResetError(104, 'Connection reset by peer')

and I want to be able to start the cursor again from the position it left over. Is this possible?"
898,JSON decode issue while parsing few tweet streams.,2017-06-17T06:32:01Z,,,json.decoder.JSONDecodeError,"json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 1)","Hi, I am getting following error while converting the tweet to json in few tweet streams. I have tried many fixes like enode('utf-8')/custom decode class, but unable to find a perfect fix for this issue.This issue is forcing me to avoid many valuable tweet streams, while analyzing them to calculate the business insights post stream collection logic. 

Traceback (most recent call last):
  File ""sentiment_eval.py"", line 70, in <module>
    tweet = json.loads(line)
  File ""C:\Users\niraj.kumar.panda\AppData\Local\Programs\Python\Python36-32\lib\json\__init__.py"", line 354, in loads
    return _default_decoder.decode(s)
  File ""C:\Users\niraj.kumar.panda\AppData\Local\Programs\Python\Python36-32\lib\json\decoder.py"", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File ""C:\Users\niraj.kumar.panda\AppData\Local\Programs\Python\Python36-32\lib\json\decoder.py"", line 357, in raw_decode
    raise JSONDecodeError(""Expecting value"", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 1)


It would be a great help, if this can be addressed in a quicker span.

Thanks."
897,Streaming: disconnect on keep_alive(),2017-06-16T23:52:37Z,,,,,"Hi

I have a use case where I want to connect to the streaming API for a period of time and then disconnect even when no tweet is received during that period.

When no tweet is received, I can check if defined duration has elapsed in StreamListener keep_alive(), but there is no mechanism to disconnect in this case since _read_loop() is not reading any return value from keep_alive() and there is no way to break the loop in this situation.

As a workaround I am rising a custom exception in my implementation of keep_alive() but this is not ideal, I understand that a better solution is to let keep_alive() return a boolean that when is false breaks the read loop, same as on_data(), on_status(), etc."
896,Handles blank keep-alive new lines,2017-06-15T19:00:21Z,2017-07-11T01:37:55Z,,,,Added .strip() to read_line() to handle keep-alive new lines. This is in line with the pip release of Tweepy here: https://pypi.python.org/pypi/tweepy/3.5.0
895,Tidied up Streaming.py,2017-06-11T02:41:24Z,,,,,Gave variables more descriptive names. made file PEP8 compliant
894,TabError in tweepy.modules,2017-06-08T05:22:16Z,,,TabError,"TabError: inconsistent use of tabs and spaces in indentation`","`line 302
    setattr(result, 'is_followed_by', 'followed_by' in v)
                                                        ^
TabError: inconsistent use of tabs and spaces in indentation`

I've looked through tweepy.modules in PyCharm and Anaconda, and notebook++, I cannot find what it's talking about.

Any ideas?"
893,Twitter set-up in Python,2017-06-02T18:11:32Z,2017-06-05T12:09:59Z,,,,"Hello,
I tried to install module Twitter and/or Tweepy but I couldn't. Line commands that I used:
------------------
install twitter
--------------------
pip install twitter
------------------------
import tweepy
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth) 
public_tweets = api.home_timeline()
for tweet in public_tweets:
    print tweet.text
--------------------------------
$ pip install python-twitter-3.3tar

-------------------------------
pip install -i https://pypi.anaconda.org/pypi/simple tweepy

invalid syntax in all cases

none of them worked for me, so I need an advice on how to install the module because I need to do streamline through API. thank you"
892,"TweepError: Expecting length, unexpected value found",2017-06-02T16:54:53Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: Expecting length, unexpected value found","Hello everyone, I am streaming tweets with Tweepy version 3.6 in a 2.7 Python version on w10.

What it seems weird to me is that after a minimum number of tweets fetched, tweepy raises this error:

Traceback (most recent call last):
  File ""escuchar_tweets.py"", line 67, in <module>
    twitterStream.filter(track=keywords)
  File ""C:\Anaconda2\lib\site-packages\tweepy\streaming.py"", line 450, in filter
    self._start(async)
  File ""C:\Anaconda2\lib\site-packages\tweepy\streaming.py"", line 364, in _start
    self._run()
  File ""C:\Anaconda2\lib\site-packages\tweepy\streaming.py"", line 297, in _run
    six.reraise(*exc_info)
  File ""C:\Anaconda2\lib\site-packages\tweepy\streaming.py"", line 266, in _run
    self._read_loop(resp)
  File ""C:\Anaconda2\lib\site-packages\tweepy\streaming.py"", line 323, in _read_loop
    raise TweepError('Expecting length, unexpected value found')
tweepy.error.TweepError: Expecting length, unexpected value found

My code is the following:

class listener(StreamListener):

    def on_data(self, data):
        try:
            print data
            saveFile = open('twbruto_'+args.hashtag_analizar+'_'+args.db_cliente+'.csv','a')
            saveFile.write(data)
            saveFile.write('\n')
            saveFile.close()
            prepro = preprocesatw.Preprocesadortw()
            prepro.preprocesar(twbruto=data, db=args.db_cliente, hashtag=args.hashtag_analizar)

            return True

        except BaseException as e:
            print 'failed in data', str(e)
            time.sleep(5)
        
    def on_error(self, status):
        print status


I found on Stackoverflow these two questions, but unluckily no one seems to know the answer.
Here the [question1](https://stackoverflow.com/questions/43442616/tweeperror-expecting-length-unexpected-value-found-pandas-jupyter-notebook) and [question 2](https://stackoverflow.com/questions/43354669/tweepy-occassional-but-persistent-error-expecting-length-unexpected-value-foun)

Any help is really welcome,
thanks for reading!"
891,Emoji encoding on streaming API,2017-06-01T00:09:50Z,,,,,"Hi, I am using a very simple example of the streaming API, but it is failing on the encoding of a tweet with emojis.  My code is roughly the following:

```
class Listener(StreamListener):

    def on_data(self, data):
        self.buffer.append(data)
        print(""hello"", len(self.buffer))
        print(json.loads(data))

l = Listener()
auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

stream = Stream(auth, l)
stream.filter(follow = [user_id],
              stall_warnings = True,
              encoding = 'unicode-escape')
```
It produces this error

 ` File ""streaming.py"", line 29, in on_data                                                                                  print(json.loads(data))                                                                                               File ""C:\Users\Felipe\Anaconda2\envs\py35\lib\encodings\cp850.py"", line 19, in encode                                     return codecs.charmap_encode(input,self.errors,encoding_map)[0]                                                     UnicodeEncodeError: 'charmap' codec can't encode characters in position 2228-2231: character maps to <undefined> `

I have tried various encodings including the by default utf-8 but the method still fails. Is there any way to  enconde emjois properly?."
890,passing include_email parameter to verify_credentials() function,2017-05-31T18:45:43Z,,,,,"Up on using
```
api = tweepy.API(auth)
response = api.verify_credentials(include_email=True)
``` 
 response dont have email of user in it. 

Have  checked 'Request email addresses from users' box in additional permissions tab. And authenticating user have email verified account.Tried by authenticating with different users. email is not returning for any user. But other details are returned in User object like screenname, id etc."
889,Is there a way to not reply to replies?,2017-05-24T23:42:23Z,2017-05-24T23:45:33Z,,,,
888,Document how to get *pinned* Tweet,2017-05-18T16:18:38Z,,,,,"The docs, code and examples repo make no mention of *pinned* or *pin* for Tweets.

Please could you document or explain the strategy for fetching a pinned Tweet from a user with Tweepy?

Thanks"
887,Issue with filtering the date of tweets,2017-05-18T14:42:14Z,,,,,"Hi,
I am trying to extract the data from Twitter within a range of date and just for a certain city (with no keywords, I want to extract all the Tweets). My code is as below and it is working without date filter but when I add the since=""2017-02-01"", until=""2017-02-27"", the output is blank. Can anybody help me to fix it?

import tweepy
import csv

consumer_key = ""Doy0JVXbQCXQpHWo7c7Iyi2qa""
consumer_secret = ""weC5gr6Ug7BiE57nzn7A0KHnBfQrtdnuENgvxqksNxpEt1o8Gt""
access_token = ""272931846-ZcXJl9ynbua6Y4Zygogsdyk2tIKvVZmM3vWsQDL4""
access_token_secret = ""HB3k5zs71w6KLVSOhXRIEF8UPcV4eLUJiJv06abB8ssOx""

auth = tweepy.auth.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

# Open/Create a file to append data
csvFile = open('tweets.csv', 'a')
#Use csv Writer
csvWriter = csv.writer(csvFile)

for tweet in tweepy.Cursor(api.search,q=""*"",geocode=""37.2296,80.4139,150km"").items(10000):
    print ([tweet.created_at, tweet.text.encode('utf-8'), tweet.geo])
"
886,"handle scrub_geo, status_withheld and user_withheld streaming events",2017-05-17T22:11:31Z,,,,,"This adds support for handling more events in the `StreamListener`

https://dev.twitter.com/streaming/overview/messages-types#Location_deletion_notices_scrub_geo
https://dev.twitter.com/streaming/overview/messages-types#withheld_content_notices"
885,Fix errors on keep-alive,2017-05-16T06:43:54Z,2017-09-05T19:39:32Z,,,,Possibly the same issue as #883 #876 
884,Update README.md,2017-05-12T11:45:17Z,2017-05-12T20:45:31Z,,,,"All tests on Py3.6 are passing, so can we add 3.6 as a supported version ?"
883,tweepy errror filtering by coordinates,2017-05-12T05:01:17Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: Expecting length, unexpected value found","Traceback (most recent call last):
  File ""analisis3.py"", line 50, in <module>
    twitterStream.filter(locations=bogota)
  File ""/usr/local/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/streaming.py"", line 450, in filter
  File ""/usr/local/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/streaming.py"", line 364, in _start
  File ""/usr/local/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/streaming.py"", line 297, in _run
  File ""/usr/local/lib/python3.6/site-packages/six-1.10.0-py3.6.egg/six.py"", line 686, in reraise
    raise value
  File ""/usr/local/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/streaming.py"", line 266, in _run
  File ""/usr/local/lib/python3.6/site-packages/tweepy-3.6.0-py3.6.egg/tweepy/streaming.py"", line 323, in _read_loop
tweepy.error.TweepError: Expecting length, unexpected value found


ANY SUGGESTION?"
882,can't filter only by language,2017-05-11T09:40:26Z,2017-05-12T07:58:48Z,,,,"Hi , i can't manage to filter only by languages I get error 406 

Working :
`  stream.filter(track=['cars'], languages=['en'])`

not working error 406:
`  stream.filter(languages=['en'])`

Thanks"
881,search through valid ids in twitter,2017-05-09T11:54:18Z,2017-05-09T12:48:24Z,,,,"I need to search through all ids in twitter to find all the users that have more than 10000 followes. when I use this code, some ids are not valid so I get an exception and the process stops.

`        for id in range(1, 9999999999):
            user = self.api.get_user(user_id=id)
            if user.followers_count>100000:
                popular_list.append(id)`

how can I do a proper search through all valid ids in twitter using tweepy?"
880,retrieve replies of tweets,2017-05-06T09:05:22Z,,,,,"I am using tweepy API in my python code to retrieve some tweets and replies. I used api.search to get replies of a tweet. but it only returns the replies of first tweet. I can not change the tweet id in that function, so it can retrieve replies. here is that part of my code:

`query = 'to:'+ uid
    number_of_replies=input(""number of replies to retrieve:"")
    for results in tweepy.Cursor(self.api.search, q=query , since_id=tid).items(int(number_of_replies)):
        if str(results.in_reply_to_status_id_str)==tid:
           print(results.text)`

how can I fix this? is there any way to add since_id to the query??"
879,404 stream api ,2017-04-24T07:02:13Z,,,,,"#when I use the tweepy stream api  below, it returns 404 .

#Import the necessary methods from tweepy library
import tweepy
from tweepy.streaming import StreamListener
from tweepy import OAuthHandler
from tweepy import Stream

#Variables that contains the user credentials to access Twitter API 
access_token = “×××""
access_token_secret = ""×××""
consumer_key = ""×××""
consumer_secret = ""×××""

class MyStreamListener(tweepy.StreamListener):

    def on_status(self, status):
        print(status.text)
    def on_error(self, status_code):
        print status_code
        if status_code == 420:
                #returning False in on_data disconnects the stream
            return False


if __name__ == '__main__':

    #This handles Twitter authetification and the connection to Twitter Streaming API
    auth = OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_token, access_token_secret)
    # Creation of the actual interface, using authentication
    api = tweepy.API(auth)
    myStreamListener = MyStreamListener()
    myStream = tweepy.Stream(auth = api.auth, listener=myStreamListener)
    myStream.filter(track=['python'])"
878,Retreive tweet full text when tweet_mode is extended,2017-04-18T03:30:02Z,,,,,"When `tweet_mode` is `extended` twitter api returns full text in `full_text` field instead of `text`. 

https://dev.twitter.com/overview/api/upcoming-changes-to-tweets"
877,401 Unauthorized when streaming,2017-04-16T00:48:19Z,,,,,"I'm getting a 401 error, but only when using the `StreamListener`. Normal API calls work fine.

My Twitter account is set to the same timezone as my dev machine, and I still get 401 errors when I run my code on Heroku's servers. What gives? Is Tweepy still hitting v1 API endpoints?"
876,Questions and multiple Error,2017-04-13T13:41:04Z,,,,,"Hi guys!

My actual code of tweepy is:

```
from tweepy.streaming import StreamListener

from tweepy import OAuthHandler

from tweepy import Stream

import json

access_token = ""CENSORED""

access_token_secret = ""CENSORED""

consumer_key = ""CENSORED""

consumer_secret = ""CENSORED""



class StdOutListener(StreamListener):
    def on_data(self, ecbdata):



        tweet = json.loads(ecbdata)

        created_at = tweet[""created_at""]

        id_str = tweet[""id_str""]

        text = tweet[""text""]

        coordinates = tweet[""coordinates""]

        obj = {""created_at"": created_at, ""id_str"": id_str, ""text"": text,""coordinates"": coordinates }

        tweetind = collection.insert_one(obj).inserted_id

        print (obj)

        return True

        def on_error(self, status):
            print (status)


if __name__ == '__main__':



    l = StdOutListener()

    auth = OAuthHandler(consumer_key, consumer_secret)

    auth.set_access_token(access_token, access_token_secret)

    stream = Stream(auth, l)


  

    from pymongo import MongoClient

    client = MongoClient()

    client = MongoClient('localhost', 27017)

    db = client['twitter_ecb']

    collection = db['twitter_ecb']


stream.filter(track=['ecb'])
```

I collect the data in MongoDB. For programing with Python i use Python3 in combination with the IDE PyCharm by JetBrains.

When i run this code, python console collects just one tweet but then it stops with following messages:


> Traceback (most recent call last):
>   File ""C:/Users/Salah/PycharmProjects/TwitterData/tweets.py"", line 76, in <module>
>     stream.filter(track=['ECB'])
>   File ""C:\Users\Salah\AppData\Local\Programs\Python\Python36\lib\site-packages\tweepy-3.6.0-py3.6.egg\tweepy\streaming.py"", line 450, in filter
>   File ""C:\Users\Salah\AppData\Local\Programs\Python\Python36\lib\site-packages\tweepy-3.6.0-py3.6.egg\tweepy\streaming.py"", line 364, in _start
>   File ""C:\Users\Salah\AppData\Local\Programs\Python\Python36\lib\site-packages\tweepy-3.6.0-py3.6.egg\tweepy\streaming.py"", line 297, in _run
>   File ""C:\Users\Salah\AppData\Local\Programs\Python\Python36\lib\site-packages\six.py"", line 686, in reraise
>     raise value
>   File ""C:\Users\Salah\AppData\Local\Programs\Python\Python36\lib\site-packages\tweepy-3.6.0-py3.6.egg\tweepy\streaming.py"", line 266, in _run
>   File ""C:\Users\Salah\AppData\Local\Programs\Python\Python36\lib\site-packages\tweepy-3.6.0-py3.6.egg\tweepy\streaming.py"", line 323, in _read_loop
> tweepy.error.TweepError: Expecting length, unexpected value found
> 
> Process finished with exit code 1

What am i doing wrong? Or is it just a tweepy bug which needs a workaround to fix it? And if yes: How do i fix it?

My second question is how i search for combinations in tweets. I try to look for tweets which contain for example: ecb and exit. Is this the right code? 

`stream.filter(track=['ecb exit'])`

And if i search for multiple combinations, will this code do it?
`stream.filter(track=['ecb exit', 'ecb taper', 'ecb tapering', 'draghi taper', 'draghi tapering', 'draghi exit'])
`



best regards"
875,hashtag to scrollPhathd,2017-04-09T22:34:47Z,,,ProtocolError,"ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 512 more expected)', IncompleteRead(0 bytes read, 512 more expected))","hi i have a rpizerow scrolling tweets to a scrollphat hd show here [http://forums.pimoroni.com/t/twitter-hashtag-to-scroll-phat/1609](url)

and i keep getting this error, can anyone help with this please? :)

`Traceback (most recent call last):
  File ""/home/pi/Pimoroni/gScrollPhatHD.py"", line 60, in <module>
    myStream.filter(track=['hug'], async=False)
  File ""build/bdist.linux-armv6l/egg/tweepy/streaming.py"", line 450, in filter
    self._start(async)
  File ""build/bdist.linux-armv6l/egg/tweepy/streaming.py"", line 364, in _start
    self._run()
  File ""build/bdist.linux-armv6l/egg/tweepy/streaming.py"", line 297, in _run
    six.reraise(*exc_info)
  File ""build/bdist.linux-armv6l/egg/tweepy/streaming.py"", line 266, in _run
    self._read_loop(resp)
  File ""build/bdist.linux-armv6l/egg/tweepy/streaming.py"", line 316, in _read_loop
    line = buf.read_line().strip()
  File ""build/bdist.linux-armv6l/egg/tweepy/streaming.py"", line 181, in read_line
    self._buffer += self._stream.read(self._chunk_size)
  File ""/usr/lib/python2.7/dist-packages/urllib3/response.py"", line 214, in read
    raise ProtocolError('Connection broken: %r' % e, e)
ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 512 more expected)', IncompleteRead(0 bytes read, 512 more expected))

`
#!/usr/bin/env python

import sys
import time
import tweepy
import scrollphathd
from scrollphathd.fonts import font5x7smoothed

scrollphathd.clear()

while True:
    try:
        class MyStreamListener(tweepy.StreamListener):
            def on_status(self, status):
                if not status.text.startswith('RT'):
                    scroll_tweet(status)
            def on_error(self, status_code):
                if status_code == 420:
                    return False

        def scroll_tweet(status):
            status = '     >>>>>     @%s: %s     ' % (status.user.screen_name.upper(), status.text.upper())
            status = status.encode('ascii', 'ignore').decode('ascii')            
            scrollphathd.write_string(status,font=font5x7smoothed, brightness=0.1)
            status_length = scrollphathd.write_string(status, x=0, y=0,font=font5x7smoothed, brightness=0.1)
            print status
            print 'status length --->',status_length
            while status_length > 0:
                    #print 'status length',status_length
                    #print 'buffer_len',scrollphathd.write_string(status, x=0, y=0,font=font5x7smoothed, brightness=0.1)
                    #scrollphathd.flip(x=True)
                    scrollphathd.rotate(degrees=180)
                    scrollphathd.show()
                    scrollphathd.scroll(1)
                    time.sleep(0.01)
                    status_length -= 1
            else:
                    scrollphathd.scroll(0)
                    scrollphathd.clear()
                
        consumer_key =''
        consumer_secret =''

        access_token = ''
        access_token_secret = ''

        #scrollphathd.write_string(""Loading Tweets"")
        #scrollphathd.scroll()
        #time.sleep(0.1)

        auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
        auth.set_access_token(access_token, access_token_secret)
        api = tweepy.API(auth)

        myStreamListener = MyStreamListener()
        myStream = tweepy.Stream(auth = api.auth, listener=myStreamListener)

        myStream.filter(track=['hug'], async=False)

    except KeyboardInterrupt:
        scrollphathd.clear()
        sys.exit(-1)

`"
874,Update streaming.py type check,2017-04-08T01:45:55Z,2017-05-05T22:50:50Z,,,,"Pull request #870 fixed the NoneType errors by moving the strip command, but broke the keep-alive mechanism that was expecting an empty string after the keep-alive command was stripped.

This should fix the keep-alive and also check for None, although it's not clear to me what should happen if NoneType is received here."
873,"api.update_status(""DM"") causes tweepy to try to send a direct message",2017-04-01T03:09:35Z,2017-04-01T03:43:55Z,,tweepy.error.TweepError,"tweepy.error.TweepError: [{'code': 151, 'message': ""There was an error sending your message: You can't send a direct message without a user!.""}]","I was trying to send a tweet where the first word happened to be ""DM"", and found that the following code:

```python
api.update_status(status=""dm"")
```

results in the following error:

```
Traceback (most recent call last):
  File ""dm_test.py"", line 19, in <module>
    main()
  File ""dm_test.py"", line 16, in main
    api.update_status(status=""dm"")
  File ""/usr/local/lib/python3.5/dist-packages/tweepy/api.py"", line 194, in update_status
    )(post_data=post_data, *args, **kwargs)
  File ""/usr/local/lib/python3.5/dist-packages/tweepy/binder.py"", line 245, in _call
    return method.execute()
  File ""/usr/local/lib/python3.5/dist-packages/tweepy/binder.py"", line 229, in execute
    raise TweepError(error_msg, resp, api_code=api_error_code)
tweepy.error.TweepError: [{'code': 151, 'message': ""There was an error sending your message: You can't send a direct message without a user!.""}]
```

On further inspection,

```python
api.update_status(status=""dm iandioch hi"")
```
results in my account receiving a direct message ""hi"" from this account.

This may be intended behaviour (although with strange intentions?). If so, I don't know how to go about sending a status with the first word being ""dm"", and [the docs](http://tweepy.readthedocs.io/en/v3.5.0/api.html#API.update_status) do not mention anything about this behaviour. What's going on?

Running python 3.5.2, and pip tells me I have `tweepy (3.5.0)` installed."
872,AttributeError: 'API' object has no attribute 'friend_ids',2017-03-31T08:02:00Z,,,,,"Using v3.5.0
http://docs.tweepy.org/en/v3.5.0/api.html#API.friends_ids

"
871,'rate_limit_status' Not updated anymore for  'followers_ids',2017-03-30T12:44:44Z,2017-04-03T08:33:22Z,,,,"Hi,

There seems to be a recent issue on the update of rate_limits. The bellow code worked well for weeks, but since yesterday, the last line keeps printing '15', meaning that the rate limit doesn't update. However, after 15 queries, twitter API returns the error 'rate_limit exceeded', but the  api.rate_limit_status()['resources']['followers']['/followers/ids']['remaining'] stays at '15'. Any idea what might cause that? Is it on Twitter side, or Tweepy side?

```
api = tweepy.API(auth)

for user in user_list:
    def limit_handled(cursor):
        while True:
                try:
                    yield cursor.next()
                except BaseException as e:
                    print('failed_on_CURSOR_NEXT', str(e))

     data = api.rate_limit_status()
     user_followers_remaining = data['resources']['followers']['/followers/ids']['remaining']

    for follower in limit_handled(tweepy.Cursor(api.followers_ids, id = id_i).pages()):
        for fll in follower:
           print(fll)
    print(str(user_followers_remaining))
```
            

Thank you."
870,Prevent .strip() from being called on None,2017-03-30T05:01:40Z,2017-03-30T10:37:34Z,,,,Tweepy streaming has crashed a few times when buf.read_line() returns None and .strip() is subsequently called on it. This change moves the .strip() call to after the return value of read_line() is confirmed to exist.
869,AttributeError when streaming ,2017-03-29T04:14:51Z,,,AttributeError,"AttributeError: 'NoneType' object has no attribute 'strip'","I ran a stream for awhile and it stopped working after a couple days due to the following error:

 File ""tstreamer.py"", line 109, in <module>
    myStream.userstream(""with=following"")
  File ""/mnt/d5ddf659-feb7-4daf-95c6-09797c84aa98/venvs/python2ds/lib/python2.7/site-packages/tweepy/streaming.py"", line 394, in userstream
    self._start(async)
  File ""/mnt/d5ddf659-feb7-4daf-95c6-09797c84aa98/venvs/python2ds/lib/python2.7/site-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""/mnt/d5ddf659-feb7-4daf-95c6-09797c84aa98/venvs/python2ds/lib/python2.7/site-packages/tweepy/streaming.py"", line 294, in _run
    raise exception
AttributeError: 'NoneType' object has no attribute 'strip'
"
868,Issue in using tweepy stream API,2017-03-27T17:01:09Z,,,,,"I am getting the error ""cannot use a string pattern on a bytes-like object"" on the line twitterStream.filter(track=['#python']).

When I use utf-8 encoding, I get the error: ""cannot use a string pattern on a bytes-like object""

My tweepy package is: tweepy 3.5.0   py36_0    conda-forge

I am using it with Anaconda Pythin version 3.6.0

The tweepy.API.search(search_term) API works fine for me and returns 15 tweets.

I searched on the net and it seems I am using the API correctly. Can you suggest how I can resolve this issue?

Regards,

Pankaj"
867,How to unretweet?,2017-03-24T06:14:02Z,,,,,
866,fixed an error with filter_level,2017-03-21T07:05:41Z,2017-03-21T07:34:29Z,,AttributeError,"AttributeError: 'list' object has no attribute 'encode'","This belongs to issue #865
Setting filter_level for Streaming API as below gives an error:
AttributeError: 'list' object has no attribute 'encode'

Fixed to:
self.body['filter_level'] = u','.join(filter_level).encode(encoding)

and tested with Python version: 3.5"
865,set 'filter_level' for Streaming API has an error,2017-03-21T06:45:50Z,2017-03-21T07:33:54Z,,AttributeError,"AttributeError: 'list' object has no attribute 'encode'","Set *filter_level* for Streaming API as below gives an error:
```python
my_stream.filter(follow= follow_users,filter_level=['medium'],async=True)
```
Error says:
```bash
AttributeError: 'list' object has no attribute 'encode'
```
Python version: 3.5
Tweepy version: 3.6 (It also happens with 3.5 as well)"
864,what type of status.place,2017-03-21T02:59:44Z,,,,,"```
#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import logging
import tweepy
from tweepy import Stream
from tweepy import OAuthHandler
from tweepy.models import Status
from tweepy.streaming import StreamListener
import config
import json
import time

Coords = dict()
Place = dict()
PlaceCoords = dict()
XY = []


class MyStreamListener(StreamListener):

    # def on_data(self, raw_data):
    #     try:
    #         if 'in_reply_to_status_id' in raw_data:
    #             data = json.loads(raw_data)
    #             status = Status.parse(self.api, data)
    #             num = add(1)
    #             print(""No.%s: "" % str(num) + status.text)
    #         else:
    #             logging.error(""Unknown message type: "" + str(raw_data))
    #     except BaseException as e:
    #         print(""Error on_data: %s"" % str(e))
    #         time.sleep(5)

    def on_status(self, status):
        try:
            Coords.update(status.coordinates)
            XY = (Coords.get('coordinates'))
            print(""X: "", XY[0])
            print(""Y: "", XY[1])
        except:
            Place.update(json.loads(status.place))
            PlaceCoords.update(Place['bounding_box'])
            Box = PlaceCoords['coordinates'][0]
            XY = [(Box[0][0] + Box[2][0])/2, (Box[0][1] + Box[2][1])/2]
            print(""X: "", XY[0])
            print(""Y: "", XY[1])

    def on_error(self, status_code):
        if status_code == 420:
            # returning False in on_data disconnects the stream
            return False


def add(n, total=[]):
    m = 0
    if total:
        m = total[-1]
    total.append(m + n)
    return total[-1]


if __name__ == '__main__':
    auth = OAuthHandler(config.consumer_key, config.consumer_secret)
    auth.set_access_token(config.access_token, config.access_secret)
    api = tweepy.API(auth)

    twitter_stream = Stream(auth, MyStreamListener())
    twitter_stream.filter(track=[""trump""])

```

the complier reported that""TypeError: the JSON object must be str, not 'NoneType'"" on Place.update(json.loads(status.place))

I read the source code of tweepy but i cannot find the type of obj in class Places
Can you help me?"
863,is status obj equal to tweets obj in twitter?,2017-03-20T14:04:03Z,,,,,
862,removed  exist_friendship method,2017-03-19T14:34:55Z,2017-03-19T14:58:52Z,,,,"v3.5.0 has no exist_friendship method.
"
861,"401 respone , from twitter api stream , using python ",2017-03-17T18:44:09Z,,,,,"hey guys please help me , suddenly when am using my code to retrieve streaming tweets , using python and of course tweepy , 
i got gust 401 , 
every thing was working fine in windows 7 , but i installed a Linux dis , with all the necessary tools , and when ever i try to run the code i got this error , please can some one help me 

> note : i tried to change the  4keys , still same problem , my data and time are up to date , i used the code in both python 2 and 3 still 



thanks guys in advance "
860,Callback on rate limit,2017-03-15T17:55:55Z,,,,,"Hi there,

I think it would be nice if when I hit the rate limit, I would get a function called instead of having just the choice between a sleep or an exception. This would allow me to perform other twitter API calls while I wait for the rate limited calls to replenish.

I can, of course, write it myself by handling the exception, looking at the headers of the last response and do something for the given period of time. But it would be much more convenient if tweepy did it.

What do you think about it?

Best regards,
Celelibi"
859,how to Share a Tweet through Direct Messages?,2017-03-13T15:56:48Z,,,,,how to Share a Tweet through Direct Messages?
858,rpp no longer valid parameter,2017-03-11T04:47:53Z,,,,,"For the `api.search` method, the `rpp` parameter has been replaced by `count`

![image](https://cloud.githubusercontent.com/assets/5855843/23820647/71b0610c-05eb-11e7-8d68-5816c5722391.png)

See the GET search/tweets reference on the Twitter docs:
https://dev.twitter.com/rest/reference/get/search/tweets

![image](https://cloud.githubusercontent.com/assets/5855843/23820664/f9d91506-05eb-11e7-923d-da549fa8f94e.png)
"
857,Need Documentation for Application-only authentication,2017-03-11T04:31:25Z,,,,,I found apis for Application-only authentication but there is no explanation about it. It will be helpful to add some simple explanation about **AppAuthHandler()** in Authentication Tutorial. 
856,Domain name has expired,2017-03-07T01:13:30Z,2017-03-10T12:34:09Z,,,,"tweepy.org appears to have expired. 


<img width=""1440"" alt=""screen shot 2017-03-06 at 8 12 03 pm"" src=""https://cloud.githubusercontent.com/assets/18016734/23637367/4e790e9a-02a9-11e7-8d98-a979e99d385b.png"">
"
855,`streamListener.filter(follow=)` expects `[str]`,2017-03-05T08:23:43Z,2017-03-05T17:26:38Z,,,,Example shows the list of parameters as `int`s; they should be `str`s.
854,How do I get latest direct messages?,2017-03-05T03:07:15Z,,,,,"I'm building an application that requires access to direct messages. My application has the necessary permissions to access dm's. There will always be only a single dm in the inbox but I do not know what the ID of that message will be (at least initially).

I've tried this code:

direct_messages = api.direct_messages(0,1,5,True)
print direct_messages

But it's returning empty even though I know that there is indeed a direct message sitting there waiting. How do I handle this? Is there a way to grab a dm when you don't know its id? 
"
853,Don't include all the character of a Tweet ,2017-03-03T16:03:08Z,2017-06-03T17:28:01Z,,,,"Hello,

I don't understand why in some tweet, I don't get the full tweet.
I got ""…"" in the end of the text field of a tweet.

Someone can help me ? 

Thanks"
852,examples/streaming.py hangs when executed,2017-03-01T17:53:22Z,2017-03-01T18:04:00Z,,,,"I am trying to execute this example program but it hangs when executed. The problem is in the last line: `stream.filter(track=['basketball'])`.
It manages to show some results on the console but then the program won't respond anymore and I have to shut it down.
Am I missing something? I am new to this library.
Regards
"
851,"""KeyError: 'status'"" when sending direct messages",2017-02-27T09:25:27Z,,,,,"Encountered repeatedly this error in tweepy/streaming.py/StreamListener, in the on_data() method`. (using tweepy==3.4.0)
Steps:
- have a stream listener running on the account which will make the tweets
- when the account posts a tweet or sends a dm, the on_data() method will be called with a parameter in the following format (this is for a tweet):
`{u'delete': {u'status': {u'user_id_str': u'123456', u'user_id': 123456, u'id': 9876554321, u'id_str': u'9876554321'}, u'timestamp_ms': u'1488186128661'}}`
In case of the `KeyError: 'status'` error, the call is for sending dms and the data passed as parameter will have the format:
`{u'delete': {u'direct_message': {u'user_id': 123456, u'id': 9876554321, u'id_str': u'9876554321'}}}`
"
850,add method for listing IDs of retweeters,2017-02-27T01:59:00Z,,,,,"I found a method in the Twitter API that isn't available in Tweepy yet, so I added an initial version of support for it"
849,Fills in testretweet() method,2017-02-23T17:19:13Z,,,,,"Tried to pull in the most recent tweet from the @twitter account, and then tries to retweet the tweet. If it fails, it skips the test. 

I understand that this isn't the requested *truly random* tweet, but in order to do that, you would need to test random 64-bit numbers until one of them was a valid tweet, then try to retweet it.

I wish I could find a legitimate tweet without using an outside method, but I don't think it's possible. I think this is a reasonably valid unit test."
848,Argument names in documentation don't match for API.statuses_lookup,2017-02-21T20:13:40Z,2017-02-21T22:14:15Z,,,,"in API.statuses_lookup the arguments `id`, and `map` have trailing underscores. Also brought up in #686"
847,More documentation,2017-02-21T20:04:04Z,,,,,"Your documentation doesn't do a good job of explaining what is contained by each object type, both methods and variables. In particular, the `Status` object is something I can't find reference to anywhere. "
846,Replying to status doesn't work,2017-02-20T20:36:44Z,2017-02-21T00:24:19Z,,,,"I wrote a twitter bot, and am trying to reply to a user who has tweeted with a certain hashtag. However, using the `update_status()` method with tweet id parameter just makes an original tweet, not a reply. 

Comment:
`api` is my `tweeps.api` object, and I have verified is properly authenticated (and works for other methods). `tweet

Code:
```
for tweet in tweepy.Cursor(api.search, q='#NASARMC').items(30):
	try:
		print('\nTweet with hashtag by: @' + tweet.user.screen_name)
		if not tweet.retweeted:
			tweet.retweet()
			print('Retweeted the tweet')
		else:
			print('Tweet already retweeted')
		if not tweet.favorited:
			tweet.favorite()
			print('Favorited the tweet')
		else:
			print('Tweet already favorited')
                # Reply to the tweet in question
		api.update_status(""I see you're tweeting about NASA's RMC. Are you following @UNDRAPTOR yet?\nI'm a python."",tweet.id)
		print('Replied to the account')
		time.sleep(5)
	except tweepy.TweepError as e:
		print(e.reason)
	except StopIteration:
		break
```"
845,"Tweepy, python on windows",2017-02-14T19:32:01Z,2017-07-25T13:44:44Z,,TweepError,"TweepError: Failed to send request: (""bad handshake: Error([('SSL routines', 'ssl3_get_server_certificate', 'certificate verify failed')],)"",)","Trying to use tweepy to get info from twitter but keep getting 
TweepError: Failed to send request: (""bad handshake: Error([('SSL routines', 'ssl3_get_server_certificate', 'certificate verify failed')],)"",)

It's python 27 on windows --


	import tweepy
	from tweepy.streaming import StreamListener
	from tweepy import OAuthHandler
	from tweepy import Stream

	#Variables that contains the user credentials to access Twitter API 
	access_token = ""insert access token""
	access_token_secret = ""insert access_token_secret""
	consumer_key = ""insert consumer_key""
	consumer_secret = ""insert consumer_secret""

	class StdOutListener(StreamListener):

		def on_data(self, data):
			print data
			return True

		def on_error(self, status):
			print status

	if __name__ == '__main__':

		#This handles Twitter authetification and the connection to Twitter Streaming API
		l = StdOutListener()
		auth = OAuthHandler(consumer_key, consumer_secret)
		auth.set_access_token(access_token, access_token_secret)
		stream = Stream(auth, l)

		#http://gettwitterid.com/
		api = tweepy.API(auth)
		test = api.lookup_users(user_ids=['insertuserid'])
		for user in test:
			print user.screen_name
			print user.name

    "
844,Error in Consumer Key or Consumer Secret,2017-02-10T20:24:30Z,2017-02-19T17:05:01Z,,,,"Code:

```
import tweepy

consumer_key=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
consumer_secret=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
access_token=xxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
access_token_secret=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

auth=tweepy.OAuthHandler(consumer_key,consumer_secret)

auth.set_access_token(access_token, access_token_secret)
client=tweepy.API(auth)
client.update_status(""Its a new day"")
```

I first got the error name xxxxxx not defined, referring to the consumer_key
I regenerated the consumer key and tried.
Then I got the error invalid syntax (referring to the consumer key).
I regenerated them again.
And the first error came back.
How do i get this to work?

 "
843,404 streaming api,2017-02-09T16:01:22Z,,,,,"from tweepy import OAuthHandler
from tweepy import Stream
from tweepy.streaming import StreamListener

class MyListener(StreamListener):

    def on_data(self,data):
        try:
            with open('python.json','a') as f:
                f.write(data)
                return True
        except BaseException as e:
            print(""Error on_data: %s"" % str(e))
        return True

    def on_error(self,status):
        print(status)
        return True


if __name__ == ""__main__"":   

    auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_token_key, access_token_secret)
    api = tweepy.API(auth)

    twitter_stream=Stream(auth,MyListener())
    twitter_stream.filter(track=['video'])

![image](https://cloud.githubusercontent.com/assets/23293170/22791238/a75f5cce-ef23-11e6-8d12-31a35a7c52f3.png)
a simple example about streaming api ,but always have 404 ,before running well ,i don't know why"
842,Deprecated six library being called?,2017-02-06T03:57:17Z,2017-02-06T04:16:38Z,,,,"When pip installing tweepy, the process errors out at installing six saying: `Found existing installation six 1.4.1
 DEPRECATION: Uninstalling a distutils installed project (six) has been deprecated and will be removed in a future version. This is due to the fact that uninstalling a distutils project will only partially uninstall the project.
`
After this error, tweepy cannot pip install
"
841,Way too many outside libraries used,2017-02-05T22:43:56Z,2017-05-04T04:01:24Z,,,,"When you install the tweepy library, so discover that tweepy uses 4 other libraries that it doesn't package in. You end up spending 4 hours adding in those libraries and trying to troubleshoot why they won't run. It makes this library completely useless."
840,tweet_mode=extended for statuses_lookup,2017-02-03T20:46:44Z,,,,,"I used ```statuses_lookup``` to get specific tweets. 
But with [a recent change](https://dev.twitter.com/overview/api/upcoming-changes-to-tweets) of Twitter to have also ```extended tweets``` does the REST API only return a compacted version for these tweets.

The Twitter API now supports a parameter ```tweet_mode=extended``` to return not only the compacted version but also the extended one.

#785 does reference that it is currently not possible to use this parameter with ```statuses_lookup```

What needs to be changed to add ```tweet_mode=extended``` support to ```statuses_lookup```?"
839,Fix allowed_param in docstrings in api.py,2017-02-03T14:29:20Z,2017-02-03T19:58:45Z,,,,Some parameters were missing in the docstrings.
838,Can someone fix api.rst in the docs directory?,2017-01-30T20:00:25Z,,,,,"I do not know `rst` file syntax, but I think that there's something wrong with either how `api.rst` was written or maybe there's some weird incompatibility with how github renders `rst` files. In any case, can someone please fix this one and any other broken files in the `docs` directory? There's a whole bunch of information that isn't rendering properly"
837,"Implement ""Event"" model",2017-01-25T23:50:19Z,,,,,"See:
https://dev.twitter.com/streaming/overview/messages-types#events-event

It can be useful when handle `follow` event on `StreamListener` like this:
```python
def on_event(self, event):
    if event.event == 'follow' and event.source != self.api.me():
        print('{} has followed me'.format(event.source.screen_name)
```"
836,mentions_timeline() is not on the API reference doc page,2017-01-21T04:35:52Z,,,,,"I recently came across a script that a redditor made on /r/learnprogramming, and he has used the mentions_timeline() method. However, I couldn't find anything on the docs here: http://docs.tweepy.org/en/v3.5.0/api.html

So instead I did a google search and I got this.
https://dev.twitter.com/rest/reference/get/statuses/mentions_timeline

Would it be feasible to migrate some of this information to the tweepy docs? Thank you!"
834,Cleanup of issues,2017-01-09T15:03:43Z,,,,,"No offence, but if the current maintainers don't have time to clean up all the issues, other users should be appointed to do so. More of half the recent issues are user errors that should not be marked as ""open issues in tweepy"". I volunteer to clean up and help if necessary."
833,"friendship_exists still in Tweepy docs, but not in api",2017-01-05T00:36:49Z,,,,,"In the official online API documentation, the method `exists_friendship` is still listed: http://docs.tweepy.org/en/v3.5.0/api.html#API.exists_friendship

It is unavailable in the API, however. The supposed new way of finding out if you are followed by a user is using `show_friendship`, but usage of that method is pretty vague. No info on the Friendship object that is returned.

Is the latest generated API documentation published online?"
832,Use built in json library,2017-01-03T02:47:07Z,,,,,"Python has had a built-in json library since version 2.6, released in 2008. Tweepy's tests no longer include Python 2.5, so they're no reason to use simplejson.

This also removes a complicated import path that made every instance of Tweepy attempt to import a module that's not in requirements.

This commit also removes the json library as an attribute of the `Parser` object. Don't know what it was doing there, besides being unpythonic."
831,Add Python 3.6 to test suite,2017-01-03T02:32:24Z,2017-01-03T03:52:11Z,,,,I'm happy to note that the Tweepy test suite runs successfully on [Python 3.6](https://docs.python.org/3.6/whatsnew/3.6.html).
830,Allow int or str IDs as streaming arguments,2017-01-03T02:07:26Z,,,,,Fix for #829. The str.join method raises a `ValueError` for `int`s.
829,StreamListener.filter(): `follow` argument doesn't accept integers for user ids,2017-01-02T18:08:55Z,,,,,"This is for tweepy 3.5.0, Python 3.5.2

In regards to what's shown in this example: https://github.com/tweepy/tweepy/pull/827

      myStream.filter(follow=[2211149702])

That doesn't work in tweepy 3.5. Instead, you get this error message:

     TypeError: sequence item 0: expected str instance, int found

The problematic line is in tweepy/streaming.py:

              428         if follow:
       --> 429             self.body['follow'] = u','.join(follow).encode(encoding)


Expected behavior: the `follow` argument can handle integers or strings; in the former case, the `int` is stringified. 

"
828,Followers,2016-12-29T17:08:35Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: [{'code': 160, 'message': ""You've already requested to follow RonaldoArias_65.""}]","I'm trying to use the snippet
`
for follower in tweepy.Cursor(api.followers).items():
    follower.follow()
`
When I run the file .py  get this

Traceback (most recent call last):
  File ""tw.py"", line 54, in <module>
    follower.follow()
  File ""/usr/lib/python3.5/site-packages/tweepy/models.py"", line 175, in follow
    self._api.create_friendship(user_id=self.id)
  File ""/usr/lib/python3.5/site-packages/tweepy/binder.py"", line 245, in _call
    return method.execute()
  File ""/usr/lib/python3.5/site-packages/tweepy/binder.py"", line 229, in execute
    raise TweepError(error_msg, resp, api_code=api_error_code)
tweepy.error.TweepError: [{'code': 160, 'message': ""You've already requested to follow RonaldoArias_65.""}]

Any idea about how to solve this ? 
"
827,add an example of streaming from a specific user,2016-12-25T22:39:11Z,2016-12-26T16:32:32Z,,,,
826,receiving NameError: global name 'sys' is not defined error within 20~hours of streaming,2016-12-21T19:17:07Z,,,NameError,"NameError: global name 'sys' is not defined","Hey everyone,
I'm running tweepy 3.6.0 on python 2.7.9
I keep on getting this following error after a few hours of perfect traffic.

I usually get the message after 20~ hours of streaming.


Traceback (most recent call last):
  File ""C:/Users/*****/twitter_research/TwitterProject/main.py"", line 75, in <module>
    twitter_stream.filter(track=keywords)
  File ""C:\Python27\lib\site-packages\tweepy\streaming.py"", line 462, in filter
    self._start(async)
  File ""C:\Python27\lib\site-packages\tweepy\streaming.py"", line 376, in _start
    self._run()
  File ""C:\Python27\lib\site-packages\tweepy\streaming.py"", line 295, in _run
    exc_info = sys.exc_info()
NameError: global name 'sys' is not defined


Anyone else experienced the same error?
Thanks ! 👍 


"
825,"How Can I resolve this, I followed the directions of prior issues but it hasn't worked for me. If I have to rollback to 3.2.0 what's the best way?",2016-12-21T03:16:22Z,,,,,"```
Traceback (most recent call last):
  File ""/Users/damonredding/Downloads/Not Mining my own business/twitter_sentiment.py"", line 72, in <module>
    stream.filter(track=['congress'])
  File ""/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tweepy/streaming.py"", line 445, in filter
    self._start(async)
  File ""/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tweepy/streaming.py"", line 294, in _run
    raise exception
  File ""/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tweepy/streaming.py"", line 263, in _run
    self._read_loop(resp)
  File ""/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tweepy/streaming.py"", line 324, in _read_loop
    self._data(next_status_obj)
  File ""/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tweepy/streaming.py"", line 297, in _data
    if self.listener.on_data(data) is False:
```"
824,"Create a file called twitter_streaming.py, and copy the code below into it. Make sure to enter your credentials obtained in the Step 1 above into ACCESS_TOKEN, ACCESS_SECRET, CONSUMER_KEY, and CONSUMER_SECRET.",2016-12-20T06:15:56Z,,,IndentationError,IndentationError: unindent does not match any outer indentation level,"Json.dump() not working

C:\Users\BARAN\Desktop\tweepy-master>python twitter_trump.py
  File ""twitter_trump.py"", line 35
    print json.dumps(tweet)
                            ^
IndentationError: unindent does not match any outer indentation level"
823,Does tweepy support control stream for site stream?,2016-12-18T19:57:42Z,,,,,Does tweepy support [control stream for site stream](https://dev.twitter.com/streaming/sitestreams/controlstreams)? Is it in your roadmap?
822,Update in the documentation about 'lists_all',2016-12-18T13:37:01Z,,,,,Fixes #821 
821,Docs state 'list' as a method but in the source code the correct method is 'list_all',2016-12-14T02:44:34Z,,,,,"The docs should be updated to reflect that and that would be it 
😁"
820,Getting the accounts with the most friend followers (followers that I follow),2016-12-12T23:42:11Z,2017-01-05T06:56:10Z,,,,"Hello, I'd like to get a list of the accounts that have the most followers I know. For example, if Barack Obama was followed by 100% of the people I follow, he'd rank first in such list.
How can I do that with tweepy?"
819,gzip encoding support for streaming in 3.5.0,2016-12-06T05:39:10Z,2016-12-06T06:26:05Z,,,,"I've noticed gzip streaming supported in #233 , but is it supported in 3.5.0? I can't find any related parameters in documents. 

Passing `gzip=True` or `compression=True` to Stream() does no help.

Passing `headers={'Accept-Encoding':'deflate, gzip','User-Agent':'tweepy'}` to Stream() results `UnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte` error.

"
818,added and implemented retweet_text() and updated requirements.txt,2016-12-04T22:35:50Z,,,,,"see docstring for information about what it does

added mechanicalsoup to requirements.txt because retweet_text uses mechanicalsoup

some context for why I made this:
was working on a twitter bot at a hackathon and we wanted to get retweet text of a retweet, the api at that point had the capability to get the url of the retweet but we wanted to get the text of the original tweet that was being retweeted."
817,TweepError('Failed to send request: %s' % e),2016-12-03T05:51:27Z,,,tweepy.error.TweepError,tweepy.error.TweepError: Failed to send request: [Errno -3] Temporary failure in name resolution,"Hii``  ..i found this error in my code.plz help me to fix this
code:
`import` tweepy

consumer_key = ""xyz""
consumer_secret = ""xyz""

access_token = ""xyz""
access_token_secret = ""xyz""

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

api = tweepy.API(auth)

public_tweets = api.home_timeline()
for tweet in public_tweets:
    print `tweet.text`
error details:
   raise TweepError('Failed to send request: %s' % e)
tweepy.error.TweepError: Failed to send request: [Errno -3] Temporary failure in name resolution"
816,Properly handle data coming back if map_=True in statuses_lookup method,2016-11-27T14:57:23Z,,,,,"Fixes https://github.com/tweepy/tweepy/issues/598

I was going to write a test case for it, but I couldn't get the tests to work on my local machine and didn't see any documentation for getting tests up and running."
815,RateLimitError doesn't have an api_code member variable,2016-11-23T14:33:18Z,,,,,"Because it's omitted here:

https://github.com/tweepy/tweepy/blob/a1e4d8b660473554a9a0b8ba647ce9f773cacec2/tweepy/binder.py#L232

But it says here that it's supposed to have the same properties as a base exception:

https://github.com/tweepy/tweepy/blob/cd46550b3ef068857f5de9c37bbdd0a72acb7462/tweepy/error.py#L32-L33"
814,on_status raises ValueError: No JSON object could be decoded,2016-11-23T00:15:38Z,2016-11-23T11:04:22Z,,,,"Simply overriding on_status as follows raises ValueError: No JSON object could be decoded

class StreamListener(tweepy.StreamListener):
    def on_status(self, status):
        print(status.text)

auth = tweepy.OAuthHandler(settings.TWITTER_APP_KEY, settings.TWITTER_APP_SECRET)
auth.set_access_token(settings.TWITTER_KEY, settings.TWITTER_SECRET)
api = tweepy.API(auth)

stream_listener = StreamListener()
stream = tweepy.Stream(auth=api.auth, listener=stream_listener)
stream.filter(track='python')"
813,TweepError,2016-11-22T03:53:23Z,,,,,"hello:
       i want to catch error code but get some error.

code:
try:
     do something
except tweepy.TweepError as err:
     print(err)

output:
[{'code': 88, 'message': 'Rate limit exceeded'}]

i want to get 88, so i use err[0]['code']  but error
or try to err.reason[0]['code'] bur TypeError: string indices must be integers"
812,"Streaming errror: ""TypeError: expected string or buffer""",2016-11-21T17:15:13Z,2016-12-14T22:11:49Z,,"`TypeError, TypeError","`TypeError: expected string or buffer`, TypeError: expected string or buffer","Hello!

Since a month or so twitter streaming with tweepy regularly breaks after 5 – 10 minutes and throws the following error:

`TypeError: expected string or buffer`

I'm tracking about 100 keywords. I also tried to wrap every keyword in quotes (as suggested in #748), but it doesn't work either.

Output:

```
Traceback (most recent call last):
  File ""/home/gregor/projects/livecorpus/stream.py"", line 473, in <module>
    twitterStream.filter(track=[u'""{}""'.format(kw) for kw in KEYWORDS], languages=['en'])
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 445, in filter
    self._start(async)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 294, in _run
    raise exception
TypeError: expected string or buffer
```

Versions:
requests 2.12.1
tweepy 3.5.0"
811,"bind_api: close the session at the end to avoid ""Too many open files"" (issue#810)",2016-11-20T15:53:36Z,,,,,"This is an attempt to fix the `Too many open files` error (errno=`EMFILE`=24),
reported in issue#810"
810,application raises Too many open files (errno=24),2016-11-18T18:35:38Z,,,,,"`lsof` shows a gazillion open sockets:
```
python  17055  sds  286u  IPv4 272626       0t0     TCP datasci-1:48948->104.244.42.194:https (ESTABLISHED)
python  17055  sds  287u  IPv4 272361       0t0     TCP datasci-1:45474->104.244.42.130:https (ESTABLISHED)
python  17055  sds  288u  IPv4 272373       0t0     TCP datasci-1:48956->104.244.42.194:https (ESTABLISHED)
python  17055  sds  289u  IPv4 272369       0t0     TCP datasci-1:44114->104.244.42.2:https (ESTABLISHED)
python  17055  sds  290u  IPv4 272377       0t0     TCP datasci-1:45482->104.244.42.130:https (ESTABLISHED)
python  17055  sds  291u  IPv4 272381       0t0     TCP datasci-1:52306->104.244.42.66:https (ESTABLISHED)
python  17055  sds  292u  IPv4 273409       0t0     TCP datasci-1:44122->104.244.42.2:https (ESTABLISHED)
python  17055  sds  293u  IPv4 273413       0t0     TCP datasci-1:48964->104.244.42.194:https (ESTABLISHED)
python  17055  sds  294u  IPv4 273417       0t0     TCP datasci-1:45490->104.244.42.130:https (ESTABLISHED)
python  17055  sds  295u  IPv4 273421       0t0     TCP datasci-1:52314->104.244.42.66:https (ESTABLISHED)
python  17055  sds  296u  IPv4 272630       0t0     TCP datasci-1:44130->104.244.42.2:https (ESTABLISHED)
python  17055  sds  297u  IPv4 272634       0t0     TCP datasci-1:48972->104.244.42.194:https (ESTABLISHED)
python  17055  sds  298u  IPv4 272638       0t0     TCP datasci-1:45498->104.244.42.130:https (ESTABLISHED)
python  17055  sds  299u  IPv4 272642       0t0     TCP datasci-1:52322->104.244.42.66:https (ESTABLISHED)
python  17055  sds  300u  IPv4 272646       0t0     TCP datasci-1:44138->104.244.42.2:https (ESTABLISHED)
python  17055  sds  301u  IPv4 272650       0t0     TCP datasci-1:48980->104.244.42.194:https (ESTABLISHED)
python  17055  sds  302u  IPv4 272654       0t0     TCP datasci-1:45506->104.244.42.130:https (ESTABLISHED)
python  17055  sds  303u  IPv4 272658       0t0     TCP datasci-1:52330->104.244.42.66:https (ESTABLISHED)
python  17055  sds  304u  IPv4 272662       0t0     TCP datasci-1:44146->104.244.42.2:https (ESTABLISHED)
python  17055  sds  305u  IPv4 272665       0t0     TCP datasci-1:48988->104.244.42.194:https (ESTABLISHED)
```
apparently, tweepy does not close its sockets?"
809,Tracking reteets with streaming api,2016-11-10T15:47:25Z,,,,,"Hello, i have a problem with the tweets on a stream. I'm searching for the retweets and from the documentation, if a tweet retweet shold have the attribute 'retweeted_status'. Using the search api the attribute appears so I can extrapolate the asociated data, but when i use the stream api the attribute never appears. I'm doing something wrong, or it is a normal thing?"
808,Feature Request: Multiple auth support,2016-11-09T20:56:21Z,,,,,"I'm currently using this old fork https://github.com/nirg/tweepy http://www.nirg.net/using-tweepy.html to support multiple auth, but some things are broken like ""since"" parameter on api.search, and was hoping the important features here could make it into the main branch."
807,NameError: name 'OAuthHandler' is not defined,2016-11-06T17:12:09Z,2016-11-06T20:19:42Z,,,,"hi i am getting this error . pls help 

```
from tweepy.streaming import StreamListener
from tweepy import OAuthHandler
from tweepy import Stream
class StdOutListener(StreamListener):

    def on_data(self, data):
        print data
        return True

    def on_error(self, status):
        print status


if __name__ == '__main__':

    #This handles Twitter authetification and the connection to Twitter Streaming API
    l = StdOutListener()
    auth = OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_token, access_token_secret)
    stream = Stream(auth, l)

    #This line filter Twitter Streams to capture data by the keywords: 'python', 'javascript', 'ruby'
    stream.filter(track=['python', 'javascript', 'ruby'])
```"
806,"remove ""no longer maintained"" note",2016-10-28T18:01:32Z,2016-11-04T23:09:26Z,,,,"Fixes #803, relevant to #792
"
805,Attribute error on simple on_data() print,2016-10-25T15:04:22Z,2016-11-05T23:22:22Z,,Error,Error: Attribute not found.,"I've started received Attribute not found errors during a simple print(data) in my on_data block. I've stripped almost everything out of there... thoughts?
## Monitoring tweets...

Error: Attribute not found.
- cause:      None
- class:      <class 'AttributeError'>
- context:    None
##  - traceback:  <traceback object at 0x7f390b15ecc8>

  File ""SMSListener.py"", line 271, in <module>
    twitter_listen('trump, hillary')
  File ""SMSListener.py"", line 164, in twitter_listen
    stream.filter(track=[keyword])
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 445, in filter
    self._start(async)
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 294, in _run
    raise exception
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 263, in _run
    self._read_loop(resp)
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 313, in _read_loop
    line = buf.read_line().strip()
"
804,AttributeError: 'NoneType' object has no attribute 'strip',2016-10-25T09:20:13Z,2016-10-25T12:39:44Z,,,,"Problem with streaming on attributes of stream.filter(track=['#python'])
"
803,"""No Longer Maintained"" Why? ",2016-10-24T20:21:00Z,2016-11-04T23:09:26Z,,,,"This seems as a surprise as this project is incredibly popular and depended upon by many people and organizations. Could the people who made this decision explain the basis of this decision?
"
802,Update streaming.py to resolve issue #698,2016-10-23T04:50:51Z,2016-11-05T23:15:55Z,,,,"In streaming.py at line# 313:
when buf.read_line() is called, it may return NoneType and when applying strip() it will generate AttribiteError. Hence to fix this placing the line into try-except block.
"
801,unicode encoding error? TwitterStream cannot handle special characters,2016-10-18T14:40:34Z,,,,,"Hi,

I am using tweepy to stream tweets. However, there seems to be an encoding issue with python 3.5:

if I use this generic code the output is not properly formatted: see for example `estabilizacion` is written as `estabilizaci\u00f3n`. Is this a bug of the API? Should I encode is somehow to utf8 or so?

``` json
{""geo"": null, ""is_quote_status"": false, ""retweet_count"": 0, ""text"": ""RT @mrtorsor: Verdadero reto de la toma de Mosul: fase de estabilizaci\u00f3n posterior. Una mala gesti\u00f3n puede agravar el caos en Irak https://\u2026"", ""coordinates"": null, ""in_reply_to_user_id"": null, ""truncated"": false, ""source"": ""<a 
[...]
}
```

``` python
import json

from twitter import Twitter, OAuth, TwitterHTTPError, TwitterStream

ACCESS_TOKEN = 'xxx'
ACCESS_SECRET = 'xxx'
CONSUMER_KEY = 'xxx'
CONSUMER_SECRET = 'xxx'

oauth = OAuth(ACCESS_TOKEN, ACCESS_SECRET, CONSUMER_KEY, CONSUMER_SECRET)

twitter_stream = TwitterStream(auth=oauth)

iterator = twitter_stream.statuses.sample()

tweet_count = 10
for tweet in iterator:
    tweet_count -= 1
    print(json.dumps(tweet))
    if tweet_count <= 0:
        break
```

Thank you very much for any suggestions!
"
800,How can i post video with tweepy?,2016-10-17T10:22:39Z,,,,,"Hello, i don't find video post in tweepy doc's, is it possible?
And if so, how can i upload video?
"
799,Update in the Documentation about 'oauth_token' ,2016-10-13T17:01:05Z,2016-11-06T00:16:29Z,,,,"Due to maybe old docs, #794  was occurring in `get_access_token( )`
"
798,Stream aborting because of ProtocolError,2016-10-12T21:04:50Z,,,requests.packages.urllib3.exceptions.ProtocolError,"requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))","I got this traceback:

```
Traceback (most recent call last):
  File ""/usr/lib/python2.7/runpy.py"", line 162, in _run_module_as_main
    ""__main__"", fname, loader, pkg_name)
  File ""/usr/lib/python2.7/runpy.py"", line 72, in _run_code
    exec code in run_globals
  File ""/home/remram/twitter_colormap_bot/twitter_colormap/__main__.py"", line 2, in <module>
    main()
  File ""/home/remram/twitter_colormap_bot/twitter_colormap/main.py"", line 81, in main
    get_twitter_statuses(handle_status_wrapper, track=['python', 'matplotlib', 'dataviz', 'heatmap'])
  File ""/home/remram/twitter_colormap_bot/twitter_colormap/twitter_stream.py"", line 45, in get_twitter_statuses
    stream.filter(**kwargs)
  File ""/home/remram/twitter_colormap_bot/venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 449, in filter
    self._start(async)
  File ""/home/remram/twitter_colormap_bot/venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 363, in _start
    self._run()
  File ""/home/remram/twitter_colormap_bot/venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 263, in _run
    self._read_loop(resp)
  File ""/home/remram/twitter_colormap_bot/venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 313, in _read_loop
    line = buf.read_line()
  File ""/home/remram/twitter_colormap_bot/venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 179, in read_line
    self._buffer += self._stream.read(self._chunk_size)
  File ""/home/remram/twitter_colormap_bot/venv/local/lib/python2.7/site-packages/requests/packages/urllib3/response.py"", line 320, in read
    flush_decoder = True
  File ""/usr/lib/python2.7/contextlib.py"", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File ""/home/remram/twitter_colormap_bot/venv/local/lib/python2.7/site-packages/requests/packages/urllib3/response.py"", line 246, in _error_catcher
    raise ProtocolError('Connection broken: %r' % e, e)
requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))
```

It seems that the exceptions caught in `Stream#_run` are not wide enough.
"
797,Fix fatal errors in streaming,2016-10-11T17:33:16Z,,,,,"Trying to fix several fatal errors, occurring when the connection breaks while reading. These errors were observed in two locations:
- buf.read_line() or buf.read_len() returns None when the connection is closed before completing the read. later  on, this output (None) was considered as a string and the program crashed as a side-effect (with AttributionError).
- httplib.IncompleteRead was caught in requests, and propagated through buf.read_line() or buf.read_len(). In this case, the retry mechanism didn't catch HTTP errors so it didn't try to reconnect as expected.

These problems were fixed as follows:
- buf.read_line() or buf.read_len() fails with httplib.IncompleteRead when the connection breaks in the middle.
- The retry mechanism treats httplib.HTTPError similarly to timeouts and disconnections errors, following [Twitter's reconnecting advice](https://dev.twitter.com/streaming/overview/connecting).
"
796,tweepy.error.TweepError,2016-10-09T15:32:02Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: Failed to send request: HTTPSConnectionPool(host='api.twitter.com', port=443):","tweepy.error.TweepError: Failed to send request: HTTPSConnectionPool(host='api.twitter.com', port=443):
Max retries exceeded with url: /1.1/users/show.json?id=twitter 
(Caused by NewConnectionError
('<requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x00000000031A8400>: 
Failed to establish a new connection: [Errno 10060] ',))
the code is
import tweepy
consumer_key=""""
consumer_secret=""""
access_token=""""
access_token_secret=""""
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

api = tweepy.API(auth)

user = api.get_user('twitter')
print user.screen_name
print user.followers_count
for friend in user.friends():
   print friend.screen_name
"
795,"Added Implementation of method:: API.friends_ids(id/screen_name/user_id[,cursor])",2016-10-07T18:25:02Z,2016-10-22T14:51:07Z,,,,"Added Implementation of method:: API.friends_ids(id/screen_name/user_id[,cursor])

Test cases and documentation of method already present in test_api.py & api.rst respectively.
"
794,"TweepError: string indices must be integers, not str",2016-10-06T18:18:51Z,,,"`TweepError, TweepError","`TweepError: string indices must be integers, not str`, TweepError: string indices must be integers, not str","Hey,
I'm getting this error 
`TweepError: string indices must be integers, not str`
in calling the function `auth.get_access_token()`

I can't figure out which integer it's asking for because i passed just the verifier i got from the twitter

```
 In [6]: auth.get_access_token('JgqGic5xlhlXgqrEVsLbXV0dzb5guVtU')
---------------------------------------------------------------------------
TweepError                                Traceback (most recent call last)
<ipython-input-6-a9ca46d99f99> in <module>()
----> 1 auth.get_access_token('JgqGic5xlhlXgqrEVsLbXV0dzb5guVtU')

/usr/local/lib/python2.7/dist-packages/tweepy/auth.pyc in get_access_token(self, verifier)
    105             return self.access_token, self.access_token_secret
    106         except Exception as e:
--> 107             raise TweepError(e)
    108 
    109     def get_xauth_access_token(self, username, password):

TweepError: string indices must be integers, not str

```
"
793,Unable to Install the Python Tweepy Module,2016-10-05T11:35:14Z,2016-10-05T16:01:21Z,,,,"I downloaded the python Tweepy module from here https://github.com/tweepy/tweepy.

I extracted the contents and named the folder 'Tweepy'. I opened up Command Prompt and ran the setup.py install. Several messages show. e.g. running install running bdist_egg etc.

However, I receive some error messages then; Download error on https://pypi.python.org/simple/six/: Tunnel connection failed: 407 authenticationrequired -- Some packages may not be found! Couldn't find index page for 'six' (maybe misspelled?) No local packages or download links found for six>=1.7.3

I wonder if the errors are possibly associated with proxy settings?
"
792,Do we need an extra set of hands?,2016-10-03T20:54:55Z,,,,,"The issues / pull requests seem to be growing and I love this library for various reasons (and am using it for a few of my own projects), so I'll put forth a push to allow a bit more progress by offering myself as an extra set of hands to maintain this project.

Get back to me when you can! @Aaron1011 @joshthecoder 

-- Alex
"
791,Tweepy does not handle 429 HTTP error (Too many Requests) - Service unavailable,2016-10-03T20:48:48Z,2016-11-05T23:29:21Z,,,,"Hello !

I am currently using Tweepy library (version 3.2.0 as the 3.6.0 does not working due to issue #576) , and I launched it since several days. However after a while, I received the following message between each tweet collected:

> HTTP Error 429: Too Many Requests

I then stopped it during 1 hour, and now I have between tweets the following messages:

> Service not available
> Service Timed out

I thought set as True the function `wait_on_rate_limit` while handle this kind of thing, or maybe it does not take account of 429 error ? I just requested about 10 terms in my filter, which returns around 1 tweet per 5-10 sec maximum, which seems to be a few.

How can I handle this kind of issue ? Is there a bug on it or something ? Or I reached the Twitter limit ? 

There is my piece of code btw:

```
streamer = tweepy.Stream(auth=api.auth, listener=StreamListener(), timeout=3000000000)
streamer.filter(None,terms)

class StreamListener(tweepy.StreamListener):
    status_wrapper = TextWrapper(width=60, initial_indent='    ', subsequent_indent='    ')

def on_status(self, status):
    print ('{} {} - {}'.format(status.author.screen_name, status.created_at,status.text))
    saveTweet(status)
def on_disconnect(self, notice):
    print (""Disconnect: {}"".format(notice))
    return

def on_warning(self, notice):
    print (""Warning: {}"".format(notice))
    return

def on_exception(self, exception):
    print (""Exception: "".format(exception))
    return
def on_error(self, status_code):
    if (status_code == 403):
         print(""Limit probably reached"")
    else:
         print(""Error occured > {}"".format(status_code))
    return False
```
"
790,TweepError,2016-10-03T11:59:04Z,2016-11-05T23:37:30Z,,TweepError,TweepError: Failed to send request: Missing dependencies for SOCKS support.,"I have anaconda3, python3.5 and tweepy3.3.0 installed on my computer.
Operating system- ubuntu 12.04.
Internet connection- proxy 172.16.24.2, port 3128.

Sir, this is the commands execution sequence, please help me in sorting out the problem.

```
TERMINAL WINDOW
$ cd anaconda3
~/anaconda3$ source bin/activate ~/anaconda3 # to activate anaconda3 as environment variable
(/home/ahsan/anaconda3) :~/anaconda3$ export TWITTER_CONSUMER_KEY=""my_consumer_key""
(/home/ahsan/anaconda3) :~/anaconda3$ export TWITTER_CONSUMER_SECRET=""my_consumer_secret""
(/home/ahsan/anaconda3) :~/anaconda3$ export TWITTER_ACCESS_TOKEN=""my_access_token""
(/home/ahsan/anaconda3) :~/anaconda3$ export TWITTER_ACCESS_SECRET=""my_access_secret""
(/home/ahsan/anaconda3) :~/anaconda3$ spyder

SPYDER
i) run twitter_client.py

ii) run below given code:

from tweepy import Cursor
from twitter_client import get_twitter_client
if __name__=='__main__':
    client=get_twitter_client()
    for status in Cursor(client.home_timeline).items(10):
        print(status.text)
```

Running this code results in-

Traceback (most recent call last):
File """", line 5, in
for status in Cursor(client.home_timeline).items(10):
File ""/home/ahsan/anaconda3/lib/python3.5/site-packages/tweepy/cursor.py"", line 49, in next
return self.next()
File ""/home/ahsan/anaconda3/lib/python3.5/site-packages/tweepy/cursor.py"", line 197, in next
self.current_page = self.page_iterator.next()
File ""/home/ahsan/anaconda3/lib/python3.5/site-packages/tweepy/cursor.py"", line 108, in next
data = self.method(max_id=self.max_id, parser=RawParser(), self.args, *self.kargs)
File ""/home/ahsan/anaconda3/lib/python3.5/site-packages/tweepy/binder.py"", line 239, in _call
return method.execute()
File ""/home/ahsan/anaconda3/lib/python3.5/site-packages/tweepy/binder.py"", line 189, in execute
raise TweepError('Failed to send request: %s' % e)
TweepError: Failed to send request: Missing dependencies for SOCKS support.

How it can be resolved?
"
789,Catastrophic Failure - Randomly,2016-09-30T22:54:10Z,2016-11-05T23:39:10Z,,TypeError,"TypeError: the JSON object must be str, not 'NoneType'","This issue occurs after running tweepy from anywhere between 1 minute - 24 hours, randomly.

```
Exception in thread Thread-1:
Traceback (most recent call last):
  File ""/usr/lib/python3.5/threading.py"", line 914, in _bootstrap_inner
    self.run()
  File ""/usr/lib/python3.5/threading.py"", line 862, in run
    self._target(*self._args, **self._kwargs)
  File ""/home/alex/.local/lib/python3.5/site-packages/tweepy/streaming.py"", line 294, in _run
    raise exception
  File ""/home/alex/.local/lib/python3.5/site-packages/tweepy/streaming.py"", line 263, in _run
    self._read_loop(resp)
  File ""/home/alex/.local/lib/python3.5/site-packages/tweepy/streaming.py"", line 324, in _read_loop
    self._data(next_status_obj)
  File ""/home/alex/.local/lib/python3.5/site-packages/tweepy/streaming.py"", line 297, in _data
    if self.listener.on_data(data) is False:
  File ""/home/alex/.local/lib/python3.5/site-packages/tweepy/streaming.py"", line 50, in on_data
    data = json.loads(raw_data)
  File ""/usr/lib/python3.5/json/__init__.py"", line 312, in loads
    s.__class__.__name__))
TypeError: the JSON object must be str, not 'NoneType'
```

My proposed solution is in the following Pull Request: https://github.com/tweepy/tweepy/pull/780
"
788,stream.filter just hangs,2016-09-30T00:03:15Z,,,,,"Hi guys,

What would cause the filter method to just hang? no matter the arguments it doesn't do anything. On the other hand, the stream.sample method immediately starts outputting data

my call to filter looks like this:
`stream.filter( locations=[-124, 48, -65, 24], languages=['en'] )`

I have to use ctrl-c to kill the process and then this is output to terminal:
`^CTraceback (most recent call last):
  File ""main.py"", line 89, in <module>
    stream.filter( locations=[-125, 50, -65, 24], languages=['en'] )
  File ""/usr/lib/python3.4/site-packages/tweepy/streaming.py"", line 445, in filter
    self._start(async)
  File ""/usr/lib/python3.4/site-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""/usr/lib/python3.4/site-packages/tweepy/streaming.py"", line 255, in _run
    sleep(self.retry_time)
KeyboardInterrupt
`

Tthanks for any help
"
787,Missing dependencies for SOCKS support,2016-09-29T21:43:39Z,2016-11-05T23:37:57Z,,tweepy.error.TweepError,tweepy.error.TweepError: ***_# Failed to send request: Missing dependencies for SOCKS support.**_*,"File ""twitterBot.py"", line 39, in <module>
    twitter.tweet('Hello world')
  File ""twitterBot.py"", line 15, in **tweet**
    self.api.update_status(status=message)
  File ""/home/since95/pythonApi/pythonApi/local/lib/python2.7/site-packages/tweepy/api.py"", line 194, in update_status
    )(post_data=post_data, _args, *_kwargs)
  File ""/home/since95/pythonApi/pythonApi/local/lib/python2.7/site-packages/tweepy/binder.py"", line 245, in _call
    return method.execute()
  File ""/home/since95/pythonApi/pythonApi/local/lib/python2.7/site-packages/tweepy/binder.py"", line 189, in execute
    raise TweepError('Failed to send request: %s' % e)
tweepy.error.TweepError: ***_# Failed to send request: Missing dependencies for SOCKS support.**_*

Getting error , i am using it behind the proxy.. proxy variable is SET stills shows error 
"
786,[Suggestion] Tweepy imports,2016-09-26T16:31:53Z,,,,,"Hi guys,

While playing with Tweepy, I wanted to have a custom lib directory to install pip libraries into.
This directory contains git-ignored stuff and a `__init__.py` file only (to make it a package).
##### Install

I created a directory named `lib/` under my project.

I'm installing pip stuff with (requirements.txt contains all my libs):

```
pip install -r requirements.txt -t lib
```
##### Loading

Then, I wanted to load this custom path into the env, using the `lib/__init__.py` file from this directory with the following stuff:

``` python
import sys
import os

dir_path = os.path.dirname(os.path.realpath(__file__))
sys.path.append(dir_path)
```
##### Architecture

This makes the architecture as is:

```
project/
    lib/
        __init__.py
        tweepy/
    main.py
```

In my case, other libs are well loading, excepted for tweepy and its related imports (from tweepy.A import B, etc).
##### Proposal

I came up with this fix, which is about using relative imports, as in other libraries.
So I updated the Tweepy imports (directly in the locally installed lib to check) from:

```
from tweepy.api import API
```

to:

```
from .api import API
```

Do you see any issue to make this happens in this project? Hope it's understandable and legit!

Thanks!
"
785,Request to implement tweet_mode=extended,2016-09-21T08:14:40Z,2016-10-03T23:19:37Z,,,,"Hello, edited, cheers
"
784,Problem with media entities,2016-09-20T07:53:06Z,,,,,"today seems that there is a problem with media in entities; indeed seems that if a tweet contains an hashtag so tweepy can't retrieve its media. 
Strange behavior, maybe it is a problem with new decision of tweet to not include media in character count?

What can we do?

Thanks
"
783,Removed unicode() in filter_level for py3k supprt,2016-09-16T01:42:36Z,2016-11-06T00:19:54Z,,,,"fixes https://github.com/tweepy/tweepy/issues/782
"
782,Python 3 Unicode Error on streaming with filter,2016-09-16T00:27:06Z,2016-11-05T23:46:49Z,,NameError,NameError: name 'unicode' is not defined,"Hi,

I tried to use a filter in tweepy.Stream in Python 3.5 - this is my code:

```
import tweepy

CONSUMER_KEY = 'xxx'
CONSUMER_SECRET = 'xxx'

ACCESS_TOKEN = 'xxx'
ACCESS_TOKEN_SECRET = 'xxx'

class ExampleStreamer(tweepy.StreamListener):
    def on_status(self, status):
        print(status)

auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)

api = tweepy.API(auth)

stream = tweepy.Stream(auth=api.auth, listener=ExampleStreamer())
stream.filter(follow=['14230524'], filter_level='medium')
```

and I got this error

```
xxx@xxx-ThinkPad-Edge-E540:~/xxx$ python bug.py 
Traceback (most recent call last):
  File ""bug.py"", line 19, in <module>
    stream.filter(follow=['14230524'], filter_level='medium')
  File ""/home/xxx/anaconda3/lib/python3.5/site-packages/tweepy/streaming.py"", line 442, in filter
    self.body['filter_level'] = unicode(filter_level, encoding)
NameError: name 'unicode' is not defined
```

This is the line to blame:
https://github.com/tweepy/tweepy/blob/cd46550b3ef068857f5de9c37bbdd0a72acb7462/tweepy/streaming.py#L444

I use Anaconda with Python 3.5 and installed tweepy via pip and updated before reporting this bug.
I never worked with Py2 so it's I can't make a Pull request myself, but I doubt it's an difficult task.

http://stackoverflow.com/questions/19877306/nameerror-global-name-unicode-is-not-defined-in-python-3

Best
"
781,Status and User Models example,2016-09-13T19:07:59Z,,,,,"Hi, 
I'm a noob to Open Source development, so please excuse any silly mistakes on my part.
I've created an example which I think might be useful for users:  This example explains tweepy's Status & User Models, and demonstratesparsing the info found in a single tweet ('Status').

Best Regards,
Ran
"
780,read_line() NoneType bug fix,2016-09-08T00:59:52Z,2016-11-05T23:16:18Z,,,,"While running a Twitter Stream for a few hours, I eventually receive a bug that claims that buf.read_line() is None, and strip() is not a function of NoneType.  This is my proposed bandaid:

https://github.com/tweepy/tweepy/blob/master/tweepy/streaming.py#L313
"
779,replace raw print() calls with proper logging-based calls,2016-09-02T16:10:31Z,2016-11-06T00:11:47Z,,,,"Hi,
Thanks for a great Twitter library!

I noticed that some running status messages are printed using the basic `print()` function instead of the more suited `logging`-based reporting functions, e.g. `logging.warning()`. This is particularly inconvenient when you implement `stdout` redirection of data from a Twitter-based program, because if you get rate-limited the status message will slip with the stream output you are processing, e.g. JSON Tweets from a `lookup` API call.
I adapted the relevant code to make sure all reporting is done using the `logging` module (that uses `stderr` output as it should) instead of the naive `print()` function.
Hope to see this improvement in upcoming maintenance versions :)

Cheers!
Hugo.
"
778,List of followers,2016-09-02T14:27:23Z,2016-11-05T23:48:27Z,,,,"Hi all,
I'm looking for a way (in python) to list all followers from one account, with username and number of followers.
Now I can obtain the list of all ids in this way:

```
ids = []
for page in tweepy.Cursor(api.followers_ids, screen_name=""username"").pages():
    ids.extend(page)
    time.sleep(1)
```

but with this list of ids I can't obtain username and number of followers of every id, because the rate limit exceed...
How I can complete this code?

Thank you all!
"
777,Fix cache,2016-08-21T10:35:41Z,2016-11-06T13:35:29Z,,,,"Fixing the cache key for both get and store methods
"
776,Discuss Forum is off,2016-08-12T11:56:58Z,,,,,"Hi guys, I was trying to access the Discuss Forum at http://discuss.tweepy.org/ and I got an Server not found page...
Is there anything going on? Maybe some change in the link idk.
If there is anything I can do help let me know =)
"
775,Corrected minor typo,2016-08-10T04:56:38Z,2016-11-06T00:19:30Z,,,,
774,'TweepError' object has no attribute 'message',2016-08-09T02:52:28Z,,,,,"I'm trying to retrieve the error code as described [here](http://tweepy.readthedocs.io/en/v3.5.0/api.html#tweepy-error-exceptions) but get the AttributeError above.
"
773,Streaming does not gracefully terminate if no messages are received,2016-08-08T06:09:49Z,,,,,"Using tweepy==3.5.0

```
def signal_handler(signal, frame):
    print(""Ctrl-C received"")
    myStream.disconnect()

myStreamListener = MyStreamListener()
myStream = tweepy.Stream(auth=api.auth, listener=myStreamListener)

signal.signal(signal.SIGINT, signal_handler)
myStream.filter(track=['keywords'])
```

I would like to Ctrl-C terminate my application. Calling `stream.disconnect()` sets `running=False`. However, this variable is only tested when Tweepy receives a message. If no messages are received, it blocks while reading from the stream (specifically `self._buffer += self._stream.read(self._chunk_size)` in `read_line()`), and I have to force kill my application.
"
772,Update a few return types,2016-08-07T15:22:18Z,,,,,
771,fix issue when reading data with Streaming API,2016-08-05T15:20:48Z,2016-11-05T23:17:35Z,,,,"sometimes read line can return None so it's necessary to validate that case
"
770,Bug in the code,2016-08-04T22:52:46Z,2016-11-05T23:58:32Z,,Now,Now:,"Hello,

I should have been more specific in the title. It's a bug in the example code of the online documentation

I noticed that there is a bug in the Streaming page ( http://docs.tweepy.org/en/v3.5.0/streaming_how_to.html )

Now:
myStream = tweepy.Stream(auth = api.auth, listener=myStreamListener())

It should be:

myStream = tweepy.Stream(auth = api.auth, listener=myStreamListener)
"
769,Authentication can be done way more simply than instructions suggest,2016-08-04T18:45:03Z,,,,,"Twitter UI now has button to generate the second set of token/secret pairs. So you can skip all the complex docs and jump straight to:

```
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(key, secret)
```

for many users who are just setting up their own personal twitter account with tweepy.
"
768,"Raises an exception if a duplcate status is posted, documentation suggests otherwise",2016-07-31T00:47:04Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: [{u'message': u'Status is a duplicate.', u'code': 187}]","If update_status is called with a duplicate status, a TweepError is raised:

```
File ""/usr/local/lib/python2.7/dist-packages/tweepy/api.py"", line 194, in update_status
    )(post_data=post_data, *args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 245, in _call
    return method.execute()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 229, in execute
    raise TweepError(error_msg, resp, api_code=api_error_code)
tweepy.error.TweepError: [{u'message': u'Status is a duplicate.', u'code': 187}]
```

Although the [documentation](http://tweepy.readthedocs.io/en/v3.5.0/api.html#status-methods) says ""Statuses that are duplicates or too long will be silently ignored.""
"
767,add keep-alive connection options,2016-07-26T15:27:35Z,,,,,"- add arguments keep_alive, max_requests_per_conn to the API constructor
- add `Connection: close` header to session if keep_alive is False
- add `Connection: keep-alive` and `Keep-Alive: ...` headers to session headers if keep_alive and/or max_requests_per_conn is supplied

The problem (https://github.com/tweepy/tweepy/issues/762) is that connections persistently hang after request until the whole application is reloaded, and on each new request (or once per several requests) a new connection is created, without closing the old ones. Actually it seems that Twitter API server itself does not honor `Keep-Alive: ...` header at all and the only workaround is closing the connections completely with `Connection: close`.
This fix allows to specify explicit keep-alive options for the API.
"
766,Fix bug in JSONParser.parse() which causes it to return None,2016-07-26T14:18:13Z,2016-11-06T14:01:11Z,,,,"Re-combine tower-of-ifs into a single if/else.

Fixes #765
"
765,JSONParser.parse() returns None if only 'next_cursor' available.,2016-07-26T14:06:20Z,2016-11-06T14:01:10Z,,,,"It looks like someone has broken an if/else when refactoring, which causes python to drop off the end of the function without returning anything useful.

https://github.com/tweepy/tweepy/blame/master/tweepy/parsers.py#L57
"
764,Unable to use API.lists() api,2016-07-22T05:05:50Z,2016-12-08T17:01:37Z,,AttributeError,AttributeError: 'API' object has no attribute 'lists',"Traceback (most recent call last):
  File ""twitter.py"", line 203, in <module>
    t.show_lists()
  File ""twitter.py"", line 135, in show_lists
    for i in self._api.lists():
AttributeError: 'API' object has no attribute 'lists'
"
763,Issue with User_timeline(),2016-07-21T20:15:17Z,,,,,"having an issue where calling user time line is returning `IndexError: list index out of range` with the initial call string being
 `
for status in api.user_timeline([309626491][743090778923098112][False][1][1]):
    print status.id
    tweet= status.id
    api.retweet(tweet)
    time.sleep(900)
`

In terms of debugging I've tried the old indexing from 0 attempt and playing around with the start and end point but cant seem to get this to function 

I've read the specific documentation on http://docs.tweepy.org/en/v3.5.0/api.html#API.user_timeline
"
762,Multiple connections opened - Tweepy,2016-07-21T16:46:53Z,,,,,"If I authorize a user with tweepy and loop around say 100 times to get rate_limit_status, tweepy starts a new connection everytime instead of re-using the connection. The below message gets printed 100 times. Is this a bug?

2016-07-21 17:43:36,023: requests.packages.urllib3.connectionpool: INFO    : Thread-208 : Starting new HTTPS connection (1): api.twitter.com
"
761,Adds `auto_populate_reply_metadata` attribute on status endpoints,2016-07-19T09:29:51Z,2016-11-06T13:42:08Z,,,,"In order to get the benefits from the 140 character changes described in #737 we need to include the `auto_populate_reply_metadata` boolean parameter described in the updated [twitter REST API documentation](https://dev.twitter.com/overview/api/upcoming-changes-to-tweets).

This PR adds this parameter to the two status update endpoints and updates the relevant documentation.
"
760,Tweepy 3.5.0 with Python 3.5.2 doesn't return any data at all from a stream,2016-07-18T02:44:24Z,2016-07-18T03:55:25Z,,,,"Python 3.5.2, Tweepy 3.5.0, Windows 8.1

I'm following a tutorial made by sentdex that shows how to stream data from Twitter using tweepy. (His tutorial is in Python 2 but it is pretty easy to Python 3-ify it)

However, when I run the script, it doesn't spit out any data. It hangs until I get a 3-way IncompleteRead exception, or until I do Ctrl+C.

Here is my Listener class code:
`

```
class listener(StreamListener):

    def on_date(self,data):
        try:
            print(data)
            save = open('twitDB.csv', 'a')
            save.write(data)
            save.write('\n')
            save.close()
            return True
        except BaseException as e:
            print('failed on data,',str(e))
            time.sleep(5)

    def on_error(self,status):
        print(status)

auth = OAuthHandler(ckey, csecret)
auth.set_access_token(atoken,asecret)
twitterStream = Stream(auth=auth, listener=listener())
twitterStream.filter(track=[""car""]) 
```

`
As you can see, I have it set up to catch errors and print data out while saving it to a csv, but it doesn't really do anything, just hangs.

Also, for track, I did try to use something less general but it still hanged.

When KeyboardInterrupt is raised:
`

```
Traceback (most recent call last):
  File ""C:\Program Files\Python35\lib\site-packages\requests\packages\urllib3\co
ntrib\pyopenssl.py"", line 217, in recv_into
    return self.connection.recv_into(*args, **kwargs)
  File ""C:\Program Files\Python35\lib\site-packages\OpenSSL\SSL.py"", line 1352,
in recv_into
    self._raise_ssl_error(self._ssl, result)
  File ""C:\Program Files\Python35\lib\site-packages\OpenSSL\SSL.py"", line 1167,
in _raise_ssl_error
    raise WantReadError()
OpenSSL.SSL.WantReadError

During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File ""twittertest.py"", line 33, in <module>
    twitterStream.filter(track=[""car""])
  File ""C:\Program Files\Python35\lib\site-packages\tweepy\streaming.py"", line 4
45, in filter
    self._start(async)
  File ""C:\Program Files\Python35\lib\site-packages\tweepy\streaming.py"", line 3
61, in _start
    self._run()
  File ""C:\Program Files\Python35\lib\site-packages\tweepy\streaming.py"", line 2
63, in _run
    self._read_loop(resp)
  File ""C:\Program Files\Python35\lib\site-packages\tweepy\streaming.py"", line 3
13, in _read_loop
    line = buf.read_line().strip()
  File ""C:\Program Files\Python35\lib\site-packages\tweepy\streaming.py"", line 1
79, in read_line
    self._buffer += self._stream.read(self._chunk_size)
  File ""C:\Program Files\Python35\lib\site-packages\requests\packages\urllib3\re
sponse.py"", line 310, in read
    data = self._fp.read(amt)
  File ""C:\Program Files\Python35\lib\http\client.py"", line 448, in read
    n = self.readinto(b)
  File ""C:\Program Files\Python35\lib\http\client.py"", line 478, in readinto
    return self._readinto_chunked(b)
  File ""C:\Program Files\Python35\lib\http\client.py"", line 573, in _readinto_ch
unked
    chunk_left = self._get_chunk_left()
  File ""C:\Program Files\Python35\lib\http\client.py"", line 541, in _get_chunk_l
eft
    chunk_left = self._read_next_chunk_size()
  File ""C:\Program Files\Python35\lib\http\client.py"", line 501, in _read_next_c
hunk_size
    line = self.fp.readline(_MAXLINE + 1)
  File ""C:\Program Files\Python35\lib\socket.py"", line 575, in readinto
    return self._sock.recv_into(b)
  File ""C:\Program Files\Python35\lib\site-packages\requests\packages\urllib3\co
ntrib\pyopenssl.py"", line 230, in recv_into
    [self.socket], [], [], self.socket.gettimeout())
KeyboardInterrupt
```

`
It's my first time going with a social media API, so I apologize if I'm missing something obvious. Help would be appreciated, thanks.
"
759,Stream Listener stop after few second,2016-07-17T08:26:27Z,,,,,"Hi !

I did not found anything about this behavior, so I publish this ""bug"". The first time I wrote the simple code below, it worked perfectly, but now the Listener is stopping after few seconds, and I do not have any error code or something.

There is the simple code:

```
import tweepy
import sys
import json
from textwrap import TextWrapper
from datetime import datetime
from elasticsearch import Elasticsearch

consumer_key = ""hidden""
consumer_secret = ""hidden""
access_token = ""hidden""
access_token_secret = ""hidden""

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
ES_HOST = {""host"" : ""localhost"", ""port"" : 9200}

es = Elasticsearch(hosts = [ES_HOST])

class StreamListener(tweepy.StreamListener):
        print('Starting StreamListener')
        status_wrapper = TextWrapper(width=60, initial_indent='    ', subsequent_indent='    ')

        def on_status(self, status):
                try:
                        print 'n%s %s' % (status.author.screen_name, status.created_at)
                        json_data = status._json
                        #print json_data['text']

                        es.create(index=""idx_twp"",
                                doc_type=""twitter_twp_nintendo"",
                                body=json_data
                                )

                except Exception, e:
                        print e
                        pass

print('Starting Receiving')

streamer = tweepy.Stream(auth=auth, listener=StreamListener(), timeout=3000000000)

#Fill with your own Keywords bellow
terms = ['nintendo']

streamer.filter(None,terms)
#streamer.userstream(None)

print ('Ending program')
```

And then there is the ouput (only 2 seconds);

> [root@localhost ~]# python projects/m/twitter/twitter_logs.py
> Starting StreamListener
> Starting Receiving
> Ending program

I am using Pythonn 2.7.5
"
758,malformed string error from examples/streaming.py  'data',2016-07-15T03:53:07Z,2016-07-15T06:23:46Z,,,,"My first 'issues' post on github, be gentle and redirect if needed.  :)

Working from the streaming example.
https://github.com/tweepy/tweepy/blob/master/examples/streaming.py
my code
https://github.com/aspiringguru/twitterDataAnalyse/blob/master/tweepy_streaming_example.py
my problem:
I'm seeing a badly formed dictionary in string format. 
currently trapping malformed string error from ast.literal_eval(data)

sample output below from 'print(data)' shows malformed string representation of dictionary at keyword 'rel'.

I saw some tools for dealing with malformed json, csv etc, those seem bad solutions.

That said, and given this sample code has been up for a while, I'm wondering how else I should be extracting from data.

{
""created_at"":""Fri Jul 15 01:56:59 +0000 2016"",
""id"":753770301977038848,
""id_str"":""753770301977038848"",
""text"":""I need to start playing basketball more \ud83d\ude10"",
""source"":""\u003ca href=\""http:\/\/twitter.com\/download\/iphone\"" 
rel=\""nofollow\""\u003eTwitter for iPhone\u003c\/a\u003e"",
""truncated"":false,
""in_reply_to_status_id"":null,
""in_reply_to_status_id_str"":null,
""in_reply_to_user_id"":null,

etc... 
"
757,Add function to get user_id of authenticating user,2016-07-11T17:00:58Z,,,,,"Simple extension to store user_id of authenticating user along with the currently stored username.
"
756,"HTTPSConnectionPool(host='api.twitter.com', port=443)",2016-07-10T13:03:28Z,,,tweepy.error.TweepError,tweepy.error.TweepError: Failed to send request: HTTPSConnectionPool(host='api.t,"Hi,I want to use streaming api to get some tweet,but i have some problem.
It's a simple demo.This is my code:

import tweepy
from tweepy import OAuthHandler

consumer_key = 'YOUR-CONSUMER-KEY'
consumer_secret = 'YOUR-CONSUMER-SECRET'
access_token = 'YOUR-ACCESS-TOKEN'
access_secret = 'YOUR-ACCESS-SECRET'

auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_secret)

api = tweepy.API(auth)

for status in tweepy.Cursor(api.home_timeline).items(10):
    print(status.text) 

and these are error information:

Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""C:\Python27\lib\site-packages\tweepy\cursor.py"", line 197, in next
    self.current_page = self.page_iterator.next()
  File ""C:\Python27\lib\site-packages\tweepy\cursor.py"", line 108, in next
    data = self.method(max_id=self.max_id, parser=RawParser(), _self.args, *_sel
f.kargs)
  File ""C:\Python27\lib\site-packages\tweepy\binder.py"", line 245, in _call
    return method.execute()
  File ""C:\Python27\lib\site-packages\tweepy\binder.py"", line 189, in execute
    raise TweepError('Failed to send request: %s' % e)
tweepy.error.TweepError: Failed to send request: HTTPSConnectionPool(host='api.t
witter.com', port=443): Max retries exceeded with url: /1.1/statuses/home_timeli
ne.json (Caused by NewConnectionError('<requests.packages.urllib3.connection.Ver
ifiedHTTPSConnection object at 0x0000000002E6DBE0>: Failed to establish a new co
nnection: [Errno 10060] ',))

please help me,thank you.
"
755,Added comment about process_status,2016-07-10T11:32:26Z,,,,,"Added ""# process_status function should be defined above."" comment so that new users could know that process_status has to be defined by themselves.
"
754,Anaconda 2.5.0 shell for Python 3.5.1,2016-07-08T18:33:27Z,2016-11-05T23:55:37Z,,,,"I'm getting syntax errors when I type in ""git clone https://github.com/tweepy/tweepy.git"" in Anaconda 2.5.0 sheel for Python 3.5.1
![2016-07-08_14-33-10](https://cloud.githubusercontent.com/assets/11978048/16697695/edfbbf7a-4518-11e6-8887-3aeb5fa98893.jpg)
"
753,Using tweepy with a proxy,2016-07-06T14:15:32Z,2016-11-05T23:50:32Z,,,,"Do many of you think tweepy should have an option for using a proxy? I don't know if this method still works but I think it would be nice to use tweepy behind Tor, since tweepy does use the requests module. https://gist.github.com/jefftriplett/9748036. 
"
752,Fix AttributeError,2016-06-29T01:26:51Z,2016-06-29T15:49:50Z,,,,"read_line() can return None. Call strip() after checking for this.

Fix #698
"
751,AttributeError: 'module' object has no attribute 'OAuthHandler',2016-06-27T04:25:23Z,2016-09-09T10:24:09Z,,AttributeError,AttributeError: 'module' object has no attribute 'OAuthHandler',"using python 2.7.11 (32bit)
with:
tweepy 3.5.0
six>=1.7.3
requests>=2.4.3
requests-oauthlib>=0.4.1
oauthlib>=0.6.2

my code :
from tweepy import OAuthHandler
auth = OAuthHandler(consumer_key, consumer_secret)

got this error: 
AttributeError: 'module' object has no attribute 'OAuthHandler'

I tried to uninstall and reinstall tweepy, and still not change anything.
"
750,ReadTimeoutError,2016-06-26T22:48:55Z,,,requests.packages.urllib3.exceptions.ReadTimeoutError,"requests.packages.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='stream.twitter.com', port=443): Read timed out.","Another periodic crash (different from #749): while some network exceptions are caught, it is not the case of `requests.packages.urllib3.exceptions.ReadTimeoutError` and the program errors out.

```
Traceback (most recent call last):
  ...
    stream.filter(**kwargs)
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 447, in filter
    self._start(async)
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 263, in _run
    self._read_loop(resp)
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 313, in _read_loop
    line = buf.read_line().strip()
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 179, in read_line
    self._buffer += self._stream.read(self._chunk_size)
  File ""venv/local/lib/python2.7/site-packages/requests/packages/urllib3/response.py"", line 320, in read
    flush_decoder = True
  File ""/usr/lib/python2.7/contextlib.py"", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File ""venv/local/lib/python2.7/site-packages/requests/packages/urllib3/response.py"", line 233, in _error_catcher
    raise ReadTimeoutError(self._pool, None, 'Read timed out.')
requests.packages.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='stream.twitter.com', port=443): Read timed out.
```
"
749,TypeError: expected string or buffer,2016-06-23T15:11:53Z,2016-11-05T23:50:58Z,,TypeError,TypeError: expected string or buffer,"After applying the fix to #576, my program kept crashing regularly. Changing the code for it to display a traceback ([your re-raising](https://github.com/tweepy/tweepy/blob/cd46550b3ef068857f5de9c37bbdd0a72acb7462/tweepy/streaming.py#L294) discards it), this is what I got:

```
Traceback (most recent call last):
  ...
    stream.filter(**kwargs)
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 446, in filter
    self._start(async)
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 362, in _start
    self._run()
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 264, in _run
    self._read_loop(resp)
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 325, in _read_loop
    self._data(next_status_obj)
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 298, in _data
    if self.listener.on_data(data) is False:
  File ""venv/local/lib/python2.7/site-packages/tweepy/streaming.py"", line 50, in on_data
    data = json.loads(raw_data)
  File ""/usr/lib/python2.7/json/__init__.py"", line 338, in loads
    return _default_decoder.decode(s)
  File ""/usr/lib/python2.7/json/decoder.py"", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
TypeError: expected string or buffer
```

I'm running 3.5.0.
"
748,TypeError: expected string or buffer in streaming module,2016-06-21T12:40:50Z,2016-10-25T01:15:58Z,,TypeError,TypeError: expected string or buffer,"Randomly I will get this error message. Sometimes up to a week between occurrences. It causes the whole program to quit responding.

Exception in thread Thread-1:
Traceback (most recent call last):
File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
self.run()
File ""/usr/lib/python2.7/threading.py"", line 763, in run
self.__target(_self.__args, *_self.__kwargs)
File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 294, in _run
raise exception
TypeError: expected string or buffer

Here is the section of code that is running

`
def run(self):
        auth = tweepy.OAuthHandler(ckey, csecret)
        auth.set_access_token(atoken, asecret)

```
    api  = tweepy.API(auth)
    sapi = tweepy.streaming.Stream(auth, CustomStreamListener(api, self.publisherSocket))
    sapi.filter(track=self.twitterFilters, async=True)

    while True:
        logger.debug('While Started')
        try:
            logger.debug('Beginning Stream')
            request = self.FilterPublisherSocket.recv()

            unpacked = msgpack.unpackb(request)

            if ""GET"" == unpacked['method']:
                if ""filters"" == unpacked['target']:
                    response = { ""filters"": self.twitterFilters }

            packed = msgpack.packb(response)
            self.FilterPublisherSocket.send(packed)
        except TypeError as e:
            log.error('TypeError: {}'.format(e))
            pass
        except Exception as e:
            logger.exception(e)
            pass

    logger.debug('While Exited')
```

`

Versions
python 2.7.9
tweepy 3.5.0
requests 2.10.0
oauthlib 1.1.1
"
747,Python Tweepy returns 'error 401 : Unauthorized',2016-06-21T10:14:02Z,,,,,"The below code has worked perfectly for the past 6 months for retrieving Followers of some Twitter Accounts. Suddenly this morning, the code has stopped to work returning 'Error 401 : Unauthorized'.

I checked my App on dev.twitter.com, it is still valid. I updated Tweepy. No idea why this is not working anymore.

Code Fails on 'Cursor.next' line.

```
import tweepy
import mysql.connector
import time

consumer_key = 'secretkey'
consumer_secret = 'secretsecret'
access_token = 'secrettoken'
access_token_secret = 'secrettokensecret'
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)



for twit_name in twit_name_array:
api = tweepy.API(auth)
t0= time.clock()

data = api.rate_limit_status()
user_followers_remaining = data['resources']['followers']['/followers/ids']['remaining']
print(user_followers_remaining)
id_i = twit_name[1]

countpage = 0
countx = 0

def limit_handled(cursor):
   while True:
       data = api.rate_limit_status()
       user_followers_remaining = data['resources']['followers']['/followers/ids']['remaining']

       if user_followers_remaining>0:
           try:
               yield cursor.next()
           except BaseException as e:
               print('failed_on_CURSOR_NEXT', str(e))
               global api
               api = tweepy.API(auth)
               try:
                  yield cursor.next()
            except BaseException as e:
                print('failed_on_CURSOR_NEXT_2', str(e))
                break
       else:
           for min_remain in range(-3, 0):
               print('##### TIMEOUT #####  -----  Out of queries, waiting ' + str(min_remain*5) + 'min')
            time.sleep(5*60)`
```
"
746,using python shell 3.5.1,2016-06-16T19:53:16Z,,,ImportError,ImportError: No module named 'oauthlib',"import tweepy
[ showing this error]

Traceback (most recent call last):
File """", line 1, in 
import tweepy
File ""C:\Users\Pranjal Gupta\AppData\Local\Programs\Python\Python35\lib\site-packages\tweepy-3.6.0-py3.5.egg\tweepy__init__.py"", line 16, in 
from tweepy.auth import OAuthHandler, AppAuthHandler
File ""C:\Users\Pranjal Gupta\AppData\Local\Programs\Python\Python35\lib\site-packages\tweepy-3.6.0-py3.5.egg\tweepy\auth.py"", line 9, in 
from requests_oauthlib import OAuth1Session, OAuth1
File ""C:\Users\Pranjal Gupta\AppData\Local\Programs\Python\Python35\lib\site-packages\requests_oauthlib-0.6.1-py3.5.egg\requests_oauthlib__init__.py"", line 1, in 
from .oauth1_auth import OAuth1
File ""C:\Users\Pranjal Gupta\AppData\Local\Programs\Python\Python35\lib\site-packages\requests_oauthlib-0.6.1-py3.5.egg\requests_oauthlib\oauth1_auth.py"", line 6, in 
from oauthlib.common import extract_params
ImportError: No module named 'oauthlib'
"
745,TweepError: failed to send request,2016-06-13T17:49:17Z,,,,,"It was executing perfectly but all of a sudden it started throwing this error, though I did not make any changes to the codebase.

> searched_tweets = ( status._json for status in tweepy.Cursor(api.search, q=query, count=300, since=from_date, until=to_date,
>   File ""build/bdist.linux-x86_64/egg/tweepy/cursor.py"", line 197, in next
>   File ""build/bdist.linux-x86_64/egg/tweepy/cursor.py"", line 108, in next
>   File ""build/bdist.linux-x86_64/egg/tweepy/binder.py"", line 245, in _call
>   File ""build/bdist.linux-x86_64/egg/tweepy/binder.py"", line 189, in execute
> tweepy.error.TweepError: Failed to send request: 'module' object has no attribute 'HTTPMessage'

Any help is highly appreciated!
"
744,Quieter logging,2016-06-10T21:46:55Z,2016-11-06T00:25:58Z,,,,"This feels too deep/verbose to be logged at the `info` level.
"
743,Import Error,2016-06-10T00:44:53Z,,,SyntaxError,SyntaxError: invalid syntax,"Every time I use import tweepy I get this error:

import tweepy
  File ""C:\Python351\lib\site-packages\tweepy__init__.py"", line 16, in <module>
    from tweepy.auth import OAuthHandler, AppAuthHandler
  File ""C:\Python351\lib\site-packages\tweepy\auth.py"", line 9, in <module>
    from requests_oauthlib import OAuth1Session, OAuth1
  File ""C:\Python351\lib\site-packages\requests_oauthlib__init__.py"", line 1, in <module>
    from .oauth1_auth import OAuth1
  File ""C:\Python351\lib\site-packages\requests_oauthlib\oauth1_auth.py"", line 6, in <module>
    from oauthlib.common import extract_params
  File ""C:\Python351\lib\site-packages\oauthlib\common.py"", line 28, in <module>
    import urlparse
  File ""C:\Python351\lib\urlparse.py"", line 416
    raise ValueError, ""bad query field: %r"" % (name_value,)
                    ^
SyntaxError: invalid syntax

Process finished with exit code 1

When I'm not using tweepy it works fine. I'm currently am using Python 3.5.1
"
742,maxId fetches the same tweet,2016-06-08T10:21:45Z,,,,,"I have the following snippet of code

```
theMaxId=None

while True:
    for page in tweepy.Cursor(api.user_timeline, count=200, include_rts=True, screen_name=user, maxid=theMaxId).pages():
        for status in page:
        statusId = status.id
        print status.text.encode('utf-8')

  theMaxId=statusId-1
```

The maxid does not fetch the next set of tweets.
"
741,Call a custom endpoint,2016-06-06T19:49:25Z,2017-11-28T15:33:53Z,,,,"Is there an easy way to call a custom endpoint? I want to use private endpoints, is that possible?
"
740,Added documentation of API.mentions_timeline(),2016-06-06T13:49:39Z,2017-02-16T21:35:51Z,,,,
739,Removing auth.secure = True since it doesnt seem to exist anymore.,2016-06-02T16:29:11Z,2016-11-06T13:38:52Z,,,,"Looks like OAuthHandler class no longer references ""secure"" anywhere. Just thought i'd clean the example up a bit. 
"
738,Wrong parameter description in the API Reference on ReadTheDocs,2016-05-27T14:29:52Z,,,,,"The API reference for the list_members() method (http://tweepy.readthedocs.io/en/v3.5.0/api.html#API.list_members) mentions the 'owner' parameter. This parameter is, however, not accepted by the corresponding Tweepy method (https://github.com/tweepy/tweepy/blob/master/tweepy/api.py#L1086-L1097). 'owner_screen_name' should be provided instead.
"
737,Twitter changes for more than 140 characters,2016-05-24T18:14:04Z,,,,,"All I know is what the [blog post](https://blog.twitter.com/2016/doing-more-with-140-characters) says. Here's an excerpt:

> Today, we’re excited to announce an upcoming set of changes rolling out over the coming months to enable people to express even more within 140 characters.
> ...
> Our goal is to give developers and partners this advance notice of changes to the format of Tweets so that they can prepare their products and applications appropriately.

Just wanted to file an issue to make sure y'all are aware and potentially provide a forum for discussion about what changes may be necessary.
"
736,Issue735,2016-05-24T17:06:21Z,2017-09-16T22:31:50Z,,,,"see https://github.com/tweepy/tweepy/issues/735
"
735,how do i use unretweet api?,2016-05-24T16:49:19Z,,,,,"https://dev.twitter.com/rest/reference/post/statuses/unretweet/%3Aid
"
734,Exception Handling Flaw in streaming.py,2016-05-20T14:28:34Z,2017-03-01T15:01:38Z,,AttributeError,AttributeError: 'NoneType' object has no attribute 'strip',"The tweepy.streaming.py file is missing proper exception handing in line 313. See Traceback: 

```
Traceback (most recent call last):
   ...
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 445, in filter
    self._start(async)
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 294, in _run
    raise exception
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 263, in _run
    self._read_loop(resp)
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 313, in _read_loop
    line = buf.read_line().strip()
AttributeError: 'NoneType' object has no attribute 'strip'

```
"
733,Update api.rst,2016-05-20T08:46:18Z,,,,,"Added note how to properly call  **send_direct_message**
"
732,add support for asyncio,2016-05-18T13:07:57Z,,,,,"It would be great if Tweepy integrated with asyncio. For example, to get data using a stream we would use something like

```
stream = AsyncStream(auth_handler)
...
data = await stream.filter(track=['python', 'tweepy', 'asyncio'])  # or ""yield from""
```
"
731,Twitter Amplify Videos do not contain extended_entities,2016-05-12T19:08:48Z,,,,,"when retrieving tweets using the user_timeline call, tweets containing Twitter videos hosted on pbs.twimg.com properly contain the extended_entities attribute which holds a direct reference to the mp4 file. Tweets containing twitter videos hosted on amp.twimg.com do not contain this extended_entities and have no reference to the mp4 file.
"
730,Adding date and time to python script,2016-05-09T09:37:15Z,2016-11-05T23:55:25Z,,,,"import tweepy

Hi everyone, i would like to add a date and time function to my codes.
May i know how i can do it? 
I am new to python coding.

Below are my codes:

```
import tweepy

def get_api(cfg):
  auth = tweepy.OAuthHandler(cfg['consumer_key'], cfg['consumer_secret'])
  auth.set_access_token(cfg['access_token'], cfg['access_token_secret'])
  return tweepy.API(auth)

def main():
  cfg = {
    ""consumer_key""        : "" ********************* ""
    ""consumer_secret""     : "" ********************* ""
    ""access_token""        : "" ********************* ""
    ""access_token_secret"" : "" ********************* ""
    }

  api = get_api(cfg)
  tweet = ""Motion detected!""
  status = api.update_status(status=tweet)

if __name__ == ""__main__"":
  main()

```

Did some research and I'm aware that i can print time by doing this:

```
import time 

now = time.strftime(""%c"")

## Display current date and time from now variable
print (""Current time %s""  % now )


```

However i do not know how to add into my tweet.

Thank you in advance!
"
729,"error with simple ""Hello World""",2016-05-09T03:07:07Z,2016-05-09T09:38:08Z,,tweepy.error.TweepError,"tweepy.error.TweepError: [{u'message': u'Timestamp out of bounds.', u'code': 135}]","Hi everyone, 
I am trying out a simple ""Hello World"" tweet however I am facing some errors.
I believe I am using tweepy-3.6.0 and python 2.7.9 (Can anyone suggest how do i check my version of tweepy and python?)

My codes:

```
import tweepy

def get_api(cfg):
  auth = tweepy.OAuthHandler(cfg['consumer_key'], cfg['consumer_secret'])
  auth.set_access_token(cfg['access_token'], cfg['access_token_secret'])
  return tweepy.API(auth)

def main():
  # Fill in the values noted in previous step here
  cfg = { 
    ""consumer_key""        : ""I PLACED MY KEYS HERE"",
    ""consumer_secret""     : ""I PLACED MY KEYS HERE"",
    ""access_token""        : ""I PLACED MY KEYS HERE"",
    ""access_token_secret"" : ""I PLACED MY KEYS HERE"" 
    }

  api = get_api(cfg)
  tweet = ""Hello, world!""
  status = api.update_status(status=tweet) 

if __name__ == ""__main__"":
  main()
```

This is a list of errors i get after i run `sudo python twitter.py` 

```
Traceback (most recent call last):
  File ""twitter.py"", line 23, in <module>
    main()
  File ""twitter.py"", line 19, in main
    status = api.update_status(status=tweet)
  File ""build/bdist.linux-armv7l/egg/tweepy/api.py"", line 194, in update_status
  File ""build/bdist.linux-armv7l/egg/tweepy/binder.py"", line 245, in _call
  File ""build/bdist.linux-armv7l/egg/tweepy/binder.py"", line 229, in execute
tweepy.error.TweepError: [{u'message': u'Timestamp out of bounds.', u'code': 135}]
```

Thank you in advance!!
"
728,since_id and max_id not working,2016-05-06T14:29:51Z,,,,,"I'm currently trying to write a twitter scraper using tweepy which has been fantastic to use till now until trying to use since_id and max_id in the user_timeline api as suggest by twitter here: https://dev.twitter.com/rest/public/timelines

currently my code at the moment is 

'for row in cursor2:
    twitacct = row[0]
    dbid = row[1]
    sinceid = row[2]
    maxid = row[3]

```
statuses = api.user_timeline(id=twitacct, since_id=sinceid)
for status in statuses: # get a thousand tweets
    tweet = status.text
    tweet = tweet.replace('\n','') #strip out all the line breaks that make text file horrible
    print tweet`
```

this is one of several variations i've tried including using the cursor. I can happily to get it pull a number of tweets using .items() but i'd like to make sure i scrape unique tweets in the future in the way twitter suggests. 
"
727,add media_metadata_create method to tweepy.API,2016-05-06T14:07:30Z,2017-06-08T17:05:56Z,,,,"This pull adds support for the `media/metadata/create` endpoint (issue #716). I found that the API wanted the JSON as a string, hence the `json.dumps` call. If there's another way to accomplish this I would be happy to hear about it.
"
726,another issue,2016-05-05T18:03:30Z,,,TypeError,TypeError: expected string or buffer,"``` python
Traceback (most recent call last):
  File ""engine/twitter.py"", line 91, in <module>
    stream.filter(track=['#hashtag',], languages=['en'])
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 446, in filter
    self._start(async)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 362, in _start
    self._run()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 264, in _run
    self._read_loop(resp)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 325, in _read_loop
    self._data(next_status_obj)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 298, in _data
    if self.listener.on_data(data) is False:
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 50, in on_data
    data = json.loads(raw_data)
  File ""/usr/lib/python2.7/json/__init__.py"", line 338, in loads
    return _default_decoder.decode(s)
  File ""/usr/lib/python2.7/json/decoder.py"", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
TypeError: expected string or buffer

```
"
725,i want list of all users participated in a hash,2016-05-04T18:27:02Z,,,,,"If i want to see how many users participate in a trend or hash
or top 100 users list
how to do that using REST api
i am asking about Trending topic which has minimum 20k tweets in 5hours 
how to count number of users participated in that hash?
"
724,Request feature update_with_media more than one image,2016-04-29T13:52:53Z,2016-04-30T02:56:38Z,,,,"I need to upload two images, like this:

`tweet = api.update_with_media(['image1.png', 'image2.png'], status=msg)`

Is it possible?

Thanks
"
723,Add documentation for `tweepy.parsers`,2016-04-20T09:35:17Z,,,,,"I added some documentation for `tweepy.parsers`. Would appreciate it if someone reviewed what I wrote to see if it's correct and whether or not it'll render properly.
"
722,Tweepy / show.friendhips / example hint,2016-04-10T09:34:15Z,,,,,"Hi everybody,

I am a newbie in Python and I am using tweepy for my master thesis (I am a marketing management student). I am trying to get the friendhips relationships bewteen two twitter users ( companies in my case), but I can't figure out how to make this api method works.

I would like to retrieve a simple 0,1 results where 0 = ""not following"" and 1 =""following"". 

this is my code just for the part I am interested in:

if api.show_friendship(source_screen_name='amazon', target_screen_name='eBay'):
    print ('1')
else:
    print ('0')

Any hint or Examples you can provide to me for this??? Please if possibile make it simple for me :))

THANKS!
"
721,[UnicodeEncodeError] Platform or Python version related bug?,2016-04-10T03:42:44Z,2016-04-13T14:40:57Z,,UnicodeEncodeError,UnicodeEncodeError: 'gbk' codec can't encode character '\u2714' in position 30: illegal multibyte sequence,"Hello all,

I just began using tweepy, but ran into a bug while following the Hello Tweepy example. Below is the code I used:

`
user = api.get_user(""BarackObama"")

private_tweets = user.timeline(count=200, include_rts=False)
for tweet in private_tweets:
    print(tweet.text)
`

About tens tweets were printed out normally and after this error came out:

Traceback (most recent call last):
  File ""HelloTweepy.py"", line 36, in <module>
    print(tweet.text)
UnicodeEncodeError: 'gbk' codec can't encode character '\u2714' in position 30: illegal multibyte sequence

Python version: 3.4.2
Operating System: WIN8.1

Thanks!
"
720,Model documentation missing,2016-04-06T18:41:34Z,,,,,"Documentation for the different models supplied by tweepy such as `Status` and `User` are missing, which makes it hard for me to understand how to use these objects (which are often referred to in the docs)
"
719,py3-ify getting_started.rst,2016-04-05T15:14:58Z,2016-11-06T00:22:48Z,,,,".. also still compatible with python2
"
718,Support compressed streaming,2016-04-04T19:02:56Z,,,,,"Based on example from https://rationalpie.wordpress.com/2010/06/02/python-streaming-gzip-decompression/
"
717,Fix file size limit for media_upload,2016-04-03T15:49:22Z,2016-11-06T00:29:09Z,,,,"According to https://dev.twitter.com/rest/reference/post/media/upload
the limit of this endpoint is 5MB (which is 4883KiB) per file.
"
716,media metadata: alt text support,2016-03-29T16:11:43Z,,,,,"Twitter has added a media metadata API endpoint. Currently it supports adding alt text to an image: https://blog.twitter.com/2016/alt-text-support-for-twitter-cards-and-the-rest-api

Other parts of the API are also being extended with a `include_ext_alt_text` parameter.

The above link notes that ""Full documentation for this endpoint will soon be published and linked directly once available"".
"
715,AttributeError: 'module' object has no attribute 'OAuthHandler',2016-03-24T06:26:54Z,2016-03-24T16:37:04Z,,AttributeError,AttributeError: 'module' object has no attribute 'OAuthHandler',"So, I just installed Tweepy after I found this script on a website: http://www.dototot.com/how-to-write-a-twitter-bot-with-python-and-tweepy/ and tried to run it, and got this error:

```
Joshuas-MacBook-Pro:TweetGenerator Josh$ python tweepy.py postcron.csv
Traceback (most recent call last):
  File ""tweepy.py"", line 6, in <module>
    import tweepy
  File ""/Users/Josh/TweetGenerator/tweepy.py"", line 15, in <module>
    auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
AttributeError: 'module' object has no attribute 'OAuthHandler'
```

I am running an identical script to what's in the link, and I have my auth tokens from my Twitter app set up. Why is this occurring? I saw a previous issue on this but apparently I guess this isn't fixed.
"
714,Memory consumption in search API + cursor,2016-03-23T02:26:16Z,,,,,"I'm using the Search API with cursor to obtain all tweets for a given keyword in the last week, keeping the top ten tweets with more likes (only relevant code displayed):

``` python
def insert_in_top10(top10, position, element):
    #1- insert into corresponding position
    top10.insert(position, element)
    #2- deleting last element of top10
    del(top10[-1])

auth = tweepy.OAuthHandler(credentials['consumer_key'], credentials['consumer_secret'])
auth.set_access_token(credentials['access_token'], credentials['access_token_secret'])

api = tweepy.API(auth)

top10 = [{'id':0, 'likes':-1, 'user_name':''} for i in range(10)]

# Sort tweets for the given keyword by likes, keep only the top 10
num_tweets = 0
num_likes = 0
for page in tweepy.Cursor(api.search, q=keyword, since=today-week, count=100).pages():
    for tweet in page:
        num_tweets += 1
        num_likes += tweet.favorite_count

        if tweet.favorite_count >= top10[0]['likes']:
            insert_in_top10(top10, 
                            0, 
                            {'id':tweet.id,
                             'likes':tweet.favorite_count,
                             'user_name':tweet.user.screen_name})
        elif tweet.favorite_count <= top10[-1]['likes']:
            pass
        else:
            # print(""sorting"")
            for i in range(9, -1, -1):
                if top10[i]['likes'] > tweet.favorite_count:
                    insert_in_top10(top10, 
                                    i+1, 
                                    {'id':tweet.id,
                                     'likes':tweet.favorite_count,
                                     'user_name':tweet.user.screen_name})
                    break

    print(num_tweets)
    # avoid rate limiting
    time.sleep(10)
```

When the cursor is reaching around 20k tweets, the script is usually killed by the OS, presumably by an excessive memory consumption.

Is there shomething I can do to improve the memory consumption of this script?
"
713,on_exception() missing 1 required positional argument: 'exception',2016-03-20T18:55:48Z,2016-03-20T19:22:55Z,,TypeError,TypeError: on_exception() missing 1 required positional argument: 'exception',"I am trying to run the code from [this tutorial](http://adilmoujahid.com/posts/2014/07/twitter-analytics/):

```
#Import the necessary methods from tweepy library
from tweepy.streaming import StreamListener
from tweepy import OAuthHandler
from tweepy import Stream

#Variables that contains the user credentials to access Twitter API 
access_token = ""ENTER YOUR ACCESS TOKEN""
access_token_secret = ""ENTER YOUR ACCESS TOKEN SECRET""
consumer_key = ""ENTER YOUR API KEY""
consumer_secret = ""ENTER YOUR API SECRET""


#This is a basic listener that just prints received tweets to stdout.
class StdOutListener(StreamListener):

    def on_data(self, data):
        print data
        return True

    def on_error(self, status):
        print status


if __name__ == '__main__':

    #This handles Twitter authetification and the connection to Twitter Streaming API
    l = StdOutListener()
    auth = OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_token, access_token_secret)
    stream = Stream(auth, l)

    #This line filter Twitter Streams to capture data by the keywords: 'python', 'javascript', 'ruby'
    stream.filter(track=['python', 'javascript', 'ruby'])

```

Here's the output:

```
  File ""twitterstreaming.py"", line 32, in <module>
    stream.filter(track=['python', 'javascript', 'ruby'])
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 445, in filter
    self._start(async)
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 293, in _run
    self.listener.on_exception(exception)
TypeError: on_exception() missing 1 required positional argument: 'exception'
```

As I understand this, the `on_exception()` method should have a `self` argument in the tweepy/streaming.py file. 

Why do I run into this?
"
712,Tag a new release,2016-03-19T23:26:41Z,,,,,"It looks like you forgot to tag a new release when making the 3.6.0 commit. Are you able to remedy this so that new packages can be created?
"
711,Tweet.py search method does not support pagination,2016-03-11T22:01:03Z,2016-03-22T17:35:48Z,,TweepError,TweepError: This method does not perform pagination,"I was reading over the pagination docs and it sounds great. From the tweetpy documentation `page` is a supported parameter. Am I doing something incorrect when I expect this behavior to work? 

http://docs.tweepy.org/en/v3.5.0/api.html#API.search

However when I try 

```
 for status in tweepy.Cursor(t.API.search(""#twitter"")).pages():
     print(status)
```

I get 

```
TweepError: This method does not perform pagination
```

Is this a missing feature?

same goes for `.items()`
"
710,Fixing #698,2016-03-08T23:25:26Z,2016-03-08T23:30:15Z,,,,"Fixing #698 by the fix proposed there

(I don't really know what this is doing or why, I just copy-pasted the suggested fix by @rxcomm )
"
709,Stream filter list with hashtag symbol,2016-03-08T14:18:40Z,,,,,"Hi,

When i add to stream track list keywords with the hashtag symbol (example ""#car""), the streamer doesn't find anything.

Is supposed to find tweets like [this one](https://twitter.com/AbiAutoParts/status/707208393648377856)?

Thanks
"
708,add missing streaming.py link,2016-03-07T22:42:53Z,,,,,"links streaming.py file from `examples` directory
"
707,How to get notified when a tweet is posted in a private list ,2016-03-07T06:25:32Z,,,,,"Hi,
Considering I am a member of the private list and I want to be notified(via api/or streaming ) when a new tweet is shot at the group.How do I achieve this with tweepy?
"
706,Logging message with Params shows nothing when using lookup_users,2016-03-02T15:58:32Z,,,,,"I noticed that when I call lookup_users, the params aren't in my log like other functions.

Code:

`
def get_info(master_acct, tweepy_conn, friends_list):
    """"""
    Takes list of ids and looks up info for each one, writing results to db as it goes
    :param master_acct:
    :param tweepy_conn:
    :param friends_list:
    :return:
    """"""
    # Break friend list into chunks the twitter API can work with
    chunked_list = utils.chunk(friends_list, 100)
    processed_counter = 1
    logging.info(""Processing {0} chunks."".format(len(chunked_list)))
    user_data_list = []
    chunk_counter = 0
    #look up users in batches
    while chunk_counter < len(chunked_list):
        user_list = []
        chunk = chunked_list[chunk_counter]
        # Get user daata for sqlite
        logging.info(""Processing Chunk {0} of {1}"".format(int(chunk_counter) + 1, len(chunked_list)))
        for result in tweepy_conn.lookup_users(user_ids=chunk):
            logging.info(""Processing #{0} of {1}: {2}"".format(processed_counter, len(friends_list), result.screen_name))
            #do cool shit
            user_data_list.append(user_data_dict)
            logging.info(""Added #{0} of {1}: {2}"".format(processed_counter, len(friends_list), result))
        chunk_counter += 1
    return user_data_list
`
Log:

[22:06:18] {C:\VM_Gateway\demo_code\app\bin\tw_func.py:194} INFO - Processing 37 chunks.
[22:06:18] {C:\VM_Gateway\demo_code\app\bin\tw_func.py:202} INFO - Processing Chunk 1 of 37
[22:06:18] {C:\Python27\lib\site-packages\tweepy\binder.py:107} INFO - PARAMS: {}

Using usertimeline:

[22:06:19] {C:\Python27\lib\site-packages\tweepy\binder.py:107} INFO - PARAMS: {'count': '200', 'include_retweets': 'False', 'screen_name': 'INF1N1TEMUSIC'}

Am I doing something wrong? 
"
705,create_friendship does not raise exception if same user_id is used twice,2016-02-27T23:33:53Z,,,,,"```
    user_id = 952148677
    try:
        self._api.create_friendship(user_id)
    except tweepy.error.TweepError as e:
        print('failed because of %s' % e.reason)
    try:
        self._api.create_friendship(user_id)
    except tweepy.error.TweepError as e:
        print('failed because of %s' % e.reason)    #this should fail, but it doesn't
```
"
704,"[docs] Lists can have 5,000 members",2016-02-21T09:09:33Z,,,,,"https://dev.twitter.com/rest/reference/post/lists/members/create

Also documents `add_list_members` to docs, which is there in code.

---

TODO for someone else for the future:
- [ ] check if `add_list_member` needs its documented params updating
- [ ] `remove_list_members` needs documenting
"
703,Retweeted quote statues does not parse correctly,2016-02-20T22:00:26Z,,,,,"I found tweepy does not parse it correctly if a quote status is retweeted. For example this statue id: `701159606064705536`. The status object I get with: 

```
s = api.statuses_lookup([701159606064705536])[0]
```

gives `s.retweeted` as `False` and `is_quote_status` as `True`.
"
702,Using tweepy with GAE - Enable Billing,2016-02-20T08:39:41Z,,,TweepError,TweepError: Failed to send request: The Socket API will be enabled for this application once billing has been enabled in the admin console.,"I have everything set up for tweepy on GAE, libraries are fine. But when making calls I get: 

TweepError: Failed to send request: The Socket API will be enabled for this application once billing has been enabled in the admin console.

The application already has billing enable at the admin console and yet I still keep getting this call. Are there workarounds to remove the use of sockets? I have no need for streaming. 
"
701,Added stall_warnings parameter support to sample(),2016-02-10T17:47:31Z,2016-02-17T08:28:00Z,,,,"Currently the stall_warnings parameter is unavailable for the sample endpoint.
"
700,Update doc version in README,2016-02-05T19:02:51Z,2016-02-05T22:33:32Z,,,,"You should also probably change the default version on read the docs; currently http://docs.tweepy.org/ gets you to 3.2.0.
"
699,"The object is not callable, so no parentheses.",2016-02-04T18:18:40Z,2016-02-05T22:35:49Z,,,,"Hi there.

I tried the code and had to remove the call from the `listener` argument in 

``` python
myStream = tweepy.Stream(auth = api.auth, listener=myStreamListener())
```

That is:

``` python
myStream = tweepy.Stream(auth = api.auth, listener=myStreamListener)
```

Thanks!
"
698,AttributeError: 'NoneType' object has no attribute 'strip',2016-02-02T23:52:42Z,2016-11-05T23:15:22Z,,AttributeError,AttributeError: 'NoneType' object has no attribute 'strip',"i've been getting this error for a while.

``` python
Traceback (most recent call last):
  File ""engine/twitter.py"", line 139, in <module>
    stream.filter(track=['#blood',], languages=['en'])
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 445, in filter
    self._start(async)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 361, in _start
    self._run()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 263, in _run
    self._read_loop(resp)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 313, in _read_loop
    line = buf.read_line().strip()
AttributeError: 'NoneType' object has no attribute 'strip'
```
"
697,is_list_member broken?,2016-01-28T05:54:29Z,,,,,"Hi,

I'm observing the following with v 3.5.0:

`api.list_members(settings['screen_name'], settings['list_slug'])`
This returns as per docs.

`api.is_list_member(settings['screen_name'], settings['list_slug'], 2916305152)`
Returns: `AttributeError: 'API' object has no attribute 'is_list_member`

There is no ""is_list_member"" in tweepy/api.py, however there is a show_list_member:

```
show_list_member(self):
        """""" :reference: https://dev.twitter.com/docs/api/1.1/get/lists/members/show
            :allowed_param:'list_id', 'slug', 'user_id', 'screen_name',
             'owner_screen_name', 'owner_id
```

Additionally it seems that there is an issue with get_list, suggesting that there is some broader issue with the list methods:

`api.get_list(screen_name=settings['screen_name'], slug=settings['list_slug'])`

returns ""tweepy.error.TweepError: [{u'message': u'You must specify either a list ID or a slug and owner.', u'code': 112}]""
"
696,Change str() to encode('utf-8') in utils.py,2016-01-26T11:28:49Z,2016-01-26T11:36:57Z,,,,"Fix for crashes on Unicode characters.
"
695,"'MyStreamListener' object is not callable""",2016-01-20T03:20:15Z,2016-02-05T22:35:28Z,,,,"Fix for ""TypeError: 'MyStreamListener' object is not callable""
"
694,Update streaming.py,2016-01-14T22:51:33Z,2016-11-05T23:17:19Z,,,,"if buf.read_line() returns none, then buf.read_line().strip() obviously fails

this feels like a kludge but it seems to work, and working is better than not working so maybe this is a useful pull request

---

edit: this might be fixed by PR#652 but I'm not sure
"
693,Added in_reply_to_status_id_str to allowed parameters,2016-01-06T12:11:09Z,2016-02-17T08:29:31Z,,,,"Python has issues representing status IDs with integers, so this will solve an issue when replying to tweets.

More info at https://dev.twitter.com/overview/api/tweets
"
692,Deserialize Return User Object,2016-01-05T18:18:24Z,2016-01-05T18:22:36Z,,,,"First, great module. I've used this many times already for different projects and even did a write up on this. Moving along, I'm trying to save user profiles to a json-text field in my postgres table.  Is there a way to serialize the user obj from API.get_user(screen_name/id) to either a json or a native python dictionary. Thanks
"
691,ProtocolError: IncompleteRead,2015-12-31T17:32:50Z,,,requests.packages.urllib3.exceptions.ProtocolError,"requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 512 more expected)', IncompleteRead(0 bytes read, 512 more expected))`","When streaming the tweets, I get the following issue, even though I try to fetch the tweets in `try` `except` block.

`File ""build/bdist.linux-x86_64/egg/tweepy/streaming.py"", line 445, in filter
  File ""build/bdist.linux-x86_64/egg/tweepy/streaming.py"", line 361, in _start
  File ""build/bdist.linux-x86_64/egg/tweepy/streaming.py"", line 294, in _run
requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 512 more expected)', IncompleteRead(0 bytes read, 512 more expected))`

Suggestions to nullify this?
"
690,Documentation – outdated bits,2015-12-30T11:08:48Z,,,,,"Two things I just noticed regarding your documentation:
- the ""Read the Docs"" menu on the start page of the [Tweepy website](http://www.tweepy.org/) links to https://tweepy.readthedocs.org/en/v3.2.0/ where the user is displayed a message saying ""You are not using the most up to date version of the library. 3.5.0 is the newest version."". It would make sense to link to the most up-to-date version https://tweepy.readthedocs.org/en/v3.5.0/ from the start page.
- for the Lists Methods on the [User Methods](https://tweepy.readthedocs.org/en/v3.5.0/api.html#user-methods) page, it says ""Creates a new list for the authenticated user. Accounts are limited to 20 lists."". This is very outdated info as that list limit was changed in 2013. (!) I would've submitted a PR but the ""Edit on GitHub"" link at the top right of the page leads to [this file](https://github.com/tweepy/tweepy/blob/v3.5.0/docs/api.rst) in your repo which doesn't actually reflect the text of the documentation...
"
689,Added status_update method to Getting Started,2015-12-27T02:19:55Z,2017-06-14T21:23:17Z,,,,"Just something to make the guide quicker to navigate, I was looking around and couldn't find this in the docs quickly. I think it'd be useful for people to see when they first open up the ""Getting Started"" page. 
"
688,Fixed typo in streaming_how_to.rst,2015-12-24T08:35:54Z,2016-02-05T22:38:54Z,,,,"We should be calling the instance of MyStreamListener(), which is myStreamListener. Not the object itself.
"
687,Image upload breaks with Requests 2.9.0 - Failed to send request,2015-12-22T11:33:51Z,2016-01-28T17:30:05Z,,TweepError,TweepError: Failed to send request: 'ascii' codec can't decode byte 0xff in position 180: ordinal not in range(128),"The stacktrace:

```
/home/yuri/virtualenvs/inbli-core/lib/python3.4/site-packages/tweepy/api.py in media_upload(self, filename, *args, **kwargs)
    209             require_auth=True,
    210             upload_api=True
--> 211         )(*args, **kwargs)
    212 
    213     def update_with_media(self, filename, *args, **kwargs):

/home/yuri/virtualenvs/inbli-core/lib/python3.4/site-packages/tweepy/binder.py in _call(*args, **kwargs)
    237             return method
    238         else:
--> 239             return method.execute()
    240 
    241     # Set pagination mode

/home/yuri/virtualenvs/inbli-core/lib/python3.4/site-packages/tweepy/binder.py in execute(self)
    187                                                 proxies=self.api.proxy)
    188                 except Exception as e:
--> 189                     raise TweepError('Failed to send request: %s' % e)
    190                 rem_calls = resp.headers.get('x-rate-limit-remaining')
    191                 if rem_calls is not None:

TweepError: Failed to send request: 'ascii' codec can't decode byte 0xff in position 180: ordinal not in range(128)
```

Downgrading requests back to 2.6.0 solved this for me.
I'll try to tajke a deeper look at some point.
"
686,statusus_lookup() enpoint not recognizing keyword args id and map,2015-12-17T18:48:33Z,,,,,"I can't use the 'id' or the 'map' keyword arguments. The call works if I just pass a list of tweet ids, like api.statuses_lookup(id_list) but if I call api.statuses_lookup(id=id_list, map=True) I get an error: statuses_lookup() got an unexpected keyword argument 'id'. What am I doing wrong?
"
685,stream: Preserve re-raised exception traceback,2015-12-14T09:55:41Z,2016-11-06T13:57:48Z,,,,"Using a bare `raise` will automatically raise the last caught exception in a way that preserves the original traceback. See the answers to this SO question for more details: http://stackoverflow.com/questions/4825234/exception-traceback-is-hidden-if-not-re-raised-immediately
"
684,Proxy Setup,2015-12-14T08:09:28Z,2016-02-17T08:31:40Z,,,,"Add proxy setup
"
683,Invalid JSON format,2015-12-06T16:40:13Z,,,_Error,"_Error: Parse error on line 77: ...""1449418853091""}{ ""created_at"": ""Su -------------------^ Expecting 'EOF', '}', ',', ']', got '{'_","When i used **tweety** and trying to store JSON data i get an error json format (i double check it with jsonlint.com and jsoneditoronline.org ). 

In more details i got the following error :
_Error: Parse error on line 77: ...""1449418853091""}{ ""created_at"": ""Su -------------------^ Expecting 'EOF', '}', ',', ']', got '{'_

It seems that when the first object finished something missed. :-1: 

Below i put the code used to get json data.

`from tweepy.streaming import StreamListener`
`from tweepy import OAuthHandler`
`from tweepy import Stream`

`access_token = 'MY TOKEN'`
`access_token_secret = 'MY TOKEN'`
`consumer_key = 'MY TOKEN'`
`consumer_secret = 'MY TOKEN'`

`class StdOutListener(StreamListener):`

```
def on_data(self, raw_data):
    print (raw_data)
    return True

def on_error(self, status):
    print (status)`
```

`if __name__ == '__main__':`
    `l = StdOutListener()`
    `auth = OAuthHandler(consumer_key, consumer_secret)`
    `auth.set_access_token(access_token, access_token_secret)`
    `stream = Stream(auth, l)`
    `stream.filter(track=['test'])`
"
682,Add extra instructions on how to create a Twitter app and create Tokens,2015-12-05T15:56:58Z,,,,,"The documentation was not very clear on how to create a Twitter App and get tokens.
@LadieswhoCode @codebar
"
681,More information needed on how to run tests,2015-12-05T13:09:26Z,,,ImportError,ImportError: No module named http_client,"Hi, I'm a first time open source contributor and I'm trying to make a pull request, but I'm having issues running the tests.  I think the documentation could be clearer on how to set up the testing environment, as it's non-trivial for newbies.

After installation, I did `pip install -r test_requirements.txt`

From the tweepy directory I tried to run `nosetests tests/test_api.py`.  This resulted in the following stack trace, which I am unsure of how to resolve.  
# 
## ERROR: Failure: ImportError (No module named http_client)

Traceback (most recent call last):
  File ""/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/nose-1.3.4-py2.7.egg/nose/loader.py"", line 414, in loadTestsFromName
    addr.filename, addr.module)
  File ""/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/nose-1.3.4-py2.7.egg/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/nose-1.3.4-py2.7.egg/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/tinazhang/Documents/GitHub/24PR/tweepy/tests/test_api.py"", line 12, in <module>
    from .config import TweepyTestCase, username, use_replay, tape
  File ""/Users/tinazhang/Documents/GitHub/24PR/tweepy/tests/config.py"", line 3, in <module>
    import vcr
  File ""/Library/Python/2.7/site-packages/vcr/**init**.py"", line 2, in <module>
    from .config import VCR
  File ""/Library/Python/2.7/site-packages/vcr/config.py"", line 6, in <module>
    from .cassette import Cassette
  File ""/Library/Python/2.7/site-packages/vcr/cassette.py"", line 12, in <module>
    from .patch import CassettePatcherBuilder
  File ""/Library/Python/2.7/site-packages/vcr/patch.py"", line 8, in <module>
    from .stubs import VCRHTTPConnection, VCRHTTPSConnection
  File ""/Library/Python/2.7/site-packages/vcr/stubs/**init**.py"", line 9, in <module>
    from six.moves.http_client import (
ImportError: No module named http_client

---

Ran 1 test in 0.001s

FAILED (errors=1)
"
680,The search_user api can only return 20 users.,2015-12-03T18:54:19Z,,,,,"I use search_user to find some users. When I tried to test this api, I used the following code:

def Search(query): {
    users = Tweeapi.search_users(q=query, per_page=20, page=3)
    print len(users)
}
Search('John')
(Sorry the indent is not shown here. So I use {} to indicate the body of the Search method.)
John is a very common key word on twitter and I'm sure there are definitely more than 20 users containing this word. However, the length of the users list is only 20, that is, only 20 users are extracted. How can I store more users?
"
679,Fastest way to download last image of a twitter account ,2015-12-03T13:10:23Z,,,,,"Hi!
I have two questions for you:
What is the fastest way to download last image of a twitter account?
There is a way to download only an image from a twitter account where, in the tweet, is present a particular hashtag?

Thank you everybody.
"
678,Silent fail / on_data not returning data,2015-11-28T15:42:59Z,,,,,"Hi - I'm trying to build a stream listener that will respond to direct messages from an account that is both followed/a follower, however, the on_data method does not appear to be returning data that can be parsed/acted upon by the rest of the script. I've tried both overriding the method and using the super method. The follow argument in the filter method would be the Twitter id (as a string) for my personal twitter account (the script waits for a specific text from my account and then does other stuff).

import tweepy
import json

CON_KEY = ""###""
CON_SEC = ""###""
ACC_TOK = ""###""
ACC_SEC = ""###""

auth = tweepy.auth.OAuthHandler(CON_KEY, CON_SEC)
auth.set_access_token(ACC_TOK, ACC_SEC)
api = tweepy.API(auth_handler=auth)

class FirstStream(tweepy.StreamListener):
        def on_data(self, data):
            super().on_data(data)
            json_data = json.loads(data)
            print(json_data['text'])
            return True

fs = FirstStream
aStream = tweepy.streaming.Stream(auth=api.auth, listener=fs())
aStream.filter(follow=['###'], track=['#python'])
"
677,Correct typo at line 69,2015-11-24T10:57:51Z,2016-02-17T08:30:45Z,,,,
676,Allow alternate rate limit notifications,2015-11-22T23:47:07Z,,,,,"Allow a callable to be passed to `wait_on_rate_limit_notify` so that a rate limit notice can trigger actions other than logging a warning.
"
675,Fixes stream timeouts on shotty connections,2015-11-22T14:30:18Z,,,,,"Now catches ConnectionError, ReadTimeOutError, ProtocolError in addition to Timeout, ssl.SSLError during stream, handling as a timeout to resolve #617 per suggestion by @jcapde87
"
674,"TypeError: the JSON object must be str, not 'NoneType'",2015-11-16T04:53:27Z,,,TypeError,"TypeError: the JSON object must be str, not 'NoneType'","My script (using streaming API) halted with the following traceback:

```
Traceback (most recent call last):
  File ""marisachan.py"", line 70, in main
    stream.userstream()
  File ""/home/utgw/.pyenv/versions/3.5.0/lib/python3.5/site-packages/tweepy/streaming.py"", line 395, in userstream
    self._start(async)
  File ""/home/utgw/.pyenv/versions/3.5.0/lib/python3.5/site-packages/tweepy/streaming.py"", line 362, in _start
    self._run()
  File ""/home/utgw/.pyenv/versions/3.5.0/lib/python3.5/site-packages/tweepy/streaming.py"", line 295, in _run
    raise exception
  File ""/home/utgw/.pyenv/versions/3.5.0/lib/python3.5/site-packages/tweepy/streaming.py"", line 264, in _run
    self._read_loop(resp)
  File ""/home/utgw/.pyenv/versions/3.5.0/lib/python3.5/site-packages/tweepy/streaming.py"", line 325, in _read_loop
    self._data(next_status_obj)
  File ""/home/utgw/.pyenv/versions/3.5.0/lib/python3.5/site-packages/tweepy/streaming.py"", line 298, in _data
    if self.listener.on_data(data) is False:
  File ""/home/utgw/.pyenv/versions/3.5.0/lib/python3.5/site-packages/tweepy/streaming.py"", line 50, in on_data
    data = json.loads(raw_data)
  File ""/home/utgw/.pyenv/versions/3.5.0/lib/python3.5/json/__init__.py"", line 312, in loads
    s.__class__.__name__))
TypeError: the JSON object must be str, not 'NoneType'
```
"
673,Can someone find the fault in this small piece of code?,2015-11-14T21:36:56Z,2016-11-05T23:58:47Z,,SyntaxError,SyntaxError: invalid syntax,"So what i'm trying to do is take a sample tweet, and follow the recent 20 people who retweeted that tweet

import tweepy

consumer_key = 'XXXXXXXXXXXXXXXXXXXXXX'
consumer_secret = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
access_token = '624837175-XXXXXXXXXXXXXXXXXXX'
access_token_secret = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

api = tweepy.API(auth)

retwts = api.retweets(id=665594047684300800, count=20)

for status in retwts
api.create_friendship(id=retwts)

I'm very new to programming sorry if that code was dumb but that was the best i could do by reading the docs, and it obviously isn't working. Can someone tell me where is the problem?

This is the error:-

File ""tweepybot.py"", line
for status in retwts
^
SyntaxError: invalid syntax

Thank you in advance.
"
672,Video upload,2015-11-13T02:43:30Z,2017-09-22T14:39:32Z,,,,"As I mentioned in #655, this is an alternate way of adding video upload. The media_upload method gets a conditional, with smaller images routed to 'normal' upload, and larger images and videos chunked upload. I also moved upload limits to a class variable, to make them easier to change if the need arises.

This also fixes from unicode errors as flagged by @jeremylow.
"
671,Make stream run forever,2015-11-11T18:53:07Z,2016-11-05T23:58:56Z,,,,"How to make sure it's run forever without any interruption even i close my terminal.

Please advice. Thank you.
"
670,Python version 2.7.8,2015-11-10T17:17:14Z,2015-11-29T21:52:25Z,,,,"Hello all,
Just wondering if tweepy works with Python 2.7.8.

Thanks in advance
"
669,"""list index out of range""",2015-11-05T21:07:53Z,,,"Exception, IndexError","Exception: list index out of range, IndexError: list index out of range","```
Exception: list index out of range
Traceback (most recent call last):
  File ""bot.py"", line 155, in <module>
    listen()
  File ""bot.py"", line 145, in listen
    stream.userstream(_with='user')
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 379, in userstream
    self._start(async)
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 346, in _start
    self._run()
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 286, in _run
    raise exception
IndexError: list index out of range
```

Unable to find bug in our implementation of StreamListener, so I could be wrong but this seems to be a Tweepy error ?
"
668,I keep getting error 401 yet im pretty sure everything with my code is correct,2015-11-04T21:18:53Z,2016-11-05T23:59:11Z,,,,"I am trying to stream tweets using my application based on certain filter words. But i keep getting an erro of 401 on the terminal yet I have verified that my aunthentication details are correct.
"
667,Fix duplicate raise in auth.py,2015-11-04T20:34:03Z,2015-11-05T04:52:50Z,,,,"Hi,

I'm not sure, but I think this is a bug. So I removed this duplicate raise in auth.py

``` python
    def get_authorization_url(self,
                              signin_with_twitter=False,
                              access_type=None):
        """"""Get the authorization URL to redirect the user""""""
        try:
            if signin_with_twitter:
                url = self._get_oauth_url('authenticate')
                if access_type:
                    logging.warning(WARNING_MESSAGE)
            else:
                url = self._get_oauth_url('authorize')
            self.request_token = self._get_request_token(access_type=access_type)
            return self.oauth.authorization_url(url)
        except Exception as e:
            raise
            raise TweepError(e)
```

:)
"
666,Explicitly return api code when parsing error,2015-11-04T10:09:16Z,2015-11-10T08:54:09Z,,,,
665,Error while using custom ModelParser,2015-11-04T08:01:33Z,,,ValueError,ValueError: too many values to unpack,"I had a simple custom ModelParser:

``` py
class TweetParser(ModelParser):
    def parse(self, method, payload):
        return json.loads(payload)
```

and use it to construct an API

``` py
_api = tweepy.API(
                auth_handler=self._auth,
                parser=TweetParser()
            )
```

Using this api to get followers_ids of a  user:

``` py
 cur = tweepy.Cursor(
            method=_api.followers_ids,
            user_id=user_id,
            screen_name=screen_name,
            count=count
        )
        try:
            for page in cur.pages():
                yield page
        except (tweepy.TweepError, tweepy.RateLimitError) as e:
            self.logger.error(e)
            raise ServiceErrorException(e)
```

I got the error:

``` py
2015-11-04 06:26:44,869 - Worker - ERROR - too many values to unpack
Traceback (most recent call last):
  File ""/home/duy/virtualenvs/***/code/***/jq/worker.py"", line 64, in on_message_received
    self.process_job_message(payload)
  File ""/home/duy/virtualenvs/***/code/***/jq/worker.py"", line 84, in process_job_message
    result = job.run(**kwdict(job_message.get('body', {})))
  File ""/home/duy/virtualenvs/***/code/***/jobs/twitter/network_discovery.py"", line 12, in run
    for follower_ids in self.twitter_service.get_followers_ids(user_id=sns_id):
  File ""/home/duy/virtualenvs/***/code/***/services/twitter.py"", line 149, in get_followers_ids
    for page in cur.pages():
  File ""/home/duy/virtualenvs/***/local/lib/python2.7/site-packages/tweepy/cursor.py"", line 75, in next
    **self.kargs)
ValueError: too many values to unpack
```

Every thing works fine if I don't use a custom ModelParser.

Is it a bug?
"
664,Allow 'full_text' param when getting direct messages,2015-11-01T17:31:54Z,2015-11-03T03:12:12Z,,,,
663,Added streaming_how_to.rst to the docs index.,2015-10-31T09:21:50Z,2015-11-03T03:12:51Z,,,,"Up until now, there's _been_ a how-to for the streaming API, but there hasn't been any obvious way to access it. The two ways to get to the page has been googling it and using the search function of Read the Docs.

This pull request adds `streaming_how_to.rst` to the documentation index, so it's more easily accessed.
"
662,Slight correction of a comment in the examples.,2015-10-30T12:08:37Z,2015-11-03T03:13:10Z,,,,"Just a minor spelling/grammar issue.
"
661,"Update_status fails silently when status starts with ""@ing"" anyone",2015-10-28T16:16:41Z,2015-10-28T16:45:03Z,,,,"After a long debugging session, pinpointed our issue with the discovery that:

 `api.update_status( status = ""@<user>"" )`

does not update status..but raises no errors, while

 `api.update_status( status = ""oh hey, @<user>"" )`

works fine.

[Tweeting directly from Twitter website, `""@user""`  also works fine. ]
"
660,Documented exceptions and how to handle them,2015-10-15T13:56:40Z,2015-11-03T03:12:53Z,,,,"The fact that `TweepError` and `RateLimitError` aren't really documented anywhere (especially the latter) is a bit of a problem.

This pull requests adds the exceptions to the docs, and adds a code snippet for working with the rate limit while using cursors.
"
659,Error while using api.update_status('hello'),2015-10-11T08:27:01Z,2016-06-14T09:24:33Z,,"Error, tweepy.error.TweepError","Error:, tweepy.error.TweepError: Failed to send request: cannot make memory view because object does not have the buffer interface","Getting this error while running api.update_status('hello')
Library is imported perfectly and all keys are verified to be truely entered.

Error:
Traceback (most recent call last):
  File ""runme.py"", line 12, in <module>
    api.update_status('tweepy + oauth!')
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/api.py"", line 193, in update_status
    )(post_data=post_data, _args, *_kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 243, in _call
    return method.execute()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 189, in execute
    raise TweepError('Failed to send request: %s' % e)
tweepy.error.TweepError: Failed to send request: cannot make memory view because object does not have the buffer interface
"
658,Test case for PR #635 (and bug #615) ,2015-10-07T07:52:46Z,2015-11-03T03:15:35Z,,,,"There was already a test case for `ReadBuffer` but it wasn't run and was broken anyway, so bug #615 was not caught.

Here's a patch on top of @varzac's fix on #635 which tests that fix. Passes under 2.7 and 3.4, at least.
"
657,Error when sending GIF with Tweepy,2015-10-02T13:34:38Z,,,tweepy.error.TweepError,tweepy.error.TweepError: Failed to send request:,"Hi,

I want to send a GIF with Tweepy but I've an error whereas with an JPG or PNG, it's ok.
Here is the simple script:

``` python
#!/usr/bin/python

import tweepy

CONSUMER_KEY = """"
CONSUMER_SECRET = """"
ACCESS_TOKEN = """"
ACCESS_TOKEN_SECRET = """"

auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)

api = tweepy.API(auth)

api.update_with_media(filename=""/root/image.gif"")
```

The error encountered :

```
Traceback (most recent call last):
  File ""./test.py"", line 15, in <module>
    api.update_with_media(filename=""/root/image.gif"")
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/api.py"", line 231, in update_with_media
    )(*args, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 243, in _call
    return method.execute()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 189, in execute
    raise TweepError('Failed to send request: %s' % e)
tweepy.error.TweepError: Failed to send request:
```

tweepy 3.4.0
python 2.7.9
debian 8.2

Any idea ?
Thanks
"
656,Cannot set filter to stream,2015-09-30T06:22:46Z,,,TypeError,TypeError: Can't convert 'bytes' object to str implicitly,"I am using stream API to get streams from tweepy.

When I do simple call,

stream = tweepy.Stream(auth, l)
stream.filter(track=['programming'])

I am getting following error. - 

Traceback (most recent call last):
  File ""C:\Python34\lib\threading.py"", line 920, in _bootstrap_inner
    self.run()
  File ""C:\Python34\lib\threading.py"", line 868, in run
    self._target(_self._args, *_self._kwargs)
  File ""C:\Python34\lib\site-packages\tweepy-3.4.0-py3.4.egg\tweepy\streaming.py"", line 286, in _run
    raise exception
  File ""C:\Python34\lib\site-packages\tweepy-3.4.0-py3.4.egg\tweepy\streaming.py"", line 255, in _run
    self._read_loop(resp)
  File ""C:\Python34\lib\site-packages\tweepy-3.4.0-py3.4.egg\tweepy\streaming.py"", line 298, in _read_loop
    line = buf.read_line().strip()
  File ""C:\Python34\lib\site-packages\tweepy-3.4.0-py3.4.egg\tweepy\streaming.py"", line 171, in read_line
    self._buffer += self._stream.read(self._chunk_size)
TypeError: Can't convert 'bytes' object to str implicitly

It has been hours since I tried every combination and nothing works. Please help me out here!
"
655,Video Upload,2015-09-28T10:25:38Z,,,,,"Make tweepy handle MP4 videos upload according to the Twitter API documentation for chunked uploads :
https://dev.twitter.com/rest/public/uploading-media#chunkedupload
"
654,Update setup.py,2015-09-20T18:26:56Z,2015-09-20T18:27:14Z,,,,
653,Python 3.5 is out,2015-09-15T07:25:45Z,2015-11-03T03:16:13Z,,,,"So test it on Travis CI.

Travis CI also has Python 2.6 and 3.3, so because Tweepy supports them it's a good idea to test them too.
"
652,Fixed streaming Python 3 crash in a way that supports UTF-8,2015-09-12T16:19:26Z,2016-11-05T23:19:29Z,,,,"Might want to ignore the README.md change...
"
651,gevent support in streaming.py ReadBuffer,2015-09-11T21:03:44Z,,,,,"Tweepy's custom implementation of a read buffer without using sockets doesn't work using gevent's cooperative scheduling. gevent normally patches sockets and can handle code that uses its patched sockets transparently. However, Tweepy circumvents this.

Is there a way to make this work? Has anyone tried?
"
650,Connection broken: IncompleteRead,2015-09-09T06:33:40Z,,,requests.packages.urllib3.exceptions.ProtocolError,"requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 512 more expected)', IncompleteRead(0 bytes read, 512 more expected))","This happened and wasn't handled properly. Expected behaviour - reconnection

```
Traceback (most recent call last):¡ãç°¡å
  File ""./feeder.py"", line 78, in <module>
    stream.filter(**filterargs)
  File ""build/bdist.linux-x86_64/egg/tweepy/streaming.py"", line 430, in filter
  File ""build/bdist.linux-x86_64/egg/tweepy/streaming.py"", line 346, in _start
  File ""build/bdist.linux-x86_64/egg/tweepy/streaming.py"", line 286, in _run
requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 512 more expected)', IncompleteRead(0 bytes read, 512 more expected))
```
"
649,Fixing arguments in bind,2015-09-08T09:37:58Z,2015-09-08T09:41:15Z,,,,
648,Merge pull request #1 from tweepy/master,2015-09-07T20:14:55Z,2015-09-07T20:17:16Z,,,,"Merge
"
647,Version 0.1 is installed via PIP,2015-09-05T10:23:05Z,2017-01-13T12:20:34Z,,,,"Update???
"
646,406 on Filter stream,2015-09-01T23:57:54Z,,,,,"I'm trying to stream data from Twitter using a filter like so: 

`self.oStream.filter(track=['nfl', 'broncos', 'patriots', 'seahawks'], async=True)`

(Avoided pasting the setup code)

The call works fine on my local laptop (Mac Yosemite), however when I push the code to digital ocean vm running Ubuntu 14.04 LTS I get a 406 error code in responce, both my Mac and the server run Python 2.7.6.

I am literally running the same code locally as I do on Digital Ocean so I'm not certain why one would return a 406 and the other would return intended results. I went as far as pulling down the code from DO and doing a diff, there was no difference.

Any idea what might be going on here?
"
645,Tweep Error when pulling Followers,2015-09-01T22:07:11Z,,,TweepError,"TweepError: Failed to send request: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))","I've been using tweepy to pull follower information. After about 8 or 9 pulls, or around 2000 followers, tweepy throws and error, that reads:

TweepError: Failed to send request: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))

How might I write the script to ignore this error and continue pulling followers?
"
644,api.update_status call in documentation,2015-08-29T11:18:14Z,,,,,"In docs/auth_tutorial.rst, there is an example : ""api.update_status('tweepy + oauth!')""
However, using api.update_status('tweepy + oauth!') creates an Twitter error 400.
To fix it, you have to write status =‘tweepy + oauth!’  in the
parameters —> api.update_status(status = ’tweepy + oauth!')
(fix found here http://stackoverflow.com/questions/19337672/post-tweet-with-tweepy )

Could you please change the documentation to reflect this and help beginners like me ?

Thank you for all your work !
"
643,'with_media' is deprecated will Tweepy support the new method?,2015-08-29T00:16:07Z,,,,,"According to Twitter the [update_with_media](https://dev.twitter.com/rest/reference/post/statuses/update_with_media) endpoint is deprecated. Are there plans to update Tweepy to support the `POST statuses/update` method? I see the `API.update_status` already supports passing in of media_ids, so can I assume this is something that is in the works?
"
642,API._pack_image raise UnicodeDecodeError,2015-08-20T22:17:50Z,,,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 66: ordinal not in range(128),"``` python
API._pack_image(u'/home/xx/føø', 700)
```

UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 66: ordinal not in range(128)
"
641,"Connection aborted. BadStatusLine(""''"",) and  10054 An existing connection was forcibly closed",2015-08-20T15:39:01Z,,,,,"I am trying to get followers for a list of users and I am using Python 2.7.10 with Tweepy 3.4.0 for it. My script gives these errors message after each rate limit:

1) TweepError Failed to send request: ('Connection aborted.', error (10054, 'An existing connection was forcibly closed by the remote host')) 
2)TweepError Failed to send request: ('Connection aborted.', BadStatusLine(""''"",))

Do you have any ideas?

Thanks

---
# My script

```
        import tweepy
        import time
        import csv

        consumer_key = ''
        consumer_secret = ''
        access_token = ''
        access_token_secret = ''

        auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
        auth.secure = True
        auth.set_access_token(access_token, access_token_secret)
        api = tweepy.API(auth)

        getconn = open('/Users/eabanoz/Desktop/Friends/TonT.User.List.csv','Ur')

        userids = [r[""screen_name""] for r in csv.DictReader(getconn)]

        ""#get userids from csv file that have already been collected""
        userids2 = set([r['ScreenName'] for r in csv.DictReader(open('/Users/eabanoz/Desktop/Friends/TonT.Friends.csv','rU'))])

        ""# get list of error users""
        userids3 = set([l.strip() for l in open('/Users/eabanoz/Desktop/Friends/TonT.Friends_Error_User_List.csv')])

        userids = set(userids).difference(userids2)
        userids = set(userids).difference(userids3)

        outfile = csv.DictWriter(open('/Users/eabanoz/Desktop/Friends/TonT.Friends.csv','ab'), fieldnames=('ScreenName', 'UserID', 'FollowerScreenName'))

        error_users = open('/Users/eabanoz/Desktop/Friends/TonT.Friends_Error_User_List.csv','a')

        for user_id in userids:
            c = tweepy.Cursor(api.friends,screen_name=user_id).pages()
            friend_list=[]
            while True:
                try:
                    friends = c.next()

                    for friend in friends:

                        userid = friend.id
                        screenName = friend.screen_name
                        print screenName

                        friend_list.append(
                            { 'ScreenName': user_id, 'UserID': str(userid), 'FollowerScreenName': screenName } )

                except tweepy.TweepError,e:

                        print 'TweepError', e

                        if type(e.message)=='str':
                            print 'TWEEPY ERROR NOT RATE LIMIT - may need to restart script'
                            break
                        elif e.message[0][""code""]==88:
                            print 'RATE LIMIT - waiting 15 minutes...'
                            time.sleep(60*15)
                            continue

                        else:
                            ""# assume the user is raising some Tweepy error, e.g. page doesn't exist""
                            error_users.write(user_id+'\n')
                            break

                except StopIteration:
                        print 'Done with: ' + str(user_id)
                        break;
            outfile.writerows(friend_list)
```
"
640,Now we can post video via tweepy?,2015-08-12T01:04:01Z,,,,,"I read this post on twitter blogs:
https://blog.twitter.com/2015/rest-api-now-supports-native-video-upload

And i would like know if now is possible post videos on twitter via tweepy?!
"
639,Tweepy on AppEngine - The Socket API Billing Error,2015-07-31T00:06:24Z,,,,,"I got this error message when trying to do a call on AppEngine

`The Socket API will be enabled for this application once billing has been enabled in the admin console.`

Is there any way to avoid socket api with Tweepy?
"
637,Fix streaming.py to run on BOTH PY3 and py2,2015-07-27T07:57:48Z,2015-07-27T22:18:47Z,,,,
636,make update_status example work better,2015-07-26T05:56:44Z,2015-08-21T22:03:55Z,,,,"I was getting the error mentioned in [this stack overflow question](https://stackoverflow.com/questions/28527352/traceback-when-updating-status-on-twitter-via-tweepy) and found that [this answer](http://stackoverflow.com/a/28527452/1024811) solved the problem.
"
635,Handle content-type header charset value for streaming API,2015-07-23T20:53:15Z,2015-11-03T03:15:36Z,,,,"I tested on python 3.4 and python 2.7.

I was unable to get the tox tests properly running on my machine.  This should fix #615 properly as well as properly use the content-type charset http header if it is present.

Closes #615
"
634,Install Tweepy Error,2015-07-20T18:52:33Z,,,ImportError,ImportError: No module named setuptools,"C:\users\phaneuf_k\desktop\tweepy>python setup.py install
Traceback <most recent call last>:
    File ""setup.py"", line 4, in <module>
        from setuptoools import setup, find_packages
ImportError: No module named setuptools
"
633,Parse quoted_status dict to Status object,2015-07-18T23:30:53Z,2016-02-17T08:23:38Z,,,,"The quoted_status property of a Tweet is not currently being parsed but it is stored as a simple dict.

I think it would better to be consistent and convert it to a Status object just like retweeted_status.
"
632,Parsing direct messages?,2015-07-15T20:29:32Z,,,,,"Hello
I see parsers.py and models.py, and can't help but wonder:
Is tweepy parsing the direct messages received through the streaming API into a python list or dict that I could use? Example code:
# Small utility to stream for the user that's authenticated
# Triggers and other stuff coming later

import tweepy
from secrets import \* # import app keys
from keys import \* #import our user keys
# do auth stuff

auth = tweepy.OAuthHandler(c_key, c_secret) 
auth.set_access_token(token, token_secret)
api = tweepy.API(auth) # Get our API object

class StdOutListener(tweepy.StreamListener):
    def on_connect( self ):
        print(""Connection to twitter established!!"")

```
def on_disconnect( self, notice ):
    print(""Connection to twitter lost!! : "", notice)

def on_status( self, status ):
    print (""Status update received."")
    print(status)
    return True

def on_direct_message( self, status ):
    print(""Direct message received."")
    try:
        # This needs to be able to pull the name, screenname, and message into variables, not sure how
        #Now it's just printing raw JSON, but I'm sure tweepy is doing some parsing...
        print(status.text)
        return True
    except BaseException as e:
        print(""Failed to parse direct message. ""str(e))

def on_error( self, status ):
    print(status)
```

def main():

```
try:
    print ""Starting userstream for ""+api.me().name
    stream = tweepy.Stream(auth, StdOutListener())
    stream.userstream()

except BaseException as e:
    print(""Error in main function"", e)
```

if **name** == '**main**':
    main()
"
631,Is there smarter way to use streaming api request parameters?,2015-07-11T09:36:07Z,2015-07-15T04:35:05Z,,,,"I want to use tweepy to log my userstream with streaming api request parameters.
Following samples, I couldn't get right response with 'with', 'replies', 'include_followings_activity' parameter.

I did like following code to use these request parameters, is there any smarter way to achieve my purpose without reading codes inside library.

``` python
listener = Lister()
options = dict();
options['retry_count']=10
stream = tweepy.Stream(auth=auth, listener=listener, options=options)
stream.body=dict()
stream.body['replies']='all'
stream.body['with'] = 'followings'
stream.body['include_followings_activity']='true'
stream.userstream()
```
"
630,"Error running documentation example ""Hello Tweepy""",2015-07-06T23:50:55Z,2015-07-07T17:57:37Z,,"AttributeError, ImportError","AttributeError: 'module' object has no attribute 'OAuthHandler', ImportError: No module named 'tweepy.auth'; 'tweepy' is not a package","Can't get the example documentation ""Hello Tweepy"" to run:

http://tweepy.readthedocs.org/en/v3.2.0/getting_started.html#hello-tweepy

I'm running python 3.4.3 and tweepy 3.3.0 (installed via pip):

• [joaocasaltanabais@Joaos-MacBook-Pro:~/Projects/examples] $ python3.4 tweepy_example.py 
Traceback (most recent call last):
  File ""tweepy_example.py"", line 1, in <module>
    import tweepy
  File ""/Users/joaocasaltanabais/Projects/examples/tweepy_example.py"", line 3, in <module>
    auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
AttributeError: 'module' object has no attribute 'OAuthHandler'

Found some guidance in a thread in http://stackoverflow.com/questions/26075001/error-with-tweepy-oauthhandler

however if I change the code to:

```
from tweepy.auth import OAuthHandler

auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
```

I get:

• [joaocasaltanabais@Joaos-MacBook-Pro:~/Projects/examples] $ python3.4 tweepy_example.py 
Traceback (most recent call last):
  File ""<frozen importlib._bootstrap>"", line 2218, in _find_and_load_unlocked
AttributeError: 'module' object has no attribute '__path__'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""tweepy_example.py"", line 1, in <module>
    from tweepy.auth import OAuthHandler
  File ""/Users/joaocasaltanabais/Projects/examples/tweepy_example.py"", line 1, in <module>
    from tweepy.auth import OAuthHandler
ImportError: No module named 'tweepy.auth'; 'tweepy' is not a package

Can you please help?

Best,
João.
"
629,Added full params to .friends(),2015-07-05T17:33:47Z,2015-07-30T06:57:19Z,,**Note**,**Note**: that `include_user_entities` currently doesn't appear to have an effect on the what data is returned.,"Added the 'skip_status' and 'include_user_entities' to the .friends() method. This now aligns with the latest options available in the Twitter API for [the method call](https://dev.twitter.com/rest/reference/get/friends/list).

These two options allow you to toggle how much information you want returned from the API.

``` python
friends = api.friends()
# friends is now a list of users including their latest status

friends = api.friends(skip_status=False)
# friends is now a list of users without their latest status
```

The API documentation file was also updated to reflect these changes.

**Note**: that `include_user_entities` currently doesn't appear to have an effect on the what data is returned.
"
628,Malformed exception when parsing protected or suspended accounts,2015-07-03T12:44:31Z,2015-11-10T21:55:24Z,,,,"When trying to parse a timeline which is proteced (e.g. https://twitter.com/tollabox) or suspended, the exception that is thrown does not contain any useful information.

Accessing the exception in the normal way `e.message[0]['messsage']` causes a new exception: 
"
627,follower ids vs followers list,2015-07-02T20:17:23Z,,,,,"Wondering why when getting a list of followers (outside of the memory and slightly more complex logic) it uses the direct `followers/list` API endpoint rather than combinding`followers/ids` and `users/lookup` to return full user objects?

With User-Auth scope, you're looking at (per 15-minute window):

| API | Max Return/Call Size | Requests / 15-min window | Total Results Per Window |
| --- | --- | --- | --- |
| `followers/list` | 200 | 15 | 3000 |
| `followers/ids` | 5000 | 15 | 75000 |
| `users/lookup` | 100 | 180 | 18000 |

So getting the IDs then looking up via `users/lookup` will get you the same thing as `followers/list` but 6 times quicker for larger result sets, unless I'm missing something?
"
626,Error while installation,2015-07-02T04:43:47Z,2015-07-02T04:47:36Z,,TypeError,TypeError: parse_requirements() got an unexpected keyword argument 'session',"During pip installation got error as below, tried on python 2.6.6 and 2.7.6 on CentOS

Downloading/unpacking tweepy
  Downloading tweepy-3.3.0.tar.gz
  Running setup.py egg_info for package tweepy
    Traceback (most recent call last):
      File ""<string>"", line 16, in <module>
      File ""/tmp/pip-build-root/tweepy/setup.py"", line 17, in <module>
        install_reqs = parse_requirements('requirements.txt', session=uuid.uuid1                                        ())
    TypeError: parse_requirements() got an unexpected keyword argument 'session'
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File ""<string>"", line 16, in <module>

  File ""/tmp/pip-build-root/tweepy/setup.py"", line 17, in <module>

```
install_reqs = parse_requirements('requirements.txt', session=uuid.uuid1())
```

TypeError: parse_requirements() got an unexpected keyword argument 'session'

---

Command python setup.py egg_info failed with error code 1 in /tmp/pip-build-root                                        /tweepy
Storing complete log in /root/.pip/pip.log
"
625,search_users Error,2015-06-29T11:52:33Z,,,,,"## search_users (Missing or invalid url parameter, code 47) Error

Hi, 
I'm facing with a TweepyError coming from this lines of code:

``` python
try:
    twapi = tweepy.API(auth,retry_count=10,retry_delay=60,retry_errors=['104','47'],
                                   wait_on_rate_limit=True,wait_on_rate_limit_notify=True) 
    users_stream = twapi.search_users(q=users_loginname_list)
except tweepy.error.TweepError, ex:
    print ex
```

The error arisen is this:

``` python
[{u'message':u'Missing or invalid url parameter.', u'code': 47}]
```

The strange thing is that the Tw Search method works properly until a random call, in which this 
error is arisen. I really don't know right know if there is a way to fix it; I hope to receive a fast 
reply, because I'm working on Twitter for Data Mining purpose, so I should have some 
results in few days. Thank you for your future help! 
"
624,Can't encode Non-BMP character,2015-06-28T00:34:15Z,,,"""UnicodeEncodeError","""UnicodeEncodeError: 'UCS-2' codec can't encode character '\U0001f308' in position 0: Non-BMP character not supported in Tk"", ","I get an error saying 

""UnicodeEncodeError: 'UCS-2' codec can't encode character '\U0001f308' in position 0: Non-BMP character not supported in Tk"", 

when doing a simple print of tweets from my home page. 

So, the '\U0001f308' character can't be encoded and the entire code breaks off. I don't have an issue with any other characters. Does anyone know how to fix this?

The '\U0001f308' character is a rainbow, by the way.
"
623,Allow include_email param,2015-06-18T21:30:38Z,2015-07-03T23:39:24Z,,,,"See https://dev.twitter.com/rest/reference/get/account/verify_credentials
"
622,Do not need tweepy in the line. Showing tweepy.error.TweepError: Failed to send request: local variable 'auth' referenced before assignment  error,2015-06-11T11:17:55Z,2015-07-03T23:40:04Z,,,,
621,Change raise in streaming.py to raise exception,2015-06-09T22:07:14Z,2015-07-03T23:40:32Z,,,,"Saw [this SO thread](http://stackoverflow.com/a/28871066) when I had an issue, and didn't look like anyone had gone to fix it yet. 

This prevents the `RuntimeError: No active exception to reraise` error when using Streaming.py (in theory).

To be clear, this isn't my fix, just something I saw someone suggest on SO that appears to have fixed it on my machine. With the fix, the exception actually gets raised, and gives you a more meaningful error message.
"
620,"cache returns incorrect data, resulting in crashes or worse",2015-06-08T16:39:44Z,2016-11-06T13:37:26Z,,,,"It appears this was broken at https://github.com/tweepy/tweepy/commit/3acb3b6c3831aba11f981b859a2ca3c8ad5cc41f

This results in incorrect data being returned for any cached request where the parameters differ.  The breakage is so severe, and has been in place for so long, that I'm baffled as to how this has not been noticed before.

Here's a change that seems to fix it, but given the tremendous severity of this bug (which, for example, results in a memory-usage crasher for anything involving pagination, since the wrong original page just keeps being returned and appended), I'm suspicious this might not be the best fix.

```
--- ./binder.py 2015-06-08 11:32:27.000000000 -0500
+++ ./binder.py 2015-06-08 11:32:27.000000000 -0500
@@ -9,6 +9,7 @@

 from six.moves.urllib.parse import quote
 import requests
+import urllib

 import logging

@@ -132,7 +133,7 @@
             # Query the cache if one is available
             # and this request uses a GET method.
             if self.use_cache and self.api.cache and self.method == 'GET':
-                cache_result = self.api.cache.get(url)
+                cache_result = self.api.cache.get('%s?%s' % (url, urllib.urlencode(self.session.params)))
                 # if cache result found and not expired, return it
                 if cache_result:
                     # must restore api reference
```
"
619,"Added support for the ""filter_level"" parameter for the streaming API",2015-06-06T21:40:19Z,2015-07-03T23:42:26Z,,,,
618,Retweet with comment,2015-06-06T02:09:11Z,,,,,"Since April retweet with comment (http://techcrunch.com/2015/04/06/retweetception/) has been available but I can't find it supported. Am I just lost?
"
617,Timeouts and Aborted Connections after running code for long times,2015-06-05T15:11:22Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: Failed to send request: ('Connection aborted.', error(54, 'Connection reset by peer'))","I am using Twitter API to scan through tweets and users, but because of Twitter's API limits, scanning thousands of users/tweets can take hours. Fine. However, when I run Twitter API code through Python using Tweepy, after a few hours of the code running the code gets interrupted and I get one of two error messages:

tweepy.error.TweepError: Failed to send request: ('Connection aborted.', error(54, 'Connection reset by peer'))

Another error:

tweepy.error.TweepError: Failed to send request: HTTPSConnectionPool(host='api.twitter.com', port=443): Read timed out. (read timeout=60)

It seems Twitter has a timeout limit that stops access after a certain point? Or not? Is this a Twitter API issue, or a Tweepy one?

This doesn't happen for small sizes, only when the code has to spend more than about an hour running. Of course one sees the problem with walking away from script that should take hours to run, only to come back and find that it's aborted partway through.

No one seems to know why this happens. Posted on several forums and spoken to several people..Could be a bug.
"
616,initialize streaming buffer as bytes instear of str,2015-06-03T12:08:06Z,2016-11-06T00:22:32Z,,,,"Fixes #615 for Python 3 with compatibility for Python 2.
"
615,TypeError: Can't convert 'bytes' object to str implicitly,2015-06-03T11:32:35Z,2015-11-03T03:15:36Z,,,,"I was following the streaming api tutorial and got this error. Other threads say it has been fixed.
Using master branch code.

![typeerror](https://cloud.githubusercontent.com/assets/4067575/7958978/93030500-09ec-11e5-90e9-44732eab1816.PNG)
"
614,Create proxy,2015-06-02T15:15:09Z,2015-11-03T04:26:26Z,,,,
613,tweepy.error.TweepError: Failed to send request: local variable 'auth' referenced before assignment,2015-05-22T19:58:59Z,2016-03-11T00:47:11Z,,,,"When I try the exact example `user = tweepy.api.get_user('twitter')` in Python 3 I get  `Failed to send request: local variable 'auth' referenced before assignment`

Even when the `home_timeline example works`

Does this mean that I can only get my own tweets when I authenticate using my own access token?
"
612,InsecurePlatformWarning error on python2.7.6 using StreamListener w/ urllib3 & SSL,2015-05-20T02:37:01Z,2015-05-23T22:35:33Z,,,,"Hello,

I am experiencing an InsecurePlatformWarning error when trying to use a StreamListener to do basic keyword tracking.  

My code is basic:

```
from tweepy.streaming import StreamListener
from tweepy import OAuthHandler
from tweepy import Stream

consumer_key = ""zzz""
consumer_secret = ""zzz""
access_token = ""zzz-zzz""
access_token_secret = ""zzz""

class StdOutListener(StreamListener):

    def on_data(self,data):
        print data
        return True

    def on_error(self, status):
        print status

if __name__ == '__main__0:':

    listener = StdOutListener()
    auth = OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_token, access_token_secret)
    stream = Stream(auth, listener)

    stream.filter(track=['Phillip K. Dick', 'Tom Robbins', 'Thomas Pychon'])
```

Error from stdout:

```
 python bot3.py 
/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/util/ssl_.py:90: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.
  InsecurePlatformWarning
401
```

I have read about the error and know it has to do with python2.7.6's ssl capabilities.  I see that some work around are to install python 2.7.9 where the ssl packages of python3.4 have been backported.  Problem is, I read that this is risky and may cause instabilities with other libraries I have on my linux OS.

I run Ubuntu 14.04 which comes with python 2.7.6 pre-installed, so this complicates things for me. 

Should I go about managing another version of python just for my tweepy usage or is there a workaround which is easier?  
"
611,Added RateLimitError for easily working with the rate limit.,2015-05-18T18:38:38Z,2015-05-29T03:28:38Z,,,,"For full details on this issue and how it's implemented, see issue #600.

With this pull request merged, Tweepy raises a `tweepy.error.RateLimitError` (can be accessed as `tweepy.RateLimitError` too) whenever an API operation hits the rate limit.

The great thing about this is that this will break _no_ existing code! It's fully backwards compatible. `RateLimitError` inherits from `TweepError`, so catching `TweepError`s will still catch `RateLimitError`s. They also work the exact same way, so existing code dealing with rate limit error identification (such as the code shown in #600) will still work fine - as will any code accessing any property of the error.

This makes working with the rate limit a whole lot easier and dev-friendly. If there are any concerns at all, I'd be happy to address them.
"
610,Correct spelling error in getting_started.rst,2015-05-14T01:58:34Z,2015-05-15T22:37:36Z,,,,"Minor spelling correction.
"
609,update_profile_colors deprecated,2015-05-12T18:18:41Z,2016-11-06T13:58:52Z,,,,"update_profile_colors has been deprecated and removed by twitter.
profile_link_colors has been moved to update_profile.

I've updated the update_profile test but I've never used vcr and am completely clueless on how to record a new cassette, so I would love some help with that.
"
608,Looking for urllib.parse fix in the latest version of Tweepy,2015-05-12T15:39:47Z,2015-09-10T05:49:11Z,,,,"Hi,

Is there a way to resolve the below import issue in Tweepy?

> > > import tweepy
> > > Traceback (most recent call last):
> > >   File ""<stdin>"", line 1, in <module>
> > >   File ""/usr/lib/python2.7/site-packages/tweepy/**init**.py"", line 12, in <module>
> > >     from tweepy.models import Status, User, DirectMessage, Friendship, SavedSearch, SearchResults, ModelFactory, Category
> > >   File ""/usr/lib/python2.7/site-packages/tweepy/models.py"", line 7, in <module>
> > >     from tweepy.utils import parse_datetime, parse_html_value, parse_a_href
> > >   File ""/usr/lib/python2.7/site-packages/tweepy/utils.py"", line 10, in <module>
> > >     from six.moves.urllib.parse import quote
> > > ImportError: No module named urllib.parse

Thanks
Manish
"
607,Installation from github failed,2015-05-11T03:36:53Z,,,TypeError,TypeError: parse_requirements() got an unexpected keyword argument 'session',"sudo python setup.py install
Traceback (most recent call last):
  File ""setup.py"", line 17, in <module>
    install_reqs = parse_requirements('requirements.txt', session=uuid.uuid1())
TypeError: parse_requirements() got an unexpected keyword argument 'session'

do i need to login as root?
"
606,Streaming: don't decode stream bytes until json.decode,2015-05-10T01:36:26Z,2015-05-29T03:24:23Z,,,,"Some people (including me) seem to be having issues with UTF-8 encoded tweets when reading a stream. This _should_ fix it.
"
605,From last saved cursor?,2015-05-04T20:16:56Z,,,,,"```
        cursor = tweepy.Cursor(api.followers_ids, screen_name=handle)
        for page in cursor.pages():
                         process(page)
```

In case if process failed, I'd like to save something about the last succeeded cursor/page position and continue the operation from the cursor position, is that possible with Tweepy?
"
604,Invalid value 52 for parameter page parameter is invalid.,2015-05-04T20:08:26Z,,,tweepy.error.TweepError,"tweepy.error.TweepError: [{u'message': u'Invalid value 52 for parameter page parameter is invalid.', u'code': 44}]","Hi I have sample code:

``` python
    with open('temp_users.json', 'w') as f:
        all_data = []
        print ""Searching users"",
        for user in tweepy.Cursor(api.search_users,q = ""ziemniaki"").items():
            print ""."",
            sys.stdout.flush()
            all_data.append(user._json)
        f.write(json.dumps(all_data))
        f.close()
    print """"
    return

And I got this error:
raise TweepError(error_msg, resp)
tweepy.error.TweepError: [{u'message': u'Invalid value 52 for parameter page parameter is invalid.', u'code': 44}]

And second uncaught exception:
    raise TweepError(error_msg, resp)
tweepy.error.TweepError: [{u'message': u'Rate limit exceeded', u'code': 88}]
```
"
603,update_with_media - windows - image/x-png,2015-05-02T09:25:37Z,2015-05-12T17:37:50Z,,,,"Hello,
When using update_with_media method on windows i got an invalid file type problem while giving him a valid png. Turns out on windows mimetypes.guess_type(my_image) gives back 'image/x-png' type (on linux i get a simple image/png with the same image). 

My question : Twitter does not accept image/x-png file type at all ? or update_with_media is a little bit too restrictive for this windows use case ? If twitter is so restrictive, how can i solve this ? any idea ?

(I have the same probleme with window and image/pjpeg media)

Thx for your work and your answer.
"
602,fixed raise Exception in streaming.py,2015-04-30T05:25:03Z,2015-04-30T06:21:57Z,,,,
601,[streaming.py file:RuntimeError: No active exception to reraise],2015-04-27T04:43:41Z,,,RuntimeError,RuntimeError: No active exception to reraise,"I am using tweepy for one of my project and following issue is coming :+1: raceback (most recent call last):
  File ""C:/Users/Wilson/PycharmProjects/Avalon/Twitter.py"", line 95, in <module>
    stream.filter(track=['gay', 'bitch', 'slut', 'whore'], languages=[""en""])
  File ""C:\Python34\lib\site-packages\tweepy\streaming.py"", line 428, in filter
    self._start(async)
  File ""C:\Python34\lib\site-packages\tweepy\streaming.py"", line 346, in _start
    self._run()
  File ""C:\Python34\lib\site-packages\tweepy\streaming.py"", line 286, in _run
    raise
RuntimeError: No active exception to reraise

.I found many people have found this problem and they have reported the solution also but still in the final code on github the fix has not been implemented .
"
600,"Add a RateLimitError for handling... well, rate limit errors.",2015-04-23T09:04:31Z,2015-05-29T03:28:39Z,,,,"As it is right now, seemingly all errors you might bump into using Tweepy are of the class `tweepy.TweepError`, which works fine in many cases - but not in all of them. Very often it's really useful to identify a rate limit error specifically, as a certain type of handling is required for it.

So far, I've been catching all `TweepError`s, checking if they're of the rate limit variety, handling them if they are and letting them through if they're not. This is cumbersome and could be made much easier for everyone by adding a `RateLimitError`, and the error handling would both be easy and readable.

The code I've been using so far is along the lines of:

``` python
def is_rate_limit_error(e):
    return isinstance(e.message, list) \
        and e.message[0:] \
        and 'code' in e.message[0] \
        and e.message[0]['code'] == 88
```

Feel free to use that very function (or something else). Adding a RateLimitError would transform this (pseudo-)code:

``` python
# [function definition for is_rate_limit_error, cut out for your reading pleasure]
try:
    api.do_twitter_things()
except tweepy.TweepError as e:
    if not is_rate_limit_error(e):
        raise e
    handle_rate_limit_error()
```

Into this:

``` python
try:
    api.do_twitter_things()
except tweepy.RateLimitError:
    handle_rate_limit_error()
```

Adding this to Tweepy would not break any programs written earlier - let `RateLimitError` subclass `TweepError`, and all earlier code should work just fine.
"
599,Return more data in TweepError,2015-04-22T21:01:04Z,,,,,"Trying to troubleshoot some response codes I am seeing, along with come up with code to handle some of those codes better. When I am using the `except tweepy.TweepError as e` to catch TweepErrors, the only thing that comes in as an argument in e is _('Twitter error response: status code = 403',)_. This was captured via `print(e.args)`

I'd like to see some extra arguments sent in. Perhaps a response argument so we can look at that directly. In addition, it would be great if the http headers were being sent down in the exception as well. Twitter should be returning some headers to better detail the issue: https://dev.twitter.com/rest/public/rate-limiting
"
598,statuses_lookup with map=True fails,2015-04-22T07:15:18Z,,,AttributeError,AttributeError: 'unicode' object has no attribute 'items',"statuses_lookup calls bind_api with payload_list=True. This works until you call statuses_lookup with map=True. The resulting format from Twitter is an object with a single key ('id') and the value is an object with each id from the request being a key. Values are then the statuses.

```
{ 'id': { '<tweet id>': <status> , '<tweet id>': None, '<tweet id>': <status>, ... }
```

I'm not super familiar with the code, but it looks like the payload method needs to be more than just the  'payload_list' flag.  

```
Traceback:
  File "".../dev/projects/tweepy/tweepy/api.py"", line 99, in statuses_lookup
    trim_user, map_)
  File "".../dev/projects/tweepy/tweepy/binder.py"", line 239, in _call
    return method.execute()
  File "".../dev/projects/tweepy/tweepy/binder.py"", line 226, in execute
    result = self.parser.parse(self, resp.text)
  File "".../dev/projects/tweepy/tweepy/parsers.py"", line 95, in parse
    result = model.parse_list(method.api, json)
  File "".../dev/projects/tweepy/tweepy/models.py"", line 65, in parse_list
    results.append(cls.parse(api, obj))
  File "".../dev/projects/tweepy/tweepy/models.py"", line 79, in parse
    for k, v in json.items():
AttributeError: 'unicode' object has no attribute 'items'
```
"
597,streaming.py returns 401 when other examples work,2015-04-21T15:39:37Z,2015-04-22T08:29:49Z,,,,"Hey guys,

So I downloaded the example files oauth.py and streaming.py and when I try the oauth.py it returns my twitter ID and looks ok.

But streaming.py with the same oauth details returns 401 errors.

Also check my system time and its ok... 
"
596,Adds API for account/settings,2015-04-21T09:35:56Z,2015-05-15T22:39:35Z,,,,"I recently find that there's no account setting API implements in tweepy.

Twitter is trying to add more options in account setting so we should prepare for that changes.
"
595,Solution for the issue #576. Add a return statement at the end of read_line method.,2015-04-17T14:18:47Z,2016-11-06T14:01:59Z,,,,"As a way to to solve the issue #576, I propose to add a return statement at the end of the read_line method so the method returns a string with content 0 in situations in which the stream closes but the separator couldn't be found.
"
594,streaming.py example needs a try catch on filter,2015-04-16T19:06:45Z,2015-04-18T04:48:03Z,,,,"When Twitter's queue overloads, it cut out the connection with your application. stream.filer() should be inside a while True with a try catch. Check out colditzjb's solution in this section https://github.com/ryanmcgrath/twython/issues/288

``` python
#import sys #Do this if you want to log error output

while True:  #Endless loop: personalize to suit your own purposes
    try: 
        stream.statuses.filter(track='foo bar,foobar,more search strings here')
    except:
        #e = sys.exc_info()[0]  #Get exception info (optional)
        #print 'ERROR:',e  #Print exception info (optional)
        continue
```
"
593,"Typo fix on _add_list_members, _remove_list_members properties.",2015-04-16T13:25:35Z,2015-05-29T03:29:38Z,,,,
592,Change the documentation status image to v3.3.0.,2015-04-14T22:11:09Z,,,,,"Fairly simple PR really. :thumbsup:
"
591,Make the stream reconnect on failure.,2015-04-11T21:03:47Z,,,,,"Hello.

I didn't find any examples on how to make the stream reconnect in case of failure.
This is the related question:
http://stackoverflow.com/questions/29582080/tweepy-make-stream-run-forever

I will be very glad if somebody will help.
"
590,`List` doesn't set `_json` attribute like other models,2015-04-06T22:32:59Z,,,,,"It looks like most models set an attribute named `_json` which allows access to a JSON object of an instance (e.g., `User` https://github.com/tweepy/tweepy/blob/master/tweepy/models.py#L137, and `Satus` https://github.com/tweepy/tweepy/blob/master/tweepy/models.py#L78) with this line:

```
setattr(user, '_json', json)
```

But not the `List` model (https://github.com/tweepy/tweepy/blob/master/tweepy/models.py#L287-L297)? Am I just missing it? Is there another way to access the JSON object of a `List` instance?
"
589,Add a Gitter chat badge to README.md,2015-04-04T16:39:04Z,2015-04-04T16:40:09Z,,,,"### tweepy/tweepy now has a Chat Room on Gitter

@joshthecoder has just created a chat room. You can visit it here: [https://gitter.im/tweepy/tweepy](https://gitter.im/tweepy/tweepy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).

This pull-request adds this badge to your README.md:

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/tweepy/tweepy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)

If my aim is a little off, please [let me know](https://github.com/gitterHQ/readme-badger/issues).

Happy chatting.

PS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.
"
588,API.update_status() problem in example code,2015-04-04T05:34:16Z,2015-04-04T16:42:33Z,,,,"It seems that the API.update_status() function has changed however the example code hasn't.
And It causes a 400 Bad Request.
"
587,Add model for streaming events,2015-04-03T11:30:20Z,,,,,"I've been using something like this by overriding `on_data` in my application to handle favourite/RT/follow events, and it works fine there. I've tested this branch locally (manually), and added a very cursory case to the test suite.
"
586,list.members?,2015-04-02T21:58:26Z,,,,,"I search here https://github.com/tweepy/tweepy/blob/f8fa8ec8109e5455a6d5823dfbf3ac876e1e6c64/tweepy/api.py for ""https://dev.twitter.com/rest/reference/get/lists/"" but I find only 4 result and not https://dev.twitter.com/rest/reference/get/lists/members that is the one I'm looking for, did you plan to implement it or there is a work around I don't see? 

I also try to use the suggested library on twitter:
https://dev.twitter.com/oauth/overview/single-user
That to me seems a real shit from a first view.
Now I find these:
https://github.com/litl/rauth (seems perfect)
https://github.com/idan/oauthlib
from the official website: http://oauth.net/code/

But onestly I prefer to have a complete tweepy solution or I will implement my own function in few lines :dash:  
"
585,Better documentation for StreamListener.on_error,2015-03-31T08:00:41Z,2016-11-06T14:04:16Z,,,,"It's a bit surprising to me that the backoff logic recommended by Twitter is lovingly implemented, but by default it is not used. Let's at least document the default behaviour, and mention the backoff logic in the documentation.
"
584,adds additional parameters in friends/list API,2015-03-30T01:59:41Z,,,,,"Twitter added several additional parameters(count, skip_status, include_user_entities) in friends/list API.

Refer to https://dev.twitter.com/rest/reference/get/friends/list
"
583,Remove deprecated function and clean up codes,2015-03-30T01:41:56Z,2015-11-05T04:55:45Z,,,,"This is a small fix.
- remove a deprecated function (.has_key() -> in)
- do clean up codes (remove whitespaces, wrong raise statement)
"
582,Periodic http 401 errors from Twitter,2015-03-27T21:25:49Z,,,,,"I am receiving HTTP 401 errors while running through a script I created that reads the Twitter stream and retweets things that match the parameters I have set. It occasionally fails during the retweet section with:

> tweepy.error.TweepError: Twitter error response: status code = 401

I confirmed that the time is valid on the system and within the ~15 minute wiggle room. The code works the majority of the time, so I am not sure why it would throw the 401 status. Maybe a side question, but is there a more verbose error I can print? I know Twitter will return more information on why it threw 401 (such as unauthorized)

I snipped out some non-interesting parts, but here is the main part of the code:

``` python
def doRetweet(id_string):
    # authenticate against the Twitter API
    api = tweepy.API(auth)
    # actually do the retweet
    api.retweet(id_string)
    print('I did the retweet')
    print()
    return
class StdOutListener(tweepy.StreamListener):
    def on_data(self, data):

        # Twitter returns data in JSON format - we need to decode it first
        decoded = json.loads(data)

        # grab some data we use later
        tweet_id = decoded['id_str']

        doRetweet(tweet_id)

        return True

    def on_error(self, status):
        print('The below status code was returned from Twitter')
        print(status)
        if status_code == 420:
            #returning False in on_data disconnects the stream
            return False

    def on_exception(self, exception):
        raise exception
        return False

try:
    if __name__ == '__main__':
        l = StdOutListener()
        auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
        auth.set_access_token(access_token, access_token_secret)

        # Authenticate with the streaming API and filter what we initially receive
        # spaces are AND operators, while a comma indicates OR. More info here: https://dev.twitter.com/streaming/overview/request-parameters
        stream = tweepy.Stream(auth, l)
        stream.filter(track=['#blah'], languages=['en'])
except KeyboardInterrupt:
    sys.exit()
```
"
581,Fix #554. Update the update_status method.,2015-03-25T16:11:05Z,2015-03-25T16:20:52Z,,,,"The `update_status` method was used without naming the status
paremeter. A change was made in the commit f99b1da and it was
not possible to call the method without naming the status parameter.
"
580,Issues with char '…',2015-03-25T03:44:53Z,,,,,"I am seeing issues when trying to post the character '…' (or u'…').

When concatenating u'…' to a tweet I see:
'ascii' codec can't encode character u'\u2026' in position 0: ordinal not in range(128)

When concatenating '…' to a tweet I see:
'ascii' codec can't decode byte 0xe2 in position 0: ordinal not in range(128)

I'm using Tweepy 3.3. This used to work with v3.0.

Can you please help me?
Thanks in advance.
"
579,Streaming API fails silently if a 406 error is received,2015-03-22T11:48:52Z,2015-03-22T11:52:59Z,,,,"In the streaming API:

```
resp = self.session.request('POST',
                                        url,
                                        data=self.body,
                                        timeout=self.timeout,
                                        stream=True,
                                        auth=auth,
                                        verify=self.verify)
```

If resp.error_code == 406, the streaming service instantly dies without raising any exception that can be handled in user code.

I think that all critical failures should raise a handlable exceptin.
"
578,update_status: first positional argument should be 'status',2015-03-20T07:34:20Z,2015-08-19T16:04:59Z,,,,"Passing the tweet text as the lone positional argument to update_status:

```
 api.update_status(u'Hi mum!')
```

is suggested in much documentation and in several tests, but f99b1da
introduced media_ids as the first argument, breaking this API.

This change will break anyone who uses tweepy >= 3.2 and assumes they
can pass media_ids as the first positional; but I expect that to be a
much smaller set than people who have followed the example in the docs,
who find their application mysteriously fails to post tweets after
upgrading tweepy.

Fixes #554 

(I haven't successfully run the tests, I'm hoping Travis will do that for me and save me the hassle of working out the token situation.)
"
577,Friends/list call takes additional parameters not allowed,2015-03-19T18:38:03Z,,,,,"Friends/list claims to allow these parameters:
:allowed_param:'id', 'user_id', 'screen_name', 'cursor'

But the twitter docs show count, skip_status, and include_user_entities as well
"
576,'NoneType' object has no attribute 'strip' exception in streaming.py,2015-03-16T16:42:02Z,2016-11-05T23:22:16Z,,,,"streaming.py threw the following exception:

> Traceback (most recent call last):
> File ""./script.py"", line 93, in <module>
> stream.filter(track=['#programming'], languages=['en'])
> File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 428, in filter
> self._start(async)
> File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 346, in _start
> self._run()
> File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 286, in _run
> raise exception
> File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 255, in _run
> self._read_loop(resp)
> File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 298, in _read_loop
> line = buf.read_line().strip()
> AttributeError: 'NoneType' object has no attribute 'strip'
"
575,Search API operators order affecting search results,2015-03-16T11:58:43Z,,,,,"Not directly an issue with tweepy but a bug I mentioned in https://twittercommunity.com/t/order-dependent-search-api-operators-possible-bug/33922 that's not described in the docs.

We could (somewhat) gracefully handle it by introducing operators priority while building the `query`. This would handle the bug in the `Search API` until it's officially fixed.

What do you think about it ? @joshthecoder 

Also fixing #560 and related if we do so.
"
574,"Fixes issue #570 - add ""exception"" when raising one",2015-03-12T18:15:03Z,2015-06-14T02:39:00Z,,,,"This resolves an issue found here: https://github.com/tweepy/tweepy/issues/570

If an exception is thrown in the listener, the exception is not sent out currently and results in an error.
"
573,TweepError: Failed to send request: data must be a byte string,2015-03-12T12:31:29Z,,,,,"Hi All,

I am getting the above error and am unsure why? The code works on another pc but not mine.
Is there some packages I am missing?
Thanks

from tweepy import Stream
from tweepy import OAuthHandler
from tweepy.streaming import StreamListener
# consumer key, consumer secret, access token, access secret.

ckey = xx
csecret = xx
atoken = xx
asecret = xx

class listener(StreamListener):

```
def on_data(self, data):        
    print(data)
    return(True)

def on_error(self, status):
    print status
```

auth = OAuthHandler(ckey, csecret)
auth.set_access_token(atoken, asecret)

twitterStream = Stream(auth, listener())
twitterStream.filter(track=['cars'])
"
572,OAuth problems with new account,2015-03-12T12:05:57Z,2015-04-03T14:16:23Z,,tweepy.error.TweepError,tweepy.error.TweepError: Twitter error response: status code = 401,"I am using tweepy for a bot that I have written. The code is simple but I am receiving 401 errors when it posts the status. I have regenerated my keys and even deleted the app on Twitter. Failures occur whether I'm running Python 2.7 or 3.4.

I have followed many threads already, with no luck. Any suggestions would be greatly appreciated.

The code:

import tweepy, datetime, sqlite3

CONSUMER_KEY = ‘xxxxx’
CONSUMER_SECRET = ‘xxxxx’ # Make sure access level is Read And Write
ACCESS_KEY = ‘xxxxx’
ACCESS_SECRET = ‘xxxxx’
auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.secure = True  # This was not in the original script, but seems to make no difference.
auth.set_access_token(ACCESS_KEY, ACCESS_SECRET)
api = tweepy.API(auth)

now = datetime.datetime.now()

dbconn = sqlite3.connect(‘/pathname/db’)
dbconn.row_factory = sqlite3.Row
c = dbconn.cursor()
c.execute('SELECT \* FROM tweets ORDER BY RANDOM() LIMIT 1')
r = c.fetchone()
tweet = r[2]

api.update_status(tweet)

The error:

Traceback (most recent call last):
  File ""/pathname/script.py"", line 35, in <module>
    api.update_status(tweet)
  File ""/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tweepy/api.py"", line 193, in update_status
    )(post_data=post_data, _args, *_kwargs)
  File ""/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tweepy/binder.py"", line 239, in _call
    return method.execute()
  File ""/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tweepy/binder.py"", line 223, in execute
    raise TweepError(error_msg, resp)
tweepy.error.TweepError: Twitter error response: status code = 401
"
571,Can't find ModelReferences in documentation,2015-03-10T15:45:48Z,,,,,"In docs/getting_started.rst, last line tells about ModelsReference but there is no link or anything. Am I missing something?

Regards,
Carl 
"
570,RuntimeError: No active exception to reraise,2015-03-09T19:36:23Z,2016-11-06T00:10:09Z,,RuntimeError,RuntimeError: No active exception to reraise,"```
Traceback (most recent call last):
  File ""./python_script.py"", line 80, in <module>
    stream.filter(track=['#warcraft'], languages=['en'])
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 428, in filter
    self._start(async)
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 346, in _start
    self._run()
  File ""/usr/local/lib/python3.4/dist-packages/tweepy/streaming.py"", line 286, in _run
    raise
RuntimeError: No active exception to reraise
```

Receiving this error occasionally with my script that filters the Twitter stream and looks for specific words. The failure line is:

```
stream.filter(track=['#keyword'], languages=['en'])
```

A user on StackOverflow identified this as due to how an exception is being handled: http://stackoverflow.com/a/28871066
"
569,Stream not disconnected in asynchronous mode.,2015-03-04T17:20:42Z,,,,,"Whenever running filter(async = True) and then calling disconnect() the thread is not closed. This, coupled with another call to filter(async = True) makes that the original thread was never killed.

```
def restart_stream():
    twitter_stream.disconnect()
    tracks = [f for f in filters.keys() if filters[f] > 0]
    if len(tracks) > 0:
        twitter_stream.filter(track = tracks, async = True)
        app.logger.info('started stream filter on [' + ', '.join(tracks) + ']')
```
"
568,Proxy problem,2015-02-25T21:21:15Z,,,,,"Hi, facing some problems to use under proxy (v.3.3)
I've my http_proxy and https_proxy environmental variables already set
But still: (Caused by ProxyError('Cannot connect to proxy.'

does anyone know what could it be?

thanks,
JM
"
567,Language filter for streamListener not working,2015-02-24T16:39:01Z,,,,,"Python 3.4.2 on Tweepy 3.3.0
 StreamListener language filter no longer seems to be working.

stream.filter(languages='en')

No error, but nothing happens.
"
566,Streaming fixes,2015-02-23T15:39:08Z,2015-09-22T12:46:59Z,,,,"Some small fixes:
- rearrange the methods on the listener to categorize them by non-data and data callbacks
- moved the closed callback to the listener
- some cleanup
- support for compressed http streams
- handle disconnects properly
"
565,Streaming fixes,2015-02-23T15:19:12Z,2015-02-23T15:25:25Z,,,,"Some small fixes:
- rearrange the methods on the listener to categorize them by non-data and data callbacks
- moved the closed callback to the listener
- some cleanup
- support for compressed http streams
- better detection for closed connections
"
564,i have an issue with requirements ,2015-02-22T13:08:33Z,2015-03-15T15:50:48Z,,TypeError,TypeError: parse_requirements() got an unexpected keyword argument 'session',"``` bash
root@HOST:~# pip install tweepy
Downloading/unpacking tweepy
  Running setup.py egg_info for package tweepy
    Traceback (most recent call last):
      File ""<string>"", line 14, in <module>
      File ""/root/build/tweepy/setup.py"", line 17, in <module>
        install_reqs = parse_requirements('requirements.txt', session=uuid.uuid1())
    TypeError: parse_requirements() got an unexpected keyword argument 'session'
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File ""<string>"", line 14, in <module>

  File ""/root/build/tweepy/setup.py"", line 17, in <module>

    install_reqs = parse_requirements('requirements.txt', session=uuid.uuid1())

TypeError: parse_requirements() got an unexpected keyword argument 'session'

----------------------------------------
Command python setup.py egg_info failed with error code 1 in /root/build/tweepy
Storing complete log in /root/.pip/pip.log
```

please tel me if you need more details
"
563,How do you pronounce this library's name?,2015-02-22T01:54:57Z,2016-11-06T00:00:46Z,,,,"Is it ""twee-pie"" or ""twee-pee""?
"
562,Update api.py,2015-02-21T10:00:58Z,2015-02-21T19:13:20Z,,tweepy.error.TweepError,tweepy.error.TweepError: Unable to access file: No such file or directory,"Made catch statement error message more explicit for _pack_image. Now outputs  

tweepy.error.TweepError: Unable to access file: No such file or directory
"
561,Prevent infinite read loop in tweepy Stream,2015-02-18T22:17:14Z,2015-02-21T19:15:34Z,,,,"I have noticed that my twitter streaming programs using tweepy (3.2.0 with requests 2.4.3) have been going into an infinite loop after a couple of days running. They seem to get stuck in the `ReadBuffer.read_line()` method. From breaking into it with a debugger, it looks like the underlying `raw` stream (in the `ReadBuffer` this is `self._stream`) is closed (`self._stream.closed` is True).

I am not certain how the stream gets closed, but probably there is a network glitch or Twitter just booted me randomly. I am surprised that no exception gets thrown from requests when you try to read from a closed response, but I don't know the library that well, so maybe this is intentional.

In the stream read loops in `stream.py`, there is currently only one check if the underlying stream has been ""closed"" (line 337), and it is actually _outside_ the read loop. I looked back at the history of the file and found in #400 that _before_ switching to the requests library, there were checks for `isclosed()` [all over the place](https://github.com/tweepy/tweepy/pull/400/files#diff-07400b70c336387bf35f0433991068f0L206), and after there was only the one.

Anyway, to try and prevent this from happening, I added checks to make sure the response stream is still open in the read loops within the `ReadBuffer` class, as well as in `Stream._read_loop()` method. I also updated line 337 at the bottom of the `_read_loop()` to use `resp.raw.closed` instead of `resp.raw._fp.closed()` since this seems like it is supposed to be private API.

I added a test in the `TweepyStreamReadBuffer` class that mocks a closed stream with no content available and then tries to call `read_line()` on it. Before I modified `stream.py` this test failed because `read_line()` looped infinitely. Now `read_line()` returns `None`, which hopefully is the desired result in this situation. Note that I had to do some extra work to block a true infinite loop inside the test, hence all the extra complexity there.

I don't know if I fixed this the best way, but the problem is pretty serious so I hope this can be fixed and released quickly. Thank you!
"
560,count parameter in search API is ignored when result_type is 'popular',2015-02-17T02:44:05Z,,,,,"Hi, for some reason the number of results is 15 (default) when using the search API with `result_type='popular'`.

``` py
query='lebron'
limit=50
r = api.search(q=query, count=limit, result_type='recent') # or result_type='mixed'
len(r)
>>> 50
r = api.search(q=query, count=limit, result_type='popular')
len(r)
>>> 15 # Woah
```

Cursor works just fine, however:

``` py
r = list(tweepy.Cursor(api.search, q=query, result_type='popular').items(limit))
len(r)
>>> 50
```

Edit:

``` py
limit=100

r = list(tweepy.Cursor(api.search, q=query, result_type='recent').items(limit))
len(r)
>>> 100
r = list(tweepy.Cursor(api.search, q=query, result_type='popular').items(limit))
len(r)
>>> 75 # Woah 2
```
"
559,Streaming improvements,2015-02-16T21:02:23Z,2015-02-16T21:25:22Z,,,,"This will fix some issues I encountered with the streaming api:
- exceptions are raise with a changed traceback
- when you stop and start the connection twitter will resume with gzip because of the headers
- callback for keep-alive to be able to detect lost connection

Also I should mention that the async implementation really slows down the throughput even with just a time.sleep in the other thread. I implemented it with gevent which works fine. Maybe I should raise a pull request which implements this?
"
558,Fix bug where streams freeze up on Python 3 due to string formatting bug...,2015-02-16T19:33:45Z,2015-02-16T21:16:52Z,,,,"Remove usage of urlencode_noplus and instead let Requests handle the encoding work for us.

Fixes #556
"
557,Allow multiple versions to be installed,2015-02-11T21:46:31Z,2015-02-16T21:36:03Z,,,,"After installing Tweepy, we end up having conflicting version requirements for `requests` in our code. Tweepy is forcing us to install `requests==2.4.3`.
"
556,tweepy Stream does not return any data,2015-02-10T12:13:49Z,2015-02-16T21:16:52Z,,,,"I am using the example script streaming.py from this repository. When I run the script no data is returned at all, no error code, nothing.

Usingthe REST API with the same credentials I did not experience any problem. All the things I tested returned a result. It's just not working with the streaming api.

I am using Python 3.4 in a virtualenv. I tested with the version from PyPi as well as from the Github Repository by cloning it.

UPDATE: I tried with the same credentials and on the same machine/virtualenv by using twython and got no problems here. Thus, it must relate to tweepy, but I don't know where to look further. I also found a post on StackOverflow with the same isue (http://stackoverflow.com/questions/27910383/tweepy-not-working-no-error-message)
"
555,Converting to exe,2015-02-09T02:14:39Z,,,ImportError,ImportError: No module named tweepy,"I have a Main.py file that works well when I run it from IDLE. However I'm not able to convert it to a exe file using py2exe.

Below is the setup.py code:

import tweepy
from distutils.core import setup
import py2exe

setup(
    windows = [{""script"": ""main.py""}],
    options = {""py2exe"":{""includes"":[""tweepy""]}}
    )

When I try to convert , I get the following error:
ImportError: No module named tweepy

Has anyone faced this issue?
"
554,Api.update_status broken,2015-02-06T22:32:44Z,2015-08-19T16:04:59Z,,,,"api.update_status('Testr')

results in error code 400

api.update_status(status='Test')
posts the status correctly
"
553,added the reqirements in the repo to anticipate any unwanted errors duri...,2015-02-04T14:14:18Z,2015-02-16T21:38:25Z,,,,"...ng installation by separately installing all the required packages.
"
552,Impossibility to use rate_limit_status for handling rate limit errors,2015-02-01T07:53:20Z,,,,,"Since in application there is no any mapping between tweepy  (API)[https://github.com/tweepy/tweepy/blob/master/tweepy/api.py] methods and the twitter api paths, it's not possible use rate limit status response, where paths as keys are used:

```
  u'/statuses/retweeters/ids': {u'limit': 15,
   u'remaining': 15,
   u'reset': 1422772137},
  u'/statuses/retweets/:id': {u'limit': 60,
   u'remaining': 60,
   u'reset': 1422772137},
  u'/statuses/retweets_of_me': {u'limit': 15,
   u'remaining': 15,
...
```

For example I use method **api.retweets(...)** and get rate limit exception. I request for rate limit status and want to get status for the path of my last api request using name of tweepy api method **retweets**, but I can do this only using path of this method **/statuses/retweets/:id**, which I can not get automatically from tweepy application.

I offer to define map between method names and paths and use it for such cases. What do you think? I can send PR
"
551,Ensure join preparing follow param is operating on strings,2015-02-01T07:13:53Z,2015-11-05T04:55:03Z,,TypeError,"TypeError: sequence item 0: expected string or Unicode, int found","The streamingwatcher.py example running in filter mode blows up because we end up joining on a list of integer user ids:

``` python
Traceback (most recent call last):
  File ""streamwatcher.py"", line 91, in <module>
    main()
  File ""streamwatcher.py"", line 86, in main
    stream.filter(follow_list, track_list)
  File ""build/bdist.linux-x86_64/egg/tweepy/streaming.py"", line 406, in filter
TypeError: sequence item 0: expected string or Unicode, int found
```

See https://github.com/tweepy/examples/pull/9 which fixes the example's filter mode.
"
550,UnicodeDecodeError using media endpoints,2015-01-31T19:26:38Z,2016-11-06T00:24:13Z,,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0x89 in position 181: ordinal not in range(128),"I've just upgraded from Tweepy v2.3 to v3.2 (Python 2.7). I'm having some issues using the API endpoints update_with_media and media_upload following the change. Upon calling either of these with an image location I end up with an exception (TweepError) which appears to be coming from the call to 'self.session.request' in binder.py.

The error received is:

```
Failed to send request: 'ascii' codec can't decode byte 0x89 in position 181: ordinal not in range(128)
```

Adding a traceback into the exception handler produced the following:

```
Traceback (most recent call last):
  File ""/usr/lib/python2.7/dist-packages/tweepy/binder.py"", line 188, in execute
    proxies=self.api.proxy)
  File ""/usr/lib/python2.7/dist-packages/requests/sessions.py"", line 455, in request
    resp = self.send(prep, **send_kwargs)
  File ""/usr/lib/python2.7/dist-packages/requests/sessions.py"", line 558, in send
    r = adapter.send(request, **kwargs)
  File ""/usr/lib/python2.7/dist-packages/requests/adapters.py"", line 330, in send
    timeout=timeout
  File ""/usr/lib/python2.7/dist-packages/urllib3/connectionpool.py"", line 542, in urlopen
    body=body, headers=headers)
  File ""/usr/lib/python2.7/dist-packages/urllib3/connectionpool.py"", line 367, in _make_request
    conn.request(method, url, **httplib_request_kw)
  File ""/usr/lib/python2.7/httplib.py"", line 973, in request
    self._send_request(method, url, body, headers)
  File ""/usr/lib/python2.7/httplib.py"", line 1007, in _send_request
    self.endheaders(body)
  File ""/usr/lib/python2.7/httplib.py"", line 969, in endheaders
    self._send_output(message_body)
  File ""/usr/lib/python2.7/httplib.py"", line 827, in _send_output
    msg += message_body
UnicodeDecodeError: 'ascii' codec can't decode byte 0x89 in position 181: ordinal not in range(128)
```
"
549,UnicodeDecodeError stopping the stream,2015-01-30T18:24:36Z,,,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0x8b in position 1: ordinal not in range(128),"My streaming works really well for about 200 tweets and then streaming.py throws a UnicodeDecodeError 4 times before all execution stalls.

```
Stream exception: 'ascii' codec can't decode byte 0x8b in position 1: ordinal not in range(128) trace: Traceback (most recent call last):
  File ""myFile.py"", line 450, in <module>
    stream.filter(track = trackList)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 421, in filter
    self._start(async)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 338, in _start
    self._run()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 278, in _run
    raise exception
UnicodeDecodeError: 'ascii' codec can't decode byte 0x8b in position 1: ordinal not in range(128)
```

I am also getting a Twitter status code 420, which I understand is the rate limiting response code, but I have slowed everything down and sleep between every request to make sure I don't hit that limit, and this traceback still happens every time.

I actually don't mind if I get rate limited, but I would like to be able to sleep for a bit and then resume. But these errors seem to completely stop all streaming and execution.  Here is the code segment where I try to continue processing:

``` python
        print 'Starting...'
        l = StdOutListener()
        auth = OAuthHandler(consumer_key, consumer_secret)
        auth.set_access_token(access_token, access_token_secret)
        api = tweepy.API(auth)
        stream = Stream(auth, l)
        trackList = getList(listname, customer)  #gets the list of filter terms
        print 'Len(tl): {}'.format(len(trackList))
        while True:
                try:   
                        stream.filter(track = trackList)
                except Exception, e:
                        import traceback
                        print 'Stream exception: {} trace: {}'.format(e, traceback.format_exc())
                        print '\tWe think we are getting rate limited. Sleeping for 2 minutes'
                        time.sleep(120)
                        continue
```

Any ideas? Thank you
"
548,More consistent SVG badges,2015-01-25T16:47:05Z,2015-01-28T20:39:44Z,,,,"This patch uses [shields.io](http://shields.io/) to provide consistently styled vector README badges. Personally, I like this a bit better than the current png badges but that's just me :smile: 

Either way, thanks for this code!
"
547,Fixes error message on file too big to reflect actual file size limit.,2015-01-25T11:38:38Z,2015-01-28T20:41:11Z,,,,"Super simple PR, but something I ran into and was confused by!

Thanks!
"
546,api.statuses_lookup() returning error,2015-01-20T17:48:23Z,,,AttributeError,AttributeError: 'API' object has no attribute 'statuses_lookup',"I am receiving an attribute error when I try to call the statuses_lookup method specified in the api docs:
http://docs.tweepy.org/en/latest/api.html#API.statuses_lookup

version: tweepy-2.3.0

```
File ""./signmytweet.py"", line 14, in get_single_tweet
    single_tweet = api.statuses_lookup(id = id, include_entities = True)
AttributeError: 'API' object has no attribute 'statuses_lookup'
```
"
545,fix setup: replace uuid by PipSession,2015-01-20T06:06:32Z,2015-07-06T05:23:19Z,,,,"use PipSession rather then uuid
"
544,search() method isn't working: module called by Tweepy being passed a generator object where string was expected,2015-01-20T04:35:40Z,,,,,"Preface: I can't tell where this issue lies: my connection to and account with the API, my code, or an issue with Tweepy.

I'm trying to execute a search and receiving an error several layers deep. Here's a pastebin including the code I'm using and the full trace of the error:

http://pastebin.com/9he4Ddc0
"
543,Access token issue.,2015-01-17T16:15:06Z,,,,,"I don't find any possibility to get access tokens anymore. Related to the updated tweepy, i didn't see mentioned the new way to get the access token.

When I have

``` python
verifier = request.GET.get('oauth_verifier')
try:
    oauth.get_access_token(verifier)
except tweepy.TweepError:
    print ""Error, failed to get access token""
```

It always goes on exception part.
"
542,Fix issue #541,2015-01-15T11:32:21Z,2015-01-15T11:35:58Z,,,,"### From issue #541 :

The endpoint statuses/update_with_media is [deprecated](https://dev.twitter.com/rest/reference/post/statuses/update_with_media) so we should implement the [new way](https://dev.twitter.com/rest/public/uploading-media) of uploading medias.
There is a specific endpoint to upload media ([`media/upload`](https://dev.twitter.com/rest/public/uploading-media)) and then you can pass the `media_id` to the [`statuses/update`](https://dev.twitter.com/rest/reference/post/statuses/update) endpoint.
### Notes

As commented in the issue #541, I can't figure out how to make new tests. If somebody can point me to an explanation I will gladly write new ones.

I tested my code manually and have not found any issue but it would really be better with some tests :)
"
541,"""POST statuses/update_with_media"" is deprecated",2015-01-15T09:34:32Z,2015-01-15T12:05:43Z,,,,"The endpoint statuses/update_with_media is [deprecated](https://dev.twitter.com/rest/reference/post/statuses/update_with_media) so we should implement the [new way](https://dev.twitter.com/rest/public/uploading-media) of uploading medias.

There is a specific endpoint to upload media ([`media/upload`](https://dev.twitter.com/rest/public/uploading-media)) and then you can pass the `media_id` to the [`statuses/update`](https://dev.twitter.com/rest/reference/post/statuses/update) endpoint.
"
540,Dynamically generating the access token,2015-01-13T11:40:29Z,,,,,"I am trying to login multiple users through a single app, each user has his own consumer_key and consumer_secret, and i need the access token to login the user through my twitter app, I searched documentation and found the following steps:

-Get a request token from twitter.

-Redirect user to twitter.com to authorize our application

-If using a callback, twitter will redirect the user to us. Otherwise the user must manually supply us with the verifier code.

-Exchange the authorized request token for an access token.

I am stuck at the second and third step. The documentation says to do : 
`# Example using callback (web app)`
`verifier = request.GET.get('oauth_verifier')`

Can someone paste Python code snippet to do the same ? I am getting much confused in these steps.
"
539,/users/lookup method not in documentation,2015-01-09T17:59:33Z,,,,,"It appears that the client supports the /users/lookup method, but it's just not referenced in the documentation. Is that intentional?
"
538,'JSONParser' object has no attribute 'model_factory',2015-01-08T09:11:22Z,,,AttributeError,AttributeError: 'JSONParser' object has no attribute 'model_factory',"Running the following snippet of code using tweepy 3.1.0

``` python
# Autenticating
auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(OAUTH_TOKEN, OAUTH_TOKEN_SECRET)

# API Access
api = tweepy.API(auth, parser=JSONParser(), wait_on_rate_limit=True)

# Dumping the ""home"" timeline
statuses = []
for s in tweepy.Cursor(api.user_timeline, id=PROFILE_HANDLE).items(10):
    print ""We have currently fetched %d tweets"" % len(statuses)
    statuses.append(s)

# Writing the output to a file
with open(""output.json"", ""w"") as outfile:
    json.dump(statuses, outfile, indent=1)
```

I get this error

```

Traceback (most recent call last):
  File ""dumptwitterstream.py"", line 32, in <module>
    for s in tweepy.Cursor(api.user_timeline, id=PROFILE_HANDLE).items(10):
  File ""/usr/local/lib/python2.7/site-packages/tweepy/cursor.py"", line 197, in next
    self.current_page = self.page_iterator.next()
  File ""/usr/local/lib/python2.7/site-packages/tweepy/cursor.py"", line 117, in next
    model = ModelParser().parse(self.method(create=True), data)
  File ""/usr/local/lib/python2.7/site-packages/tweepy/parsers.py"", line 95, in parse
    result = model.parse_list(method.api, json)
  File ""/usr/local/lib/python2.7/site-packages/tweepy/models.py"", line 65, in parse_list
    results.append(cls.parse(api, obj))
  File ""/usr/local/lib/python2.7/site-packages/tweepy/models.py"", line 81, in parse
    user_model = getattr(api.parser.model_factory, 'user') if api else User
AttributeError: 'JSONParser' object has no attribute 'model_factory'
```

The same code is fully working with tweepy 2.3.0.
"
537,Session errors be gone,2015-01-08T05:50:39Z,2015-02-16T21:45:27Z,,TypeError,TypeError: parse_requirements() got an unexpected keyword argument 'session',"Install error as shown below is fixed

Traceback (most recent call last):
  File ""setup.py"", line 17, in <module>
    install_reqs = parse_requirements('requirements.txt', session=uuid.uuid1())
TypeError: parse_requirements() got an unexpected keyword argument 'session'
"
536,"Getting IncompleteRead(0 bytes read, 2 more expected)', IncompleteRead(0 bytes read, 2 more expected)",2015-01-06T09:36:42Z,,,,,"Hi 

When I run script, after some time I get following exception.
IncompleteRead(0 bytes read, 2 more expected)', IncompleteRead(0 bytes read, 2 more expected)

I have found that it is related to httlib or urllib.

Can anyone please suggest any solution ?

Thank you.
"
535,Add Documentation Page for streaming,2014-12-31T21:39:07Z,2014-12-31T22:14:33Z,,,,"I saw a request for better documentation of streaming on the forum.  I encountered this frustration as well a few months ago when I began working with Tweepy.  I was able to use the streaming api with Tweepy by reading the source code, but I wanted there to be a tutorial so that people could ramp up faster. 

Here is that tutorial. It is not super polished, but I think it's comparable in quality to the existing documentation. 

You should accept this pull since it's only useful documentation. 

Next steps would be to cover more of the on_ events, and to add an api reference for streaming.py.

Thanks, 
Groceryheist.
"
534,Updated requirements for pip 6.0+ to include a session,2014-12-29T22:06:56Z,2014-12-29T22:18:50Z,,,,"The setup.py file does not create any errors now. The recent version required a session to be added to the parse requirements. A uuid was used for this and the package can now be installed properly.
"
533,pip version 6.0 changed the method signature for `pip.req.parse_requirements`.,2014-12-24T09:33:42Z,2015-01-01T18:38:34Z,,TypeError,TypeError: parse_requirements() missing 1 required keyword argument: 'session',"This means that the setup.py fails with something like:

```
File ""/tmp/pip-build-3xmp1q/tweepy/setup.py"", line 18, in <module>
    reqs = [str(req.req) for req in install_reqs]
  File ""/home/dougalmatthews/.virtualenvs/tmp-e9ea5ec74c214e7c/lib/python2.7/site-packages/pip/req/req_file.py"", line 19, in parse_requirements
    ""parse_requirements() missing 1 required keyword argument: ""
TypeError: parse_requirements() missing 1 required keyword argument: 'session'
```
"
532,"TypeError in Tweepy-3.1.0 auth.py line 100: tuple indices must be integers, not str",2014-12-23T00:01:58Z,2016-11-06T00:24:31Z,,,,"![tweepyissue](https://cloud.githubusercontent.com/assets/10274897/5532957/232375e8-8a54-11e4-9c70-87f827f4b25a.png)
"
531,"Unicode ""u"" syntax error",2014-12-20T03:34:14Z,2014-12-20T03:52:53Z,,,,"The ""u"" is no longer used in Python 3. It causes a syntax error
"
530,fixed issue #529,2014-12-18T06:45:30Z,2014-12-18T11:26:32Z,,,,"session.params were copied into body, then not reset. this caused the the complete set of parameters to be passed in the url.
"
529,StreamListener language filter stopped working - problem in POST request,2014-12-18T06:23:11Z,2014-12-18T11:26:44Z,,,,"StreamListener language filter is not working. Caused by all parameters for the twitter API filter request being passed in the URL instead of in the request body
"
528,Mutes not supported,2014-12-18T05:11:39Z,,,,,"When can we expect muting to be integrated into the API wrapper?

https://dev.twitter.com/rest/reference/post/mutes/users/create
"
527,error wnen running the program apriori.py,2014-12-18T05:11:29Z,,,TypeError,TypeError: 'AsyncStream' object is not iterable,"File ""H:\python1\apriori.py"", line 51, in getItemSetTransactionList
    for record in data_iterator:
TypeError: 'AsyncStream' object is not iterable
help 
"
526,Fixes to docs - auth tutorial docs were busted!,2014-12-14T11:06:46Z,2014-12-14T13:33:48Z,,,,"Hey Tweepy folks,

Here's some fixes to the auth tutorial docs.  I think they were just outdated - they referenced functions, like `set_request_token()`, which didn't exist in the codebase, and were doing odd things with the session token (was a tuple, now a dict?).

Anyhow, setups analogous to this are working well for me.

Thanks for making tweepy!

-Steven
"
525,"API.exists_friendship(user_a, user_b) not exists?",2014-12-12T22:22:26Z,,,,,"I´m trying to use this functions but seems that not works... :/

It's documented here. http://tweepy.readthedocs.org/en/v3.1.0/api.html#API.exists_friendship

But i can't make it works.
"
524,Update reference to api search documentation,2014-12-12T00:59:51Z,2014-12-12T01:14:37Z,,,,"I was trying to read up on the relevant documentation and realised the link in the source code was actually 404ing.
"
523,Only unicode objects are escapable.,2014-12-11T04:14:57Z,,,tweepy.error.TweepError,tweepy.error.TweepError: Failed to send request: Only unicode objects are escapable. Got <generator object <genexpr> at 0xb7050cd4> of type <type 'generator'>.,"My requeirements is all satisfied, why this happens?

Traceback (most recent call last):
  File ""twi.py"", line 16, in <module>
    api.update_status(u""hello world"")
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 235, in _call
    return method.execute()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 185, in execute
    raise TweepError('Failed to send request: %s' % e)
tweepy.error.TweepError: Failed to send request: Only unicode objects are escapable. Got <generator object <genexpr> at 0xb7050cd4> of type <type 'generator'>.

Traceback (most recent call last):
  File ""twi.py"", line 16, in <module>
    api.update_status(""hello world"")
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 235, in _call
    return method.execute()
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 185, in execute
    raise TweepError('Failed to send request: %s' % e)
tweepy.error.TweepError: Failed to send request: Only unicode objects are escapable. Got <generator object <genexpr> at 0xb6fb0cd4> of type <type 'generator'>.

this is my code:
auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

api = API(auth)

api.update_status(""hello world"") 
"
522,Fixed httplib import,2014-12-10T01:58:32Z,2014-12-10T02:02:52Z,,,,"In Python 3 httplib should be imported and used as http.client
"
521,Authentication tutorial is outdated,2014-12-09T08:21:12Z,,,,,"1. The attributes `auth.request_token.key` and `auth.request_token.secret` do not exist anymore. `auth.request_token` is now a dictionary and the key and secret are found in `auth.request_token['oauth_token']` and `auth.request_token['oauth_token_secret']`.
2. `auth.set_request_token` no longer exists and it seems one has to assign the above dictionary directly to `auth.request_token`.
3. `auth.access_token.key, auth.access_token.secret` don't exist anymore. One has to use `auth.access_token` and `auth.access_token_secret`.

Did not find any mentions of these breaking changes in the docs or the changelog.
"
520,utils.urlencode_noplus broken in Python 3,2014-12-08T22:34:43Z,,,,,"The `'%s=%s' % ...` type of formatting in this function is not suitable for `bytes` in Python 3:

```
In [1]: import tweepy

In [2]: tweepy.utils.urlencode_noplus({'x': 'y'})
Out[2]: 'x=y'

In [3]: tweepy.utils.urlencode_noplus({'x': b'y'})
Out[3]: 'x=b%27y%27'
```

In the latter case the actual repr-ed string `b'y'` is encoded. I encountered this when using the streaming API where filter arguments are encoded to `bytes` before POSTing to statuses/filter.json.
"
519,TweepError: Failed to send request: local variable 'auth',2014-12-06T19:37:35Z,,,TweepError,TweepError: Failed to send request: local variable 'auth' referenced before assignment,"Hi, I got `TweepError: Failed to send request: local variable 'auth' referenced before assignment` when i do

```
CONSUMER_KEY = ""(removed)""
CONSUMER_SECRET = ""(removed)""
ACCESS_KEY = ""893312988-(removed)""
ACCESS_SECRET = ""(removed)""
authid = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
authid.set_access_token(ACCESS_KEY, ACCESS_SECRET)
api = tweepy.API(authid)

user = tweepy.api.get_user(""twitter"")
timeline = api.user_timeline(screen_name=user, include_rts=True, count=100)
```

Error detail:

```
INFO     2014-12-06 19:32:38,765 binder.py:102] PARAMS: {'id': 'twitter'}
ERROR    2014-12-06 19:32:38,766 app.py:1423] Exception on / [GET]
Traceback (most recent call last):
  File ""/Users/franco/PycharmProjects/flaskcourse/lib/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/Users/franco/PycharmProjects/flaskcourse/lib/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/Users/franco/PycharmProjects/flaskcourse/lib/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/Users/franco/PycharmProjects/flaskcourse/lib/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/Users/franco/PycharmProjects/flaskcourse/lib/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/Users/franco/PycharmProjects/flaskcourse/flaskcourse.py"", line 29, in hello_world
    return render_template(""index.html"", tweet=getTweetCount())
  File ""/Users/franco/PycharmProjects/flaskcourse/flaskcourse.py"", line 18, in getTweetCount
    user = tweepy.api.get_user(""twitter"")
  File ""/Users/franco/PycharmProjects/flaskcourse/lib/tweepy/binder.py"", line 235, in _call
    return method.execute()
  File ""/Users/franco/PycharmProjects/flaskcourse/lib/tweepy/binder.py"", line 185, in execute
    raise TweepError('Failed to send request: %s' % e)
TweepError: Failed to send request: local variable 'auth' referenced before assignment
```
"
518,Attempt to fix cursor invocation,2014-12-01T11:17:44Z,2014-12-01T17:16:04Z,,,,"If `hasattr(self.method, '__self__')` is false, `self.method()` is being called twice. The 2nd time without the initially passed arguments.

Fixes #515, but could cause other issues.
"
517,Please create wheel package instead of dumb,2014-12-01T07:41:10Z,2014-12-01T19:26:57Z,,,,"https://pypi.python.org/pypi/tweepy/3.0 has `sdist` and `bdist` distribution files. However I suspect that `bdist` is not intended. It would be better if wheel package is there by using `python setup.py bdist_wheel upload`. Thanks.
"
516,"""Permission denied"" on Google App Engine",2014-11-30T12:33:45Z,2014-12-01T07:35:10Z,,TweepError,"TweepError: Failed to send request: ('Connection aborted.', error(13, 'Permission denied'))","I'm getting the exception below when using update_status() on GAE:

TweepError: Failed to send request: ('Connection aborted.', error(13, 'Permission denied'))
"
515,Issue with cursors,2014-11-29T11:02:54Z,2014-12-01T17:16:04Z,,,,"Something changed in the py3 branch regarding how parameters are passed to cursors.

for example:

``` python
api.user_timeline(id=screen_name)
```

This will give the correct results
But this:

```
tweepy.Cursor(api.user_timeline, id=screen_name, count=100).items(500)
```

Returns the posts of the currently logged in user, no the one specified by the `id` argument.
"
514,Cursor + JSONParser + followers_ids(),2014-11-24T20:26:42Z,,,KeyError,KeyError: 0,"I'm having trouble wrapping api.followers_ids with Cursor when the api parser is JSONParser(). Here's an example. Not sure if this is a problem with other API calls. Any ideas?

```
api = tweepy.API(auth, parser=tweepy.parsers.JSONParser())
for f in Cursor(api.followers_ids).items():
    print f

---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-56-df1d83b05c72> in <module>()
----> 1 for f in Cursor(api.followers_ids).items():
      2     print f
      3 

/Users/mike/miniconda/lib/python2.7/site-packages/tweepy/cursor.pyc in next(self)
    183         self.page_index += 1
    184         self.num_tweets += 1
--> 185         return self.current_page[self.page_index]
    186 
    187     def prev(self):

KeyError: 0
```
"
513,Modify ReadBuffer for Py3,2014-11-19T15:01:05Z,2014-11-19T19:59:17Z,,,,"In my Python 3.4.2 environment, UserStreaming did't work
because of an error of bytes-to-str conversion.

And also in my Python 2.7.8 environment, UserStreaming didn't work
because of UnicodeDecodeError.
To solve this problem, I added following to my code which imports tweepy.

```
import sys
reload(sys)
sys.setdefaultencoding('UTF-8')
```
"
512,How to contribute to the project ?,2014-11-19T14:44:11Z,2014-12-01T03:24:34Z,,,,"I want to contribute to the project, i forked the repository but there are lot of branches. I assumed that fixes branch is for fixing bug (may be i'm wrong) but what is the difference between master branch and production branch ?

I suggest to add CONTRIBUTING.md file to the project to explain how to contribute to the project and explain in which branch contributor should send pull-to-request.
"
511,Fix CursorIterator.next() for Python 3,2014-11-19T10:59:56Z,2014-11-19T19:59:49Z,,,,"It was calling next, but returning None.

E.g. when iterating over returned tweets: `for tweet in Custor(...)` all objects were None.
"
510,Python 3.4.1,2014-11-19T08:59:51Z,2014-12-01T02:38:56Z,,ImportError,ImportError: cannot import name 'quote',"I think something is broken with 3.4.1.

```
▶ mkvirtualenv hashtag_winner -p ~/.pyenv/versions/3.4.1/bin/python
Running virtualenv with interpreter /Users/Simon/.pyenv/versions/3.4.1/bin/python
Using base prefix '/Users/Simon/.pyenv/versions/3.4.1'
New python executable in hashtag_winner/bin/python
Installing setuptools, pip...done.
```

```
▶ python --version
Python 3.4.1
```

```
▶ pip install tweepy
Downloading/unpacking tweepy
  Downloading tweepy-2.3.0.tar.gz
  Running setup.py (path:/Users/Simon/.virtualenvs/hashtag_winner/build/tweepy/setup.py) egg_info for package tweepy
    Traceback (most recent call last):
      File ""<string>"", line 17, in <module>
      File ""/Users/Simon/.virtualenvs/hashtag_winner/build/tweepy/setup.py"", line 4, in <module>
        from tweepy import __version__
      File ""/Users/Simon/.virtualenvs/hashtag_winner/build/tweepy/tweepy/__init__.py"", line 12, in <module>
        from tweepy.models import Status, User, DirectMessage, Friendship, SavedSearch, SearchResults, ModelFactory, Category
      File ""/Users/Simon/.virtualenvs/hashtag_winner/build/tweepy/tweepy/models.py"", line 6, in <module>
        from tweepy.utils import parse_datetime, parse_html_value, parse_a_href
      File ""/Users/Simon/.virtualenvs/hashtag_winner/build/tweepy/tweepy/utils.py"", line 9, in <module>
        from urllib import quote
    ImportError: cannot import name 'quote'
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File ""<string>"", line 17, in <module>

  File ""/Users/Simon/.virtualenvs/hashtag_winner/build/tweepy/setup.py"", line 4, in <module>

    from tweepy import __version__

  File ""/Users/Simon/.virtualenvs/hashtag_winner/build/tweepy/tweepy/__init__.py"", line 12, in <module>

    from tweepy.models import Status, User, DirectMessage, Friendship, SavedSearch, SearchResults, ModelFactory, Category

  File ""/Users/Simon/.virtualenvs/hashtag_winner/build/tweepy/tweepy/models.py"", line 6, in <module>

    from tweepy.utils import parse_datetime, parse_html_value, parse_a_href

  File ""/Users/Simon/.virtualenvs/hashtag_winner/build/tweepy/tweepy/utils.py"", line 9, in <module>

    from urllib import quote

ImportError: cannot import name 'quote'

----------------------------------------
Cleaning up...
Command python setup.py egg_info failed with error code 1 in /Users/Simon/.virtualenvs/hashtag_winner/build/tweepy
Storing debug log for failure in /Users/Simon/.pip/pip.log
```
"
509,Updated examples to work in Python 3.,2014-11-15T14:34:18Z,2014-11-29T12:21:02Z,,,,"Fix warnings on install due to failure to compile example scripts under Python 3.
"
508,Classify tweepy.,2014-11-15T13:48:48Z,2014-11-15T15:08:09Z,,,,"Added classifiers to setup.py to advertise new Python version compatibility etc :-)
"
507,Port to Python 3.3+,2014-11-15T13:14:14Z,2014-11-15T13:32:39Z,,,,"A massive PR to port to Python 3.3+ with the same codebase (using the 'six' library).

This PR will require some changes to the test/CI setup to account for the switch to VCR.py for HTTP request caching.
"
506,How to show if someone follows me?,2014-11-14T05:14:23Z,,,,,"I noticed the method exists_friendship is removed, and now I don't know how to know if someone is following me (by the screen name). I noticed show_friendship may help, but I didn't find some documentation about that, or the object Friendship.

Thanks.
"
505,Modify on_data method of StreamListener to process warning messages,2014-11-12T12:35:28Z,2014-11-12T19:54:24Z,,,,"Extend on_data method by including a conditional to process warning messages and add the definition of the method that actually manages those warning messages.-

In addition, a small typo was fixed in the comment of the on_limit method.-
"
504,Support for sample stream,2014-11-10T16:54:43Z,2015-11-05T04:54:49Z,,,,
503,Stream: Not verbose on_error handler,2014-11-02T15:32:07Z,,,,,"Hi,

I'm trying the stream API but the on_error handler gives me only the integer 401, that is clearly not verbose and it does not helps.
"
502,FIX: To create an app it's not dev.twitter.com but apps.twitter.com,2014-11-02T15:20:12Z,2014-11-02T17:52:26Z,,,,
501,requests.compat.IncompleteRead not available in requests >= 2.4.0,2014-10-30T17:15:39Z,2014-10-30T18:49:45Z,,AttributeError,AttributeError: 'module' object has no attribute 'IncompleteRead',"c841a09a0a05b27979a5768274735d6fde184ea2 adds catching a requests.compat.IncompleteRead.

requests.compat.IncompleteRead was removed in requests 2.4.0.  This results in:

```
  File ""/Users/justinlittman/Data/socialfeedharvester/ENV/lib/python2.7/site-packages/tweepy/streaming.py"", line 233, in _run
    except (Timeout, ssl.SSLError, requests.compat.IncompleteRead) as exc:
AttributeError: 'module' object has no attribute 'IncompleteRead'
```
"
500,Update api.rst,2014-10-28T11:43:42Z,2014-10-28T18:46:02Z,,,,"Added missing since_id parameter for search()
"
499,"Revert ""Unescape stream data from Twitter""",2014-10-23T21:25:59Z,2014-10-23T23:12:24Z,,,,"This reverts commit 09e29c815bd21514ec62df2cd8e8d176678bee40 and fixes https://github.com/tweepy/tweepy/issues/495
"
498,"Treat IncompleteRead as a disconnect or timeout, and reconnect.",2014-10-22T00:20:20Z,2014-10-22T01:34:50Z,,,,"Fix for #18, #92, #237, #242, #448.
"
497,Allow specifying your own ssl certificates.,2014-10-20T22:46:27Z,2014-12-01T00:23:07Z,,,,
496,Add a read buffer so that tweepy does fewer socket.read calls.,2014-10-20T22:34:49Z,2014-10-25T04:30:08Z,,,,
495,Errors caused by unescaped stream data,2014-10-13T21:20:54Z,2014-10-23T23:12:24Z,,JSONDecodeError,"JSONDecodeError: Expecting ',' delimiter or '}': line 1 column 711 (char 710)","The changes introduced in commit 09e29c815bd21514ec62df2cd8e8d176678bee40 are causing erros when decoding the status objects.
For example, having the following entity in a status object:

```
{""text"":""&quot;""}
```

causes an exception of this type:

```
. . .
  File ""build/bdist.linux-x86_64/egg/tweepy/streaming.py"", line 43, in on_data
    data = json.loads(HTMLParser().unescape(raw_data))
  File ""/usr/lib/python2.7/dist-packages/simplejson/__init__.py"", line 488, in loads
    return _default_decoder.decode(s)
  File ""/usr/lib/python2.7/dist-packages/simplejson/decoder.py"", line 370, in decode
    obj, end = self.raw_decode(s)
  File ""/usr/lib/python2.7/dist-packages/simplejson/decoder.py"", line 389, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
JSONDecodeError: Expecting ',' delimiter or '}': line 1 column 711 (char 710)
```

To reproduce the same error, this piece of code throws an exception:

``` python
from HTMLParser import HTMLParser
import simplejson as json

status = '{""text"":""&quot;""}'
json.loads(HTMLParser().unescape(status))
```

while a simple `json.loads(status)` works fine.
"
494,Fix sample to use Requests instead of httplib,2014-10-12T13:39:43Z,2014-10-12T14:01:52Z,,,,"I tried to fix sample method in streaming.py, so it uses Requests properly instead of old httplib syntax. I used firehose, filter and retweet as template for how code should be structured. It should now work properly with language parameter. This should fix #493 .
"
493,Stream.sample using self.parameters where it should be using self.session.params,2014-10-11T20:07:34Z,2014-10-12T14:01:58Z,,,,"I believe there should be

```
self.session.params['language'] = language
```

on line 316 of streaming.py
instead of

```
 self.parameters['language'] = language
```

since we moved to using Requests instead of httplib. Or something like that, cause it's throwing error.
"
492,Comparison between Status object,2014-10-10T15:21:44Z,2014-10-10T18:59:09Z,,,,"tweepy.models.Status has no comparison method. so same status from `api.home_timeline()` and `api.mentions_timeline()` are marked as different.
It should be better when it has comparison method
"
491,Fix AttributeError,2014-10-09T06:33:30Z,2014-10-09T10:14:38Z,,AttributeError,AttributeError: 'Response' object has no attribute 'status',"AttributeError: 'Response' object has no attribute 'status'
"
490,AttributeError: 'module' object has no attribute 'OAuthHandler',2014-10-07T21:29:09Z,2014-10-07T22:40:38Z,,,,"Dear Tweepy Team,

I'm keep running into this error and I'm really frustrated. Have I installed it correctly? Or where could this error come from? I have no clue:

> > > auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
> > > Traceback (most recent call last):
> > >   File ""<stdin>"", line 1, in <module>
> > > AttributeError: 'module' object has no attribute 'OAuthHandler'

Any advice is appreciated!

Kind regards
"
489,Use POST for users/lookup.,2014-09-30T04:53:09Z,2014-09-30T10:34:53Z,,,,"The reference documentation recommends POST rather than GET for larger requests of user lookups. Also, added an option for `include_entities`.
"
488,Update the required version of the requests package (requirement.txt),2014-09-19T23:11:04Z,2014-09-20T00:03:52Z,,"""error","""error: Installed distribution requests 1.2.3 conflicts with requirement requests>=2.0.0""","When installing tweepy from git repository the following raises:

""error: Installed distribution requests 1.2.3 conflicts with requirement requests>=2.0.0""

To fix it the version of the requests package has to be update at least to 2.0.0. This is what this patch does.
"
487,"""cd tweepy"" command after git clone in README",2014-09-19T17:40:40Z,2014-09-19T18:48:21Z,,,,"Missing ""cd tweepy"" command after git clone in README.md in installation instructions
"
486,Pep8fix,2014-09-19T16:39:59Z,2014-09-23T18:56:00Z,,"tweepy/error.py:5:1, tweepy/error.py:15:1","tweepy/error.py:5:1: E302 expected 2 blank lines, found 1, tweepy/error.py:15:1: W391 blank line at end of file","This repo needs some pep8 fixes. Below, you can see the before and after flake8 tweetpy outputs.Yes, it still needs some fixes but also it needs a real refactor for that ones.

tweepy/auth.py:1:1: F401 'Request' imported but unused
tweepy/auth.py:1:1: F401 'urlopen' imported but unused
tweepy/auth.py:2:1: F401 'urllib' imported but unused
tweepy/auth.py:3:1: F401 'base64' imported but unused
tweepy/auth.py:4:1: F401 'json' imported but unused
tweepy/auth.py:14:1: E302 expected 2 blank lines, found 1
tweepy/auth.py:43:80: E501 line too long (107 > 79 characters)
tweepy/auth.py:49:80: E501 line too long (162 > 79 characters)
tweepy/auth.py:51:45: E251 unexpected spaces around keyword / parameter equals
tweepy/auth.py:51:47: E251 unexpected spaces around keyword / parameter equals
tweepy/auth.py:64:56: E251 unexpected spaces around keyword / parameter equals
tweepy/auth.py:64:58: E251 unexpected spaces around keyword / parameter equals
tweepy/auth.py:64:77: E251 unexpected spaces around keyword / parameter equals
tweepy/auth.py:64:79: E251 unexpected spaces around keyword / parameter equals
tweepy/auth.py:64:80: E501 line too long (85 > 79 characters)
tweepy/auth.py:71:80: E501 line too long (81 > 79 characters)
tweepy/auth.py:72:80: E501 line too long (84 > 79 characters)
tweepy/auth.py:76:80: E501 line too long (81 > 79 characters)
tweepy/auth.py:81:40: E251 unexpected spaces around keyword / parameter equals
tweepy/auth.py:81:42: E251 unexpected spaces around keyword / parameter equals
tweepy/auth.py:88:80: E501 line too long (258 > 79 characters)
tweepy/auth.py:105:80: E501 line too long (81 > 79 characters)
tweepy/auth.py:107:17: E128 continuation line under-indented for visual indent
tweepy/auth.py:108:17: E128 continuation line under-indented for visual indent
tweepy/auth.py:112:80: E501 line too long (96 > 79 characters)
tweepy/auth.py:123:80: E501 line too long (80 > 79 characters)
tweepy/auth.py:130:5: E301 expected 1 blank line, found 0
tweepy/auth.py:133:1: W293 blank line contains whitespace
tweepy/auth.py:146:80: E501 line too long (106 > 79 characters)
tweepy/auth.py:147:17: E128 continuation line under-indented for visual indent
tweepy/auth.py:154:9: E303 too many blank lines (2)
tweepy/auth.py:157:5: E303 too many blank lines (2)
tweepy/auth.py:161:5: E303 too many blank lines (2)
tweepy/cursor.py:8:1: E302 expected 2 blank lines, found 1
tweepy/cursor.py:36:1: E302 expected 2 blank lines, found 1
tweepy/cursor.py:53:1: E302 expected 2 blank lines, found 1
tweepy/cursor.py:63:80: E501 line too long (83 > 79 characters)
tweepy/cursor.py:66:17: E126 continuation line over-indented for hanging indent
tweepy/cursor.py:78:17: E126 continuation line over-indented for hanging indent
tweepy/cursor.py:83:1: E302 expected 2 blank lines, found 1
tweepy/cursor.py:99:80: E501 line too long (96 > 79 characters)
tweepy/cursor.py:110:80: E501 line too long (86 > 79 characters)
tweepy/cursor.py:111:1: W293 blank line contains whitespace
tweepy/cursor.py:120:1: W293 blank line contains whitespace
tweepy/cursor.py:125:35: W291 trailing whitespace
tweepy/cursor.py:145:1: E302 expected 2 blank lines, found 1
tweepy/cursor.py:167:1: E302 expected 2 blank lines, found 1
tweepy/cursor.py:179:80: E501 line too long (86 > 79 characters)
tweepy/cursor.py:199:1: W391 blank line at end of file
tweepy/parsers.py:54:45: W601 .has_key() is deprecated, use 'in'
tweepy/parsers.py:55:80: E501 line too long (107 > 79 characters)
tweepy/parsers.py:63:17: W601 .has_key() is deprecated, use 'in'
tweepy/parsers.py:77:43: E701 multiple statements on one line (colon)
tweepy/parsers.py:80:80: E501 line too long (88 > 79 characters)
tweepy/parsers.py:97:1: W391 blank line at end of file
tweepy/utils.py:6:1: F401 'time' imported but unused
tweepy/utils.py:7:1: F401 're' imported but unused
tweepy/utils.py:8:1: F401 'locale' imported but unused
tweepy/utils.py:39:1: E303 too many blank lines (3)
tweepy/utils.py:47:80: E501 line too long (80 > 79 characters)
tweepy/utils.py:53:1: E302 expected 2 blank lines, found 1
tweepy/utils.py:57:1: E302 expected 2 blank lines, found 1
tweepy/utils.py:58:71: E502 the backslash is redundant between brackets
tweepy/utils.py:59:9: E128 continuation line under-indented for visual indent
tweepy/binder.py:45:80: E501 line too long (94 > 79 characters)
tweepy/binder.py:46:80: E501 line too long (115 > 79 characters)
tweepy/binder.py:81:80: E501 line too long (91 > 79 characters)
tweepy/binder.py:89:80: E501 line too long (86 > 79 characters)
tweepy/binder.py:97:80: E501 line too long (90 > 79 characters)
tweepy/binder.py:104:80: E501 line too long (97 > 79 characters)
tweepy/binder.py:139:33: E126 continuation line over-indented for hanging indent
tweepy/binder.py:139:80: E501 line too long (96 > 79 characters)
tweepy/binder.py:143:80: E501 line too long (88 > 79 characters)
tweepy/binder.py:157:80: E501 line too long (94 > 79 characters)
tweepy/binder.py:158:80: E501 line too long (82 > 79 characters)
tweepy/binder.py:170:80: E501 line too long (130 > 79 characters)
tweepy/binder.py:176:80: E501 line too long (102 > 79 characters)
tweepy/binder.py:179:80: E501 line too long (85 > 79 characters)
tweepy/binder.py:192:80: E501 line too long (93 > 79 characters)
tweepy/binder.py:199:80: E501 line too long (85 > 79 characters)
tweepy/binder.py:215:21: E127 continuation line over-indented for visual indent
tweepy/error.py:5:1: E302 expected 2 blank lines, found 1
tweepy/error.py:15:1: W391 blank line at end of file
tweepy/models.py:5:1: F401 'TweepError' imported but unused
tweepy/models.py:30:41: W291 trailing whitespace
tweepy/models.py:35:1: E302 expected 2 blank lines, found 1
tweepy/models.py:56:80: E501 line too long (80 > 79 characters)
tweepy/models.py:64:47: E231 missing whitespace after ','
tweepy/models.py:76:80: E501 line too long (87 > 79 characters)
tweepy/models.py:164:80: E501 line too long (81 > 79 characters)
tweepy/models.py:167:80: E501 line too long (83 > 79 characters)
tweepy/models.py:251:80: E501 line too long (85 > 79 characters)
tweepy/models.py:263:14: E231 missing whitespace after ','
tweepy/models.py:288:80: E501 line too long (81 > 79 characters)
tweepy/models.py:297:80: E501 line too long (80 > 79 characters)
tweepy/models.py:309:80: E501 line too long (84 > 79 characters)
tweepy/models.py:312:80: E501 line too long (81 > 79 characters)
tweepy/models.py:314:1: E302 expected 2 blank lines, found 1
tweepy/models.py:318:14: E231 missing whitespace after ','
tweepy/models.py:327:1: E302 expected 2 blank lines, found 1
tweepy/models.py:331:14: E231 missing whitespace after ','
tweepy/models.py:339:1: E302 expected 2 blank lines, found 1
tweepy/models.py:420:1: E302 expected 2 blank lines, found 1
tweepy/models.py:442:1: W391 blank line at end of file
tweepy/**init**.py:12:1: F401 'Category' imported but unused
tweepy/**init**.py:12:1: F401 'DirectMessage' imported but unused
tweepy/**init**.py:12:1: F401 'Friendship' imported but unused
tweepy/**init**.py:12:1: F401 'ModelFactory' imported but unused
tweepy/**init**.py:12:1: F401 'SavedSearch' imported but unused
tweepy/**init**.py:12:1: F401 'SearchResults' imported but unused
tweepy/**init**.py:12:1: F401 'Status' imported but unused
tweepy/**init**.py:12:1: F401 'User' imported but unused
tweepy/**init**.py:12:80: E501 line too long (117 > 79 characters)
tweepy/**init**.py:13:1: F401 'TweepError' imported but unused
tweepy/**init**.py:15:1: F401 'Cache' imported but unused
tweepy/**init**.py:15:1: F401 'FileCache' imported but unused
tweepy/**init**.py:15:1: F401 'MemoryCache' imported but unused
tweepy/**init**.py:16:1: F401 'AppAuthHandler' imported but unused
tweepy/**init**.py:16:1: F401 'OAuthHandler' imported but unused
tweepy/**init**.py:17:1: F401 'Stream' imported but unused
tweepy/**init**.py:17:1: F401 'StreamListener' imported but unused
tweepy/**init**.py:18:1: F401 'Cursor' imported but unused
tweepy/**init**.py:23:1: E302 expected 2 blank lines, found 1
tweepy/**init**.py:27:1: W391 blank line at end of file
tweepy/cache.py:270:1: E302 expected 2 blank lines, found 1
tweepy/cache.py:291:80: E501 line too long (84 > 79 characters)
tweepy/cache.py:307:1: E302 expected 2 blank lines, found 1
tweepy/cache.py:310:58: E251 unexpected spaces around keyword / parameter equals
tweepy/cache.py:310:60: E251 unexpected spaces around keyword / parameter equals
tweepy/cache.py:310:80: E501 line too long (103 > 79 characters)
tweepy/cache.py:310:90: E251 unexpected spaces around keyword / parameter equals
tweepy/cache.py:310:92: E251 unexpected spaces around keyword / parameter equals
tweepy/cache.py:322:80: E501 line too long (101 > 79 characters)
tweepy/cache.py:359:80: E501 line too long (83 > 79 characters)
tweepy/streaming.py:131:80: E501 line too long (97 > 79 characters)
tweepy/streaming.py:156:80: E501 line too long (81 > 79 characters)
tweepy/streaming.py:162:25: E128 continuation line under-indented for visual indent
tweepy/streaming.py:168:80: E501 line too long (84 > 79 characters)
tweepy/streaming.py:170:80: E501 line too long (83 > 79 characters)
tweepy/streaming.py:178:80: E501 line too long (99 > 79 characters)
tweepy/streaming.py:180:80: E501 line too long (104 > 79 characters)
tweepy/streaming.py:183:47: E712 comparison to False should be 'if cond is False:' or 'if not cond:'
tweepy/streaming.py:188:80: E501 line too long (80 > 79 characters)
tweepy/streaming.py:214:80: E501 line too long (83 > 79 characters)
tweepy/streaming.py:234:49: E201 whitespace after '('
tweepy/streaming.py:234:71: E202 whitespace before ')'
tweepy/streaming.py:254:13: E128 continuation line under-indented for visual indent
tweepy/streaming.py:259:18: E225 missing whitespace around operator
tweepy/streaming.py:270:80: E501 line too long (88 > 79 characters)
tweepy/streaming.py:305:80: E501 line too long (82 > 79 characters)
tweepy/streaming.py:319:80: E501 line too long (88 > 79 characters)
tweepy/streaming.py:329:80: E501 line too long (97 > 79 characters)
tweepy/streaming.py:349:1: W391 blank line at end of file
tweepy/api.py:7:1: F401 'urllib' imported but unused
tweepy/api.py:27:80: E501 line too long (82 > 79 characters)
tweepy/api.py:28:80: E501 line too long (82 > 79 characters)
tweepy/api.py:35:80: E501 line too long (96 > 79 characters)
tweepy/api.py:36:80: E501 line too long (80 > 79 characters)
tweepy/api.py:38:80: E501 line too long (93 > 79 characters)
tweepy/api.py:39:80: E501 line too long (115 > 79 characters)
tweepy/api.py:68:80: E501 line too long (96 > 79 characters)
tweepy/api.py:86:80: E501 line too long (85 > 79 characters)
tweepy/api.py:118:80: E501 line too long (83 > 79 characters)
tweepy/api.py:131:80: E501 line too long (89 > 79 characters)
tweepy/api.py:144:80: E501 line too long (80 > 79 characters)
tweepy/api.py:168:5: E303 too many blank lines (2)
tweepy/api.py:171:80: E501 line too long (120 > 79 characters)
tweepy/api.py:178:80: E501 line too long (122 > 79 characters)
tweepy/api.py:183:80: E501 line too long (96 > 79 characters)
tweepy/api.py:185:80: E501 line too long (87 > 79 characters)
tweepy/api.py:194:80: E501 line too long (87 > 79 characters)
tweepy/api.py:243:4: W291 trailing whitespace
tweepy/api.py:268:80: E501 line too long (106 > 79 characters)
tweepy/api.py:274:80: E501 line too long (108 > 79 characters)
tweepy/api.py:279:80: E501 line too long (83 > 79 characters)
tweepy/api.py:312:80: E501 line too long (81 > 79 characters)
tweepy/api.py:338:80: E501 line too long (89 > 79 characters)
tweepy/api.py:404:80: E501 line too long (83 > 79 characters)
tweepy/api.py:459:80: E501 line too long (89 > 79 characters)
tweepy/api.py:537:80: E501 line too long (116 > 79 characters)
tweepy/api.py:564:80: E501 line too long (82 > 79 characters)
tweepy/api.py:577:80: E501 line too long (88 > 79 characters)
tweepy/api.py:591:80: E501 line too long (87 > 79 characters)
tweepy/api.py:592:80: E501 line too long (161 > 79 characters)
tweepy/api.py:606:80: E501 line too long (98 > 79 characters)
tweepy/api.py:618:80: E501 line too long (109 > 79 characters)
tweepy/api.py:631:80: E501 line too long (99 > 79 characters)
tweepy/api.py:633:80: E501 line too long (85 > 79 characters)
tweepy/api.py:644:80: E501 line too long (80 > 79 characters)
tweepy/api.py:659:80: E501 line too long (91 > 79 characters)
tweepy/api.py:665:80: E501 line too long (93 > 79 characters)
tweepy/api.py:763:80: E501 line too long (94 > 79 characters)
tweepy/api.py:773:80: E501 line too long (82 > 79 characters)
tweepy/api.py:800:80: E501 line too long (80 > 79 characters)
tweepy/api.py:843:80: E501 line too long (108 > 79 characters)
tweepy/api.py:850:80: E501 line too long (110 > 79 characters)
tweepy/api.py:870:80: E501 line too long (86 > 79 characters)
tweepy/api.py:876:80: E501 line too long (88 > 79 characters)
tweepy/api.py:896:80: E501 line too long (122 > 79 characters)
tweepy/api.py:902:80: E501 line too long (124 > 79 characters)
tweepy/api.py:920:80: E501 line too long (103 > 79 characters)
tweepy/api.py:927:80: E501 line too long (105 > 79 characters)
tweepy/api.py:934:80: E501 line too long (103 > 79 characters)
tweepy/api.py:941:80: E501 line too long (105 > 79 characters)
tweepy/api.py:955:80: E501 line too long (82 > 79 characters)
tweepy/api.py:956:80: E501 line too long (102 > 79 characters)
tweepy/api.py:963:80: E501 line too long (104 > 79 characters)
tweepy/api.py:968:5: E303 too many blank lines (2)
tweepy/api.py:969:80: E501 line too long (81 > 79 characters)
tweepy/api.py:978:80: E501 line too long (83 > 79 characters)
tweepy/api.py:979:80: E501 line too long (102 > 79 characters)
tweepy/api.py:986:80: E501 line too long (104 > 79 characters)
tweepy/api.py:993:80: E501 line too long (86 > 79 characters)
tweepy/api.py:999:80: E501 line too long (88 > 79 characters)
tweepy/api.py:1005:80: E501 line too long (102 > 79 characters)
tweepy/api.py:1011:80: E501 line too long (104 > 79 characters)
tweepy/api.py:1016:80: E501 line too long (82 > 79 characters)
tweepy/api.py:1030:80: E501 line too long (83 > 79 characters)
tweepy/api.py:1045:80: E501 line too long (86 > 79 characters)
tweepy/api.py:1051:80: E501 line too long (88 > 79 characters)
tweepy/api.py:1057:80: E501 line too long (102 > 79 characters)
tweepy/api.py:1063:80: E501 line too long (104 > 79 characters)
tweepy/api.py:1068:80: E501 line too long (85 > 79 characters)
tweepy/api.py:1102:80: E501 line too long (168 > 79 characters)
tweepy/api.py:1108:80: E501 line too long (115 > 79 characters)
tweepy/api.py:1139:80: E501 line too long (81 > 79 characters)
tweepy/api.py:1145:80: E501 line too long (83 > 79 characters)
tweepy/api.py:1163:80: E501 line too long (116 > 79 characters)
tweepy/api.py:1169:80: E501 line too long (118 > 79 characters)
tweepy/api.py:1186:80: E501 line too long (83 > 79 characters)
tweepy/api.py:1196:80: E501 line too long (87 > 79 characters)
tweepy/api.py:1213:80: E501 line too long (81 > 79 characters)
tweepy/api.py:1241:80: E501 line too long (104 > 79 characters)

After this PR;

tweepy/auth.py:81:80: E501 line too long (81 > 79 characters)
tweepy/auth.py:95:80: E501 line too long (92 > 79 characters)
tweepy/auth.py:96:80: E501 line too long (102 > 79 characters)
tweepy/auth.py:97:80: E501 line too long (85 > 79 characters)
tweepy/auth.py:124:80: E501 line too long (94 > 79 characters)
tweepy/cursor.py:66:80: E501 line too long (83 > 79 characters)
tweepy/cursor.py:80:80: E501 line too long (87 > 79 characters)
tweepy/cursor.py:103:80: E501 line too long (96 > 79 characters)
tweepy/cursor.py:114:80: E501 line too long (80 > 79 characters)
tweepy/cursor.py:188:80: E501 line too long (86 > 79 characters)
tweepy/parsers.py:54:46: W601 .has_key() is deprecated, use 'in'
tweepy/parsers.py:65:17: W601 .has_key() is deprecated, use 'in'
tweepy/binder.py:50:80: E501 line too long (84 > 79 characters)
tweepy/binder.py:51:80: E501 line too long (86 > 79 characters)
tweepy/binder.py:86:80: E501 line too long (91 > 79 characters)
tweepy/binder.py:94:80: E501 line too long (86 > 79 characters)
tweepy/binder.py:102:80: E501 line too long (90 > 79 characters)
tweepy/binder.py:109:80: E501 line too long (97 > 79 characters)
tweepy/binder.py:147:80: E501 line too long (80 > 79 characters)
tweepy/binder.py:150:80: E501 line too long (100 > 79 characters)
tweepy/binder.py:151:80: E501 line too long (89 > 79 characters)
tweepy/binder.py:180:80: E501 line too long (86 > 79 characters)
tweepy/binder.py:187:80: E501 line too long (102 > 79 characters)
tweepy/binder.py:190:80: E501 line too long (85 > 79 characters)
tweepy/binder.py:203:80: E501 line too long (93 > 79 characters)
tweepy/binder.py:210:80: E501 line too long (85 > 79 characters)
tweepy/models.py:79:80: E501 line too long (87 > 79 characters)
tweepy/models.py:262:80: E501 line too long (85 > 79 characters)
tweepy/streaming.py:198:80: E501 line too long (80 > 79 characters)
tweepy/streaming.py:287:80: E501 line too long (88 > 79 characters)
tweepy/streaming.py:322:80: E501 line too long (82 > 79 characters)
tweepy/streaming.py:336:80: E501 line too long (88 > 79 characters)
tweepy/api.py:26:80: E501 line too long (82 > 79 characters)
tweepy/api.py:27:80: E501 line too long (82 > 79 characters)
tweepy/api.py:34:80: E501 line too long (96 > 79 characters)
tweepy/api.py:35:80: E501 line too long (80 > 79 characters)
tweepy/api.py:37:80: E501 line too long (93 > 79 characters)
tweepy/api.py:38:80: E501 line too long (115 > 79 characters)
tweepy/api.py:118:80: E501 line too long (83 > 79 characters)
tweepy/api.py:131:80: E501 line too long (89 > 79 characters)
tweepy/api.py:144:80: E501 line too long (80 > 79 characters)
tweepy/api.py:170:80: E501 line too long (120 > 79 characters)
tweepy/api.py:177:80: E501 line too long (122 > 79 characters)
tweepy/api.py:182:80: E501 line too long (96 > 79 characters)
tweepy/api.py:184:80: E501 line too long (87 > 79 characters)
tweepy/api.py:193:80: E501 line too long (87 > 79 characters)
tweepy/api.py:267:80: E501 line too long (106 > 79 characters)
tweepy/api.py:273:80: E501 line too long (108 > 79 characters)
tweepy/api.py:278:80: E501 line too long (83 > 79 characters)
tweepy/api.py:311:80: E501 line too long (81 > 79 characters)
tweepy/api.py:337:80: E501 line too long (89 > 79 characters)
tweepy/api.py:403:80: E501 line too long (83 > 79 characters)
tweepy/api.py:458:80: E501 line too long (89 > 79 characters)
tweepy/api.py:536:80: E501 line too long (116 > 79 characters)
tweepy/api.py:563:80: E501 line too long (82 > 79 characters)
tweepy/api.py:576:80: E501 line too long (88 > 79 characters)
tweepy/api.py:590:80: E501 line too long (87 > 79 characters)
tweepy/api.py:607:80: E501 line too long (98 > 79 characters)
tweepy/api.py:619:80: E501 line too long (109 > 79 characters)
tweepy/api.py:632:80: E501 line too long (99 > 79 characters)
tweepy/api.py:634:80: E501 line too long (85 > 79 characters)
tweepy/api.py:645:80: E501 line too long (80 > 79 characters)
tweepy/api.py:660:80: E501 line too long (91 > 79 characters)
tweepy/api.py:666:80: E501 line too long (93 > 79 characters)
tweepy/api.py:764:80: E501 line too long (94 > 79 characters)
tweepy/api.py:774:80: E501 line too long (82 > 79 characters)
tweepy/api.py:801:80: E501 line too long (80 > 79 characters)
tweepy/api.py:844:80: E501 line too long (108 > 79 characters)
tweepy/api.py:851:80: E501 line too long (110 > 79 characters)
tweepy/api.py:871:80: E501 line too long (86 > 79 characters)
tweepy/api.py:877:80: E501 line too long (88 > 79 characters)
tweepy/api.py:963:80: E501 line too long (82 > 79 characters)
tweepy/api.py:978:80: E501 line too long (81 > 79 characters)
tweepy/api.py:987:80: E501 line too long (83 > 79 characters)
tweepy/api.py:1031:80: E501 line too long (82 > 79 characters)
tweepy/api.py:1047:80: E501 line too long (83 > 79 characters)
tweepy/api.py:1091:80: E501 line too long (85 > 79 characters)
tweepy/api.py:1166:80: E501 line too long (81 > 79 characters)
tweepy/api.py:1216:80: E501 line too long (83 > 79 characters)
tweepy/api.py:1226:80: E501 line too long (87 > 79 characters)
tweepy/api.py:1243:80: E501 line too long (81 > 79 characters)
tweepy/api.py:1271:80: E501 line too long (104 > 79 characters)
"
485,Update docstrings and methods in api.py.,2014-09-19T09:39:36Z,2014-09-19T10:26:58Z,,,,"Update the references URL in the doctring with the new Twitter API doc.
Fix formatting for :allowed_param in the docstring.
Fix method for destroy endpoints (POST instead of DELETE).
"
484,RateLimitHandler,2014-08-25T17:50:15Z,2014-12-02T17:31:23Z,,,,"- **Multiple access tokens with `RateLimitHandler`** (https://github.com/svven/tweepy/blob/master/tweepy/limit.py)

> RateLimitHandler class inherits from OAuthHandler, and introduces add_access_token method that can be used as follows:
> 
> ``` python
> from tweepy import RateLimitHandler
> from config import CONSUMER_KEY, CONSUMER_SECRET, ACCESS_TOKENS
> 
> def get_api():
>   auth = RateLimitHandler(CONSUMER_KEY, CONSUMER_SECRET)
>   for key, secret in ACCESS_TOKENS:
>       try:
>           auth.add_access_token(key, secret)
>       except Exception, e:
>           print key, e
>   print 'Token pool size: %d' % len(auth.tokens)
>   api = API(auth, 
>       wait_on_rate_limit=True, wait_on_rate_limit_notify=True)
>   return api
> 
> api = get_api()
> ```
> 
> Provided access tokens are used selectively based on requested resource (https://dev.twitter.com/docs/rate-limiting/1.1/limits) and current rate limits. The access token with most remaining requests per window for the specified resource is being selected and used when applying the authentication, before the actual request is performed. This pattern ensures the usage of available access tokens in a round robin fashion, exploiting to maximum the rate limits.
> 
> Here's a good use case for it: https://github.com/ducu/twitter-most-followed#requirements
- **Various fixes**: IdIterator, response status code, API DELETE methods.
"
483,"TweepError: Failed to send request: must be _socket.socket, not socket",2014-08-24T14:35:28Z,,,,,"Hello,

I am trying to fetch tweets using tweepy in Google App Engine and getting the following error

```
INFO     2014-08-24 14:29:36,162 connectionpool.py:695] Starting new HTTPS connection (1):         api.twitter.com
ERROR    2014-08-24 14:29:36,584 webapp2.py:1528] Failed to send request: must be _socket.socket, not socket
Traceback (most recent call last):
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 1511, in __call__
        rv = self.handle_exception(request, response, e)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 1505, in __call__
        rv = self.router.dispatch(request, response)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 1253, in default_dispatcher
        return route.handler_adapter(request, response)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 1077, in __call__
        return handler.dispatch()
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 547, in dispatch
        return self.handle_exception(e, self.app.debug)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 545, in dispatch
        return method(*args, **kwargs)
  File ""/Users/krishna/Documents/DATASCI/twitterapi/analyzetweets/main.py"", line 52, in post
        tweetTextCotainer = THandler.getTweetsText()
  File ""/Users/krishna/Documents/DATASCI/twitterapi/analyzetweets/main.py"", line 84, in getTweetsText
        for tweet in c.items():
  File ""tweepy/tweepy/cursor.py"", line 181, in next
        self.current_page = self.page_iterator.next()
  File ""tweepy/tweepy/cursor.py"", line 99, in next
        data = self.method(max_id=self.max_id, parser=RawParser(), *self.args, **self.kargs)
  File ""tweepy/tweepy/binder.py"", line 209, in _call
        return method.execute()
   File ""tweepy/tweepy/binder.py"", line 160, in execute
        raise TweepError('Failed to send request: %s' % e)
  TweepError: Failed to send request: must be _socket.socket, not socket
    ERROR    2014-08-24 14:29:36,590 cgi.py:121] Traceback (most recent call last):
  File ""/Users/krishna/Documents/DATASCI/twitterapi/analyzetweets/main.py"", line 113, in main
        run_wsgi_app(application)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/google/appengine/ext/webapp/util.py"", line 98, in run_wsgi_app
        run_bare_wsgi_app(add_wsgi_middleware(application))
  File ""/Users/krishna/google-cloud-sdk/google-cloud-    sdk/platform/google_appengine/google/appengine/ext/webapp/util.py"", line 116, in run_bare_wsgi_app
    result = application(env, _start_response)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 1519, in __call__
        response = self._internal_error(e)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 1511, in __call__
        rv = self.handle_exception(request, response, e)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 1505, in __call__
        rv = self.router.dispatch(request, response)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 1253, in default_dispatcher
        return route.handler_adapter(request, response)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 1077, in __call__
        return handler.dispatch()
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 547, in dispatch
        return self.handle_exception(e, self.app.debug)
  File ""/Users/krishna/google-cloud-sdk/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.3/webapp2.py"", line 545, in dispatch
    return method(*args, **kwargs)
  File ""/Users/krishna/Documents/DATASCI/twitterapi/analyzetweets/main.py"", line 52, in post
        tweetTextCotainer = THandler.getTweetsText()
  File ""/Users/krishna/Documents/DATASCI/twitterapi/analyzetweets/main.py"", line 84, in         getTweetsText
        for tweet in c.items():
  File ""tweepy/tweepy/cursor.py"", line 181, in next
            self.current_page = self.page_iterator.next()
  File ""tweepy/tweepy/cursor.py"", line 99, in next
        data = self.method(max_id=self.max_id, parser=RawParser(), *self.args, **self.kargs)
  File ""tweepy/tweepy/binder.py"", line 209, in _call
        return method.execute()
  File ""tweepy/tweepy/binder.py"", line 160, in execute
        raise TweepError('Failed to send request: %s' % e)
        TweepError: Failed to send request: must be _socket.socket, not socket
```
"
482,Added language option at sample streaming endpoint,2014-08-19T20:49:33Z,2014-08-19T21:32:54Z,,,,
481,Cursor object has no attribute 'self',2014-08-19T12:12:15Z,,,AttributeError,AttributeError: 'function' object has no attribute '**self**',"Hi,

I've been using Tweepy for some weeks and all was working fine but when I installed it in a new computer it gives me this error trying to call a cursor:

Traceback (most recent call last):
  File ""TwitterAPI.py"", line 62, in <module>
    t.getPhotos(100)
  File ""TwitterAPI.py"", line 46, in getTw
    for tweet in tweepy.Cursor(self.api.user_timeline,q=self.u.name,screen_name=self.u.screen_name, include_rts=True).items(maxt):
  File ""build/bdist.linux-x86_64/egg/tweepy/cursor.py"", line 181, in next
  File ""build/bdist.linux-x86_64/egg/tweepy/cursor.py"", line 101, in next
AttributeError: 'function' object has no attribute '**self**'

Seems something of dependencies, but I cannot stablish what :( Still working in the old computer.

Many thnks
"
480,Spell correction on getting_started.rst :line 57,2014-08-19T09:43:47Z,2014-08-19T09:47:07Z,,,,"container >>> contain
"
479,Spell correction on getting_started.rst :line 57,2014-08-19T09:31:23Z,2014-08-19T09:59:02Z,,,,"Models container the data ......>> to >> Models contains the data.......
"
478,Make tweepy compatible with Python 3.3,2014-08-15T17:19:02Z,2014-11-15T13:50:14Z,,,,"Major points are (as far as I can remember):
- Updated dependencies to more recent versions.
- Moved testing to tox.
- Passing test_api and test_utils tests (other tests _probably_ failing - I can look at them if you'd like - I notice some are failing under Python 2 anyway).
- Calls to bound endpoints are no longer passing in self - this was causing self to be passed in as an http param.
"
477,Refactor lookup functions names,2014-08-13T19:43:34Z,,,,,"Currently there are at least three function for lookup bulk data: `statuses`, `friendship` and `users`.
Meanwhile two of them are called: `lookup_friendship`and `lookup_users` the other one is called `statuses_lookup`. [code](https://github.com/tweepy/tweepy/blob/master/tweepy/api.py#L86).
I think is a good idea having all three in the same way, although we can fall in backward incompatibility, unless we proved a fallback.

Just saying. 
"
476,add x_auth_access_type support to allow requesting read-only tokens for read/write apps,2014-08-13T00:44:21Z,2014-08-13T01:21:31Z,,,,"Twitter's OAuth API has a custom `x_auth_access_type` query parameter for the `oauth/request_token` endpoint that lets you specify read or write access, similar to an OAuth scope. (https://dev.twitter.com/docs/api/1/post/oauth/request_token ) This lets you set that with a new `access_type` kwarg in `get_authorization_url()`.

I didn't see an obvious place to mention this in the docs, but I can add it to auth_tutorial.rst or api.rst or wherever if you want.

Also, the Twitter API has a bug that `x_auth_access_type` sometimes conflicts with `/authorize` (ie Sign In with Twitter). This PR logs a warning if you try to use both at the same time, but I'm open to doing something stronger, e.g. not allowing it or silently reverting to `/authenticate` if `access_type` is set.

Fixes #471. Thanks in advance!
"
475,Dynamic method translation?,2014-08-11T18:48:01Z,,,,,"I'm noticed that some libraries such as [birdy](https://github.com/inueni/birdy) don't have a hardcoded set of method - they dynamically determine what the method should be (e.g, `api.users.show` turns into `/users/show.json`).

This has the advantage of not having to update for every API change, but the disadvantage that you can't really provide documentation, or method-specific things.

@jonathanronen 
I'm noticed that some libraries such as [birdy](https://github.com/inueni/birdy) don't have a hardcoded set of method - they dynamically determine what the method should be (e.g, `api.users.show` turns into `/users/show.json`).

This has the advantage of not having to update for every API change, but the disadvantage that you can't really provide documentation, or method-specific things.

@joshthecoder: What do you think of this?
"
474,"Handling message ""friends"" on streaming.",2014-08-10T18:01:14Z,2014-08-10T20:41:07Z,,,,"streaming was always saying `Unknown message type: {""friends"": …`
This PR fixes that problem.
"
473,I have a working Python 3 port.,2014-08-09T16:42:16Z,2014-12-01T02:40:26Z,,,,"I have implemented Python3 support on [my fork](https://github.com/judy2k/tweepy), up-to-date with the upstream master, and with all tests passing ... without httreplay enabled. I'm using tox to allow easy testing against multiple versions, and have tested against 2.6, 2.7 and 3.3 so far.

So ... httreplay. This is turning out to be a pain in the backside to port to Python3 (although I've made a reasonable attempt). VCR.py looks better supported, tested, and runs on Python 2.6, 2.7, 3.3 & 3.4.

1) Could you take a quick look at my fork and give me an idea of how likely you are to accept it - it requires updated versions of Requests and Requests_oauthlib, but otherwise isn't hugely changed from the original.

2) Would you be okay with me switching to VCR.py for request/response recording?

(I can create a PR if that would be easier for you.)
"
472,Status model from Model Factory,2014-08-08T17:18:48Z,2014-08-09T17:57:05Z,,,,"I was confusing at first when sometimes the models from the factory are called like:

```
status_model = getattr(api.parser.model_factory, 'status') if api else Status
```

Example: [here](https://github.com/tweepy/tweepy/blob/master/tweepy/models.py#L76)
And sometimes in this way:

```
 setattr(user, k, Status.parse(api, v))
```

Example: [here](https://github.com/tweepy/tweepy/blob/master/tweepy/models.py#L123)

I think the best way is always call the models instances from the factory, but like that requires a more refactoring I've created this PR just with the SearchResult model.

Please give your thoughts.
"
471,support oauth/request_token's x_auth_access_type parameter,2014-08-08T05:37:08Z,2014-08-13T01:21:31Z,,,,"this lets an app with read/write permissions request a read-only access token, which is nice for requesting permissions incrementally, ie if a user only needs read-only features at first.

looks like this could take as little as adding a new `access_type` kwarg in [`OAuthHandler.get_authorization_url`](https://github.com/tweepy/tweepy/blob/master/tweepy/auth.py#L61) and passing `parameters={'x_auth_access_type': access_type}` [to `OAuthRequest.from_consumer_and_token` here](https://github.com/tweepy/tweepy/blob/master/tweepy/auth.py#L64). any chance you'd merge that if i sent it in a pull request?

inspired by snarfed/bridgy#258.
"
470,Bug in Iditerator: got multiple values for keyword argument 'max_id',2014-08-07T14:47:19Z,2014-08-11T18:50:01Z,,,,"The constructor of IdIterator reads

```
def __init__(self, method, args, kargs):
    BaseIterator.__init__(self, method, args, kargs)
    self.max_id = kargs.get('max_id')
    self.since_id = kargs.get('since_id')
    self.count = 0
```

which is problematic: If `max_id` or `since_id` are specified, a call to `next()` fails with the exception

```
got multiple values for keyword argument 'max_id'
```

This problem arises because `next` contains the line

```
data = self.method(max_id = max_id, *self.args, **self.kargs)
```

I.e. `max_id` is specified explicitly and in the `kargs`. The constructor should read

```
def __init__(self, method, args, kargs):
    BaseIterator.__init__(self, method, args, kargs)
    self.max_id = kargs.pop('max_id') #pop instead of get
    self.since_id = kargs.pop('since_id') #pop instead of get
    self.count = 0
```

such as to remove `max_id` and `since_id` from `kargs`.
"
469,issue with encoding when trying to get a list's name,2014-08-07T09:36:13Z,2014-08-07T09:39:00Z,,UnicodeEncodeError,UnicodeEncodeError: 'charmap' codec can't encode character u'\u0131' in position,"Trying to get list's name and I got this error

Traceback (most recent call last):
  File ""twitter.py"", line 20, in <module>
    print lst.name, lst.member_count
  File ""c:\Python27\lib\encodings\cp437.py"", line 12, in encode
    return codecs.charmap_encode(input,errors,encoding_map)
UnicodeEncodeError: 'charmap' codec can't encode character u'\u0131' in position
 3: character maps to <undefined>
"
468,Clarification on streaming...,2014-08-05T19:30:55Z,2014-08-09T18:36:27Z,,,,"I'm using `tweepy.Stream` and in the resultant output, I am receiving [rate limits](https://dev.twitter.com/docs/streaming-apis/messages#Limit_notices_limit). However, I'm receiving messages that look like this (chronologically, but keeping only rate limit messages):

```
{""limit"":{""track"":24181}}
{""limit"":{""track"":23402}}
{""limit"":{""track"":24374}}
{""limit"":{""track"":23953}}
{""limit"":{""track"":24375}}
```

My expectation is that the counts should be monotonically increasing within any streaming process. Instead, it looks like there are two separate streaming processes going on. Can someone explain this?
"
467,added allowed_param to update_profile_image,2014-08-05T13:06:58Z,2014-08-05T15:37:13Z,,,,
466,requirements.txt broken,2014-08-05T01:34:18Z,2014-12-01T20:43:58Z,,,,"The requirements.txt in the current version on github has requests==1.2.3 and needs to be changed to 2.0.0 or higher in order to install. I am on 3.15.5-2-ARCH using python 2.7. 
"
465,Update docs regarding trends() mehtods,2014-08-01T00:51:37Z,,,,,"The actual [api doc](http://tweepy.readthedocs.org/en/v2.3.0/api.html#API.trends) says there are `trends`, `trends_current`, `trends_daily` and `trends_weekly`, but in 2.3.0 the actual methods are: `api.trends_available` , `api.trends_closest`    `api.trends_daily` ,     `api.trends_place` and    ``api.trends_weekly`
"
464,Added json2csv - to parse tweets,2014-07-31T18:42:21Z,2014-07-31T19:00:46Z,,,,"Hi Robin, I've added a script to convert json files to csv. At the moment it just converts, but I intend to extend it to any analysis we want, running on the grid (distributed across cores). Otherwise the data are becoming a bit unmanageable!

 It will accept command-line arguments giving the fields to add to the csv, but it also has some defaults. E.g.:

python json2csv.py -o tweets.csv data/*

will take all data in 'data' dir and write to tweets.csv. Some fields don't work yet, I need to fix, but could you see if it works with your data? It seems OK on my ~70k collection, but before I change anything I want to see if it breaks down on a fuller set. It seems to handle some of the unicode characters that have been bothering you, at least on OS X (again this might have different behaviour on your OS).
"
463,Can't update status,2014-07-29T14:55:05Z,2014-08-04T08:52:48Z,,,,"Traceback:

a                                                        if self.on_status(status) is False:                File ""/mnt/sdcard/sl4a/scripts/Youtube/search2.py"", line 115, in on_status                                  api.update_status(""Your request has been added to the queue @""+status.user.screen_name)                 File ""/mnt/sdcard/com.googlecode.pythonforandroid/extras/python/tweepy/binder.py"", line 209, in _call       return method.execute()                            File ""/mnt/sdcard/com.googlecode.pythonforandroid/extras/python/tweepy/binder.py"", line 160, in execute     raise TweepError('Failed to send request: %s' % e)                                                    tweepy.error.TweepError: Failed to send request: [Errno 1] _ssl.c:480: error:0D0C50A1:asn1 encoding routines:ASN1_item_verify:unknown message digest algorithm
"
462,Change to make sure tweepy use SSL,2014-07-28T14:38:18Z,2014-07-28T16:53:38Z,,,,"I had some problems using Tweepy and I realized it was because it didn't always use SSL. So I propose to add a line to make sure the connexion we use is secure.
"
461,"tweepy.Cursor(api.followers_ids, screen_name=screen_name).pages()",2014-07-18T13:56:53Z,2014-07-18T14:00:48Z,,,,
460,reword rate limit notify msg,2014-07-16T04:49:06Z,2014-07-16T19:38:30Z,,,,"Maybe it's just me, but when I saw this msg I thought I was getting errors and hitting my retry_count. When it had a high number for the sleep time (much higher than my retry_delay) I realized it was the rate limit logic. Looks like this will only get printed during rate limiting so it might be worth changing. 
"
459,"AttributeError, no  '_api' on List when MongodbCache",2014-07-16T04:20:01Z,2014-08-03T20:02:20Z,,AttributeError,AttributeError: 'List' object has no attribute '_api',"I was trying to add Mongodb cache to my api setup, but when I do, I get an AttributeError thrown any time I try to iterate over a tweepy list i.e. list members. 

AttributeError: 'List' object has no attribute '_api'

api = tweepy.API(auth, cache=MongodbCache(db), 
                 wait_on_rate_limit=True, 
                 wait_on_rate_limit_notify=True)

Everything works great when I pull out the cache object and I know the db instance is working, I'm using it elsewhere in the app. I took a quick look through the code and nothing jumped out at me, but I'm only half awake. I'll take another look tomorrow if I get the chance. 
"
458,Existence of /help/configuration endpoint is not documented,2014-07-04T18:12:25Z,,,,,"The docs should mention the existence of the `configuration` property. Currently, to discover it one would need to search through the source code.
"
457,Application only Authentication,2014-07-04T09:31:53Z,2014-07-04T09:39:32Z,,,,"Hi,

As per twitter API you can give access only to the application without need to grant access to a user profile:
https://dev.twitter.com/docs/auth/application-only-auth

It would be nice to have this feature at tweepy.

I am forking and will add the functionality as pull request if you find it interesting.
"
456,Error when running on Ubuntu,2014-06-28T00:46:27Z,2014-06-30T18:34:29Z,,,,"Getting this error when running a program with Tweepy on Ubuntu. http://pastebin.com/k41U605j
"
455,Fix proposal to Issue #453,2014-06-23T09:22:42Z,2014-06-23T09:30:38Z,,,,"Changed _start() method of Stream class so now thread can be join'ed.
"
454,Update api.py,2014-06-21T09:56:30Z,2014-06-21T10:43:02Z,,,,"Add allowed params from API reference according to the documentation.
https://dev.twitter.com/docs/api/1/post/account/update_profile_background_image
"
453,Stream is not disconnected in case of using async=True and restarting Stream,2014-06-19T23:52:56Z,2014-06-23T09:32:36Z,,,,"Hi, I'm using tweepy==2.3.0

I'd like to restart streaming when list of keywords to track is changed.
So I'm calling Stream.disconnect() method.

The issue is the following:
When I do so, the self.running variable is setting to False.
However after this I run filter() again with new keywords and it's setting self.running (in _start method) back to True.

As per my opinion the loop in _run method has not enough time to end and make a condition test in while loop, so it started new thread but the first one remains running because self.running is True.

Maybe I do something wrong, the first solution I came up with is to add some sleep() before calling the second filter() method
However I'd like to have some way to wait till _run is actually ends (maybe some threading.Event() or something like this).
"
452,Fix setup.py to not attempt importing uninstalled libraries.,2014-06-19T11:15:15Z,2014-06-19T19:21:12Z,,,,"Currently `python setup.py install` cannot be run because of the error `ImportError: No module named requests`.

Using the method outlined in http://stackoverflow.com/questions/458550/standard-way-to-embed-version-into-python-package fixes this problem.

There is another issue with some dependency conflicts which is not fixed in this PR.
"
451,HTML unescape.,2014-06-18T14:21:12Z,2014-06-18T16:36:01Z,,,,"When I using userstream, `status.text` was contains escaped HTML entities like this:
`a -> b` to `a -&gt; b`
It should be unescaped.
"
450,Fix tweepy.API.update_with_media with unicode filename,2014-06-13T09:35:04Z,2014-06-13T10:30:10Z,,,,"If filename is an instance of `unicode`,
L.76 `'Content-Disposition: form-data; name=""%s""; filename=""%s""' % (form_field, filename)`
must be unicode string like following.

----pprinting of `body`----
    ['--Tw3ePy',
     u'Content-Disposition: form-data; name=""media[]""; filename=""/tmp/tmpBirD24-memo.png""',
     'Content-Type: image/png',
     '',
     '\x89PNG\r\n(binary)'
     '--Tw3ePy--',
     '']

Because of it, L. 803 `body = '\r\n'.join(body)` fails with UnicodeDecodeError.

Therefore, I made `filename` designed to be percent-encoded str
before formatting.
"
449,Fix tweepy.API.update_with_media,2014-06-13T09:15:56Z,2014-06-13T09:28:37Z,,,,"If filename is an instance of `unicode`,
L.76 `'Content-Disposition: form-data; name=""%s""; filename=""%s""' % (form_field, filename)`
must be unicode string like following.

----pprinting of `body`----
    ['--Tw3ePy',
     u'Content-Disposition: form-data; name=""media[]""; filename=""/tmp/tmpBirD24-memo.png""',
     'Content-Type: image/png',
     '',
     '\x89PNG\r\n(binary)'
     '--Tw3ePy--',
##      '']

Because of it, L. 803 `body = '\r\n'.join(body)` fails with UnicodeDecodeError.

Therefore, I made `filename` designed to be percent-encoded str
before formatting.
"
448,Streaming.py Crash on Incomplete Read Error when tweets are very high...,2014-06-13T05:07:19Z,,,,,"This error occurs when there is a high stream of tweets in a particular time.. Example try streaming world cup hashtag during the game. The problem looks similar to this https://dev.twitter.com/discussions/9554 Can anyone help in fixing this?

Exception in thread Thread-1:
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 551, in __bootstrap_inner
    self.run()
  File ""/usr/lib/python2.7/threading.py"", line 504, in run
    self.__target(_self.__args, *_self.__kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 173, in _run
    self._read_loop(resp)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy/streaming.py"", line 220, in _read_loop
    d = resp.read(1)
  File ""/usr/lib/python2.7/httplib.py"", line 541, in read
    return self._read_chunked(amt)
  File ""/usr/lib/python2.7/httplib.py"", line 586, in _read_chunked
    raise IncompleteRead(''.join(value))
"
447,odd error when fetching usernames ,2014-06-10T02:29:49Z,2014-08-09T18:20:45Z,,,,"I have been toying with tweepy recently, I am trying to pull the followers and following of a given user. 

```
 print len(followingids), ""followers have been gathered from"", userid 
 print len(followids), "" users are followed by "", userid

 followingusers = api.lookup_users(user_ids=followingids)#ieterates through the list of users and prints them
 followedusers = api.lookup_users(user_ids=followids) #<does not work but above does 


 print ""users of following"", userid 
 for u in followingusers:
     print u.screen_name


 print ""users followed by"", userid
 for s in followedusers:
     print s.screen_name
```

The second print for loop gives this error:

```
 Traceback (most recent call last):
   File ""twitterBot.py"", line 30, in <module>
     followedusers = api.lookup_users(user_ids=followids) #<does not work but above does 
   File ""/usr/local/lib/python2.7/dist-packages/tweepy/api.py"", line 160, in lookup_users
     return self._lookup_users(list_to_csv(user_ids), list_to_csv(screen_names))
   File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 230, in _call
     return method.execute()
   File ""/usr/local/lib/python2.7/dist-packages/tweepy/binder.py"", line 203, in execute
     raise TweepError(error_msg, resp)
 tweepy.error.TweepError: [{u'message': u'Too many terms specified in query.', u'code': 18}]
```

both followedusers and followingusers have twitter id numbers. If I comment out the first the second one will throw the exception but commenting out the second the first list will print successfully. I literally cut and pasted the code for printing so why does the first one work and the second one not work?
"
446,IdIterator fix TypeError: _call() got multiple values for keyword argumet 'max_id',2014-06-09T23:39:29Z,2014-06-10T00:29:22Z,,TypeError,TypeError: _call() got multiple values for keyword argument 'max_id',"### Reproduce problem

``` python
cursor = tweepy.Cursor(api.user_timeline, screen_name='google', max_id=24130020972)
for tweet in cursor.items():
     pass
```

this will fail, see below

``` python
  File ""main.py"", line 84, in get_tweets
    for tweet in cursor.items():
  File ""/Users/andrei/.virtualenvs/ml/lib/python2.7/site-packages/tweepy/cursor.py"", line 181, in next
    self.current_page = self.page_iterator.next()
  File ""/Users/andrei/.virtualenvs/ml/lib/python2.7/site-packages/tweepy/cursor.py"", line 99, in next
    data = self.method(max_id=self.max_id, parser=RawParser(), *self.args, **self.kargs)
TypeError: _call() got multiple values for keyword argument 'max_id'

>>> import tweepy
>>> tweepy.__version__
'2.3.0'
>>> 
(ml)~/repos/github/licenta (master)*$ pip freeze|grep tweepy
tweepy==2.3.0
```
### Underlaying problem

``` python
def f(**kargs):
    pass 
f(max_id=2, **{'max_id':2})

# fails with
TypeError: f() got multiple values for keyword argument 'max_id'
```

So doing a `pop` is necessary there. Also, `max_id=None` works as expected for twitter API, returns everything as far as I could tell.
"
445,incomplete friends list ,2014-06-07T23:08:48Z,2014-06-18T16:48:18Z,,,,"hi, 
I am new to tweedy and trying to get the list of followers and friends of users. I use the following cod:

user = api.get_user(user_id)
fr =[f.id for f in user.friends()]
fl =[f for f in user.followers_ids()]
it work fine for followers but only returning top 20 friends. can you tell me what am I missing here? here (https://code.google.com/p/tweepy/wiki/APIReference) is written friends() should return the complete list. 

PS: I can do that with:
for page in tweepy.Cursor(api.friends_ids, id=user_id]).pages():
       m.extend(page)
"
444,Binding to properties,2014-05-31T11:18:04Z,2014-06-18T16:38:55Z,,,,"Bindings are now as properties to improve the help(api) output.
It required to do some changes to bind_api function too. In the same time, I worked to improve the docstrings and transformed some arguments to explicit ones.
A script has been added too to test the urls given as reference of bindings. I don't think it should at the root of the project but didn't know where to put it actually.

Tell me
"
443,Getting a HTTP 301 error when trying to tweet from App Engine. ,2014-05-30T12:24:12Z,2014-05-31T03:17:06Z,,,,"I'm using the code from http://www.billthelizard.com/2013/12/creating-twitter-bot-on-google-app.html: https://gist.github.com/brendan10211/cb4efd65edf2d1a12271

I get this error: 
![ss 2014-05-30 at 08 22 30](https://cloud.githubusercontent.com/assets/1760581/3130293/3bd7859a-e7f5-11e3-82dd-79ac0bcc23b1.png)

I looked around and I can only really find fixes for authentication. I am using generated keys from my application on twitter, stored in a separate file of course, and I don't know enough about tweepy to figure out why it's not working. 

Thank you for your help! 
"
442,Update api.py,2014-05-28T23:10:58Z,2014-05-29T18:54:31Z,,,,"add 'display_coordinates' parameter to the statuses/update method

https://dev.twitter.com/docs/api/1.1/post/statuses/update
"
441,"When trying pip install from github, dependencies are not installed",2014-05-28T19:01:32Z,,,,,"When I try to do a pip install for git+git://git+git://github.com/tweepy/tweepy.git the install fails saying it cant find requests_oauthlib (mentioned in the requirements.txt). I see that you do have the 'install_reqs' in the setup.py -- so I'm not sure what and why this is happening. Any ideas ?
"
440,issue iterating with Cursor,2014-05-14T17:56:22Z,2014-05-23T10:41:20Z,,ValueError,ValueError: need more than 1 value to unpack,"when trying to execute

``` python
for follower in tweepy.Cursor(api.followers).items():
    print follower.screen_name
```

(a slight modification on the follow all example found in the docs)

I get a ValueError:

```
Traceback (most recent call last):
  File ""<pyshell#29>"", line 1, in <module>
    for follower in tweepy.Cursor(api.followers).items():
  File ""C:\Python27\lib\site-packages\tweepy\cursor.py"", line 181, in next
    self.current_page = self.page_iterator.next()
  File ""C:\Python27\lib\site-packages\tweepy\cursor.py"", line 66, in next
    cursor=self.next_cursor, *self.args, **self.kargs
ValueError: need more than 1 value to unpack
```

Am I missing something obvious?
"
439,Remove  API.friends_timeline from tweepy/docs/api.rst,2014-05-14T04:23:19Z,2014-06-18T16:49:56Z,,,," `API.friends_timeline` was removed in [Version 2.0](https://github.com/tweepy/tweepy/blob/master/CHANGELOG.md#version-20).
"
438,Tweepy streaming with sub loops.,2014-05-12T15:59:48Z,2014-08-11T18:50:19Z,,,,"Hello,

I want to write a program that actually has a main loop but when there is a new status (with api streamer) it first checks that status, does a command with the status and then returns to the main loop.

How can I program this?

Like in this program (left the header out), alarmaan = 0.
But if there is a status for example ""alarmaanzetten"" then alarmaan needs to get 1.
And do a sub routine. TILL alarmaan gets 0 again because of another status.
How can I do a subroutine and keep checking on a new status? Or do a subroutine till there is a new status?

Greetings

alarmaan = 0
class CustomStreamListener(tweepy.StreamListener):
    def on_status(self,status):
        print status.text
        if 'shutdownpi' in status.text: 
            print 'Pi zal nu afsluiten'
            prive_bericht('Pi zal nu afsluiten')
            print 'Bericht naar xxxxx gestuurd'
            #api.update_status('Pi zal nu afsluiten')
        if 'alarmaanzetten' in status.text:
            print 'Alarm zal nu worden aangezet'
            alarmaan = 1
            #number = status.text.strip().split('=')[1]
            #print number
        if 'alarmuitzetten' in status.text:
            print 'Alarm zal nu worden uitgezet'
            alarmaan = 0
        # if (alarmaan == 1):
            # print 'Alarmaan'
        # elif (alarmaan == 0):
            # print 'Alarmuit'

```
def on_error(self, status_code):
    print >> sys.stderr, 'Encountered error with status code:', status_code
    return True # Don't kill the stream

def on_timeout(self):
    print >> sys.stderr, 'Timeout...'
    return True # Don't kill the stream



    if (alarmaan == 1):
        print 'Alarmaan'
    elif (alarmaan == 0):
        print 'Alarmuit'
```
# def alarm(alarmaan):

```
# if (alarmaan == 1):
    # print 'Alarmaan'
# elif (alarmaan == 0):
    # print 'Alarmuit'
```

def prive_bericht(bericht):
    api.send_direct_message(user_id = xxxxxxx,text = bericht) 
# while(1):

```
# myDirectMsgs = api.direct_messages(count=1)
# for status in myDirectMsgs:
    # print "" "" + status.text + "" by @"" + status.sender.screen_name
# time.sleep(60)
```

stream = tweepy.streaming.Stream(auth, CustomStreamListener())
streamuser = stream.userstream()
follow_list = ['xxxxx']
track_list = None
stream.filter(follow_list, track_list)
"
437,Remove documentation for a bunch of deprecated methods,2014-05-12T01:59:47Z,2014-05-12T10:25:02Z,,,,"Some of the methods in the current docs are no longer available, so I figured I'd remove them so as to avoid any confusion for users.
"
436,Random crashes,2014-05-09T00:32:31Z,,,TypeError,TypeError: object of type 'bool' has no len(),"Hi,

Using streaming.py, sometimes i got this crash:

```
Exception in thread Thread-61:
Traceback (most recent call last):
  File ""/usr/lib/python2.7/threading.py"", line 810, in __bootstrap_inner
    self.run()
  File ""/usr/lib/python2.7/threading.py"", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy-2.3-py2.7.egg/tweepy/streaming.py"", line 165, in _run
    self._read_loop(resp)
  File ""/usr/local/lib/python2.7/dist-packages/tweepy-2.3-py2.7.egg/tweepy/streaming.py"", line 215, in _read_loop
    for d in resp.iter_content():
  File ""/usr/local/lib/python2.7/dist-packages/requests-2.2.1-py2.7.egg/requests/utils.py"", line 341, in iter_slices
    while pos < len(string):
TypeError: object of type 'bool' has no len()
```

Before looking most forward, I don't know if this bug come from requests or tweepy ? What do you think ?
"
435,Update streaming.py,2014-05-09T00:20:53Z,2014-05-09T00:41:59Z,,,,"Var fix
"
434,Error in code,2014-05-08T21:37:12Z,2014-05-09T00:25:35Z,,,,"Hi,

In streaming.py, line 156 cause a crash. This is (i hope) the fix 

```
if resp.status == 420:
```

instead of 

```
if resp.status_code == 420:
```
"
433,Tweepy get direct messages,2014-05-06T20:42:59Z,2014-08-11T18:50:36Z,,,,"Hello, I already googled for hours and hours and tried alot of different things.
This is the closest I can get;

I want to send commands to my raspberry pi by using twitter direct message system. 
But when I run my program it gives an error (see image). And then when I actually try to send a message to the raspberry pi by direct message it crashes. (see image)
![01a276535a3d92a22e5c5fb64b8912c1](https://cloud.githubusercontent.com/assets/7504948/2895349/aa8105a6-d55e-11e3-9a1e-1977c9a05165.png)

Anyone here that knows the exact code and know how to fix this?
Please let me know.

Code:

```
consumer_key = 'xxxxx'  
consumer_secret = ''xxxxx'  
access_token = ''xxxxxl'  
access_token_secret = ''xxxxx'  

# OAuth process, using the keys and tokens  
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)  
auth.set_access_token(access_token, access_token_secret)  

# Creation of the actual interface, using authentication  
api = tweepy.API(auth)  

#id = xxxx
#user_id = xxxxx
#screen_name = 'xxxx'
#count = 1
#api.user_timeline(id = xxxx,user_id=xxxx,screen_name= xxxx, count = 1)


#status = api.user_timeline('@'xxxxx' , count = 1)
#print dir(status)
#print status.text

class CustomStreamListener(tweepy.StreamListener):
    def on_status(self,status):
        print status.text
    def on_direct_message(self,status):
        print status.text
        if 'shutdownpi' in status.text: 
            print 'Pi zal nu afsluiten'
            prive_bericht('Pi zal nu afsluiten')
            print 'Bericht naar 'xxxxx gestuurd'
            #api.update_status('Pi zal nu afsluiten')
        if 'alarmaanzetten' in status.text:
            print 'Alarm zal nu worden aangezet'
            #number = status.text.strip().split('=')[1]
            #print number

    def on_error(self, status_code):
        print >> sys.stderr, 'Encountered error with status code:', status_code
        return True # Don't kill the stream

    def on_timeout(self):
        print >> sys.stderr, 'Timeout...'
        return True # Don't kill the stream


def prive_bericht(bericht):
    api.send_direct_message(user_id = 'xxxxx,text = bericht) 

# while(1):
    # myDirectMsgs = api.direct_messages(count=1)
    # for status in myDirectMsgs:
        # print "" "" + status.text + "" by @"" + status.sender.screen_name
    # time.sleep(60)
stream = tweepy.streaming.Stream(auth, CustomStreamListener())
streamuser = stream.userstream()
follow_list = [''xxxxx']
track_list = None
stream.filter(follow_list, track_list)
```
"
432,"Api.py, followers/ids, count not in allowed parameters ",2014-05-06T09:03:49Z,2014-05-06T10:22:43Z,,,,"Hello,

Looking at the code, for the followers_ids that uses the followers/ids endpoint, count is not in the allowed parameters. However from API documentation it should be there.
"
431,rewrite of api bin_api attributes as properties to add docstrings ,2014-05-04T10:41:19Z,2014-08-09T18:18:42Z,,,,"What do you think about exposing binds through properties instead of attributes so docstrings can be added to each, explaining how to use them:

``` python
"""""" statuses/home_timeline """"""
home_timeline = bind_api(
    path = '/statuses/home_timeline.json',
    payload_type = 'status', payload_list = True,
    allowed_param = ['since_id', 'max_id', 'count'],
    require_auth = True
)
```

would become

``` python
@property
def home_timeline(self):
    """""" Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user.
        The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com.
        This method can only return up to 800 tweets.

        :param count: (optional) Specifies the number of tweets to try and retrieve, up to a maximum of 200. The value
            of count is best thought of as a limit to the number of tweets to return because suspended or deleted content
            is removed after the count has been applied. We include retweets in the count, even if include_rts is not
            supplied. It is recommended you always send include_rts=1 when using this API method.
        :param since_id: (optional) Returns results with an ID greater than (that is, more recent than) the specified ID.
            There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has
            occured since the since_id, the since_id will be forced to the oldest ID available. Example Values: 12345
        :param max_id: (optional) Returns results with an ID less than (that is, older than) or equal to the specified
            ID. Example Values: 54321
        :param trim_user: (optional) When set to either true, t or 1, each tweet returned in a timeline will include a
            user object including only the status authors numerical ID. Omit this parameter to receive the complete user
            object. Example Values: true
        :param contributor_details: (optional) This parameter enhances the contributors element of the status response
            to include the screen_name of the contributor. By default only the user_id of the contributor is included.
            Example Values: true
        :param include_entities: (optional) The entities node will be disincluded when set to false.
            Example Values: false
        :url:https://dev.twitter.com/docs/api/1.1/get/statuses/mentions_timeline.
    """"""
    return bind_api(
        path = '/statuses/home_timeline.json',
        payload_type = 'status', payload_list = True,
        allowed_param = ['since_id', 'max_id', 'count'],
        require_auth = True
    )
```

So help(api) would be usable now with interesting details.

Then we can push the envelope to make the doc dynamic:

``` python

@property
@TwitterDoc('statuses/home_timeline')
def home_timeline(self):
    return bind_api(
        path = '/statuses/home_timeline.json',
        payload_type = 'status', payload_list = True,
        allowed_param = ['since_id', 'max_id', 'count'],
        require_auth = True
    )
```

with TwitterDoc defined as:

``` python
class TwitterDoc(object):
    """""" Decorator creating the doc for a binding.  """"""
    def __init__(self,
                 doc_url,
                 root_url='https://dev.twitter.com/docs/api',
                 api_version='1.1',
                 rest_method='get'):
        """""" Constructor.

        :param doc_url: url of the bound REST method.
        :param root_url: url of the twitter dev website. Default: https://dev.twitter.com/docs/api
        :param api_version: version of the REST api. Default: 1.1
        :param rest_method: REST method to use. Default: get
        """"""
        self.__root_url = root_url
        self.__api_version = api_version
        self.__doc_url = doc_url
        self.__rest_method = rest_method

    def __call__(self, func):
        def wrapper(*args, **kwargs):
            return func
        url = '/'.join([':url: ', self.__root_url, self.__api_version, self.__rest_method, self.__doc_url])
        wrapper.__doc__ = ''.join([url])
        return wrapper
```

We can think of scanning the page of the REST method to build a better doc (we can find the description for example or even parameters) but it might be over-engineering. On the other hand, that will allow the project to always have up-to-date docs.

What do you think?
"
430,pumped up the version to 2.3 according to the pip package.,2014-05-04T09:47:16Z,2014-05-04T11:16:35Z,,,,
429,"missing wrapper for endpoint ""statuses/lookup"" in twitter api 1.1",2014-05-03T15:05:52Z,2014-05-09T00:13:13Z,,,,"added lookup_statuses() method in API class;
added list parser method in Status class;
"
428,Add method for status list lookup,2014-05-03T14:02:02Z,2014-05-03T14:47:27Z,,,,"Missing wrapper for following twitter api 1.1 endpoint: https://dev.twitter.com/docs/api/1.1/get/statuses/lookup
"
427,Attempt to improve the error message if parser argument is not well set.,2014-05-03T12:56:53Z,2014-05-03T16:07:53Z,,,,"Hello,

I saw the issue https://github.com/tweepy/tweepy/issues/421 and I thought it would be interesting to have the error message at the init of the api if the parser type is not well set.

Hope it helps.
"
426,tweepy==2.3 or 2.3.0 installed 2.0 instead,2014-04-29T09:07:01Z,2014-12-01T20:42:52Z,,,,"sudo pip install tweepy==2.3
Downloading/unpacking tweepy==2.3
  Running setup.py egg_info for package tweepy
  Requested tweepy==2.3, but installing version 2.0
Installing collected packages: tweepy
  Running setup.py install for tweepy
Successfully installed tweepy
Cleaning up...
"
425,App Engine compatibility,2014-04-28T23:43:45Z,,,,,"We need to keep Tweepy compatible with the Google App Engine platform. Should look into how we can automate running our test suite on app engine during builds if possible. With us now using Requests we need to make sure it supports app engine as well. If not we may need to implement a HTTP abstraction and still support falling back to httplib.
"
424,proxy support for tweepy,2014-04-25T19:01:39Z,2014-04-25T22:24:30Z,,,,"Is there a way to setup proxy parameters in tweepy. I am using a proxy that needs authentication to connect to internet
"
423,"image/x-png, image/pjpeg MIME types upload problem in Windows",2014-04-25T04:52:57Z,2014-08-11T18:51:21Z,,tweepy.error.TweepError,tweepy.error.TweepError: Invalid file type for image: image/pjpeg,"Function: update_with_media
OS: Windows

Traceback (most recent call last):
  File ""twitter-post.py"", line 32, in <module>
    api.update_with_media(imagePath)
  File ""build\bdist.win32\egg\tweepy\api.py"", line 98, in update_with_media
  File ""build\bdist.win32\egg\tweepy\api.py"", line 733, in _pack_image
tweepy.error.TweepError: Invalid file type for image: image/pjpeg
"
422,Fix _pack_image method to accept encoded images,2014-04-24T17:49:19Z,2014-04-24T19:22:18Z,,,,"Please see the tail of this thread:
https://github.com/tweepy/tweepy/pull/364#issuecomment-41252659

Tweepy needs the _pack_image method updated to accept encoded image objects. That way, users can post URLs using the update_with_media_url function and are not limited to file uploads.

Thanks.
"
421,unbound method parse() must be called with RawParser,2014-04-24T15:19:29Z,2014-05-23T10:41:55Z,,TypeError,TypeError: unbound method parse() must be called with RawParser instance as first argument (got APIMethod instance instead),"So I want to get the JSON object from the user timeline call. 
From what I understand I need RawParser for that.

Here is what I tried:

```
api = tweepy.API(auth_handler=self.auth, parser=RawParser)
user = api.get_user('andriyko')
```

and here is the error I get:

```
TypeError: unbound method parse() must be called with RawParser instance as first argument (got APIMethod instance instead)
```
"
420,pip install tweepy==2.3 fails,2014-04-21T16:40:47Z,2014-04-27T05:13:58Z,,,,"I try to install tweepy 2.3 but it seems pip doesn't know it yet:

Could not find a version that satisfies the requirement tweepy==2.3 (from versions: 1.1, 1.10, 1.11, 1.12, 1.13, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7.1, 1.8, 1.9, 2.0, 2.1, 2.2)

Cheers,
Jordi
"
419,API.public_timeline(),2014-04-19T17:34:59Z,2014-04-27T05:26:35Z,,,,"Put into documentation that this has been removed. and should use the stream.sample().

The first google search result https://pythonhosted.org/tweepy/html/api.html#api-reference has this still listed so i think it should be in the updated docs that this has been removed and moved to a different part of the API. Was going to submit a pull request but unsure of the documentations style
"
418,Raise error if the locations list has the wrong length,2014-04-19T09:46:02Z,2014-04-19T10:39:25Z,,,,"Raise `TweepError` instead of `AssertionError` when the list of location points has the wrong length.
"
417,No attribute 'wait_on_rate_limit_notify' error when rate limit is reached,2014-04-19T01:07:40Z,2014-04-19T01:38:51Z,,AttributeError,AttributeError: 'APIMethod' object has no attribute 'wait_on_rate_limit_notify',"I wanted to test out the rate limit changes that were committed today and came across the following error when my rate limit was reached using a Cursor for the search api: 

AttributeError: 'APIMethod' object has no attribute 'wait_on_rate_limit_notify'

Here's the traceback:

File ""/Users/mg/.virtualenvs/social-tool/src/tweepy/tweepy/cursor.py"", line 181, in next
    self.current_page = self.page_iterator.next()
  File ""/Users/mg/.virtualenvs/social-tool/src/tweepy/tweepy/cursor.py"", line 99, in next
    data = self.method(max_id=self.max_id, parser=RawParser(), _self.args, *_self.kargs)
  File ""/Users/mg/.virtualenvs/social-tool/src/tweepy/tweepy/binder.py"", line 229, in _call
    return method.execute()
  File ""/Users/michaelgodshall/.virtualenvs/social-tool/src/tweepy/tweepy/binder.py"", line 144, in execute
    if self.wait_on_rate_limit_notify:
AttributeError: 'APIMethod' object has no attribute 'wait_on_rate_limit_notify'
"
416,print remaining time when rate limit reached,2014-04-18T23:31:59Z,2014-04-18T23:33:45Z,,,,
415,added feature for printing remaining time when max retries reached,2014-04-18T23:24:20Z,2014-04-18T23:33:45Z,,,,
414,wait_on_rate_limit_notify option,2014-04-18T23:15:02Z,2014-04-18T23:16:32Z,,,,"uses print() to print out remaining time when a rate limit has been reached
"
413,support application-only auth,2014-04-17T12:21:40Z,2014-04-17T19:33:59Z,,,,"I've made an application only auth class.
cf. #318
"
412,Update production,2014-04-13T22:42:08Z,2014-04-13T22:42:18Z,,,,
411,Use tweepy search API. But get much fewer result than I search on the website. Why?,2014-04-11T18:44:55Z,2014-04-29T21:40:22Z,,,,"'''
for result in tweepy.Cursor(api.search, q = ""www.nature.com"", count = 100).items():
    count = count + 1
print count
'''
There's only 11 results by using tweepy search API. But when I search at https://twitter.com/search, it returns much more results! Why??
"
410,The problem with IdIterator,2014-04-10T23:51:45Z,2014-05-23T10:41:48Z,,,,"Currently, the `IdIterator` class doesn't work correctly. Here's what I've discovered when investigating how Twitter handles `max_id` and `since_id`:
- Twitter returns tweets with the newest first. So, specifying a `max_id` of `20` would return tweets that match the query, and have a id of 20 or lower.
- It's possible to easily page _down_ a list of results, by continuously making a request, finding the lowest id in the results, and setting the `max_id` of the next request to the lowest id minus 1. `max_id` is inclusive, so it's necessary to decrement it by one in order to avoid having a duplicated tweet in the next request.
- Paging _up_ is not possible, at least not unless you're willing to do it imprecisely, missing tweets along the way. Here's why:

Twitter returns results by starting with either the most recent tweet, or the tweet with the id closest (but not over) `max_id`. It then continues down until `count` tweets have been found, or a tweet's id is less than or equal to `since_id` - whichever happens first. Tweets returned will almost never have sequential ids, because they were created at different times. So, if you want to get the previous 5 tweets, you can't just set `max_id` to `since_id` + `count` - the odds are likely you'll get no tweets at all, or if you're lucky, a small number.

On the other end, setting `max_id` too high will cause you to _miss_ Tweets. Twitter starts at the `max_id` and works down. If there are 6 tweets between `max_id` and `since_id`, the tweet with the id closest to `since_id` will be missed - and you'll have no idea that it even exists.

My idea to fix the `IdIterator` implementation is this:

When the class is initialized, create an empty list called `results`, and an index variable set to 0.

On each call to `next`, increment the index variable, and check the item at it. If it doesn't exist, or the index variable has run off the end of the list, call the API method, append the result to the list

Otherwise, just return the item at the index variable.

On each call to `prev`, decrement the index variable, and check the item at it. If it doesn't exist, raise `StopIteration` - there's no good way to fetch results with an ID greater than a certain value.

Otherwise, just return the item.

@joshthecoder: This is a pretty big change, so I'd like to hear what you think.
"
409,Stream's userstream method does not accept parameters,2014-04-08T14:25:56Z,2014-04-13T22:40:02Z,,,,"## Need

When using any of the [streaming parameters](https://dev.twitter.com/docs/streaming-apis/parameters), the connection returns status 401:

``` json
{""status"": 401, ""reason"": ""Authorization Required"", }
```
"
408,Add _json field to user and status models,2014-04-04T22:13:15Z,2014-04-05T00:50:06Z,,,,"It is sometimes useful to have access to fields that `tweepy` doesn't define on it's model objects. This suggestion adds a `_json` field with the raw data.
"
407,Only call _data if stream.running=True,2014-04-03T23:45:54Z,2014-04-04T00:42:31Z,,,,"Not sure why an extra delimiter is spit out when you disconnect, but this should be enough of a bandaid.

We could alternately check that next_status_obj is a dict and throw an error otherwise.
"
406, 'API' object has no attribute 'public_timeline',2014-04-03T19:06:13Z,2014-04-13T19:34:30Z,,,,"I am trying out tweepy for the first time and executed the code present in the getting_started.rst file:

   import tweepy

   public_tweets = tweepy.api.public_timeline()
   for tweet in public_tweets:
       print tweet.text

I get the ""AttributeError: 'API' object has no attribute 'public_timeline'""

I am on the ""5bdd86a438d8d3c383bafd0db418a72f7a9a3412"" commit. After cloning tweepy from github, I installed it using ""python setup.py install"". I am using Python 2.7.6. I also ran grep on the tweepy repository and couldn't find the public_timeline api.
"
405,Uncaught error when disconnecting async Stream,2014-04-03T04:04:18Z,2015-02-24T23:41:37Z,,TypeError,TypeError: argument of type 'int' is not iterable,"```
# auth and listener configured normally
stream = Stream(auth, listener)
stream.filter(track=[...], async=True)
stream.disconnect()
```

This throws an exception:

In [7]: Exception in thread Thread-2:
Traceback (most recent call last):
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py"", line 808, in __bootstrap_inner
    self.run()
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py"", line 761, in run
    self.__target(_self.__args, *_self.__kwargs)
  File ""/Users/pikeas/.virtualenvs/play/lib/python2.7/site-packages/tweepy/streaming.py"", line 173, in _run
    self._read_loop(resp)
  File ""/Users/pikeas/.virtualenvs/play/lib/python2.7/site-packages/tweepy/streaming.py"", line 226, in _read_loop
    self._data(next_status_obj)
  File ""/Users/pikeas/.virtualenvs/play/lib/python2.7/site-packages/tweepy/streaming.py"", line 203, in _data
    if self.listener.on_data(data) is False:
  File ""/Users/pikeas/Documents/Code/play/play_django/frankie/twit.py"", line 33, in on_data
    if 'in_reply_to_status_id' in data:
TypeError: argument of type 'int' is not iterable
"
404,Update changelog for 2.3,2014-03-27T21:34:46Z,2014-12-01T03:42:27Z,,,,"Now that 2.3 has been released, the CHANGELOG should be updated to reflect that changes that were made.
"
403,added multiple list members operation api methods(re-PR),2014-03-27T16:58:39Z,2014-04-27T05:36:00Z,,,,"Sorry, I had missed the reply.
https://github.com/tweepy/tweepy/pull/265

Multiple list members operation api so was like not yet implemented, I push again after rebase.
"
402,Rewrite testcreateupdatedestroylist,2014-03-16T23:32:44Z,,Improvement,,,"This test is too brittle and often creates false fails during CI builds.
There appears to be a race condition with creating than updating a list.
We should break this up into 3 tests and find ways to avoid the races.
"
401,Upload HTTP record to S3 after a successful test,2014-03-09T16:52:13Z,2014-03-16T23:20:09Z,,,,"@joshthecoder: There are several thing you'll need to do:
- Modify the `.travis.yml` to add the `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, and `AWS_BUCKET` variables.
- Create the `record` key in the bucket you choose.
- Replace the url in the `curl` command in `run_tests.sh` with a public-access url to the `record` key. You can generate one with `key.generate_url(expires_in=None, query_auth=False)`(look in `upload_record.py` for how to use `boto`).
"
400,Requests support (for real this time) !,2014-03-09T16:30:53Z,2014-04-27T02:04:55Z,,,,
399,Cannot get redirect url,2014-03-06T06:44:04Z,2014-03-06T11:13:24Z,,tweepy.error.TweepError,tweepy.error.TweepError: HTTP Error 401: Unauthorized,"Hi,

I'm trying to do the auth process with the following:
###### 

```
    auth = tweepy.OAuthHandler(consumer_key, consumer_secret, post_login_url)
    redirect_url = auth.get_authorization_url()
```
###### 

I'm pretty sure my consumer_key and secret are correct, but I got the following stacktrace:
###### 

File ""/usr/lib/python2.7/threading.py"", line 781, in **bootstrap
  self.__bootstrap_inner()
File ""/usr/lib/python2.7/threading.py"", line 808, in __bootstrap_inner
  self.run()
File ""/usr/lib/python2.7/threading.py"", line 761, in run
  self.__target(_self.__args, *_self.__kwargs)
File ""/usr/lib/python2.7/SocketServer.py"", line 593, in process_request_thread
  self.finish_request(request, client_address)
File ""/usr/lib/python2.7/SocketServer.py"", line 334, in finish_request
  self.RequestHandlerClass(request, client_address, self)
File ""/usr/local/lib/python2.7/dist-packages/django/core/servers/basehttp.py"", line 126, in __init**
  super(WSGIRequestHandler, self).**init**(_args, *_kwargs)
File ""/usr/lib/python2.7/SocketServer.py"", line 649, in **init**
  self.handle()
File ""/usr/lib/python2.7/wsgiref/simple_server.py"", line 124, in handle
  handler.run(self.server.get_app())
File ""/usr/lib/python2.7/wsgiref/handlers.py"", line 85, in run
  self.result = application(self.environ, self.start_response)
File ""/usr/local/lib/python2.7/dist-packages/django/contrib/staticfiles/handlers.py"", line 67, in **call**
  return self.application(environ, start_response)
File ""/usr/local/lib/python2.7/dist-packages/django/core/handlers/wsgi.py"", line 206, in **call**
  response = self.get_response(request)
File ""/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py"", line 196, in get_response
  response = self.handle_uncaught_exception(request, resolver, sys.exc_info())
File ""/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py"", line 226, in handle_uncaught_exception
  'request': request
File ""/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py"", line 114, in get_response
  response = wrapped_callback(request, _callback_args, *_callback_kwargs)
File ""/home/windmaple/git/master/firsttab/views.py"", line 451, in twitter
  redirect_url = auth.get_authorization_url()
File ""/usr/local/lib/python2.7/dist-packages/tweepy/auth.py"", line 96, in get_authorization_url
  raise TweepError(e)

tweepy.error.TweepError: HTTP Error 401: Unauthorized
###### 

Am I doing something wrong?
"
398,Setup and test out Discourse forum,2014-03-05T16:47:55Z,,,,,"I have spun up a Discourse instance for us to try out. Looking to replace
Google Groups mainly due to the high span we have to moderate out.

It's currently live at http://discuss.tweepy.org

Feel free to try it out and if it looks good I'll start retiring the Google Group.

@Aaron1011 I can add you as a moderator once you sign up.
"
397,Set up webhook with ReadTheDocs,2014-03-05T11:25:00Z,2014-03-05T21:06:12Z,,,,"@joshthecoder: The docs at http://tweepy.readthedocs.org/en/latest/ don't seem to have been updated. Could you check that the webhook is set up, please?
"
396,search API max_id problem,2014-02-24T21:15:30Z,2014-04-13T19:46:33Z,,TypeError,TypeError: unsupported operand type(s) for -: 'NoneType' and 'int',"I have this code

<pre>for tweet in tweepy.Cursor(api.search,
                           q=""#ahastag"",
                           count=100,
                           result_type=""recent"",
                           include_entities=True,
                           max_id=436511868027666432,
                           lang=""en"").items():
    id=tweet.id
</pre>


and I get this error:

<pre>Traceback (most recent call last):
  File ""./twitterbotfirst.py"", line 30, in <module>
    lang=""tr"").items():
  File ""/usr/lib/python2.7/site-packages/tweepy/cursor.py"", line 153, in next
    self.current_page = self.page_iterator.next()
  File ""/usr/lib/python2.7/site-packages/tweepy/cursor.py"", line 97, in next
    max_id = self.since_id - 1 if self.max_id else None
TypeError: unsupported operand type(s) for -: 'NoneType' and 'int'
</pre>


Why do I get this error?
(sorry for my bad english)
"
395,streaming.py doesn't accept unless 4 locations or multiples,2014-02-24T07:49:24Z,2014-02-24T08:03:19Z,,,,"this line 
https://github.com/tweepy/tweepy/blob/master/tweepy/streaming.py#L303
always gives  `AssertionError` unless four locations are specified

also and line below 
https://github.com/tweepy/tweepy/blob/master/tweepy/streaming.py#L304
shows error % operation on String  '%.4f' 

i doubt if i'm using it in the correct way 

```
locs = [""Egypt"",""cairo"",""kuwait"",""riadh""]
stream.filter(track=keywords,locations=locs)
```
"
394,Automatically fill in method docstrings (and even new methods/parameters?) from the Twitter API Docs,2014-02-22T12:57:05Z,,,,,"I was inspired by @jackdied's PR: https://github.com/tweepy/tweepy/pull/259, which scrapes the docs, looking for mismatches with allowed_parameters (I don't think it works with the current docs/code).

This would allow Tweepy to be updated quickly whenever Twitter changes their API. It would also save us the work of documenting every single API method manually.

The downside is that dowloading all of the docs and scraping them can be slow, and the documentation HTML isn't versioned (obviously :smile:), so the script could break suddenly.

@joshthecoder: What are you thoughts? 
"
393,Requests support (for real this time) !,2014-02-22T04:26:58Z,2014-03-09T16:31:16Z,,,,"@joshthecoder: I'm going to clean up the commits (t's based off some of my work from almost a year ago).
"
392,Create new docs,2014-02-20T11:22:41Z,2014-02-20T19:54:49Z,,,,"@joshthecoder: I've re-created the old docs, and done some tweaking to bring the up to date. They still need some work, but I think having them is a big improvement over the small amount of documentation we currently have.

Is Tweepy still set up with Read The Docs? 
"
391,Broken imports on Google App Engine,2014-02-19T19:57:41Z,2014-02-21T03:01:05Z,Bug,,,"Apparently commit 3315d5a15f48c19ab7168768b9ff6ffce5c9153d broke the imports on Google App Engine.

`streaming.py` imports ssl which is fine everywhere except on Google App Engine where ssl tries to `import _ssl`. That import does not exist on Google App Engine and thus it fails.
"
390,Added monitoring of api rate limits and waiting for replenishment.,2014-02-09T05:21:40Z,2014-04-18T18:57:29Z,,,,"Should address issue #254.
"
389,More Precision in Coordinate-Search,2014-01-27T19:54:21Z,2014-02-20T23:54:09Z,,,,"Two decimal places do not allow the to specify an area exactly.
"
388,Removed all use of non secure and http protocol ,2014-01-22T17:22:46Z,2014-04-27T05:46:31Z,,,,"Removed all use of non secure and http protocol as Twitter API is now https only

Maintained the secure parameter on the API class for consistency, but it now defaults to secure in all cases.

Replaced any branch logic that gave the option of http over https.
"
387,Update streaming.py,2014-01-21T17:37:46Z,2014-04-19T13:10:23Z,,,,"corrected variable name; streaming.py
"
386,Problem with update_with_media,2014-01-21T08:34:24Z,2014-01-21T11:21:07Z,,UnicodeDecodeError,UnicodeDecodeError: 'ascii' codec can't decode byte 0xff in position 0: ordinal not in range(128),"I recently updated to version 2.2 and `update_with_media` always raises this Exception:

```
File ""/home/dnavarro/.virtualenvs/espacio_cliente/local/lib/python2.7/site-packages/tweepy/api.py"", line 731, in _pack_image
body = '\r\n'.join(body)
UnicodeDecodeError: 'ascii' codec can't decode byte 0xff in position 0: ordinal not in range(128)
```

Any idea?

Thanks.
"
385,Pull request to edit Examples/Streaming.py,2014-01-21T03:35:18Z,2014-01-21T03:41:47Z,,,,"Pull request to edit Examples/Streaming.py , for variable names
"
384,Examples (Streaming),2014-01-20T19:23:34Z,2014-06-18T16:58:57Z,,,,"In : https://github.com/tweepy/tweepy/blob/master/examples/streaming.py
Instead of :-1: 
 auth.set_access_token(access_token, access_token_secret)

Place :+1:
 auth.set_access_token(key, secret)
"
383,Deploy to PyPI when a commit is tagged,2014-01-20T18:52:40Z,2014-03-07T03:40:55Z,,,,"This resolves issue https://github.com/tweepy/tweepy/issues/382.

@joshthecoder: You'll need to update this with your encrypted PyPI username and password. See [here](http://docs.travis-ci.com/user/encryption-keys/) for details.
"
382,Automatically publish to PyPI once release is created.,2014-01-20T18:43:00Z,2014-03-07T03:41:07Z,Task,,,
381,Update/Add tweepy example for appengine tweepy/examples,2014-01-17T18:16:35Z,2014-01-19T06:34:19Z,,,,"There's no example for tweepy for appengine in the example directory and the tweepy/examples is not compatible to work with latest version of tweepy or appengine

Also tweepy is not redirecting itself to callback url. Gets stuck at /aouth/ url and does not redirect( in appengine )
![oauth](https://f.cloud.github.com/assets/1276650/1943458/c9d7de16-7faa-11e3-8875-520bc2b0d385.png)
"
380,Restrict all calls to HTTPS,2014-01-15T07:18:06Z,2014-01-16T22:35:39Z,,,,"https://dev.twitter.com/discussions/24239
"
379,api calling is now restricted to TLS/SSL connection only,2014-01-15T03:46:06Z,2014-01-16T02:46:55Z,,,,"[Restricting api.twitter.com to SSL/TLS traffic](https://dev.twitter.com/discussions/24239)
"
378,Twitter's SSL/TLS Requirement Breaks Authorization URL,2014-01-15T00:07:13Z,2014-01-21T00:24:11Z,,tweepy.error.TweepError,tweepy.error.TweepError: HTTP Error 403: Forbidden,"As of today (January 14, 2014), Twitter announced that connections to their API will have to go through TLS/SSL connections.

https://dev.twitter.com/discussions/24239

Is may be what is partially or fully responsible for the 403 Forbidden error Tweepy raises when attempting to get the authorization URL.  I've ran my program on more than one computer, and this issue is new.

Traceback (most recent call last):
  File ""Wolf's Den.py"", line 42, in <module>
    auth_url = auth.get_authorization_url()
  File ""/usr/lib/python2.7/site-packages/tweepy-2.1-py2.7.egg/tweepy/auth.py"", line 96, in get_authorization_url
    raise TweepError(e)
tweepy.error.TweepError: HTTP Error 403: Forbidden

If this is not the reason, does anyone have an idea what might be causing a 403?  What I do find interesting is my app still functions by manually obtaining the access token/secret from dev.twitter.com.  This might mean it's simply a problem with Tweepy, then.

> Source:  http://www.github.com/Altazon97/WolfsDen/
> Tweepy 2.1 (01/14/2014)
"
377,problem with class Stream,2014-01-08T06:53:21Z,2014-08-09T18:20:56Z,,TypeError,TypeError: **init**() takes at least 4 arguments (3 given),"In the example streaming.py .. im getting error as
 stream = Stream(auth, l)
TypeError: **init**() takes at least 4 arguments (3 given)
"
376,Added count field to followers list,2014-01-07T21:57:45Z,2014-01-07T22:01:29Z,,,,
375,IdIterator exceptions,2013-12-26T05:22:12Z,,,TweepError,"TweepError: [{u'message': u'Missing or invalid url parameter.', u'code': 195}]","`ItemIterator` also has several issues:
- if you pass `max_id` to the Cursor for these endpoints, you get `TypeError: _call() got multiple values for keyword argument 'max_id'`.
- the iterator generates bad requests like the one below...

To my mind, if you make a Cursor on an endpoint that does tweet id iteration and specify `max_id` AND `since_id`, the iterator should attemept to retrieve as many tweets as it can between those id's (not including since, including max).

The `IdIterator` will need to be re-thought for this to happen. A possible approach is to set `self.since_id` and `self.max_id` to `Null` in the constuctor and deal with the 2 exceptions mentioned.

```
In [8]: it = tweepy.Cursor(api.search,q=""MaxEnt"",since_id=415889399100866560).pages()
In [9]: tl=it.next() # generates url /1.1/search/tweets.json?q=MaxEnt&since_id=415889399100866560
In [10]: tl=it.next() # generates url /1.1/search/tweets.json?q=MaxEnt&max_id=415889399100866559&since_id=415889399100866560

TweepError                                Traceback (most recent call last)
<ipython-input-17-39d9cd963f7f> in <module>()
----> 1 tl=it.next()

/Users/drevicko/GitHub/tweepy/tweepy/cursor.py in next(self)
     95         # to avoid requesting duplicate items.
     96         max_id = self.since_id - 1 if self.max_id else None
---> 97         data = self.method(max_id = max_id, *self.args, **self.kargs)
     98         if len(data) == 0:
     99             raise StopIteration

...

TweepError: [{u'message': u'Missing or invalid url parameter.', u'code': 195}]
```

The error comes from the fact that max_id is less than since_id in the second api call.
"
374,Added count parameter to search API method,2013-12-21T20:19:44Z,2013-12-21T21:06:49Z,,,,"Twitter search API has ""count"" parameter that allows to specify maximum amount of results per page. I added support for this parameter to tweepy.
"
373,Update streaming.py,2013-12-19T15:55:17Z,2014-01-05T22:12:50Z,,,,"Patch to avoid reading stream incorrectly + safeguard to avoid crashing in case stream data format is genuinely wrong.

See issue: https://github.com/tweepy/tweepy/issues/371
"
372,Use unittest2 for Python 2.6 compatibility,2013-12-18T20:45:06Z,2013-12-18T20:55:31Z,,,,
371,Exception in StreamListener.on_data if message format is not JSON,2013-12-16T18:10:17Z,2014-04-13T13:22:23Z,,,,"This happens -- twitter can return anything! (for example a number...).

Example of twitter streaming data:

```
5261
{""created_at"":""Mon Dec ...
2
10
4441
{""created_at"":""Mon Dec ...
```

You should test the data is JSON _and_ it's a dict.

This is a serious bug as is will exit the read loop.

I suggest ignoring bad response lines:

```
def on_data(self, raw_data):

    try:
        data = json.loads(raw_data)
    ...
    except:
        logging.error(""Unknown response format: "" + str(raw_data))
```
"
370,Trouble in using Cursor with JSONParser,2013-12-16T11:03:45Z,2014-06-18T16:53:54Z,,,,"To get search result as dict, I made the following code using Cursor with JSONParser, but I got the error ""AttributeError: 'dict' object has no attribute 'max_id'."" Is there any solution for this problem? 

import tweedy

C_KEY = 'xxxx'
C_SEC ='xxxx'
A_KEY = 'xxxx'
A_SEC = 'xxxx'

auth = tweepy.OAuthHandler(C_KEY, C_SEC)
auth.set_access_token(A_KEY, A_SEC)
api = tweepy.API(auth_handler=auth, parser=tweepy.parsers.JSONParser())

for status in tweepy.Cursor(api.search, q=['tweepy']).items():
    print status
"
369,Added supported languages from help/languages,2013-12-03T03:34:15Z,2013-12-03T05:51:39Z,,,,"https://dev.twitter.com/docs/api/1.1/get/help/languages
"
368,Supported languages,2013-12-03T00:23:20Z,2013-12-03T03:29:40Z,,,,"Supported languages function that returns JSON of supported languages

API details here - https://dev.twitter.com/docs/api/1.1/get/help/languages#oauth-tool
"
367,Deal with the large number of open pull requests,2013-12-01T20:14:24Z,2013-12-19T11:25:48Z,,,,"@joshthecoder: As it's been three months since anything has been happening with Tweepy, **46** pull requests have been opened. These should be merged in or closed.
"
366,Add some callback methods.,2013-11-30T01:03:55Z,2013-12-18T20:16:04Z,,,,"I think it ​will be better if ​this change is applied.
"
365,SSL related changes submitted by @almost in pull request tweepy/132,2013-11-28T04:48:10Z,2013-12-01T18:28:16Z,,,,"This commit contains the SSL related changes submitted by @almost in
tweepy/132

I didn't include the delimited changes because this change has not been
merged upstream yet, maybe because the changes are not separate.
"
364,Add statuses/update_with_media feature,2013-11-21T12:00:34Z,2013-12-22T03:48:53Z,,,,"See https://dev.twitter.com/docs/api/1.1/post/statuses/update_with_media

implement support for the update_with_media feature + test.

This code is based on another pull request (https://github.com/tweepy/tweepy/pull/180) but that PR is not compliant with the v1.1 of the Twitter api. 

> Important: In API v1.1, you now use api.twitter.com as the domain instead of upload.twitter.com.

very small code added.

See discussion on issue #119
"
363,Added new param (include_rts) to list_timeline,2013-11-15T00:42:04Z,2013-12-21T01:27:21Z,,,,"Needed to pull statuses from a twitter list without RTs (which the twitter api includes by default). Made this modification and included 'include_rts=0' in my request to get a list of tweets sans-RTs.
"
362,I can't except tweepy (suspended account) error,2013-10-23T15:38:18Z,2014-04-13T19:48:09Z,,,,"try:
    visitorapi.retweet(tweetid)
except tweepy.TweepError:
    #if don retweet deleted account here.

TweepError at /retweet/ [{'message': 'Your account is suspended and is not permitted to access this feature.', 'code': 64}]

Why dont work tweepy.TweepError:
"
361,Added new parameters (proxy_host and proxy_port) for the api initializat...,2013-10-15T11:59:47Z,2014-04-27T05:28:42Z,,,,"...ion

Using them in httplib.HTTPConnection & httplib.HTTPSConnection, if the parameters are set!
"
360,How can i verify tokens for tweepy reauth?,2013-10-02T11:47:09Z,2013-12-22T20:20:40Z,,,,"rmakers = accounts.objects.filter(activate='on').order_by('?')
        for retweetmakers in rmakers:
                tokenfirst = tokens.objects.get(accounts=retweetmakers)
                access_key  = tokenfirst.atoken
                access_secret = tokenfirst.asecret
                oauth = tweepy.OAuthHandler(consumer_key, consumer_secret)
                oauth.set_access_token(access_key, access_secret)

i choose atoken and access secret's in my database but i can't control ""Tweepy invalid oauth token!"" how can i detect invalid tokens ?

My error : Unable to get username, invalid oauth token
"
359,Direct Message New Followers,2013-09-30T11:53:09Z,2013-12-22T20:20:16Z,,,,"I'm trying to figure out a way to direct message new followers automatically - has anyone figured out a way to do this yet?

up to now i've tried the following -

new_followers = API.followers(user)

for i in new_followers:
newDM = raw_input (i.from_user + ""send follower DM?"" + ""Y/N )

if newDM.lower() == ""n"":
            print i.from_user + "" was not messaged""
        else:
             api.send_direct_message(user_id = i.from_user, text = ""message text here""
            print ""You messaged "" + i.from_user + ""!\n""
"
358,Question about python version,2013-09-17T14:04:33Z,2013-09-17T19:45:15Z,,,,
357,/!\ tweepy installs a top-level 'tests' package,2013-09-14T15:26:58Z,2014-02-21T11:27:55Z,,,,"Installing tweepy puts both a 'tweepy' and a 'tests' package in site-packages!
"
356,Typo in documentation,2013-09-10T21:02:17Z,2014-02-21T11:29:31Z,,,,"http://pythonhosted.org/tweepy/html/cursor_tutorial.html

In last example:

```
for status in Cursor(api.user_timeline).limit(200):
```

should be:

```
for status in Cursor(api.user_timeline).items(200):
```

Someone who will be fixing #340 should also fix this on the way.
"
355,Added optional language filter on sample endpoint,2013-09-08T04:52:20Z,2013-12-21T01:38:33Z,,,,"Resolves Issue #291 

I found that filtering on language alone can only be done through the sample endpoint on the streaming API. This problem was brought up in issue 291 (filtering on language alone will result in 406 error), originally caused by twitter not supporting language, but now caused by filter apparently only filtering on track or location.

specifying language in sample seems to fix the problem for me.
"
354,Add unicode type detection for consumer key/secret,2013-08-31T23:33:43Z,2013-12-21T01:34:26Z,,,,"The hmac module won't accept unicode objects so cast them before using
them if they're present.

I have some python-spidermonkey code, which uses unicode objects exclusively (much like py3), so I needed some code in tweepy to automatically handle incoming unicode consumer key/secrets and cast them as bytes so the hmac module doesn't throw a fit. This will be necessary for py3 support as well (I think).
"
353,Website development.,2013-08-26T14:30:19Z,2013-08-28T01:00:44Z,,,,"Hi,

I saw that this project does not currently have a functional github page. Looked at the source and saw you are using Bootstrap 3. I'm versed in Bootstrap, and would like to contribute by making the website for the project.

I have used tweepy in the past, and would love to contribute.

Let me know if its all right with you. I'll get to it ASAP. (:
"
352,Added Aaron Hill to CONTRIBUTORS,2013-08-24T21:22:37Z,2013-12-18T19:49:07Z,,,,
351,Still build a User even if no api is passed in,2013-08-22T21:21:47Z,2013-08-24T03:06:54Z,,,,"tweepy.models.Status.parse(None, json.loads(data))
fails without this fix. It seems the model_factory is rarely used anyway, so just using User directly is also a valid fix.
"
350,Added sitestream endpoint,2013-08-20T10:26:14Z,2014-06-22T23:12:28Z,,,,"This resolves issue #82.
"
349,Upload record.json to Dropbox on sucessful build,2013-08-19T23:32:04Z,2014-03-07T03:42:49Z,,,,"This resolves Issue #348. 

@joshthecoder: You will need to create a Dropbox app [here](https://www.dropbox.com/developers/apps), and modify line 6 of `upload_record.py` with the correct path to the file in your Dropbox.
"
348,Upload record.json to Dropbox whenever master rebuilds.,2013-08-19T22:50:42Z,2014-03-16T23:52:53Z,Task,,,"We should automate the generation and uploading of the replay record.json
to Dropbox whenever a master CI build completes successfully.
"
347,"Handle disconnect notices, log unknown messages",2013-08-19T21:46:06Z,2013-08-19T22:56:59Z,,,,"I've been getting quite a few disconnect notices while running in a backend on app-engine. Poor handling of these disconnect notices has lead to rate limiting and 420 (enhance your cool) messages. This change is now in testing to see if it works better. I'd appreciate comments on whether you ( @joshthecoder ) like this approach.
"
346,Removed test() method,2013-08-19T19:50:23Z,2013-08-19T22:34:35Z,,,,"The resolves issue #338.
"
345,Test.,2013-08-19T19:17:24Z,2013-08-19T19:32:41Z,,,,
344,Added Pypi badges,2013-08-17T23:24:15Z,2013-08-19T23:11:09Z,,,,
343,Removed coverage reporting on pull requests,2013-08-17T20:34:58Z,2013-08-19T19:33:40Z,,,,"Since only a subset of the tests are run on pull requests, coverage statistics shouldn't be collected for them.
"
342,Added coverage badge,2013-08-17T20:21:23Z,2013-08-19T23:11:28Z,,,,
341,Added support for Coveralls.io,2013-08-17T12:55:28Z,2013-08-17T19:08:27Z,,,,"I've set up Tweepy to publish code coverage information to [Coveralls.io](http://coveralls.io), which allows you to display a badge in the README stating your test coverage. If you'd like to use this. you'll need to create an account at coveralls.io.

See [this repository](https://github.com/z4r/python-coveralls/blob/master/README.rst) for an example of the badge.
"
340,Regenerate Sphinx documentation,2013-08-17T11:40:16Z,2014-02-21T11:32:44Z,,,,"The documentation linked to on Tweepy's PyPi page is outdated, and should be regenerated to include the new methods.
"
339,Testing....,2013-08-17T05:41:33Z,2013-08-17T05:43:55Z,,,,
338,Remove the test() method,2013-08-17T00:48:19Z,2013-08-19T22:34:49Z,,,,"With the release of twitter API v1.1 it appears that help/test is no more.  See
https://dev.twitter.com/docs/api/1/get/help/test
vs
https://dev.twitter.com/docs/api/1.1/get/help/test

I'm not sure if there's a good way to replace this - looks like all the endpoints now have at least some API limits meaning you couldn't swap out the help/test call with another no-op call.  With that in mind I recommend you take test() out of the code and docs.
"
337,Backoff reconnection attempts according to twitter's recommendations.,2013-08-16T22:18:21Z,2013-12-21T01:57:36Z,,,,
336,Set timeouts properly,2013-08-16T22:17:29Z,2013-08-17T05:46:10Z,,,,"This is needed to work on app engine.
"
335,Added contributers and contributees endpoints,2013-08-16T20:37:07Z,2013-08-19T23:37:55Z,,,,"The tests will need to be edited to have the usernames of users with contributors enabled.
"
334,Removed basic auth,2013-08-16T19:30:03Z,2013-08-17T20:45:28Z,,,,
333,Added HTTP replaying for pull requests,2013-08-15T11:46:39Z,2013-08-17T05:32:12Z,,,,
332,Asynchronous handling via StreamListener?,2013-08-14T12:51:04Z,2014-02-24T03:52:10Z,,,,"Is it possible to handle the results inside the StreamListener asynchronously or concurrently? For example, patch ""on_data"" or  ""on_status"" with gevent and consume the incoming data with a pooling-pattern? (Or with generators?) 
"
331,item iterator will not make an extra request to determine end of search results,2013-08-12T16:36:58Z,2014-02-21T11:22:10Z,,,,"prevents that extra call to determine len(data) == 0 before raising StopIteration
"
330,#303 fixed calculation of max_id in search results,2013-08-12T12:22:17Z,2014-04-13T12:00:26Z,,,,"now set to min_id-1 of previous results
"
329,#256 add ratelimit to apimethod instead of api ,2013-08-12T12:17:18Z,2014-02-21T00:03:31Z,,,,"#256
"
328,Add /geo/place.json API method,2013-08-01T12:25:15Z,2013-12-21T03:01:56Z,,,,"Hi,

I just wanted to enable the creation of places with Tweepy so I added a missing API method.

Probably this can't be considered a proper pull request but I just wanted to bring your attention on this.

I exposed the token object in the response from geo_similar_places method and after that I add a new method for geo_place feature.

Cheers,
"
327,Python 3 support,2013-07-31T18:51:44Z,2013-12-22T12:07:36Z,,,,"I've just merged `master` into @Puzzlet's python 3 port branch: https://github.com/puzzlet/tweepy/commit/f67e5746c1e5a24f4f4cda557dd73e084773ae7a.

This resolves issue #199.
"
326,Added Python 2.6 to .travis.yml,2013-07-31T18:45:28Z,2013-12-18T19:53:33Z,,,,
325,Exclude tests from installation.,2013-07-29T16:18:28Z,2013-08-17T07:12:17Z,,,,"There's no need to include the `tests` package when installing the library.
"
324,Fixed a bunch of bugs in the paging mechanisms of the IdIterator:,2013-07-23T11:46:55Z,2014-04-13T12:00:23Z,,,,"- Passing same argument twice (max_id / since_id) to method
- If you supply only max_id and not since_id, you try to subtract 1 from since_id which is set to None
- The paging mechanism itself did not work as expected, now it does (both next and prev)
"
323,Use Requests instead of httplib,2013-07-11T13:54:12Z,2014-02-22T12:43:04Z,,,,"This resolves issue #279
"
322,Tweepy 2.1 is not on pip,2013-07-10T23:05:11Z,2013-07-14T19:01:53Z,,,,"This fixes issue #320 
"
321,OAuth problem,2013-07-05T09:04:16Z,2014-02-21T19:47:32Z,,,,"Scenario:
1. Auth using OAuthHandler
2. Try to post new tweet # Works fine
3. Call api.me().friends() # Works fine
4. Recursive call friends() on all users starting from api.me()
5. On 2-3 recursion level you got: ""TweepError: Not authorized""
"
320,Fail to Search. Wrong API Version,2013-07-02T21:28:53Z,2013-07-29T00:47:27Z,,,,"I'm using tweepy 2.0 and I want to search tweet by some key words. My code is:

auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)
api = tweepy.API(auth)
api.search(q='google')

And I get the error message:
'The Twitter REST API v1 is no longer active. Please migrate to API v1.1. https://dev.twitter.com/docs/api/1.1/overview.'

Doesn't version 2.0 fully migrate to API v1.1?
"
319,update_status_with_media mismatch,2013-07-01T12:15:47Z,2013-12-22T13:48:58Z,,AttributeError,AttributeError: 'API' object has no attribute 'status_update_with_media',"I tried to install and connect my rapsberry pi to tweepy.

Got an error when i call update_status_with_media : 

AttributeError: 'API' object has no attribute 'status_update_with_media'

There is my source code : 
# !/usr/bin/env python
# -_\- coding: utf-8 -_-

import os
import tweepy
import base64
import sys
from time import sleep
import random
# third party libs

import piface.pfio as pfio
pfio.init()

CONSUMER_KEY = xxx
CONSUMER_SECRET = xxx
ACCESS_KEY=xxx
ACCESS_SECRET=xxx

def setup_api():
    auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
    auth.set_access_token(ACCESS_KEY, ACCESS_SECRET)
    return tweepy.API(auth)

if **name** == '**main**':
    api = setup_api()

while (True):
      button = pfio.digital_read(0)
      print ""Waiting for a push ! ""
      if button == 1:
        pfio.digital_write( 6, 1 )
        print ""Capture coming! ! ""
            os.system('fswebcam -r 352*288 -d /dev/video0 data/webcam.png')
            dir = os.path.dirname(os.path.abspath(**file**))
            file_path = os.path.join(dir, 'data', 'webcam.png')
            randomstatus ="" Hello sam, i mtweeting next to your RaspberryPi ""
            api.status_update_with_media(file_path, status=randomstatus)
            print ""You pushed the button ! ""
        pfio.digital_write( 6, 0 )    
"
318,question: does tweepy support application-only auth?,2013-06-29T14:56:15Z,2014-04-23T23:34:44Z,,,,"Does tweepy support it? I coudn't find it in the docs. More info here:
https://dev.twitter.com/docs/auth/application-only-auth
"
317,Update with media,2013-06-28T01:33:29Z,2013-12-22T03:50:16Z,,,,"Hi!

You have very nice lib, by the way :)

I've noticed, that it lacks ""update_with_media"" so I decided to add it.

The usage is quite straightforward:

``` python
api.update_with_media(photo, status=text)
```

photo - is a bytestring like StringIO(file.read()) - it appears to be more convenient for me. If it is a problem, I can change it to a file-like object (or make it optional).

I'm fully ready to add any changes to this solution :)
"
316,Search only works for ASCII strings?,2013-06-25T22:49:14Z,2014-01-02T15:05:53Z,,,,"I tried to use the search API to search for a Hebrew string, and got no results. On twitter's website, on the other hand, searching for Hebrew strings works.

Not sure if it's a tweepy bug or a twitter API bug, but searching non-English strings is extremely important for me
"
315,No documentation in source tree?,2013-06-25T22:46:41Z,2014-02-21T11:35:13Z,,,,"I looked at `docs/`, all I can find there is how to install the library (duplicating info already in `README`).

The online docs linked to on the `README` file are very old (1.4), and newer more complete documentation would be extremely helpful
"
314,Not able to get OAuth tokens even with the simpliest of the codes... [Solved],2013-06-25T16:37:24Z,2013-08-20T15:36:20Z,,,,"Hi all, I'm new in building API's but I think I'm doing everything right but the code doesn't work at all...

I'm getting that error with tweepy: ""Unable to get username, invalid oauth token!""

I've tried using OAuth2 and I'm not able to get the token corectly. I've tried copy-paste of the acces keys at least 10 times and it's not working.

I don't really know if the problem is mine. I've tried to delete the aplication from twitter and get a new one. I delete it, it says it has been deleted. But it remains there after it so I've tried creating a new App but the problem persists.

Here's the code, as you may see, it's probably the easiest thing to do :S Much thanks in advance!

import tweepy

consumer_key = 'consumer_key' #Correctly pasted from the twitter dev place
consumer_secret = 'consumer_secret'
access_token = 'access_token '
access_token_secret = 'access_token_secret'

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

api = tweepy.API(auth)

print api.me().name
"
313,Python 3 support,2013-06-23T20:35:59Z,2014-12-01T03:43:49Z,,,,"So yeah, trying to use Tweepy with anything but the english language is a **nightmare**.
As I understand it, Python 3 doesn't have all these unicode issues, so a port of the current version of Tweepy with API 1.1 support would be nice.

(Edit: I didn't see issue #199 before creating this one, forgive me.)
"
312,Suggest to respect twitter's rates limit by pause according to response,2013-06-23T07:33:43Z,2014-08-09T18:16:21Z,,,,"Attached is the suggested patch to binder.py

Thanks,
Raingo

--- binder.py   Sun Jun 16 16:42:20 2013
+++ binder2.py  Sun Jun 23 15:30:03 2013
@@ -159,8 +159,18 @@
                 else:
                     if resp.status == 200: break
-                sleep_time = self.retry_delay
  +
-                if resp.status == 429:
  +
-                    reset_time = resp.getheader('x-rate-limit-reset', None)
  +
-                    if reset_time:
-                        cur_time = int(time.time())
-                        sleep_time = int(reset_time) - cur_time
  +
               # Sleep before retrying request again
-                time.sleep(self.retry_delay)
- ```
             time.sleep(sleep_time)
           retries_performed += 1
  
       # If an error was returned, throw an exception
  ```
  
  @@ -207,4 +217,3 @@
       _call.pagination_mode = 'page'
  ##  return _call
"
311,Travis builds are failing due to bad auth keys,2013-06-23T03:21:04Z,2013-06-23T07:03:37Z,,,,"Looks like twitter has invalidated old auth tokens (from api1.0?). Anyway, the tokens used in the travis build are currently invalid, so all builds are failing.

I guess this is what caused #307 too.
"
310,Include images in Twitter updates,2013-06-22T12:54:50Z,2013-12-22T03:50:31Z,,,,"It would be nice to add images to Twitter posts.  In fact, Laiso has added this in his fork a while ago: https://github.com/laiso/tweepy/  I applied those changes to your latest version to make this work with the Twitter API v1.1.  Is this something you'd consider to pull into your ""official""/original branch?

Cheers,

AF.
"
309,added missing search params and search results metadata,2013-06-21T04:10:24Z,2013-12-25T12:25:06Z,,,,"Added missing search params and results metadata, and removed unused 'show_user' param, as per https://github.com/tweepy/tweepy/pull/296#discussion_r4649865
"
308,should fix issue 303,2013-06-21T03:57:17Z,2014-04-09T17:05:23Z,,,,"The idea is to let the underlying ResultSet handle since_id/max_id as used to generate subsequent API requests.

The since_id/max_id returned in the twitter search results metadata do not generally reflect the actual min/max id's retrieved, as twitter copies them from the request when present. Imho it's best just to ignore them for now...

I haven't checked if the search API returns most recent tweets first, but I think that's most probably the case. 
"
307,Twitter 1.1 OAuth,2013-06-18T23:32:14Z,2014-01-05T22:11:00Z,,TweepError,"TweepError: [Bad Authentication Data, code: 215]","Hey guys.  I am new to Git, and I hope this is the correct place to ask questions... let me know if I should post somewhere else.

Anyway, I have been using Tweepy for a while now and suddenly I am unable to authenticate.  I have spent the past few hours researching how to do it, but I have not found a solution.  

Here is a snippet of my code:

auth = tweepy.auth.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_secret)
api = tweepy.API(auth)

api.test() returns False, and I receive this error when I try to use a method that requires authentication:

TweepError: [Bad Authentication Data, code: 215]

I have tried updating to Tweepy 2.0, and even Tweepy 2.1, which I am currently using.

Can somebody please explain how to authenticate?  Thanks!
"
306,api.test() returns False with valid credentials,2013-06-16T11:56:27Z,2013-06-17T12:39:08Z,,,,"import tweepy
auth = tweepy.auth.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_key, access_secret)
api = tweepy.API(auth)

api.test() # returns False, while
api.me # => returns a correct <tweepy.models.User>.

I am using the latest version via PIP. Does it matter?
"
305,Twitter API 1.1 Error,2013-06-14T20:22:58Z,2013-12-22T20:28:30Z,,,,"Hi,

I'm not sure if this was addresses before, I've searched Google and the issues here.

Since June 11th, 2013, twitter updates through tweepy return ""The Twitter REST API v1 is no longer active. Please migrate to API v1.1"".

I have installed tweepy through ""easy_install"" and I'm not sure whether that installs the latest code on the master branch and I can't see any version information anywhere either.

Can you please assist me on this? Thanks in advance!

Edit: by the way, I'm not sure if ""Search API 1.1"" is what is meant by simply ""API 1.1"", if so, then I guess that doesn't exist on PyPI as per #302.
"
304,Possible solution for Issue 303,2013-06-14T15:21:32Z,2014-04-13T12:00:30Z,,`tweepy.error.TweepError,"`tweepy.error.TweepError: [{'message': 'Missing or invalid url parameter', 'code': 195}]`","Since the change to search API 1.1 this seems to be wrong. With decrement by 1
you will get the following error:
`tweepy.error.TweepError: [{'message': 'Missing or invalid url parameter', 'code': 195}]`
Removing it seems to resolve this without causing duplicates for us. However, more testing is needed. This seems to resolve issue #303
"
303,Search complication with since_id and max_id,2013-06-13T16:09:02Z,2014-04-13T13:24:25Z,,`tweepy.error.TweepError,"`tweepy.error.TweepError: [{'message': 'Missing or invalid url parameter', 'code': 195}]`","I just noticed a problem occuring since the change of the API.search() endpoint to v1.1.

I use tweepy.Cursor with the `since_id` parameter to retrieve multiple pages of search results.

The corresponding request(s) looks like this:
`GET /1.1/search/tweets.json?lang=de&q=SEARCH_TERM&since_id=344796632681967616`
So far so good, but the last request fails:
`GET /1.1/search/tweets.json?lang=de&q=SEARCH_TERM&max_id=344796632681967615&since_id=344796632681967616`
.. resulting in:
`tweepy.error.TweepError: [{'message': 'Missing or invalid url parameter', 'code': 195}]`

I noticed that the failing request contains both `since_id` and `max_id`. Their values seem to be mutually exclusive:

> **since_id**: Returns results with an ID greater than (that is, more recent than) the specified ID.
> **max_id**: Returns results with an ID less than (that is, older than) or equal to the specified ID.
> Source: https://dev.twitter.com/docs/api/1.1/get/search/tweets

So I think Twitter is right, this seems to be a tweepy bug.

I think this might be linked to drevicko's comment https://github.com/tweepy/tweepy/pull/296#commitcomment-3404913.

Thanks.
"
302,Push minor version and update on pypi,2013-06-13T12:45:55Z,2014-04-13T13:23:08Z,,,,"I noticed that you recently updated tweepy to use the v1.1 version of the search API (PR #296, I assume this is since twitter discontinued API 1.0). Could you pleases bump the tweepy minor version for this and also publish a package to pypi? We are using tweepy and the search API and load our dependencies in our production environment via pip. We currently workaround by telling pip to directly pull from github but we don't like the fact that we have to have git installed in our production environment. 
"
301,Proxy support,2013-06-12T21:50:04Z,2014-03-07T05:04:58Z,,,,"Optional parameter proxy_host, formated as:

host:port
"
300,AttributeError: 'API' object has no attribute 'followers',2013-06-12T17:34:16Z,2013-08-20T04:48:39Z,,,,"hii i use tweepy 2.x i want get follower list on my account. i read the doc http://pythonhosted.org/tweepy/html/api.html#user-methods i tray and error .

> > > auth.set_access_token(user.oauth_token, user.oauth_secret)
> > > api = tweepy.API(auth)
> > > api.followers()
> > > Traceback (most recent call last):
> > >   File ""<console>"", line 1, in <module>
> > > AttributeError: 'API' object has no attribute 'followers'

thanks
"
299,"Problem accessing /1.1/statuses/filter.json, Reason: Unauthorized",2013-06-12T16:10:35Z,2013-08-20T04:48:23Z,,,,"Its looks like twitters api change broke filter stream. I am not sure why but I think its related to this maybe:

Basic Auth will be disabled on stream.twitter.com/\* for all users in non-elevated Streaming API roles. Such requests will receive a HTTP 401Unauthorized. We strongly recommend all Streaming API users, including those in elevated roles, to migrate to OAuth 1.0A now.
https://dev.twitter.com/docs/faq#17750

Or their api is just down.

I am looking into this now and any ideas are welcome.
"
298,Add forward slash support in tweepy.utils.urlencode_noplus,2013-06-12T01:21:04Z,2013-07-15T17:53:37Z,,,,"This resolves issue https://github.com/tweepy/tweepy/issues/212
"
297,Add account/update_profile_banner endpoint,2013-06-09T16:01:22Z,2013-08-21T06:25:54Z,,,,"I've added the update_profile_banner endpoint: https://dev.twitter.com/docs/api/1.1/post/account/update_profile_banner

In order for this to work, I've added an optional parameter called form_field to the _pack_image method. It allows the name field in the POST data to be changed.\

I've also made the execute method in binder.py accept 201 and 202 as non-error response codes. This is necessary because the endpoint will return 200, 201, or 202 to indicate success.
"
296,Change API.search() to use endpoint v1.1,2013-06-08T22:02:05Z,2013-06-11T03:34:56Z,,,,"Here's my proposed changes for switching to the API version 1.1 search endpoint.
Fairly simple changes with some breaking changes due to how the response
has changed from Twitter. Instead of returning a set of ""SearchResult"" the endpoint
now provides just plain ""Status"" objects.

When you call API.search() you get back an extended version of ResultSet
(which extends list) called SearchResults that has some meta data such
as ""max_id"" and ""since_id"" which is useful for pagination.

Here's a basic example: https://gist.github.com/joshthecoder/b9cd1c805a35da5fe43d

Would appreciate any feedback.
"
295,"Geo Enabled tweets return Coordinates value ""False""",2013-05-30T22:31:41Z,,,,,"Hello,
I am using Tweepy to access the streaming API. I am able to get results with the code below but for tweets where the Geo Enabled value is ""True"" I am getting a Coordinates returned value of ""False"". How can this be? Do I need to decode the JSON object being returned for status.coordinates?

from tweepy.streaming import StreamListener
from tweepy import OAuthHandler
from tweepy import Stream
import random
import time
import MySQLdb
import json

consumer_key=""XXX""
consumer_secret=""XXX""

access_token=""XXX""
access_token_secret=""XXX""

db=MySQLdb.connect(host='localhost', user='XXX', passwd='XXX', db='twitter') 
db.set_character_set('utf8')

Coords = dict()
Place = dict()
PlaceCoords = dict()
XY = []
curr=db.cursor()

class StdOutListener(StreamListener):
                """""" A listener handles tweets that are the received from the stream. 
                This is a basic listener that inserts tweets into MySQLdb.
                """"""
                def on_status(self, status):
                                print ""Tweet Text: "",status.text
                                text = status.text
                                print ""Time Stamp: "",status.created_at
                                print ""Time Stamp: "",status.created_at
                                print ""Source: "",status.source
                                source = status.source
                                print ""Author: "",status.user.screen_name
                                author = status.user.screen_name
                                print ""Name: "",status.user.name
                                name = status.user.name
                                print ""Time Zone: "",status.user.time_zone
                                time_zone = status.user.time_zone
                                print ""User Language: "",status.user.lang
                                user_language = status.user.lang
                                print ""Followers: "",status.user.followers_count
                                followers = status.user.followers_count
                                print ""User Description: "",status.user.description
                                user_description = status.user.description
                                print ""Geo Enabled: "",status.user.geo_enabled
                                geo_enabled = status.user.geo_enabled
                                print ""Friends: "",status.user.friends_count
                                friends = status.user.friends_count
                                print ""Retweets: "",status.retweet_count
                                retweets = status.retweet_count
                                print ""Location: "",status.user.location
                                location = status.user.location
                                print ""ID: "",status.user.id_str
                                user_id = status.user.id_str
                                #Coords.update(status.coordinates)
                                #XY = (Coords.get('coordinates'))
                                print ""Coordinates: "",status.coordinates
                                coordinates = status.coordinates
                                print ""Place: "",status.place
                                place = status.place

Here is a sample result output:

Tweet Text:  @aranone aran tu eres el mejor  soy tu fanatico 1 me gusta tu musica.hey pana sique asi q vay bn te deseo lo mejor bro)
Time Stamp:  2013-05-30 23:36:38
Time Stamp:  2013-05-30 23:36:38
Source:  web
Author:  juandvd_96
Name:  juan David Romero
Time Zone:  Atlantic Time (Canada)
User Language:  es
Followers:  365
User Description:  hola soy juan david... soy una chico muy enamorado... y soy muy fekiz...
Geo Enabled:  True
Friends:  1857
Retweets:  0
Location:  veezuela maracaibo
ID:  481513551
Coordinates:  None
Place:  None

cheers,
BD
"
294,Add Flag to Notify if the request returned was from the cache,2013-05-27T20:15:17Z,2013-12-22T01:44:06Z,,,,"add boolean value to API object that updates True/False if the request returned by an API Method returned data from the cache or not. 

See unit tests for examples
"
293,Retry does not include client-side connectivity issues,2013-05-26T21:49:52Z,2014-04-13T19:40:12Z,,,,"I was looking at `binder.py` code, and 

```
try:
    conn.request(self.method, url, headers=self.headers, body=self.post_data)
    resp = conn.getresponse()
except Exception, e:
    raise TweepError('Failed to send request: %s' % e)
```

this is inside a retry loop. However if network error occurs and it cannot send the request, it just throws an exception and does not retry at all.

I believe this is designed for only issues that could happen at Twitter service-side. I think clients may also experience retries. As far as I expericenced, client APIs are designed to retry for client-side issues (e.g. network problems) etc.

I can happily send a patch if you guys would consider including client-side errors within retries by design.
"
292,"Can you add the parameter for ""userstream"" function like this?",2013-05-22T08:47:33Z,2014-02-21T11:23:18Z,,,,"As title, especially track parameter will help us a lot..
Thanks you!
"
291,406 error in Streaming API when filtering on language,2013-05-21T15:41:47Z,2013-05-21T22:13:25Z,,,,"I invoke the streaming API:

``` python
stream.filter(languages = [""en""])
```

I get 406 errors. However, if I simply emulate the OAuth streaming example:

``` python
stream.filter(track = [""basketball""])
```

it works fine. I noticed that even though Twitter supposedly [implemented language support](https://dev.twitter.com/calendar) on March 26, it hasn't shown up on their official documentation for the [filter streaming API](https://dev.twitter.com/docs/api/1.1/post/statuses/filter), so I can't tell which side the problem is on. Any suggestions?

It should be noted: I'm using the most current version of tweepy from github, specifically so I can use the language filter.
"
290,Removes 'friendship_exists' endpoint,2013-05-14T14:19:24Z,2013-05-14T18:06:41Z,,,,"see comments on #288
"
289,API Query to Lookup a Friendship uses Twitter v1 Endpoint,2013-05-12T17:24:35Z,2013-05-14T14:20:53Z,,,,"using endpoint ""friendship/exists"" instead of ""friendship/lookup""

when making the incorrect call Twitter returns the following response: 
{'message': 'Sorry, that page does not exist', 'code': 34}

See [v1.1 docs](https://dev.twitter.com/docs/api/1.1)
"
288,"Update ""friendship_exists"" api query to v1.1",2013-05-12T17:13:51Z,2013-05-14T06:17:45Z,,,,"v1.1 of Twitter API added authentication as a requirement and changed the endpoint for looking the relationship between two followers - see docs here https://dev.twitter.com/docs/api/1.1/get/friendships/lookup

I changed the endpoint URL from ""exists"" to ""lookup"" to reflect the correct endpoint, but left the function name ""friendship_exists"" as is in order not to break existing code.
"
287,Added update status with media,2013-05-08T09:16:57Z,2013-12-22T04:10:00Z,,,,"Hi, I think many people need this feature and I know there is a bunch of pull requests about the same issue, so I took ideas from these other forks.

There are several new features:
- Add status with attached media
- The method can receive as parameter a local file path or a Django File Object

I tried to change code as least as possible and I wrote some tests too, so it would be very easy to merge with master.

If you have any suggest or complaint, I can fix it.
"
286,Connection problem in tweepy,2013-04-30T20:03:51Z,2013-05-14T19:19:12Z,,tweepy.error.TweepError,tweepy.error.TweepError: Failed to send request: [Errno 111] Connection refused,"I am trying just authentication and I am not able to connect to twitter.

in 

print api.me().name

File ""/usr/local/lib/python2.7/site-packages/tweepy/api.py"", line 151, in me

return self.get_user(screen_name=self.auth.get_username())

File ""/usr/local/lib/python2.7/site-packages/tweepy/auth.py"", line 157, in get_username

user = api.verify_credentials()

File ""/usr/local/lib/python2.7/site-packages/tweepy/api.py"", line 309, in verify_credentials

)(self, **kargs)

File ""/usr/local/lib/python2.7/site-packages/tweepy/binder.py"", line 185, in _call

return method.execute()

File ""/usr/local/lib/python2.7/site-packages/tweepy/binder.py"", line 149, in execute

raise TweepError('Failed to send request: %s' % e)

tweepy.error.TweepError: Failed to send request: [Errno 111] Connection refused
"
285,added timeout to REST api ,2013-04-28T08:50:12Z,2013-05-14T18:13:27Z,,,,"Added a timeout parameter to the api constructor with default 60s and set timeout to this value when creating HTTPConnection and HTTPSConnection in binder.py

I believe it's as simple as that, but if I've missed something let me know.

I've not written any tests, though the code runs ok (the changes are pretty trivial). I'm writing a phd so pretty time poor, and I'm not really setup to run tests - if anyone listening is able to test the timeout without too much effort, that'd be great..)

With any luck this adresses bug report #283
"
284,Auth problems with streaming API and userstream,2013-04-26T11:25:26Z,2013-05-19T02:55:43Z,,,,"I've tried to add  parameter with=user to request in userstream. After this change I've got error 401 from twitter. First of all I've tried to switch to actual twitter API version, but this didn't help. After some investigations I've got this working code (my first experience in Python). Hope it will help to update function :)))

```
def userstream(self, count=None, async=False, secure=True):
    self.parameters = {}
    self.parameters['delimited'] = 'length'
    self.parameters['with'] = 'user'

    if self.running:
        raise TweepError('Stream object already connected!')
    self.url = '/%s/user.json?delimited=length&with=user' % STREAM_VERSION
    self.host='userstream.twitter.com'

    self._start(async)
```
"
283,api calls hanging in ssl do_handshake() method...,2013-04-24T04:21:26Z,2013-08-20T04:46:28Z,,,,"I have an application polling twitter with Tweepy, and every now and then it hangs. A stack trace of it's hung state contains:

```
...tweepy/binder.py"", line 185, in _call
return method.execute()
.... tweepy and http calls ...
""/usr/lib/python2.7/ssl.py"", line 305: self._sslobj.do_handshake()
```

I've a [stack overflow question](http://stackoverflow.com/questions/16183179/tweepy-2-0-hanging-on-ssl-do-handshake) with lots of details. I suspect this is a problem with the ssl backend, but thought I'd put it here too 

Speaking of which, I'm using ubuntu 12.04 with tweepy 2.0 installed from pip. I believe the http/ssl backend is standard (ie: I've not changed anything), but I'm not sure how to determine its versions etc.. 
"
282,"Rate limit support, multiple authentication, search using v1.1 api and more.",2013-04-17T23:29:11Z,2013-06-08T22:43:53Z,,,,"Added multiple features (sorry for not separating commits):
- API now support switching between multiple authentication handler
- Allow blocking when reaching rate limit.
- Search is now using Twitter API v1.1
- 'Pagination' of timelines is now done properly with max_id parameter, applies to all endpoints supporting 'max_id'. Other endpoint that have 'page' in their argument list still use the old pagination iterator.
- Fixed an issue with PageIterator that caused the iterator to make an extra call to the Twitter API beyond the provided page limit.
- Add unit tests for all of the above.
"
281,Newly added local trends are not returned in the array,2013-04-17T21:04:23Z,,,,,"Hello Josh,  
I need your help. This is I was asking about in the mailing list: the returned array of local trends doesn't return neither Ukraine nor Poland.  
I've started a discussion [here](https://dev.twitter.com/discussions/16789). Please have a look at it. They say it's OK on their part. As you know this much better, I would like to have your suggestion.  
Thanks!
"
280,add activity by friends api,2013-04-11T12:06:02Z,2013-05-15T04:07:13Z,,,,
279,tweepy: CVE-2012-5821,2013-04-10T21:56:34Z,2014-12-01T03:45:10Z,Improvement,,,"Hi folks,

Could you determine if tweepy is affected by CVE-2012-5821 vulnerability? I'm forwarding you a message received in Debian bug tracker:

---------- Forwarded message ----------
From: Moritz Muehlenhoff <jmm@inutil.org>
To: Debian Bug Tracking System <submit@bugs.debian.org>
Subject: tweepy: CVE-2012-5821
Date: Tue, 06 Nov 2012 12:07:01 +0100

Package: tweepy
Severity: important
Tags: security
Justification: user security hole

Please see Section 9 of this paper:
http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf

Cheers,
        Moritz
"
278,Pull request: Added new language parameter to filter endpoint,2013-03-27T10:07:49Z,2013-03-28T17:59:50Z,,,,"(see: https://dev.twitter.com/blog/introducing-new-metadata-for-tweets)
"
277,Calling method of stream listener after connection is closed in async mode,2013-03-25T15:34:24Z,,,,,"If you have the stream listener in async mode some times it is useful to perform certain tasks when the stream is closed/disconnected. Example may be closing a DB connection or sending some message from inside the thread. Currently such thing is not possible. A sample fix may be https://github.com/IlianIliev/tweepy/commit/2b57df6cde929f164c135af24dcccabcc115a8ff

Another option is to call method of the Stream class instead of the listener but this way you will have to extend both the listener and the class if you need it.
"
276,Typo  in tests.py,2013-03-25T09:43:26Z,2013-08-20T04:42:00Z,,,,"https://github.com/tweepy/tweepy/blob/master/tests.py#L143

should be s/twtiter/twitter/ ? 
"
275,Error 401,2013-03-25T00:48:16Z,2014-04-13T13:12:06Z,,,,"Hi guys.
I have been using tweepy for about a month to do some datamining with the streaming api.
But since about a week ago, twitter gives me a 401 status code.

I have no changed anything.
This is a problem with tweepy or with tweeter?

Cheers.
"
274,Error code 401,2013-03-22T23:20:28Z,2014-04-13T13:12:16Z,,,,"Hi guys.
I was using the streaming api for weeks with absolutly no problem.

But 2 days ago i cannot use cause i get an error code 401.

Did you have any information about how to fix it.

I was searching in the dev's page of twitter and it said that apps must use the new oauth direction.

I updated to the last version of tweepy with pip but that don't fixed the problem.

Cheers.
"
273,Request for adding unofficial Twitter API that provides useful informations.,2013-03-21T05:54:35Z,2013-03-21T07:20:09Z,,,,"This summary unofficial Twitter API provides retweeter counts, retweeter's
id, favoriter counts, favoriter's id, replier counts and replier's id.
"
272,Add update_profile_banner method,2013-03-20T17:40:23Z,2014-04-13T13:11:31Z,,,,"Hi, i'm trying to extend the Api to include this twitter api method
https://dev.twitter.com/docs/api/1.1/post/account/update_profile_banner

So far i've tried to add this method to the api class
    def update_profile_banner(self, filename, _args, *_kargs):
        headers, post_data = API._pack_image(filename, 800)
        bind_api(
            path = '/account/update_profile_banner.json',
            method = 'POST',
            payload_type = 'user',
            allowed_param = ['width','height','offset_left','offset_top'],
            require_auth = True
        )(self, post_data=post_data, headers=headers)

Mimicking the update_profile_image but an exceptions is rised with [{'message': 'Profile banner parameter is missing', 'code': 38}]

Any help appreciated.
"
271,OAuthHandler get_authorization_url() fails when handler instantiated with unicode parameters,2013-03-15T14:42:30Z,2013-08-20T04:38:58Z,,,,"When creating a new OAuthHandler object, if the parameters passed are unicode, a subsequent call to get_authorization_url results in a TweepError with the message 'character mapping must return integer, None or unicode'

fails when consumer_key, consumer_secret, callback are all unicode

``` python
    auth_hdlr = tweepy.OAuthHandler(consumer_key, consumer_secret, callback)
    auth_url = auth_hdlr.get_authorization_url()
```

works:

``` python
    auth_hdlr = tweepy.OAuthHandler(str(consumer_key), str(consumer_secret), str(callback))
    auth_url = auth_hdlr.get_authorization_url()
```
"
270,report_spam changed according to API 1.1 docs,2013-03-15T13:13:56Z,2013-03-16T20:16:35Z,,,,"Hello,  
I've encountered that when attempting to report a user as spam there is an error ""the page doesn't exist"". So this tiny pull request hopefully resolves this.
"
269,add_list_member() broken,2013-03-11T16:39:22Z,2013-08-20T04:38:22Z,,TweepError,"TweepError: [{u'message': u'You must specify either a list ID or a slug and owner', u'code': 112}]","Hi, I tried to use the add_list_member() api function with no luck till now.
I tried with add_list_member(id_of_list,id_of_user), with add_list_member(owner_name,slug,id_of_user).

Get the error:
TweepError: [{u'message': u'You must specify either a list ID or a slug and owner', u'code': 112}]
regards,
dummys
"
268,Make asynchronous streaming threads daemons,2013-03-10T19:35:02Z,2013-03-16T20:31:15Z,,,,"I made streaming threads daemons when async is set to True.
See issue https://github.com/tweepy/tweepy/issues/70
"
267,"To tests or not to tests, that is",2013-03-10T08:54:40Z,2013-05-19T02:46:13Z,,,,"eeer, am I missing something here?????

tweepy-2.0 $ ls
ASCII_LOGO.txt  CHANGELOG.md  CONTRIBUTORS  docs  examples  INSTALL  LICENSE  README.md  setup.py  tests.py  tweepy

tweepy-2.0 $ PYTHONPATH=. python -m tests
EEEEEEEE^X^Z
[28]+  Stopped                 PYTHONPATH=. python -m tests

at which point I again cntrl Z'd

It fails abs everything!!!!!
"
266,Update with media,2013-03-10T05:31:06Z,2013-12-22T03:51:07Z,,,,"Rudimentary support for statuses/update_with_media.

Taken largely from laiso's old fork, which worked with version 1 of the API only.
"
265,added multiple list members operation api methods,2013-03-09T13:14:44Z,2014-03-07T05:05:38Z,,,,"I added a method for end-point of the following two.
- POST lists/members/create_all
- POST lists/members/destroy_all
"
264,Cursor using too many calls,2013-03-07T15:06:52Z,2014-04-13T19:42:40Z,,,,"When using a cursor, specifically with search, it seems to use 2 API calls to fetch just one page of results. 

I'm trying to get my head around exactly how the code works but from what I can see when the ItemIterator reaches the last item it calls:

```
PageIterator.next()
```

which fetches the next page and if there are no results in that page it raises

```
raise StopIteration
```

It might be wise to change this such that if the current number of items on the page is less than the count parameter passed it raises

```
raise StopIteration
```

If someone can confirm this i'm happy to work on it
"
263,Save raw payload to model,2013-03-04T10:01:48Z,2014-01-05T22:14:46Z,,,,"Sometimes I need to save the raw JSON for a tweet.

I know that I could use `RawParser`, but that doesn't quite help when I still want to work with the parsed python object and still save the original raw JSON to the database. 
"
262,Any call to lists_all() returns error 88,2013-03-03T14:22:00Z,2013-03-04T00:42:02Z,,,,"Hello,
For some reason, any call to lists_all() returns error 88 (rate limit exceeded). Everything besides that is working properly (tweets are being updated, list timelines also).
What could that be?
Thanks!
"
261,Error with status_code: 401,2013-03-03T05:14:54Z,2014-04-13T20:06:58Z,,,,"Hi, Im getting the error when trying:

``` python
stream = tweepy.Stream(auth,CustomStreamListener(),timeout=60)
stream.sample()
```

I have already checked ""auth"" with:

``` python
api = tweepy.API(auth)
api.get_user(id='some_screen_name')
```

And everything is fine... 
My question: There are any changes in tweepy.Stream (in the v2 release) so this error could have been produced?
Thanks in advance.
"
260,Error with status_code 401,2013-03-03T02:01:01Z,2013-03-03T02:21:56Z,,,,"Hi, Im getting this error when trying

stream = tweepy.Stream(auth,CustomStreamListener(),timeout=60)
stream.sample()

I haven already checked if auth is well formed trying:

api = tweepy.API(auth)
api.get_user(id='some_screen_name')

And everything is fine... 
My question: There are any changes in tweepy.Stream (in the v2 release) so this error has been produced?
"
259,Closer to v1.1 docs,2013-02-26T00:45:24Z,2014-02-21T00:01:54Z,,,,"I updated some of the methods I use to match the newer v1.1 documentation.  I also added a script that will pull a copy of the twitter docs and compare the params listed there to those in api.py (it pulls down about 2.5M of HTML, and saves it in a pickle).
"
258,AttributeError: 'API' object has no attribute 'mentions',2013-02-25T02:59:56Z,2014-04-13T19:38:41Z,,,,"Hi:

I upgraded tweepy to their 2.0 version (pip install --upgrade tweepy) and now I get this error.

Regards
"
257,AttributeError: 'API' object has no attribute 'friends',2013-02-21T00:09:07Z,2013-08-20T02:36:58Z,,AttributeError,AttributeError: 'User' object has no attribute 'friends_ids',"Hi,
Im getting this error:
   AttributeError: 'API' object has no attribute 'friends'
when calling: 
   user.friends()
I have checked the module ""api.py"" and theres only a method named friends_ids (which is more suitable for my proposes of course), but in: user.friends_ids(), Im getting:
AttributeError: 'User' object has no attribute 'friends_ids'
And this is also missing in ""model.py"". Im not familiar with the architecture of the library (Im specially lost with tweepy.binder.bind_api function) but probably this is an error that need to be pointed out.
Anyway, hope this helps. 
Bye 
"
256,Initial implementation for issue #254: add rate limit info to API object.,2013-02-16T18:26:21Z,2014-02-20T23:59:54Z,,,,"Here's my initial implementation.  _Includes basic unit tests._

It exposes two new properties on the `tweepy.api.API` object:
- `last_headers`: A dict containing the last response headers received.
- `api_limits`: A `tweepy.api.RateLimitInfo` object.

The `tweepy.api.RateLimitInfo` object exposes the following fields and methods:
- `reset` - the int value of the `x-rate-limit-reset` header value
- `limit` - the int value of the `x-rate-limit-limit` header value
- `remaining` - the int value of the `x-rate-limit-remaining` header value
- `seconds_till_reset(current_time=None)` - the number of seconds remaining until the next API limit reset, using the current time (`time.time()`) if `current_time` == `None`, or, based on the timestamp passed as the value of `current_time`.

Note: The default values for `RateLimitInfo` `reset`, `limit`, and `remaining` are set to 0 (zero) if any of the expected header values are not present. 

See: [REST API Rate Limiting in v1.1](https://dev.twitter.com/docs/rate-limiting/1.1)
"
255,cursor.PageIterator.next issues unnecessary API call after last page was retrieved,2013-02-16T15:56:49Z,2014-04-13T19:46:01Z,,,,"`self.method` is called before testing page limits -- so if the cursor is past the last page, it issues an unnecessary Twitter API call.

https://github.com/tweepy/tweepy/blob/master/tweepy/cursor.py#L85

This may be irrelevant, as I'm not sure `PageIterator` is used in the new V1.1 API...  But I'm filing this as an FYI.
"
254,ENH: Add support for rate limit variables on API object,2013-02-14T20:15:22Z,2014-08-09T18:17:55Z,,,,"Twitter API requests include rate limit info in the response headers, including 

```
x-rate-limit-remaining
x-rate-limit-limit
x-rate-limit-reset
```

While we can access them via `api.last_response.getheaders()` it would be convenient if these were available directly as properties on the API object.
"
253,Travis CI builds failing due to invalid API tokens,2013-02-14T15:44:13Z,2013-05-19T02:46:57Z,,,,"According to [this log](https://travis-ci.org/tweepy/tweepy), the Travis CI builds are failing due to an invalid or expired Twitter API token.
"
252,Basic Model __repr__ implementation (issue #251),2013-02-14T15:27:26Z,2014-02-20T23:59:12Z,,,,"This is a very basic `Model.__repr__` implementation as discussed in issue #251.
"
251,Add basic __repr__ to Model class,2013-02-14T15:24:39Z,2014-04-13T13:10:46Z,,,,"I'd like to add a basic `__repr__` implementation to the Model class, in order to simplify diagnostics and debugging.

Here's a very basic one. 

``` python
    def model__repr__(self):
        state = ['%s=%s' % (k, repr(v)) for (k,v) in vars(self).items()]
        return '%s(%s)' % (self.__class__.__name__, ', '.join(state))
```

and here's an example repr for a single `SearchResult` instance:

```
SearchResult(_api=None, to_user_name=None, iso_language_code='in', text='Ada yg punya info lomba b.inggris atau beasiswa gaa tweepy?? :)', profile_image_url_https='https://si0.twimg.com/profile_images/3252635785/2e530b222dfbcca844c3ac9a8c30cdc5_normal.jpeg', created_at=datetime.datetime(2013, 2, 14, 15, 12, 9), metadata={'result_type': 'recent'}, profile_image_url='http://a0.twimg.com/profile_images/3252635785/2e530b222dfbcca844c3ac9a8c30cdc5_normal.jpeg', to_user_id_str='0', to_user=None, source=u'TweetCaster for Android', from_user_name=u'\u265a WiLda FahmuL Ulya ', from_user='wildaulyaa', id=302072747503267840, from_user_id=161690681, to_user_id=0, geo=None, from_user_id_str='161690681', id_str='302072747503267840')
```

The downside to this simplistic implementation is that it can result in long representations for list results or other large structures.  

A more sophisticated implementation could truncate long strings or limit , or, we could simply override `__repr__` in `Model` subclasses were appropriate.

I've created an [`add-model-repr`](https://github.com/inactivist/tweepy/tree/add-model-repr) branch in my Tweepy fork so I can explore some options here.
"
250,Changed all Tabs to Spaces,2013-02-14T09:19:46Z,2013-05-15T04:03:53Z,,,,"Changed all mixture of tabs and spaces to  spaces for sake of PEP8 and to reduce conflict.

P.S. Diff won't show correctly here on GitHub.
"
249,Added endpoints for followers/list.json and friends/friends.json.,2013-02-14T07:33:52Z,2013-02-22T03:17:04Z,,,,"These were recently removed in commit https://github.com/tweepy/tweepy/commit/edb63d2b506d3139c40eb9f07d3eed238d9eec03 but they're still valid so I simply added them back.
"
248,Update search to use V1.1 API methods and results,2013-02-14T04:25:58Z,2013-06-11T03:35:50Z,,,,"Initial changes required to make `search` work with the Twitter V1 API.   Please refer to the Twitter [1.1 API search/tweets](https://dev.twitter.com/docs/api/1.1/get/search/tweets) documentation and [errata](https://dev.twitter.com/issues/513) for implementation details.

Please review and comment.  This works in my limited testing, but I cannot run the full test suite in my environment. 
- search() fix path (URL) to use 1.1 API url
- search() allowed_param changes: rpp -> count, adding include_entities; 
  allowed_param entries now in alphabetical order.
- search_api flag no longer needed or used.
- SearchResults class: Pull list results from ['statuses'], use
  parse_datetime() rather than parse_search_datetime() since the date
  format is now standardized.
- utils.parse_search_datetime() no longer used and has been deleted.
### Cursor support

`search` does not support reverse Cursor pagination at this time.  
### Breaking changes
- The parsed `SearchResult` structures have changed due to changes in the underlying API. `models.SearchResult` is now a subclass of `models.Status` -- the results list is now parsed as a list of `models.Status` objects, and the search _metadata_ is contained in the `search_metadata` attribute of `API.search()`'s returned value.  
"
247,search uses deprecated version 1 API in Tweepy 2.0,2013-02-14T02:10:49Z,2013-06-11T03:37:49Z,,,,"(This may be a duplicate of #225 but I'll add it anyway for tracking purposes since issue #225 has an ambiguous title.)

I notice that the search() method accesses the deprecated version 1 API (which, I assume, may be discontinued in the near future) and also uses the 'rpp' parameter rather than 'count' which is correct for Twitter's 1.1 API.

It appears that the correct OAuth headers are passed in the current code.

If I am correct, this means that the search() method will stop working when the version 1 APIs are no longer supported.
"
246,Sending Direct Message to Verified Account,2013-02-14T01:14:08Z,2014-06-18T16:54:12Z,,,,"It is my understanding that certain verified accounts allow you to send DM's even when they are not following you.  

I am unable to send a tweepy direct message to a verified account.  I can send a DM to a particular verified account via the twitter website.  However, using the send_direct_message call to this same account results in a ""tweepy.error.TweepError: You cannot send messages to users who are not following you.""

Is this a bug?
"
245,OEmbed Support,2013-02-13T17:47:45Z,2013-02-13T20:55:18Z,,,,"Support for
https://dev.twitter.com/docs/api/1.1/get/statuses/oembed

Payload is json. Simple test included.
"
244,Fixed broken User.lists() API call,2013-02-11T16:45:16Z,2013-12-22T04:00:26Z,,,,"API method `lists()` was replaced by `lists_all()`.
"
243,Streaming API entities error on media,2013-02-11T07:52:04Z,2013-12-22T20:31:35Z,,KeyError,KeyError: 'media',"I have ran into a problem using the streaming api to retrieve entities from tweets: 

def on_status(self, status):
        # Prints the text of the tweet
    data_string = status.entities['urls']
    print data_string

works just fine, as does 'hashtags' and 'user_mentions', however
using 'media' resluts in this error

data_string = status.entities['media']
KeyError: 'media'

Am I encountering normal behavior?
"
242,Streaming.py crash Incomplete Read,2013-02-06T15:14:30Z,2014-04-13T13:13:16Z,,,,"I've been using tweepy streaming to collect tweets for nearly one month, and this is the second time I received this error. Does anyone know why I am getting this error? Actually, I saw this issue before(streaming.py crash), but it's closed. I am wandering why do I still get this error? 
Thank you for your help!

Traceback (most recent call last):
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py"", line 552, in __bootstrap_inner
    self.run()
  File ""twitterstreamtomongodb.py"", line 255, in run
    self.stream.filter(track=[self.searchterm])
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 229, in filter
    self._start(async)
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 172, in _start
    self._run()
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 117, in _run
    self._read_loop(resp)
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 165, in _read_loop
    self.on_closed(resp)
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 177, in on_closed
    self._start(async)
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 172, in _start
    self._run()
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 117, in _run
    self._read_loop(resp)
  File ""/Library/Python/2.7/site-packages/tweepy/streaming.py"", line 150, in _read_loop
    c = resp.read(1)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py"", line 541, in read
    return self._read_chunked(amt)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py"", line 586, in _read_chunked
    raise IncompleteRead(''.join(value))
IncompleteRead: IncompleteRead(0 bytes read)
"
241,No attribute 'sock',2013-01-24T08:51:26Z,2013-08-20T04:37:53Z,,AttributeError,AttributeError: HTTPSConnection instance has no attribute 'sock',"Why am i getting this error? and here is how i call the streaming API. Question posted on stackoverflow. 
http://stackoverflow.com/questions/14495868/no-attribute-sock

```
import tweepy
import sys

creds = json.loads(open('credential.json').read())
tw_consumer_key = creds['tw_consumer_key']
tw_consumer_secret = creds['tw_consumer_secret']
tw_access_token = creds['tw_access_token']
tw_access_token_secret = creds['tw_access_token_secret']

try:
    auth = tweepy.OAuthHandler(tw_consumer_key, tw_consumer_secret)
    auth.set_access_token(tw_access_token, tw_access_token_secret)
    api = tweepy.API(auth)
except Exception:
    service = None
    api = None    

# Query terms
Q = ""Better""

class CustomStreamListener(tweepy.StreamListener):
    def on_status(self, status):
        try:
            print ""%s\n%s\n%s\n%s\n\n"" % (status.text, 
                                      status.author.screen_name, 
                                      status.created_at, 
                                      status.source,)
        except Exception, e:
            print >> sys.stderr, 'Encountered Exception:', e
            pass

    def on_error(self, status_code):
        print >> sys.stderr, 'Encountered error with status code:', status_code
        return True # Don't kill the stream

    def on_timeout(self):
        print >> sys.stderr, 'Timeout...'
        return True # Don't kill the stream



class LiveStream(webapp2.RequestHandler):
    def get(self):
        streaming_api = tweepy.streaming.Stream(auth, CustomStreamListener(), timeout=60)
        self.response.out.write(streaming_api.filter(track=Q))
```

probably the last line, i'm not sure how to apply the query term to get specific filtered streaming tweets. please guide. 
and below are the stack of last call:

```
Traceback (most recent call last):
  File ""/python27_runtime/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py"", line 1535, in __call__
    rv = self.handle_exception(request, response, e)
  File ""/python27_runtime/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py"", line 1529, in __call__
    rv = self.router.dispatch(request, response)
  File ""/python27_runtime/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py"", line 1278, in default_dispatcher
    return route.handler_adapter(request, response)
  File ""/python27_runtime/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py"", line 1102, in __call__
    return handler.dispatch()
  File ""/python27_runtime/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py"", line 572, in dispatch
    return self.handle_exception(e, self.app.debug)
  File ""/python27_runtime/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py"", line 570, in dispatch
    return method(*args, **kwargs)
  File ""/base/data/home/apps/s~plab/1.364806910956892319/livestream.py"", line 48, in get
    self.response.out.write(streaming_api.filter(track=Q))
  File ""/base/data/home/apps/s~plab/1.364806910956892319/tweepy/streaming.py"", line 193, in firehose
    self._start(async)
  File ""/base/data/home/apps/s~plab/1.364806910956892319/tweepy/streaming.py"", line 172, in _start
    self._run()
  File ""/base/data/home/apps/s~plab/1.364806910956892319/tweepy/streaming.py"", line 107, in _run
    conn.sock.settimeout(self.timeout)
AttributeError: HTTPSConnection instance has no attribute 'sock'
```
"
240,"Tweet Activity Summary Support (# favouriters, RTs & replies)",2013-01-23T07:21:07Z,2014-01-05T22:04:16Z,,,,"Hi Josh,

Added support for the unofficial tweet activity summary (# favouriters, RTs & replies) as used by popular twitter clients (official, tweetbot, ...) in an TweetActivity object. (API call: https://api.twitter.com/i/statuses/[tweet.id]/activity/summary.json).
"
239,Streaming client to use same timeout/retry semantics for https as for http,2013-01-21T05:10:19Z,2013-12-22T18:59:29Z,,,,"Currently retries after timeouts do not work for https. Timeouts when using https emanate from the ssl module, are of type ssl.SSLError and contain a certain message.

Obviously it'd be preferable to have been able to distinguish the timeout exceptions by their type alone, but alas.

The way I attempt to ensure compatibility with python 2.5 (which doesn't necessarily have ssl) is slightly unorthodox, but my assumption is that people won't be using https without the ssl module being available; a safe assumption, it seems to me. 
"
238,Tweepy streamlistener doesn't return anything,2013-01-17T18:53:31Z,2013-01-17T20:25:12Z,,,,"I want to make my script print a tweet of my user timeline when it's published.
I use streamlistener, but it doesn't work. The python script just stops and doesn't return anything.

This is my code:

```
import tweepy
auth1 = tweepy.auth.OAuthHandler('***','***')
auth1.set_access_token('***','***')
api = tweepy.API(auth1)

class StreamListener(tweepy.StreamListener):
    def on_status(self, status):
        try:
            print textwrap.fill(status.text, width=60, initial_indent='    ', subsequent_indent='    ')
            print '\n %s  %s  via %s\n' % (status.author.screen_name, status.created_at, status.source)
        except Exception, e:
            # Catch any unicode errors while printing to console
            # and just ignore them to avoid breaking application.
            pass

l = StreamListener()
streamer = tweepy.Stream(auth=auth1, listener=l, timeout=3000000000 )
setTerms = ['hello', 'twitter', 'new', 'Lance', 'Armstrong', 'Apple', 'interview', 'goodbye', 'goodnight', 'good morning']
streamer.filter(None,setTerms)
```

How can I fix this?
Thanks in advance
"
237,Retry logic doesn't always work,2013-01-17T18:44:25Z,,,,,"The retry logic does not always work, because the try/except block does not catch all possible errors (sometimes resp.read() can throw IncompleteRead errors, in which case the request is **not** retried).
"
236,Tweet Attributes not found on search,2013-01-17T17:50:54Z,2013-02-09T15:50:56Z,,AttributeError,AttributeError: 'SearchResult' object has no attribute 'entities',"Lately I have been getting this error for some tweets on twitter search and I have set include_entities = 1.

```
AttributeError: 'SearchResult' object has no attribute 'entities'
```
"
235,Add /help/configuration endpoint,2013-01-17T08:13:47Z,2013-12-27T18:23:37Z,,,,"Pretty self explanatory and straight forward.
https://dev.twitter.com/docs/api/1.1/get/help/configuration
"
234,Doesn't return geo coordinates,2013-01-13T17:43:49Z,2014-04-13T13:13:21Z,,,,"Tweet (https://twitter.com/Rukomoynikov/status/290512546069352448) contain geo, but tweepy return [0,0]. What i do wrong?
"
233,gzip encoding support for streaming API?,2013-01-10T19:33:37Z,2013-08-20T04:36:59Z,,,,"I see some open and closed pull requests for streaming API gzip support. 

I'd like to see this (or some other support for gzip encoding) in a released Tweepy version.  :+1: 

Is there something preventing us from having this feature in Tweepy?   How can I help?

Or is it there now and I missed something...?
"
232,Add support for proxy,2013-01-07T14:35:44Z,2014-03-07T05:05:09Z,,,,"Signed-off-by: Seif Lotfy sfl@nexttuesday.de
"
231,user methods on packages.python.org missing text,2012-12-22T06:34:36Z,2014-08-09T18:18:05Z,,,,"Not sure if this is the right place to point this out, but I wasn't able to find a better alternative..

On http://packages.python.org, the documentation in the [User methods section](http://packages.python.org/tweepy/html/api.html#user-methods) section is missing a chunk of text, including the entire API.lookup_users() section and the heading for API.followers()
"
230,Added suggested users api methods,2012-12-20T21:20:31Z,2012-12-25T15:51:52Z,,,,"Added suggested users api methods
"
229,"When configuring for HTTPS, the requests to endpoint for verifying credentials are sent via HTTP",2012-12-19T23:52:12Z,2014-04-13T13:10:37Z,,,,"See [this issue](https://github.com/alejandrogomez/turses/pull/124) for reference. @joedicastro submitted it so he may be interested on this as well.

When using the `secure=True` parameter when creating the OAuth handler and the API instance calling `api.verify_credentials` will issue the following request:

``` sh
urlsnarf: listening on eth0 [tcp port 80 or port 8080 or port 3128]
itaca - - [10/Dec/2012:00:04:32 +0100] ""GET http://api.twitter.com/1/account/verify_credentials.json HTTP/1.1"" - - ""-"" ""-""
```

It uses HTTP instead of HTTPS as it should.
"
228,Added suggested users api methods,2012-12-19T23:34:44Z,2012-12-20T09:30:50Z,,,,"Added suggested users api methods
"
227,Image Post Not working on endpoint 1.1,2012-12-19T20:13:43Z,2013-12-22T13:40:50Z,,,,"Hi I update the api endpoint to 1.1 as for Twitter doc

https://dev.twitter.com/docs/api/1.1/post/account/update_profile_image

Unfortunately this method fails

```
"""""" account/update_profile_background_image """"""
def update_profile_background_image(self, filename, *args, **kargs):
    headers, post_data = API._pack_image(filename, 800)
    bind_api(
        path = '/account/update_profile_background_image.json',
        method = 'POST',
        payload_type = 'user',
        allowed_param = ['tile'],
        require_auth = True
    )(self, post_data=post_data, headers=headers)
```

The requested body should be

""image=...""

It seems that this methods does not act in this way
"
226,"Messages in streaming api must be split by '\r\n', not '\n'",2012-12-16T19:15:58Z,2013-12-22T17:51:23Z,,,,"We seem to be splitting messages in streams on '\n' when the stream is actually using the delimiter '\r\n'.

https://dev.twitter.com/docs/streaming-apis/processing#Parsing_responses

As a consequence, StreamListener.on_data() gets data with an extra '\r'. This is part of the delimiter and should not be part of the data.

I presume the code responsible for this is:

https://github.com/tweepy/tweepy/blob/master/tweepy/streaming.py#L141

Another issue, #208, is a subsidiary consequence of this.
"
225,Search api calls outdated,2012-12-15T03:51:46Z,2013-06-11T03:37:26Z,,,,"Hi i noticed that the search api calls are outdated. I have modified the code which works correctly for me. I want to submit it to the repo so that everyone can use it. If you want, you can do a code review for the code i have written
"
224,time.strptime() is not thread safe,2012-12-05T16:01:21Z,2013-08-20T04:36:35Z,,,,"I'm using tweepy in a threaded environment and i occasionally get errors. The issue is that time.strptime() is not thread safe: http://bugs.python.org/issue7980 .
"
223,tweepy-1.12 pypi package is a git snapshot,2012-11-30T21:31:49Z,2012-12-03T19:25:56Z,,,,"Hi,

please upload a properly generated tarball on pypi.
The current package is the snapshot from github and this is not a proper release material.
Amongst other packaging problem, it is missing egg.info.

Thanks for considering.
"
222,Update README.md,2012-11-27T14:56:24Z,2012-12-13T02:12:48Z,,,,"Just a clear pointer to the more complete docs.
"
221,Added a simple MongoDB cache backend.,2012-11-15T04:08:52Z,2012-11-15T07:07:28Z,,,,"Seems to be working fine in my setup.
"
220,Place model support and geo API mods to support Places,2012-11-13T07:20:57Z,2012-11-18T03:51:33Z,,,,"For review. 

I've included updated unit tests for the geo location functions.  I don't have a unit test for the Status.place mods but it works as expected when used with my [twitter-streamer](https://github.com/inactivist/twitter-streamer) utility.  I will create a unit test for the Status mods soon.
"
219,dictionary update sequence element #0 has length 4; 2 is required,2012-11-13T00:09:23Z,2012-11-13T00:35:33Z,,,,"Using current master of tweepy on github.

Detailed logs:

Any idea?
"
218,Add stall_warnings parameter support to streaming endpoint,2012-11-08T18:13:06Z,2012-11-24T03:07:16Z,,,,"This adds the `stall_warnings` parameter to the `Stream.filter` method.  
"
217,Fix for issue #193: Call Exception.__init__ in TweepError constructor,2012-11-08T17:49:03Z,2012-11-14T21:04:30Z,,,,"This fixes issue #193 in my testing over the last month or so.
"
216,for POST requests force Content-Length header ,2012-11-01T10:08:40Z,2012-11-06T04:31:38Z,,,,"for POST requests force Content-Length header 
without this patch I failed to make status_update
"
215,411 error from Twitter,2012-10-27T04:44:38Z,2012-11-06T04:29:26Z,,tweepy.error.TweepError,tweepy.error.TweepError: Twitter error response: status code = 411,"I've been posting to Twitter (just using update_status). A few weeks ago it stopped working. I get the following error:

File ""../lib/python/tweepy-1.7.1-py2.6.egg/tweepy/binder.py"", line 184, in _call
  File ""../lib/python/tweepy-1.7.1-py2.6.egg/tweepy/binder.py"", line 167, in execute
tweepy.error.TweepError: Twitter error response: status code = 411

Twitter seems to be returning the HTTP error code for missing content length. Is anyone else having this problem?

Edit:
I added a content length specification and that fixed my problem.
Change to binder.py from the tweepy-1.7.1-py2.6.egg:
144a145,151

> ```
>                 if self.method == ""POST"":
>                     if self.post_data:
>                         self.headers[""Content-Length""] = len(self.post_data)
>                     else:
>                         self.headers[""Content-Length""] = ""0""
> ```

Hope that helps. 
"
214,Set Content-Length to zero if Post data is empty,2012-10-27T02:25:39Z,2012-11-06T04:31:00Z,,,,"This works around http://bugs.python.org/issue14721
"
213,Missing link in OAuth documentation,2012-10-22T07:28:05Z,2014-08-11T18:52:15Z,,,,"http://packages.python.org/tweepy/html/auth_tutorial.html#oauth-authentication says

> Tweepy tries to make OAuth as painless as possible for you. To begin the process we need to register our client application with Twitter. You can do that here. Create a new application and once you are done you should have your consumer token and secret. Keep these two handy, you’ll need them.

It seems as if the intention was for the word ""here"" to be a hyperlink to some page on Twitter that lets you register applications.  That is, however, not the case.
"
212,Forward-slash support in tweepy.utils.urlencode_noplus(),2012-10-15T00:59:28Z,2013-07-15T17:53:52Z,,,,"I was having an issue where I would get a 401 error when I switched to the filter streaming API using the track parameter to look for keywords.

Turns out that the issue I was having is that one of my keywords contained the `/` forward-slash character, and by default `urllib.quote()` will NOT escape a forward-slash.

To fix this I'd suggest changing line 101 of tweepy.utils as described below in order to have urllib.quote escape all characters instead of not escaping certain ""safe"" characters:
Link to line 101: https://github.com/tweepy/tweepy/blob/master/tweepy/utils.py#L101

FROM:
`return '&'.join(['%s=%s' % (quote(str(k)), quote(str(v))) \`
TO:
`return '&'.join(['%s=%s' % (quote(str(k), ''), quote(str(v), '')) \`

For more details see:
http://stackoverflow.com/questions/1695183/how-to-percent-encode-url-parameters-in-python

P.S.
Sorry I didn't initiate this as a pull request by forking and fixing it myself. I haven't had a chance to test the change (instead I removed the keywords I was wanting to track that had a forward-slash).
"
211,Remove deprecated endpoint: account/update_delivery_device,2012-10-07T13:42:14Z,2013-12-21T01:31:45Z,,TweepError,"TweepError: [{u'message': u'This endpoint is deprecated and should no longer be used', u'code': 68}]","Relevant output from the tests:

``` python
======================================================================
ERROR: testsetdeliverydevice (__main__.TweepyAPITests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""tests.py"", line 153, in test_set_delivery_device
    self.api.set_delivery_device('im')
  File ""/home/dialelo/repos/tweepy/tweepy/binder.py"", line 185, in _call
    return method.execute()
  File ""/home/dialelo/repos/tweepy/tweepy/binder.py"", line 168, in execute
    raise TweepError(error_msg, resp)
TweepError: [{u'message': u'This endpoint is deprecated and should no longer be used', u'code': 68}]

```
"
210,Bad link on examples page,2012-10-02T13:34:20Z,2014-04-19T13:22:32Z,,,,"on http://tweepy.github.com/examples.html, the ""OAuth 1.0 Authentication"" link points to the basic auth example.
"
209,Tweepy exception hierarchy,2012-09-09T15:28:44Z,2014-04-13T12:56:35Z,,,,"Tweepy uses `TweepError` for all errors—whether they be network errors, authentication errors, or any other flavour.

This makes handling the different underlying reasons difficult—I don't know if the error was because Twitter is down, or because the user revoked my app.

I'd love it if Tweepy had an exception hierarchy—overloading Python's own. `TweepError` would still be the base class—maintaining backwards compatibility—but we'd also have other well-defined exception types. `TweepNetworkError`, inheriting from both `TweepError` and `IOError`, for example.
#16 (from three years ago, wow) touches on this issue—and to fix it, you added the HTTP response to the exception. However, that isn't available everywhere, nor is it always possible—[OAuthHandler. get_username](https://github.com/tweepy/tweepy/blob/master/tweepy/auth.py#L161) throws a `TweepError` without the HTTP response, for example. #58 is similar as well.

Let me know what you think. I don't mind adding the code myself, and I'm sure it'd be a welcome change. It'd make buiding robust apps on top of Tweepy easier—and make making them more user friendly easier as well.

Keep up the awesome work!
"
208,Stream._data() assumes delimited messages never span multiple lines of text in incoming stream,2012-09-07T22:05:07Z,2014-04-13T12:54:58Z,,,,"The `Stream._data` method splits on newline, calling `StreamListener.on_data` with single lines pulled from the incoming data stream.

While this works well most of the time, it appears that Twitter sends some messages as multi-line strings.   If a message packet arrives spanning multiple lines, StreamListener.on_data() will be called with a malformed (partial) JSON structure, making it impossible to parse the incoming message in the on_data() handler.

Background: Per issue #205, I enabled stall_warnings on the statuses/filter endpoint (Stream.filter), implemented my own StreamListener to dispatch messages, and when a stall warning message arrived, it was split into multiple lines.  I captured the data stream, here's what it looks like with the length delimiter prefix and newlines preserved (Note: I've omitted status (tweet) messages preceding the FALLING_BEHIND message for the sake of brevity.  The status messages were all single-line.)

```
258
{
  ""warning"":{
    ""code"":""FALLING_BEHIND"",
    ""message"":""Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 30% full. You will be disconnected when the queue is full."",
    ""percent_full"":30
  }
}
```

So the stall_warnings message described [here](https://dev.twitter.com/docs/streaming-apis/parameters#stall_warnings) (and perhaps other messages) can arrive spanning multiple lines of text.

I'm working on the 1.11 branch, I will work to resolve this issue and work up a pull request if you like.  

Edit: It appears this issue does not exist in the 2.0 branch (based on source diving.)
"
207,Stream(secure=False) not supported: Twitter streaming API no longer supports non-SSL connections,2012-09-07T16:19:46Z,2014-04-13T12:52:45Z,,,,"Per [this announcement](https://dev.twitter.com/blog/streaming-api-turning-ssl-only-september-29th) and [this discussion](https://dev.twitter.com/discussions/2745) SSL (HTTPS) is required for various endpoints.  

Trying to use `secure=False` in the `tweepy.Stream()` constructor , then calling a streaming method such as `.filter()` gives unexpected results (`.filter()` hung indefinitely in my test case.)
"
206,Twitter API 1.1 support,2012-09-05T21:43:14Z,2013-02-10T21:27:43Z,Improvement,,,"Let me be the first to propose tweepy upgrade to 1.1 of the API:

https://dev.twitter.com/docs/api/1.1/overview

It may be as simple as tweak the api_root to '1.1'.
"
205,Stream endpoint methods don't support stall_warnings parameter.,2012-09-05T19:22:20Z,2013-08-20T04:36:01Z,,,,"The Stream.filter() method doesn't support the [`stall_warnings`](https://dev.twitter.com/docs/streaming-apis/parameters#stall_warnings) streaming API parameter.

It appears that this is also the case for the other endpoints (sample, firehose, userstream.)
"
204,Remove hardcoded version numbers,2012-09-05T16:32:22Z,2012-11-09T07:03:58Z,,,,"The version number in the [docs](http://tweepy.readthedocs.org/en/latest/index.html) does not match the actual version number. Apart from that, the version number is also hardcoded in `setup.py`.

I think that having the version number in `tweepy/__init__.py` is enough; it can be imported from the places where the version number is needed.
"
203,Get retweets by user,2012-09-05T16:02:26Z,2012-11-08T04:51:26Z,,,,"Hi @joshthecoder, 

I've noticed that the API is lacking the GET method for fetching the [retweets by a given user](https://dev.twitter.com/docs/api/1/get/statuses/retweeted_by_user) so I've included it.
"
202,HTTP connection debug logging,2012-08-20T17:08:48Z,2012-08-20T22:56:01Z,,,,"I want to log HTTP requests issued by Tweepy.  Is there a simple way to do this (perhaps specifying logging levels on the httplib connection instance?)  (I did some source diving and didn't see anything obvious.)
"
201,on_timeout() not being calles when using HTTPS for streaming,2012-08-19T18:08:36Z,2013-12-22T13:33:33Z,,,,"When connecting to a Twitter Stream via HTTPS (which is the default), a socket timeout won't call the on_timeout() function of the stream listener but raise an ssl.SSLError instead. This is not a Tweepy specific bug though, as can be seen here: http://bugs.python.org/issue10272
I think the stream handler should handle SSLError exceptions like socket.timeout exceptions.
"
200,Improving stream data parsing,2012-08-19T10:18:07Z,2012-12-25T15:54:40Z,,,,"I changed the parsing mechanism for incoming stream data to support events and direct messages.
"
199,Python 3 Support,2012-08-19T09:32:56Z,2014-12-01T03:45:58Z,,,,
198,Implemented exponential back-off for streaming API,2012-08-17T04:53:27Z,2012-08-17T15:54:46Z,,,,"Small change made to implement exponential backoff upon HTTP error in twitter streaming interface. Begin at default 10 seconds, doubles at each error, maxes at 240 seconds. Upon successful HTTP reception, timeout resets to original value, default 10 seconds.
"
197,Seeking code example: using Tweepy & GET search API pagination?,2012-08-11T23:42:18Z,2012-08-20T22:59:20Z,,,,"Is there a code example (or documentation) showing proper use of Twitter's GET search API pagination in Tweepy?
"
196,List support is buggy,2012-08-09T12:43:51Z,2013-02-10T21:38:48Z,Improvement,,,"I'm working on a twitter client and noticed that Tweepy's methods for list handling (especially adding and removing members to / from a list) do not work and return an API error saying that the page doesn't exist.
I think someone should look into this and adapt the code to the current API methods for list handling.

Besides, sometimes when I get an API error, I get just the error description (as expected) but sometimes I get a dictionary with an error code and the error description.
"
195,support upload image from web,2012-08-07T17:37:42Z,2013-12-27T01:13:29Z,Improvement,,,"add patch to support upload image from web
"
194,"Use the cursor provided in kargs, if one is provided.",2012-08-07T11:33:17Z,2013-12-27T18:09:45Z,,,,"Right now, if a cursor is provided, it is not taken into account, and an error is raised
"
193,TweepError not pickleable; can cause celeryd to crash if uncaught in task,2012-08-06T02:01:30Z,2012-12-25T16:23:59Z,Bug,TypeError,"TypeError: ('__init__() takes at least 2 arguments (1 given)', <class 'tweepy.error.TweepError'>, ())","(Edit: was titled 'TweepError doesn't play well with Celery tasks')

If a Celery 3.0.5 periodic task raises a `TweepError` (as would be the case when performing a `search()` with an inoperative network connection or other network error, it causes a fatal error, terminating celeryd.  This appears to be due to the TweepError not being serializable (pickleable) - Celery requires exceptions to be pickleable, apparently (see below.)

A very simple example:

```
import celery
from celery.utils.log import get_task_logger
logger = get_task_logger(__name__)
import tweepy

API = tweepy.API()

@celery.task
def tweepy_search():
    results = API.search(q='crash')
    logger.debug(results)
```

When run under celerybeat as a periodic task, if the network connection is dead or other condition raises a `TweepError`, this is the result:

```
[2012-08-06 01:45:54,318: DEBUG/MainProcess] Task accepted: tweepy_error_test.tasks.tweepy_error_example.tweepy_search[d01e9909-0d1f-4e2d-969e-a0ff2baa685a] pid:25496
[2012-08-06 01:45:55,141: ERROR/MainProcess] Unrecoverable error: TypeError('__init__() takes at least 2 arguments (1 given)', <class 'tweepy.error.TweepError'>, ())
Traceback (most recent call last):
  File ""/home/inactivist/workspace/tweepy_error_test/local/lib/python2.7/site-packages/celery/worker/__init__.py"", line 353, in start
    component.start()
  File ""/home/inactivist/workspace/tweepy_error_test/local/lib/python2.7/site-packages/celery/worker/consumer.py"", line 369, in start
    self.consume_messages()
  File ""/home/inactivist/workspace/tweepy_error_test/local/lib/python2.7/site-packages/celery/worker/consumer.py"", line 450, in consume_messages
    readers[fileno](fileno, event)
  File ""/home/inactivist/workspace/tweepy_error_test/local/lib/python2.7/site-packages/billiard/pool.py"", line 650, in handle_event
    self._it.next()
  File ""/home/inactivist/workspace/tweepy_error_test/local/lib/python2.7/site-packages/billiard/pool.py"", line 623, in _process_result
    ready, task = poll(timeout)
  File ""/home/inactivist/workspace/tweepy_error_test/local/lib/python2.7/site-packages/billiard/pool.py"", line 1017, in _poll_result
    return True, self._quick_get()
TypeError: ('__init__() takes at least 2 arguments (1 given)', <class 'tweepy.error.TweepError'>, ())
[2012-08-06 01:45:55,143: DEBUG/MainProcess] Stopping celery.worker.consumer.Consumer...
[2012-08-06 01:45:55,143: DEBUG/MainProcess] Consumer: Stopping consumers...
[2012-08-06 01:45:55,143: DEBUG/MainProcess] Stopping celery.worker.mediator.Mediator...
[2012-08-06 01:45:55,316: DEBUG/MainProcess] Stopping celery.concurrency.processes.TaskPool...
[2012-08-06 01:46:02,325: DEBUG/MainProcess] Stopping celery.beat._Process...
[2012-08-06 01:46:02,325: INFO/MainProcess] Celerybeat: Shutting down...
[2012-08-06 01:46:02,325: DEBUG/MainProcess] Stopping celery.worker.hub.Hub...
[2012-08-06 01:46:02,325: DEBUG/MainProcess] Consumer: Closing consumer channel...
[2012-08-06 01:46:02,325: DEBUG/MainProcess] Consumer: Closing broadcast channel...
[2012-08-06 01:46:02,327: DEBUG/MainProcess] Consumer: Closing broker connection...
```

As a quick and dirty test, I modified error.py `TweepError.__init__()` to call `Exception.__init__()`:

```
class TweepError(Exception):
    """"""Tweepy exception""""""

    def __init__(self, reason, response=None):
        self.reason = unicode(reason)
        self.response = response
        Exception.__init__(self, reason)  # <-- added

    def __str__(self):
        return self.reason

```

Which seems to fix the problem in celeryd (it no longer crashes the celerybeat daemon.)  

I haven't tested to see if this is also a problem when not running as a periodic task, but I expect that it would be, since Celery is trying to serialize the exception thrown by a task.

Is it reasonable to expect `TweepError` to be pickleable and thus compatible with Celery, or should I find another method to work around this problem?  (I could catch `TweepError` everywhere and wrap it in a custom exception, but that seems rather error prone.)

Background: [Celery docs](http://celery.readthedocs.org/en/latest/userguide/tasks.html) (Ref 'Creating pickleable exceptions')

> Tasks that raise exceptions that are not pickleable will not work properly when Pickle is used as the serializer.
> 
> To make sure that your exceptions are pickleable the exception MUST provide the original arguments it was instantiated with in its .args attribute. The simplest way to ensure this is to have the exception call Exception.**init**.

Version: Tweepy 1.10
Python: 2.7.1
"
192,error starting tweepyshell: AttributeError: 'module' object has no attribute 'Shell',2012-08-04T00:06:40Z,2012-08-19T09:22:21Z,,AttributeError,AttributeError: 'module' object has no attribute 'Shell',"Trying to start tweepyshell:

```
inactivist@inactivist-virtualbox:~/src/tweepy/tools$ ./tweepyshell
Traceback (most recent call last):
  File ""./tweepyshell"", line 38, in <module>
    ipshell = IPython.Shell.IPShell([''], user_ns = local_ns)
AttributeError: 'module' object has no attribute 'Shell'
```
### Version info:

Tweepy 1.10 (cloned from github and installed via `sudo python setup.py develop`)
Python 2.7.1+
Ubuntu Natty 11.04 32 bit.
ipython 0.13
"
191,show_friendship() raise TweepError,2012-07-29T07:30:49Z,2012-08-02T04:06:30Z,,tweepy.error.TweepError,"tweepy.error.TweepError: [{u'message': u'Sorry, that page does not exist', u'code': 34}]","I use this:

> > api.show_friendship('navalny','linoleum2k12')

And after it get me:

  File ""D:\develop\twitter_searcher\search_engine\engines.py"", line 263, in <module>
    print engine_.api.show_friendship('navalny','linoleum2k12')
  File ""D:\Python\lib\site-packages\tweepy\binder.py"", line 185, in _call
    return method.execute()
  File ""D:\Python\lib\site-packages\tweepy\binder.py"", line 168, in execute
    raise TweepError(error_msg, resp)
tweepy.error.TweepError: [{u'message': u'Sorry, that page does not exist', u'code': 34}]

But if I request this: 

> > https://api.twitter.com/1/friendships/show.json?source_screen_name=navalny&target_screen_name=linoleum2k12

i have some responce not equals ""Sorry, that page does not exist""
Maybe i do not know how to do it?
"
190,on_data() failing on direct message deletion,2012-07-21T09:24:00Z,2012-08-15T05:31:29Z,Bug,,,"In streaming.py, the on_data() function throws a KeyError when a direct message deletion notice arrives.

``` python
    def on_data(self, data):
        """"""Called when raw data is received from connection.

        Override this method if you wish to manually handle
        the stream data. Return False to stop stream and close connection.
        """"""

        if 'in_reply_to_status_id' in data:
            status = Status.parse(self.api, json.loads(data))
            if self.on_status(status) is False:
                return False
        elif 'delete' in data:
            delete = json.loads(data)['delete']['status']
            if self.on_delete(delete['id'], delete['user_id']) is False:
                return False
        elif 'limit' in data:
            if self.on_limit(json.loads(data)['limit']['track']) is False:
                return False
```

The error happens in this line:

``` python
delete = json.loads(data)['delete']['status']
```
"
189,Remove deprecated statuses/public_timeline.,2012-07-17T05:22:02Z,2012-07-20T05:30:14Z,,,,"Signed-off-by: Vinson Lee vlee@twitter.com
"
188,"""count"" to be handled internally",2012-07-14T21:45:58Z,2012-12-25T16:30:37Z,Improvement,,,"Twitter's sample request doesn't accept ""count"", so any attempt to use this parameter resulted in a 401. This patch implements internal count. Every relevant loop takes care of counting statuses and breaks when the maximum is reached.
"
187,Trivially add support for retweeted_by_user,2012-07-06T18:47:25Z,2012-07-10T21:23:12Z,,,,"This API call: https://dev.twitter.com/docs/api/1/get/statuses/retweeted_by_user has the advantage that one does not need to be authenticated to retrieve retweets of a given user.  Support for this was added trivially by adding the necessary function.
"
186,streaming example,2012-07-06T00:27:44Z,2012-07-13T05:54:59Z,,,,"Just an example on how to get started with the streaming api library. 
"
185,Add missing parameters to `verify_credentials`,2012-07-05T19:38:27Z,2012-08-02T04:29:09Z,,,,"As described in the Twitter [API docs](https://dev.twitter.com/docs/api/1/get/account/verify_credentials), the `verify_credentials`
method accepts the optional `include_entities` and `skip_status`
parameters.

I've modified `tweepy.API.verify_credentials` for allowing these
parameters and expanded `tests.testverifycredentials` to test the
new functionality.

Last but not least, I've made explicit imports in `tests.py` and removed
some unused variables (linters FTW!).
"
184,cleaned output stream by removing with strip,2012-07-01T00:00:27Z,2012-07-09T06:02:30Z,,,,"While reading the delimited length in the stream output, there are more characters than expected, as 'new line' characters are added. Thus the delimited length never is a digit, the status is not processed and we are in an almost endless loop. Cleaning the string with a .strip() removes those characters and everything works as expected.
"
183,Reworked master to add python3 and python2 compatibility in the same package. Multiple additions and fixes.,2012-06-18T10:20:22Z,2012-07-09T05:58:42Z,,,,"Hello Josh and all other contributors .

I have re-factored the code to work across any python distribution upwards of 2.6 (mostly should work on python 2.5 too - Untested).
Apart from which i have pulled in some requests to this new code supporting both py3 and py2 .
Eg : Zlib, proxies, relationship, last tweet fix etc . 
(Appropriate commit messages indicating the fixes i have merged so far , Thanks to the contributors , I have added your names to the list of contributors if i pulled a fix/patch from your branch)

Please pull this so we could support many more and newer platforms. Ill merge in the from the other pull requests as i get time, or feel free to rework them to maintain Python 2 and 3 compatibility as required and send in any pull requests.

Cheers !
"
182,streaming.py filter not working on it's current status,2012-06-12T02:15:39Z,2012-07-09T05:54:42Z,,,,"Hey Josh and other contributors. A couple of bug fixes for streaming.py file, all other files in my pull request may be safely ignored since they are just helper and utility functions. 

streaming.py is missing a string strip() so isdigit() returns true on line 160

FROM:

```# read the next twitter status object
if delimited_string.isdigit(): # <--- This will never evaluate to true
    next_status_obj = resp.read( int(delimited_string) )
    self._data(next_status_obj)

``````

TO:

```# read the next twitter status object
if delimited_string.strip().isdigit():
    next_status_obj = resp.read( int(delimited_string) )
    self._data(next_status_obj)
``````

Furthermore in its current state the streaming.py filter function wont work with non-ascii parameters for follow or track parameters.

filter function, line 220

FROM:

```def filter(self, follow=None, track=None, async=False, locations=None, count = None):
  # [...] previous lines here 
  if follow:
            self.parameters['follow'] = ','.join(map(str, follow))
  if track:
            self.parameters['track'] = ','.join(map(str, track))

``````

TO:

```def filter(self, follow=None, track=None, async=False, locations=None, count = None, encoding='utf8'):
  #[...] previous lines here
  if follow:
            encoded_follow = [unicode(s).encode(encoding) for s in follow]
            self.parameters['follow'] = ','.join(encoded_follow)                        
  if track:
            encoded_track = [unicode(s).encode(encoding) for s in track]
            self.parameters['track'] = ','.join(encoded_track)            
``````
"
181,Added image upload binding (update_with_media api method),2012-06-10T15:53:54Z,2013-12-22T03:51:17Z,,,,"Splited _pack_image method (in api.py) into two parts:
- _pack_file reads file and compiles POST body and headers
- _pack_image runs logic related to user's avatars and background images, calls _pack_file inside

Updated bind_api method (in bind.py) to use 'upload.twitter.com' host when 'with_media' arg was passed

Added update_with_media binding, that uses _pack_file to build postdata and passes 'with_media' to bind_api to switch host
"
180,statues/update_with_media support,2012-06-09T23:31:40Z,2013-12-22T03:51:34Z,,,,"These two commits implement basic support for statues/update_with_media.

https://dev.twitter.com/docs/api/1/post/statuses/update_with_media

See short discussion on issue #119

Cheers!
"
179,Use OAuth for authentication in unit tests.,2012-06-08T06:41:27Z,2012-07-09T06:05:22Z,,,,"Basic Auth is no longer supported.

Signed-off-by: Vinson Lee vlee@twitter.com
"
178,Sample API Issue,2012-06-06T00:05:45Z,2012-06-06T01:15:45Z,,,,
177,remove trailing characters that prevent streaming from pulling statuses,2012-06-05T18:54:48Z,2013-05-12T17:31:13Z,,,,"Twitter Streaming calls don't seem to work because it is running is_digit() on an integer containing a trailing \r\n. Didn't use strip() because wanted to prevent an extra operation in the loop.

See (https://dev.twitter.com/docs/streaming-api/concepts#parsing-responses)
"
176,2nd-last Tweet Issue,2012-05-18T13:29:25Z,2012-07-09T06:13:15Z,,,,"With the streaming API, filter() only grabs the 2nd to last tweet, not the most recent one. This patch fixes this issue so that tweets come in real-time.

Copied from this Stack Overflow answer: http://stackoverflow.com/a/10368689/324978
"
175,Userstream not working,2012-05-08T15:45:50Z,2012-07-09T06:33:11Z,,,,"This pull request includes the fixes from https://github.com/tweepy/tweepy/pull/173 and https://github.com/tweepy/tweepy/issues/174 which address the broken userstream issue.
"
174,Userstream not working,2012-05-07T06:47:44Z,2012-07-09T06:37:01Z,,,,"The userstream() method does not return any data. To fix this, apply the ""Streaming"" fix that is described in a few other issues and additionally, change the userstream function in streaming.py to look like this:

``` python
    def userstream(self, count=None, async=False, secure=True):
        self.parameters = {'delimited': 'length'}
        if self.running:
            raise TweepError('Stream object already connected!')
        self.url = '/2/user.json?delimited=length'
        self.host='userstream.twitter.com'
        if count:
            self.url += '&count=%s' % count
        self._start(async)
```

(Note the added parameters for the length delimiter.) Now it works.
"
173,fixing streaming,2012-05-01T04:39:40Z,2012-07-09T06:35:52Z,,,,"Hi,

I have a couple of commits to fix streaming. I tracked down a bug in Stream._read_loop(). The problem was that ""delimited_string.isdigit()"" always returned False because Twitter sends ""\r\n"" at the end of line (which I believe is the http standard.) Anyhow, stripping the remaining ""\r"" off of delimited_string fixes it.

I also added a unit test for streaming (at least Stream.sample().) It's not a great (i.e. super-comprehensive) test, but it's good enough.

Cheers!
Eric
"
172,SSL Error,2012-04-30T10:31:25Z,2012-07-09T06:39:22Z,,,,"Hi, 
I'm running a fresh install of Python 2.7 on Ubuntu 12 (on EC2).  When connecting to the streaming API I get an SSL handshake error that I don't really know how to handle.. any thoughts?  The error is:

SSLError(1, '_ssl.c:504: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure')

S.
"
171,streaming read loop delimited string needs stripping to be digit,2012-04-28T15:29:13Z,2013-08-20T04:35:16Z,,,,"In the read loop of the streaming loop, the delimited string needs to be stripped to be considered a digit, otherwise no data is passed to the _data method. 

See commit here in fork: https://github.com/tepietrondi/tweepy/commit/578f0253acc4aaf01ea89b2f87c1dfc2656f35da#tweepy/streaming.py
"
170,no events are fired,2012-04-27T17:03:28Z,2012-04-30T08:36:03Z,,,,"Hi, I just upgraded from the 1.9 tweepy on pypi to the current version from github.  Our application overrides the on_data function of the stream listener in order to parallelise the stream processing.  This was working fine, although there was quite considerable drift in the stream (hence upgrading to the new faster loop).  After the upgrade however, the on_data event doesn't seem to fire (or get caught) as it was.  I'd changed no code at this point.  Is there an obvious change in the library that I've missed?

As a debug I've commented out our overridden on_data function, leaving the default there and the on_status function doesn't fire in this case either.

Any help greatly appreciated,

S.
"
169,Stream._read_loop delimited_string can contain extra '\n' which causes isdigit() to fail,2012-04-23T19:35:21Z,2012-07-09T06:37:34Z,Bug,,,"Using Python 2.7 on Windows 7 an extra '\n' character appending to delimited_string because loop logic appends the '\n' before checking if it's a '\n' character. 

Either need to change loop logic or add a call to strip() before isdigit() check:
# read the next twitter status object

if delimited_string.strip().isdigit():
     next_status_obj = resp.read( int(delimited_string) )
     self._data(next_status_obj)
"
168,Update to streaming read loop code,2012-04-17T01:58:49Z,2012-04-17T16:13:28Z,,,,"1) read newlines until a digit appears
2) read rest of digits until another new line appears
3) read next status object
4) repeat

-improved speed over trunk version
-simplify loop logic
-added condition for ""self.running and not resp.isclosed()"" during each read-loop stage
"
167,streaming api calls on_status once every 2 tweets,2012-04-14T22:09:25Z,2012-07-09T06:38:43Z,Bug,,,"I'm using tweepy 1.9 and I find that the on_status() gets called for every 2 tweets, instead of every tweet!

It didn't use to happen before (few months ago), so I'm suspecting a recent commit broke the code?

This is how I'm using it:

class StreamWatcher(tweepy.StreamListener):

  def on_status(self, status):
      try:
        print 'Received status: %s from %s' % (status.text, status.author.screen_name)
        self.process_status(status)
     except Exception as e:
        print 'Exception processing status: %s' % e
"
166,twitter-text support,2012-04-13T16:41:00Z,,Feature,,,"Implement text processing routines for ""tweets"" that is in compliance
with [twitter-text-conformance](https://github.com/twitter/twitter-text-conformance).
"
165,Updated faster read loop code,2012-04-12T04:09:16Z,2012-04-17T01:51:40Z,,,,"Steaming _read_loop() has been updated.

Previously, when the stream went silent, the most recent tweet would be stuck in the read buffer and would not fire an on_status() event call until the stream went active again.

Speed should be comparable to the current implementation and much faster than older implementation of reading one byte at a time.
"
164,fix project urls,2012-04-09T12:43:00Z,2012-04-16T19:55:30Z,,,,
163,Added max_id param to favorites API method,2012-04-07T13:29:18Z,2012-08-02T04:34:50Z,,,,
162,401 Unauthorized in OAuthHandler.get_authorization_url when OAuthHandler has a callback,2012-04-05T20:37:24Z,2014-08-11T18:53:01Z,,,,"I'm trying to implement sign in with Twitter for a site I'm building in Django. When I create an OAuthHandler with a callback, I get a 401 from the get_authorization_url. If I don't set a callback on OAuthHandler it works fine, but the login page on my site always takes me to Twitter and asks me to authorize the application.

Having already authorized the application and already being signed in to Twitter, I should be able to provide a callback for the OAuthHandler and then the user will be automatically redirected without having to re-authorize the app, right?

```
auth = tweepy.auth.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET, 'http://google.com')
print auth
print auth.get_authorization_url(True)
```
"
161,Adds in support for retrieving oembed data via tweepy.,2012-04-03T07:17:32Z,2013-05-06T20:11:29Z,,,,"Implements tweepy support for accessing oembed data, per https://dev.twitter.com/docs/api/1/get/statuses/oembed

I think I've made all required changes, but let me know if I've missed anything and I'll update.

Thanks!
"
160,Fix `memcache.get` duplicated `key` arg.,2012-04-02T22:14:02Z,2012-08-19T09:37:47Z,,,,"`self.client.get` has to many arguments `key`. Removed one.
"
159,argument 2 to map() must support iteration while fetching access_token,2012-03-30T14:38:33Z,2012-03-30T15:55:04Z,,,,"Getting the above error in the below line

auth.get_access_token(v)

full def :
def tw_return(request):
  v = request.GET.get('oauth_verifier')

  key = settings.TWITTER_KEY
  secret = settings.TWITTER_SECRET
  auth = tweepy.OAuthHandler(key, secret)

  mess = get_messages(request)

  a=[]
  for m in mess:
    a.append(m)

  auth.set_request_token(a[0],a[1])

  auth.get_access_token(v)

  api = tweepy.API(auth)
  api.update_status('tweepy + oauth1!')
  return HttpResponseRedirect('/')      
"
158,Undeclared Variables,2012-03-28T15:05:23Z,2012-04-17T16:27:43Z,,,,"File Name : api.py
-> Variable Name : parse_statuses Line No: 35
-> Variable Name : parse_users Line No: 140
-> Variable Name : parse_status Line No: 98
-> Variable Name : parse_directmessages    Line No:173
-> Variable Name : parse_dm   Line No:190
-> Variable Name :parse_json  Line No:225
-> Variable Name : parse_friendship        Line No:232
"
157,Cryptographic Random Generator,2012-03-23T18:21:56Z,2012-04-17T16:25:41Z,,,,"This is my first contribution,

Bug :  Usage of ""randint"" In File oauth.py 
Line no : 66 and 70
Description :  For security reasons, it is good to use cryptographic random generators 
Solutions : 1)Instead of using randint we can use some cryptographic tools like PyCrypto to the functions generate_verifier and generate_nonce or any other method applicable. 
                     2) Or by implementing some encryption standard in the two functions and then we can return the Encrypted String.
"
156,Implemented /friendships/lookup,2012-03-19T00:43:15Z,2012-08-19T09:31:09Z,,,,"Please bear with me, my first ever github contribution. If you think I forgot something, please tell me and I will fix it.
Implemented api and model for supporting this twitter api call: https://dev.twitter.com/docs/api/1/get/friendships/lookup
"
155,New website,2012-03-16T21:59:16Z,2014-06-18T16:58:10Z,,,,"I would like to create a website for Tweepy. This will host
documentation, download links, a blog, and maybe a Q/A forum (stackoverflow style?).

Need a designer for creating the markup and content (ex: images).
Using a CMS for the dynamic parts of the site (blog, Q/A) is probably the best approach.
I would prefer not having to maintain much code for this site.
"
154,Rewrite/port streaming APIs to 2.x branch.,2012-03-16T21:55:22Z,2013-08-15T05:48:26Z,,,,"Need to port Streaming API code to the 2.x branch. This will probably require a good
deal of refactoring to integrate with Requests.
"
153,Failed to validate oauth signature,2012-03-14T12:16:51Z,2012-04-17T16:28:21Z,,tweepy.error.TweepError,tweepy.error.TweepError: <urlopen error [Errno 111] Connection refused>,"Hello,

I have to use tweepy for about a million tweets extraction for
my research project . I installed tweepy and am trying to get access
key and secret using Jeff Miller's blog which you might be aware of
--- http://talkfast.org/2010/05/31/twitter-from-the-command-line-in-python-using-oauth
    I am getting this following error :

 auth_url = auth.get_authorization_url()
 File ""/home/du3-3/someshj/py4/lib/python2.7/site-packages/tweepy/auth.py"",
line 103, in get_authorization_url
   raise TweepError(e)
tweepy.error.TweepError: <urlopen error [Errno 111] Connection refused>

I teared up some libraries and found that the real trouble was 'failing to validate oauth signature' .

Please help 
"
152,Full Proxy support via environment variables,2012-03-09T05:16:23Z,2012-12-25T16:41:12Z,,,,"Hello
I wrote proxy support and fixed authentication error for streaming.
- improved error handling for APIMethods
- proxy support for streaming
- fixed authentication error for streaming
  - I tryed to connect user stream using Python 2.6.6, but Twitter always returns 401 error.

This is including pull request #80.
"
151,Update links on http://code.google.com/p/tweepy/,2012-03-04T18:11:11Z,2012-03-08T04:40:10Z,,,,"Source code link points to http://github.com/joshthecoder/tweepy
Issue tracker link points to http://github.com/joshthecoder/tweepy/issues

And a link in ""Installing"" paragraph is broken as well. Those should be updated.
"
150,"exponential backoffs with twitter recommended values, loop hanging fix, better exception handling, and better status code handling",2012-03-02T04:07:34Z,2013-12-21T03:05:10Z,,,,"Backoffs according to https://dev.twitter.com/docs/streaming-api/user-streams/suggestions.  Exposes exceptions to the default client.  Loop hanging pulled in from here issue #135  Also includes recommended handling for 420 codes.
"
149,lookup users API call doesn't require authentication. ,2012-02-29T18:16:11Z,2012-03-09T20:15:40Z,,,,"See the documentation at https://dev.twitter.com/docs/api/1/get/users/lookup and try the example: https://api.twitter.com/1/users/lookup.json?screen_name=twitterapi&include_entities=true
"
148,Adding support for gzip streams,2012-02-28T21:27:35Z,2012-12-25T16:33:12Z,,,,"Hi, stream.twitter.com now supports gzip compression which gives a big reduction in bandwidth.  I've patched tweepy to request and consume a gzip stream if the Stream object is created with a gzip=True parameter:

```
  auth = tweepy.auth.BasicAuthHandler(username, password)
  api = tweepy.API(auth)
  listen = Listener()
  stream = tweepy.Stream(auth, listen, gzip=True)
  stream.sample()
```
"
147,oauth encoding,2012-02-15T14:07:13Z,2012-04-16T20:19:47Z,,,,"Hi there

I needed this change to get the streaming API working, hope you will pull.

Cheers
"
146,Fix for 'locale.Error: unsupported locale setting' in python 2.7,2012-02-10T08:34:53Z,2013-08-17T09:29:19Z,,,,
145,Connection problem in tweepy,2012-02-08T02:02:16Z,2012-04-17T23:48:06Z,,tweepy.error.TweepError,tweepy.error.TweepError: Failed to send request: [Errno 111] Connection refused,"File ""/home/someshjain/Desktop/tweepy-1.8/tweepy/binder.py"", line 186, in _call
    return method.execute()
  File ""/home/someshjain/Desktop/tweepy-1.8/tweepy/binder.py"", line 150, in execute
    raise TweepError('Failed to send request: %s' % e)
tweepy.error.TweepError: Failed to send request: [Errno 111] Connection refused

............
It was written on a site to change the binder file by including urllib2 and connecting through it but I dont really know how to do it

PLEASE HELP !!!!!!!!!!!
"
144,Use a buffer rather than reading the Twitter response one byte at a time...,2012-01-31T16:08:30Z,2012-03-08T05:00:25Z,,,,".... This actually respects the buffer_size option that was already there, but unused.

This improves performance from processing about 25 tweets/sec on my 2.8 GHz Core 2 Duo MacBook Pro pegging a core at 99% up to processing about 50/sec using 10% CPU.
"
143,Missing API functions - contributors and contributees,2012-01-22T00:27:39Z,2013-08-20T04:16:27Z,Feature,,,"Trawling around the Twitter api documentation I came across a couple of API calls that identify who can contribute to a given account, and what other accounts a user can contribute to:

https://dev.twitter.com/docs/api/1/get/users/contributors
https://dev.twitter.com/docs/api/1/get/users/contributees

Are these likely to be added into the Tweepy coverage of the API?
"
142,Encode track and follow parameters to UTF8.,2012-01-17T12:20:26Z,2013-12-22T13:56:07Z,,,,"The current streaming code simply calls str() on the track and follow arguments to filter. This will fail if there are non-ascii characters in these parameters.

The patch encodes these as UTF8 before adding to the streaming parameters.
"
141,"A small improvement in ""oauth"" exception handling",2012-01-02T08:04:32Z,2012-04-17T17:12:50Z,,,,"It is generally not advisable to use ""except:"" in python, because it would
catch ""KeyboardInterrupt"" and ""SystemExit"", meant only to be caught at
main() level. Only catch the ones we really expect to see, let others
propagate up the stack.

Also, when computing the HMAC, we shall not retry w/o hashlib in the case
that first hashing has gone wrong. This confuses the error message between
a missing import and a bad supplied hash.
"
140,Python 2.6 to 3.2 port,2011-12-18T15:11:59Z,2012-08-19T09:35:30Z,,,,"I ported tweepy to python 3.

https://github.com/quantmind/tweepy

The port works for python 2.6, 2.7 and 3.2.

Is there any interest?

Luca
"
139,changed looping condition to check the status of the response.,2011-12-11T19:56:15Z,2012-04-16T22:00:24Z,,,,"In response to Issue #41

Instead of looping on True. I changed it to loop so long as the server response is 2xx. I am unable to test as I don't have a development key but I don't think this will cause any problems and should be very fast to test.
"
138,Documentation,2011-12-01T15:55:29Z,2012-04-16T20:27:06Z,,,,"What happened to documentation? I've seen some in old commits, but now there is nothing.
"
137,Streaming API not responding after few hours,2011-11-28T03:31:23Z,2011-11-30T03:00:33Z,,,,"Very often twitter stream contains a response without any data so it goes to infinite loop. 

So changing line tweepy/streaming.py#147 

from

if c == '\n':

to 

if not c or c == '\n':

fixed the issue. This will break the loop and continue with the next response object.
"
136,"added the geo_search API method, ",2011-11-28T02:10:13Z,2011-12-29T01:06:18Z,,,,"no attribute:street_address support at this time
https://dev.twitter.com/docs/api/1/get/geo/search

this method is apparently intended to the geo nearby_places method: https://dev.twitter.com/docs/api/1/get/geo/nearby_places
"
135,"After a few hours the stream read() loop gets stuck, this fixed it for me.",2011-11-27T17:05:47Z,2012-12-25T16:39:59Z,,,,
134,Stream failed if using oauth authentication if track keyword has space character,2011-11-09T11:45:45Z,2012-04-16T21:05:08Z,Bug,,,"So many people thought it was the urllib or httplib fault, but twitter always response 401 Unauthorized.

'i have space character'
'i+have+space+character'
'i%20have%20space%20character'

It's a total useless to escape or even unescape since it was not the urllib problem.

"""" total fail if there is any space character inside track """"
auth = tweepy.auth.OAuthHandler('consumer_key', 'consumer_secret')
auth.set_access_token('oauth_token', 'oauth_secret')

"""" works like a charm but twitter said they will eradicate this using """"
auth = tweepy.auth.BasicAuthHandler('my_user', 'my_pass')

stream = Stream(auth, StreamListener())
stream.filter(follow=None, track='i have space character', async=False, locations=None, count=None)
"
133,added example using streaming api with oauth,2011-11-09T06:38:25Z,2011-11-28T21:46:37Z,,,,"Quick example of using OAuth and the Streaming interface with a Geographic
bounding box and optionally an additional query filter.
"
132,Handle SSL errors (such as timeouts!) and do exponential back off on errors ,2011-11-04T16:06:32Z,2013-12-27T17:20:39Z,,,,"Improved error handling, trap SSLError and pass exceptions to a handler for logging and exponential backoff on errors (required by twitter!)
"
131,LookupError: unknown encoding: hex,2011-11-03T20:11:03Z,2012-07-09T06:40:53Z,,LookupError,LookupError: unknown encoding: hex,"Python 2.6.2

```
>>> import tweepy
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""tweepy/__init__.py"", line 17, in <module>
    from tweepy.streaming import Stream, StreamListener
  File ""tweepy/streaming.py"", line 16, in <module>
    json = import_simplejson()
  File ""tweepy/utils.py"", line 83, in import_simplejson
    import simplejson as json
  File ""build/bdist.linux-i686/egg/simplejson/__init__.py"", line 111, in <module>
  File ""build/bdist.linux-i686/egg/simplejson/decoder.py"", line 29, in <module>
  File ""build/bdist.linux-i686/egg/simplejson/decoder.py"", line 21, in _floatconstants
LookupError: unknown encoding: hex
```
"
130,tweepy.Stream() requiers 4 args?,2011-10-30T22:33:58Z,2012-07-09T06:43:42Z,,TypeError,TypeError: **init**() takes at least 4 arguments (4 given),"Hi i'm trying to fetch  realtime data from twitter using tweepy.Stream(). 
So I have tried the following... 
After successfully authenticate using oauth:

auth = tweepy.OAuthHandler(...)  (it's works fine, i have my access_token.key and secret)

i did:
streaming_api = tweepy.streaming.Stream(auth, CustomStreamListener(), timeout='90')
 and:
streaming_api = tweepy.streaming.Stream(auth, CustomStreamListener(), timeout='90')

none of this works, it keeps giving me the same error:

Traceback (most recent call last):
  File ""<pyshell#5>"", line 1, in <module>
    streaming_api = tweepy.streaming.Stream(auth, CustomStreamListener(), timeout='60')
TypeError: **init**() takes at least 4 arguments (4 given)

then i have tried to access to the params of the function:  
tweedy.streaming.Stream(login,password,Listener(),...etc) 
but i thought this login and pass was the authentication method using in the basic authentication not in the oauth case. 
Now i'm really confused, a little help please? 
"
129,Re-implement followers to use followers/ids & users/lookup,2011-10-21T00:33:43Z,2013-08-20T04:34:43Z,Improvement,,,"Twitter has deprecated the statuses/followers method. They suggest to instead use
followers/ids and users/lookup as a replacement.
"
128,Use HTTPS by default,2011-10-16T08:40:43Z,2012-04-17T23:50:18Z,,,,"I got hit by the bug ocurring as shown in this post: https://groups.google.com/forum/#!topic/tweepy/3egdvmC8MzA . Basically, non-HTTPS methods seem to not work for the connection. Can the parameter for 'secure' be omitted and used by default?

Thanks
"
127,update background: _pack_image ascii' codec can't decode byte 0xff in position 0: ordinal not in range(128),2011-10-13T00:06:02Z,2014-04-13T19:47:43Z,,,,"update profile background doesnt work:

check this out: https://gist.github.com/1283001
"
126,pagination with friends/id and followers/id,2011-10-11T14:08:18Z,2013-08-20T04:28:47Z,,,,"Hi,

according to this https://dev.twitter.com/issues/12 in the near future (10/31) we'll need pagination for these method:
- https://dev.twitter.com/docs/api/1/get/friends/ids
- https://dev.twitter.com/docs/api/1/get/followers/ids

Thank you
Danilo
"
125,Problems with adding SOCKS proxy support,2011-10-11T12:35:35Z,2014-06-18T16:57:47Z,,_TweepError,_TweepError: Failed to send request: [Errno 104] Connection reset by peer_,"I am trying to add SOCKS 5 support to tweepy.
And I added the following code in the __init__.py file.

import socks 
import socket
socks.setdefaultproxy(socks.PROXY_TYPE_SOCKS5, ""127.0.0.1"", 7070)
socket.socket = socks.socksocket

**socks** is from [socksipy](http://sourceforge.net/projects/socksipy/)

I tested socksipy with the urllib separately, it works well to fetch data.

But if I test it with tweepy, it seems that the httplib is making things wrong. Because I see the exception information.
_TweepError: Failed to send request: [Errno 104] Connection reset by peer_

Can you tell me how to work around with this?
"
124,Fix for newer version of httplib,2011-10-09T10:41:28Z,2011-11-13T06:26:14Z,,,,"httplib in python 2.7 requires that the lenght parameter is a string
and not an int. Makes update_profile_image work again in Python 2.7.
"
123,A new example of how to use oauth,2011-10-08T21:54:49Z,2011-11-13T06:29:00Z,,,,"Hi, I would like to contribute some code to show an example of how to use OAuthHander to connect to twitter using OAuth.
"
122,Add a RawParser to access JSON objects directly,2011-09-30T00:45:17Z,2011-11-13T06:30:17Z,,,,"Similar https://github.com/tweepy/tweepy/pull/73

I believe this implementation is simple enough. Tested it, it works locally.
"
121,Added support for proxies to latest revision !,2011-09-21T23:28:51Z,2012-06-18T10:55:02Z,,,,"Added support for web proxies via the proxy_host and proxy_port to the tweepy.API **init** function, changes to auth.py, buffer.py and api.py done to effect this.

This is a critically lacking feature at most universities and office environments and must be integrated into the master branch so as to enable many more people to use it.
"
120,http proxy authentication,2011-09-13T19:30:54Z,2013-12-19T11:27:28Z,,,,"I saw some chatter about making tweepy work over an http proxy server but nothing about authentication.  Typically, corporate network proxy servers require authentication with a user name and a password.  I made a few changes to binder.py and api.py and got this working.  I don't know if anyone is interested...

Jonas
"
119,Add Twitter's new update_with_media method,2011-09-01T23:01:10Z,2013-12-22T13:28:15Z,Feature,,,"Image can be uploaded to Twitter in order to be attached to a tweet.

The API documentation is here: https://dev.twitter.com/docs/api/1/post/statuses/update_with_media
"
118,"Add ""entities"" functionality to statuses/home_timeline (for URLs)",2011-08-19T00:05:35Z,2011-08-23T20:22:01Z,,,,"As of August 15, 2011, Twitter wraps all URLs longer than 19 characters and includes link info whenever 'include_entities' is set to 'True.' [See this dev update for more info.](https://dev.twitter.com/discussions/1062) 

Per the article:

> We'll also be defaulting entities support on all responses that return tweets in the REST API soon, starting with entities being returned by default on POST statuses/update and POST direct_messages/new first and other methods to follow.

I have a website that deals with URLs in timelines, so I decided to add this functionality to api.py instead of waiting. I'll submit a pull request in a second.
"
117,"Add ""entities"" functionality to statuses/home_timeline (t.co URLs)",2011-08-18T23:53:15Z,2011-08-19T00:05:53Z,,,,"As of August 15, 2011, Twitter wraps all URLs longer than 19 characters and includes link info whenever 'include_entities' is set to 'True.' [See this dev update for more info.](https://dev.twitter.com/discussions/1062) 

Per the article:

> We'll also be defaulting entities support on all responses that return tweets in the REST API soon, starting with entities being returned by default on POST statuses/update and POST direct_messages/new first and other methods to follow.

I have a website that deals with URLs in timelines, so I decided to add this functionality to api.py instead of waiting. I'll submit a pull request in a second.
"
116,Added documentation URL to README,2011-08-17T09:45:54Z,2011-10-01T04:21:06Z,,,,"It was very frustrating trying to find the documentation for this project originally. I eventually found it on a stack overflow discussion.
"
115,Request Token Secret cannot be got when program running on multiple servers,2011-08-06T07:21:00Z,2014-06-18T16:55:44Z,,,,"I used Weibo Python SDK(It's a fork of tweepy from weibo.com,similar to twitter ), and I found this problem when deploying on multiple web servers. I thins this problem also applys to tweepy since auth.py seems almost the same.
The issue I submitted for Weibo SDK:
http://code.google.com/p/sinatpy/issues/detail?id=5

What steps will reproduce the problem?
1. Have a load balancer that distribute request to multiple web servers.
2. The request to connect weibo is likely directed to server A, the request to get access token after user authenticate in weibo interface is likely directed to server B.
3. HTTP error 401: Unthorized

**What version of the product are you using? On what operating system?**
Weibo Python SDK released on June 8

**Please provide any additional information below.**
See the auth.py that I have modified. I used redis, but database or memcached and any other persistent storage can be used.
http://code.google.com/p/sinatpy/issues/attachmentText?id=5&aid=50000000&name=auth.py&token=19767fa08a6286e66dd933f32272c183

Modified by: Yifu Diao
Date: August 6th, 2011
Modified functions of OAuthHandler class: _get_request_token(), get_access_token()
The bug been fixed:

```
If program is replicated to multiple web servers, request_token(specifically request token 
secret, since request token key will be passed bach as GET parameter) cannot be got 
since the request has been directed to another server or another thread, thus OAuthHandler
that has been set self.request_token by _get_request_token() before user authenticates 
does not exist.
```

The way it is fixed:

```
Store the attributes of OAuthToken in Redis once it's constructed in _get_request_token()
and get them back from Redis in get_access_token()
```

The way functions signature changed:

```
get_access_token(self, verifier=None)  -->  get_access_token(self, request_token_key, verifier=None)
So before calling get_access_token(), ensure you have got request_token_key = request.GET.get('oauth_token')
```
"
114,Edited username in setup.py from joshthecoder to tweepy,2011-07-26T19:25:55Z,2011-10-01T05:17:28Z,,,,
113,Edited username in github url from joshthecoder to tweepy,2011-07-26T19:23:22Z,2011-10-01T05:17:52Z,,,,
112,Correction!,2011-07-08T20:45:32Z,2012-04-18T00:17:04Z,,,,"Hey there, had updating tweepy and userstream was broken. The commit here resolves it :-)
"
111,Modified return type of 'retweeted_by' api from 'status' to 'user',2011-07-03T21:11:58Z,2013-08-17T07:30:25Z,,,,"As is indicated in http://dev.twitter.com/doc/get/statuses/:id/retweeted_by , this api shows user objects who retweeted the status.
"
110,locale.setlocale() in datetime parsing utilties should be enclosed in a try-finally block,2011-06-29T07:55:58Z,2013-12-22T13:29:38Z,,,,"If the datetime parsing in the utils module for some reason raises an exception then you could be stuck with your locale set globally to the 'C' locale. setlocale() should be enclosed in a try-finally block. Something like the following would work but it's worth noting that setlocale is not thread safe on most systems so to really do this properly you would need to use locks as to make this utility thread safe.

```
old_locale = locale.getlocale()
try:
    locale.setlocale(locale.LC_TIME, 'C')

    # We must parse datetime this way to work in python 2.4
    return datetime(*(time.strptime(string, '%a %b %d %H:%M:%S +0000 %Y')[0:6]))
finally:
    # Reset locale back to the default setting
    locale.setlocale(*old_locale)
```
"
109,Added locations capability to streaming.py and included example,2011-06-21T19:16:15Z,2011-06-21T19:58:10Z,,,,"Added the capability to use locations in streaming filters, included example code which shows tweets from St. Petersburg/Tampa Florida along with the full_name of the bounding box as specified by Twitter's API.
"
108,Redis Cache ,2011-06-08T23:11:18Z,2011-10-01T06:03:13Z,,,,"```
modified:   tweepy/cache.py
```

Added a Redis cache to tweepy
Added tests for the redis cache
Modified MemCacheCache to raise NotImplementedError instead of returning false data
"
107,Add pagination_mode to tweepy.models.User.followers and friends,2011-06-05T05:05:37Z,2013-08-20T04:28:36Z,,TweepError,TweepError: This method does not perform pagination,"Right now we are able to cursor using

```
tweepy.Cursor(api.friends)
tweepy.Cursor(api.followers)
```

But if we have a user instance

```
u = api.get_user('rogeliorv')
tweepy.Cursor(u.friends)  # Does not work
tweepy.Cursor(u.followers) # Does not work
```

We get:

```
TweepError: This method does not perform pagination
```

We should be to benefit from the already implemented Cursor class.

This is fixed easily by adding 

```
friends.pagination_mode = 'cursor'
followers.pagination_mode = 'cursor'
```

in tweepy.models.User after the method declarations.
"
106,Added support for include_entities optional parameter,2011-06-04T16:20:24Z,2013-08-17T07:16:57Z,,,,"See http://dev.twitter.com/pages/tweet_entities for information on this parameter.
"
105,Added method for direct_messages/show,2011-05-19T09:42:29Z,2011-05-26T05:50:36Z,,,,"The direct_messages/show method does exist in the Twitter API, even though it's currently missing from the documentation.

Here's the initial issue for the method: http://code.google.com/p/twitter-api/issues/detail?id=369
Here's a recent post on the Twitter Dev mailing list where Matt Harris (Twitter dev advocate) mentions it: https://groups.google.com/d/msg/twitter-development-talk/b3NGEaxX4oE/UzbxNKPYN3oJ

Cheers
"
104,Timeout with Python 2.5 compatibility,2011-05-14T15:45:01Z,2013-05-15T04:45:44Z,,,,"I've implemented timeout support that uses httplib's timeout from Python2.6+ and sets the timeout directly on the HTTPConnection socket in previous versions of Python. I've also added a 'retry_timeout' argument that determines whether or not the request is retried when it times out.
"
103,"handling of ""delete"" and ""limit"" in default StreamListener is wrong",2011-05-11T15:36:20Z,2013-12-22T13:26:55Z,,,,"In tweepy.streaming.StreamListener.on_data():

``` python
    def on_data(self, data):
        """"""Called when raw data is received from connection.

        Override this method if you wish to manually handle
        the stream data. Return False to stop stream and close connection.
        """"""

        if 'in_reply_to_status_id' in data:
            status = Status.parse(self.api, json.loads(data))
            if self.on_status(status) is False:
                return False
        elif 'delete' in data:
            delete = json.loads(data)['delete']['status']
            if self.on_delete(delete['id'], delete['user_id']) is False:
                return False
        elif 'limit' in data:
            if self.on_limit(json.loads(data)['limit']['track']) is False:
                return False
```

`data` is just a string, and a regular status tweet containing the text ""delete"" or ""limit"" will get treated as a delete request or a limit request.
"
102,Added ability to perform asynchronous API requests,2011-05-03T18:57:20Z,2011-08-23T19:22:52Z,,,,"Added ability to perform asynchronous API requests (`execute_async` method in `APIMethod`; requires tornado package installed). Moved cache checking from `APIMethod.execute` to separate method `APIMethod.get_cache`.

Every API method is now capable of performing asynchronous call, if it's provided with callback parameter.
This feature will work only with tornado package installed (facebook/tornado). It this package does not exist, exception will only be raised when calling method with callback parameter.

I'm not really sure if anyone will need this feature (lack of it became a serious flaw for me when I started to develop application using both Tornado and Tweepy), so feel free to reject this pull request.

Usage as follows:

```
import tweepy
import tornado.ioloop

def cb(data):
    print data

auth = tweepy.OAuthHandler(client, client_secret)
auth.set_access_token(token, secret)
api = tweepy.API(auth)
api.home_timeline(callback=cb)
tornado.ioloop.IOLoop.instance().start()
```
"
101,TweepError: Not found when using update_status and send_direct_message,2011-04-30T10:48:26Z,2014-04-13T12:48:02Z,,,,"I'm using OAuth. 

If I try to send status with update_status, status will be sent out successfully but there will be a 'Not found' exception. 
If I try to send direct message, with send_direct_message, I get the same error, but message does not get sent out. 

Any idea what is the problem? 
"
100,_read_loop() fix attempt ,2011-04-28T04:27:50Z,2011-10-10T02:36:53Z,,,,"- length is returned with base-16
- _safe_read is needed
"
99,Overriding stack trace on streaming.py,2011-04-20T08:21:46Z,2011-04-25T17:14:05Z,,,,"The ""raise exception"" is overriding the stack trace and hiding exceptions raised by listeners, a simple ""raise"" should be fine.
"
98,tweepy.error.TweepError: Incorrect signature,2011-04-16T11:45:01Z,2013-08-20T04:27:46Z,,tweepy.error.TweepError,tweepy.error.TweepError: Incorrect signature,"hi Joshthecoder I follow tut about twitter and oauth and tweppy but I have this bug 

Traceback (most recent call last):
  File ""tweetit.py"", line 24, in <module>
    tweet = api.update_status('Il est %s  et j ai du courant   #kebetu #team221' %dateformat) #status 
  File ""build/bdist.linux-i686/egg/tweepy/binder.py"", line 179, in _call
  File ""build/bdist.linux-i686/egg/tweepy/binder.py"", line 162, in execute
tweepy.error.TweepError: Incorrect signature

here is my code 
# !/usr/bin/env python

import unittest
import random
import datetime
from time import sleep
import os
from time import strftime
import tweepy
# Authentification oAuth

CONSUMER_KEY = ''consumer key""
CONSUMER_SECRET = 'consumer secret'
ACCESS_KEY = 'access key'
ACCESS_SECRET = 'Access secret'
auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_KEY, ACCESS_SECRET)
api = tweepy.API(auth)
# Main program

for tweet in range(1,100): # Boucle 100 fois 
    now = datetime.datetime.now()
    dateformat = str(now.strftime('%H:%M:%S le %d-%m-%Y'))
    tweet = api.update_status('Il est %s  et j ai du courant   #kebetu #team221' %dateformat) #status 
print tweet
sleep(100)  # attendre 100 s
"
97,Stream sends length messages,2011-04-15T14:18:10Z,2014-02-21T11:25:20Z,,,,"Stream._read_loop detects the length part of the message as an individual message and sends it to on_data. 

My streamlistener receives a lot of messages like '1241', '2512' (string messages of length 3-4 representing the length of actual messages to follow).
"
96,Stream discontinue bug,2011-04-15T13:14:55Z,2014-04-13T12:47:49Z,,,,"If twitter disconnects the stream the thread does not end and it keep consuming CPU. To reproduce this start another thread from the same ip.
After some investigations I found the source of the problem. It's in the stream._read_loop:

```
        while True:
            c = resp.read(1)
            if c == '\n':
                break
            length += c
```

Explanation: read.read(1) returns '' (empty string) and this causes an infinite loop that eats up a lot of CPU.

Quick patch I applied is adding the following lines:

```
            if not c and not self.running:
              break
```
"
95,encoding of track parameters for filtered stream,2011-04-12T03:14:39Z,2014-04-13T12:46:18Z,,,,"It appears that using self.body = urllib.urlencode(params) (line 189, streaming.py) creates issues for multi word track predictes.
For example ""facebook page"" becomes ""facebook+page"".  

This will cause all matches for ""facebook"" to be returned rather than filtering on the entire string. 

My workaround for this was to monkeypatch the filter method wrapping the encode with urllib.unquote_plus().  This will properly pass filter predicates to the streaming api and match the whole phrase.
"
94,Pagination is broken for model objects,2011-04-10T13:48:51Z,,,,,"This works:
    tweepy.Cursor(api.lists_memberships, user.id)

This _should_ work, but doesn't:
    tweepy.Cursor(user.lists_memberships)

I noticed the same behavior for api.list_members. I assume this occurs whenever a model object wraps an API call.
"
93,Inconsistent HTML entity behaviour between Status.text and SearchResult.text,2011-04-08T07:00:07Z,,,,,"I've posted the following Tweet:

`""test twitter <api> & test © html entities""`

If I retrieve this tweet via Tweepy's home_timeline(), status.text equals:

`""test twitter &lt;api&gt; & test © html entities""`

Whereas if retrieved via search(), it shows up as:

`""test twitter &lt;api&gt; &amp; test © html entities""`

Note that the stand-alone ""&"" is converted to an &amp;.  IMHO, regardless of the underlying Twitter behavior, I feel the Tweepy API should present an equal result in both cases.
"
92,Catch httplib.IncompleteRead in Streaming API,2011-04-04T20:48:49Z,2011-11-26T15:19:17Z,,,,"This is intended to address https://github.com/joshthecoder/tweepy/issues/18
"
91,Stripped prohibited headers from URLFetch request: ['Host'],2011-04-03T21:56:42Z,2014-06-18T16:58:47Z,,,,"I'm using tweepy with AppEngine. 

auth = tweepy.OAuthHandler(config.twitterbot_consumer_key, config.twitterbot_consumer_secret)
auth.set_access_token(config.twitterbot_access_token, config.twitterbot_access_token_secret)
bot = tweepy.API(auth)
bot.update_status(status)

I always get an AppEngine warning:
Stripped prohibited headers from URLFetch request: ['Host']

And I have to put the update_status inside a try:except: clause, else it will crash the app and causing an infinite loop to send out tweet. Even though the app crashes, the tweet gets sent out successfully. 

The exception error printed out to console is 'Not found'. 
"
90,Problem with destroy_friendship?,2011-04-02T13:34:35Z,2011-04-02T15:00:15Z,,,,"I have some problems. I want to delete some people I follow (~1500).
I run this kind of code:
...
fids = api.followers_ids(""myaccount"")
for fid in fids:
   api.destroy_friendship(fid)
...

After running the script several times in a week (due to the hourly limit), it does not remove 350 people in one time but only a few 10 or 20... (and I have no error)
destroy_friendship: [274239915]
destroy_friendship: [64641105]
destroy_friendship: [29927258]
destroy_friendship: [159695505]
destroy_friendship: [274555630]
destroy_friendship: [45167666]
destroy_friendship: [248033571]
destroy_friendship: [257340619]
destroy_friendship: [219506739]
destroy_friendship: [224582389]
destroy_friendship: [24937533]
destroy_friendship: [253467963]
destroy_friendship: [124535042]
destroy_friendship: [210030681]
destroy_friendship: [227732064]
[350... without error but only 10 or 20 friendships are really destroyed]

Is it a problem of script which does not destroy correctly?
Is it a problem of cache? Are the actions not correclty flushed?
I do not understand ;'(
"
89,Untitled,2011-03-30T19:56:57Z,2011-04-14T05:35:05Z,,,,"functionality to get user streams working
"
88,"File ""/Users/adiputro/twitter/tweepy/binder.py"", line 184, in _call",2011-03-16T12:30:43Z,2012-04-18T00:27:40Z,,tweepy.error.TweepError,tweepy.error.TweepError: Twitter error response: status code = 411 ',"i got this error when i was running my app:

' Traceback (most recent call last):
  File ""twitter2.py"", line 14, in <module>
    api.update_status(sys.argv[1])
  File ""/Users/adiputro/twitter/tweepy/binder.py"", line 184, in _call
    return method.execute()
  File ""/Users/adiputro/twitter/tweepy/binder.py"", line 167, in execute
    raise TweepError(error_msg, resp)
tweepy.error.TweepError: Twitter error response: status code = 411 '

does anyone know what is actually happen and how to fix it?
thanks in advance.. :)
"
87,Example of cache usage,2011-03-06T15:11:16Z,,,,,"Could it be possible to add an example of cache usage? I guess it's not hard but it didn't open after reading the code.
"
86,Some fixes for the streaming support,2011-03-05T16:23:23Z,2011-04-14T05:57:23Z,,,,"Hi Josh,

I hope these are pretty self-explanatory. The last change (increasing the timeout) is perhaps controversial, and feel free to drop that one – or change the default to None, which is what I would do if this were my library – but the others are straightforward bug fixes I think.

Thanks for a great library. Your code is a pleasure to read.

Cheers,
Robin
"
85,"user/lookup function call ""None"" screen_names when query",2011-03-04T09:57:42Z,2012-04-18T00:23:12Z,,,,"when I called API.lookup_users and set user_ids argument like ...

api.lookup_users(user_ids=user_ids)

the method sent url like ""... user_id=1,2,3,4....&screen_names=None"", and Twitter returns error([{u'code': 18, u'message': u'Too many terms specified in query'}]) when I set maximum 100 user_ids to user_ids list.
I found that list_to_csv function in utils.py return None when item_list is empty list or None. 

Below is patch I made for version 1.7.1

<pre>
--- utils.py    2011-03-04 18:53:56.000000000 +0900
+++ /Users/shota/utils.py       2011-03-04 18:48:33.000000000 +0900
@@ -95,4 +95,6 @@
 def list_to_csv(item_list):
     if item_list:
         return ','.join([str(i) for i in item_list])
+    else:
+        return ''
</pre>
"
84,No support for TimeZones,2011-02-28T04:46:21Z,,,ValueError,ValueError: time data 'Sun Feb 27 22:25:40 -0500 2011' does not match format '%a %b %d %H:%M:%S +0000 %Y',"Traceback (most recent call last):
  File ""status.py"", line 6, in <module>
    public_tweets = api.public_timeline()
  File ""/home/icaro/Proyectos/Coodots Tracker/tweepy/binder.py"", line 184, in _call
    return method.execute()
  File ""/home/icaro/Proyectos/Coodots Tracker/tweepy/binder.py"", line 170, in execute
    result = self.api.parser.parse(self, resp.read())
  File ""/home/icaro/Proyectos/Coodots Tracker/tweepy/parsers.py"", line 76, in parse
    result = model.parse_list(method.api, json)
  File ""/home/icaro/Proyectos/Coodots Tracker/tweepy/models.py"", line 39, in parse_list
    results.append(cls.parse(api, obj))
  File ""/home/icaro/Proyectos/Coodots Tracker/tweepy/models.py"", line 55, in parse
    setattr(status, k, parse_datetime(v))
  File ""/home/icaro/Proyectos/Coodots Tracker/tweepy/utils.py"", line 17, in parse_datetime
    date = datetime(*(time.strptime(string, '%a %b %d %H:%M:%S +0000 %Y')[0:6]))
  File ""/usr/lib/python2.6/_strptime.py"", line 454, in _strptime_time
    return _strptime(data_string, format)[0]
  File ""/usr/lib/python2.6/_strptime.py"", line 325, in _strptime
    (data_string, format))
ValueError: time data 'Sun Feb 27 22:25:40 -0500 2011' does not match format '%a %b %d %H:%M:%S +0000 %Y'
"
83,Wrong default Streaming API timeout ,2011-02-20T23:00:43Z,2012-04-18T00:02:05Z,,,,"Twitter sends a keep-alive newline every 30 seconds. Default timeout in streaming.py is 5 seconds, this cause constant timeouts on low volume streams. Should be at least 30 seconds, 60 or 90 is better.
"
82,Support new Site Stream API,2011-02-08T19:14:13Z,2014-08-09T18:16:03Z,Feature,,,"http://dev.twitter.com/pages/site_streams
"
81,adding timeout and compression support,2011-01-23T07:40:54Z,2013-05-15T05:04:23Z,,,,"- timeout will treated as a exception
- compression support currently only support gzip compression
"
80,Proxy support via environment variables,2011-01-21T13:33:06Z,2012-12-25T16:41:44Z,,,,"> using urllib2 enables proxy support
> adding api method params ""trim_user"" and ""include_entities""
"
79,retweets should not require authentication,2011-01-19T04:26:30Z,2012-04-17T23:54:13Z,,,,"retweets should not require authentication according to the twitter api documentation:
http://dev.twitter.com/doc/get/statuses/retweets/:id
"
78,Create different errors for different problems,2011-01-13T23:16:36Z,2012-04-17T23:53:16Z,,,,"Since all exceptions raise a TweepError, it kinda gets problematic to know whats the issue.
For example... if you try to do:

> > > API.create_friendship ('somerandomid')

If your internet connection fails, you should get:

> > > ""TweepError: Failed to send request: [Errno 11004] getaddrinfo failed""

If the id doesn't exist, you get:

> > > ""TweepError: Not found""

And finally if you already follows the account, you get:

> > > ""TweepError: Could not follow user: <theaccount> is already on your list.""

If you have to automatically send to the user the reason? You cannot tell if the user doesn't exist or if is already followed.

Of course that's just an example. Many of the available features bring the same issue.
"
77,Improve verify credentials,2010-12-30T23:57:33Z,2010-12-31T05:50:03Z,,,,"Howdy!

This patch prevents transient connection problems from causing verify_credentials() to return False. Instead, it will propagate the connection exception up to the caller. After the patch, verify_credentials() will return False only when authentication actually fails (HTTP status code 401).

Thanks,

Clay
"
76,Improve verify_credentials,2010-12-30T23:50:05Z,2010-12-30T23:54:39Z,,,,"Howdy!

This patch prevents transient connection problems from causing verify_credentials() to return False. Instead, it will propagate the connection exception up to the caller. After the patch, verify_credentials() will return False only when authentication actually fails (HTTP status code 401).

Thanks,

Clay
"
75,Added support for related_result,2010-12-30T14:24:05Z,2011-02-05T05:35:28Z,,,,
74,Add support for related_results API,2010-12-30T14:00:36Z,2010-12-30T14:25:19Z,,,,"https://api.twitter.com/1/related_results/show/25044314886.json
"
73,Add raw json to models,2010-12-28T03:55:09Z,2011-02-05T05:45:28Z,,,,"Howdy,

First, let me just say, tweepy rocks. Thank you!

I love the model abstraction, but what do y'all think about adding the ability to get at the raw json object emitted by twitter? My use case is fetching tweets and then dumping them onto a message queue for processing by another component in our system. The Tweepy model objects aren't easily serializable to JSON. I suppose I could use **dict**, but that doesn't exactly match what's returned by Twitter, and contains nested model objects that I'd have to deconstruct, also.

So I've patched models.py to store the raw json in a new _json attribute on each model instance.

I haven't updated the tests because I don't see many asserts in there to begin with, and they don't seem mocked, and I didn't want to create a new Twitter account just to run the tests. But I'd be happy to write tests for this feature once I have a better grasp of the test suite (and perhaps a way to mock Twitter so one doesn't need to have a real Twitter account to run the test suite).

Cheers,

Clay
"
72,Html characters like > and < now are correctly visible in status text,2010-12-27T19:23:39Z,2011-02-05T04:52:03Z,,,,"Hi Josh, I noticed that my application using tweepy libraries couldn't read statues where html characters were included in the text ( in particular I noticed this behavior with '<' and '>' characters) because Twitter's APIs don't allow html tag, obviously...This is not an issue, I know, but I think that in a desktop application an user of your libraries expects to find the same status text that is on a Twitter page...If he want to show the result on a web page through Tweepy, well, things change, but I think this case happens rarely...Anyway I ""fixed"" this..Bests..
"
71,Fixing modelfactory and adding gzip encoding,2010-12-17T10:21:11Z,2013-08-17T07:15:59Z,,,,"Hi josh,

I mentioned this on the mailing list: Here's a tiny patch that fixes the built in status parser so people can actually subclass the user model.

I also added some lines to send ""Accept-encoding"": ""gzip"". I tested this briefly: it works and saves a lot of bandwidth. The only stain might be that I add the encoding in APIMethod's **init** - you may prefer to set it in a different place, but that's merely a question of style.

Cheers,
Pascal
"
70,setDaemon for async mode streaming api,2010-12-01T14:42:19Z,2013-08-20T04:22:33Z,,,,"Please set the thread as daemon for streaming api async mode.

If the thread is not set as daemon, the program is still running after main thread is terminated.

<pre>
index c65ae9e..833d8ba 100644
--- a/tweepy/streaming.py
+++ b/tweepy/streaming.py
@@ -162,7 +162,9 @@ class Stream(object):
     def _start(self, async):
         self.running = True
         if async:
-            Thread(target=self._run).start()
+            th = Thread(target=self._run)
+            th.setDaemon(True)
+            th.start()
         else:
             self._run()
</pre>
"
69,count support in filter method,2010-12-01T02:53:50Z,2011-01-13T05:04:50Z,,,,"added support for count parameter in filter method (streaming)
"
68,OAuth support for tweepyshell,2010-11-26T13:36:45Z,2011-02-05T05:48:34Z,,,,"hi,
I added support for OAuth to tweepyshell so that it's again useful in combination with twitter.
it's possible to use tweepyshell with different twitter applications and/or accounts.
tested it also with basic auth on identi.ca and this still works fine.
"
67,Add support for include_entities optional parameter,2010-11-25T19:12:53Z,2013-08-20T04:26:36Z,Feature,,,"Many API resources now expose an optional 'include_entities' parameter, but tweepy does not support it yet.

More info: http://dev.twitter.com/pages/tweet_entities
"
66,from SearchResult to JSON,2010-11-23T14:42:21Z,2012-04-17T23:52:06Z,,,,"Hey,

Is there anyway to get API.Search() method to return a JSON object?
Or convert the SearchResult object back to JSON?

Thanks.
"
65,Wont Install,2010-11-12T13:31:45Z,2010-11-12T13:46:13Z,,SyntaxError,SyntaxError: invalid syntax,"this is the output of the install

running install
running bdist_egg
running egg_info
writing tweepy.egg-info/PKG-INFO
writing top-level names to tweepy.egg-info/top_level.txt
writing dependency_links to tweepy.egg-info/dependency_links.txt
reading manifest file 'tweepy.egg-info/SOURCES.txt'
writing manifest file 'tweepy.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_py
creating build/bdist.linux-x86_64/egg
creating build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/api.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/**init**.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/auth.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/binder.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/error.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/models.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/parsers.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/streaming.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/cache.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/oauth.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/memcache.py -> build/bdist.linux-x86_64/egg/tweepy
copying build/lib/tweepy/cursor.py -> build/bdist.linux-x86_64/egg/tweepy
byte-compiling build/bdist.linux-x86_64/egg/tweepy/api.py to api.pyc
  File ""build/bdist.linux-x86_64/egg/tweepy/api.py"", line 34
    @staticmethod
    ^
SyntaxError: invalid syntax
byte-compiling build/bdist.linux-x86_64/egg/tweepy/**init**.py to **init**.pyc
byte-compiling build/bdist.linux-x86_64/egg/tweepy/auth.py to auth.pyc
byte-compiling build/bdist.linux-x86_64/egg/tweepy/binder.py to binder.pyc
byte-compiling build/bdist.linux-x86_64/egg/tweepy/error.py to error.pyc
byte-compiling build/bdist.linux-x86_64/egg/tweepy/models.py to models.pyc
  File ""build/bdist.linux-x86_64/egg/tweepy/models.py"", line 20
    @staticmethod
    ^
SyntaxError: invalid syntax
byte-compiling build/bdist.linux-x86_64/egg/tweepy/parsers.py to parsers.pyc
byte-compiling build/bdist.linux-x86_64/egg/tweepy/streaming.py to streaming.pyc
byte-compiling build/bdist.linux-x86_64/egg/tweepy/cache.py to cache.pyc
byte-compiling build/bdist.linux-x86_64/egg/tweepy/oauth.py to oauth.pyc
byte-compiling build/bdist.linux-x86_64/egg/tweepy/memcache.py to memcache.pyc
byte-compiling build/bdist.linux-x86_64/egg/tweepy/cursor.py to cursor.pyc
creating build/bdist.linux-x86_64/egg/EGG-INFO
copying tweepy.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO
copying tweepy.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying tweepy.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying tweepy.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying tweepy.egg-info/zip-safe -> build/bdist.linux-x86_64/egg/EGG-INFO
creating 'dist/tweepy-1.2-py2.3.egg' and adding 'build/bdist.linux-x86_64/egg' to it
removing 'build/bdist.linux-x86_64/egg' (and everything under it)
Processing tweepy-1.2-py2.3.egg
Removing /usr/lib/python2.3/site-packages/tweepy-1.2-py2.3.egg
Copying tweepy-1.2-py2.3.egg to /usr/lib/python2.3/site-packages
tweepy 1.2 is already the active version in easy-install.pth

Installed /usr/lib/python2.3/site-packages/tweepy-1.2-py2.3.egg
Processing dependencies for tweepy==1.2
Finished processing dependencies for tweepy==1.2

note a couple of errors with api.py and models.py. because of this i get erorrs when running as well...
"
64,Tracking multiple keywords with Steam causes 401,2010-11-04T11:59:44Z,2012-04-17T23:10:54Z,,,,"Stream.filter(track=['hello']) # 1 word works!
Stream.filter(track=['hello', 'world']) # 2 words AND'd works!
Stream.filter(track=['hello world']) # 2 words OR'd 401 error

Stream.body is 'track=hello+world'.

Is the '+' breaking oAuth? I honestly can't think of any other reason for a space to cause a 401 error.
"
63,'Incorrect signature' TweepError on update_status api call,2010-11-01T14:37:46Z,2012-04-17T23:18:03Z,Bug,,,"This has started recently (Oct 29th as far as i can tell), everything was working perfectly beforehand. Perhaps Twitter Api has changed in some way?
"
62,the tweepy example app is broken,2010-10-28T18:56:39Z,2012-04-16T22:01:48Z,,TypeError,TypeError: **init**() takes exactly 3 non-keyword arguments (4 given),"line 35, in main
    stream = tweepy.Stream(username, password, StreamWatcherListener(), timeout=None)
TypeError: **init**() takes exactly 3 non-keyword arguments (4 given)

I've used tweepy before and this example app has worked before.  What happened to it?
"
61,Allow cursor to limit on since_id,2010-10-28T14:55:40Z,2013-08-20T04:26:02Z,Feature,,,"Currently cursors can be limited by number of items or number of pages, but frequently you'll want all things since the last time you checked, which is best done with a since_id filter. Unfortunately there doesn't seem to be any support for this at the moment.
"
60,Status objects,2010-10-25T22:49:48Z,2011-01-13T04:49:03Z,,,,"Hi, I'm having trouble using the status object. I have authenticated fine, but I'm having difficulty getting the app to simply take a users ID and display their current status.

Can you provide some simple code samples on how to use the objects? It's really unclear atm.

Cheers.
"
59,Unit Test Fixes,2010-10-23T17:28:48Z,2011-02-05T13:48:34Z,,,,"Hi Josh,

I've updated the unit tests to work with OAuth now that twitter has shut off basic auth for their API.  I've done the following:
- To avoid users accidentally committing their credentials, they can now supply user/pass and tokens in testconf.py - this file has been added to .gitignore
- I have put instructions for using this in the module docstring
- I have written a simple command-line routine to help the tester grab their access token from twitter as long as they have supplied their app's consumer tokens.

Let me know if you want any other changes before pulling.

Regards,
Wayne
"
58,return error status codes from auth.py,2010-10-18T18:22:17Z,2011-02-05T04:59:59Z,,,,"add code attribute to TweepError so that clients can get correct status code for authentication errors.
"
57,Add method related_results/show,2010-10-16T07:38:36Z,2013-08-20T04:25:11Z,Feature,,,"From the recent API announcement:
GET /1/related_results/show/:id.{format} 
Requires authentication. 
If available, returns an array of replies and mentions related to the 
specified Tweet. There is no guarantee there will be any replies or 
mentions in the response. This method is only available to users who 
have access to #newtwitter. 
It would be quite amazingly cool to get this in Tweepy.
"
56,rate_limit_status always returns 350 until I'm cut off,2010-10-04T03:56:55Z,2011-01-13T04:48:18Z,,,,"I have the following line in my code:

r = api.rate_limit_status()
print r

It always prints:
'reset_time': 'Mon Oct 04 04:43:42 +0000 2010', 'remaining_hits': 350, 'hourly_limit': 350, 'reset_time_in_seconds': 1286167422}

The times change but it always has the 350s
Am I using the api wrong? Am i missing something?

Can someone provide a simple loop of how to do:
while(true)
if(remaining_hits >0):
  doSearch()

Just to make sure I don't exceed the limit.  I can't get rate_limit_status to work
"
55,"API.home_timeline,mentions and direct_messages may have count bug",2010-09-23T11:24:07Z,2012-04-17T23:39:12Z,,,,"I got following outputs.
In [20]: len(api.home_timeline(count=3))
Out[20]: 3

In [21]: len(api.home_timeline(count=20))
Out[21]: 19

In [22]: len(api.home_timeline(count=21))
Out[22]: 20

My Tweepy Version is 1.71 and I used python 2.6.6
Is this a tweepy bug or twitter's bug?

Thanks
"
54,Documentation missing link,2010-09-17T19:53:00Z,2010-10-17T04:34:47Z,,,,"http://joshthecoder.github.com/tweepy/docs/auth_tutorial.html

""You can do that [here]""
"
53,api.me doesn't work for identica,2010-09-15T11:30:12Z,2011-01-13T04:45:56Z,,TweepError,"TweepError: Unable to get username, invalid oauth token!","I use this line to create api object. I use Oauth connection
    api=tweepy.API(auth, 'identi.ca', api_root='/api')
I can send notice with this line and there no error
    api.update_status(text)

But when I use this function
    api.me()
it returns this error

```
File ""---/tweepy/api.py"", line 175, in me
return self.get_user(screen_name=self.auth.get_username())
File ""---/tweepy/auth.py"", line 161, in get_username
raise TweepError(""Unable to get username, invalid oauth token!"")
TweepError: Unable to get username, invalid oauth token!
```

I use python 2.6.4
"
52,Error: Basic authentication is not supported,2010-09-14T23:10:22Z,2010-10-17T04:31:34Z,,,,"I wrote this code:

```
at = tweepy.BasicAuthHandler('ebertti', 'mypass')
tw = tweepy.API(at)
```

 but when I can this method:
    tw.followers_ids(id='ebertti')

i get this error:

```
 tw.followers_ids(id='ebertti')
     File ""C:\Python26\lib\site-packages\tweepy\binder.py"", line 181, in _call
 return method.execute()
     File ""C:\Python26\lib\site-packages\tweepy\binder.py"", line 164, in execute
 raise TweepError(error_msg, resp)
 TweepError: [{u'message': u'Basic authentication is not supported', u'code': 53}]
```

but like 2h ago, every thing is working GREAT! But now, I have this problem...
"
51,locale,2010-09-14T23:05:55Z,2011-10-01T06:20:37Z,,,,"Took me about 30 minutes to figure out, tweepy is doing something wrong:

locale.setlocale(locale.LC_TIME, '') will _not_ reset the locale. It will set it to the user's locale, which is not the default setting! 'C' is default.
"
50,ratelimit handling,2010-09-10T19:03:55Z,2011-02-05T12:56:59Z,,,,"Hi,

I have added a ratelimit handling.
If the response is 400 -> store in an errorCache. If you have been rate limited in the past hour, don't bother calling back. I can make it smarter with exponential back off later.
Unit tests are here too.

Bonus: MemCacheCache

Thanks for considering

--Gilles
"
49,Issue with install and import,2010-09-02T18:48:23Z,2010-10-17T04:29:12Z,,ImportError,ImportError: No module named tweepy</code></pre>,"I am relatively new to programming and am following a Head First book which has a send_to_twitter function that is deprecated.  The forums pointed to the use of tweepy as a solution.
So I installed tweepy as per instructions (or at least I believe I did) yet I keep getting this error :

<pre><code>Traceback (most recent call last):
File ""/Users/mikeyb/Documents/python_work/tweep.py"", line 3, in <module>
import tweepy
ImportError: No module named tweepy</code></pre>


This is the result of the code:

<pre><code>
#!/usr/bin/env python
 
import tweepy
 
CONSUMER_KEY = 'paste your Consumer Key here'
CONSUMER_SECRET = 'paste your Consumer Secret here'
 
auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth_url = auth.get_authorization_url()
print 'Please authorize: ' + auth_url
verifier = raw_input('PIN: ').strip()
auth.get_access_token(verifier)
print ""ACCESS_KEY = '%s'"" % auth.access_token.key
print ""ACCESS_SECRET = '%s'"" % auth.access_token.secret
</code></pre>

"
48,not able to see RTs in user_timeline,2010-09-02T00:02:56Z,2010-10-17T04:27:27Z,,,,"api.user_time(user) do not see statuses which are RTs
"
47,Timeline method miss parameters,2010-08-27T09:43:06Z,2012-04-17T23:22:46Z,,,,"The timeline methods are missing paramters that have been introduced in the last couple of month. Like in the case of ""mentions"" where trim_user, include_rts and include_entities are missing:

http://joshthecoder.github.com/tweepy/docs/api.html#API.mentions

http://dev.twitter.com/doc/get/statuses/mentions
"
46,Each request decrease more than one hit on rate limit after changed to OAuth,2010-08-17T02:03:45Z,2012-04-17T23:30:02Z,,,,"I was using Basic Handler, but Twitter warned about OAuth becoming mandatory, so I've changed my code to use the OAuth handler. It looked fine at first, but my script started to crash with rate limits overpassed. I traced and debugged my script. 

My script retrieves statuses from a list using tweepi.api.list_timeline, creates a list of these statuses using tweepy.Cursor method items() and shows some attributes from each tweepy.Status. 

The problem is when I am getting these attributes like name, screen_name, there is new requests and my remaining_hits decreases.

I wasn't experiencing this kind of trouble when I was using Basic Authentication. There is any chance of slow connections need more than one request to fill the Status attributes? Even between apparently two consecutive api.rate_limit_status() there is reduction of remaining_hits.
"
45,tweepy.error.TweepError: Failed to parse JSON payload: 'module' object has no attribute 'loads',2010-08-14T08:51:00Z,2010-10-17T04:18:31Z,,tweepy.error.TweepError,tweepy.error.TweepError: Failed to parse JSON payload: 'module' object has no attribute 'loads',"Hi,

the oauth dance worked, but i get this error on trying to send a tweet using the tutorial at http://jmillerinc.com/2010/05/31/twitter-from-the-command-line-in-python-using-oauth/

Traceback (most recent call last):
  File ""./twitter"", line 15, in <module>
    api.update_status(sys.argv[1])
  File ""build/bdist.linux-i686/egg/tweepy/binder.py"", line 181, in _call
  File ""build/bdist.linux-i686/egg/tweepy/binder.py"", line 167, in execute
  File ""build/bdist.linux-i686/egg/tweepy/parsers.py"", line 69, in parse
  File ""build/bdist.linux-i686/egg/tweepy/parsers.py"", line 40, in parse
tweepy.error.TweepError: Failed to parse JSON payload: 'module' object has no attribute 'loads'

This happens on Debian 5.0.5 I have only little experience with Python, so I might have missed something obvious.
"
44,BUG in send_direct_message(),2010-08-11T09:34:17Z,2010-10-17T04:16:42Z,,TweepError,TweepError: Invalid request.,"Traceback (most recent call last):
  File ""<pyshell#8>"", line 1, in <module>
    api.send_direct_message()
  File ""build\bdist.win32\egg\tweepy\binder.py"", line 178, in _call
    return method.execute()
  File ""build\bdist.win32\egg\tweepy\binder.py"", line 161, in execute
    raise TweepError(error_msg, resp)
TweepError: Invalid request.
"
43,"On using ""twitter.send_direct_message(""user"",""hello"")"" I am getting this",2010-08-07T11:59:12Z,2012-04-17T23:21:01Z,,AttributeError,AttributeError: 'str' object has no attribute 'apply_auth',"Traceback (most recent call last):
  File ""<pyshell#36>"", line 1, in <module>
    twitter.send_direct_message(""user"",""hello"")
  File ""build\bdist.win32\egg\tweepy\binder.py"", line 178, in _call
    return method.execute()
  File ""build\bdist.win32\egg\tweepy\binder.py"", line 132, in execute
    self.api.auth.apply_auth(
AttributeError: 'str' object has no attribute 'apply_auth'
"
42,searchresult object .from_user_id returns wrong id !?,2010-08-07T08:43:05Z,2010-10-17T04:14:00Z,,,,"Am I missing something? Or why doesn´t this work:
        search_results = client.search('whatever')
        assert search_results[0].from_user_id == client.get_user(search_results[0].from_user).id
"
41,Endless loop when connection broken while in _read_loop in streaming.py,2010-08-06T17:51:23Z,2012-04-16T22:00:32Z,Bug,,,"while reading the length of the length line the case when response return '' is not covered (I am not sure if the HTTPResponse is supposed to throw an Exception in this case so the bug might actually lie there). The result is a 100% CPU consumption and an endless loop.

I am using python 2.6 on OSX 10.6.1. The python version is from macports and tweepy version is 1.7.1. 

The following modification would have the loop return whatever was read until that point. It allows the system to return an error and fail gracefully (and allow for recovery).

```
        # read length
        length = ''
        counter = 0
        while True:
            counter+=1
            c = resp.read(1)
            if c == '':
                break
            if c == '\n':
                break
            length += c
        length = length.strip()
        if length.isdigit():
            length = int(length)
        else:
            continue
```
"
40,values aren't unicode objects,2010-08-04T16:51:22Z,2012-04-16T21:55:35Z,,,,"Since twitter encodes it's data utf-8, there's no reason not to decode the data as utf-8.

http://farmdev.com/talks/unicode/
"
39,Infinite loop in streaming API,2010-08-04T15:47:47Z,2011-01-13T04:40:00Z,,,,"There is a ""while True"" loop that might infinitely loop in _read_loop if the response dies in the middle of the loop.  The fix is to verify that the connection is still open and the stream is still running in that loop, rather than ""while True.""  I'll send you a pull request with a fix soon.
"
38,Twitter returns unicode error messages for non-english users,2010-07-27T20:03:17Z,2010-10-17T04:03:48Z,,,,"When I set twitter account settings to Japanese language, twitter returns Japanese error messages. They are passed TweepError.**init** with 'reason' parameter. But Japanese strings are encoded in unicode, so str(reason) causes encoding errors.
It must be unicode(reason) for non-english languages.
"
37,Automatic reconnect of the streaming api when it goes down. ,2010-07-20T02:09:03Z,2012-04-16T21:54:50Z,Improvement,,,"title says it all. I would like to be able to run tweepy for days without it going down.
"
36,send_direct_message results in tweepy Error: Invalid Request,2010-07-16T14:56:31Z,2010-10-17T03:53:10Z,,tweepError,tweepError: Invalid Request,"I'm using the tweepy library, 1.7 in a django project.  I can retrieve mentions, send tweets, etc but I cannot seem to send a DM t anyone.

Trying it from the shell:
auth = tweepy.BasicAuthHanlder(username, pw)
api = tweepy.API(auth)
api.send_direct_message(targetusername, mesg)

results in the following:
    177 
    178         method = APIMethod(api, args, kargs)
--> 179         return method.execute()
    180 
    181 

```
160                 except Exception:
161                     error_msg = ""Twitter error response: status code = %s"" % resp.status
```

--> 162                 raise TweepError(error_msg, resp)
    163 
    164             # Parse the response payload

tweepError: Invalid Request

Am I missing something?
"
35,Store the raw json from twitter in the model objects,2010-07-14T02:27:04Z,2011-01-13T04:37:52Z,,,,"class Status(Model):

```
@classmethod
def parse(cls, api, json,rawjsonstring):
    self.originalJson = rawjsonstring
```

Please store the raw json returned from twitter as a field. I'd like a way to get the json that twitter returns to me unmodified. Particularly for the streaming api
"
34,NOT A BUG -- please close -- api.retweets() returns 'Incorrect signature' using OAuth,2010-07-13T11:25:55Z,2010-08-31T22:47:18Z,,,,"Issue was w/user :-) not the code!
"
33,"lookup_users() returns an additional user ""None""",2010-06-04T23:29:39Z,2010-06-16T06:38:13Z,,,,"send: 'GET /1/users/lookup.json?user_id=5307%2C691593%2C75933%2C1168301%2C3577531&screen_name=None

After being baffled as to why my input count and returned records never matched I did a bit of debugging and realized that if no screen_names were added to the query the url would be created with screen_name=None and the twitter user named ""None"" would be returned along with the results.
"
32,Missing params for api.search(),2010-05-11T21:04:47Z,2010-05-24T03:33:58Z,,,,"The search() method is not allowing some parameters that twitter supports:
http://apiwiki.twitter.com/Twitter-Search-API-Method:-search

<pre>
diff --git a/tweepy/api.py b/tweepy/api.py
index 27460e8..521470a 100644
--- a/tweepy/api.py
+++ b/tweepy/api.py
@@ -640,7 +640,7 @@ class API(object):
         search_api = True,
         path = '/search.json',
         payload_type = 'search_result', payload_list = True,
-        allowed_param = ['q', 'lang', 'locale', 'rpp', 'page', 'since_id', 'geocode', 'show_user']
+        allowed_param = ['q', 'lang', 'locale', 'rpp', 'page', 'since_id', 'geocode', 'show_user', 'max_id', 'since', 'until', 'result_type']
     )
     search.pagination_mode = 'page'
</pre>
"
31,Documentation error,2010-05-11T04:06:48Z,2010-05-24T03:37:23Z,,,,"http://joshthecoder.github.com/tweepy/docs/auth_tutorial.html#oauth-authentication

session.set('request_token', (auth.request_token.key, auth.request_token.secret)

should be

session.set('request_token', (auth.request_token.key, auth.request_token.secret))
"
30,IDLE and Windows Issue,2010-04-30T18:44:29Z,2010-05-02T03:50:44Z,,"AttributeError, TweepError","AttributeError: 'User' object has no attribute 'status', TweepError: Failed to send request: timed out","ERROR message:
  localTweet.tweetId = s.status.id
AttributeError: 'User' object has no attribute 'status'

I get this error after calling the api method

import tweepy
statuses = tweepy.api.friends(screen_name=twitusername)

that is not the bug..

I'm running in windows in idle.
When I go to run the code again I would expect the same error...
however I get this error

```
raise TweepError('Failed to send request: %s' % e)
```

TweepError: Failed to send request: timed out

When I restart idle I get the first error again. 
"
29,rate limited calls to search api should use proper delay from Retry-After header,2010-04-21T03:32:18Z,2012-04-16T21:58:40Z,,,,"""An application that exceeds the rate limitations of the Search API will receive HTTP 420 response codes to requests. It is a best practice to watch for this error condition and honor the Retry-After header that instructs the application when it is safe to continue. The Retry-After header's value is the number of seconds your application should wait before submitting another query (for example: Retry-After: 67).""

--http://apiwiki.twitter.com/Rate-limiting

Patch gist: http://gist.github.com/373391
"
28,Cursor().limit(n) gives 'Cursor' object has no attribute 'limit',2010-04-05T23:23:53Z,2010-04-23T20:17:14Z,,AttributeError,AttributeError: 'Cursor' object has no attribute 'limit',"The documentation for the Cursor tutorial:
   http://joshthecoder.github.com/tweepy/docs/cursor_tutorial.html#limits
shows:

<pre>
# Only iterate through the first 200 statuses
for status in Cursor(api.user_timeline).limit(200):
    process_status(status)
</pre>

however, that throws an exception:
  AttributeError: 'Cursor' object has no attribute 'limit'

<pre>
>>> import tweepy
>>> api = tweepy.API()
>>> statuses = tweepy.Cursor(api.user_timeline).limit(200);
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
AttributeError: 'Cursor' object has no attribute 'limit'
</pre>


Without limit, works fine:

<pre>
>>> statuses = tweepy.Cursor(api.user_timeline, screen_name='ev')
>>> status = statuses.items().next()
>>> status.text
'@xuanthu Saw Super Diamond...where?'
</pre>
"
27,"Doc issue: parameter for api.list_timeline should be ""per_page"", not ""count""",2010-04-03T23:12:13Z,2010-04-23T20:11:28Z,,,,"The Tweepy doc shows the parameter for api.list_timeline() as ""count"":
  http://joshthecoder.github.com/tweepy/docs/api.html#list-methods

However, the parameter according to Twitter's API shows ""per_page"":
  http://apiwiki.twitter.com/Twitter-REST-API-Method:-GET-list-statuses

This appears simply to be a documentation error as the current Tweepy supports properly the per_page parameter:

$ cat test_list_timeline.py

import tweepy

list_timeline = tweepy.API().list_timeline('ev', 'randomlist', count=200)
print ""api.list_timeline using count=200: %s"" % len(list_timeline)

list_timeline = tweepy.API().list_timeline('ev', 'randomlist', per_page=200)
print ""api.list_timeline using per_page=200: %s"" % len(list_timeline)

$ python test_list_timeline.py

api.list_timeline using count=200: 20
api.list_timeline using per_page=200: 200
"
26,Add request timeout argument to tweepy,2010-03-30T07:06:32Z,2012-04-16T21:53:42Z,Feature,,,"In Python 2.6, both httplib.HTTPConnection and httplib.HTTPSConnection take the optional argument ""timeout"".  Due to the (arguably broken) semantics of socket._GLOBAL_DEFAULT_TIMEOUT, there is no way to actually change the global default timeout.  If Tweepy included the ability to pass through timeouts to the underlying object (as it already does for retry delays, etc.), it would definitely help tweepy handle intermittent network issues.
"
25,Errors after passing None to OAuthHandler set_access_token,2010-03-17T17:21:14Z,2010-04-23T20:02:07Z,,TypeError,TypeError: argument 2 to map() must support iteration,"OAuthHandler set_access_token() accepts None as key and secret arguments, but then later Tweepy api calls throw a TypeError.

I fixed my code so it won't pass a None anymore, but should Tweepy catch this first? i.e.,  set_access_token() fail if None is passed?

<pre>
import tweepy

auth = tweepy.OAuthHandler('my consumer key', 'my consumer secret')
auth.set_access_token(None, None)
api = tweepy.API(auth)

assert api.verify_credentials()
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""tweepy/api.py"", line 260, in verify_credentials
    )(self)
  File ""tweepy/binder.py"", line 138, in _call
    method, headers, parameters
  File ""tweepy/auth.py"", line 65, in apply_auth
    request.sign_request(self._sigmethod, self._consumer, self.access_token)
  File ""tweepy/oauth.py"", line 259, in sign_request
    self.build_signature(signature_method, consumer, token))
  File ""tweepy/oauth.py"", line 263, in build_signature
    return signature_method.build_signature(self, consumer, token)
  File ""tweepy/oauth.py"", line 626, in build_signature
    token)
  File ""tweepy/oauth.py"", line 619, in build_signature_base_string
    key += escape(token.secret)
  File ""tweepy/oauth.py"", line 50, in escape
    return urllib.quote(s, safe='~')
  File ""/usr/lib/python2.6/urllib.py"", line 1223, in quote
    res = map(safe_map.__getitem__, s)
TypeError: argument 2 to map() must support iteration
</pre>
"
24,Patch in access to the OAuth rate limit status,2010-03-12T23:39:46Z,2014-08-11T18:52:47Z,Improvement,,,"Since the limit for OAuth requests is currently at 350 per hour and authenticated requests don't count against the normal rate_limit_status api, there should be a way to access the OAuth limit.  

The information gets send with the header of every response on an authenticated call:  
x-ratelimit-class = ""api_identified""  
x-ratelimit-limit = The current maximum of request per hour.  
x-ratelimit-remaining = The requests remaining till the reset.  
x-ratelimit-reset = UNIX timestamp as seconds when the next reset will occur.

I already patched this into api.py and binder.py:  
http://github.com/BonsaiDen/tweepy/commit/cf0b4068e3e882498619d897d51462de91ca7e4e

May need some changes to the variable names, but besides that it should be OK I guess.
"
23,Parsing of error messages is completely broken,2010-03-09T01:54:29Z,2010-03-10T23:34:40Z,,,,"See this commit for the problems and the fix:
http://github.com/BonsaiDen/tweepy/commit/f48518daf8fc3898f66f5e103aa6c6118226bec5
"
22,Parsing of new style retweets is broken,2010-03-07T17:11:05Z,2010-03-07T17:45:24Z,Bug,,,"The parsing of the data for new style retweets tries to parse the ""retweeted_status"" object using the User model, which therefore fails.

Patch here: http://github.com/BonsaiDen/tweepy/commit/e616418231fee80e6723a0065038316f66263ab4
"
21,xAuth support,2010-03-07T05:22:50Z,2010-03-10T23:12:41Z,,,,"Need to merge changes from http://github.com/BonsaiDen/tweepy
which implement xAuth support.
"
20,UnicodeEncodeError constructing TweepError,2010-03-05T22:16:47Z,2011-10-01T06:17:08Z,,[UnicodeEncodeError,[UnicodeEncodeError: 'ascii' codec can't encode character u'\xe9' in position 141: ordinal not in range(128)],"Still figuring out how to reproduce this, but seeing an encoding exception from w/in tweepy (while constructing a TweepError). Sample backtrace:

```
[UnicodeEncodeError: 'ascii' codec can't encode character u'\xe9' in position 141: ordinal not in range(128)]
<snip/> api.create_friendship(followee_username, headers=USER_AGENT_HEADER)<snip/>
File ""/usr/local/lib/python2.6/dist-packages/tweepy-1.5-py2.6.egg/tweepy/binder.py"", line 167, in _call raise TweepError(error_msg)
File ""/usr/local/lib/python2.6/dist-packages/tweepy-1.5-py2.6.egg/tweepy/error.py"", line 9, in __init__    self.reason = str(reason)
```
"
19,send_direct_message is broken,2010-03-01T17:31:09Z,2010-03-07T14:15:44Z,Bug,,,"It seems that the argument conversion is broken here, Twitter always returns 400 Bad Request, removing the check for multiple values on the same parameter in binder.py and then passing the screen_name or user_id per kwarg fixes it.
"
18,streaming.py crash,2010-03-01T07:09:31Z,2011-10-01T06:13:19Z,,,,"Downloaded streamwatcher.py from tweepy-examples. Sometimes, after a day of running, it crashes with the following (I commented out lines 117->119 in stremaing.py to catch the exception):

Traceback (most recent call last):
  File ""webapps/siti/mex/scripts/mystreamwatcher.py"", line 68, in <module>
    myfunc()
  File ""webapps/siti/mex/scripts/mystreamwatcher.py"", line 63, in myfunc
    stream.filter(followed)
  File ""/home/user/webapps/siti/mex/scripts/tweepy/streaming.py"", line 195, in filter
    self._start(async)
  File ""/home/user/webapps/siti/mex/scripts/tweepy/streaming.py"", line 160, in _start
    self._run()
  File ""/home/user/webapps/siti/mex/scripts/tweepy/streaming.py"", line 111, in _run
    self._read_loop(resp)
  File ""/home/user/webapps/siti/mex/scripts/tweepy/streaming.py"", line 140, in _read_loop
    c = resp.read(1)
  File ""/usr/local/lib/python2.6/httplib.py"", line 517, in read
    return self._read_chunked(amt)
  File ""/usr/local/lib/python2.6/httplib.py"", line 563, in _read_chunked
    raise IncompleteRead(value)
httplib.IncompleteRead
"
17,Provide hook for setting a useragent,2010-02-23T17:48:40Z,2010-02-23T22:39:00Z,,,,"Twitter requests that you provide a custom useragent for API calls. It would be nice if there were a hook in Tweepy to let you set a useragent for the calls it makes.
"
16,Add structure to TweepError for better handling,2010-02-22T20:56:17Z,2010-03-05T22:40:36Z,Feature,,,"Right now, TweepError only provides a string that describes the exception. This makes it difficult to write robust error handling code. For example, if there's a rate limit overage, I'd like to be able to handle that differently than a 404 (in the former, I want to retry, in the latter, give up). Right now, I check for rate limit errors by inspecting the error string, which is prone to breakage. It'd be great to have some better introspect into TweepErrors. If nothing else, the http status code of the response from Twitter would be a good start.
"
15,'module' object has no attribute 'OAuthHandler',2010-02-18T00:01:20Z,2010-06-16T06:44:51Z,,,,"when installing the latest tweepy (1.5 I think) with ""python setup.py install"" the error that OAuthHandler does not exist keeps popping up.

This seems to be resolved if you simply copy the dist/tweepy directory into dist-packages, which seems to indicate something goes wrong with install.
"
14,"all exceptions are caught in Stream._run, even listener exceptions",2010-02-16T22:54:10Z,2010-08-31T22:46:43Z,Bug,,,"If you made a mistake in your StreamListener implementation (when a str become an unicode), Stream._run will hide this exception. The application stop silently.
"
13,Problem with time and locale,2010-02-01T21:41:11Z,2010-04-22T18:40:04Z,Bug,ValueError,ValueError: time data 'Mon Feb 01 18:45:13 +0000 2010' does not match,"Reported by vensign on mailing list:

When I try to run my app with the LANG=es_VE.UTF8 I get the following
error:

 File ""/home/wako/Documentos/twclient/origami.py"", line 37, in
checkuser
   if not self.api.verify_credentials():
 File ""build/bdist.linux-x86_64/egg/tweepy/api.py"", line 259, in
verify_credentials
 File ""build/bdist.linux-x86_64/egg/tweepy/binder.py"", line 185, in
_call
 File ""build/bdist.linux-x86_64/egg/tweepy/binder.py"", line 171, in
execute
 File ""build/bdist.linux-x86_64/egg/tweepy/parsers.py"", line 73, in
parse
 File ""build/bdist.linux-x86_64/egg/tweepy/models.py"", line 85, in
parse
 File ""build/bdist.linux-x86_64/egg/tweepy/models.py"", line 50, in
parse
 File ""build/bdist.linux-x86_64/egg/tweepy/utils.py"", line 14, in
parse_datetime
 File ""/usr/lib/python2.6/_strptime.py"", line 454, in _strptime_time
   return _strptime(data_string, format)[0]
 File ""/usr/lib/python2.6/_strptime.py"", line 325, in _strptime
   (data_string, format))
ValueError: time data 'Mon Feb 01 18:45:13 +0000 2010' does not match
format '%a %b %d %H:%M:%S +0000 %Y'

After some tests I discover that the problem is the locale settings,
i.e. in my language %a = Mon will be %a=Lun.

If I set LANG=en_US.UTF-8 the problem go away.

So for now I put this line in my app code:
locale.setlocale(locale.LC_ALL, 'C')

And that fix the problem.

Is there anyway to fix this in the tweepy library?

Similar issue reported for python-twitter: http://code.google.com/p/python-twitter/issues/detail?id=10
"
12,Twitter error response: status code = 301,2010-01-31T02:26:52Z,2010-01-31T03:37:11Z,Bug,,,"I'm getting an unexpected 301 status code when using Tweepy on Python 2.5.  A sample script is below along with the debugging traces:

```
import tweepy
tweepy.debug()
auth = tweepy.BasicAuthHandler(
    username='**insert username**',
    password='**insert password**'
)
api = tweepy.API(auth_handler=auth, secure=True)
try:
    api.update_status('It worked!')
except tweepy.TweepError , err:
    print err
```

Python 2.6.4 (Success):

> send: 'POST /1/statuses/update.json?status=It+worked%21 HTTP/1.1\r\nHost: api.twitter.com\r\nAccept-Encoding: identity\r\nAuthorization: Basic QmV0aGFuZE1hcms6dHVnYm9hdA==\r\n\r\n'  
> reply: 'HTTP/1.1 200 OK\r\n'  
> header: Date: Sun, 31 Jan 2010 02:13:22 GMT  
> header: Server: hi  
> header: X-Transaction: 1264904003-75143-25205  
> header: Status: 200 OK  
> header: ETag: ""d9bd685d9cd197b6eca18646fa70c231""  
> header: Last-Modified: Sun, 31 Jan 2010 02:13:23 GMT  
> header: X-Runtime: 0.24167  
> header: Content-Type: application/json; charset=utf-8  
> header: Pragma: no-cache  
> header: Content-Length: 1139  
> header: Cache-Control: no-cache, no-store, must-revalidate, pre-check=0, post-check=0  
> header: Expires: Tue, 31 Mar 1981 05:00:00 GMT  
> header: X-Revision: DEV  
> header: Set-Cookie: lang=en; path=/
> header: Set-Cookie: _twitter_sess=BAh7CToMY3NyZl9pZCIlNDVkYTExYTYzOGJmNjk5ZTAzNjYzZjQ0ZTQyMWYw%250AMjk6EXRyYW5zX3Byb21wdDA6B2lkIiVkNGI1YThkZmRkYmEwN2VmNDg3YTk4%250AMzk2ZThlN2I1MyIKZmxhc2hJQzonQWN0aW9uQ29udHJvbGxlcjo6Rmxhc2g6%250AOkZsYXNoSGFzaHsABjoKQHVzZWR7AA%253D%253D--8eac8869e1a8d843326b301d30ecfb2e8de9f284; domain=.twitter.com; path=/  
> header: Vary: Accept-Encoding  
> header: Connection: close  

Python 2.5.4 (Failure):

> send: 'POST /1/statuses/update.json?status=It+worked%21 HTTP/1.1\r\nHost: api.twitter.com:443\r\nAccept-Encoding: identity\r\nAuthorization: Basic QmV0aGFuZE1hcms6dHVnYm9hdA==\r\n\r\n'  
> reply: 'HTTP/1.1 301 Moved Permanently\r\n'  
> header: Date: Sun, 31 Jan 2010 02:13:38 GMT  
> header: Server: Apache  
> header: Location: http://twitter.com/1/statuses/update.json?status=It+worked%2521  
> header: Cache-Control: max-age=300  
> header: Expires: Sun, 31 Jan 2010 02:18:38 GMT  
> header: Vary: Accept-Encoding  
> header: Content-Length: 271  
> header: Connection: close  
> header: Content-Type: text/html; charset=iso-8859-1  
> Twitter error response: status code = 301  

It looks as though the port 443 is being added to api.twitter.com in Python 2.5 but I'm not sure why.  Any help would be great.  Thanks.
"
10,Return search results meta data,2010-01-22T14:56:03Z,2010-01-29T02:32:16Z,Feature,,,"API.search() should return back the search result meta data (max_id, since_id, etc).
"
9,"default search domain is incorrect, search() calls fail",2010-01-14T08:44:09Z,2010-01-31T01:39:31Z,,,,"By default, API objects use the search.twitter.com domain as their search domain, which causes all search() calls to throw errors with http response codes of 400. APIs created with twitter.com as their search_domain work correctly. twitter.com should be the default search domain, it seems.
"
8,oauth api.twitter.com causing 404's,2009-12-17T20:13:04Z,2010-01-29T02:41:12Z,,,,"Issue reported on twitter-dev mailing list by Josh Bleecher Snyder. Copy of email follows:

Hi all,

The tweepy twitter client uses api.twitter.com for the host for oauth calls:

   REQUEST_TOKEN_URL = 'http://api.twitter.com/oauth/request_token'
   AUTHORIZATION_URL = 'http://api.twitter.com/oauth/authorize'
   AUTHENTICATE_URL = 'http://api.twitter.com/oauth/authenticate'
   ACCESS_TOKEN_URL = 'http://api.twitter.com/oauth/access_token'

I've found that this works, until the user tries to sign out or sign
up during the authorization; if this happens, they get a 404. If,
however, twitter.com is used as the host:

   REQUEST_TOKEN_URL = 'http://twitter.com/oauth/request_token'
   AUTHORIZATION_URL = 'http://twitter.com/oauth/authorize'
   AUTHENTICATE_URL = 'http://twitter.com/oauth/authenticate'
   ACCESS_TOKEN_URL = 'http://twitter.com/oauth/access_token'

then _everything_, including signout and signup, works. This also
matches the instructions at
http://twitter.com/oauth_clients/details/%d.

However, it strikes me as odd that the oauth stuff half works at
api.twitter.com.

My question is: What is the bug? That the api.twitter.com oauth
endpoints only partially work -- in which case tweepy is fine and I
should file a bug with Twitter -- OR that the api.twitter.com oauth
works at all -- in which case I should ping the author of tweepy and
perhaps suggest to Twitter that they remove this partial functionality
to prevent future confusion?

Many thanks,
Josh

-----End of email------
"
7,"""Not found"" error for api.retweet()",2009-12-08T18:24:16Z,2009-12-08T18:29:11Z,,,,"statuses/retweet is no longer ""Coming soon"" and the current API method is incorrect
"
6,Error in importing tweepy,2009-11-14T21:25:29Z,2009-11-18T16:17:56Z,,ImportError,ImportError: No module named http.client,"## In [1]: import tweepy

ImportError                               Traceback (most recent call last)

/tmp/<ipython console> in <module>()

/usr/local/lib/python2.6/dist-packages/tweepy-1.3-py2.6.egg/tweepy/**init**.py in <module>()
     12 from tweepy.models import Status, User, DirectMessage, Friendship, SavedSearch, SearchResult, models
     13 from tweepy.error import TweepError
---> 14 from tweepy.api import API
     15 from tweepy.cache import Cache, MemoryCache, FileCache
     16 from tweepy.auth import BasicAuthHandler, OAuthHandler

/usr/local/lib/python2.6/dist-packages/tweepy-1.3-py2.6.egg/tweepy/api.py in <module>()
      6 import mimetypes
      7 
----> 8 from tweepy.binder import bind_api
      9 from tweepy.error import TweepError
     10 from tweepy.parsers import *

/usr/local/lib/python2.6/dist-packages/tweepy-1.3-py2.6.egg/tweepy/binder.py in <module>()
      2 # Copyright 2009 Joshua Roesslein

```
  3 # See LICENSE
```

----> 4 import http.client
      5 import urllib.request, urllib.parse, urllib.error
      6 import time

ImportError: No module named http.client
"
5,allow tweepy requests to use a proxy,2009-10-22T05:54:34Z,2014-06-18T16:54:39Z,Feature,,,"Here's a changeset with one approach:
http://github.com/brianmichelich/tweepy/commit/5cd1b3d1ce5d760e6c4e08af353c4c1ce406b475

This allows you to set a proxy_host and proxy_port on the API() and have binder.py pick them up when creating a connection.
"
4,Exception when call get_access_token,2009-10-13T18:47:49Z,2009-10-14T05:32:31Z,,Exception,Exception: argument 2 to map() must support iteration,"Exception: argument 2 to map() must support iteration

Code:
       # Rebuild oauth handler
    auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
    auth.set_request_token(session.rtoken_key, session.rtoken_sec)

```
# Fetch access token
try:
    auth.get_access_token(request.vars.oauth_verifiler)
except tweepy.TweepError, e:
    return e # here
```
"
3,OAuthHandler' object has no attribute 'set_request_token',2009-09-30T15:04:21Z,2009-09-30T17:10:17Z,,AttributeError,AttributeError: 'OAuthHandler' object has no attribute 'set_request_token',"On trying the GAE code sample, after the authorization happens, the error is produced. It goes like
""OAuthHandler' object has no attribute 'set_request_token'""

A detailed Server Log is provided herewith

WARNING  2009-09-30 15:04:51,874 urlfetch_stub.py:269] Stripped prohibited headers from URLFetch request: ['Host']
INFO     2009-09-30 15:04:52,836 dev_appserver.py:3034] ""GET /oauth/ HTTP/1.1"" 200 -
ERROR    2009-09-30 15:05:00,280 **init**.py:388] 'OAuthHandler' object has no attribute 'set_request_token'
Traceback (most recent call last):
  File ""/home/pranny/appengine/google/appengine/ext/webapp/**init**.py"", line 507, in **call**
    handler.get(*groups)
  File ""/home/pranny/appengine/projects/mbl2/oauth_example/handlers.py"", line 58, in get
    auth.set_request_token(request_token.token_key, request_token.token_secret)
AttributeError: 'OAuthHandler' object has no attribute 'set_request_token'
INFO     2009-09-30 15:05:00,307 dev_appserver.py:3034] ""GET /oauth/callback?oauth_token=cbmnHe4Urqwdd3Le1l4rrFhap3nxKKYUu1cfhnJo8g&oauth_verifier=MTeAGy6NNYjaGjicbFKVjz9QJ63tEgtAAFmKuN8tXH0 HTTP/1.1"" 200 -
INFO     2009-09-30 15:05:00,341 dev_appserver_index.py:212] Updating /home/pranny/appengine/projects/mbl2/index.yaml
"
2,Windows -- streaming dies due to unicode encoding exception,2009-09-16T05:20:18Z,2009-10-13T18:58:42Z,,,,"Under windows the streaming API seems to die after a while with this exception:
""'charmap' codec can't encode characters in position xxx-xxx: character maps to <undefined>""

This seems to occur during the json parsing (streaming.py:133-143). I am not really sure
how to fix this issue. Maybe skip any lines that run into this error? If anyone can think of a better
solution please reply here. A patch would be much appreciated :)
"
1,Streaming not supported for Python 2.5,2009-08-31T21:30:19Z,2009-09-12T03:39:33Z,,,,"Stream class uses httplib.HTTPConnection passing a timeout parameter. Timeout parameter was added since version 2.6. http://docs.python.org/library/httplib.html
"
